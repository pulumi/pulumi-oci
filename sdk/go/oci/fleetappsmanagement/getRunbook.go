// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetappsmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Runbook resource in Oracle Cloud Infrastructure Fleet Apps Management service.
//
// Get the details of a runbook in Fleet Application Management.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/fleetappsmanagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fleetappsmanagement.GetRunbook(ctx, &fleetappsmanagement.GetRunbookArgs{
//				RunbookId: testRunbookOciFleetAppsManagementRunbook.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupRunbook(ctx *pulumi.Context, args *LookupRunbookArgs, opts ...pulumi.InvokeOption) (*LookupRunbookResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRunbookResult
	err := ctx.Invoke("oci:FleetAppsManagement/getRunbook:getRunbook", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRunbook.
type LookupRunbookArgs struct {
	// Unique Runbook identifier
	RunbookId string `pulumi:"runbookId"`
}

// A collection of values returned by getRunbook.
type LookupRunbookResult struct {
	// Associations for the runbook.
	Associations  []GetRunbookAssociation `pulumi:"associations"`
	CompartmentId string                  `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
	Description string `pulumi:"description"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName string `pulumi:"displayName"`
	// Estimated time to successfully complete the runbook execution.
	EstimatedTime string `pulumi:"estimatedTime"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The OCID of the resource.
	Id string `pulumi:"id"`
	// Is the runbook default? Sets this runbook as the default for the chosen product/product stack for the specified lifecycle operation.
	IsDefault bool `pulumi:"isDefault"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The lifecycle operation performed by the runbook.
	Operation string `pulumi:"operation"`
	// The OS type for the runbook.
	OsType string `pulumi:"osType"`
	// The platform of the runbook.
	Platform string `pulumi:"platform"`
	// Associated region
	ResourceRegion string `pulumi:"resourceRegion"`
	RunbookId      string `pulumi:"runbookId"`
	// Relevance of the runbook.
	RunbookRelevance string `pulumi:"runbookRelevance"`
	// The current state of the Runbook.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time this resource was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time this resource was last updated. An RFC3339 formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
	// The type of the runbook.
	Type string `pulumi:"type"`
}

func LookupRunbookOutput(ctx *pulumi.Context, args LookupRunbookOutputArgs, opts ...pulumi.InvokeOption) LookupRunbookResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRunbookResultOutput, error) {
			args := v.(LookupRunbookArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:FleetAppsManagement/getRunbook:getRunbook", args, LookupRunbookResultOutput{}, options).(LookupRunbookResultOutput), nil
		}).(LookupRunbookResultOutput)
}

// A collection of arguments for invoking getRunbook.
type LookupRunbookOutputArgs struct {
	// Unique Runbook identifier
	RunbookId pulumi.StringInput `pulumi:"runbookId"`
}

func (LookupRunbookOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRunbookArgs)(nil)).Elem()
}

// A collection of values returned by getRunbook.
type LookupRunbookResultOutput struct{ *pulumi.OutputState }

func (LookupRunbookResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRunbookResult)(nil)).Elem()
}

func (o LookupRunbookResultOutput) ToLookupRunbookResultOutput() LookupRunbookResultOutput {
	return o
}

func (o LookupRunbookResultOutput) ToLookupRunbookResultOutputWithContext(ctx context.Context) LookupRunbookResultOutput {
	return o
}

// Associations for the runbook.
func (o LookupRunbookResultOutput) Associations() GetRunbookAssociationArrayOutput {
	return o.ApplyT(func(v LookupRunbookResult) []GetRunbookAssociation { return v.Associations }).(GetRunbookAssociationArrayOutput)
}

func (o LookupRunbookResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRunbookResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupRunbookResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupRunbookResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
func (o LookupRunbookResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRunbookResult) string { return v.Description }).(pulumi.StringOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
func (o LookupRunbookResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRunbookResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Estimated time to successfully complete the runbook execution.
func (o LookupRunbookResultOutput) EstimatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRunbookResult) string { return v.EstimatedTime }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupRunbookResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupRunbookResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The OCID of the resource.
func (o LookupRunbookResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRunbookResult) string { return v.Id }).(pulumi.StringOutput)
}

// Is the runbook default? Sets this runbook as the default for the chosen product/product stack for the specified lifecycle operation.
func (o LookupRunbookResultOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupRunbookResult) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o LookupRunbookResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRunbookResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The lifecycle operation performed by the runbook.
func (o LookupRunbookResultOutput) Operation() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRunbookResult) string { return v.Operation }).(pulumi.StringOutput)
}

// The OS type for the runbook.
func (o LookupRunbookResultOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRunbookResult) string { return v.OsType }).(pulumi.StringOutput)
}

// The platform of the runbook.
func (o LookupRunbookResultOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRunbookResult) string { return v.Platform }).(pulumi.StringOutput)
}

// Associated region
func (o LookupRunbookResultOutput) ResourceRegion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRunbookResult) string { return v.ResourceRegion }).(pulumi.StringOutput)
}

func (o LookupRunbookResultOutput) RunbookId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRunbookResult) string { return v.RunbookId }).(pulumi.StringOutput)
}

// Relevance of the runbook.
func (o LookupRunbookResultOutput) RunbookRelevance() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRunbookResult) string { return v.RunbookRelevance }).(pulumi.StringOutput)
}

// The current state of the Runbook.
func (o LookupRunbookResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRunbookResult) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupRunbookResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupRunbookResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The time this resource was created. An RFC3339 formatted datetime string.
func (o LookupRunbookResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRunbookResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time this resource was last updated. An RFC3339 formatted datetime string.
func (o LookupRunbookResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRunbookResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The type of the runbook.
func (o LookupRunbookResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRunbookResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRunbookResultOutput{})
}
