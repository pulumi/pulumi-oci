// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetappsmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Runbook Version resource in Oracle Cloud Infrastructure Fleet Apps Management service.
//
// Gets a Runbook Version by identifier.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/fleetappsmanagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fleetappsmanagement.GetRunbookVersion(ctx, &fleetappsmanagement.GetRunbookVersionArgs{
//				RunbookVersionId: testRunbookVersionOciFleetAppsManagementRunbookVersion.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupRunbookVersion(ctx *pulumi.Context, args *LookupRunbookVersionArgs, opts ...pulumi.InvokeOption) (*LookupRunbookVersionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRunbookVersionResult
	err := ctx.Invoke("oci:FleetAppsManagement/getRunbookVersion:getRunbookVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRunbookVersion.
type LookupRunbookVersionArgs struct {
	// Unique Runbook Version identifier
	RunbookVersionId string `pulumi:"runbookVersionId"`
}

// A collection of values returned by getRunbookVersion.
type LookupRunbookVersionResult struct {
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Execution Workflow details.
	ExecutionWorkflowDetails []GetRunbookVersionExecutionWorkflowDetail `pulumi:"executionWorkflowDetails"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The groups of the runbook.
	Groups []GetRunbookVersionGroup `pulumi:"groups"`
	// The OCID of the resource.
	Id       string `pulumi:"id"`
	IsLatest bool   `pulumi:"isLatest"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The name of the task
	Name string `pulumi:"name"`
	// Rollback Workflow details.
	RollbackWorkflowDetails []GetRunbookVersionRollbackWorkflowDetail `pulumi:"rollbackWorkflowDetails"`
	// The OCID of the resource.
	RunbookId        string `pulumi:"runbookId"`
	RunbookVersionId string `pulumi:"runbookVersionId"`
	// The current state of the FleetResource.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// A set of tasks to execute in the runbook.
	Tasks []GetRunbookVersionTask `pulumi:"tasks"`
	// The time this resource was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time this resource was last updated. An RFC3339 formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupRunbookVersionOutput(ctx *pulumi.Context, args LookupRunbookVersionOutputArgs, opts ...pulumi.InvokeOption) LookupRunbookVersionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRunbookVersionResultOutput, error) {
			args := v.(LookupRunbookVersionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:FleetAppsManagement/getRunbookVersion:getRunbookVersion", args, LookupRunbookVersionResultOutput{}, options).(LookupRunbookVersionResultOutput), nil
		}).(LookupRunbookVersionResultOutput)
}

// A collection of arguments for invoking getRunbookVersion.
type LookupRunbookVersionOutputArgs struct {
	// Unique Runbook Version identifier
	RunbookVersionId pulumi.StringInput `pulumi:"runbookVersionId"`
}

func (LookupRunbookVersionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRunbookVersionArgs)(nil)).Elem()
}

// A collection of values returned by getRunbookVersion.
type LookupRunbookVersionResultOutput struct{ *pulumi.OutputState }

func (LookupRunbookVersionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRunbookVersionResult)(nil)).Elem()
}

func (o LookupRunbookVersionResultOutput) ToLookupRunbookVersionResultOutput() LookupRunbookVersionResultOutput {
	return o
}

func (o LookupRunbookVersionResultOutput) ToLookupRunbookVersionResultOutputWithContext(ctx context.Context) LookupRunbookVersionResultOutput {
	return o
}

func (o LookupRunbookVersionResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRunbookVersionResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupRunbookVersionResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupRunbookVersionResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Execution Workflow details.
func (o LookupRunbookVersionResultOutput) ExecutionWorkflowDetails() GetRunbookVersionExecutionWorkflowDetailArrayOutput {
	return o.ApplyT(func(v LookupRunbookVersionResult) []GetRunbookVersionExecutionWorkflowDetail {
		return v.ExecutionWorkflowDetails
	}).(GetRunbookVersionExecutionWorkflowDetailArrayOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupRunbookVersionResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupRunbookVersionResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The groups of the runbook.
func (o LookupRunbookVersionResultOutput) Groups() GetRunbookVersionGroupArrayOutput {
	return o.ApplyT(func(v LookupRunbookVersionResult) []GetRunbookVersionGroup { return v.Groups }).(GetRunbookVersionGroupArrayOutput)
}

// The OCID of the resource.
func (o LookupRunbookVersionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRunbookVersionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupRunbookVersionResultOutput) IsLatest() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupRunbookVersionResult) bool { return v.IsLatest }).(pulumi.BoolOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o LookupRunbookVersionResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRunbookVersionResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The name of the task
func (o LookupRunbookVersionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRunbookVersionResult) string { return v.Name }).(pulumi.StringOutput)
}

// Rollback Workflow details.
func (o LookupRunbookVersionResultOutput) RollbackWorkflowDetails() GetRunbookVersionRollbackWorkflowDetailArrayOutput {
	return o.ApplyT(func(v LookupRunbookVersionResult) []GetRunbookVersionRollbackWorkflowDetail {
		return v.RollbackWorkflowDetails
	}).(GetRunbookVersionRollbackWorkflowDetailArrayOutput)
}

// The OCID of the resource.
func (o LookupRunbookVersionResultOutput) RunbookId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRunbookVersionResult) string { return v.RunbookId }).(pulumi.StringOutput)
}

func (o LookupRunbookVersionResultOutput) RunbookVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRunbookVersionResult) string { return v.RunbookVersionId }).(pulumi.StringOutput)
}

// The current state of the FleetResource.
func (o LookupRunbookVersionResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRunbookVersionResult) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupRunbookVersionResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupRunbookVersionResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// A set of tasks to execute in the runbook.
func (o LookupRunbookVersionResultOutput) Tasks() GetRunbookVersionTaskArrayOutput {
	return o.ApplyT(func(v LookupRunbookVersionResult) []GetRunbookVersionTask { return v.Tasks }).(GetRunbookVersionTaskArrayOutput)
}

// The time this resource was created. An RFC3339 formatted datetime string.
func (o LookupRunbookVersionResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRunbookVersionResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time this resource was last updated. An RFC3339 formatted datetime string.
func (o LookupRunbookVersionResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRunbookVersionResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRunbookVersionResultOutput{})
}
