// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetappsmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Runbook Versions in Oracle Cloud Infrastructure Fleet Apps Management service.
//
// List versions for a runbook in Fleet Application Management.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/fleetappsmanagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fleetappsmanagement.GetRunbookVersions(ctx, &fleetappsmanagement.GetRunbookVersionsArgs{
//				CompartmentId: pulumi.StringRef(compartmentId),
//				Id:            pulumi.StringRef(runbookVersionId),
//				Name:          pulumi.StringRef(runbookVersionName),
//				RunbookId:     pulumi.StringRef(testRunbook.Id),
//				State:         pulumi.StringRef(runbookVersionState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetRunbookVersions(ctx *pulumi.Context, args *GetRunbookVersionsArgs, opts ...pulumi.InvokeOption) (*GetRunbookVersionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRunbookVersionsResult
	err := ctx.Invoke("oci:FleetAppsManagement/getRunbookVersions:getRunbookVersions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRunbookVersions.
type GetRunbookVersionsArgs struct {
	// The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
	CompartmentId *string                    `pulumi:"compartmentId"`
	Filters       []GetRunbookVersionsFilter `pulumi:"filters"`
	// A filter to return runbook versions whose identifier matches the given identifier.
	Id *string `pulumi:"id"`
	// A filter to return only resources that match the entire name given.
	Name *string `pulumi:"name"`
	// A filter to return only schedule definitions whose associated runbookId matches the given runbookId.
	RunbookId *string `pulumi:"runbookId"`
	// A filter to return only resources whose lifecycleState matches the given lifecycleState.
	State *string `pulumi:"state"`
}

// A collection of values returned by getRunbookVersions.
type GetRunbookVersionsResult struct {
	CompartmentId *string                    `pulumi:"compartmentId"`
	Filters       []GetRunbookVersionsFilter `pulumi:"filters"`
	// The OCID of the resource.
	Id       *string `pulumi:"id"`
	IsLatest bool    `pulumi:"isLatest"`
	// The name of the task
	Name *string `pulumi:"name"`
	// The OCID of the resource.
	RunbookId *string `pulumi:"runbookId"`
	// The list of runbook_version_collection.
	RunbookVersionCollections []GetRunbookVersionsRunbookVersionCollection `pulumi:"runbookVersionCollections"`
	// The current state of the FleetResource.
	State *string `pulumi:"state"`
}

func GetRunbookVersionsOutput(ctx *pulumi.Context, args GetRunbookVersionsOutputArgs, opts ...pulumi.InvokeOption) GetRunbookVersionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetRunbookVersionsResultOutput, error) {
			args := v.(GetRunbookVersionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:FleetAppsManagement/getRunbookVersions:getRunbookVersions", args, GetRunbookVersionsResultOutput{}, options).(GetRunbookVersionsResultOutput), nil
		}).(GetRunbookVersionsResultOutput)
}

// A collection of arguments for invoking getRunbookVersions.
type GetRunbookVersionsOutputArgs struct {
	// The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
	CompartmentId pulumi.StringPtrInput              `pulumi:"compartmentId"`
	Filters       GetRunbookVersionsFilterArrayInput `pulumi:"filters"`
	// A filter to return runbook versions whose identifier matches the given identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return only resources that match the entire name given.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A filter to return only schedule definitions whose associated runbookId matches the given runbookId.
	RunbookId pulumi.StringPtrInput `pulumi:"runbookId"`
	// A filter to return only resources whose lifecycleState matches the given lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetRunbookVersionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRunbookVersionsArgs)(nil)).Elem()
}

// A collection of values returned by getRunbookVersions.
type GetRunbookVersionsResultOutput struct{ *pulumi.OutputState }

func (GetRunbookVersionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRunbookVersionsResult)(nil)).Elem()
}

func (o GetRunbookVersionsResultOutput) ToGetRunbookVersionsResultOutput() GetRunbookVersionsResultOutput {
	return o
}

func (o GetRunbookVersionsResultOutput) ToGetRunbookVersionsResultOutputWithContext(ctx context.Context) GetRunbookVersionsResultOutput {
	return o
}

func (o GetRunbookVersionsResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRunbookVersionsResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

func (o GetRunbookVersionsResultOutput) Filters() GetRunbookVersionsFilterArrayOutput {
	return o.ApplyT(func(v GetRunbookVersionsResult) []GetRunbookVersionsFilter { return v.Filters }).(GetRunbookVersionsFilterArrayOutput)
}

// The OCID of the resource.
func (o GetRunbookVersionsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRunbookVersionsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetRunbookVersionsResultOutput) IsLatest() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRunbookVersionsResult) bool { return v.IsLatest }).(pulumi.BoolOutput)
}

// The name of the task
func (o GetRunbookVersionsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRunbookVersionsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The OCID of the resource.
func (o GetRunbookVersionsResultOutput) RunbookId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRunbookVersionsResult) *string { return v.RunbookId }).(pulumi.StringPtrOutput)
}

// The list of runbook_version_collection.
func (o GetRunbookVersionsResultOutput) RunbookVersionCollections() GetRunbookVersionsRunbookVersionCollectionArrayOutput {
	return o.ApplyT(func(v GetRunbookVersionsResult) []GetRunbookVersionsRunbookVersionCollection {
		return v.RunbookVersionCollections
	}).(GetRunbookVersionsRunbookVersionCollectionArrayOutput)
}

// The current state of the FleetResource.
func (o GetRunbookVersionsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRunbookVersionsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRunbookVersionsResultOutput{})
}
