// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetappsmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Runbooks in Oracle Cloud Infrastructure Fleet Apps Management service.
//
// List runbooks in Fleet Application Management.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/FleetAppsManagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := FleetAppsManagement.GetRunbooks(ctx, &fleetappsmanagement.GetRunbooksArgs{
//				CompartmentId:    pulumi.StringRef(compartmentId),
//				DisplayName:      pulumi.StringRef(runbookDisplayName),
//				Id:               pulumi.StringRef(runbookId),
//				Operation:        pulumi.StringRef(runbookOperation),
//				Platform:         pulumi.StringRef(runbookPlatform),
//				RunbookRelevance: pulumi.StringRef(runbookRunbookRelevance),
//				State:            pulumi.StringRef(runbookState),
//				Type:             pulumi.StringRef(runbookType),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetRunbooks(ctx *pulumi.Context, args *GetRunbooksArgs, opts ...pulumi.InvokeOption) (*GetRunbooksResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRunbooksResult
	err := ctx.Invoke("oci:FleetAppsManagement/getRunbooks:getRunbooks", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRunbooks.
type GetRunbooksArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId *string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string             `pulumi:"displayName"`
	Filters     []GetRunbooksFilter `pulumi:"filters"`
	// A filter to return runbooks whose identifier matches the given identifier.
	Id *string `pulumi:"id"`
	// A filter to return runbooks whose operation matches the given lifecycle operation.
	Operation *string `pulumi:"operation"`
	// A filter to return runbooks whose platform matches the given platform.
	Platform *string `pulumi:"platform"`
	// A filter to return runbooks whose runbookRelevance matches the given runbookRelevance.
	RunbookRelevance *string `pulumi:"runbookRelevance"`
	// A filter to return only resources whose lifecycleState matches the given lifecycleState.
	State *string `pulumi:"state"`
	// A filter to return runbooks whose type matches the given type.
	Type *string `pulumi:"type"`
}

// A collection of values returned by getRunbooks.
type GetRunbooksResult struct {
	CompartmentId *string `pulumi:"compartmentId"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName *string             `pulumi:"displayName"`
	Filters     []GetRunbooksFilter `pulumi:"filters"`
	// The OCID of the resource.
	Id *string `pulumi:"id"`
	// The lifecycle operation performed by the runbook.
	Operation *string `pulumi:"operation"`
	// The platform of the runbook.
	Platform *string `pulumi:"platform"`
	// The list of runbook_collection.
	RunbookCollections []GetRunbooksRunbookCollection `pulumi:"runbookCollections"`
	// Relevance of the runbook.
	RunbookRelevance *string `pulumi:"runbookRelevance"`
	// The current state of the Runbook.
	State *string `pulumi:"state"`
	// The type of the runbook.
	Type *string `pulumi:"type"`
}

func GetRunbooksOutput(ctx *pulumi.Context, args GetRunbooksOutputArgs, opts ...pulumi.InvokeOption) GetRunbooksResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetRunbooksResultOutput, error) {
			args := v.(GetRunbooksArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:FleetAppsManagement/getRunbooks:getRunbooks", args, GetRunbooksResultOutput{}, options).(GetRunbooksResultOutput), nil
		}).(GetRunbooksResultOutput)
}

// A collection of arguments for invoking getRunbooks.
type GetRunbooksOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput       `pulumi:"displayName"`
	Filters     GetRunbooksFilterArrayInput `pulumi:"filters"`
	// A filter to return runbooks whose identifier matches the given identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return runbooks whose operation matches the given lifecycle operation.
	Operation pulumi.StringPtrInput `pulumi:"operation"`
	// A filter to return runbooks whose platform matches the given platform.
	Platform pulumi.StringPtrInput `pulumi:"platform"`
	// A filter to return runbooks whose runbookRelevance matches the given runbookRelevance.
	RunbookRelevance pulumi.StringPtrInput `pulumi:"runbookRelevance"`
	// A filter to return only resources whose lifecycleState matches the given lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
	// A filter to return runbooks whose type matches the given type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GetRunbooksOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRunbooksArgs)(nil)).Elem()
}

// A collection of values returned by getRunbooks.
type GetRunbooksResultOutput struct{ *pulumi.OutputState }

func (GetRunbooksResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRunbooksResult)(nil)).Elem()
}

func (o GetRunbooksResultOutput) ToGetRunbooksResultOutput() GetRunbooksResultOutput {
	return o
}

func (o GetRunbooksResultOutput) ToGetRunbooksResultOutputWithContext(ctx context.Context) GetRunbooksResultOutput {
	return o
}

func (o GetRunbooksResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRunbooksResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
func (o GetRunbooksResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRunbooksResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetRunbooksResultOutput) Filters() GetRunbooksFilterArrayOutput {
	return o.ApplyT(func(v GetRunbooksResult) []GetRunbooksFilter { return v.Filters }).(GetRunbooksFilterArrayOutput)
}

// The OCID of the resource.
func (o GetRunbooksResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRunbooksResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The lifecycle operation performed by the runbook.
func (o GetRunbooksResultOutput) Operation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRunbooksResult) *string { return v.Operation }).(pulumi.StringPtrOutput)
}

// The platform of the runbook.
func (o GetRunbooksResultOutput) Platform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRunbooksResult) *string { return v.Platform }).(pulumi.StringPtrOutput)
}

// The list of runbook_collection.
func (o GetRunbooksResultOutput) RunbookCollections() GetRunbooksRunbookCollectionArrayOutput {
	return o.ApplyT(func(v GetRunbooksResult) []GetRunbooksRunbookCollection { return v.RunbookCollections }).(GetRunbooksRunbookCollectionArrayOutput)
}

// Relevance of the runbook.
func (o GetRunbooksResultOutput) RunbookRelevance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRunbooksResult) *string { return v.RunbookRelevance }).(pulumi.StringPtrOutput)
}

// The current state of the Runbook.
func (o GetRunbooksResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRunbooksResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The type of the runbook.
func (o GetRunbooksResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRunbooksResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRunbooksResultOutput{})
}
