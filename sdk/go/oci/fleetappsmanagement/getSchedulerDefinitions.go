// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetappsmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Scheduler Definitions in Oracle Cloud Infrastructure Fleet Apps Management service.
//
// List all lifecycle management schedules in Fleet Application Management.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/fleetappsmanagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fleetappsmanagement.GetSchedulerDefinitions(ctx, &fleetappsmanagement.GetSchedulerDefinitionsArgs{
//				CompartmentId:       pulumi.StringRef(compartmentId),
//				DisplayName:         pulumi.StringRef(schedulerDefinitionDisplayName),
//				FleetId:             pulumi.StringRef(testFleet.Id),
//				Id:                  pulumi.StringRef(schedulerDefinitionId),
//				MaintenanceWindowId: pulumi.StringRef(testMaintenanceWindow.Id),
//				Product:             pulumi.StringRef(schedulerDefinitionProduct),
//				RunbookId:           pulumi.StringRef(testRunbook.Id),
//				State:               pulumi.StringRef(schedulerDefinitionState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSchedulerDefinitions(ctx *pulumi.Context, args *GetSchedulerDefinitionsArgs, opts ...pulumi.InvokeOption) (*GetSchedulerDefinitionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSchedulerDefinitionsResult
	err := ctx.Invoke("oci:FleetAppsManagement/getSchedulerDefinitions:getSchedulerDefinitions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSchedulerDefinitions.
type GetSchedulerDefinitionsArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId *string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string                         `pulumi:"displayName"`
	Filters     []GetSchedulerDefinitionsFilter `pulumi:"filters"`
	// unique Fleet identifier
	FleetId *string `pulumi:"fleetId"`
	// A filter to return only schedule definitions whose identifier matches the given identifier.
	Id *string `pulumi:"id"`
	// A filter to return only schedule definitions whose associated maintenanceWindowId matches the given maintenanceWindowId.
	MaintenanceWindowId *string `pulumi:"maintenanceWindowId"`
	// A filter to return only dchedule definitions whose assocaited product matches the given product
	Product *string `pulumi:"product"`
	// A filter to return only schedule definitions whose associated runbookId matches the given runbookId.
	RunbookId *string `pulumi:"runbookId"`
	// A filter to return only scheduleDefinitions whose lifecycleState matches the given lifecycleState.
	State *string `pulumi:"state"`
}

// A collection of values returned by getSchedulerDefinitions.
type GetSchedulerDefinitionsResult struct {
	// Tenancy OCID
	CompartmentId *string `pulumi:"compartmentId"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName *string                         `pulumi:"displayName"`
	Filters     []GetSchedulerDefinitionsFilter `pulumi:"filters"`
	FleetId     *string                         `pulumi:"fleetId"`
	// The ID of the Runbook
	Id *string `pulumi:"id"`
	// Provide MaintenanceWindowId if Schedule Type is Maintenance Window
	MaintenanceWindowId *string `pulumi:"maintenanceWindowId"`
	// Product associated. Only applicable if type is PRODUCT.
	Product *string `pulumi:"product"`
	// ID of the runbook
	RunbookId *string `pulumi:"runbookId"`
	// The list of scheduler_definition_collection.
	SchedulerDefinitionCollections []GetSchedulerDefinitionsSchedulerDefinitionCollection `pulumi:"schedulerDefinitionCollections"`
	// The current state of the SchedulerDefinition.
	State *string `pulumi:"state"`
}

func GetSchedulerDefinitionsOutput(ctx *pulumi.Context, args GetSchedulerDefinitionsOutputArgs, opts ...pulumi.InvokeOption) GetSchedulerDefinitionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetSchedulerDefinitionsResultOutput, error) {
			args := v.(GetSchedulerDefinitionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:FleetAppsManagement/getSchedulerDefinitions:getSchedulerDefinitions", args, GetSchedulerDefinitionsResultOutput{}, options).(GetSchedulerDefinitionsResultOutput), nil
		}).(GetSchedulerDefinitionsResultOutput)
}

// A collection of arguments for invoking getSchedulerDefinitions.
type GetSchedulerDefinitionsOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput                   `pulumi:"displayName"`
	Filters     GetSchedulerDefinitionsFilterArrayInput `pulumi:"filters"`
	// unique Fleet identifier
	FleetId pulumi.StringPtrInput `pulumi:"fleetId"`
	// A filter to return only schedule definitions whose identifier matches the given identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return only schedule definitions whose associated maintenanceWindowId matches the given maintenanceWindowId.
	MaintenanceWindowId pulumi.StringPtrInput `pulumi:"maintenanceWindowId"`
	// A filter to return only dchedule definitions whose assocaited product matches the given product
	Product pulumi.StringPtrInput `pulumi:"product"`
	// A filter to return only schedule definitions whose associated runbookId matches the given runbookId.
	RunbookId pulumi.StringPtrInput `pulumi:"runbookId"`
	// A filter to return only scheduleDefinitions whose lifecycleState matches the given lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetSchedulerDefinitionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchedulerDefinitionsArgs)(nil)).Elem()
}

// A collection of values returned by getSchedulerDefinitions.
type GetSchedulerDefinitionsResultOutput struct{ *pulumi.OutputState }

func (GetSchedulerDefinitionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchedulerDefinitionsResult)(nil)).Elem()
}

func (o GetSchedulerDefinitionsResultOutput) ToGetSchedulerDefinitionsResultOutput() GetSchedulerDefinitionsResultOutput {
	return o
}

func (o GetSchedulerDefinitionsResultOutput) ToGetSchedulerDefinitionsResultOutputWithContext(ctx context.Context) GetSchedulerDefinitionsResultOutput {
	return o
}

// Tenancy OCID
func (o GetSchedulerDefinitionsResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSchedulerDefinitionsResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
func (o GetSchedulerDefinitionsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSchedulerDefinitionsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetSchedulerDefinitionsResultOutput) Filters() GetSchedulerDefinitionsFilterArrayOutput {
	return o.ApplyT(func(v GetSchedulerDefinitionsResult) []GetSchedulerDefinitionsFilter { return v.Filters }).(GetSchedulerDefinitionsFilterArrayOutput)
}

func (o GetSchedulerDefinitionsResultOutput) FleetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSchedulerDefinitionsResult) *string { return v.FleetId }).(pulumi.StringPtrOutput)
}

// The ID of the Runbook
func (o GetSchedulerDefinitionsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSchedulerDefinitionsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Provide MaintenanceWindowId if Schedule Type is Maintenance Window
func (o GetSchedulerDefinitionsResultOutput) MaintenanceWindowId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSchedulerDefinitionsResult) *string { return v.MaintenanceWindowId }).(pulumi.StringPtrOutput)
}

// Product associated. Only applicable if type is PRODUCT.
func (o GetSchedulerDefinitionsResultOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSchedulerDefinitionsResult) *string { return v.Product }).(pulumi.StringPtrOutput)
}

// ID of the runbook
func (o GetSchedulerDefinitionsResultOutput) RunbookId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSchedulerDefinitionsResult) *string { return v.RunbookId }).(pulumi.StringPtrOutput)
}

// The list of scheduler_definition_collection.
func (o GetSchedulerDefinitionsResultOutput) SchedulerDefinitionCollections() GetSchedulerDefinitionsSchedulerDefinitionCollectionArrayOutput {
	return o.ApplyT(func(v GetSchedulerDefinitionsResult) []GetSchedulerDefinitionsSchedulerDefinitionCollection {
		return v.SchedulerDefinitionCollections
	}).(GetSchedulerDefinitionsSchedulerDefinitionCollectionArrayOutput)
}

// The current state of the SchedulerDefinition.
func (o GetSchedulerDefinitionsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSchedulerDefinitionsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSchedulerDefinitionsResultOutput{})
}
