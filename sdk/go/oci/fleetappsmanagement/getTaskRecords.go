// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetappsmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Task Records in Oracle Cloud Infrastructure Fleet Apps Management service.
//
// Returns a list of all the task records in the specified compartment.
// The query parameter `compartmentId` is required unless the query parameter `id` is specified.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/fleetappsmanagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fleetappsmanagement.GetTaskRecords(ctx, &fleetappsmanagement.GetTaskRecordsArgs{
//				CompartmentId: pulumi.StringRef(compartmentId),
//				DisplayName:   pulumi.StringRef(taskRecordDisplayName),
//				Id:            pulumi.StringRef(taskRecordId),
//				Operation:     pulumi.StringRef(taskRecordOperation),
//				Platform:      pulumi.StringRef(taskRecordPlatform),
//				State:         pulumi.StringRef(taskRecordState),
//				Type:          pulumi.StringRef(taskRecordType),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetTaskRecords(ctx *pulumi.Context, args *GetTaskRecordsArgs, opts ...pulumi.InvokeOption) (*GetTaskRecordsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTaskRecordsResult
	err := ctx.Invoke("oci:FleetAppsManagement/getTaskRecords:getTaskRecords", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTaskRecords.
type GetTaskRecordsArgs struct {
	// The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
	CompartmentId *string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string                `pulumi:"displayName"`
	Filters     []GetTaskRecordsFilter `pulumi:"filters"`
	// Unique identifier or OCID for listing a single task record by id. Either compartmentId or id must be provided.
	Id *string `pulumi:"id"`
	// A filter to return task records whose operation matches the given lifecycle operation.
	Operation *string `pulumi:"operation"`
	// The platform for the task record.
	Platform *string `pulumi:"platform"`
	// The current state of the task record.
	State *string `pulumi:"state"`
	// The type of the Task.
	Type *string `pulumi:"type"`
}

// A collection of values returned by getTaskRecords.
type GetTaskRecordsResult struct {
	CompartmentId *string `pulumi:"compartmentId"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName *string                `pulumi:"displayName"`
	Filters     []GetTaskRecordsFilter `pulumi:"filters"`
	// The OCID of the resource.
	Id *string `pulumi:"id"`
	// The lifecycle operation performed by the runbook.
	Operation *string `pulumi:"operation"`
	// The platform of the runbook.
	Platform *string `pulumi:"platform"`
	// The current state of the task record.
	State *string `pulumi:"state"`
	// The list of task_record_collection.
	TaskRecordCollections []GetTaskRecordsTaskRecordCollection `pulumi:"taskRecordCollections"`
	// Task type.
	Type *string `pulumi:"type"`
}

func GetTaskRecordsOutput(ctx *pulumi.Context, args GetTaskRecordsOutputArgs, opts ...pulumi.InvokeOption) GetTaskRecordsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetTaskRecordsResultOutput, error) {
			args := v.(GetTaskRecordsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:FleetAppsManagement/getTaskRecords:getTaskRecords", args, GetTaskRecordsResultOutput{}, options).(GetTaskRecordsResultOutput), nil
		}).(GetTaskRecordsResultOutput)
}

// A collection of arguments for invoking getTaskRecords.
type GetTaskRecordsOutputArgs struct {
	// The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput          `pulumi:"displayName"`
	Filters     GetTaskRecordsFilterArrayInput `pulumi:"filters"`
	// Unique identifier or OCID for listing a single task record by id. Either compartmentId or id must be provided.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return task records whose operation matches the given lifecycle operation.
	Operation pulumi.StringPtrInput `pulumi:"operation"`
	// The platform for the task record.
	Platform pulumi.StringPtrInput `pulumi:"platform"`
	// The current state of the task record.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The type of the Task.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GetTaskRecordsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTaskRecordsArgs)(nil)).Elem()
}

// A collection of values returned by getTaskRecords.
type GetTaskRecordsResultOutput struct{ *pulumi.OutputState }

func (GetTaskRecordsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTaskRecordsResult)(nil)).Elem()
}

func (o GetTaskRecordsResultOutput) ToGetTaskRecordsResultOutput() GetTaskRecordsResultOutput {
	return o
}

func (o GetTaskRecordsResultOutput) ToGetTaskRecordsResultOutputWithContext(ctx context.Context) GetTaskRecordsResultOutput {
	return o
}

func (o GetTaskRecordsResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTaskRecordsResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
func (o GetTaskRecordsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTaskRecordsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetTaskRecordsResultOutput) Filters() GetTaskRecordsFilterArrayOutput {
	return o.ApplyT(func(v GetTaskRecordsResult) []GetTaskRecordsFilter { return v.Filters }).(GetTaskRecordsFilterArrayOutput)
}

// The OCID of the resource.
func (o GetTaskRecordsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTaskRecordsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The lifecycle operation performed by the runbook.
func (o GetTaskRecordsResultOutput) Operation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTaskRecordsResult) *string { return v.Operation }).(pulumi.StringPtrOutput)
}

// The platform of the runbook.
func (o GetTaskRecordsResultOutput) Platform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTaskRecordsResult) *string { return v.Platform }).(pulumi.StringPtrOutput)
}

// The current state of the task record.
func (o GetTaskRecordsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTaskRecordsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The list of task_record_collection.
func (o GetTaskRecordsResultOutput) TaskRecordCollections() GetTaskRecordsTaskRecordCollectionArrayOutput {
	return o.ApplyT(func(v GetTaskRecordsResult) []GetTaskRecordsTaskRecordCollection { return v.TaskRecordCollections }).(GetTaskRecordsTaskRecordCollectionArrayOutput)
}

// Task type.
func (o GetTaskRecordsResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTaskRecordsResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTaskRecordsResultOutput{})
}
