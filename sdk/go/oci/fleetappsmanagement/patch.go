// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetappsmanagement

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Patch resource in Oracle Cloud Infrastructure Fleet Apps Management service.
//
// Creates a new Patch.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/fleetappsmanagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fleetappsmanagement.NewPatch(ctx, "test_patch", &fleetappsmanagement.PatchArgs{
//				ArtifactDetails: &fleetappsmanagement.PatchArtifactDetailsArgs{
//					Category: pulumi.Any(patchArtifactDetailsCategory),
//					Artifact: &fleetappsmanagement.PatchArtifactDetailsArtifactArgs{
//						Content: &fleetappsmanagement.PatchArtifactDetailsArtifactContentArgs{
//							Bucket:     pulumi.Any(patchArtifactDetailsArtifactContentBucket),
//							Checksum:   pulumi.Any(patchArtifactDetailsArtifactContentChecksum),
//							Namespace:  pulumi.Any(patchArtifactDetailsArtifactContentNamespace),
//							Object:     pulumi.Any(patchArtifactDetailsArtifactContentObject),
//							SourceType: pulumi.Any(patchArtifactDetailsArtifactContentSourceType),
//						},
//					},
//					Artifacts: fleetappsmanagement.PatchArtifactDetailsArtifactArray{
//						&fleetappsmanagement.PatchArtifactDetailsArtifactArgs{
//							Architecture: pulumi.Any(patchArtifactDetailsArtifactsArchitecture),
//							Content: &fleetappsmanagement.PatchArtifactDetailsArtifactContentArgs{
//								Bucket:     pulumi.Any(patchArtifactDetailsArtifactsContentBucket),
//								Checksum:   pulumi.Any(patchArtifactDetailsArtifactsContentChecksum),
//								Namespace:  pulumi.Any(patchArtifactDetailsArtifactsContentNamespace),
//								Object:     pulumi.Any(patchArtifactDetailsArtifactsContentObject),
//								SourceType: pulumi.Any(patchArtifactDetailsArtifactsContentSourceType),
//							},
//							OsType: pulumi.Any(patchArtifactDetailsArtifactsOsType),
//						},
//					},
//				},
//				CompartmentId: pulumi.Any(compartmentId),
//				Name:          pulumi.Any(patchName),
//				PatchType: &fleetappsmanagement.PatchPatchTypeArgs{
//					PlatformConfigurationId: pulumi.Any(testPlatformConfiguration.Id),
//				},
//				Product: &fleetappsmanagement.PatchProductArgs{
//					PlatformConfigurationId: pulumi.Any(testPlatformConfiguration.Id),
//					Version:                 pulumi.Any(patchProductVersion),
//				},
//				Severity:     pulumi.Any(patchSeverity),
//				TimeReleased: pulumi.Any(patchTimeReleased),
//				DefinedTags: pulumi.StringMap{
//					"foo-namespace.bar-key": pulumi.String("value"),
//				},
//				DependentPatches: fleetappsmanagement.PatchDependentPatchArray{
//					&fleetappsmanagement.PatchDependentPatchArgs{
//						Id: pulumi.Any(patchDependentPatchesId),
//					},
//				},
//				Description: pulumi.Any(patchDescription),
//				FreeformTags: pulumi.StringMap{
//					"bar-key": pulumi.String("value"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Patches can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:FleetAppsManagement/patch:Patch test_patch "id"
// ```
type Patch struct {
	pulumi.CustomResourceState

	// (Updatable) Patch artifact description and content details.
	ArtifactDetails PatchArtifactDetailsOutput `pulumi:"artifactDetails"`
	// (Updatable)
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) Dependent Patches for this patch.
	DependentPatches PatchDependentPatchArrayOutput `pulumi:"dependentPatches"`
	// (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// A user-friendly name. Should be unique within the tenancy, and cannot be changed after creation.  Avoid entering confidential information.
	Name pulumi.StringOutput `pulumi:"name"`
	// (Updatable) Patch Type
	PatchType PatchPatchTypeOutput `pulumi:"patchType"`
	// (Updatable) Product
	Product PatchProductOutput `pulumi:"product"`
	// Associated region
	ResourceRegion pulumi.StringOutput `pulumi:"resourceRegion"`
	// (Updatable) Patch Severity.
	Severity pulumi.StringOutput `pulumi:"severity"`
	// The current state of the Patch.
	State pulumi.StringOutput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// The time this resource was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// (Updatable) Date when the patch was released.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TimeReleased pulumi.StringOutput `pulumi:"timeReleased"`
	// The time this resource was last updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// Provide information on who defined the patch. Example: For Custom Patches the value will be USER_DEFINED For Oracle Defined Patches the value will be ORACLE_DEFINED
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewPatch registers a new resource with the given unique name, arguments, and options.
func NewPatch(ctx *pulumi.Context,
	name string, args *PatchArgs, opts ...pulumi.ResourceOption) (*Patch, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ArtifactDetails == nil {
		return nil, errors.New("invalid value for required argument 'ArtifactDetails'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.PatchType == nil {
		return nil, errors.New("invalid value for required argument 'PatchType'")
	}
	if args.Product == nil {
		return nil, errors.New("invalid value for required argument 'Product'")
	}
	if args.Severity == nil {
		return nil, errors.New("invalid value for required argument 'Severity'")
	}
	if args.TimeReleased == nil {
		return nil, errors.New("invalid value for required argument 'TimeReleased'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Patch
	err := ctx.RegisterResource("oci:FleetAppsManagement/patch:Patch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPatch gets an existing Patch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPatch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PatchState, opts ...pulumi.ResourceOption) (*Patch, error) {
	var resource Patch
	err := ctx.ReadResource("oci:FleetAppsManagement/patch:Patch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Patch resources.
type patchState struct {
	// (Updatable) Patch artifact description and content details.
	ArtifactDetails *PatchArtifactDetails `pulumi:"artifactDetails"`
	// (Updatable)
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) Dependent Patches for this patch.
	DependentPatches []PatchDependentPatch `pulumi:"dependentPatches"`
	// (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
	Description *string `pulumi:"description"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// A user-friendly name. Should be unique within the tenancy, and cannot be changed after creation.  Avoid entering confidential information.
	Name *string `pulumi:"name"`
	// (Updatable) Patch Type
	PatchType *PatchPatchType `pulumi:"patchType"`
	// (Updatable) Product
	Product *PatchProduct `pulumi:"product"`
	// Associated region
	ResourceRegion *string `pulumi:"resourceRegion"`
	// (Updatable) Patch Severity.
	Severity *string `pulumi:"severity"`
	// The current state of the Patch.
	State *string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time this resource was created. An RFC3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// (Updatable) Date when the patch was released.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TimeReleased *string `pulumi:"timeReleased"`
	// The time this resource was last updated. An RFC3339 formatted datetime string.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// Provide information on who defined the patch. Example: For Custom Patches the value will be USER_DEFINED For Oracle Defined Patches the value will be ORACLE_DEFINED
	Type *string `pulumi:"type"`
}

type PatchState struct {
	// (Updatable) Patch artifact description and content details.
	ArtifactDetails PatchArtifactDetailsPtrInput
	// (Updatable)
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) Dependent Patches for this patch.
	DependentPatches PatchDependentPatchArrayInput
	// (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
	Description pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput
	// A user-friendly name. Should be unique within the tenancy, and cannot be changed after creation.  Avoid entering confidential information.
	Name pulumi.StringPtrInput
	// (Updatable) Patch Type
	PatchType PatchPatchTypePtrInput
	// (Updatable) Product
	Product PatchProductPtrInput
	// Associated region
	ResourceRegion pulumi.StringPtrInput
	// (Updatable) Patch Severity.
	Severity pulumi.StringPtrInput
	// The current state of the Patch.
	State pulumi.StringPtrInput
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput
	// The time this resource was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput
	// (Updatable) Date when the patch was released.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TimeReleased pulumi.StringPtrInput
	// The time this resource was last updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringPtrInput
	// Provide information on who defined the patch. Example: For Custom Patches the value will be USER_DEFINED For Oracle Defined Patches the value will be ORACLE_DEFINED
	Type pulumi.StringPtrInput
}

func (PatchState) ElementType() reflect.Type {
	return reflect.TypeOf((*patchState)(nil)).Elem()
}

type patchArgs struct {
	// (Updatable) Patch artifact description and content details.
	ArtifactDetails PatchArtifactDetails `pulumi:"artifactDetails"`
	// (Updatable)
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) Dependent Patches for this patch.
	DependentPatches []PatchDependentPatch `pulumi:"dependentPatches"`
	// (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
	Description *string `pulumi:"description"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// A user-friendly name. Should be unique within the tenancy, and cannot be changed after creation.  Avoid entering confidential information.
	Name *string `pulumi:"name"`
	// (Updatable) Patch Type
	PatchType PatchPatchType `pulumi:"patchType"`
	// (Updatable) Product
	Product PatchProduct `pulumi:"product"`
	// (Updatable) Patch Severity.
	Severity string `pulumi:"severity"`
	// (Updatable) Date when the patch was released.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TimeReleased string `pulumi:"timeReleased"`
}

// The set of arguments for constructing a Patch resource.
type PatchArgs struct {
	// (Updatable) Patch artifact description and content details.
	ArtifactDetails PatchArtifactDetailsInput
	// (Updatable)
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) Dependent Patches for this patch.
	DependentPatches PatchDependentPatchArrayInput
	// (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
	Description pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// A user-friendly name. Should be unique within the tenancy, and cannot be changed after creation.  Avoid entering confidential information.
	Name pulumi.StringPtrInput
	// (Updatable) Patch Type
	PatchType PatchPatchTypeInput
	// (Updatable) Product
	Product PatchProductInput
	// (Updatable) Patch Severity.
	Severity pulumi.StringInput
	// (Updatable) Date when the patch was released.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TimeReleased pulumi.StringInput
}

func (PatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*patchArgs)(nil)).Elem()
}

type PatchInput interface {
	pulumi.Input

	ToPatchOutput() PatchOutput
	ToPatchOutputWithContext(ctx context.Context) PatchOutput
}

func (*Patch) ElementType() reflect.Type {
	return reflect.TypeOf((**Patch)(nil)).Elem()
}

func (i *Patch) ToPatchOutput() PatchOutput {
	return i.ToPatchOutputWithContext(context.Background())
}

func (i *Patch) ToPatchOutputWithContext(ctx context.Context) PatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchOutput)
}

// PatchArrayInput is an input type that accepts PatchArray and PatchArrayOutput values.
// You can construct a concrete instance of `PatchArrayInput` via:
//
//	PatchArray{ PatchArgs{...} }
type PatchArrayInput interface {
	pulumi.Input

	ToPatchArrayOutput() PatchArrayOutput
	ToPatchArrayOutputWithContext(context.Context) PatchArrayOutput
}

type PatchArray []PatchInput

func (PatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Patch)(nil)).Elem()
}

func (i PatchArray) ToPatchArrayOutput() PatchArrayOutput {
	return i.ToPatchArrayOutputWithContext(context.Background())
}

func (i PatchArray) ToPatchArrayOutputWithContext(ctx context.Context) PatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchArrayOutput)
}

// PatchMapInput is an input type that accepts PatchMap and PatchMapOutput values.
// You can construct a concrete instance of `PatchMapInput` via:
//
//	PatchMap{ "key": PatchArgs{...} }
type PatchMapInput interface {
	pulumi.Input

	ToPatchMapOutput() PatchMapOutput
	ToPatchMapOutputWithContext(context.Context) PatchMapOutput
}

type PatchMap map[string]PatchInput

func (PatchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Patch)(nil)).Elem()
}

func (i PatchMap) ToPatchMapOutput() PatchMapOutput {
	return i.ToPatchMapOutputWithContext(context.Background())
}

func (i PatchMap) ToPatchMapOutputWithContext(ctx context.Context) PatchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchMapOutput)
}

type PatchOutput struct{ *pulumi.OutputState }

func (PatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Patch)(nil)).Elem()
}

func (o PatchOutput) ToPatchOutput() PatchOutput {
	return o
}

func (o PatchOutput) ToPatchOutputWithContext(ctx context.Context) PatchOutput {
	return o
}

// (Updatable) Patch artifact description and content details.
func (o PatchOutput) ArtifactDetails() PatchArtifactDetailsOutput {
	return o.ApplyT(func(v *Patch) PatchArtifactDetailsOutput { return v.ArtifactDetails }).(PatchArtifactDetailsOutput)
}

// (Updatable)
func (o PatchOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Patch) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o PatchOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Patch) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) Dependent Patches for this patch.
func (o PatchOutput) DependentPatches() PatchDependentPatchArrayOutput {
	return o.ApplyT(func(v *Patch) PatchDependentPatchArrayOutput { return v.DependentPatches }).(PatchDependentPatchArrayOutput)
}

// (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
func (o PatchOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Patch) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o PatchOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Patch) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o PatchOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *Patch) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// A user-friendly name. Should be unique within the tenancy, and cannot be changed after creation.  Avoid entering confidential information.
func (o PatchOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Patch) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// (Updatable) Patch Type
func (o PatchOutput) PatchType() PatchPatchTypeOutput {
	return o.ApplyT(func(v *Patch) PatchPatchTypeOutput { return v.PatchType }).(PatchPatchTypeOutput)
}

// (Updatable) Product
func (o PatchOutput) Product() PatchProductOutput {
	return o.ApplyT(func(v *Patch) PatchProductOutput { return v.Product }).(PatchProductOutput)
}

// Associated region
func (o PatchOutput) ResourceRegion() pulumi.StringOutput {
	return o.ApplyT(func(v *Patch) pulumi.StringOutput { return v.ResourceRegion }).(pulumi.StringOutput)
}

// (Updatable) Patch Severity.
func (o PatchOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v *Patch) pulumi.StringOutput { return v.Severity }).(pulumi.StringOutput)
}

// The current state of the Patch.
func (o PatchOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Patch) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o PatchOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Patch) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The time this resource was created. An RFC3339 formatted datetime string.
func (o PatchOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *Patch) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// (Updatable) Date when the patch was released.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o PatchOutput) TimeReleased() pulumi.StringOutput {
	return o.ApplyT(func(v *Patch) pulumi.StringOutput { return v.TimeReleased }).(pulumi.StringOutput)
}

// The time this resource was last updated. An RFC3339 formatted datetime string.
func (o PatchOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *Patch) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Provide information on who defined the patch. Example: For Custom Patches the value will be USER_DEFINED For Oracle Defined Patches the value will be ORACLE_DEFINED
func (o PatchOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Patch) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type PatchArrayOutput struct{ *pulumi.OutputState }

func (PatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Patch)(nil)).Elem()
}

func (o PatchArrayOutput) ToPatchArrayOutput() PatchArrayOutput {
	return o
}

func (o PatchArrayOutput) ToPatchArrayOutputWithContext(ctx context.Context) PatchArrayOutput {
	return o
}

func (o PatchArrayOutput) Index(i pulumi.IntInput) PatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Patch {
		return vs[0].([]*Patch)[vs[1].(int)]
	}).(PatchOutput)
}

type PatchMapOutput struct{ *pulumi.OutputState }

func (PatchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Patch)(nil)).Elem()
}

func (o PatchMapOutput) ToPatchMapOutput() PatchMapOutput {
	return o
}

func (o PatchMapOutput) ToPatchMapOutputWithContext(ctx context.Context) PatchMapOutput {
	return o
}

func (o PatchMapOutput) MapIndex(k pulumi.StringInput) PatchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Patch {
		return vs[0].(map[string]*Patch)[vs[1].(string)]
	}).(PatchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PatchInput)(nil)).Elem(), &Patch{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchArrayInput)(nil)).Elem(), PatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchMapInput)(nil)).Elem(), PatchMap{})
	pulumi.RegisterOutputType(PatchOutput{})
	pulumi.RegisterOutputType(PatchArrayOutput{})
	pulumi.RegisterOutputType(PatchMapOutput{})
}
