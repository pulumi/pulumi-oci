// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetappsmanagement

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Property resource in Oracle Cloud Infrastructure Fleet Apps Management service.
//
// Create a business-specific metadata property in Fleet Application Management and capture the business metadata classifications.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/FleetAppsManagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := FleetAppsManagement.NewProperty(ctx, "test_property", &FleetAppsManagement.PropertyArgs{
//				CompartmentId: pulumi.Any(compartmentId),
//				Selection:     pulumi.Any(propertySelection),
//				ValueType:     pulumi.Any(propertyValueType),
//				DisplayName:   pulumi.Any(propertyDisplayName),
//				Values:        pulumi.Any(propertyValues),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Properties can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:FleetAppsManagement/property:Property test_property "id"
// ```
type Property struct {
	pulumi.CustomResourceState

	// Tenancy OCID
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// Associated region
	ResourceRegion pulumi.StringOutput `pulumi:"resourceRegion"`
	// The scope of the property.
	Scope pulumi.StringOutput `pulumi:"scope"`
	// (Updatable) Text selection of the property.
	Selection pulumi.StringOutput `pulumi:"selection"`
	// The current state of the Property.
	State pulumi.StringOutput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// The time this resource was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time this resource was last updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// The type of the property.
	Type pulumi.StringOutput `pulumi:"type"`
	// (Updatable) Format of the value.
	ValueType pulumi.StringOutput `pulumi:"valueType"`
	// (Updatable) Values of the property (must be a single value if selection = 'SINGLE_CHOICE').
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Values pulumi.StringArrayOutput `pulumi:"values"`
}

// NewProperty registers a new resource with the given unique name, arguments, and options.
func NewProperty(ctx *pulumi.Context,
	name string, args *PropertyArgs, opts ...pulumi.ResourceOption) (*Property, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.Selection == nil {
		return nil, errors.New("invalid value for required argument 'Selection'")
	}
	if args.ValueType == nil {
		return nil, errors.New("invalid value for required argument 'ValueType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Property
	err := ctx.RegisterResource("oci:FleetAppsManagement/property:Property", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProperty gets an existing Property resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProperty(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PropertyState, opts ...pulumi.ResourceOption) (*Property, error) {
	var resource Property
	err := ctx.ReadResource("oci:FleetAppsManagement/property:Property", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Property resources.
type propertyState struct {
	// Tenancy OCID
	CompartmentId *string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName *string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// Associated region
	ResourceRegion *string `pulumi:"resourceRegion"`
	// The scope of the property.
	Scope *string `pulumi:"scope"`
	// (Updatable) Text selection of the property.
	Selection *string `pulumi:"selection"`
	// The current state of the Property.
	State *string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time this resource was created. An RFC3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time this resource was last updated. An RFC3339 formatted datetime string.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// The type of the property.
	Type *string `pulumi:"type"`
	// (Updatable) Format of the value.
	ValueType *string `pulumi:"valueType"`
	// (Updatable) Values of the property (must be a single value if selection = 'SINGLE_CHOICE').
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Values []string `pulumi:"values"`
}

type PropertyState struct {
	// Tenancy OCID
	CompartmentId pulumi.StringPtrInput
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName pulumi.StringPtrInput
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput
	// Associated region
	ResourceRegion pulumi.StringPtrInput
	// The scope of the property.
	Scope pulumi.StringPtrInput
	// (Updatable) Text selection of the property.
	Selection pulumi.StringPtrInput
	// The current state of the Property.
	State pulumi.StringPtrInput
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput
	// The time this resource was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput
	// The time this resource was last updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringPtrInput
	// The type of the property.
	Type pulumi.StringPtrInput
	// (Updatable) Format of the value.
	ValueType pulumi.StringPtrInput
	// (Updatable) Values of the property (must be a single value if selection = 'SINGLE_CHOICE').
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Values pulumi.StringArrayInput
}

func (PropertyState) ElementType() reflect.Type {
	return reflect.TypeOf((*propertyState)(nil)).Elem()
}

type propertyArgs struct {
	// Tenancy OCID
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Text selection of the property.
	Selection string `pulumi:"selection"`
	// (Updatable) Format of the value.
	ValueType string `pulumi:"valueType"`
	// (Updatable) Values of the property (must be a single value if selection = 'SINGLE_CHOICE').
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Values []string `pulumi:"values"`
}

// The set of arguments for constructing a Property resource.
type PropertyArgs struct {
	// Tenancy OCID
	CompartmentId pulumi.StringInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName pulumi.StringPtrInput
	// (Updatable) Text selection of the property.
	Selection pulumi.StringInput
	// (Updatable) Format of the value.
	ValueType pulumi.StringInput
	// (Updatable) Values of the property (must be a single value if selection = 'SINGLE_CHOICE').
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Values pulumi.StringArrayInput
}

func (PropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*propertyArgs)(nil)).Elem()
}

type PropertyInput interface {
	pulumi.Input

	ToPropertyOutput() PropertyOutput
	ToPropertyOutputWithContext(ctx context.Context) PropertyOutput
}

func (*Property) ElementType() reflect.Type {
	return reflect.TypeOf((**Property)(nil)).Elem()
}

func (i *Property) ToPropertyOutput() PropertyOutput {
	return i.ToPropertyOutputWithContext(context.Background())
}

func (i *Property) ToPropertyOutputWithContext(ctx context.Context) PropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyOutput)
}

// PropertyArrayInput is an input type that accepts PropertyArray and PropertyArrayOutput values.
// You can construct a concrete instance of `PropertyArrayInput` via:
//
//	PropertyArray{ PropertyArgs{...} }
type PropertyArrayInput interface {
	pulumi.Input

	ToPropertyArrayOutput() PropertyArrayOutput
	ToPropertyArrayOutputWithContext(context.Context) PropertyArrayOutput
}

type PropertyArray []PropertyInput

func (PropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Property)(nil)).Elem()
}

func (i PropertyArray) ToPropertyArrayOutput() PropertyArrayOutput {
	return i.ToPropertyArrayOutputWithContext(context.Background())
}

func (i PropertyArray) ToPropertyArrayOutputWithContext(ctx context.Context) PropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyArrayOutput)
}

// PropertyMapInput is an input type that accepts PropertyMap and PropertyMapOutput values.
// You can construct a concrete instance of `PropertyMapInput` via:
//
//	PropertyMap{ "key": PropertyArgs{...} }
type PropertyMapInput interface {
	pulumi.Input

	ToPropertyMapOutput() PropertyMapOutput
	ToPropertyMapOutputWithContext(context.Context) PropertyMapOutput
}

type PropertyMap map[string]PropertyInput

func (PropertyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Property)(nil)).Elem()
}

func (i PropertyMap) ToPropertyMapOutput() PropertyMapOutput {
	return i.ToPropertyMapOutputWithContext(context.Background())
}

func (i PropertyMap) ToPropertyMapOutputWithContext(ctx context.Context) PropertyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyMapOutput)
}

type PropertyOutput struct{ *pulumi.OutputState }

func (PropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Property)(nil)).Elem()
}

func (o PropertyOutput) ToPropertyOutput() PropertyOutput {
	return o
}

func (o PropertyOutput) ToPropertyOutputWithContext(ctx context.Context) PropertyOutput {
	return o
}

// Tenancy OCID
func (o PropertyOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Property) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o PropertyOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Property) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
func (o PropertyOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Property) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o PropertyOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Property) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o PropertyOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *Property) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Associated region
func (o PropertyOutput) ResourceRegion() pulumi.StringOutput {
	return o.ApplyT(func(v *Property) pulumi.StringOutput { return v.ResourceRegion }).(pulumi.StringOutput)
}

// The scope of the property.
func (o PropertyOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v *Property) pulumi.StringOutput { return v.Scope }).(pulumi.StringOutput)
}

// (Updatable) Text selection of the property.
func (o PropertyOutput) Selection() pulumi.StringOutput {
	return o.ApplyT(func(v *Property) pulumi.StringOutput { return v.Selection }).(pulumi.StringOutput)
}

// The current state of the Property.
func (o PropertyOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Property) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o PropertyOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Property) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The time this resource was created. An RFC3339 formatted datetime string.
func (o PropertyOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *Property) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time this resource was last updated. An RFC3339 formatted datetime string.
func (o PropertyOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *Property) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The type of the property.
func (o PropertyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Property) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// (Updatable) Format of the value.
func (o PropertyOutput) ValueType() pulumi.StringOutput {
	return o.ApplyT(func(v *Property) pulumi.StringOutput { return v.ValueType }).(pulumi.StringOutput)
}

// (Updatable) Values of the property (must be a single value if selection = 'SINGLE_CHOICE').
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o PropertyOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Property) pulumi.StringArrayOutput { return v.Values }).(pulumi.StringArrayOutput)
}

type PropertyArrayOutput struct{ *pulumi.OutputState }

func (PropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Property)(nil)).Elem()
}

func (o PropertyArrayOutput) ToPropertyArrayOutput() PropertyArrayOutput {
	return o
}

func (o PropertyArrayOutput) ToPropertyArrayOutputWithContext(ctx context.Context) PropertyArrayOutput {
	return o
}

func (o PropertyArrayOutput) Index(i pulumi.IntInput) PropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Property {
		return vs[0].([]*Property)[vs[1].(int)]
	}).(PropertyOutput)
}

type PropertyMapOutput struct{ *pulumi.OutputState }

func (PropertyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Property)(nil)).Elem()
}

func (o PropertyMapOutput) ToPropertyMapOutput() PropertyMapOutput {
	return o
}

func (o PropertyMapOutput) ToPropertyMapOutputWithContext(ctx context.Context) PropertyMapOutput {
	return o
}

func (o PropertyMapOutput) MapIndex(k pulumi.StringInput) PropertyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Property {
		return vs[0].(map[string]*Property)[vs[1].(string)]
	}).(PropertyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyInput)(nil)).Elem(), &Property{})
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyArrayInput)(nil)).Elem(), PropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyMapInput)(nil)).Elem(), PropertyMap{})
	pulumi.RegisterOutputType(PropertyOutput{})
	pulumi.RegisterOutputType(PropertyArrayOutput{})
	pulumi.RegisterOutputType(PropertyMapOutput{})
}
