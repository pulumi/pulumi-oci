// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetappsmanagement

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Task Record resource in Oracle Cloud Infrastructure Fleet Apps Management service.
//
// Creates a new Task.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/fleetappsmanagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fleetappsmanagement.NewTaskRecord(ctx, "test_task_record", &fleetappsmanagement.TaskRecordArgs{
//				CompartmentId: pulumi.Any(compartmentId),
//				Details: &fleetappsmanagement.TaskRecordDetailsArgs{
//					ExecutionDetails: &fleetappsmanagement.TaskRecordDetailsExecutionDetailsArgs{
//						ExecutionType: pulumi.Any(taskRecordDetailsExecutionDetailsExecutionType),
//						Command:       pulumi.Any(taskRecordDetailsExecutionDetailsCommand),
//						Content: &fleetappsmanagement.TaskRecordDetailsExecutionDetailsContentArgs{
//							Bucket:     pulumi.Any(taskRecordDetailsExecutionDetailsContentBucket),
//							Checksum:   pulumi.Any(taskRecordDetailsExecutionDetailsContentChecksum),
//							Namespace:  pulumi.Any(taskRecordDetailsExecutionDetailsContentNamespace),
//							Object:     pulumi.Any(taskRecordDetailsExecutionDetailsContentObject),
//							SourceType: pulumi.Any(taskRecordDetailsExecutionDetailsContentSourceType),
//						},
//						Credentials: fleetappsmanagement.TaskRecordDetailsExecutionDetailsCredentialArray{
//							&fleetappsmanagement.TaskRecordDetailsExecutionDetailsCredentialArgs{
//								DisplayName: pulumi.Any(taskRecordDetailsExecutionDetailsCredentialsDisplayName),
//								Id:          pulumi.Any(taskRecordDetailsExecutionDetailsCredentialsId),
//							},
//						},
//						Endpoint: pulumi.Any(taskRecordDetailsExecutionDetailsEndpoint),
//						Variables: &fleetappsmanagement.TaskRecordDetailsExecutionDetailsVariablesArgs{
//							InputVariables: fleetappsmanagement.TaskRecordDetailsExecutionDetailsVariablesInputVariableArray{
//								&fleetappsmanagement.TaskRecordDetailsExecutionDetailsVariablesInputVariableArgs{
//									Description: pulumi.Any(taskRecordDetailsExecutionDetailsVariablesInputVariablesDescription),
//									Name:        pulumi.Any(taskRecordDetailsExecutionDetailsVariablesInputVariablesName),
//									Type:        pulumi.Any(taskRecordDetailsExecutionDetailsVariablesInputVariablesType),
//								},
//							},
//							OutputVariables: pulumi.Any(taskRecordDetailsExecutionDetailsVariablesOutputVariables),
//						},
//					},
//					OsType:                pulumi.Any(taskRecordDetailsOsType),
//					Scope:                 pulumi.Any(taskRecordDetailsScope),
//					IsApplySubjectTask:    pulumi.Any(taskRecordDetailsIsApplySubjectTask),
//					IsDiscoveryOutputTask: pulumi.Any(taskRecordDetailsIsDiscoveryOutputTask),
//					Platform:              pulumi.Any(taskRecordDetailsPlatform),
//					Properties: &fleetappsmanagement.TaskRecordDetailsPropertiesArgs{
//						NumRetries:       pulumi.Any(taskRecordDetailsPropertiesNumRetries),
//						TimeoutInSeconds: pulumi.Any(taskRecordDetailsPropertiesTimeoutInSeconds),
//					},
//				},
//				DefinedTags: pulumi.StringMap{
//					"foo-namespace.bar-key": pulumi.String("value"),
//				},
//				Description: pulumi.Any(taskRecordDescription),
//				DisplayName: pulumi.Any(taskRecordDisplayName),
//				FreeformTags: pulumi.StringMap{
//					"bar-key": pulumi.String("value"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// TaskRecords can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:FleetAppsManagement/taskRecord:TaskRecord test_task_record "id"
// ```
type TaskRecord struct {
	pulumi.CustomResourceState

	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) The details of the task.
	Details TaskRecordDetailsOutput `pulumi:"details"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// Associated region
	ResourceRegion pulumi.StringOutput `pulumi:"resourceRegion"`
	// The current state of the TaskRecord.
	State pulumi.StringOutput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// The time this resource was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time this resource was last updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// Task type.
	Type pulumi.StringOutput `pulumi:"type"`
	// The version of the task
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewTaskRecord registers a new resource with the given unique name, arguments, and options.
func NewTaskRecord(ctx *pulumi.Context,
	name string, args *TaskRecordArgs, opts ...pulumi.ResourceOption) (*TaskRecord, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.Details == nil {
		return nil, errors.New("invalid value for required argument 'Details'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TaskRecord
	err := ctx.RegisterResource("oci:FleetAppsManagement/taskRecord:TaskRecord", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTaskRecord gets an existing TaskRecord resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTaskRecord(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TaskRecordState, opts ...pulumi.ResourceOption) (*TaskRecord, error) {
	var resource TaskRecord
	err := ctx.ReadResource("oci:FleetAppsManagement/taskRecord:TaskRecord", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TaskRecord resources.
type taskRecordState struct {
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
	Description *string `pulumi:"description"`
	// (Updatable) The details of the task.
	Details *TaskRecordDetails `pulumi:"details"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// Associated region
	ResourceRegion *string `pulumi:"resourceRegion"`
	// The current state of the TaskRecord.
	State *string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time this resource was created. An RFC3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time this resource was last updated. An RFC3339 formatted datetime string.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// Task type.
	Type *string `pulumi:"type"`
	// The version of the task
	Version *string `pulumi:"version"`
}

type TaskRecordState struct {
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
	Description pulumi.StringPtrInput
	// (Updatable) The details of the task.
	Details TaskRecordDetailsPtrInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	FreeformTags pulumi.StringMapInput
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput
	// Associated region
	ResourceRegion pulumi.StringPtrInput
	// The current state of the TaskRecord.
	State pulumi.StringPtrInput
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput
	// The time this resource was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput
	// The time this resource was last updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringPtrInput
	// Task type.
	Type pulumi.StringPtrInput
	// The version of the task
	Version pulumi.StringPtrInput
}

func (TaskRecordState) ElementType() reflect.Type {
	return reflect.TypeOf((*taskRecordState)(nil)).Elem()
}

type taskRecordArgs struct {
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
	Description *string `pulumi:"description"`
	// (Updatable) The details of the task.
	Details TaskRecordDetails `pulumi:"details"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	FreeformTags map[string]string `pulumi:"freeformTags"`
}

// The set of arguments for constructing a TaskRecord resource.
type TaskRecordArgs struct {
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
	Description pulumi.StringPtrInput
	// (Updatable) The details of the task.
	Details TaskRecordDetailsInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	FreeformTags pulumi.StringMapInput
}

func (TaskRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*taskRecordArgs)(nil)).Elem()
}

type TaskRecordInput interface {
	pulumi.Input

	ToTaskRecordOutput() TaskRecordOutput
	ToTaskRecordOutputWithContext(ctx context.Context) TaskRecordOutput
}

func (*TaskRecord) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskRecord)(nil)).Elem()
}

func (i *TaskRecord) ToTaskRecordOutput() TaskRecordOutput {
	return i.ToTaskRecordOutputWithContext(context.Background())
}

func (i *TaskRecord) ToTaskRecordOutputWithContext(ctx context.Context) TaskRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskRecordOutput)
}

// TaskRecordArrayInput is an input type that accepts TaskRecordArray and TaskRecordArrayOutput values.
// You can construct a concrete instance of `TaskRecordArrayInput` via:
//
//	TaskRecordArray{ TaskRecordArgs{...} }
type TaskRecordArrayInput interface {
	pulumi.Input

	ToTaskRecordArrayOutput() TaskRecordArrayOutput
	ToTaskRecordArrayOutputWithContext(context.Context) TaskRecordArrayOutput
}

type TaskRecordArray []TaskRecordInput

func (TaskRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TaskRecord)(nil)).Elem()
}

func (i TaskRecordArray) ToTaskRecordArrayOutput() TaskRecordArrayOutput {
	return i.ToTaskRecordArrayOutputWithContext(context.Background())
}

func (i TaskRecordArray) ToTaskRecordArrayOutputWithContext(ctx context.Context) TaskRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskRecordArrayOutput)
}

// TaskRecordMapInput is an input type that accepts TaskRecordMap and TaskRecordMapOutput values.
// You can construct a concrete instance of `TaskRecordMapInput` via:
//
//	TaskRecordMap{ "key": TaskRecordArgs{...} }
type TaskRecordMapInput interface {
	pulumi.Input

	ToTaskRecordMapOutput() TaskRecordMapOutput
	ToTaskRecordMapOutputWithContext(context.Context) TaskRecordMapOutput
}

type TaskRecordMap map[string]TaskRecordInput

func (TaskRecordMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TaskRecord)(nil)).Elem()
}

func (i TaskRecordMap) ToTaskRecordMapOutput() TaskRecordMapOutput {
	return i.ToTaskRecordMapOutputWithContext(context.Background())
}

func (i TaskRecordMap) ToTaskRecordMapOutputWithContext(ctx context.Context) TaskRecordMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskRecordMapOutput)
}

type TaskRecordOutput struct{ *pulumi.OutputState }

func (TaskRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskRecord)(nil)).Elem()
}

func (o TaskRecordOutput) ToTaskRecordOutput() TaskRecordOutput {
	return o
}

func (o TaskRecordOutput) ToTaskRecordOutputWithContext(ctx context.Context) TaskRecordOutput {
	return o
}

func (o TaskRecordOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *TaskRecord) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o TaskRecordOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *TaskRecord) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
func (o TaskRecordOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *TaskRecord) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) The details of the task.
func (o TaskRecordOutput) Details() TaskRecordDetailsOutput {
	return o.ApplyT(func(v *TaskRecord) TaskRecordDetailsOutput { return v.Details }).(TaskRecordDetailsOutput)
}

// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
func (o TaskRecordOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *TaskRecord) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o TaskRecordOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *TaskRecord) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o TaskRecordOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *TaskRecord) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Associated region
func (o TaskRecordOutput) ResourceRegion() pulumi.StringOutput {
	return o.ApplyT(func(v *TaskRecord) pulumi.StringOutput { return v.ResourceRegion }).(pulumi.StringOutput)
}

// The current state of the TaskRecord.
func (o TaskRecordOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *TaskRecord) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o TaskRecordOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *TaskRecord) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The time this resource was created. An RFC3339 formatted datetime string.
func (o TaskRecordOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *TaskRecord) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time this resource was last updated. An RFC3339 formatted datetime string.
func (o TaskRecordOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *TaskRecord) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Task type.
func (o TaskRecordOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *TaskRecord) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The version of the task
func (o TaskRecordOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *TaskRecord) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

type TaskRecordArrayOutput struct{ *pulumi.OutputState }

func (TaskRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TaskRecord)(nil)).Elem()
}

func (o TaskRecordArrayOutput) ToTaskRecordArrayOutput() TaskRecordArrayOutput {
	return o
}

func (o TaskRecordArrayOutput) ToTaskRecordArrayOutputWithContext(ctx context.Context) TaskRecordArrayOutput {
	return o
}

func (o TaskRecordArrayOutput) Index(i pulumi.IntInput) TaskRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TaskRecord {
		return vs[0].([]*TaskRecord)[vs[1].(int)]
	}).(TaskRecordOutput)
}

type TaskRecordMapOutput struct{ *pulumi.OutputState }

func (TaskRecordMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TaskRecord)(nil)).Elem()
}

func (o TaskRecordMapOutput) ToTaskRecordMapOutput() TaskRecordMapOutput {
	return o
}

func (o TaskRecordMapOutput) ToTaskRecordMapOutputWithContext(ctx context.Context) TaskRecordMapOutput {
	return o
}

func (o TaskRecordMapOutput) MapIndex(k pulumi.StringInput) TaskRecordOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TaskRecord {
		return vs[0].(map[string]*TaskRecord)[vs[1].(string)]
	}).(TaskRecordOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TaskRecordInput)(nil)).Elem(), &TaskRecord{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskRecordArrayInput)(nil)).Elem(), TaskRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskRecordMapInput)(nil)).Elem(), TaskRecordMap{})
	pulumi.RegisterOutputType(TaskRecordOutput{})
	pulumi.RegisterOutputType(TaskRecordArrayOutput{})
	pulumi.RegisterOutputType(TaskRecordMapOutput{})
}
