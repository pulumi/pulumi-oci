// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetsoftwareupdate

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Fsu Collection resource in Oracle Cloud Infrastructure Fleet Software Update service.
//
// Creates a new Exadata Fleet Update Collection.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/FleetSoftwareUpdate"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := FleetSoftwareUpdate.NewFsuCollection(ctx, "test_fsu_collection", &FleetSoftwareUpdate.FsuCollectionArgs{
//				CompartmentId:      pulumi.Any(compartmentId),
//				ServiceType:        pulumi.Any(fsuCollectionServiceType),
//				SourceMajorVersion: pulumi.Any(fsuCollectionSourceMajorVersion),
//				Type:               pulumi.Any(fsuCollectionType),
//				DefinedTags: pulumi.StringMap{
//					"foo-namespace.bar-key": pulumi.String("value"),
//				},
//				DisplayName: pulumi.Any(fsuCollectionDisplayName),
//				FleetDiscovery: &fleetsoftwareupdate.FsuCollectionFleetDiscoveryArgs{
//					Strategy: pulumi.Any(fsuCollectionFleetDiscoveryStrategy),
//					Filters: fleetsoftwareupdate.FsuCollectionFleetDiscoveryFilterArray{
//						&fleetsoftwareupdate.FsuCollectionFleetDiscoveryFilterArgs{
//							Type:        pulumi.Any(fsuCollectionFleetDiscoveryFiltersType),
//							EntityType:  pulumi.Any(fsuCollectionFleetDiscoveryFiltersEntityType),
//							Identifiers: pulumi.Any(fsuCollectionFleetDiscoveryFiltersIdentifiers),
//							Mode:        pulumi.Any(fsuCollectionFleetDiscoveryFiltersMode),
//							Names:       pulumi.Any(fsuCollectionFleetDiscoveryFiltersNames),
//							Operator:    pulumi.Any(fsuCollectionFleetDiscoveryFiltersOperator),
//							Tags: fleetsoftwareupdate.FsuCollectionFleetDiscoveryFilterTagArray{
//								&fleetsoftwareupdate.FsuCollectionFleetDiscoveryFilterTagArgs{
//									Key:       pulumi.Any(fsuCollectionFleetDiscoveryFiltersTagsKey),
//									Value:     pulumi.Any(fsuCollectionFleetDiscoveryFiltersTagsValue),
//									Namespace: pulumi.Any(fsuCollectionFleetDiscoveryFiltersTagsNamespace),
//								},
//							},
//							Versions: pulumi.Any(fsuCollectionFleetDiscoveryFiltersVersions),
//						},
//					},
//					FsuDiscoveryId: pulumi.Any(testFsuDiscovery.Id),
//					Query:          pulumi.Any(fsuCollectionFleetDiscoveryQuery),
//					Targets:        pulumi.Any(fsuCollectionFleetDiscoveryTargets),
//				},
//				FreeformTags: pulumi.StringMap{
//					"bar-key": pulumi.String("value"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// FsuCollections can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:FleetSoftwareUpdate/fsuCollection:FsuCollection test_fsu_collection "id"
// ```
type FsuCollection struct {
	pulumi.CustomResourceState

	// Active Exadata Fleet Update Cycle resource for this Collection. Object would be null if there is no active Cycle.
	ActiveFsuCycles FsuCollectionActiveFsuCycleArrayOutput `pulumi:"activeFsuCycles"`
	// (Updatable) Compartment Identifier
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) Exadata Fleet Update Collection Identifier.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Supported fleet discovery strategies for DB Collections. If specified on an Update Collection request, this will re-discover the targets of the Collection.
	FleetDiscovery FsuCollectionFleetDiscoveryOutput `pulumi:"fleetDiscovery"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// Exadata service type for the target resource members.
	ServiceType pulumi.StringOutput `pulumi:"serviceType"`
	// Database Major Version of targets to be included in the Exadata Fleet Update Collection. https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/DbVersionSummary/ListDbVersions Only Database targets that match the version specified in this value would be added to the Exadata Fleet Update Collection.
	SourceMajorVersion pulumi.StringOutput `pulumi:"sourceMajorVersion"`
	// The current state of the Exadata Fleet Update Collection.
	State pulumi.StringOutput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// Number of targets that are members of this Collection.
	TargetCount pulumi.IntOutput `pulumi:"targetCount"`
	// The time the Exadata Fleet Update Collection was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time the Exadata Fleet Update Collection was updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// Collection type. DB: Only Database entity type resources allowed. GI: CloudVMCluster and VMCluster entity type resources allowed.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewFsuCollection registers a new resource with the given unique name, arguments, and options.
func NewFsuCollection(ctx *pulumi.Context,
	name string, args *FsuCollectionArgs, opts ...pulumi.ResourceOption) (*FsuCollection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.ServiceType == nil {
		return nil, errors.New("invalid value for required argument 'ServiceType'")
	}
	if args.SourceMajorVersion == nil {
		return nil, errors.New("invalid value for required argument 'SourceMajorVersion'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FsuCollection
	err := ctx.RegisterResource("oci:FleetSoftwareUpdate/fsuCollection:FsuCollection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFsuCollection gets an existing FsuCollection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFsuCollection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FsuCollectionState, opts ...pulumi.ResourceOption) (*FsuCollection, error) {
	var resource FsuCollection
	err := ctx.ReadResource("oci:FleetSoftwareUpdate/fsuCollection:FsuCollection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FsuCollection resources.
type fsuCollectionState struct {
	// Active Exadata Fleet Update Cycle resource for this Collection. Object would be null if there is no active Cycle.
	ActiveFsuCycles []FsuCollectionActiveFsuCycle `pulumi:"activeFsuCycles"`
	// (Updatable) Compartment Identifier
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) Exadata Fleet Update Collection Identifier.
	DisplayName *string `pulumi:"displayName"`
	// Supported fleet discovery strategies for DB Collections. If specified on an Update Collection request, this will re-discover the targets of the Collection.
	FleetDiscovery *FsuCollectionFleetDiscovery `pulumi:"fleetDiscovery"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// Exadata service type for the target resource members.
	ServiceType *string `pulumi:"serviceType"`
	// Database Major Version of targets to be included in the Exadata Fleet Update Collection. https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/DbVersionSummary/ListDbVersions Only Database targets that match the version specified in this value would be added to the Exadata Fleet Update Collection.
	SourceMajorVersion *string `pulumi:"sourceMajorVersion"`
	// The current state of the Exadata Fleet Update Collection.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// Number of targets that are members of this Collection.
	TargetCount *int `pulumi:"targetCount"`
	// The time the Exadata Fleet Update Collection was created. An RFC3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the Exadata Fleet Update Collection was updated. An RFC3339 formatted datetime string.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// Collection type. DB: Only Database entity type resources allowed. GI: CloudVMCluster and VMCluster entity type resources allowed.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Type *string `pulumi:"type"`
}

type FsuCollectionState struct {
	// Active Exadata Fleet Update Cycle resource for this Collection. Object would be null if there is no active Cycle.
	ActiveFsuCycles FsuCollectionActiveFsuCycleArrayInput
	// (Updatable) Compartment Identifier
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) Exadata Fleet Update Collection Identifier.
	DisplayName pulumi.StringPtrInput
	// Supported fleet discovery strategies for DB Collections. If specified on an Update Collection request, this will re-discover the targets of the Collection.
	FleetDiscovery FsuCollectionFleetDiscoveryPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput
	// Exadata service type for the target resource members.
	ServiceType pulumi.StringPtrInput
	// Database Major Version of targets to be included in the Exadata Fleet Update Collection. https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/DbVersionSummary/ListDbVersions Only Database targets that match the version specified in this value would be added to the Exadata Fleet Update Collection.
	SourceMajorVersion pulumi.StringPtrInput
	// The current state of the Exadata Fleet Update Collection.
	State pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput
	// Number of targets that are members of this Collection.
	TargetCount pulumi.IntPtrInput
	// The time the Exadata Fleet Update Collection was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput
	// The time the Exadata Fleet Update Collection was updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringPtrInput
	// Collection type. DB: Only Database entity type resources allowed. GI: CloudVMCluster and VMCluster entity type resources allowed.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Type pulumi.StringPtrInput
}

func (FsuCollectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*fsuCollectionState)(nil)).Elem()
}

type fsuCollectionArgs struct {
	// (Updatable) Compartment Identifier
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) Exadata Fleet Update Collection Identifier.
	DisplayName *string `pulumi:"displayName"`
	// Supported fleet discovery strategies for DB Collections. If specified on an Update Collection request, this will re-discover the targets of the Collection.
	FleetDiscovery *FsuCollectionFleetDiscovery `pulumi:"fleetDiscovery"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Exadata service type for the target resource members.
	ServiceType string `pulumi:"serviceType"`
	// Database Major Version of targets to be included in the Exadata Fleet Update Collection. https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/DbVersionSummary/ListDbVersions Only Database targets that match the version specified in this value would be added to the Exadata Fleet Update Collection.
	SourceMajorVersion string `pulumi:"sourceMajorVersion"`
	// Collection type. DB: Only Database entity type resources allowed. GI: CloudVMCluster and VMCluster entity type resources allowed.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a FsuCollection resource.
type FsuCollectionArgs struct {
	// (Updatable) Compartment Identifier
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) Exadata Fleet Update Collection Identifier.
	DisplayName pulumi.StringPtrInput
	// Supported fleet discovery strategies for DB Collections. If specified on an Update Collection request, this will re-discover the targets of the Collection.
	FleetDiscovery FsuCollectionFleetDiscoveryPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// Exadata service type for the target resource members.
	ServiceType pulumi.StringInput
	// Database Major Version of targets to be included in the Exadata Fleet Update Collection. https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/DbVersionSummary/ListDbVersions Only Database targets that match the version specified in this value would be added to the Exadata Fleet Update Collection.
	SourceMajorVersion pulumi.StringInput
	// Collection type. DB: Only Database entity type resources allowed. GI: CloudVMCluster and VMCluster entity type resources allowed.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Type pulumi.StringInput
}

func (FsuCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fsuCollectionArgs)(nil)).Elem()
}

type FsuCollectionInput interface {
	pulumi.Input

	ToFsuCollectionOutput() FsuCollectionOutput
	ToFsuCollectionOutputWithContext(ctx context.Context) FsuCollectionOutput
}

func (*FsuCollection) ElementType() reflect.Type {
	return reflect.TypeOf((**FsuCollection)(nil)).Elem()
}

func (i *FsuCollection) ToFsuCollectionOutput() FsuCollectionOutput {
	return i.ToFsuCollectionOutputWithContext(context.Background())
}

func (i *FsuCollection) ToFsuCollectionOutputWithContext(ctx context.Context) FsuCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FsuCollectionOutput)
}

// FsuCollectionArrayInput is an input type that accepts FsuCollectionArray and FsuCollectionArrayOutput values.
// You can construct a concrete instance of `FsuCollectionArrayInput` via:
//
//	FsuCollectionArray{ FsuCollectionArgs{...} }
type FsuCollectionArrayInput interface {
	pulumi.Input

	ToFsuCollectionArrayOutput() FsuCollectionArrayOutput
	ToFsuCollectionArrayOutputWithContext(context.Context) FsuCollectionArrayOutput
}

type FsuCollectionArray []FsuCollectionInput

func (FsuCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FsuCollection)(nil)).Elem()
}

func (i FsuCollectionArray) ToFsuCollectionArrayOutput() FsuCollectionArrayOutput {
	return i.ToFsuCollectionArrayOutputWithContext(context.Background())
}

func (i FsuCollectionArray) ToFsuCollectionArrayOutputWithContext(ctx context.Context) FsuCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FsuCollectionArrayOutput)
}

// FsuCollectionMapInput is an input type that accepts FsuCollectionMap and FsuCollectionMapOutput values.
// You can construct a concrete instance of `FsuCollectionMapInput` via:
//
//	FsuCollectionMap{ "key": FsuCollectionArgs{...} }
type FsuCollectionMapInput interface {
	pulumi.Input

	ToFsuCollectionMapOutput() FsuCollectionMapOutput
	ToFsuCollectionMapOutputWithContext(context.Context) FsuCollectionMapOutput
}

type FsuCollectionMap map[string]FsuCollectionInput

func (FsuCollectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FsuCollection)(nil)).Elem()
}

func (i FsuCollectionMap) ToFsuCollectionMapOutput() FsuCollectionMapOutput {
	return i.ToFsuCollectionMapOutputWithContext(context.Background())
}

func (i FsuCollectionMap) ToFsuCollectionMapOutputWithContext(ctx context.Context) FsuCollectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FsuCollectionMapOutput)
}

type FsuCollectionOutput struct{ *pulumi.OutputState }

func (FsuCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FsuCollection)(nil)).Elem()
}

func (o FsuCollectionOutput) ToFsuCollectionOutput() FsuCollectionOutput {
	return o
}

func (o FsuCollectionOutput) ToFsuCollectionOutputWithContext(ctx context.Context) FsuCollectionOutput {
	return o
}

// Active Exadata Fleet Update Cycle resource for this Collection. Object would be null if there is no active Cycle.
func (o FsuCollectionOutput) ActiveFsuCycles() FsuCollectionActiveFsuCycleArrayOutput {
	return o.ApplyT(func(v *FsuCollection) FsuCollectionActiveFsuCycleArrayOutput { return v.ActiveFsuCycles }).(FsuCollectionActiveFsuCycleArrayOutput)
}

// (Updatable) Compartment Identifier
func (o FsuCollectionOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *FsuCollection) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o FsuCollectionOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FsuCollection) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) Exadata Fleet Update Collection Identifier.
func (o FsuCollectionOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *FsuCollection) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Supported fleet discovery strategies for DB Collections. If specified on an Update Collection request, this will re-discover the targets of the Collection.
func (o FsuCollectionOutput) FleetDiscovery() FsuCollectionFleetDiscoveryOutput {
	return o.ApplyT(func(v *FsuCollection) FsuCollectionFleetDiscoveryOutput { return v.FleetDiscovery }).(FsuCollectionFleetDiscoveryOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o FsuCollectionOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FsuCollection) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o FsuCollectionOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *FsuCollection) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Exadata service type for the target resource members.
func (o FsuCollectionOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v *FsuCollection) pulumi.StringOutput { return v.ServiceType }).(pulumi.StringOutput)
}

// Database Major Version of targets to be included in the Exadata Fleet Update Collection. https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/DbVersionSummary/ListDbVersions Only Database targets that match the version specified in this value would be added to the Exadata Fleet Update Collection.
func (o FsuCollectionOutput) SourceMajorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *FsuCollection) pulumi.StringOutput { return v.SourceMajorVersion }).(pulumi.StringOutput)
}

// The current state of the Exadata Fleet Update Collection.
func (o FsuCollectionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *FsuCollection) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o FsuCollectionOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FsuCollection) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// Number of targets that are members of this Collection.
func (o FsuCollectionOutput) TargetCount() pulumi.IntOutput {
	return o.ApplyT(func(v *FsuCollection) pulumi.IntOutput { return v.TargetCount }).(pulumi.IntOutput)
}

// The time the Exadata Fleet Update Collection was created. An RFC3339 formatted datetime string.
func (o FsuCollectionOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *FsuCollection) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the Exadata Fleet Update Collection was updated. An RFC3339 formatted datetime string.
func (o FsuCollectionOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *FsuCollection) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Collection type. DB: Only Database entity type resources allowed. GI: CloudVMCluster and VMCluster entity type resources allowed.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o FsuCollectionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *FsuCollection) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type FsuCollectionArrayOutput struct{ *pulumi.OutputState }

func (FsuCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FsuCollection)(nil)).Elem()
}

func (o FsuCollectionArrayOutput) ToFsuCollectionArrayOutput() FsuCollectionArrayOutput {
	return o
}

func (o FsuCollectionArrayOutput) ToFsuCollectionArrayOutputWithContext(ctx context.Context) FsuCollectionArrayOutput {
	return o
}

func (o FsuCollectionArrayOutput) Index(i pulumi.IntInput) FsuCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FsuCollection {
		return vs[0].([]*FsuCollection)[vs[1].(int)]
	}).(FsuCollectionOutput)
}

type FsuCollectionMapOutput struct{ *pulumi.OutputState }

func (FsuCollectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FsuCollection)(nil)).Elem()
}

func (o FsuCollectionMapOutput) ToFsuCollectionMapOutput() FsuCollectionMapOutput {
	return o
}

func (o FsuCollectionMapOutput) ToFsuCollectionMapOutputWithContext(ctx context.Context) FsuCollectionMapOutput {
	return o
}

func (o FsuCollectionMapOutput) MapIndex(k pulumi.StringInput) FsuCollectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FsuCollection {
		return vs[0].(map[string]*FsuCollection)[vs[1].(string)]
	}).(FsuCollectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FsuCollectionInput)(nil)).Elem(), &FsuCollection{})
	pulumi.RegisterInputType(reflect.TypeOf((*FsuCollectionArrayInput)(nil)).Elem(), FsuCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FsuCollectionMapInput)(nil)).Elem(), FsuCollectionMap{})
	pulumi.RegisterOutputType(FsuCollectionOutput{})
	pulumi.RegisterOutputType(FsuCollectionArrayOutput{})
	pulumi.RegisterOutputType(FsuCollectionMapOutput{})
}
