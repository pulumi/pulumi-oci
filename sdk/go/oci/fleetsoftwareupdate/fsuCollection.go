// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetsoftwareupdate

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FsuCollection struct {
	pulumi.CustomResourceState

	ActiveFsuCycles    FsuCollectionActiveFsuCycleArrayOutput `pulumi:"activeFsuCycles"`
	CompartmentId      pulumi.StringOutput                    `pulumi:"compartmentId"`
	DefinedTags        pulumi.StringMapOutput                 `pulumi:"definedTags"`
	DisplayName        pulumi.StringOutput                    `pulumi:"displayName"`
	FleetDiscovery     FsuCollectionFleetDiscoveryOutput      `pulumi:"fleetDiscovery"`
	FreeformTags       pulumi.StringMapOutput                 `pulumi:"freeformTags"`
	LifecycleDetails   pulumi.StringOutput                    `pulumi:"lifecycleDetails"`
	ServiceType        pulumi.StringOutput                    `pulumi:"serviceType"`
	SourceMajorVersion pulumi.StringOutput                    `pulumi:"sourceMajorVersion"`
	State              pulumi.StringOutput                    `pulumi:"state"`
	SystemTags         pulumi.StringMapOutput                 `pulumi:"systemTags"`
	TargetCount        pulumi.IntOutput                       `pulumi:"targetCount"`
	TimeCreated        pulumi.StringOutput                    `pulumi:"timeCreated"`
	TimeUpdated        pulumi.StringOutput                    `pulumi:"timeUpdated"`
	Type               pulumi.StringOutput                    `pulumi:"type"`
}

// NewFsuCollection registers a new resource with the given unique name, arguments, and options.
func NewFsuCollection(ctx *pulumi.Context,
	name string, args *FsuCollectionArgs, opts ...pulumi.ResourceOption) (*FsuCollection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.ServiceType == nil {
		return nil, errors.New("invalid value for required argument 'ServiceType'")
	}
	if args.SourceMajorVersion == nil {
		return nil, errors.New("invalid value for required argument 'SourceMajorVersion'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FsuCollection
	err := ctx.RegisterResource("oci:FleetSoftwareUpdate/fsuCollection:FsuCollection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFsuCollection gets an existing FsuCollection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFsuCollection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FsuCollectionState, opts ...pulumi.ResourceOption) (*FsuCollection, error) {
	var resource FsuCollection
	err := ctx.ReadResource("oci:FleetSoftwareUpdate/fsuCollection:FsuCollection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FsuCollection resources.
type fsuCollectionState struct {
	ActiveFsuCycles    []FsuCollectionActiveFsuCycle `pulumi:"activeFsuCycles"`
	CompartmentId      *string                       `pulumi:"compartmentId"`
	DefinedTags        map[string]string             `pulumi:"definedTags"`
	DisplayName        *string                       `pulumi:"displayName"`
	FleetDiscovery     *FsuCollectionFleetDiscovery  `pulumi:"fleetDiscovery"`
	FreeformTags       map[string]string             `pulumi:"freeformTags"`
	LifecycleDetails   *string                       `pulumi:"lifecycleDetails"`
	ServiceType        *string                       `pulumi:"serviceType"`
	SourceMajorVersion *string                       `pulumi:"sourceMajorVersion"`
	State              *string                       `pulumi:"state"`
	SystemTags         map[string]string             `pulumi:"systemTags"`
	TargetCount        *int                          `pulumi:"targetCount"`
	TimeCreated        *string                       `pulumi:"timeCreated"`
	TimeUpdated        *string                       `pulumi:"timeUpdated"`
	Type               *string                       `pulumi:"type"`
}

type FsuCollectionState struct {
	ActiveFsuCycles    FsuCollectionActiveFsuCycleArrayInput
	CompartmentId      pulumi.StringPtrInput
	DefinedTags        pulumi.StringMapInput
	DisplayName        pulumi.StringPtrInput
	FleetDiscovery     FsuCollectionFleetDiscoveryPtrInput
	FreeformTags       pulumi.StringMapInput
	LifecycleDetails   pulumi.StringPtrInput
	ServiceType        pulumi.StringPtrInput
	SourceMajorVersion pulumi.StringPtrInput
	State              pulumi.StringPtrInput
	SystemTags         pulumi.StringMapInput
	TargetCount        pulumi.IntPtrInput
	TimeCreated        pulumi.StringPtrInput
	TimeUpdated        pulumi.StringPtrInput
	Type               pulumi.StringPtrInput
}

func (FsuCollectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*fsuCollectionState)(nil)).Elem()
}

type fsuCollectionArgs struct {
	CompartmentId      string                       `pulumi:"compartmentId"`
	DefinedTags        map[string]string            `pulumi:"definedTags"`
	DisplayName        *string                      `pulumi:"displayName"`
	FleetDiscovery     *FsuCollectionFleetDiscovery `pulumi:"fleetDiscovery"`
	FreeformTags       map[string]string            `pulumi:"freeformTags"`
	ServiceType        string                       `pulumi:"serviceType"`
	SourceMajorVersion string                       `pulumi:"sourceMajorVersion"`
	Type               string                       `pulumi:"type"`
}

// The set of arguments for constructing a FsuCollection resource.
type FsuCollectionArgs struct {
	CompartmentId      pulumi.StringInput
	DefinedTags        pulumi.StringMapInput
	DisplayName        pulumi.StringPtrInput
	FleetDiscovery     FsuCollectionFleetDiscoveryPtrInput
	FreeformTags       pulumi.StringMapInput
	ServiceType        pulumi.StringInput
	SourceMajorVersion pulumi.StringInput
	Type               pulumi.StringInput
}

func (FsuCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fsuCollectionArgs)(nil)).Elem()
}

type FsuCollectionInput interface {
	pulumi.Input

	ToFsuCollectionOutput() FsuCollectionOutput
	ToFsuCollectionOutputWithContext(ctx context.Context) FsuCollectionOutput
}

func (*FsuCollection) ElementType() reflect.Type {
	return reflect.TypeOf((**FsuCollection)(nil)).Elem()
}

func (i *FsuCollection) ToFsuCollectionOutput() FsuCollectionOutput {
	return i.ToFsuCollectionOutputWithContext(context.Background())
}

func (i *FsuCollection) ToFsuCollectionOutputWithContext(ctx context.Context) FsuCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FsuCollectionOutput)
}

// FsuCollectionArrayInput is an input type that accepts FsuCollectionArray and FsuCollectionArrayOutput values.
// You can construct a concrete instance of `FsuCollectionArrayInput` via:
//
//	FsuCollectionArray{ FsuCollectionArgs{...} }
type FsuCollectionArrayInput interface {
	pulumi.Input

	ToFsuCollectionArrayOutput() FsuCollectionArrayOutput
	ToFsuCollectionArrayOutputWithContext(context.Context) FsuCollectionArrayOutput
}

type FsuCollectionArray []FsuCollectionInput

func (FsuCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FsuCollection)(nil)).Elem()
}

func (i FsuCollectionArray) ToFsuCollectionArrayOutput() FsuCollectionArrayOutput {
	return i.ToFsuCollectionArrayOutputWithContext(context.Background())
}

func (i FsuCollectionArray) ToFsuCollectionArrayOutputWithContext(ctx context.Context) FsuCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FsuCollectionArrayOutput)
}

// FsuCollectionMapInput is an input type that accepts FsuCollectionMap and FsuCollectionMapOutput values.
// You can construct a concrete instance of `FsuCollectionMapInput` via:
//
//	FsuCollectionMap{ "key": FsuCollectionArgs{...} }
type FsuCollectionMapInput interface {
	pulumi.Input

	ToFsuCollectionMapOutput() FsuCollectionMapOutput
	ToFsuCollectionMapOutputWithContext(context.Context) FsuCollectionMapOutput
}

type FsuCollectionMap map[string]FsuCollectionInput

func (FsuCollectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FsuCollection)(nil)).Elem()
}

func (i FsuCollectionMap) ToFsuCollectionMapOutput() FsuCollectionMapOutput {
	return i.ToFsuCollectionMapOutputWithContext(context.Background())
}

func (i FsuCollectionMap) ToFsuCollectionMapOutputWithContext(ctx context.Context) FsuCollectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FsuCollectionMapOutput)
}

type FsuCollectionOutput struct{ *pulumi.OutputState }

func (FsuCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FsuCollection)(nil)).Elem()
}

func (o FsuCollectionOutput) ToFsuCollectionOutput() FsuCollectionOutput {
	return o
}

func (o FsuCollectionOutput) ToFsuCollectionOutputWithContext(ctx context.Context) FsuCollectionOutput {
	return o
}

func (o FsuCollectionOutput) ActiveFsuCycles() FsuCollectionActiveFsuCycleArrayOutput {
	return o.ApplyT(func(v *FsuCollection) FsuCollectionActiveFsuCycleArrayOutput { return v.ActiveFsuCycles }).(FsuCollectionActiveFsuCycleArrayOutput)
}

func (o FsuCollectionOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *FsuCollection) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o FsuCollectionOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FsuCollection) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

func (o FsuCollectionOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *FsuCollection) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

func (o FsuCollectionOutput) FleetDiscovery() FsuCollectionFleetDiscoveryOutput {
	return o.ApplyT(func(v *FsuCollection) FsuCollectionFleetDiscoveryOutput { return v.FleetDiscovery }).(FsuCollectionFleetDiscoveryOutput)
}

func (o FsuCollectionOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FsuCollection) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

func (o FsuCollectionOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *FsuCollection) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

func (o FsuCollectionOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v *FsuCollection) pulumi.StringOutput { return v.ServiceType }).(pulumi.StringOutput)
}

func (o FsuCollectionOutput) SourceMajorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *FsuCollection) pulumi.StringOutput { return v.SourceMajorVersion }).(pulumi.StringOutput)
}

func (o FsuCollectionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *FsuCollection) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

func (o FsuCollectionOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FsuCollection) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

func (o FsuCollectionOutput) TargetCount() pulumi.IntOutput {
	return o.ApplyT(func(v *FsuCollection) pulumi.IntOutput { return v.TargetCount }).(pulumi.IntOutput)
}

func (o FsuCollectionOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *FsuCollection) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

func (o FsuCollectionOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *FsuCollection) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

func (o FsuCollectionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *FsuCollection) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type FsuCollectionArrayOutput struct{ *pulumi.OutputState }

func (FsuCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FsuCollection)(nil)).Elem()
}

func (o FsuCollectionArrayOutput) ToFsuCollectionArrayOutput() FsuCollectionArrayOutput {
	return o
}

func (o FsuCollectionArrayOutput) ToFsuCollectionArrayOutputWithContext(ctx context.Context) FsuCollectionArrayOutput {
	return o
}

func (o FsuCollectionArrayOutput) Index(i pulumi.IntInput) FsuCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FsuCollection {
		return vs[0].([]*FsuCollection)[vs[1].(int)]
	}).(FsuCollectionOutput)
}

type FsuCollectionMapOutput struct{ *pulumi.OutputState }

func (FsuCollectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FsuCollection)(nil)).Elem()
}

func (o FsuCollectionMapOutput) ToFsuCollectionMapOutput() FsuCollectionMapOutput {
	return o
}

func (o FsuCollectionMapOutput) ToFsuCollectionMapOutputWithContext(ctx context.Context) FsuCollectionMapOutput {
	return o
}

func (o FsuCollectionMapOutput) MapIndex(k pulumi.StringInput) FsuCollectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FsuCollection {
		return vs[0].(map[string]*FsuCollection)[vs[1].(string)]
	}).(FsuCollectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FsuCollectionInput)(nil)).Elem(), &FsuCollection{})
	pulumi.RegisterInputType(reflect.TypeOf((*FsuCollectionArrayInput)(nil)).Elem(), FsuCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FsuCollectionMapInput)(nil)).Elem(), FsuCollectionMap{})
	pulumi.RegisterOutputType(FsuCollectionOutput{})
	pulumi.RegisterOutputType(FsuCollectionArrayOutput{})
	pulumi.RegisterOutputType(FsuCollectionMapOutput{})
}
