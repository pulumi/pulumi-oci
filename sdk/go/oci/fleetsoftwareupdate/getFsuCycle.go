// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetsoftwareupdate

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Fsu Cycle resource in Oracle Cloud Infrastructure Fleet Software Update service.
//
// Gets a Exadata Fleet Update Cycle by identifier.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/FleetSoftwareUpdate"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := FleetSoftwareUpdate.GetFsuCycle(ctx, &fleetsoftwareupdate.GetFsuCycleArgs{
//				FsuCycleId: testFsuCycleOciFleetSoftwareUpdateFsuCycle.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupFsuCycle(ctx *pulumi.Context, args *LookupFsuCycleArgs, opts ...pulumi.InvokeOption) (*LookupFsuCycleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFsuCycleResult
	err := ctx.Invoke("oci:FleetSoftwareUpdate/getFsuCycle:getFsuCycle", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFsuCycle.
type LookupFsuCycleArgs struct {
	// Unique Exadata Fleet Update Cycle identifier.
	FsuCycleId string `pulumi:"fsuCycleId"`
}

// A collection of values returned by getFsuCycle.
type LookupFsuCycleResult struct {
	// Scheduling related details for the Exadata Fleet Update Action. The specified time should not conflict with existing Exadata Infrastructure maintenance windows. Null scheduleDetails would execute the Exadata Fleet Update Action as soon as possible.
	ApplyActionSchedules []GetFsuCycleApplyActionSchedule `pulumi:"applyActionSchedules"`
	// Batching strategy details to use during PRECHECK and APPLY Cycle Actions.
	BatchingStrategies []GetFsuCycleBatchingStrategy `pulumi:"batchingStrategies"`
	// Type of Collection this Exadata Fleet Update Cycle belongs to.
	CollectionType string `pulumi:"collectionType"`
	// Compartment Identifier.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Details to configure diagnostics collection for targets affected by this Exadata Fleet Update Maintenance Cycle.
	DiagnosticsCollections []GetFsuCycleDiagnosticsCollection `pulumi:"diagnosticsCollections"`
	// Exadata Fleet Update Cycle display name.
	DisplayName string `pulumi:"displayName"`
	// OCID identifier for the Action that is currently in execution, if applicable.
	ExecutingFsuActionId string `pulumi:"executingFsuActionId"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// OCID identifier for the Collection ID the Exadata Fleet Update Cycle is assigned to.
	FsuCollectionId string `pulumi:"fsuCollectionId"`
	FsuCycleId      string `pulumi:"fsuCycleId"`
	// Goal version or image details for the Exadata Fleet Update Cycle.
	GoalVersionDetails []GetFsuCycleGoalVersionDetail `pulumi:"goalVersionDetails"`
	// OCID identifier for the Exadata Fleet Update Cycle.
	Id string `pulumi:"id"`
	// List of bug numbers to ignore.
	IsIgnoreMissingPatches []string `pulumi:"isIgnoreMissingPatches"`
	// Ignore all patches between the source and target homes during patching.
	IsIgnorePatches bool `pulumi:"isIgnorePatches"`
	// Ensure that services of administrator-managed Oracle RAC or Oracle RAC One databases are running on the same instances before and after the move operation.
	IsKeepPlacement bool `pulumi:"isKeepPlacement"`
	// The latest Action type that was completed in the Exadata Fleet Update Cycle. No value would indicate that the Cycle has not completed any Action yet.
	LastCompletedAction string `pulumi:"lastCompletedAction"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the latest Action  in the Exadata Fleet Update Cycle.
	LastCompletedActionId string `pulumi:"lastCompletedActionId"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Service drain timeout specified in seconds.
	MaxDrainTimeoutInSeconds int `pulumi:"maxDrainTimeoutInSeconds"`
	// In this array all the possible actions will be listed. The first element is the suggested Action.
	NextActionToExecutes []GetFsuCycleNextActionToExecute `pulumi:"nextActionToExecutes"`
	// Current rollback cycle state if rollback maintenance cycle action has been attempted. No value would indicate that the Cycle has not run a rollback maintenance cycle action before.
	RollbackCycleState string `pulumi:"rollbackCycleState"`
	// Scheduling related details for the Exadata Fleet Update Action. The specified time should not conflict with existing Exadata Infrastructure maintenance windows. Null scheduleDetails would execute the Exadata Fleet Update Action as soon as possible.
	StageActionSchedules []GetFsuCycleStageActionSchedule `pulumi:"stageActionSchedules"`
	// The current state of the Exadata Fleet Update Cycle.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time the Exadata Fleet Update Cycle was created, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the Exadata Fleet Update Cycle was finished, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeFinished string `pulumi:"timeFinished"`
	// The date and time the Exadata Fleet Update Cycle was updated, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeUpdated string `pulumi:"timeUpdated"`
	// Type of Exadata Fleet Update Cycle.
	Type string `pulumi:"type"`
}

func LookupFsuCycleOutput(ctx *pulumi.Context, args LookupFsuCycleOutputArgs, opts ...pulumi.InvokeOption) LookupFsuCycleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFsuCycleResultOutput, error) {
			args := v.(LookupFsuCycleArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupFsuCycleResult
			secret, err := ctx.InvokePackageRaw("oci:FleetSoftwareUpdate/getFsuCycle:getFsuCycle", args, &rv, "", opts...)
			if err != nil {
				return LookupFsuCycleResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupFsuCycleResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupFsuCycleResultOutput), nil
			}
			return output, nil
		}).(LookupFsuCycleResultOutput)
}

// A collection of arguments for invoking getFsuCycle.
type LookupFsuCycleOutputArgs struct {
	// Unique Exadata Fleet Update Cycle identifier.
	FsuCycleId pulumi.StringInput `pulumi:"fsuCycleId"`
}

func (LookupFsuCycleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFsuCycleArgs)(nil)).Elem()
}

// A collection of values returned by getFsuCycle.
type LookupFsuCycleResultOutput struct{ *pulumi.OutputState }

func (LookupFsuCycleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFsuCycleResult)(nil)).Elem()
}

func (o LookupFsuCycleResultOutput) ToLookupFsuCycleResultOutput() LookupFsuCycleResultOutput {
	return o
}

func (o LookupFsuCycleResultOutput) ToLookupFsuCycleResultOutputWithContext(ctx context.Context) LookupFsuCycleResultOutput {
	return o
}

// Scheduling related details for the Exadata Fleet Update Action. The specified time should not conflict with existing Exadata Infrastructure maintenance windows. Null scheduleDetails would execute the Exadata Fleet Update Action as soon as possible.
func (o LookupFsuCycleResultOutput) ApplyActionSchedules() GetFsuCycleApplyActionScheduleArrayOutput {
	return o.ApplyT(func(v LookupFsuCycleResult) []GetFsuCycleApplyActionSchedule { return v.ApplyActionSchedules }).(GetFsuCycleApplyActionScheduleArrayOutput)
}

// Batching strategy details to use during PRECHECK and APPLY Cycle Actions.
func (o LookupFsuCycleResultOutput) BatchingStrategies() GetFsuCycleBatchingStrategyArrayOutput {
	return o.ApplyT(func(v LookupFsuCycleResult) []GetFsuCycleBatchingStrategy { return v.BatchingStrategies }).(GetFsuCycleBatchingStrategyArrayOutput)
}

// Type of Collection this Exadata Fleet Update Cycle belongs to.
func (o LookupFsuCycleResultOutput) CollectionType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFsuCycleResult) string { return v.CollectionType }).(pulumi.StringOutput)
}

// Compartment Identifier.
func (o LookupFsuCycleResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFsuCycleResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupFsuCycleResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupFsuCycleResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Details to configure diagnostics collection for targets affected by this Exadata Fleet Update Maintenance Cycle.
func (o LookupFsuCycleResultOutput) DiagnosticsCollections() GetFsuCycleDiagnosticsCollectionArrayOutput {
	return o.ApplyT(func(v LookupFsuCycleResult) []GetFsuCycleDiagnosticsCollection { return v.DiagnosticsCollections }).(GetFsuCycleDiagnosticsCollectionArrayOutput)
}

// Exadata Fleet Update Cycle display name.
func (o LookupFsuCycleResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFsuCycleResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// OCID identifier for the Action that is currently in execution, if applicable.
func (o LookupFsuCycleResultOutput) ExecutingFsuActionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFsuCycleResult) string { return v.ExecutingFsuActionId }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupFsuCycleResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupFsuCycleResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// OCID identifier for the Collection ID the Exadata Fleet Update Cycle is assigned to.
func (o LookupFsuCycleResultOutput) FsuCollectionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFsuCycleResult) string { return v.FsuCollectionId }).(pulumi.StringOutput)
}

func (o LookupFsuCycleResultOutput) FsuCycleId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFsuCycleResult) string { return v.FsuCycleId }).(pulumi.StringOutput)
}

// Goal version or image details for the Exadata Fleet Update Cycle.
func (o LookupFsuCycleResultOutput) GoalVersionDetails() GetFsuCycleGoalVersionDetailArrayOutput {
	return o.ApplyT(func(v LookupFsuCycleResult) []GetFsuCycleGoalVersionDetail { return v.GoalVersionDetails }).(GetFsuCycleGoalVersionDetailArrayOutput)
}

// OCID identifier for the Exadata Fleet Update Cycle.
func (o LookupFsuCycleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFsuCycleResult) string { return v.Id }).(pulumi.StringOutput)
}

// List of bug numbers to ignore.
func (o LookupFsuCycleResultOutput) IsIgnoreMissingPatches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupFsuCycleResult) []string { return v.IsIgnoreMissingPatches }).(pulumi.StringArrayOutput)
}

// Ignore all patches between the source and target homes during patching.
func (o LookupFsuCycleResultOutput) IsIgnorePatches() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupFsuCycleResult) bool { return v.IsIgnorePatches }).(pulumi.BoolOutput)
}

// Ensure that services of administrator-managed Oracle RAC or Oracle RAC One databases are running on the same instances before and after the move operation.
func (o LookupFsuCycleResultOutput) IsKeepPlacement() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupFsuCycleResult) bool { return v.IsKeepPlacement }).(pulumi.BoolOutput)
}

// The latest Action type that was completed in the Exadata Fleet Update Cycle. No value would indicate that the Cycle has not completed any Action yet.
func (o LookupFsuCycleResultOutput) LastCompletedAction() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFsuCycleResult) string { return v.LastCompletedAction }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the latest Action  in the Exadata Fleet Update Cycle.
func (o LookupFsuCycleResultOutput) LastCompletedActionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFsuCycleResult) string { return v.LastCompletedActionId }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o LookupFsuCycleResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFsuCycleResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Service drain timeout specified in seconds.
func (o LookupFsuCycleResultOutput) MaxDrainTimeoutInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFsuCycleResult) int { return v.MaxDrainTimeoutInSeconds }).(pulumi.IntOutput)
}

// In this array all the possible actions will be listed. The first element is the suggested Action.
func (o LookupFsuCycleResultOutput) NextActionToExecutes() GetFsuCycleNextActionToExecuteArrayOutput {
	return o.ApplyT(func(v LookupFsuCycleResult) []GetFsuCycleNextActionToExecute { return v.NextActionToExecutes }).(GetFsuCycleNextActionToExecuteArrayOutput)
}

// Current rollback cycle state if rollback maintenance cycle action has been attempted. No value would indicate that the Cycle has not run a rollback maintenance cycle action before.
func (o LookupFsuCycleResultOutput) RollbackCycleState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFsuCycleResult) string { return v.RollbackCycleState }).(pulumi.StringOutput)
}

// Scheduling related details for the Exadata Fleet Update Action. The specified time should not conflict with existing Exadata Infrastructure maintenance windows. Null scheduleDetails would execute the Exadata Fleet Update Action as soon as possible.
func (o LookupFsuCycleResultOutput) StageActionSchedules() GetFsuCycleStageActionScheduleArrayOutput {
	return o.ApplyT(func(v LookupFsuCycleResult) []GetFsuCycleStageActionSchedule { return v.StageActionSchedules }).(GetFsuCycleStageActionScheduleArrayOutput)
}

// The current state of the Exadata Fleet Update Cycle.
func (o LookupFsuCycleResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFsuCycleResult) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupFsuCycleResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupFsuCycleResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The date and time the Exadata Fleet Update Cycle was created, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
func (o LookupFsuCycleResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFsuCycleResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the Exadata Fleet Update Cycle was finished, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o LookupFsuCycleResultOutput) TimeFinished() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFsuCycleResult) string { return v.TimeFinished }).(pulumi.StringOutput)
}

// The date and time the Exadata Fleet Update Cycle was updated, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
func (o LookupFsuCycleResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFsuCycleResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Type of Exadata Fleet Update Cycle.
func (o LookupFsuCycleResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFsuCycleResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFsuCycleResultOutput{})
}
