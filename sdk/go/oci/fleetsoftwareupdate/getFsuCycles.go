// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetsoftwareupdate

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Fsu Cycles in Oracle Cloud Infrastructure Fleet Software Update service.
//
// Gets a list of all Exadata Fleet Update Cycles in a compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/fleetsoftwareupdate"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fleetsoftwareupdate.GetFsuCycles(ctx, &fleetsoftwareupdate.GetFsuCyclesArgs{
//				CompartmentId:   compartmentId,
//				CollectionType:  pulumi.StringRef(fsuCycleCollectionType),
//				DisplayName:     pulumi.StringRef(fsuCycleDisplayName),
//				FsuCollectionId: pulumi.StringRef(testFsuCollection.Id),
//				State:           pulumi.StringRef(fsuCycleState),
//				TargetVersion:   pulumi.StringRef(fsuCycleTargetVersion),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetFsuCycles(ctx *pulumi.Context, args *GetFsuCyclesArgs, opts ...pulumi.InvokeOption) (*GetFsuCyclesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetFsuCyclesResult
	err := ctx.Invoke("oci:FleetSoftwareUpdate/getFsuCycles:getFsuCycles", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFsuCycles.
type GetFsuCyclesArgs struct {
	// A filter to return only resources whose Collection type matches the given type.
	CollectionType *string `pulumi:"collectionType"`
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string              `pulumi:"displayName"`
	Filters     []GetFsuCyclesFilter `pulumi:"filters"`
	// A filter to return only resources whose fsuCollectionId matches the given fsuCollectionId.
	FsuCollectionId *string `pulumi:"fsuCollectionId"`
	// A filter to return only resources whose lifecycleState matches the given lifecycleState.
	State *string `pulumi:"state"`
	// A filter to return only entries whose targetVersion matches the given targetVersion.
	TargetVersion *string `pulumi:"targetVersion"`
}

// A collection of values returned by getFsuCycles.
type GetFsuCyclesResult struct {
	// Type of Exadata Fleet Update collection being upgraded.
	CollectionType *string `pulumi:"collectionType"`
	// Compartment Identifier.
	CompartmentId string `pulumi:"compartmentId"`
	// Exadata Fleet Update Cycle display name.
	DisplayName *string              `pulumi:"displayName"`
	Filters     []GetFsuCyclesFilter `pulumi:"filters"`
	// OCID identifier for the Collection ID the Exadata Fleet Update Cycle is assigned to.
	FsuCollectionId *string `pulumi:"fsuCollectionId"`
	// The list of fsu_cycle_summary_collection.
	FsuCycleSummaryCollections []GetFsuCyclesFsuCycleSummaryCollection `pulumi:"fsuCycleSummaryCollections"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The current state of the Exadata Fleet Update Cycle.
	State         *string `pulumi:"state"`
	TargetVersion *string `pulumi:"targetVersion"`
}

func GetFsuCyclesOutput(ctx *pulumi.Context, args GetFsuCyclesOutputArgs, opts ...pulumi.InvokeOption) GetFsuCyclesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetFsuCyclesResultOutput, error) {
			args := v.(GetFsuCyclesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:FleetSoftwareUpdate/getFsuCycles:getFsuCycles", args, GetFsuCyclesResultOutput{}, options).(GetFsuCyclesResultOutput), nil
		}).(GetFsuCyclesResultOutput)
}

// A collection of arguments for invoking getFsuCycles.
type GetFsuCyclesOutputArgs struct {
	// A filter to return only resources whose Collection type matches the given type.
	CollectionType pulumi.StringPtrInput `pulumi:"collectionType"`
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput        `pulumi:"displayName"`
	Filters     GetFsuCyclesFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources whose fsuCollectionId matches the given fsuCollectionId.
	FsuCollectionId pulumi.StringPtrInput `pulumi:"fsuCollectionId"`
	// A filter to return only resources whose lifecycleState matches the given lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
	// A filter to return only entries whose targetVersion matches the given targetVersion.
	TargetVersion pulumi.StringPtrInput `pulumi:"targetVersion"`
}

func (GetFsuCyclesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCyclesArgs)(nil)).Elem()
}

// A collection of values returned by getFsuCycles.
type GetFsuCyclesResultOutput struct{ *pulumi.OutputState }

func (GetFsuCyclesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCyclesResult)(nil)).Elem()
}

func (o GetFsuCyclesResultOutput) ToGetFsuCyclesResultOutput() GetFsuCyclesResultOutput {
	return o
}

func (o GetFsuCyclesResultOutput) ToGetFsuCyclesResultOutputWithContext(ctx context.Context) GetFsuCyclesResultOutput {
	return o
}

// Type of Exadata Fleet Update collection being upgraded.
func (o GetFsuCyclesResultOutput) CollectionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFsuCyclesResult) *string { return v.CollectionType }).(pulumi.StringPtrOutput)
}

// Compartment Identifier.
func (o GetFsuCyclesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCyclesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Exadata Fleet Update Cycle display name.
func (o GetFsuCyclesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFsuCyclesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetFsuCyclesResultOutput) Filters() GetFsuCyclesFilterArrayOutput {
	return o.ApplyT(func(v GetFsuCyclesResult) []GetFsuCyclesFilter { return v.Filters }).(GetFsuCyclesFilterArrayOutput)
}

// OCID identifier for the Collection ID the Exadata Fleet Update Cycle is assigned to.
func (o GetFsuCyclesResultOutput) FsuCollectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFsuCyclesResult) *string { return v.FsuCollectionId }).(pulumi.StringPtrOutput)
}

// The list of fsu_cycle_summary_collection.
func (o GetFsuCyclesResultOutput) FsuCycleSummaryCollections() GetFsuCyclesFsuCycleSummaryCollectionArrayOutput {
	return o.ApplyT(func(v GetFsuCyclesResult) []GetFsuCyclesFsuCycleSummaryCollection {
		return v.FsuCycleSummaryCollections
	}).(GetFsuCyclesFsuCycleSummaryCollectionArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetFsuCyclesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCyclesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The current state of the Exadata Fleet Update Cycle.
func (o GetFsuCyclesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFsuCyclesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func (o GetFsuCyclesResultOutput) TargetVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFsuCyclesResult) *string { return v.TargetVersion }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetFsuCyclesResultOutput{})
}
