// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetsoftwareupdate

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type FsuCollectionActiveFsuCycle struct {
	// (Updatable) Exadata Fleet Update Collection Identifier.
	DisplayName *string `pulumi:"displayName"`
	// OCID identifier for the Exadata Fleet Update Collection.
	Id *string `pulumi:"id"`
}

// FsuCollectionActiveFsuCycleInput is an input type that accepts FsuCollectionActiveFsuCycleArgs and FsuCollectionActiveFsuCycleOutput values.
// You can construct a concrete instance of `FsuCollectionActiveFsuCycleInput` via:
//
//	FsuCollectionActiveFsuCycleArgs{...}
type FsuCollectionActiveFsuCycleInput interface {
	pulumi.Input

	ToFsuCollectionActiveFsuCycleOutput() FsuCollectionActiveFsuCycleOutput
	ToFsuCollectionActiveFsuCycleOutputWithContext(context.Context) FsuCollectionActiveFsuCycleOutput
}

type FsuCollectionActiveFsuCycleArgs struct {
	// (Updatable) Exadata Fleet Update Collection Identifier.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// OCID identifier for the Exadata Fleet Update Collection.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (FsuCollectionActiveFsuCycleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FsuCollectionActiveFsuCycle)(nil)).Elem()
}

func (i FsuCollectionActiveFsuCycleArgs) ToFsuCollectionActiveFsuCycleOutput() FsuCollectionActiveFsuCycleOutput {
	return i.ToFsuCollectionActiveFsuCycleOutputWithContext(context.Background())
}

func (i FsuCollectionActiveFsuCycleArgs) ToFsuCollectionActiveFsuCycleOutputWithContext(ctx context.Context) FsuCollectionActiveFsuCycleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FsuCollectionActiveFsuCycleOutput)
}

// FsuCollectionActiveFsuCycleArrayInput is an input type that accepts FsuCollectionActiveFsuCycleArray and FsuCollectionActiveFsuCycleArrayOutput values.
// You can construct a concrete instance of `FsuCollectionActiveFsuCycleArrayInput` via:
//
//	FsuCollectionActiveFsuCycleArray{ FsuCollectionActiveFsuCycleArgs{...} }
type FsuCollectionActiveFsuCycleArrayInput interface {
	pulumi.Input

	ToFsuCollectionActiveFsuCycleArrayOutput() FsuCollectionActiveFsuCycleArrayOutput
	ToFsuCollectionActiveFsuCycleArrayOutputWithContext(context.Context) FsuCollectionActiveFsuCycleArrayOutput
}

type FsuCollectionActiveFsuCycleArray []FsuCollectionActiveFsuCycleInput

func (FsuCollectionActiveFsuCycleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FsuCollectionActiveFsuCycle)(nil)).Elem()
}

func (i FsuCollectionActiveFsuCycleArray) ToFsuCollectionActiveFsuCycleArrayOutput() FsuCollectionActiveFsuCycleArrayOutput {
	return i.ToFsuCollectionActiveFsuCycleArrayOutputWithContext(context.Background())
}

func (i FsuCollectionActiveFsuCycleArray) ToFsuCollectionActiveFsuCycleArrayOutputWithContext(ctx context.Context) FsuCollectionActiveFsuCycleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FsuCollectionActiveFsuCycleArrayOutput)
}

type FsuCollectionActiveFsuCycleOutput struct{ *pulumi.OutputState }

func (FsuCollectionActiveFsuCycleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FsuCollectionActiveFsuCycle)(nil)).Elem()
}

func (o FsuCollectionActiveFsuCycleOutput) ToFsuCollectionActiveFsuCycleOutput() FsuCollectionActiveFsuCycleOutput {
	return o
}

func (o FsuCollectionActiveFsuCycleOutput) ToFsuCollectionActiveFsuCycleOutputWithContext(ctx context.Context) FsuCollectionActiveFsuCycleOutput {
	return o
}

// (Updatable) Exadata Fleet Update Collection Identifier.
func (o FsuCollectionActiveFsuCycleOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FsuCollectionActiveFsuCycle) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// OCID identifier for the Exadata Fleet Update Collection.
func (o FsuCollectionActiveFsuCycleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FsuCollectionActiveFsuCycle) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type FsuCollectionActiveFsuCycleArrayOutput struct{ *pulumi.OutputState }

func (FsuCollectionActiveFsuCycleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FsuCollectionActiveFsuCycle)(nil)).Elem()
}

func (o FsuCollectionActiveFsuCycleArrayOutput) ToFsuCollectionActiveFsuCycleArrayOutput() FsuCollectionActiveFsuCycleArrayOutput {
	return o
}

func (o FsuCollectionActiveFsuCycleArrayOutput) ToFsuCollectionActiveFsuCycleArrayOutputWithContext(ctx context.Context) FsuCollectionActiveFsuCycleArrayOutput {
	return o
}

func (o FsuCollectionActiveFsuCycleArrayOutput) Index(i pulumi.IntInput) FsuCollectionActiveFsuCycleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FsuCollectionActiveFsuCycle {
		return vs[0].([]FsuCollectionActiveFsuCycle)[vs[1].(int)]
	}).(FsuCollectionActiveFsuCycleOutput)
}

type FsuCollectionFleetDiscovery struct {
	// Filters to perform the target discovery.
	Filters []FsuCollectionFleetDiscoveryFilter `pulumi:"filters"`
	// OCIDs of Fleet Software Update Discovery.
	FsuDiscoveryId *string `pulumi:"fsuDiscoveryId"`
	// Oracle Cloud Infrastructure Search Service query string.
	Query *string `pulumi:"query"`
	// Possible fleet discovery strategies.
	Strategy string `pulumi:"strategy"`
	// OCIDs of target resources to include. For EXACC service type Collections only VMClusters are allowed. For EXACS service type Collections only CloudVMClusters are allowed.
	Targets []string `pulumi:"targets"`
}

// FsuCollectionFleetDiscoveryInput is an input type that accepts FsuCollectionFleetDiscoveryArgs and FsuCollectionFleetDiscoveryOutput values.
// You can construct a concrete instance of `FsuCollectionFleetDiscoveryInput` via:
//
//	FsuCollectionFleetDiscoveryArgs{...}
type FsuCollectionFleetDiscoveryInput interface {
	pulumi.Input

	ToFsuCollectionFleetDiscoveryOutput() FsuCollectionFleetDiscoveryOutput
	ToFsuCollectionFleetDiscoveryOutputWithContext(context.Context) FsuCollectionFleetDiscoveryOutput
}

type FsuCollectionFleetDiscoveryArgs struct {
	// Filters to perform the target discovery.
	Filters FsuCollectionFleetDiscoveryFilterArrayInput `pulumi:"filters"`
	// OCIDs of Fleet Software Update Discovery.
	FsuDiscoveryId pulumi.StringPtrInput `pulumi:"fsuDiscoveryId"`
	// Oracle Cloud Infrastructure Search Service query string.
	Query pulumi.StringPtrInput `pulumi:"query"`
	// Possible fleet discovery strategies.
	Strategy pulumi.StringInput `pulumi:"strategy"`
	// OCIDs of target resources to include. For EXACC service type Collections only VMClusters are allowed. For EXACS service type Collections only CloudVMClusters are allowed.
	Targets pulumi.StringArrayInput `pulumi:"targets"`
}

func (FsuCollectionFleetDiscoveryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FsuCollectionFleetDiscovery)(nil)).Elem()
}

func (i FsuCollectionFleetDiscoveryArgs) ToFsuCollectionFleetDiscoveryOutput() FsuCollectionFleetDiscoveryOutput {
	return i.ToFsuCollectionFleetDiscoveryOutputWithContext(context.Background())
}

func (i FsuCollectionFleetDiscoveryArgs) ToFsuCollectionFleetDiscoveryOutputWithContext(ctx context.Context) FsuCollectionFleetDiscoveryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FsuCollectionFleetDiscoveryOutput)
}

func (i FsuCollectionFleetDiscoveryArgs) ToFsuCollectionFleetDiscoveryPtrOutput() FsuCollectionFleetDiscoveryPtrOutput {
	return i.ToFsuCollectionFleetDiscoveryPtrOutputWithContext(context.Background())
}

func (i FsuCollectionFleetDiscoveryArgs) ToFsuCollectionFleetDiscoveryPtrOutputWithContext(ctx context.Context) FsuCollectionFleetDiscoveryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FsuCollectionFleetDiscoveryOutput).ToFsuCollectionFleetDiscoveryPtrOutputWithContext(ctx)
}

// FsuCollectionFleetDiscoveryPtrInput is an input type that accepts FsuCollectionFleetDiscoveryArgs, FsuCollectionFleetDiscoveryPtr and FsuCollectionFleetDiscoveryPtrOutput values.
// You can construct a concrete instance of `FsuCollectionFleetDiscoveryPtrInput` via:
//
//	        FsuCollectionFleetDiscoveryArgs{...}
//
//	or:
//
//	        nil
type FsuCollectionFleetDiscoveryPtrInput interface {
	pulumi.Input

	ToFsuCollectionFleetDiscoveryPtrOutput() FsuCollectionFleetDiscoveryPtrOutput
	ToFsuCollectionFleetDiscoveryPtrOutputWithContext(context.Context) FsuCollectionFleetDiscoveryPtrOutput
}

type fsuCollectionFleetDiscoveryPtrType FsuCollectionFleetDiscoveryArgs

func FsuCollectionFleetDiscoveryPtr(v *FsuCollectionFleetDiscoveryArgs) FsuCollectionFleetDiscoveryPtrInput {
	return (*fsuCollectionFleetDiscoveryPtrType)(v)
}

func (*fsuCollectionFleetDiscoveryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FsuCollectionFleetDiscovery)(nil)).Elem()
}

func (i *fsuCollectionFleetDiscoveryPtrType) ToFsuCollectionFleetDiscoveryPtrOutput() FsuCollectionFleetDiscoveryPtrOutput {
	return i.ToFsuCollectionFleetDiscoveryPtrOutputWithContext(context.Background())
}

func (i *fsuCollectionFleetDiscoveryPtrType) ToFsuCollectionFleetDiscoveryPtrOutputWithContext(ctx context.Context) FsuCollectionFleetDiscoveryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FsuCollectionFleetDiscoveryPtrOutput)
}

type FsuCollectionFleetDiscoveryOutput struct{ *pulumi.OutputState }

func (FsuCollectionFleetDiscoveryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FsuCollectionFleetDiscovery)(nil)).Elem()
}

func (o FsuCollectionFleetDiscoveryOutput) ToFsuCollectionFleetDiscoveryOutput() FsuCollectionFleetDiscoveryOutput {
	return o
}

func (o FsuCollectionFleetDiscoveryOutput) ToFsuCollectionFleetDiscoveryOutputWithContext(ctx context.Context) FsuCollectionFleetDiscoveryOutput {
	return o
}

func (o FsuCollectionFleetDiscoveryOutput) ToFsuCollectionFleetDiscoveryPtrOutput() FsuCollectionFleetDiscoveryPtrOutput {
	return o.ToFsuCollectionFleetDiscoveryPtrOutputWithContext(context.Background())
}

func (o FsuCollectionFleetDiscoveryOutput) ToFsuCollectionFleetDiscoveryPtrOutputWithContext(ctx context.Context) FsuCollectionFleetDiscoveryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FsuCollectionFleetDiscovery) *FsuCollectionFleetDiscovery {
		return &v
	}).(FsuCollectionFleetDiscoveryPtrOutput)
}

// Filters to perform the target discovery.
func (o FsuCollectionFleetDiscoveryOutput) Filters() FsuCollectionFleetDiscoveryFilterArrayOutput {
	return o.ApplyT(func(v FsuCollectionFleetDiscovery) []FsuCollectionFleetDiscoveryFilter { return v.Filters }).(FsuCollectionFleetDiscoveryFilterArrayOutput)
}

// OCIDs of Fleet Software Update Discovery.
func (o FsuCollectionFleetDiscoveryOutput) FsuDiscoveryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FsuCollectionFleetDiscovery) *string { return v.FsuDiscoveryId }).(pulumi.StringPtrOutput)
}

// Oracle Cloud Infrastructure Search Service query string.
func (o FsuCollectionFleetDiscoveryOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FsuCollectionFleetDiscovery) *string { return v.Query }).(pulumi.StringPtrOutput)
}

// Possible fleet discovery strategies.
func (o FsuCollectionFleetDiscoveryOutput) Strategy() pulumi.StringOutput {
	return o.ApplyT(func(v FsuCollectionFleetDiscovery) string { return v.Strategy }).(pulumi.StringOutput)
}

// OCIDs of target resources to include. For EXACC service type Collections only VMClusters are allowed. For EXACS service type Collections only CloudVMClusters are allowed.
func (o FsuCollectionFleetDiscoveryOutput) Targets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FsuCollectionFleetDiscovery) []string { return v.Targets }).(pulumi.StringArrayOutput)
}

type FsuCollectionFleetDiscoveryPtrOutput struct{ *pulumi.OutputState }

func (FsuCollectionFleetDiscoveryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FsuCollectionFleetDiscovery)(nil)).Elem()
}

func (o FsuCollectionFleetDiscoveryPtrOutput) ToFsuCollectionFleetDiscoveryPtrOutput() FsuCollectionFleetDiscoveryPtrOutput {
	return o
}

func (o FsuCollectionFleetDiscoveryPtrOutput) ToFsuCollectionFleetDiscoveryPtrOutputWithContext(ctx context.Context) FsuCollectionFleetDiscoveryPtrOutput {
	return o
}

func (o FsuCollectionFleetDiscoveryPtrOutput) Elem() FsuCollectionFleetDiscoveryOutput {
	return o.ApplyT(func(v *FsuCollectionFleetDiscovery) FsuCollectionFleetDiscovery {
		if v != nil {
			return *v
		}
		var ret FsuCollectionFleetDiscovery
		return ret
	}).(FsuCollectionFleetDiscoveryOutput)
}

// Filters to perform the target discovery.
func (o FsuCollectionFleetDiscoveryPtrOutput) Filters() FsuCollectionFleetDiscoveryFilterArrayOutput {
	return o.ApplyT(func(v *FsuCollectionFleetDiscovery) []FsuCollectionFleetDiscoveryFilter {
		if v == nil {
			return nil
		}
		return v.Filters
	}).(FsuCollectionFleetDiscoveryFilterArrayOutput)
}

// OCIDs of Fleet Software Update Discovery.
func (o FsuCollectionFleetDiscoveryPtrOutput) FsuDiscoveryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FsuCollectionFleetDiscovery) *string {
		if v == nil {
			return nil
		}
		return v.FsuDiscoveryId
	}).(pulumi.StringPtrOutput)
}

// Oracle Cloud Infrastructure Search Service query string.
func (o FsuCollectionFleetDiscoveryPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FsuCollectionFleetDiscovery) *string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringPtrOutput)
}

// Possible fleet discovery strategies.
func (o FsuCollectionFleetDiscoveryPtrOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FsuCollectionFleetDiscovery) *string {
		if v == nil {
			return nil
		}
		return &v.Strategy
	}).(pulumi.StringPtrOutput)
}

// OCIDs of target resources to include. For EXACC service type Collections only VMClusters are allowed. For EXACS service type Collections only CloudVMClusters are allowed.
func (o FsuCollectionFleetDiscoveryPtrOutput) Targets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FsuCollectionFleetDiscovery) []string {
		if v == nil {
			return nil
		}
		return v.Targets
	}).(pulumi.StringArrayOutput)
}

type FsuCollectionFleetDiscoveryFilter struct {
	// Type of resource to match in the discovery.
	EntityType *string `pulumi:"entityType"`
	// Related resource Ids to include in the discovery.  All must match the specified entityType.
	Identifiers []string `pulumi:"identifiers"`
	// INCLUDE or EXCLUDE the filter results in the discovery for DB targets. Supported for 'FSUCOLLECTION' RESOURCE_ID filter only.
	Mode *string `pulumi:"mode"`
	// List of Database unique names to include in the discovery.
	Names []string `pulumi:"names"`
	// Type of join for each element in this filter.
	Operator *string `pulumi:"operator"`
	// Freeform tags to include in the discovery.
	Tags []FsuCollectionFleetDiscoveryFilterTag `pulumi:"tags"`
	// Type of filters supported for Database targets discovery.
	Type string `pulumi:"type"`
	// List of Versions strings to include in the discovery.
	Versions []string `pulumi:"versions"`
}

// FsuCollectionFleetDiscoveryFilterInput is an input type that accepts FsuCollectionFleetDiscoveryFilterArgs and FsuCollectionFleetDiscoveryFilterOutput values.
// You can construct a concrete instance of `FsuCollectionFleetDiscoveryFilterInput` via:
//
//	FsuCollectionFleetDiscoveryFilterArgs{...}
type FsuCollectionFleetDiscoveryFilterInput interface {
	pulumi.Input

	ToFsuCollectionFleetDiscoveryFilterOutput() FsuCollectionFleetDiscoveryFilterOutput
	ToFsuCollectionFleetDiscoveryFilterOutputWithContext(context.Context) FsuCollectionFleetDiscoveryFilterOutput
}

type FsuCollectionFleetDiscoveryFilterArgs struct {
	// Type of resource to match in the discovery.
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	// Related resource Ids to include in the discovery.  All must match the specified entityType.
	Identifiers pulumi.StringArrayInput `pulumi:"identifiers"`
	// INCLUDE or EXCLUDE the filter results in the discovery for DB targets. Supported for 'FSUCOLLECTION' RESOURCE_ID filter only.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// List of Database unique names to include in the discovery.
	Names pulumi.StringArrayInput `pulumi:"names"`
	// Type of join for each element in this filter.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// Freeform tags to include in the discovery.
	Tags FsuCollectionFleetDiscoveryFilterTagArrayInput `pulumi:"tags"`
	// Type of filters supported for Database targets discovery.
	Type pulumi.StringInput `pulumi:"type"`
	// List of Versions strings to include in the discovery.
	Versions pulumi.StringArrayInput `pulumi:"versions"`
}

func (FsuCollectionFleetDiscoveryFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FsuCollectionFleetDiscoveryFilter)(nil)).Elem()
}

func (i FsuCollectionFleetDiscoveryFilterArgs) ToFsuCollectionFleetDiscoveryFilterOutput() FsuCollectionFleetDiscoveryFilterOutput {
	return i.ToFsuCollectionFleetDiscoveryFilterOutputWithContext(context.Background())
}

func (i FsuCollectionFleetDiscoveryFilterArgs) ToFsuCollectionFleetDiscoveryFilterOutputWithContext(ctx context.Context) FsuCollectionFleetDiscoveryFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FsuCollectionFleetDiscoveryFilterOutput)
}

// FsuCollectionFleetDiscoveryFilterArrayInput is an input type that accepts FsuCollectionFleetDiscoveryFilterArray and FsuCollectionFleetDiscoveryFilterArrayOutput values.
// You can construct a concrete instance of `FsuCollectionFleetDiscoveryFilterArrayInput` via:
//
//	FsuCollectionFleetDiscoveryFilterArray{ FsuCollectionFleetDiscoveryFilterArgs{...} }
type FsuCollectionFleetDiscoveryFilterArrayInput interface {
	pulumi.Input

	ToFsuCollectionFleetDiscoveryFilterArrayOutput() FsuCollectionFleetDiscoveryFilterArrayOutput
	ToFsuCollectionFleetDiscoveryFilterArrayOutputWithContext(context.Context) FsuCollectionFleetDiscoveryFilterArrayOutput
}

type FsuCollectionFleetDiscoveryFilterArray []FsuCollectionFleetDiscoveryFilterInput

func (FsuCollectionFleetDiscoveryFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FsuCollectionFleetDiscoveryFilter)(nil)).Elem()
}

func (i FsuCollectionFleetDiscoveryFilterArray) ToFsuCollectionFleetDiscoveryFilterArrayOutput() FsuCollectionFleetDiscoveryFilterArrayOutput {
	return i.ToFsuCollectionFleetDiscoveryFilterArrayOutputWithContext(context.Background())
}

func (i FsuCollectionFleetDiscoveryFilterArray) ToFsuCollectionFleetDiscoveryFilterArrayOutputWithContext(ctx context.Context) FsuCollectionFleetDiscoveryFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FsuCollectionFleetDiscoveryFilterArrayOutput)
}

type FsuCollectionFleetDiscoveryFilterOutput struct{ *pulumi.OutputState }

func (FsuCollectionFleetDiscoveryFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FsuCollectionFleetDiscoveryFilter)(nil)).Elem()
}

func (o FsuCollectionFleetDiscoveryFilterOutput) ToFsuCollectionFleetDiscoveryFilterOutput() FsuCollectionFleetDiscoveryFilterOutput {
	return o
}

func (o FsuCollectionFleetDiscoveryFilterOutput) ToFsuCollectionFleetDiscoveryFilterOutputWithContext(ctx context.Context) FsuCollectionFleetDiscoveryFilterOutput {
	return o
}

// Type of resource to match in the discovery.
func (o FsuCollectionFleetDiscoveryFilterOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FsuCollectionFleetDiscoveryFilter) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

// Related resource Ids to include in the discovery.  All must match the specified entityType.
func (o FsuCollectionFleetDiscoveryFilterOutput) Identifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FsuCollectionFleetDiscoveryFilter) []string { return v.Identifiers }).(pulumi.StringArrayOutput)
}

// INCLUDE or EXCLUDE the filter results in the discovery for DB targets. Supported for 'FSUCOLLECTION' RESOURCE_ID filter only.
func (o FsuCollectionFleetDiscoveryFilterOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FsuCollectionFleetDiscoveryFilter) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// List of Database unique names to include in the discovery.
func (o FsuCollectionFleetDiscoveryFilterOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FsuCollectionFleetDiscoveryFilter) []string { return v.Names }).(pulumi.StringArrayOutput)
}

// Type of join for each element in this filter.
func (o FsuCollectionFleetDiscoveryFilterOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FsuCollectionFleetDiscoveryFilter) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// Freeform tags to include in the discovery.
func (o FsuCollectionFleetDiscoveryFilterOutput) Tags() FsuCollectionFleetDiscoveryFilterTagArrayOutput {
	return o.ApplyT(func(v FsuCollectionFleetDiscoveryFilter) []FsuCollectionFleetDiscoveryFilterTag { return v.Tags }).(FsuCollectionFleetDiscoveryFilterTagArrayOutput)
}

// Type of filters supported for Database targets discovery.
func (o FsuCollectionFleetDiscoveryFilterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FsuCollectionFleetDiscoveryFilter) string { return v.Type }).(pulumi.StringOutput)
}

// List of Versions strings to include in the discovery.
func (o FsuCollectionFleetDiscoveryFilterOutput) Versions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FsuCollectionFleetDiscoveryFilter) []string { return v.Versions }).(pulumi.StringArrayOutput)
}

type FsuCollectionFleetDiscoveryFilterArrayOutput struct{ *pulumi.OutputState }

func (FsuCollectionFleetDiscoveryFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FsuCollectionFleetDiscoveryFilter)(nil)).Elem()
}

func (o FsuCollectionFleetDiscoveryFilterArrayOutput) ToFsuCollectionFleetDiscoveryFilterArrayOutput() FsuCollectionFleetDiscoveryFilterArrayOutput {
	return o
}

func (o FsuCollectionFleetDiscoveryFilterArrayOutput) ToFsuCollectionFleetDiscoveryFilterArrayOutputWithContext(ctx context.Context) FsuCollectionFleetDiscoveryFilterArrayOutput {
	return o
}

func (o FsuCollectionFleetDiscoveryFilterArrayOutput) Index(i pulumi.IntInput) FsuCollectionFleetDiscoveryFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FsuCollectionFleetDiscoveryFilter {
		return vs[0].([]FsuCollectionFleetDiscoveryFilter)[vs[1].(int)]
	}).(FsuCollectionFleetDiscoveryFilterOutput)
}

type FsuCollectionFleetDiscoveryFilterTag struct {
	// Freeform tag key.
	Key string `pulumi:"key"`
	// Defined tag namespace.
	Namespace *string `pulumi:"namespace"`
	// Freeform tag value.
	Value string `pulumi:"value"`
}

// FsuCollectionFleetDiscoveryFilterTagInput is an input type that accepts FsuCollectionFleetDiscoveryFilterTagArgs and FsuCollectionFleetDiscoveryFilterTagOutput values.
// You can construct a concrete instance of `FsuCollectionFleetDiscoveryFilterTagInput` via:
//
//	FsuCollectionFleetDiscoveryFilterTagArgs{...}
type FsuCollectionFleetDiscoveryFilterTagInput interface {
	pulumi.Input

	ToFsuCollectionFleetDiscoveryFilterTagOutput() FsuCollectionFleetDiscoveryFilterTagOutput
	ToFsuCollectionFleetDiscoveryFilterTagOutputWithContext(context.Context) FsuCollectionFleetDiscoveryFilterTagOutput
}

type FsuCollectionFleetDiscoveryFilterTagArgs struct {
	// Freeform tag key.
	Key pulumi.StringInput `pulumi:"key"`
	// Defined tag namespace.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Freeform tag value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FsuCollectionFleetDiscoveryFilterTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FsuCollectionFleetDiscoveryFilterTag)(nil)).Elem()
}

func (i FsuCollectionFleetDiscoveryFilterTagArgs) ToFsuCollectionFleetDiscoveryFilterTagOutput() FsuCollectionFleetDiscoveryFilterTagOutput {
	return i.ToFsuCollectionFleetDiscoveryFilterTagOutputWithContext(context.Background())
}

func (i FsuCollectionFleetDiscoveryFilterTagArgs) ToFsuCollectionFleetDiscoveryFilterTagOutputWithContext(ctx context.Context) FsuCollectionFleetDiscoveryFilterTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FsuCollectionFleetDiscoveryFilterTagOutput)
}

// FsuCollectionFleetDiscoveryFilterTagArrayInput is an input type that accepts FsuCollectionFleetDiscoveryFilterTagArray and FsuCollectionFleetDiscoveryFilterTagArrayOutput values.
// You can construct a concrete instance of `FsuCollectionFleetDiscoveryFilterTagArrayInput` via:
//
//	FsuCollectionFleetDiscoveryFilterTagArray{ FsuCollectionFleetDiscoveryFilterTagArgs{...} }
type FsuCollectionFleetDiscoveryFilterTagArrayInput interface {
	pulumi.Input

	ToFsuCollectionFleetDiscoveryFilterTagArrayOutput() FsuCollectionFleetDiscoveryFilterTagArrayOutput
	ToFsuCollectionFleetDiscoveryFilterTagArrayOutputWithContext(context.Context) FsuCollectionFleetDiscoveryFilterTagArrayOutput
}

type FsuCollectionFleetDiscoveryFilterTagArray []FsuCollectionFleetDiscoveryFilterTagInput

func (FsuCollectionFleetDiscoveryFilterTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FsuCollectionFleetDiscoveryFilterTag)(nil)).Elem()
}

func (i FsuCollectionFleetDiscoveryFilterTagArray) ToFsuCollectionFleetDiscoveryFilterTagArrayOutput() FsuCollectionFleetDiscoveryFilterTagArrayOutput {
	return i.ToFsuCollectionFleetDiscoveryFilterTagArrayOutputWithContext(context.Background())
}

func (i FsuCollectionFleetDiscoveryFilterTagArray) ToFsuCollectionFleetDiscoveryFilterTagArrayOutputWithContext(ctx context.Context) FsuCollectionFleetDiscoveryFilterTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FsuCollectionFleetDiscoveryFilterTagArrayOutput)
}

type FsuCollectionFleetDiscoveryFilterTagOutput struct{ *pulumi.OutputState }

func (FsuCollectionFleetDiscoveryFilterTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FsuCollectionFleetDiscoveryFilterTag)(nil)).Elem()
}

func (o FsuCollectionFleetDiscoveryFilterTagOutput) ToFsuCollectionFleetDiscoveryFilterTagOutput() FsuCollectionFleetDiscoveryFilterTagOutput {
	return o
}

func (o FsuCollectionFleetDiscoveryFilterTagOutput) ToFsuCollectionFleetDiscoveryFilterTagOutputWithContext(ctx context.Context) FsuCollectionFleetDiscoveryFilterTagOutput {
	return o
}

// Freeform tag key.
func (o FsuCollectionFleetDiscoveryFilterTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v FsuCollectionFleetDiscoveryFilterTag) string { return v.Key }).(pulumi.StringOutput)
}

// Defined tag namespace.
func (o FsuCollectionFleetDiscoveryFilterTagOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FsuCollectionFleetDiscoveryFilterTag) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Freeform tag value.
func (o FsuCollectionFleetDiscoveryFilterTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FsuCollectionFleetDiscoveryFilterTag) string { return v.Value }).(pulumi.StringOutput)
}

type FsuCollectionFleetDiscoveryFilterTagArrayOutput struct{ *pulumi.OutputState }

func (FsuCollectionFleetDiscoveryFilterTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FsuCollectionFleetDiscoveryFilterTag)(nil)).Elem()
}

func (o FsuCollectionFleetDiscoveryFilterTagArrayOutput) ToFsuCollectionFleetDiscoveryFilterTagArrayOutput() FsuCollectionFleetDiscoveryFilterTagArrayOutput {
	return o
}

func (o FsuCollectionFleetDiscoveryFilterTagArrayOutput) ToFsuCollectionFleetDiscoveryFilterTagArrayOutputWithContext(ctx context.Context) FsuCollectionFleetDiscoveryFilterTagArrayOutput {
	return o
}

func (o FsuCollectionFleetDiscoveryFilterTagArrayOutput) Index(i pulumi.IntInput) FsuCollectionFleetDiscoveryFilterTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FsuCollectionFleetDiscoveryFilterTag {
		return vs[0].([]FsuCollectionFleetDiscoveryFilterTag)[vs[1].(int)]
	}).(FsuCollectionFleetDiscoveryFilterTagOutput)
}

type FsuCycleApplyActionSchedule struct {
	// The date and time the Exadata Fleet Update Action is expected to start. [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeToStart string `pulumi:"timeToStart"`
	// Type of scheduling strategy to use for Fleet Patching Update Action execution.
	Type string `pulumi:"type"`
}

// FsuCycleApplyActionScheduleInput is an input type that accepts FsuCycleApplyActionScheduleArgs and FsuCycleApplyActionScheduleOutput values.
// You can construct a concrete instance of `FsuCycleApplyActionScheduleInput` via:
//
//	FsuCycleApplyActionScheduleArgs{...}
type FsuCycleApplyActionScheduleInput interface {
	pulumi.Input

	ToFsuCycleApplyActionScheduleOutput() FsuCycleApplyActionScheduleOutput
	ToFsuCycleApplyActionScheduleOutputWithContext(context.Context) FsuCycleApplyActionScheduleOutput
}

type FsuCycleApplyActionScheduleArgs struct {
	// The date and time the Exadata Fleet Update Action is expected to start. [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeToStart pulumi.StringInput `pulumi:"timeToStart"`
	// Type of scheduling strategy to use for Fleet Patching Update Action execution.
	Type pulumi.StringInput `pulumi:"type"`
}

func (FsuCycleApplyActionScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FsuCycleApplyActionSchedule)(nil)).Elem()
}

func (i FsuCycleApplyActionScheduleArgs) ToFsuCycleApplyActionScheduleOutput() FsuCycleApplyActionScheduleOutput {
	return i.ToFsuCycleApplyActionScheduleOutputWithContext(context.Background())
}

func (i FsuCycleApplyActionScheduleArgs) ToFsuCycleApplyActionScheduleOutputWithContext(ctx context.Context) FsuCycleApplyActionScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FsuCycleApplyActionScheduleOutput)
}

func (i FsuCycleApplyActionScheduleArgs) ToFsuCycleApplyActionSchedulePtrOutput() FsuCycleApplyActionSchedulePtrOutput {
	return i.ToFsuCycleApplyActionSchedulePtrOutputWithContext(context.Background())
}

func (i FsuCycleApplyActionScheduleArgs) ToFsuCycleApplyActionSchedulePtrOutputWithContext(ctx context.Context) FsuCycleApplyActionSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FsuCycleApplyActionScheduleOutput).ToFsuCycleApplyActionSchedulePtrOutputWithContext(ctx)
}

// FsuCycleApplyActionSchedulePtrInput is an input type that accepts FsuCycleApplyActionScheduleArgs, FsuCycleApplyActionSchedulePtr and FsuCycleApplyActionSchedulePtrOutput values.
// You can construct a concrete instance of `FsuCycleApplyActionSchedulePtrInput` via:
//
//	        FsuCycleApplyActionScheduleArgs{...}
//
//	or:
//
//	        nil
type FsuCycleApplyActionSchedulePtrInput interface {
	pulumi.Input

	ToFsuCycleApplyActionSchedulePtrOutput() FsuCycleApplyActionSchedulePtrOutput
	ToFsuCycleApplyActionSchedulePtrOutputWithContext(context.Context) FsuCycleApplyActionSchedulePtrOutput
}

type fsuCycleApplyActionSchedulePtrType FsuCycleApplyActionScheduleArgs

func FsuCycleApplyActionSchedulePtr(v *FsuCycleApplyActionScheduleArgs) FsuCycleApplyActionSchedulePtrInput {
	return (*fsuCycleApplyActionSchedulePtrType)(v)
}

func (*fsuCycleApplyActionSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FsuCycleApplyActionSchedule)(nil)).Elem()
}

func (i *fsuCycleApplyActionSchedulePtrType) ToFsuCycleApplyActionSchedulePtrOutput() FsuCycleApplyActionSchedulePtrOutput {
	return i.ToFsuCycleApplyActionSchedulePtrOutputWithContext(context.Background())
}

func (i *fsuCycleApplyActionSchedulePtrType) ToFsuCycleApplyActionSchedulePtrOutputWithContext(ctx context.Context) FsuCycleApplyActionSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FsuCycleApplyActionSchedulePtrOutput)
}

type FsuCycleApplyActionScheduleOutput struct{ *pulumi.OutputState }

func (FsuCycleApplyActionScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FsuCycleApplyActionSchedule)(nil)).Elem()
}

func (o FsuCycleApplyActionScheduleOutput) ToFsuCycleApplyActionScheduleOutput() FsuCycleApplyActionScheduleOutput {
	return o
}

func (o FsuCycleApplyActionScheduleOutput) ToFsuCycleApplyActionScheduleOutputWithContext(ctx context.Context) FsuCycleApplyActionScheduleOutput {
	return o
}

func (o FsuCycleApplyActionScheduleOutput) ToFsuCycleApplyActionSchedulePtrOutput() FsuCycleApplyActionSchedulePtrOutput {
	return o.ToFsuCycleApplyActionSchedulePtrOutputWithContext(context.Background())
}

func (o FsuCycleApplyActionScheduleOutput) ToFsuCycleApplyActionSchedulePtrOutputWithContext(ctx context.Context) FsuCycleApplyActionSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FsuCycleApplyActionSchedule) *FsuCycleApplyActionSchedule {
		return &v
	}).(FsuCycleApplyActionSchedulePtrOutput)
}

// The date and time the Exadata Fleet Update Action is expected to start. [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
func (o FsuCycleApplyActionScheduleOutput) TimeToStart() pulumi.StringOutput {
	return o.ApplyT(func(v FsuCycleApplyActionSchedule) string { return v.TimeToStart }).(pulumi.StringOutput)
}

// Type of scheduling strategy to use for Fleet Patching Update Action execution.
func (o FsuCycleApplyActionScheduleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FsuCycleApplyActionSchedule) string { return v.Type }).(pulumi.StringOutput)
}

type FsuCycleApplyActionSchedulePtrOutput struct{ *pulumi.OutputState }

func (FsuCycleApplyActionSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FsuCycleApplyActionSchedule)(nil)).Elem()
}

func (o FsuCycleApplyActionSchedulePtrOutput) ToFsuCycleApplyActionSchedulePtrOutput() FsuCycleApplyActionSchedulePtrOutput {
	return o
}

func (o FsuCycleApplyActionSchedulePtrOutput) ToFsuCycleApplyActionSchedulePtrOutputWithContext(ctx context.Context) FsuCycleApplyActionSchedulePtrOutput {
	return o
}

func (o FsuCycleApplyActionSchedulePtrOutput) Elem() FsuCycleApplyActionScheduleOutput {
	return o.ApplyT(func(v *FsuCycleApplyActionSchedule) FsuCycleApplyActionSchedule {
		if v != nil {
			return *v
		}
		var ret FsuCycleApplyActionSchedule
		return ret
	}).(FsuCycleApplyActionScheduleOutput)
}

// The date and time the Exadata Fleet Update Action is expected to start. [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
func (o FsuCycleApplyActionSchedulePtrOutput) TimeToStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FsuCycleApplyActionSchedule) *string {
		if v == nil {
			return nil
		}
		return &v.TimeToStart
	}).(pulumi.StringPtrOutput)
}

// Type of scheduling strategy to use for Fleet Patching Update Action execution.
func (o FsuCycleApplyActionSchedulePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FsuCycleApplyActionSchedule) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type FsuCycleBatchingStrategy struct {
	// (Updatable) True to force rolling patching.
	IsForceRolling *bool `pulumi:"isForceRolling"`
	// (Updatable) True to wait for customer to resume the Apply Action once the first half is done. False to automatically patch the second half.
	IsWaitForBatchResume *bool `pulumi:"isWaitForBatchResume"`
	// (Updatable) Percentage of availability in the service during the Patch operation.
	Percentage *int `pulumi:"percentage"`
	// (Updatable) Supported batching strategies.
	Type *string `pulumi:"type"`
}

// FsuCycleBatchingStrategyInput is an input type that accepts FsuCycleBatchingStrategyArgs and FsuCycleBatchingStrategyOutput values.
// You can construct a concrete instance of `FsuCycleBatchingStrategyInput` via:
//
//	FsuCycleBatchingStrategyArgs{...}
type FsuCycleBatchingStrategyInput interface {
	pulumi.Input

	ToFsuCycleBatchingStrategyOutput() FsuCycleBatchingStrategyOutput
	ToFsuCycleBatchingStrategyOutputWithContext(context.Context) FsuCycleBatchingStrategyOutput
}

type FsuCycleBatchingStrategyArgs struct {
	// (Updatable) True to force rolling patching.
	IsForceRolling pulumi.BoolPtrInput `pulumi:"isForceRolling"`
	// (Updatable) True to wait for customer to resume the Apply Action once the first half is done. False to automatically patch the second half.
	IsWaitForBatchResume pulumi.BoolPtrInput `pulumi:"isWaitForBatchResume"`
	// (Updatable) Percentage of availability in the service during the Patch operation.
	Percentage pulumi.IntPtrInput `pulumi:"percentage"`
	// (Updatable) Supported batching strategies.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (FsuCycleBatchingStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FsuCycleBatchingStrategy)(nil)).Elem()
}

func (i FsuCycleBatchingStrategyArgs) ToFsuCycleBatchingStrategyOutput() FsuCycleBatchingStrategyOutput {
	return i.ToFsuCycleBatchingStrategyOutputWithContext(context.Background())
}

func (i FsuCycleBatchingStrategyArgs) ToFsuCycleBatchingStrategyOutputWithContext(ctx context.Context) FsuCycleBatchingStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FsuCycleBatchingStrategyOutput)
}

func (i FsuCycleBatchingStrategyArgs) ToFsuCycleBatchingStrategyPtrOutput() FsuCycleBatchingStrategyPtrOutput {
	return i.ToFsuCycleBatchingStrategyPtrOutputWithContext(context.Background())
}

func (i FsuCycleBatchingStrategyArgs) ToFsuCycleBatchingStrategyPtrOutputWithContext(ctx context.Context) FsuCycleBatchingStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FsuCycleBatchingStrategyOutput).ToFsuCycleBatchingStrategyPtrOutputWithContext(ctx)
}

// FsuCycleBatchingStrategyPtrInput is an input type that accepts FsuCycleBatchingStrategyArgs, FsuCycleBatchingStrategyPtr and FsuCycleBatchingStrategyPtrOutput values.
// You can construct a concrete instance of `FsuCycleBatchingStrategyPtrInput` via:
//
//	        FsuCycleBatchingStrategyArgs{...}
//
//	or:
//
//	        nil
type FsuCycleBatchingStrategyPtrInput interface {
	pulumi.Input

	ToFsuCycleBatchingStrategyPtrOutput() FsuCycleBatchingStrategyPtrOutput
	ToFsuCycleBatchingStrategyPtrOutputWithContext(context.Context) FsuCycleBatchingStrategyPtrOutput
}

type fsuCycleBatchingStrategyPtrType FsuCycleBatchingStrategyArgs

func FsuCycleBatchingStrategyPtr(v *FsuCycleBatchingStrategyArgs) FsuCycleBatchingStrategyPtrInput {
	return (*fsuCycleBatchingStrategyPtrType)(v)
}

func (*fsuCycleBatchingStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FsuCycleBatchingStrategy)(nil)).Elem()
}

func (i *fsuCycleBatchingStrategyPtrType) ToFsuCycleBatchingStrategyPtrOutput() FsuCycleBatchingStrategyPtrOutput {
	return i.ToFsuCycleBatchingStrategyPtrOutputWithContext(context.Background())
}

func (i *fsuCycleBatchingStrategyPtrType) ToFsuCycleBatchingStrategyPtrOutputWithContext(ctx context.Context) FsuCycleBatchingStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FsuCycleBatchingStrategyPtrOutput)
}

type FsuCycleBatchingStrategyOutput struct{ *pulumi.OutputState }

func (FsuCycleBatchingStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FsuCycleBatchingStrategy)(nil)).Elem()
}

func (o FsuCycleBatchingStrategyOutput) ToFsuCycleBatchingStrategyOutput() FsuCycleBatchingStrategyOutput {
	return o
}

func (o FsuCycleBatchingStrategyOutput) ToFsuCycleBatchingStrategyOutputWithContext(ctx context.Context) FsuCycleBatchingStrategyOutput {
	return o
}

func (o FsuCycleBatchingStrategyOutput) ToFsuCycleBatchingStrategyPtrOutput() FsuCycleBatchingStrategyPtrOutput {
	return o.ToFsuCycleBatchingStrategyPtrOutputWithContext(context.Background())
}

func (o FsuCycleBatchingStrategyOutput) ToFsuCycleBatchingStrategyPtrOutputWithContext(ctx context.Context) FsuCycleBatchingStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FsuCycleBatchingStrategy) *FsuCycleBatchingStrategy {
		return &v
	}).(FsuCycleBatchingStrategyPtrOutput)
}

// (Updatable) True to force rolling patching.
func (o FsuCycleBatchingStrategyOutput) IsForceRolling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FsuCycleBatchingStrategy) *bool { return v.IsForceRolling }).(pulumi.BoolPtrOutput)
}

// (Updatable) True to wait for customer to resume the Apply Action once the first half is done. False to automatically patch the second half.
func (o FsuCycleBatchingStrategyOutput) IsWaitForBatchResume() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FsuCycleBatchingStrategy) *bool { return v.IsWaitForBatchResume }).(pulumi.BoolPtrOutput)
}

// (Updatable) Percentage of availability in the service during the Patch operation.
func (o FsuCycleBatchingStrategyOutput) Percentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FsuCycleBatchingStrategy) *int { return v.Percentage }).(pulumi.IntPtrOutput)
}

// (Updatable) Supported batching strategies.
func (o FsuCycleBatchingStrategyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FsuCycleBatchingStrategy) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type FsuCycleBatchingStrategyPtrOutput struct{ *pulumi.OutputState }

func (FsuCycleBatchingStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FsuCycleBatchingStrategy)(nil)).Elem()
}

func (o FsuCycleBatchingStrategyPtrOutput) ToFsuCycleBatchingStrategyPtrOutput() FsuCycleBatchingStrategyPtrOutput {
	return o
}

func (o FsuCycleBatchingStrategyPtrOutput) ToFsuCycleBatchingStrategyPtrOutputWithContext(ctx context.Context) FsuCycleBatchingStrategyPtrOutput {
	return o
}

func (o FsuCycleBatchingStrategyPtrOutput) Elem() FsuCycleBatchingStrategyOutput {
	return o.ApplyT(func(v *FsuCycleBatchingStrategy) FsuCycleBatchingStrategy {
		if v != nil {
			return *v
		}
		var ret FsuCycleBatchingStrategy
		return ret
	}).(FsuCycleBatchingStrategyOutput)
}

// (Updatable) True to force rolling patching.
func (o FsuCycleBatchingStrategyPtrOutput) IsForceRolling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FsuCycleBatchingStrategy) *bool {
		if v == nil {
			return nil
		}
		return v.IsForceRolling
	}).(pulumi.BoolPtrOutput)
}

// (Updatable) True to wait for customer to resume the Apply Action once the first half is done. False to automatically patch the second half.
func (o FsuCycleBatchingStrategyPtrOutput) IsWaitForBatchResume() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FsuCycleBatchingStrategy) *bool {
		if v == nil {
			return nil
		}
		return v.IsWaitForBatchResume
	}).(pulumi.BoolPtrOutput)
}

// (Updatable) Percentage of availability in the service during the Patch operation.
func (o FsuCycleBatchingStrategyPtrOutput) Percentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FsuCycleBatchingStrategy) *int {
		if v == nil {
			return nil
		}
		return v.Percentage
	}).(pulumi.IntPtrOutput)
}

// (Updatable) Supported batching strategies.
func (o FsuCycleBatchingStrategyPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FsuCycleBatchingStrategy) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type FsuCycleDiagnosticsCollection struct {
	// (Updatable) Enable incident logs and trace collection.  Allow Oracle to collect incident logs and traces to enable fault diagnosis and issue resolution according to the selected mode.
	LogCollectionMode *string `pulumi:"logCollectionMode"`
}

// FsuCycleDiagnosticsCollectionInput is an input type that accepts FsuCycleDiagnosticsCollectionArgs and FsuCycleDiagnosticsCollectionOutput values.
// You can construct a concrete instance of `FsuCycleDiagnosticsCollectionInput` via:
//
//	FsuCycleDiagnosticsCollectionArgs{...}
type FsuCycleDiagnosticsCollectionInput interface {
	pulumi.Input

	ToFsuCycleDiagnosticsCollectionOutput() FsuCycleDiagnosticsCollectionOutput
	ToFsuCycleDiagnosticsCollectionOutputWithContext(context.Context) FsuCycleDiagnosticsCollectionOutput
}

type FsuCycleDiagnosticsCollectionArgs struct {
	// (Updatable) Enable incident logs and trace collection.  Allow Oracle to collect incident logs and traces to enable fault diagnosis and issue resolution according to the selected mode.
	LogCollectionMode pulumi.StringPtrInput `pulumi:"logCollectionMode"`
}

func (FsuCycleDiagnosticsCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FsuCycleDiagnosticsCollection)(nil)).Elem()
}

func (i FsuCycleDiagnosticsCollectionArgs) ToFsuCycleDiagnosticsCollectionOutput() FsuCycleDiagnosticsCollectionOutput {
	return i.ToFsuCycleDiagnosticsCollectionOutputWithContext(context.Background())
}

func (i FsuCycleDiagnosticsCollectionArgs) ToFsuCycleDiagnosticsCollectionOutputWithContext(ctx context.Context) FsuCycleDiagnosticsCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FsuCycleDiagnosticsCollectionOutput)
}

func (i FsuCycleDiagnosticsCollectionArgs) ToFsuCycleDiagnosticsCollectionPtrOutput() FsuCycleDiagnosticsCollectionPtrOutput {
	return i.ToFsuCycleDiagnosticsCollectionPtrOutputWithContext(context.Background())
}

func (i FsuCycleDiagnosticsCollectionArgs) ToFsuCycleDiagnosticsCollectionPtrOutputWithContext(ctx context.Context) FsuCycleDiagnosticsCollectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FsuCycleDiagnosticsCollectionOutput).ToFsuCycleDiagnosticsCollectionPtrOutputWithContext(ctx)
}

// FsuCycleDiagnosticsCollectionPtrInput is an input type that accepts FsuCycleDiagnosticsCollectionArgs, FsuCycleDiagnosticsCollectionPtr and FsuCycleDiagnosticsCollectionPtrOutput values.
// You can construct a concrete instance of `FsuCycleDiagnosticsCollectionPtrInput` via:
//
//	        FsuCycleDiagnosticsCollectionArgs{...}
//
//	or:
//
//	        nil
type FsuCycleDiagnosticsCollectionPtrInput interface {
	pulumi.Input

	ToFsuCycleDiagnosticsCollectionPtrOutput() FsuCycleDiagnosticsCollectionPtrOutput
	ToFsuCycleDiagnosticsCollectionPtrOutputWithContext(context.Context) FsuCycleDiagnosticsCollectionPtrOutput
}

type fsuCycleDiagnosticsCollectionPtrType FsuCycleDiagnosticsCollectionArgs

func FsuCycleDiagnosticsCollectionPtr(v *FsuCycleDiagnosticsCollectionArgs) FsuCycleDiagnosticsCollectionPtrInput {
	return (*fsuCycleDiagnosticsCollectionPtrType)(v)
}

func (*fsuCycleDiagnosticsCollectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FsuCycleDiagnosticsCollection)(nil)).Elem()
}

func (i *fsuCycleDiagnosticsCollectionPtrType) ToFsuCycleDiagnosticsCollectionPtrOutput() FsuCycleDiagnosticsCollectionPtrOutput {
	return i.ToFsuCycleDiagnosticsCollectionPtrOutputWithContext(context.Background())
}

func (i *fsuCycleDiagnosticsCollectionPtrType) ToFsuCycleDiagnosticsCollectionPtrOutputWithContext(ctx context.Context) FsuCycleDiagnosticsCollectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FsuCycleDiagnosticsCollectionPtrOutput)
}

type FsuCycleDiagnosticsCollectionOutput struct{ *pulumi.OutputState }

func (FsuCycleDiagnosticsCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FsuCycleDiagnosticsCollection)(nil)).Elem()
}

func (o FsuCycleDiagnosticsCollectionOutput) ToFsuCycleDiagnosticsCollectionOutput() FsuCycleDiagnosticsCollectionOutput {
	return o
}

func (o FsuCycleDiagnosticsCollectionOutput) ToFsuCycleDiagnosticsCollectionOutputWithContext(ctx context.Context) FsuCycleDiagnosticsCollectionOutput {
	return o
}

func (o FsuCycleDiagnosticsCollectionOutput) ToFsuCycleDiagnosticsCollectionPtrOutput() FsuCycleDiagnosticsCollectionPtrOutput {
	return o.ToFsuCycleDiagnosticsCollectionPtrOutputWithContext(context.Background())
}

func (o FsuCycleDiagnosticsCollectionOutput) ToFsuCycleDiagnosticsCollectionPtrOutputWithContext(ctx context.Context) FsuCycleDiagnosticsCollectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FsuCycleDiagnosticsCollection) *FsuCycleDiagnosticsCollection {
		return &v
	}).(FsuCycleDiagnosticsCollectionPtrOutput)
}

// (Updatable) Enable incident logs and trace collection.  Allow Oracle to collect incident logs and traces to enable fault diagnosis and issue resolution according to the selected mode.
func (o FsuCycleDiagnosticsCollectionOutput) LogCollectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FsuCycleDiagnosticsCollection) *string { return v.LogCollectionMode }).(pulumi.StringPtrOutput)
}

type FsuCycleDiagnosticsCollectionPtrOutput struct{ *pulumi.OutputState }

func (FsuCycleDiagnosticsCollectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FsuCycleDiagnosticsCollection)(nil)).Elem()
}

func (o FsuCycleDiagnosticsCollectionPtrOutput) ToFsuCycleDiagnosticsCollectionPtrOutput() FsuCycleDiagnosticsCollectionPtrOutput {
	return o
}

func (o FsuCycleDiagnosticsCollectionPtrOutput) ToFsuCycleDiagnosticsCollectionPtrOutputWithContext(ctx context.Context) FsuCycleDiagnosticsCollectionPtrOutput {
	return o
}

func (o FsuCycleDiagnosticsCollectionPtrOutput) Elem() FsuCycleDiagnosticsCollectionOutput {
	return o.ApplyT(func(v *FsuCycleDiagnosticsCollection) FsuCycleDiagnosticsCollection {
		if v != nil {
			return *v
		}
		var ret FsuCycleDiagnosticsCollection
		return ret
	}).(FsuCycleDiagnosticsCollectionOutput)
}

// (Updatable) Enable incident logs and trace collection.  Allow Oracle to collect incident logs and traces to enable fault diagnosis and issue resolution according to the selected mode.
func (o FsuCycleDiagnosticsCollectionPtrOutput) LogCollectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FsuCycleDiagnosticsCollection) *string {
		if v == nil {
			return nil
		}
		return v.LogCollectionMode
	}).(pulumi.StringPtrOutput)
}

type FsuCycleGoalVersionDetails struct {
	// (Updatable) Goal home policy to use when Staging the Goal Version during patching. CREATE_NEW: Create a new DBHome (for Database Collections) for the specified image or version. USE_EXISTING: All database targets in the same VMCluster or CloudVmCluster will be moved to a shared database home.  If an existing home for the selected image or version is not found in the VM Cluster for a target database, then a new home will be created.  If more than one existing home for the selected image is found, then the home with the least number of databases will be used.  If multiple homes have the least number of databases, then a home will be selected at random.
	HomePolicy *string `pulumi:"homePolicy"`
	// (Updatable) Prefix name used for new DB home resources created as part of the Stage Action. Format: <specified_prefix>_<timestamp> If not specified, a default Oracle Cloud Infrastructure DB home resource will be generated for the new DB home resources created.
	NewHomePrefix *string `pulumi:"newHomePrefix"`
	// (Updatable) Target database software image OCID.
	SoftwareImageId *string `pulumi:"softwareImageId"`
	// (Updatable) Type of goal target version specified
	Type string `pulumi:"type"`
	// (Updatable) Target DB or GI version string for the Exadata Fleet Update Cycle.
	Version *string `pulumi:"version"`
}

// FsuCycleGoalVersionDetailsInput is an input type that accepts FsuCycleGoalVersionDetailsArgs and FsuCycleGoalVersionDetailsOutput values.
// You can construct a concrete instance of `FsuCycleGoalVersionDetailsInput` via:
//
//	FsuCycleGoalVersionDetailsArgs{...}
type FsuCycleGoalVersionDetailsInput interface {
	pulumi.Input

	ToFsuCycleGoalVersionDetailsOutput() FsuCycleGoalVersionDetailsOutput
	ToFsuCycleGoalVersionDetailsOutputWithContext(context.Context) FsuCycleGoalVersionDetailsOutput
}

type FsuCycleGoalVersionDetailsArgs struct {
	// (Updatable) Goal home policy to use when Staging the Goal Version during patching. CREATE_NEW: Create a new DBHome (for Database Collections) for the specified image or version. USE_EXISTING: All database targets in the same VMCluster or CloudVmCluster will be moved to a shared database home.  If an existing home for the selected image or version is not found in the VM Cluster for a target database, then a new home will be created.  If more than one existing home for the selected image is found, then the home with the least number of databases will be used.  If multiple homes have the least number of databases, then a home will be selected at random.
	HomePolicy pulumi.StringPtrInput `pulumi:"homePolicy"`
	// (Updatable) Prefix name used for new DB home resources created as part of the Stage Action. Format: <specified_prefix>_<timestamp> If not specified, a default Oracle Cloud Infrastructure DB home resource will be generated for the new DB home resources created.
	NewHomePrefix pulumi.StringPtrInput `pulumi:"newHomePrefix"`
	// (Updatable) Target database software image OCID.
	SoftwareImageId pulumi.StringPtrInput `pulumi:"softwareImageId"`
	// (Updatable) Type of goal target version specified
	Type pulumi.StringInput `pulumi:"type"`
	// (Updatable) Target DB or GI version string for the Exadata Fleet Update Cycle.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (FsuCycleGoalVersionDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FsuCycleGoalVersionDetails)(nil)).Elem()
}

func (i FsuCycleGoalVersionDetailsArgs) ToFsuCycleGoalVersionDetailsOutput() FsuCycleGoalVersionDetailsOutput {
	return i.ToFsuCycleGoalVersionDetailsOutputWithContext(context.Background())
}

func (i FsuCycleGoalVersionDetailsArgs) ToFsuCycleGoalVersionDetailsOutputWithContext(ctx context.Context) FsuCycleGoalVersionDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FsuCycleGoalVersionDetailsOutput)
}

func (i FsuCycleGoalVersionDetailsArgs) ToFsuCycleGoalVersionDetailsPtrOutput() FsuCycleGoalVersionDetailsPtrOutput {
	return i.ToFsuCycleGoalVersionDetailsPtrOutputWithContext(context.Background())
}

func (i FsuCycleGoalVersionDetailsArgs) ToFsuCycleGoalVersionDetailsPtrOutputWithContext(ctx context.Context) FsuCycleGoalVersionDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FsuCycleGoalVersionDetailsOutput).ToFsuCycleGoalVersionDetailsPtrOutputWithContext(ctx)
}

// FsuCycleGoalVersionDetailsPtrInput is an input type that accepts FsuCycleGoalVersionDetailsArgs, FsuCycleGoalVersionDetailsPtr and FsuCycleGoalVersionDetailsPtrOutput values.
// You can construct a concrete instance of `FsuCycleGoalVersionDetailsPtrInput` via:
//
//	        FsuCycleGoalVersionDetailsArgs{...}
//
//	or:
//
//	        nil
type FsuCycleGoalVersionDetailsPtrInput interface {
	pulumi.Input

	ToFsuCycleGoalVersionDetailsPtrOutput() FsuCycleGoalVersionDetailsPtrOutput
	ToFsuCycleGoalVersionDetailsPtrOutputWithContext(context.Context) FsuCycleGoalVersionDetailsPtrOutput
}

type fsuCycleGoalVersionDetailsPtrType FsuCycleGoalVersionDetailsArgs

func FsuCycleGoalVersionDetailsPtr(v *FsuCycleGoalVersionDetailsArgs) FsuCycleGoalVersionDetailsPtrInput {
	return (*fsuCycleGoalVersionDetailsPtrType)(v)
}

func (*fsuCycleGoalVersionDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FsuCycleGoalVersionDetails)(nil)).Elem()
}

func (i *fsuCycleGoalVersionDetailsPtrType) ToFsuCycleGoalVersionDetailsPtrOutput() FsuCycleGoalVersionDetailsPtrOutput {
	return i.ToFsuCycleGoalVersionDetailsPtrOutputWithContext(context.Background())
}

func (i *fsuCycleGoalVersionDetailsPtrType) ToFsuCycleGoalVersionDetailsPtrOutputWithContext(ctx context.Context) FsuCycleGoalVersionDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FsuCycleGoalVersionDetailsPtrOutput)
}

type FsuCycleGoalVersionDetailsOutput struct{ *pulumi.OutputState }

func (FsuCycleGoalVersionDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FsuCycleGoalVersionDetails)(nil)).Elem()
}

func (o FsuCycleGoalVersionDetailsOutput) ToFsuCycleGoalVersionDetailsOutput() FsuCycleGoalVersionDetailsOutput {
	return o
}

func (o FsuCycleGoalVersionDetailsOutput) ToFsuCycleGoalVersionDetailsOutputWithContext(ctx context.Context) FsuCycleGoalVersionDetailsOutput {
	return o
}

func (o FsuCycleGoalVersionDetailsOutput) ToFsuCycleGoalVersionDetailsPtrOutput() FsuCycleGoalVersionDetailsPtrOutput {
	return o.ToFsuCycleGoalVersionDetailsPtrOutputWithContext(context.Background())
}

func (o FsuCycleGoalVersionDetailsOutput) ToFsuCycleGoalVersionDetailsPtrOutputWithContext(ctx context.Context) FsuCycleGoalVersionDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FsuCycleGoalVersionDetails) *FsuCycleGoalVersionDetails {
		return &v
	}).(FsuCycleGoalVersionDetailsPtrOutput)
}

// (Updatable) Goal home policy to use when Staging the Goal Version during patching. CREATE_NEW: Create a new DBHome (for Database Collections) for the specified image or version. USE_EXISTING: All database targets in the same VMCluster or CloudVmCluster will be moved to a shared database home.  If an existing home for the selected image or version is not found in the VM Cluster for a target database, then a new home will be created.  If more than one existing home for the selected image is found, then the home with the least number of databases will be used.  If multiple homes have the least number of databases, then a home will be selected at random.
func (o FsuCycleGoalVersionDetailsOutput) HomePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FsuCycleGoalVersionDetails) *string { return v.HomePolicy }).(pulumi.StringPtrOutput)
}

// (Updatable) Prefix name used for new DB home resources created as part of the Stage Action. Format: <specified_prefix>_<timestamp> If not specified, a default Oracle Cloud Infrastructure DB home resource will be generated for the new DB home resources created.
func (o FsuCycleGoalVersionDetailsOutput) NewHomePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FsuCycleGoalVersionDetails) *string { return v.NewHomePrefix }).(pulumi.StringPtrOutput)
}

// (Updatable) Target database software image OCID.
func (o FsuCycleGoalVersionDetailsOutput) SoftwareImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FsuCycleGoalVersionDetails) *string { return v.SoftwareImageId }).(pulumi.StringPtrOutput)
}

// (Updatable) Type of goal target version specified
func (o FsuCycleGoalVersionDetailsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FsuCycleGoalVersionDetails) string { return v.Type }).(pulumi.StringOutput)
}

// (Updatable) Target DB or GI version string for the Exadata Fleet Update Cycle.
func (o FsuCycleGoalVersionDetailsOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FsuCycleGoalVersionDetails) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type FsuCycleGoalVersionDetailsPtrOutput struct{ *pulumi.OutputState }

func (FsuCycleGoalVersionDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FsuCycleGoalVersionDetails)(nil)).Elem()
}

func (o FsuCycleGoalVersionDetailsPtrOutput) ToFsuCycleGoalVersionDetailsPtrOutput() FsuCycleGoalVersionDetailsPtrOutput {
	return o
}

func (o FsuCycleGoalVersionDetailsPtrOutput) ToFsuCycleGoalVersionDetailsPtrOutputWithContext(ctx context.Context) FsuCycleGoalVersionDetailsPtrOutput {
	return o
}

func (o FsuCycleGoalVersionDetailsPtrOutput) Elem() FsuCycleGoalVersionDetailsOutput {
	return o.ApplyT(func(v *FsuCycleGoalVersionDetails) FsuCycleGoalVersionDetails {
		if v != nil {
			return *v
		}
		var ret FsuCycleGoalVersionDetails
		return ret
	}).(FsuCycleGoalVersionDetailsOutput)
}

// (Updatable) Goal home policy to use when Staging the Goal Version during patching. CREATE_NEW: Create a new DBHome (for Database Collections) for the specified image or version. USE_EXISTING: All database targets in the same VMCluster or CloudVmCluster will be moved to a shared database home.  If an existing home for the selected image or version is not found in the VM Cluster for a target database, then a new home will be created.  If more than one existing home for the selected image is found, then the home with the least number of databases will be used.  If multiple homes have the least number of databases, then a home will be selected at random.
func (o FsuCycleGoalVersionDetailsPtrOutput) HomePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FsuCycleGoalVersionDetails) *string {
		if v == nil {
			return nil
		}
		return v.HomePolicy
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Prefix name used for new DB home resources created as part of the Stage Action. Format: <specified_prefix>_<timestamp> If not specified, a default Oracle Cloud Infrastructure DB home resource will be generated for the new DB home resources created.
func (o FsuCycleGoalVersionDetailsPtrOutput) NewHomePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FsuCycleGoalVersionDetails) *string {
		if v == nil {
			return nil
		}
		return v.NewHomePrefix
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Target database software image OCID.
func (o FsuCycleGoalVersionDetailsPtrOutput) SoftwareImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FsuCycleGoalVersionDetails) *string {
		if v == nil {
			return nil
		}
		return v.SoftwareImageId
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Type of goal target version specified
func (o FsuCycleGoalVersionDetailsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FsuCycleGoalVersionDetails) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Target DB or GI version string for the Exadata Fleet Update Cycle.
func (o FsuCycleGoalVersionDetailsPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FsuCycleGoalVersionDetails) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type FsuCycleNextActionToExecute struct {
	// The date and time the Exadata Fleet Update Action is expected to start. [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeToStart *string `pulumi:"timeToStart"`
	// (Updatable) Type of Exadata Fleet Update Cycle.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Type *string `pulumi:"type"`
}

// FsuCycleNextActionToExecuteInput is an input type that accepts FsuCycleNextActionToExecuteArgs and FsuCycleNextActionToExecuteOutput values.
// You can construct a concrete instance of `FsuCycleNextActionToExecuteInput` via:
//
//	FsuCycleNextActionToExecuteArgs{...}
type FsuCycleNextActionToExecuteInput interface {
	pulumi.Input

	ToFsuCycleNextActionToExecuteOutput() FsuCycleNextActionToExecuteOutput
	ToFsuCycleNextActionToExecuteOutputWithContext(context.Context) FsuCycleNextActionToExecuteOutput
}

type FsuCycleNextActionToExecuteArgs struct {
	// The date and time the Exadata Fleet Update Action is expected to start. [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeToStart pulumi.StringPtrInput `pulumi:"timeToStart"`
	// (Updatable) Type of Exadata Fleet Update Cycle.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (FsuCycleNextActionToExecuteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FsuCycleNextActionToExecute)(nil)).Elem()
}

func (i FsuCycleNextActionToExecuteArgs) ToFsuCycleNextActionToExecuteOutput() FsuCycleNextActionToExecuteOutput {
	return i.ToFsuCycleNextActionToExecuteOutputWithContext(context.Background())
}

func (i FsuCycleNextActionToExecuteArgs) ToFsuCycleNextActionToExecuteOutputWithContext(ctx context.Context) FsuCycleNextActionToExecuteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FsuCycleNextActionToExecuteOutput)
}

// FsuCycleNextActionToExecuteArrayInput is an input type that accepts FsuCycleNextActionToExecuteArray and FsuCycleNextActionToExecuteArrayOutput values.
// You can construct a concrete instance of `FsuCycleNextActionToExecuteArrayInput` via:
//
//	FsuCycleNextActionToExecuteArray{ FsuCycleNextActionToExecuteArgs{...} }
type FsuCycleNextActionToExecuteArrayInput interface {
	pulumi.Input

	ToFsuCycleNextActionToExecuteArrayOutput() FsuCycleNextActionToExecuteArrayOutput
	ToFsuCycleNextActionToExecuteArrayOutputWithContext(context.Context) FsuCycleNextActionToExecuteArrayOutput
}

type FsuCycleNextActionToExecuteArray []FsuCycleNextActionToExecuteInput

func (FsuCycleNextActionToExecuteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FsuCycleNextActionToExecute)(nil)).Elem()
}

func (i FsuCycleNextActionToExecuteArray) ToFsuCycleNextActionToExecuteArrayOutput() FsuCycleNextActionToExecuteArrayOutput {
	return i.ToFsuCycleNextActionToExecuteArrayOutputWithContext(context.Background())
}

func (i FsuCycleNextActionToExecuteArray) ToFsuCycleNextActionToExecuteArrayOutputWithContext(ctx context.Context) FsuCycleNextActionToExecuteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FsuCycleNextActionToExecuteArrayOutput)
}

type FsuCycleNextActionToExecuteOutput struct{ *pulumi.OutputState }

func (FsuCycleNextActionToExecuteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FsuCycleNextActionToExecute)(nil)).Elem()
}

func (o FsuCycleNextActionToExecuteOutput) ToFsuCycleNextActionToExecuteOutput() FsuCycleNextActionToExecuteOutput {
	return o
}

func (o FsuCycleNextActionToExecuteOutput) ToFsuCycleNextActionToExecuteOutputWithContext(ctx context.Context) FsuCycleNextActionToExecuteOutput {
	return o
}

// The date and time the Exadata Fleet Update Action is expected to start. [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
func (o FsuCycleNextActionToExecuteOutput) TimeToStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FsuCycleNextActionToExecute) *string { return v.TimeToStart }).(pulumi.StringPtrOutput)
}

// (Updatable) Type of Exadata Fleet Update Cycle.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o FsuCycleNextActionToExecuteOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FsuCycleNextActionToExecute) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type FsuCycleNextActionToExecuteArrayOutput struct{ *pulumi.OutputState }

func (FsuCycleNextActionToExecuteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FsuCycleNextActionToExecute)(nil)).Elem()
}

func (o FsuCycleNextActionToExecuteArrayOutput) ToFsuCycleNextActionToExecuteArrayOutput() FsuCycleNextActionToExecuteArrayOutput {
	return o
}

func (o FsuCycleNextActionToExecuteArrayOutput) ToFsuCycleNextActionToExecuteArrayOutputWithContext(ctx context.Context) FsuCycleNextActionToExecuteArrayOutput {
	return o
}

func (o FsuCycleNextActionToExecuteArrayOutput) Index(i pulumi.IntInput) FsuCycleNextActionToExecuteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FsuCycleNextActionToExecute {
		return vs[0].([]FsuCycleNextActionToExecute)[vs[1].(int)]
	}).(FsuCycleNextActionToExecuteOutput)
}

type FsuCycleStageActionSchedule struct {
	// The date and time the Exadata Fleet Update Action is expected to start. [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeToStart string `pulumi:"timeToStart"`
	// Type of scheduling strategy to use for Fleet Patching Update Action execution.
	Type string `pulumi:"type"`
}

// FsuCycleStageActionScheduleInput is an input type that accepts FsuCycleStageActionScheduleArgs and FsuCycleStageActionScheduleOutput values.
// You can construct a concrete instance of `FsuCycleStageActionScheduleInput` via:
//
//	FsuCycleStageActionScheduleArgs{...}
type FsuCycleStageActionScheduleInput interface {
	pulumi.Input

	ToFsuCycleStageActionScheduleOutput() FsuCycleStageActionScheduleOutput
	ToFsuCycleStageActionScheduleOutputWithContext(context.Context) FsuCycleStageActionScheduleOutput
}

type FsuCycleStageActionScheduleArgs struct {
	// The date and time the Exadata Fleet Update Action is expected to start. [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeToStart pulumi.StringInput `pulumi:"timeToStart"`
	// Type of scheduling strategy to use for Fleet Patching Update Action execution.
	Type pulumi.StringInput `pulumi:"type"`
}

func (FsuCycleStageActionScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FsuCycleStageActionSchedule)(nil)).Elem()
}

func (i FsuCycleStageActionScheduleArgs) ToFsuCycleStageActionScheduleOutput() FsuCycleStageActionScheduleOutput {
	return i.ToFsuCycleStageActionScheduleOutputWithContext(context.Background())
}

func (i FsuCycleStageActionScheduleArgs) ToFsuCycleStageActionScheduleOutputWithContext(ctx context.Context) FsuCycleStageActionScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FsuCycleStageActionScheduleOutput)
}

func (i FsuCycleStageActionScheduleArgs) ToFsuCycleStageActionSchedulePtrOutput() FsuCycleStageActionSchedulePtrOutput {
	return i.ToFsuCycleStageActionSchedulePtrOutputWithContext(context.Background())
}

func (i FsuCycleStageActionScheduleArgs) ToFsuCycleStageActionSchedulePtrOutputWithContext(ctx context.Context) FsuCycleStageActionSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FsuCycleStageActionScheduleOutput).ToFsuCycleStageActionSchedulePtrOutputWithContext(ctx)
}

// FsuCycleStageActionSchedulePtrInput is an input type that accepts FsuCycleStageActionScheduleArgs, FsuCycleStageActionSchedulePtr and FsuCycleStageActionSchedulePtrOutput values.
// You can construct a concrete instance of `FsuCycleStageActionSchedulePtrInput` via:
//
//	        FsuCycleStageActionScheduleArgs{...}
//
//	or:
//
//	        nil
type FsuCycleStageActionSchedulePtrInput interface {
	pulumi.Input

	ToFsuCycleStageActionSchedulePtrOutput() FsuCycleStageActionSchedulePtrOutput
	ToFsuCycleStageActionSchedulePtrOutputWithContext(context.Context) FsuCycleStageActionSchedulePtrOutput
}

type fsuCycleStageActionSchedulePtrType FsuCycleStageActionScheduleArgs

func FsuCycleStageActionSchedulePtr(v *FsuCycleStageActionScheduleArgs) FsuCycleStageActionSchedulePtrInput {
	return (*fsuCycleStageActionSchedulePtrType)(v)
}

func (*fsuCycleStageActionSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FsuCycleStageActionSchedule)(nil)).Elem()
}

func (i *fsuCycleStageActionSchedulePtrType) ToFsuCycleStageActionSchedulePtrOutput() FsuCycleStageActionSchedulePtrOutput {
	return i.ToFsuCycleStageActionSchedulePtrOutputWithContext(context.Background())
}

func (i *fsuCycleStageActionSchedulePtrType) ToFsuCycleStageActionSchedulePtrOutputWithContext(ctx context.Context) FsuCycleStageActionSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FsuCycleStageActionSchedulePtrOutput)
}

type FsuCycleStageActionScheduleOutput struct{ *pulumi.OutputState }

func (FsuCycleStageActionScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FsuCycleStageActionSchedule)(nil)).Elem()
}

func (o FsuCycleStageActionScheduleOutput) ToFsuCycleStageActionScheduleOutput() FsuCycleStageActionScheduleOutput {
	return o
}

func (o FsuCycleStageActionScheduleOutput) ToFsuCycleStageActionScheduleOutputWithContext(ctx context.Context) FsuCycleStageActionScheduleOutput {
	return o
}

func (o FsuCycleStageActionScheduleOutput) ToFsuCycleStageActionSchedulePtrOutput() FsuCycleStageActionSchedulePtrOutput {
	return o.ToFsuCycleStageActionSchedulePtrOutputWithContext(context.Background())
}

func (o FsuCycleStageActionScheduleOutput) ToFsuCycleStageActionSchedulePtrOutputWithContext(ctx context.Context) FsuCycleStageActionSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FsuCycleStageActionSchedule) *FsuCycleStageActionSchedule {
		return &v
	}).(FsuCycleStageActionSchedulePtrOutput)
}

// The date and time the Exadata Fleet Update Action is expected to start. [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
func (o FsuCycleStageActionScheduleOutput) TimeToStart() pulumi.StringOutput {
	return o.ApplyT(func(v FsuCycleStageActionSchedule) string { return v.TimeToStart }).(pulumi.StringOutput)
}

// Type of scheduling strategy to use for Fleet Patching Update Action execution.
func (o FsuCycleStageActionScheduleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FsuCycleStageActionSchedule) string { return v.Type }).(pulumi.StringOutput)
}

type FsuCycleStageActionSchedulePtrOutput struct{ *pulumi.OutputState }

func (FsuCycleStageActionSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FsuCycleStageActionSchedule)(nil)).Elem()
}

func (o FsuCycleStageActionSchedulePtrOutput) ToFsuCycleStageActionSchedulePtrOutput() FsuCycleStageActionSchedulePtrOutput {
	return o
}

func (o FsuCycleStageActionSchedulePtrOutput) ToFsuCycleStageActionSchedulePtrOutputWithContext(ctx context.Context) FsuCycleStageActionSchedulePtrOutput {
	return o
}

func (o FsuCycleStageActionSchedulePtrOutput) Elem() FsuCycleStageActionScheduleOutput {
	return o.ApplyT(func(v *FsuCycleStageActionSchedule) FsuCycleStageActionSchedule {
		if v != nil {
			return *v
		}
		var ret FsuCycleStageActionSchedule
		return ret
	}).(FsuCycleStageActionScheduleOutput)
}

// The date and time the Exadata Fleet Update Action is expected to start. [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
func (o FsuCycleStageActionSchedulePtrOutput) TimeToStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FsuCycleStageActionSchedule) *string {
		if v == nil {
			return nil
		}
		return &v.TimeToStart
	}).(pulumi.StringPtrOutput)
}

// Type of scheduling strategy to use for Fleet Patching Update Action execution.
func (o FsuCycleStageActionSchedulePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FsuCycleStageActionSchedule) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type GetFsuCollectionActiveFsuCycle struct {
	// Exadata Fleet Update Collection resource display name.
	DisplayName string `pulumi:"displayName"`
	// OCID identifier for the Exadata Fleet Update Collection.
	Id string `pulumi:"id"`
}

// GetFsuCollectionActiveFsuCycleInput is an input type that accepts GetFsuCollectionActiveFsuCycleArgs and GetFsuCollectionActiveFsuCycleOutput values.
// You can construct a concrete instance of `GetFsuCollectionActiveFsuCycleInput` via:
//
//	GetFsuCollectionActiveFsuCycleArgs{...}
type GetFsuCollectionActiveFsuCycleInput interface {
	pulumi.Input

	ToGetFsuCollectionActiveFsuCycleOutput() GetFsuCollectionActiveFsuCycleOutput
	ToGetFsuCollectionActiveFsuCycleOutputWithContext(context.Context) GetFsuCollectionActiveFsuCycleOutput
}

type GetFsuCollectionActiveFsuCycleArgs struct {
	// Exadata Fleet Update Collection resource display name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// OCID identifier for the Exadata Fleet Update Collection.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetFsuCollectionActiveFsuCycleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCollectionActiveFsuCycle)(nil)).Elem()
}

func (i GetFsuCollectionActiveFsuCycleArgs) ToGetFsuCollectionActiveFsuCycleOutput() GetFsuCollectionActiveFsuCycleOutput {
	return i.ToGetFsuCollectionActiveFsuCycleOutputWithContext(context.Background())
}

func (i GetFsuCollectionActiveFsuCycleArgs) ToGetFsuCollectionActiveFsuCycleOutputWithContext(ctx context.Context) GetFsuCollectionActiveFsuCycleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCollectionActiveFsuCycleOutput)
}

// GetFsuCollectionActiveFsuCycleArrayInput is an input type that accepts GetFsuCollectionActiveFsuCycleArray and GetFsuCollectionActiveFsuCycleArrayOutput values.
// You can construct a concrete instance of `GetFsuCollectionActiveFsuCycleArrayInput` via:
//
//	GetFsuCollectionActiveFsuCycleArray{ GetFsuCollectionActiveFsuCycleArgs{...} }
type GetFsuCollectionActiveFsuCycleArrayInput interface {
	pulumi.Input

	ToGetFsuCollectionActiveFsuCycleArrayOutput() GetFsuCollectionActiveFsuCycleArrayOutput
	ToGetFsuCollectionActiveFsuCycleArrayOutputWithContext(context.Context) GetFsuCollectionActiveFsuCycleArrayOutput
}

type GetFsuCollectionActiveFsuCycleArray []GetFsuCollectionActiveFsuCycleInput

func (GetFsuCollectionActiveFsuCycleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCollectionActiveFsuCycle)(nil)).Elem()
}

func (i GetFsuCollectionActiveFsuCycleArray) ToGetFsuCollectionActiveFsuCycleArrayOutput() GetFsuCollectionActiveFsuCycleArrayOutput {
	return i.ToGetFsuCollectionActiveFsuCycleArrayOutputWithContext(context.Background())
}

func (i GetFsuCollectionActiveFsuCycleArray) ToGetFsuCollectionActiveFsuCycleArrayOutputWithContext(ctx context.Context) GetFsuCollectionActiveFsuCycleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCollectionActiveFsuCycleArrayOutput)
}

type GetFsuCollectionActiveFsuCycleOutput struct{ *pulumi.OutputState }

func (GetFsuCollectionActiveFsuCycleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCollectionActiveFsuCycle)(nil)).Elem()
}

func (o GetFsuCollectionActiveFsuCycleOutput) ToGetFsuCollectionActiveFsuCycleOutput() GetFsuCollectionActiveFsuCycleOutput {
	return o
}

func (o GetFsuCollectionActiveFsuCycleOutput) ToGetFsuCollectionActiveFsuCycleOutputWithContext(ctx context.Context) GetFsuCollectionActiveFsuCycleOutput {
	return o
}

// Exadata Fleet Update Collection resource display name.
func (o GetFsuCollectionActiveFsuCycleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCollectionActiveFsuCycle) string { return v.DisplayName }).(pulumi.StringOutput)
}

// OCID identifier for the Exadata Fleet Update Collection.
func (o GetFsuCollectionActiveFsuCycleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCollectionActiveFsuCycle) string { return v.Id }).(pulumi.StringOutput)
}

type GetFsuCollectionActiveFsuCycleArrayOutput struct{ *pulumi.OutputState }

func (GetFsuCollectionActiveFsuCycleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCollectionActiveFsuCycle)(nil)).Elem()
}

func (o GetFsuCollectionActiveFsuCycleArrayOutput) ToGetFsuCollectionActiveFsuCycleArrayOutput() GetFsuCollectionActiveFsuCycleArrayOutput {
	return o
}

func (o GetFsuCollectionActiveFsuCycleArrayOutput) ToGetFsuCollectionActiveFsuCycleArrayOutputWithContext(ctx context.Context) GetFsuCollectionActiveFsuCycleArrayOutput {
	return o
}

func (o GetFsuCollectionActiveFsuCycleArrayOutput) Index(i pulumi.IntInput) GetFsuCollectionActiveFsuCycleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFsuCollectionActiveFsuCycle {
		return vs[0].([]GetFsuCollectionActiveFsuCycle)[vs[1].(int)]
	}).(GetFsuCollectionActiveFsuCycleOutput)
}

type GetFsuCollectionFleetDiscovery struct {
	// Filters to perform the target discovery.
	Filters []GetFsuCollectionFleetDiscoveryFilter `pulumi:"filters"`
	// OCIDs of Fleet Software Update Discovery.
	FsuDiscoveryId string `pulumi:"fsuDiscoveryId"`
	// Oracle Cloud Infrastructure Search Service query string.
	Query string `pulumi:"query"`
	// Possible fleet discovery strategies.
	Strategy string `pulumi:"strategy"`
	// OCIDs of target resources to include. For EXACC service type Collections only VMClusters are allowed. For EXACS service type Collections only CloudVMClusters are allowed.
	Targets []string `pulumi:"targets"`
}

// GetFsuCollectionFleetDiscoveryInput is an input type that accepts GetFsuCollectionFleetDiscoveryArgs and GetFsuCollectionFleetDiscoveryOutput values.
// You can construct a concrete instance of `GetFsuCollectionFleetDiscoveryInput` via:
//
//	GetFsuCollectionFleetDiscoveryArgs{...}
type GetFsuCollectionFleetDiscoveryInput interface {
	pulumi.Input

	ToGetFsuCollectionFleetDiscoveryOutput() GetFsuCollectionFleetDiscoveryOutput
	ToGetFsuCollectionFleetDiscoveryOutputWithContext(context.Context) GetFsuCollectionFleetDiscoveryOutput
}

type GetFsuCollectionFleetDiscoveryArgs struct {
	// Filters to perform the target discovery.
	Filters GetFsuCollectionFleetDiscoveryFilterArrayInput `pulumi:"filters"`
	// OCIDs of Fleet Software Update Discovery.
	FsuDiscoveryId pulumi.StringInput `pulumi:"fsuDiscoveryId"`
	// Oracle Cloud Infrastructure Search Service query string.
	Query pulumi.StringInput `pulumi:"query"`
	// Possible fleet discovery strategies.
	Strategy pulumi.StringInput `pulumi:"strategy"`
	// OCIDs of target resources to include. For EXACC service type Collections only VMClusters are allowed. For EXACS service type Collections only CloudVMClusters are allowed.
	Targets pulumi.StringArrayInput `pulumi:"targets"`
}

func (GetFsuCollectionFleetDiscoveryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCollectionFleetDiscovery)(nil)).Elem()
}

func (i GetFsuCollectionFleetDiscoveryArgs) ToGetFsuCollectionFleetDiscoveryOutput() GetFsuCollectionFleetDiscoveryOutput {
	return i.ToGetFsuCollectionFleetDiscoveryOutputWithContext(context.Background())
}

func (i GetFsuCollectionFleetDiscoveryArgs) ToGetFsuCollectionFleetDiscoveryOutputWithContext(ctx context.Context) GetFsuCollectionFleetDiscoveryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCollectionFleetDiscoveryOutput)
}

// GetFsuCollectionFleetDiscoveryArrayInput is an input type that accepts GetFsuCollectionFleetDiscoveryArray and GetFsuCollectionFleetDiscoveryArrayOutput values.
// You can construct a concrete instance of `GetFsuCollectionFleetDiscoveryArrayInput` via:
//
//	GetFsuCollectionFleetDiscoveryArray{ GetFsuCollectionFleetDiscoveryArgs{...} }
type GetFsuCollectionFleetDiscoveryArrayInput interface {
	pulumi.Input

	ToGetFsuCollectionFleetDiscoveryArrayOutput() GetFsuCollectionFleetDiscoveryArrayOutput
	ToGetFsuCollectionFleetDiscoveryArrayOutputWithContext(context.Context) GetFsuCollectionFleetDiscoveryArrayOutput
}

type GetFsuCollectionFleetDiscoveryArray []GetFsuCollectionFleetDiscoveryInput

func (GetFsuCollectionFleetDiscoveryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCollectionFleetDiscovery)(nil)).Elem()
}

func (i GetFsuCollectionFleetDiscoveryArray) ToGetFsuCollectionFleetDiscoveryArrayOutput() GetFsuCollectionFleetDiscoveryArrayOutput {
	return i.ToGetFsuCollectionFleetDiscoveryArrayOutputWithContext(context.Background())
}

func (i GetFsuCollectionFleetDiscoveryArray) ToGetFsuCollectionFleetDiscoveryArrayOutputWithContext(ctx context.Context) GetFsuCollectionFleetDiscoveryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCollectionFleetDiscoveryArrayOutput)
}

type GetFsuCollectionFleetDiscoveryOutput struct{ *pulumi.OutputState }

func (GetFsuCollectionFleetDiscoveryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCollectionFleetDiscovery)(nil)).Elem()
}

func (o GetFsuCollectionFleetDiscoveryOutput) ToGetFsuCollectionFleetDiscoveryOutput() GetFsuCollectionFleetDiscoveryOutput {
	return o
}

func (o GetFsuCollectionFleetDiscoveryOutput) ToGetFsuCollectionFleetDiscoveryOutputWithContext(ctx context.Context) GetFsuCollectionFleetDiscoveryOutput {
	return o
}

// Filters to perform the target discovery.
func (o GetFsuCollectionFleetDiscoveryOutput) Filters() GetFsuCollectionFleetDiscoveryFilterArrayOutput {
	return o.ApplyT(func(v GetFsuCollectionFleetDiscovery) []GetFsuCollectionFleetDiscoveryFilter { return v.Filters }).(GetFsuCollectionFleetDiscoveryFilterArrayOutput)
}

// OCIDs of Fleet Software Update Discovery.
func (o GetFsuCollectionFleetDiscoveryOutput) FsuDiscoveryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCollectionFleetDiscovery) string { return v.FsuDiscoveryId }).(pulumi.StringOutput)
}

// Oracle Cloud Infrastructure Search Service query string.
func (o GetFsuCollectionFleetDiscoveryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCollectionFleetDiscovery) string { return v.Query }).(pulumi.StringOutput)
}

// Possible fleet discovery strategies.
func (o GetFsuCollectionFleetDiscoveryOutput) Strategy() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCollectionFleetDiscovery) string { return v.Strategy }).(pulumi.StringOutput)
}

// OCIDs of target resources to include. For EXACC service type Collections only VMClusters are allowed. For EXACS service type Collections only CloudVMClusters are allowed.
func (o GetFsuCollectionFleetDiscoveryOutput) Targets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFsuCollectionFleetDiscovery) []string { return v.Targets }).(pulumi.StringArrayOutput)
}

type GetFsuCollectionFleetDiscoveryArrayOutput struct{ *pulumi.OutputState }

func (GetFsuCollectionFleetDiscoveryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCollectionFleetDiscovery)(nil)).Elem()
}

func (o GetFsuCollectionFleetDiscoveryArrayOutput) ToGetFsuCollectionFleetDiscoveryArrayOutput() GetFsuCollectionFleetDiscoveryArrayOutput {
	return o
}

func (o GetFsuCollectionFleetDiscoveryArrayOutput) ToGetFsuCollectionFleetDiscoveryArrayOutputWithContext(ctx context.Context) GetFsuCollectionFleetDiscoveryArrayOutput {
	return o
}

func (o GetFsuCollectionFleetDiscoveryArrayOutput) Index(i pulumi.IntInput) GetFsuCollectionFleetDiscoveryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFsuCollectionFleetDiscovery {
		return vs[0].([]GetFsuCollectionFleetDiscovery)[vs[1].(int)]
	}).(GetFsuCollectionFleetDiscoveryOutput)
}

type GetFsuCollectionFleetDiscoveryFilter struct {
	// Type of resource to match in the discovery.
	EntityType string `pulumi:"entityType"`
	// Related resource Ids to include in the discovery.  All must match the specified entityType.
	Identifiers []string `pulumi:"identifiers"`
	// INCLUDE or EXCLUDE the filter results in the discovery for DB targets. Supported for 'FSUCOLLECTION' RESOURCE_ID filter only.
	Mode string `pulumi:"mode"`
	// List of Database unique names to include in the discovery.
	Names []string `pulumi:"names"`
	// Type of join for each element in this filter.
	Operator string `pulumi:"operator"`
	// Freeform tags to include in the discovery.
	Tags []GetFsuCollectionFleetDiscoveryFilterTag `pulumi:"tags"`
	// Exadata Fleet Update Collection type.
	Type string `pulumi:"type"`
	// List of Versions strings to include in the discovery.
	Versions []string `pulumi:"versions"`
}

// GetFsuCollectionFleetDiscoveryFilterInput is an input type that accepts GetFsuCollectionFleetDiscoveryFilterArgs and GetFsuCollectionFleetDiscoveryFilterOutput values.
// You can construct a concrete instance of `GetFsuCollectionFleetDiscoveryFilterInput` via:
//
//	GetFsuCollectionFleetDiscoveryFilterArgs{...}
type GetFsuCollectionFleetDiscoveryFilterInput interface {
	pulumi.Input

	ToGetFsuCollectionFleetDiscoveryFilterOutput() GetFsuCollectionFleetDiscoveryFilterOutput
	ToGetFsuCollectionFleetDiscoveryFilterOutputWithContext(context.Context) GetFsuCollectionFleetDiscoveryFilterOutput
}

type GetFsuCollectionFleetDiscoveryFilterArgs struct {
	// Type of resource to match in the discovery.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Related resource Ids to include in the discovery.  All must match the specified entityType.
	Identifiers pulumi.StringArrayInput `pulumi:"identifiers"`
	// INCLUDE or EXCLUDE the filter results in the discovery for DB targets. Supported for 'FSUCOLLECTION' RESOURCE_ID filter only.
	Mode pulumi.StringInput `pulumi:"mode"`
	// List of Database unique names to include in the discovery.
	Names pulumi.StringArrayInput `pulumi:"names"`
	// Type of join for each element in this filter.
	Operator pulumi.StringInput `pulumi:"operator"`
	// Freeform tags to include in the discovery.
	Tags GetFsuCollectionFleetDiscoveryFilterTagArrayInput `pulumi:"tags"`
	// Exadata Fleet Update Collection type.
	Type pulumi.StringInput `pulumi:"type"`
	// List of Versions strings to include in the discovery.
	Versions pulumi.StringArrayInput `pulumi:"versions"`
}

func (GetFsuCollectionFleetDiscoveryFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCollectionFleetDiscoveryFilter)(nil)).Elem()
}

func (i GetFsuCollectionFleetDiscoveryFilterArgs) ToGetFsuCollectionFleetDiscoveryFilterOutput() GetFsuCollectionFleetDiscoveryFilterOutput {
	return i.ToGetFsuCollectionFleetDiscoveryFilterOutputWithContext(context.Background())
}

func (i GetFsuCollectionFleetDiscoveryFilterArgs) ToGetFsuCollectionFleetDiscoveryFilterOutputWithContext(ctx context.Context) GetFsuCollectionFleetDiscoveryFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCollectionFleetDiscoveryFilterOutput)
}

// GetFsuCollectionFleetDiscoveryFilterArrayInput is an input type that accepts GetFsuCollectionFleetDiscoveryFilterArray and GetFsuCollectionFleetDiscoveryFilterArrayOutput values.
// You can construct a concrete instance of `GetFsuCollectionFleetDiscoveryFilterArrayInput` via:
//
//	GetFsuCollectionFleetDiscoveryFilterArray{ GetFsuCollectionFleetDiscoveryFilterArgs{...} }
type GetFsuCollectionFleetDiscoveryFilterArrayInput interface {
	pulumi.Input

	ToGetFsuCollectionFleetDiscoveryFilterArrayOutput() GetFsuCollectionFleetDiscoveryFilterArrayOutput
	ToGetFsuCollectionFleetDiscoveryFilterArrayOutputWithContext(context.Context) GetFsuCollectionFleetDiscoveryFilterArrayOutput
}

type GetFsuCollectionFleetDiscoveryFilterArray []GetFsuCollectionFleetDiscoveryFilterInput

func (GetFsuCollectionFleetDiscoveryFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCollectionFleetDiscoveryFilter)(nil)).Elem()
}

func (i GetFsuCollectionFleetDiscoveryFilterArray) ToGetFsuCollectionFleetDiscoveryFilterArrayOutput() GetFsuCollectionFleetDiscoveryFilterArrayOutput {
	return i.ToGetFsuCollectionFleetDiscoveryFilterArrayOutputWithContext(context.Background())
}

func (i GetFsuCollectionFleetDiscoveryFilterArray) ToGetFsuCollectionFleetDiscoveryFilterArrayOutputWithContext(ctx context.Context) GetFsuCollectionFleetDiscoveryFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCollectionFleetDiscoveryFilterArrayOutput)
}

type GetFsuCollectionFleetDiscoveryFilterOutput struct{ *pulumi.OutputState }

func (GetFsuCollectionFleetDiscoveryFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCollectionFleetDiscoveryFilter)(nil)).Elem()
}

func (o GetFsuCollectionFleetDiscoveryFilterOutput) ToGetFsuCollectionFleetDiscoveryFilterOutput() GetFsuCollectionFleetDiscoveryFilterOutput {
	return o
}

func (o GetFsuCollectionFleetDiscoveryFilterOutput) ToGetFsuCollectionFleetDiscoveryFilterOutputWithContext(ctx context.Context) GetFsuCollectionFleetDiscoveryFilterOutput {
	return o
}

// Type of resource to match in the discovery.
func (o GetFsuCollectionFleetDiscoveryFilterOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCollectionFleetDiscoveryFilter) string { return v.EntityType }).(pulumi.StringOutput)
}

// Related resource Ids to include in the discovery.  All must match the specified entityType.
func (o GetFsuCollectionFleetDiscoveryFilterOutput) Identifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFsuCollectionFleetDiscoveryFilter) []string { return v.Identifiers }).(pulumi.StringArrayOutput)
}

// INCLUDE or EXCLUDE the filter results in the discovery for DB targets. Supported for 'FSUCOLLECTION' RESOURCE_ID filter only.
func (o GetFsuCollectionFleetDiscoveryFilterOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCollectionFleetDiscoveryFilter) string { return v.Mode }).(pulumi.StringOutput)
}

// List of Database unique names to include in the discovery.
func (o GetFsuCollectionFleetDiscoveryFilterOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFsuCollectionFleetDiscoveryFilter) []string { return v.Names }).(pulumi.StringArrayOutput)
}

// Type of join for each element in this filter.
func (o GetFsuCollectionFleetDiscoveryFilterOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCollectionFleetDiscoveryFilter) string { return v.Operator }).(pulumi.StringOutput)
}

// Freeform tags to include in the discovery.
func (o GetFsuCollectionFleetDiscoveryFilterOutput) Tags() GetFsuCollectionFleetDiscoveryFilterTagArrayOutput {
	return o.ApplyT(func(v GetFsuCollectionFleetDiscoveryFilter) []GetFsuCollectionFleetDiscoveryFilterTag { return v.Tags }).(GetFsuCollectionFleetDiscoveryFilterTagArrayOutput)
}

// Exadata Fleet Update Collection type.
func (o GetFsuCollectionFleetDiscoveryFilterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCollectionFleetDiscoveryFilter) string { return v.Type }).(pulumi.StringOutput)
}

// List of Versions strings to include in the discovery.
func (o GetFsuCollectionFleetDiscoveryFilterOutput) Versions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFsuCollectionFleetDiscoveryFilter) []string { return v.Versions }).(pulumi.StringArrayOutput)
}

type GetFsuCollectionFleetDiscoveryFilterArrayOutput struct{ *pulumi.OutputState }

func (GetFsuCollectionFleetDiscoveryFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCollectionFleetDiscoveryFilter)(nil)).Elem()
}

func (o GetFsuCollectionFleetDiscoveryFilterArrayOutput) ToGetFsuCollectionFleetDiscoveryFilterArrayOutput() GetFsuCollectionFleetDiscoveryFilterArrayOutput {
	return o
}

func (o GetFsuCollectionFleetDiscoveryFilterArrayOutput) ToGetFsuCollectionFleetDiscoveryFilterArrayOutputWithContext(ctx context.Context) GetFsuCollectionFleetDiscoveryFilterArrayOutput {
	return o
}

func (o GetFsuCollectionFleetDiscoveryFilterArrayOutput) Index(i pulumi.IntInput) GetFsuCollectionFleetDiscoveryFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFsuCollectionFleetDiscoveryFilter {
		return vs[0].([]GetFsuCollectionFleetDiscoveryFilter)[vs[1].(int)]
	}).(GetFsuCollectionFleetDiscoveryFilterOutput)
}

type GetFsuCollectionFleetDiscoveryFilterTag struct {
	// Freeform tag key.
	Key string `pulumi:"key"`
	// Defined tag namespace.
	Namespace string `pulumi:"namespace"`
	// Freeform tag value.
	Value string `pulumi:"value"`
}

// GetFsuCollectionFleetDiscoveryFilterTagInput is an input type that accepts GetFsuCollectionFleetDiscoveryFilterTagArgs and GetFsuCollectionFleetDiscoveryFilterTagOutput values.
// You can construct a concrete instance of `GetFsuCollectionFleetDiscoveryFilterTagInput` via:
//
//	GetFsuCollectionFleetDiscoveryFilterTagArgs{...}
type GetFsuCollectionFleetDiscoveryFilterTagInput interface {
	pulumi.Input

	ToGetFsuCollectionFleetDiscoveryFilterTagOutput() GetFsuCollectionFleetDiscoveryFilterTagOutput
	ToGetFsuCollectionFleetDiscoveryFilterTagOutputWithContext(context.Context) GetFsuCollectionFleetDiscoveryFilterTagOutput
}

type GetFsuCollectionFleetDiscoveryFilterTagArgs struct {
	// Freeform tag key.
	Key pulumi.StringInput `pulumi:"key"`
	// Defined tag namespace.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// Freeform tag value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetFsuCollectionFleetDiscoveryFilterTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCollectionFleetDiscoveryFilterTag)(nil)).Elem()
}

func (i GetFsuCollectionFleetDiscoveryFilterTagArgs) ToGetFsuCollectionFleetDiscoveryFilterTagOutput() GetFsuCollectionFleetDiscoveryFilterTagOutput {
	return i.ToGetFsuCollectionFleetDiscoveryFilterTagOutputWithContext(context.Background())
}

func (i GetFsuCollectionFleetDiscoveryFilterTagArgs) ToGetFsuCollectionFleetDiscoveryFilterTagOutputWithContext(ctx context.Context) GetFsuCollectionFleetDiscoveryFilterTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCollectionFleetDiscoveryFilterTagOutput)
}

// GetFsuCollectionFleetDiscoveryFilterTagArrayInput is an input type that accepts GetFsuCollectionFleetDiscoveryFilterTagArray and GetFsuCollectionFleetDiscoveryFilterTagArrayOutput values.
// You can construct a concrete instance of `GetFsuCollectionFleetDiscoveryFilterTagArrayInput` via:
//
//	GetFsuCollectionFleetDiscoveryFilterTagArray{ GetFsuCollectionFleetDiscoveryFilterTagArgs{...} }
type GetFsuCollectionFleetDiscoveryFilterTagArrayInput interface {
	pulumi.Input

	ToGetFsuCollectionFleetDiscoveryFilterTagArrayOutput() GetFsuCollectionFleetDiscoveryFilterTagArrayOutput
	ToGetFsuCollectionFleetDiscoveryFilterTagArrayOutputWithContext(context.Context) GetFsuCollectionFleetDiscoveryFilterTagArrayOutput
}

type GetFsuCollectionFleetDiscoveryFilterTagArray []GetFsuCollectionFleetDiscoveryFilterTagInput

func (GetFsuCollectionFleetDiscoveryFilterTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCollectionFleetDiscoveryFilterTag)(nil)).Elem()
}

func (i GetFsuCollectionFleetDiscoveryFilterTagArray) ToGetFsuCollectionFleetDiscoveryFilterTagArrayOutput() GetFsuCollectionFleetDiscoveryFilterTagArrayOutput {
	return i.ToGetFsuCollectionFleetDiscoveryFilterTagArrayOutputWithContext(context.Background())
}

func (i GetFsuCollectionFleetDiscoveryFilterTagArray) ToGetFsuCollectionFleetDiscoveryFilterTagArrayOutputWithContext(ctx context.Context) GetFsuCollectionFleetDiscoveryFilterTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCollectionFleetDiscoveryFilterTagArrayOutput)
}

type GetFsuCollectionFleetDiscoveryFilterTagOutput struct{ *pulumi.OutputState }

func (GetFsuCollectionFleetDiscoveryFilterTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCollectionFleetDiscoveryFilterTag)(nil)).Elem()
}

func (o GetFsuCollectionFleetDiscoveryFilterTagOutput) ToGetFsuCollectionFleetDiscoveryFilterTagOutput() GetFsuCollectionFleetDiscoveryFilterTagOutput {
	return o
}

func (o GetFsuCollectionFleetDiscoveryFilterTagOutput) ToGetFsuCollectionFleetDiscoveryFilterTagOutputWithContext(ctx context.Context) GetFsuCollectionFleetDiscoveryFilterTagOutput {
	return o
}

// Freeform tag key.
func (o GetFsuCollectionFleetDiscoveryFilterTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCollectionFleetDiscoveryFilterTag) string { return v.Key }).(pulumi.StringOutput)
}

// Defined tag namespace.
func (o GetFsuCollectionFleetDiscoveryFilterTagOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCollectionFleetDiscoveryFilterTag) string { return v.Namespace }).(pulumi.StringOutput)
}

// Freeform tag value.
func (o GetFsuCollectionFleetDiscoveryFilterTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCollectionFleetDiscoveryFilterTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetFsuCollectionFleetDiscoveryFilterTagArrayOutput struct{ *pulumi.OutputState }

func (GetFsuCollectionFleetDiscoveryFilterTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCollectionFleetDiscoveryFilterTag)(nil)).Elem()
}

func (o GetFsuCollectionFleetDiscoveryFilterTagArrayOutput) ToGetFsuCollectionFleetDiscoveryFilterTagArrayOutput() GetFsuCollectionFleetDiscoveryFilterTagArrayOutput {
	return o
}

func (o GetFsuCollectionFleetDiscoveryFilterTagArrayOutput) ToGetFsuCollectionFleetDiscoveryFilterTagArrayOutputWithContext(ctx context.Context) GetFsuCollectionFleetDiscoveryFilterTagArrayOutput {
	return o
}

func (o GetFsuCollectionFleetDiscoveryFilterTagArrayOutput) Index(i pulumi.IntInput) GetFsuCollectionFleetDiscoveryFilterTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFsuCollectionFleetDiscoveryFilterTag {
		return vs[0].([]GetFsuCollectionFleetDiscoveryFilterTag)[vs[1].(int)]
	}).(GetFsuCollectionFleetDiscoveryFilterTagOutput)
}

type GetFsuCollectionsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetFsuCollectionsFilterInput is an input type that accepts GetFsuCollectionsFilterArgs and GetFsuCollectionsFilterOutput values.
// You can construct a concrete instance of `GetFsuCollectionsFilterInput` via:
//
//	GetFsuCollectionsFilterArgs{...}
type GetFsuCollectionsFilterInput interface {
	pulumi.Input

	ToGetFsuCollectionsFilterOutput() GetFsuCollectionsFilterOutput
	ToGetFsuCollectionsFilterOutputWithContext(context.Context) GetFsuCollectionsFilterOutput
}

type GetFsuCollectionsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetFsuCollectionsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCollectionsFilter)(nil)).Elem()
}

func (i GetFsuCollectionsFilterArgs) ToGetFsuCollectionsFilterOutput() GetFsuCollectionsFilterOutput {
	return i.ToGetFsuCollectionsFilterOutputWithContext(context.Background())
}

func (i GetFsuCollectionsFilterArgs) ToGetFsuCollectionsFilterOutputWithContext(ctx context.Context) GetFsuCollectionsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCollectionsFilterOutput)
}

// GetFsuCollectionsFilterArrayInput is an input type that accepts GetFsuCollectionsFilterArray and GetFsuCollectionsFilterArrayOutput values.
// You can construct a concrete instance of `GetFsuCollectionsFilterArrayInput` via:
//
//	GetFsuCollectionsFilterArray{ GetFsuCollectionsFilterArgs{...} }
type GetFsuCollectionsFilterArrayInput interface {
	pulumi.Input

	ToGetFsuCollectionsFilterArrayOutput() GetFsuCollectionsFilterArrayOutput
	ToGetFsuCollectionsFilterArrayOutputWithContext(context.Context) GetFsuCollectionsFilterArrayOutput
}

type GetFsuCollectionsFilterArray []GetFsuCollectionsFilterInput

func (GetFsuCollectionsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCollectionsFilter)(nil)).Elem()
}

func (i GetFsuCollectionsFilterArray) ToGetFsuCollectionsFilterArrayOutput() GetFsuCollectionsFilterArrayOutput {
	return i.ToGetFsuCollectionsFilterArrayOutputWithContext(context.Background())
}

func (i GetFsuCollectionsFilterArray) ToGetFsuCollectionsFilterArrayOutputWithContext(ctx context.Context) GetFsuCollectionsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCollectionsFilterArrayOutput)
}

type GetFsuCollectionsFilterOutput struct{ *pulumi.OutputState }

func (GetFsuCollectionsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCollectionsFilter)(nil)).Elem()
}

func (o GetFsuCollectionsFilterOutput) ToGetFsuCollectionsFilterOutput() GetFsuCollectionsFilterOutput {
	return o
}

func (o GetFsuCollectionsFilterOutput) ToGetFsuCollectionsFilterOutputWithContext(ctx context.Context) GetFsuCollectionsFilterOutput {
	return o
}

func (o GetFsuCollectionsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCollectionsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetFsuCollectionsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetFsuCollectionsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetFsuCollectionsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFsuCollectionsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetFsuCollectionsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetFsuCollectionsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCollectionsFilter)(nil)).Elem()
}

func (o GetFsuCollectionsFilterArrayOutput) ToGetFsuCollectionsFilterArrayOutput() GetFsuCollectionsFilterArrayOutput {
	return o
}

func (o GetFsuCollectionsFilterArrayOutput) ToGetFsuCollectionsFilterArrayOutputWithContext(ctx context.Context) GetFsuCollectionsFilterArrayOutput {
	return o
}

func (o GetFsuCollectionsFilterArrayOutput) Index(i pulumi.IntInput) GetFsuCollectionsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFsuCollectionsFilter {
		return vs[0].([]GetFsuCollectionsFilter)[vs[1].(int)]
	}).(GetFsuCollectionsFilterOutput)
}

type GetFsuCollectionsFsuCollectionSummaryCollection struct {
	Items []GetFsuCollectionsFsuCollectionSummaryCollectionItem `pulumi:"items"`
}

// GetFsuCollectionsFsuCollectionSummaryCollectionInput is an input type that accepts GetFsuCollectionsFsuCollectionSummaryCollectionArgs and GetFsuCollectionsFsuCollectionSummaryCollectionOutput values.
// You can construct a concrete instance of `GetFsuCollectionsFsuCollectionSummaryCollectionInput` via:
//
//	GetFsuCollectionsFsuCollectionSummaryCollectionArgs{...}
type GetFsuCollectionsFsuCollectionSummaryCollectionInput interface {
	pulumi.Input

	ToGetFsuCollectionsFsuCollectionSummaryCollectionOutput() GetFsuCollectionsFsuCollectionSummaryCollectionOutput
	ToGetFsuCollectionsFsuCollectionSummaryCollectionOutputWithContext(context.Context) GetFsuCollectionsFsuCollectionSummaryCollectionOutput
}

type GetFsuCollectionsFsuCollectionSummaryCollectionArgs struct {
	Items GetFsuCollectionsFsuCollectionSummaryCollectionItemArrayInput `pulumi:"items"`
}

func (GetFsuCollectionsFsuCollectionSummaryCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCollectionsFsuCollectionSummaryCollection)(nil)).Elem()
}

func (i GetFsuCollectionsFsuCollectionSummaryCollectionArgs) ToGetFsuCollectionsFsuCollectionSummaryCollectionOutput() GetFsuCollectionsFsuCollectionSummaryCollectionOutput {
	return i.ToGetFsuCollectionsFsuCollectionSummaryCollectionOutputWithContext(context.Background())
}

func (i GetFsuCollectionsFsuCollectionSummaryCollectionArgs) ToGetFsuCollectionsFsuCollectionSummaryCollectionOutputWithContext(ctx context.Context) GetFsuCollectionsFsuCollectionSummaryCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCollectionsFsuCollectionSummaryCollectionOutput)
}

// GetFsuCollectionsFsuCollectionSummaryCollectionArrayInput is an input type that accepts GetFsuCollectionsFsuCollectionSummaryCollectionArray and GetFsuCollectionsFsuCollectionSummaryCollectionArrayOutput values.
// You can construct a concrete instance of `GetFsuCollectionsFsuCollectionSummaryCollectionArrayInput` via:
//
//	GetFsuCollectionsFsuCollectionSummaryCollectionArray{ GetFsuCollectionsFsuCollectionSummaryCollectionArgs{...} }
type GetFsuCollectionsFsuCollectionSummaryCollectionArrayInput interface {
	pulumi.Input

	ToGetFsuCollectionsFsuCollectionSummaryCollectionArrayOutput() GetFsuCollectionsFsuCollectionSummaryCollectionArrayOutput
	ToGetFsuCollectionsFsuCollectionSummaryCollectionArrayOutputWithContext(context.Context) GetFsuCollectionsFsuCollectionSummaryCollectionArrayOutput
}

type GetFsuCollectionsFsuCollectionSummaryCollectionArray []GetFsuCollectionsFsuCollectionSummaryCollectionInput

func (GetFsuCollectionsFsuCollectionSummaryCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCollectionsFsuCollectionSummaryCollection)(nil)).Elem()
}

func (i GetFsuCollectionsFsuCollectionSummaryCollectionArray) ToGetFsuCollectionsFsuCollectionSummaryCollectionArrayOutput() GetFsuCollectionsFsuCollectionSummaryCollectionArrayOutput {
	return i.ToGetFsuCollectionsFsuCollectionSummaryCollectionArrayOutputWithContext(context.Background())
}

func (i GetFsuCollectionsFsuCollectionSummaryCollectionArray) ToGetFsuCollectionsFsuCollectionSummaryCollectionArrayOutputWithContext(ctx context.Context) GetFsuCollectionsFsuCollectionSummaryCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCollectionsFsuCollectionSummaryCollectionArrayOutput)
}

type GetFsuCollectionsFsuCollectionSummaryCollectionOutput struct{ *pulumi.OutputState }

func (GetFsuCollectionsFsuCollectionSummaryCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCollectionsFsuCollectionSummaryCollection)(nil)).Elem()
}

func (o GetFsuCollectionsFsuCollectionSummaryCollectionOutput) ToGetFsuCollectionsFsuCollectionSummaryCollectionOutput() GetFsuCollectionsFsuCollectionSummaryCollectionOutput {
	return o
}

func (o GetFsuCollectionsFsuCollectionSummaryCollectionOutput) ToGetFsuCollectionsFsuCollectionSummaryCollectionOutputWithContext(ctx context.Context) GetFsuCollectionsFsuCollectionSummaryCollectionOutput {
	return o
}

func (o GetFsuCollectionsFsuCollectionSummaryCollectionOutput) Items() GetFsuCollectionsFsuCollectionSummaryCollectionItemArrayOutput {
	return o.ApplyT(func(v GetFsuCollectionsFsuCollectionSummaryCollection) []GetFsuCollectionsFsuCollectionSummaryCollectionItem {
		return v.Items
	}).(GetFsuCollectionsFsuCollectionSummaryCollectionItemArrayOutput)
}

type GetFsuCollectionsFsuCollectionSummaryCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetFsuCollectionsFsuCollectionSummaryCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCollectionsFsuCollectionSummaryCollection)(nil)).Elem()
}

func (o GetFsuCollectionsFsuCollectionSummaryCollectionArrayOutput) ToGetFsuCollectionsFsuCollectionSummaryCollectionArrayOutput() GetFsuCollectionsFsuCollectionSummaryCollectionArrayOutput {
	return o
}

func (o GetFsuCollectionsFsuCollectionSummaryCollectionArrayOutput) ToGetFsuCollectionsFsuCollectionSummaryCollectionArrayOutputWithContext(ctx context.Context) GetFsuCollectionsFsuCollectionSummaryCollectionArrayOutput {
	return o
}

func (o GetFsuCollectionsFsuCollectionSummaryCollectionArrayOutput) Index(i pulumi.IntInput) GetFsuCollectionsFsuCollectionSummaryCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFsuCollectionsFsuCollectionSummaryCollection {
		return vs[0].([]GetFsuCollectionsFsuCollectionSummaryCollection)[vs[1].(int)]
	}).(GetFsuCollectionsFsuCollectionSummaryCollectionOutput)
}

type GetFsuCollectionsFsuCollectionSummaryCollectionItem struct {
	// Active Exadata Fleet Update Cycle resource for this Collection. Object would be null if there is no active Cycle.
	ActiveFsuCycles []GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycle `pulumi:"activeFsuCycles"`
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Supported fleet discovery strategies for DB Collections. If specified on an Update Collection request, this will re-discover the targets of the Collection.
	FleetDiscoveries []GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscovery `pulumi:"fleetDiscoveries"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// OCID identifier for the Exadata Fleet Update Collection.
	Id string `pulumi:"id"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of last completed FSU Cycle.
	LastCompletedFsuCycleId string `pulumi:"lastCompletedFsuCycleId"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Exadata service type for the target resource members.
	ServiceType string `pulumi:"serviceType"`
	// Database Major Version of targets to be included in the Exadata Fleet Update Collection. https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/DbVersionSummary/ListDbVersions Only Database targets that match the version specified in this value would be added to the Exadata Fleet Update Collection.
	SourceMajorVersion string `pulumi:"sourceMajorVersion"`
	// A filter to return only resources whose lifecycleState matches the given lifecycleState.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// Number of targets that are members of this Collection.
	TargetCount int `pulumi:"targetCount"`
	// The time the Exadata Fleet Update Collection was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time the Exadata Fleet Update Collection was updated. An RFC3339 formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
	// A filter to return only resources whose type matches the given type.
	Type string `pulumi:"type"`
}

// GetFsuCollectionsFsuCollectionSummaryCollectionItemInput is an input type that accepts GetFsuCollectionsFsuCollectionSummaryCollectionItemArgs and GetFsuCollectionsFsuCollectionSummaryCollectionItemOutput values.
// You can construct a concrete instance of `GetFsuCollectionsFsuCollectionSummaryCollectionItemInput` via:
//
//	GetFsuCollectionsFsuCollectionSummaryCollectionItemArgs{...}
type GetFsuCollectionsFsuCollectionSummaryCollectionItemInput interface {
	pulumi.Input

	ToGetFsuCollectionsFsuCollectionSummaryCollectionItemOutput() GetFsuCollectionsFsuCollectionSummaryCollectionItemOutput
	ToGetFsuCollectionsFsuCollectionSummaryCollectionItemOutputWithContext(context.Context) GetFsuCollectionsFsuCollectionSummaryCollectionItemOutput
}

type GetFsuCollectionsFsuCollectionSummaryCollectionItemArgs struct {
	// Active Exadata Fleet Update Cycle resource for this Collection. Object would be null if there is no active Cycle.
	ActiveFsuCycles GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArrayInput `pulumi:"activeFsuCycles"`
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Supported fleet discovery strategies for DB Collections. If specified on an Update Collection request, this will re-discover the targets of the Collection.
	FleetDiscoveries GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArrayInput `pulumi:"fleetDiscoveries"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// OCID identifier for the Exadata Fleet Update Collection.
	Id pulumi.StringInput `pulumi:"id"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of last completed FSU Cycle.
	LastCompletedFsuCycleId pulumi.StringInput `pulumi:"lastCompletedFsuCycleId"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// Exadata service type for the target resource members.
	ServiceType pulumi.StringInput `pulumi:"serviceType"`
	// Database Major Version of targets to be included in the Exadata Fleet Update Collection. https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/DbVersionSummary/ListDbVersions Only Database targets that match the version specified in this value would be added to the Exadata Fleet Update Collection.
	SourceMajorVersion pulumi.StringInput `pulumi:"sourceMajorVersion"`
	// A filter to return only resources whose lifecycleState matches the given lifecycleState.
	State pulumi.StringInput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput `pulumi:"systemTags"`
	// Number of targets that are members of this Collection.
	TargetCount pulumi.IntInput `pulumi:"targetCount"`
	// The time the Exadata Fleet Update Collection was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the Exadata Fleet Update Collection was updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// A filter to return only resources whose type matches the given type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetFsuCollectionsFsuCollectionSummaryCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCollectionsFsuCollectionSummaryCollectionItem)(nil)).Elem()
}

func (i GetFsuCollectionsFsuCollectionSummaryCollectionItemArgs) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemOutput() GetFsuCollectionsFsuCollectionSummaryCollectionItemOutput {
	return i.ToGetFsuCollectionsFsuCollectionSummaryCollectionItemOutputWithContext(context.Background())
}

func (i GetFsuCollectionsFsuCollectionSummaryCollectionItemArgs) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemOutputWithContext(ctx context.Context) GetFsuCollectionsFsuCollectionSummaryCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCollectionsFsuCollectionSummaryCollectionItemOutput)
}

// GetFsuCollectionsFsuCollectionSummaryCollectionItemArrayInput is an input type that accepts GetFsuCollectionsFsuCollectionSummaryCollectionItemArray and GetFsuCollectionsFsuCollectionSummaryCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetFsuCollectionsFsuCollectionSummaryCollectionItemArrayInput` via:
//
//	GetFsuCollectionsFsuCollectionSummaryCollectionItemArray{ GetFsuCollectionsFsuCollectionSummaryCollectionItemArgs{...} }
type GetFsuCollectionsFsuCollectionSummaryCollectionItemArrayInput interface {
	pulumi.Input

	ToGetFsuCollectionsFsuCollectionSummaryCollectionItemArrayOutput() GetFsuCollectionsFsuCollectionSummaryCollectionItemArrayOutput
	ToGetFsuCollectionsFsuCollectionSummaryCollectionItemArrayOutputWithContext(context.Context) GetFsuCollectionsFsuCollectionSummaryCollectionItemArrayOutput
}

type GetFsuCollectionsFsuCollectionSummaryCollectionItemArray []GetFsuCollectionsFsuCollectionSummaryCollectionItemInput

func (GetFsuCollectionsFsuCollectionSummaryCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCollectionsFsuCollectionSummaryCollectionItem)(nil)).Elem()
}

func (i GetFsuCollectionsFsuCollectionSummaryCollectionItemArray) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemArrayOutput() GetFsuCollectionsFsuCollectionSummaryCollectionItemArrayOutput {
	return i.ToGetFsuCollectionsFsuCollectionSummaryCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetFsuCollectionsFsuCollectionSummaryCollectionItemArray) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemArrayOutputWithContext(ctx context.Context) GetFsuCollectionsFsuCollectionSummaryCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCollectionsFsuCollectionSummaryCollectionItemArrayOutput)
}

type GetFsuCollectionsFsuCollectionSummaryCollectionItemOutput struct{ *pulumi.OutputState }

func (GetFsuCollectionsFsuCollectionSummaryCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCollectionsFsuCollectionSummaryCollectionItem)(nil)).Elem()
}

func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemOutput) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemOutput() GetFsuCollectionsFsuCollectionSummaryCollectionItemOutput {
	return o
}

func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemOutput) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemOutputWithContext(ctx context.Context) GetFsuCollectionsFsuCollectionSummaryCollectionItemOutput {
	return o
}

// Active Exadata Fleet Update Cycle resource for this Collection. Object would be null if there is no active Cycle.
func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemOutput) ActiveFsuCycles() GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArrayOutput {
	return o.ApplyT(func(v GetFsuCollectionsFsuCollectionSummaryCollectionItem) []GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycle {
		return v.ActiveFsuCycles
	}).(GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArrayOutput)
}

// The ID of the compartment in which to list resources.
func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCollectionsFsuCollectionSummaryCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetFsuCollectionsFsuCollectionSummaryCollectionItem) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCollectionsFsuCollectionSummaryCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Supported fleet discovery strategies for DB Collections. If specified on an Update Collection request, this will re-discover the targets of the Collection.
func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemOutput) FleetDiscoveries() GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArrayOutput {
	return o.ApplyT(func(v GetFsuCollectionsFsuCollectionSummaryCollectionItem) []GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscovery {
		return v.FleetDiscoveries
	}).(GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArrayOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetFsuCollectionsFsuCollectionSummaryCollectionItem) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// OCID identifier for the Exadata Fleet Update Collection.
func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCollectionsFsuCollectionSummaryCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of last completed FSU Cycle.
func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemOutput) LastCompletedFsuCycleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCollectionsFsuCollectionSummaryCollectionItem) string { return v.LastCompletedFsuCycleId }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCollectionsFsuCollectionSummaryCollectionItem) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Exadata service type for the target resource members.
func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCollectionsFsuCollectionSummaryCollectionItem) string { return v.ServiceType }).(pulumi.StringOutput)
}

// Database Major Version of targets to be included in the Exadata Fleet Update Collection. https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/DbVersionSummary/ListDbVersions Only Database targets that match the version specified in this value would be added to the Exadata Fleet Update Collection.
func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemOutput) SourceMajorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCollectionsFsuCollectionSummaryCollectionItem) string { return v.SourceMajorVersion }).(pulumi.StringOutput)
}

// A filter to return only resources whose lifecycleState matches the given lifecycleState.
func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCollectionsFsuCollectionSummaryCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetFsuCollectionsFsuCollectionSummaryCollectionItem) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// Number of targets that are members of this Collection.
func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemOutput) TargetCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetFsuCollectionsFsuCollectionSummaryCollectionItem) int { return v.TargetCount }).(pulumi.IntOutput)
}

// The time the Exadata Fleet Update Collection was created. An RFC3339 formatted datetime string.
func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCollectionsFsuCollectionSummaryCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the Exadata Fleet Update Collection was updated. An RFC3339 formatted datetime string.
func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCollectionsFsuCollectionSummaryCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// A filter to return only resources whose type matches the given type.
func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCollectionsFsuCollectionSummaryCollectionItem) string { return v.Type }).(pulumi.StringOutput)
}

type GetFsuCollectionsFsuCollectionSummaryCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetFsuCollectionsFsuCollectionSummaryCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCollectionsFsuCollectionSummaryCollectionItem)(nil)).Elem()
}

func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemArrayOutput) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemArrayOutput() GetFsuCollectionsFsuCollectionSummaryCollectionItemArrayOutput {
	return o
}

func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemArrayOutput) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemArrayOutputWithContext(ctx context.Context) GetFsuCollectionsFsuCollectionSummaryCollectionItemArrayOutput {
	return o
}

func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemArrayOutput) Index(i pulumi.IntInput) GetFsuCollectionsFsuCollectionSummaryCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFsuCollectionsFsuCollectionSummaryCollectionItem {
		return vs[0].([]GetFsuCollectionsFsuCollectionSummaryCollectionItem)[vs[1].(int)]
	}).(GetFsuCollectionsFsuCollectionSummaryCollectionItemOutput)
}

type GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycle struct {
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// OCID identifier for the Exadata Fleet Update Collection.
	Id string `pulumi:"id"`
}

// GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleInput is an input type that accepts GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArgs and GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleOutput values.
// You can construct a concrete instance of `GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleInput` via:
//
//	GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArgs{...}
type GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleInput interface {
	pulumi.Input

	ToGetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleOutput() GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleOutput
	ToGetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleOutputWithContext(context.Context) GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleOutput
}

type GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArgs struct {
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// OCID identifier for the Exadata Fleet Update Collection.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycle)(nil)).Elem()
}

func (i GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArgs) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleOutput() GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleOutput {
	return i.ToGetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleOutputWithContext(context.Background())
}

func (i GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArgs) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleOutputWithContext(ctx context.Context) GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleOutput)
}

// GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArrayInput is an input type that accepts GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArray and GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArrayOutput values.
// You can construct a concrete instance of `GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArrayInput` via:
//
//	GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArray{ GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArgs{...} }
type GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArrayInput interface {
	pulumi.Input

	ToGetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArrayOutput() GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArrayOutput
	ToGetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArrayOutputWithContext(context.Context) GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArrayOutput
}

type GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArray []GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleInput

func (GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycle)(nil)).Elem()
}

func (i GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArray) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArrayOutput() GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArrayOutput {
	return i.ToGetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArrayOutputWithContext(context.Background())
}

func (i GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArray) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArrayOutputWithContext(ctx context.Context) GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArrayOutput)
}

type GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleOutput struct{ *pulumi.OutputState }

func (GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycle)(nil)).Elem()
}

func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleOutput) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleOutput() GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleOutput {
	return o
}

func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleOutput) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleOutputWithContext(ctx context.Context) GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleOutput {
	return o
}

// A filter to return only resources that match the entire display name given.
func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycle) string { return v.DisplayName }).(pulumi.StringOutput)
}

// OCID identifier for the Exadata Fleet Update Collection.
func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycle) string { return v.Id }).(pulumi.StringOutput)
}

type GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArrayOutput struct{ *pulumi.OutputState }

func (GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycle)(nil)).Elem()
}

func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArrayOutput) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArrayOutput() GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArrayOutput {
	return o
}

func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArrayOutput) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArrayOutputWithContext(ctx context.Context) GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArrayOutput {
	return o
}

func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArrayOutput) Index(i pulumi.IntInput) GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycle {
		return vs[0].([]GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycle)[vs[1].(int)]
	}).(GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleOutput)
}

type GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscovery struct {
	// Filters to perform the target discovery.
	Filters []GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilter `pulumi:"filters"`
	// OCIDs of Fleet Software Update Discovery.
	FsuDiscoveryId string `pulumi:"fsuDiscoveryId"`
	// Oracle Cloud Infrastructure Search Service query string.
	Query string `pulumi:"query"`
	// Possible fleet discovery strategies.
	Strategy string `pulumi:"strategy"`
	// OCIDs of target resources to include. For EXACC service type Collections only VMClusters are allowed. For EXACS service type Collections only CloudVMClusters are allowed.
	Targets []string `pulumi:"targets"`
}

// GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryInput is an input type that accepts GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArgs and GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryOutput values.
// You can construct a concrete instance of `GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryInput` via:
//
//	GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArgs{...}
type GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryInput interface {
	pulumi.Input

	ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryOutput() GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryOutput
	ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryOutputWithContext(context.Context) GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryOutput
}

type GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArgs struct {
	// Filters to perform the target discovery.
	Filters GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArrayInput `pulumi:"filters"`
	// OCIDs of Fleet Software Update Discovery.
	FsuDiscoveryId pulumi.StringInput `pulumi:"fsuDiscoveryId"`
	// Oracle Cloud Infrastructure Search Service query string.
	Query pulumi.StringInput `pulumi:"query"`
	// Possible fleet discovery strategies.
	Strategy pulumi.StringInput `pulumi:"strategy"`
	// OCIDs of target resources to include. For EXACC service type Collections only VMClusters are allowed. For EXACS service type Collections only CloudVMClusters are allowed.
	Targets pulumi.StringArrayInput `pulumi:"targets"`
}

func (GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscovery)(nil)).Elem()
}

func (i GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArgs) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryOutput() GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryOutput {
	return i.ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryOutputWithContext(context.Background())
}

func (i GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArgs) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryOutputWithContext(ctx context.Context) GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryOutput)
}

// GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArrayInput is an input type that accepts GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArray and GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArrayOutput values.
// You can construct a concrete instance of `GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArrayInput` via:
//
//	GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArray{ GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArgs{...} }
type GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArrayInput interface {
	pulumi.Input

	ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArrayOutput() GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArrayOutput
	ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArrayOutputWithContext(context.Context) GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArrayOutput
}

type GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArray []GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryInput

func (GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscovery)(nil)).Elem()
}

func (i GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArray) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArrayOutput() GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArrayOutput {
	return i.ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArrayOutputWithContext(context.Background())
}

func (i GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArray) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArrayOutputWithContext(ctx context.Context) GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArrayOutput)
}

type GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryOutput struct{ *pulumi.OutputState }

func (GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscovery)(nil)).Elem()
}

func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryOutput) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryOutput() GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryOutput {
	return o
}

func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryOutput) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryOutputWithContext(ctx context.Context) GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryOutput {
	return o
}

// Filters to perform the target discovery.
func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryOutput) Filters() GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArrayOutput {
	return o.ApplyT(func(v GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscovery) []GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilter {
		return v.Filters
	}).(GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArrayOutput)
}

// OCIDs of Fleet Software Update Discovery.
func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryOutput) FsuDiscoveryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscovery) string {
		return v.FsuDiscoveryId
	}).(pulumi.StringOutput)
}

// Oracle Cloud Infrastructure Search Service query string.
func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscovery) string { return v.Query }).(pulumi.StringOutput)
}

// Possible fleet discovery strategies.
func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryOutput) Strategy() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscovery) string { return v.Strategy }).(pulumi.StringOutput)
}

// OCIDs of target resources to include. For EXACC service type Collections only VMClusters are allowed. For EXACS service type Collections only CloudVMClusters are allowed.
func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryOutput) Targets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscovery) []string { return v.Targets }).(pulumi.StringArrayOutput)
}

type GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArrayOutput struct{ *pulumi.OutputState }

func (GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscovery)(nil)).Elem()
}

func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArrayOutput) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArrayOutput() GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArrayOutput {
	return o
}

func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArrayOutput) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArrayOutputWithContext(ctx context.Context) GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArrayOutput {
	return o
}

func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArrayOutput) Index(i pulumi.IntInput) GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscovery {
		return vs[0].([]GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscovery)[vs[1].(int)]
	}).(GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryOutput)
}

type GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilter struct {
	// Type of resource to match in the discovery.
	EntityType string `pulumi:"entityType"`
	// Related resource Ids to include in the discovery.  All must match the specified entityType.
	Identifiers []string `pulumi:"identifiers"`
	// INCLUDE or EXCLUDE the filter results in the discovery for DB targets. Supported for 'FSUCOLLECTION' RESOURCE_ID filter only.
	Mode string `pulumi:"mode"`
	// List of Database unique names to include in the discovery.
	Names []string `pulumi:"names"`
	// Type of join for each element in this filter.
	Operator string `pulumi:"operator"`
	// Freeform tags to include in the discovery.
	Tags []GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTag `pulumi:"tags"`
	// A filter to return only resources whose type matches the given type.
	Type string `pulumi:"type"`
	// List of Versions strings to include in the discovery.
	Versions []string `pulumi:"versions"`
}

// GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterInput is an input type that accepts GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArgs and GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterOutput values.
// You can construct a concrete instance of `GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterInput` via:
//
//	GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArgs{...}
type GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterInput interface {
	pulumi.Input

	ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterOutput() GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterOutput
	ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterOutputWithContext(context.Context) GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterOutput
}

type GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArgs struct {
	// Type of resource to match in the discovery.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Related resource Ids to include in the discovery.  All must match the specified entityType.
	Identifiers pulumi.StringArrayInput `pulumi:"identifiers"`
	// INCLUDE or EXCLUDE the filter results in the discovery for DB targets. Supported for 'FSUCOLLECTION' RESOURCE_ID filter only.
	Mode pulumi.StringInput `pulumi:"mode"`
	// List of Database unique names to include in the discovery.
	Names pulumi.StringArrayInput `pulumi:"names"`
	// Type of join for each element in this filter.
	Operator pulumi.StringInput `pulumi:"operator"`
	// Freeform tags to include in the discovery.
	Tags GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArrayInput `pulumi:"tags"`
	// A filter to return only resources whose type matches the given type.
	Type pulumi.StringInput `pulumi:"type"`
	// List of Versions strings to include in the discovery.
	Versions pulumi.StringArrayInput `pulumi:"versions"`
}

func (GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilter)(nil)).Elem()
}

func (i GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArgs) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterOutput() GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterOutput {
	return i.ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterOutputWithContext(context.Background())
}

func (i GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArgs) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterOutputWithContext(ctx context.Context) GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterOutput)
}

// GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArrayInput is an input type that accepts GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArray and GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArrayOutput values.
// You can construct a concrete instance of `GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArrayInput` via:
//
//	GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArray{ GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArgs{...} }
type GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArrayInput interface {
	pulumi.Input

	ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArrayOutput() GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArrayOutput
	ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArrayOutputWithContext(context.Context) GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArrayOutput
}

type GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArray []GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterInput

func (GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilter)(nil)).Elem()
}

func (i GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArray) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArrayOutput() GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArrayOutput {
	return i.ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArrayOutputWithContext(context.Background())
}

func (i GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArray) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArrayOutputWithContext(ctx context.Context) GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArrayOutput)
}

type GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterOutput struct{ *pulumi.OutputState }

func (GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilter)(nil)).Elem()
}

func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterOutput) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterOutput() GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterOutput {
	return o
}

func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterOutput) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterOutputWithContext(ctx context.Context) GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterOutput {
	return o
}

// Type of resource to match in the discovery.
func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilter) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Related resource Ids to include in the discovery.  All must match the specified entityType.
func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterOutput) Identifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilter) []string {
		return v.Identifiers
	}).(pulumi.StringArrayOutput)
}

// INCLUDE or EXCLUDE the filter results in the discovery for DB targets. Supported for 'FSUCOLLECTION' RESOURCE_ID filter only.
func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilter) string { return v.Mode }).(pulumi.StringOutput)
}

// List of Database unique names to include in the discovery.
func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilter) []string {
		return v.Names
	}).(pulumi.StringArrayOutput)
}

// Type of join for each element in this filter.
func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilter) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// Freeform tags to include in the discovery.
func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterOutput) Tags() GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArrayOutput {
	return o.ApplyT(func(v GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilter) []GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTag {
		return v.Tags
	}).(GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArrayOutput)
}

// A filter to return only resources whose type matches the given type.
func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilter) string { return v.Type }).(pulumi.StringOutput)
}

// List of Versions strings to include in the discovery.
func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterOutput) Versions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilter) []string {
		return v.Versions
	}).(pulumi.StringArrayOutput)
}

type GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArrayOutput struct{ *pulumi.OutputState }

func (GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilter)(nil)).Elem()
}

func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArrayOutput) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArrayOutput() GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArrayOutput {
	return o
}

func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArrayOutput) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArrayOutputWithContext(ctx context.Context) GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArrayOutput {
	return o
}

func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArrayOutput) Index(i pulumi.IntInput) GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilter {
		return vs[0].([]GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilter)[vs[1].(int)]
	}).(GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterOutput)
}

type GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTag struct {
	// Freeform tag key.
	Key string `pulumi:"key"`
	// Defined tag namespace.
	Namespace string `pulumi:"namespace"`
	// Freeform tag value.
	Value string `pulumi:"value"`
}

// GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagInput is an input type that accepts GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArgs and GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagOutput values.
// You can construct a concrete instance of `GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagInput` via:
//
//	GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArgs{...}
type GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagInput interface {
	pulumi.Input

	ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagOutput() GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagOutput
	ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagOutputWithContext(context.Context) GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagOutput
}

type GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArgs struct {
	// Freeform tag key.
	Key pulumi.StringInput `pulumi:"key"`
	// Defined tag namespace.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// Freeform tag value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTag)(nil)).Elem()
}

func (i GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArgs) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagOutput() GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagOutput {
	return i.ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagOutputWithContext(context.Background())
}

func (i GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArgs) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagOutputWithContext(ctx context.Context) GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagOutput)
}

// GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArrayInput is an input type that accepts GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArray and GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArrayOutput values.
// You can construct a concrete instance of `GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArrayInput` via:
//
//	GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArray{ GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArgs{...} }
type GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArrayInput interface {
	pulumi.Input

	ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArrayOutput() GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArrayOutput
	ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArrayOutputWithContext(context.Context) GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArrayOutput
}

type GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArray []GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagInput

func (GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTag)(nil)).Elem()
}

func (i GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArray) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArrayOutput() GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArrayOutput {
	return i.ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArrayOutputWithContext(context.Background())
}

func (i GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArray) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArrayOutputWithContext(ctx context.Context) GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArrayOutput)
}

type GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagOutput struct{ *pulumi.OutputState }

func (GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTag)(nil)).Elem()
}

func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagOutput) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagOutput() GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagOutput {
	return o
}

func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagOutput) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagOutputWithContext(ctx context.Context) GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagOutput {
	return o
}

// Freeform tag key.
func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTag) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// Defined tag namespace.
func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTag) string {
		return v.Namespace
	}).(pulumi.StringOutput)
}

// Freeform tag value.
func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTag) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArrayOutput struct{ *pulumi.OutputState }

func (GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTag)(nil)).Elem()
}

func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArrayOutput) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArrayOutput() GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArrayOutput {
	return o
}

func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArrayOutput) ToGetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArrayOutputWithContext(ctx context.Context) GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArrayOutput {
	return o
}

func (o GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArrayOutput) Index(i pulumi.IntInput) GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTag {
		return vs[0].([]GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTag)[vs[1].(int)]
	}).(GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagOutput)
}

type GetFsuCycleApplyActionSchedule struct {
	// The date and time the Exadata Fleet Update Action is expected to start. [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeToStart string `pulumi:"timeToStart"`
	// Type of Exadata Fleet Update Cycle.
	Type string `pulumi:"type"`
}

// GetFsuCycleApplyActionScheduleInput is an input type that accepts GetFsuCycleApplyActionScheduleArgs and GetFsuCycleApplyActionScheduleOutput values.
// You can construct a concrete instance of `GetFsuCycleApplyActionScheduleInput` via:
//
//	GetFsuCycleApplyActionScheduleArgs{...}
type GetFsuCycleApplyActionScheduleInput interface {
	pulumi.Input

	ToGetFsuCycleApplyActionScheduleOutput() GetFsuCycleApplyActionScheduleOutput
	ToGetFsuCycleApplyActionScheduleOutputWithContext(context.Context) GetFsuCycleApplyActionScheduleOutput
}

type GetFsuCycleApplyActionScheduleArgs struct {
	// The date and time the Exadata Fleet Update Action is expected to start. [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeToStart pulumi.StringInput `pulumi:"timeToStart"`
	// Type of Exadata Fleet Update Cycle.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetFsuCycleApplyActionScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCycleApplyActionSchedule)(nil)).Elem()
}

func (i GetFsuCycleApplyActionScheduleArgs) ToGetFsuCycleApplyActionScheduleOutput() GetFsuCycleApplyActionScheduleOutput {
	return i.ToGetFsuCycleApplyActionScheduleOutputWithContext(context.Background())
}

func (i GetFsuCycleApplyActionScheduleArgs) ToGetFsuCycleApplyActionScheduleOutputWithContext(ctx context.Context) GetFsuCycleApplyActionScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCycleApplyActionScheduleOutput)
}

// GetFsuCycleApplyActionScheduleArrayInput is an input type that accepts GetFsuCycleApplyActionScheduleArray and GetFsuCycleApplyActionScheduleArrayOutput values.
// You can construct a concrete instance of `GetFsuCycleApplyActionScheduleArrayInput` via:
//
//	GetFsuCycleApplyActionScheduleArray{ GetFsuCycleApplyActionScheduleArgs{...} }
type GetFsuCycleApplyActionScheduleArrayInput interface {
	pulumi.Input

	ToGetFsuCycleApplyActionScheduleArrayOutput() GetFsuCycleApplyActionScheduleArrayOutput
	ToGetFsuCycleApplyActionScheduleArrayOutputWithContext(context.Context) GetFsuCycleApplyActionScheduleArrayOutput
}

type GetFsuCycleApplyActionScheduleArray []GetFsuCycleApplyActionScheduleInput

func (GetFsuCycleApplyActionScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCycleApplyActionSchedule)(nil)).Elem()
}

func (i GetFsuCycleApplyActionScheduleArray) ToGetFsuCycleApplyActionScheduleArrayOutput() GetFsuCycleApplyActionScheduleArrayOutput {
	return i.ToGetFsuCycleApplyActionScheduleArrayOutputWithContext(context.Background())
}

func (i GetFsuCycleApplyActionScheduleArray) ToGetFsuCycleApplyActionScheduleArrayOutputWithContext(ctx context.Context) GetFsuCycleApplyActionScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCycleApplyActionScheduleArrayOutput)
}

type GetFsuCycleApplyActionScheduleOutput struct{ *pulumi.OutputState }

func (GetFsuCycleApplyActionScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCycleApplyActionSchedule)(nil)).Elem()
}

func (o GetFsuCycleApplyActionScheduleOutput) ToGetFsuCycleApplyActionScheduleOutput() GetFsuCycleApplyActionScheduleOutput {
	return o
}

func (o GetFsuCycleApplyActionScheduleOutput) ToGetFsuCycleApplyActionScheduleOutputWithContext(ctx context.Context) GetFsuCycleApplyActionScheduleOutput {
	return o
}

// The date and time the Exadata Fleet Update Action is expected to start. [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
func (o GetFsuCycleApplyActionScheduleOutput) TimeToStart() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCycleApplyActionSchedule) string { return v.TimeToStart }).(pulumi.StringOutput)
}

// Type of Exadata Fleet Update Cycle.
func (o GetFsuCycleApplyActionScheduleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCycleApplyActionSchedule) string { return v.Type }).(pulumi.StringOutput)
}

type GetFsuCycleApplyActionScheduleArrayOutput struct{ *pulumi.OutputState }

func (GetFsuCycleApplyActionScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCycleApplyActionSchedule)(nil)).Elem()
}

func (o GetFsuCycleApplyActionScheduleArrayOutput) ToGetFsuCycleApplyActionScheduleArrayOutput() GetFsuCycleApplyActionScheduleArrayOutput {
	return o
}

func (o GetFsuCycleApplyActionScheduleArrayOutput) ToGetFsuCycleApplyActionScheduleArrayOutputWithContext(ctx context.Context) GetFsuCycleApplyActionScheduleArrayOutput {
	return o
}

func (o GetFsuCycleApplyActionScheduleArrayOutput) Index(i pulumi.IntInput) GetFsuCycleApplyActionScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFsuCycleApplyActionSchedule {
		return vs[0].([]GetFsuCycleApplyActionSchedule)[vs[1].(int)]
	}).(GetFsuCycleApplyActionScheduleOutput)
}

type GetFsuCycleBatchingStrategy struct {
	// True to force rolling patching.
	IsForceRolling bool `pulumi:"isForceRolling"`
	// True to wait for customer to resume the Apply Action once the first half is done. False to automatically patch the second half.
	IsWaitForBatchResume bool `pulumi:"isWaitForBatchResume"`
	// Percentage of availability in the service during the Patch operation.
	Percentage int `pulumi:"percentage"`
	// Type of Exadata Fleet Update Cycle.
	Type string `pulumi:"type"`
}

// GetFsuCycleBatchingStrategyInput is an input type that accepts GetFsuCycleBatchingStrategyArgs and GetFsuCycleBatchingStrategyOutput values.
// You can construct a concrete instance of `GetFsuCycleBatchingStrategyInput` via:
//
//	GetFsuCycleBatchingStrategyArgs{...}
type GetFsuCycleBatchingStrategyInput interface {
	pulumi.Input

	ToGetFsuCycleBatchingStrategyOutput() GetFsuCycleBatchingStrategyOutput
	ToGetFsuCycleBatchingStrategyOutputWithContext(context.Context) GetFsuCycleBatchingStrategyOutput
}

type GetFsuCycleBatchingStrategyArgs struct {
	// True to force rolling patching.
	IsForceRolling pulumi.BoolInput `pulumi:"isForceRolling"`
	// True to wait for customer to resume the Apply Action once the first half is done. False to automatically patch the second half.
	IsWaitForBatchResume pulumi.BoolInput `pulumi:"isWaitForBatchResume"`
	// Percentage of availability in the service during the Patch operation.
	Percentage pulumi.IntInput `pulumi:"percentage"`
	// Type of Exadata Fleet Update Cycle.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetFsuCycleBatchingStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCycleBatchingStrategy)(nil)).Elem()
}

func (i GetFsuCycleBatchingStrategyArgs) ToGetFsuCycleBatchingStrategyOutput() GetFsuCycleBatchingStrategyOutput {
	return i.ToGetFsuCycleBatchingStrategyOutputWithContext(context.Background())
}

func (i GetFsuCycleBatchingStrategyArgs) ToGetFsuCycleBatchingStrategyOutputWithContext(ctx context.Context) GetFsuCycleBatchingStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCycleBatchingStrategyOutput)
}

// GetFsuCycleBatchingStrategyArrayInput is an input type that accepts GetFsuCycleBatchingStrategyArray and GetFsuCycleBatchingStrategyArrayOutput values.
// You can construct a concrete instance of `GetFsuCycleBatchingStrategyArrayInput` via:
//
//	GetFsuCycleBatchingStrategyArray{ GetFsuCycleBatchingStrategyArgs{...} }
type GetFsuCycleBatchingStrategyArrayInput interface {
	pulumi.Input

	ToGetFsuCycleBatchingStrategyArrayOutput() GetFsuCycleBatchingStrategyArrayOutput
	ToGetFsuCycleBatchingStrategyArrayOutputWithContext(context.Context) GetFsuCycleBatchingStrategyArrayOutput
}

type GetFsuCycleBatchingStrategyArray []GetFsuCycleBatchingStrategyInput

func (GetFsuCycleBatchingStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCycleBatchingStrategy)(nil)).Elem()
}

func (i GetFsuCycleBatchingStrategyArray) ToGetFsuCycleBatchingStrategyArrayOutput() GetFsuCycleBatchingStrategyArrayOutput {
	return i.ToGetFsuCycleBatchingStrategyArrayOutputWithContext(context.Background())
}

func (i GetFsuCycleBatchingStrategyArray) ToGetFsuCycleBatchingStrategyArrayOutputWithContext(ctx context.Context) GetFsuCycleBatchingStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCycleBatchingStrategyArrayOutput)
}

type GetFsuCycleBatchingStrategyOutput struct{ *pulumi.OutputState }

func (GetFsuCycleBatchingStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCycleBatchingStrategy)(nil)).Elem()
}

func (o GetFsuCycleBatchingStrategyOutput) ToGetFsuCycleBatchingStrategyOutput() GetFsuCycleBatchingStrategyOutput {
	return o
}

func (o GetFsuCycleBatchingStrategyOutput) ToGetFsuCycleBatchingStrategyOutputWithContext(ctx context.Context) GetFsuCycleBatchingStrategyOutput {
	return o
}

// True to force rolling patching.
func (o GetFsuCycleBatchingStrategyOutput) IsForceRolling() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFsuCycleBatchingStrategy) bool { return v.IsForceRolling }).(pulumi.BoolOutput)
}

// True to wait for customer to resume the Apply Action once the first half is done. False to automatically patch the second half.
func (o GetFsuCycleBatchingStrategyOutput) IsWaitForBatchResume() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFsuCycleBatchingStrategy) bool { return v.IsWaitForBatchResume }).(pulumi.BoolOutput)
}

// Percentage of availability in the service during the Patch operation.
func (o GetFsuCycleBatchingStrategyOutput) Percentage() pulumi.IntOutput {
	return o.ApplyT(func(v GetFsuCycleBatchingStrategy) int { return v.Percentage }).(pulumi.IntOutput)
}

// Type of Exadata Fleet Update Cycle.
func (o GetFsuCycleBatchingStrategyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCycleBatchingStrategy) string { return v.Type }).(pulumi.StringOutput)
}

type GetFsuCycleBatchingStrategyArrayOutput struct{ *pulumi.OutputState }

func (GetFsuCycleBatchingStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCycleBatchingStrategy)(nil)).Elem()
}

func (o GetFsuCycleBatchingStrategyArrayOutput) ToGetFsuCycleBatchingStrategyArrayOutput() GetFsuCycleBatchingStrategyArrayOutput {
	return o
}

func (o GetFsuCycleBatchingStrategyArrayOutput) ToGetFsuCycleBatchingStrategyArrayOutputWithContext(ctx context.Context) GetFsuCycleBatchingStrategyArrayOutput {
	return o
}

func (o GetFsuCycleBatchingStrategyArrayOutput) Index(i pulumi.IntInput) GetFsuCycleBatchingStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFsuCycleBatchingStrategy {
		return vs[0].([]GetFsuCycleBatchingStrategy)[vs[1].(int)]
	}).(GetFsuCycleBatchingStrategyOutput)
}

type GetFsuCycleDiagnosticsCollection struct {
	// Enable incident logs and trace collection.  Allow Oracle to collect incident logs and traces to enable fault diagnosis and issue resolution according to the selected mode.
	LogCollectionMode string `pulumi:"logCollectionMode"`
}

// GetFsuCycleDiagnosticsCollectionInput is an input type that accepts GetFsuCycleDiagnosticsCollectionArgs and GetFsuCycleDiagnosticsCollectionOutput values.
// You can construct a concrete instance of `GetFsuCycleDiagnosticsCollectionInput` via:
//
//	GetFsuCycleDiagnosticsCollectionArgs{...}
type GetFsuCycleDiagnosticsCollectionInput interface {
	pulumi.Input

	ToGetFsuCycleDiagnosticsCollectionOutput() GetFsuCycleDiagnosticsCollectionOutput
	ToGetFsuCycleDiagnosticsCollectionOutputWithContext(context.Context) GetFsuCycleDiagnosticsCollectionOutput
}

type GetFsuCycleDiagnosticsCollectionArgs struct {
	// Enable incident logs and trace collection.  Allow Oracle to collect incident logs and traces to enable fault diagnosis and issue resolution according to the selected mode.
	LogCollectionMode pulumi.StringInput `pulumi:"logCollectionMode"`
}

func (GetFsuCycleDiagnosticsCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCycleDiagnosticsCollection)(nil)).Elem()
}

func (i GetFsuCycleDiagnosticsCollectionArgs) ToGetFsuCycleDiagnosticsCollectionOutput() GetFsuCycleDiagnosticsCollectionOutput {
	return i.ToGetFsuCycleDiagnosticsCollectionOutputWithContext(context.Background())
}

func (i GetFsuCycleDiagnosticsCollectionArgs) ToGetFsuCycleDiagnosticsCollectionOutputWithContext(ctx context.Context) GetFsuCycleDiagnosticsCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCycleDiagnosticsCollectionOutput)
}

// GetFsuCycleDiagnosticsCollectionArrayInput is an input type that accepts GetFsuCycleDiagnosticsCollectionArray and GetFsuCycleDiagnosticsCollectionArrayOutput values.
// You can construct a concrete instance of `GetFsuCycleDiagnosticsCollectionArrayInput` via:
//
//	GetFsuCycleDiagnosticsCollectionArray{ GetFsuCycleDiagnosticsCollectionArgs{...} }
type GetFsuCycleDiagnosticsCollectionArrayInput interface {
	pulumi.Input

	ToGetFsuCycleDiagnosticsCollectionArrayOutput() GetFsuCycleDiagnosticsCollectionArrayOutput
	ToGetFsuCycleDiagnosticsCollectionArrayOutputWithContext(context.Context) GetFsuCycleDiagnosticsCollectionArrayOutput
}

type GetFsuCycleDiagnosticsCollectionArray []GetFsuCycleDiagnosticsCollectionInput

func (GetFsuCycleDiagnosticsCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCycleDiagnosticsCollection)(nil)).Elem()
}

func (i GetFsuCycleDiagnosticsCollectionArray) ToGetFsuCycleDiagnosticsCollectionArrayOutput() GetFsuCycleDiagnosticsCollectionArrayOutput {
	return i.ToGetFsuCycleDiagnosticsCollectionArrayOutputWithContext(context.Background())
}

func (i GetFsuCycleDiagnosticsCollectionArray) ToGetFsuCycleDiagnosticsCollectionArrayOutputWithContext(ctx context.Context) GetFsuCycleDiagnosticsCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCycleDiagnosticsCollectionArrayOutput)
}

type GetFsuCycleDiagnosticsCollectionOutput struct{ *pulumi.OutputState }

func (GetFsuCycleDiagnosticsCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCycleDiagnosticsCollection)(nil)).Elem()
}

func (o GetFsuCycleDiagnosticsCollectionOutput) ToGetFsuCycleDiagnosticsCollectionOutput() GetFsuCycleDiagnosticsCollectionOutput {
	return o
}

func (o GetFsuCycleDiagnosticsCollectionOutput) ToGetFsuCycleDiagnosticsCollectionOutputWithContext(ctx context.Context) GetFsuCycleDiagnosticsCollectionOutput {
	return o
}

// Enable incident logs and trace collection.  Allow Oracle to collect incident logs and traces to enable fault diagnosis and issue resolution according to the selected mode.
func (o GetFsuCycleDiagnosticsCollectionOutput) LogCollectionMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCycleDiagnosticsCollection) string { return v.LogCollectionMode }).(pulumi.StringOutput)
}

type GetFsuCycleDiagnosticsCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetFsuCycleDiagnosticsCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCycleDiagnosticsCollection)(nil)).Elem()
}

func (o GetFsuCycleDiagnosticsCollectionArrayOutput) ToGetFsuCycleDiagnosticsCollectionArrayOutput() GetFsuCycleDiagnosticsCollectionArrayOutput {
	return o
}

func (o GetFsuCycleDiagnosticsCollectionArrayOutput) ToGetFsuCycleDiagnosticsCollectionArrayOutputWithContext(ctx context.Context) GetFsuCycleDiagnosticsCollectionArrayOutput {
	return o
}

func (o GetFsuCycleDiagnosticsCollectionArrayOutput) Index(i pulumi.IntInput) GetFsuCycleDiagnosticsCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFsuCycleDiagnosticsCollection {
		return vs[0].([]GetFsuCycleDiagnosticsCollection)[vs[1].(int)]
	}).(GetFsuCycleDiagnosticsCollectionOutput)
}

type GetFsuCycleGoalVersionDetail struct {
	// Goal home policy to use when Staging the Goal Version during patching. CREATE_NEW: Create a new DBHome (for Database Collections) for the specified image or version. USE_EXISTING: All database targets in the same VMCluster or CloudVmCluster will be moved to a shared database home.  If an existing home for the selected image or version is not found in the VM Cluster for a target database, then a new home will be created.  If more than one existing home for the selected image is found, then the home with the least number of databases will be used.  If multiple homes have the least number of databases, then a home will be selected at random.
	HomePolicy string `pulumi:"homePolicy"`
	// Prefix name used for new DB home resources created as part of the Stage Action. Format: <specified_prefix>_<timestamp> If not specified, a default Oracle Cloud Infrastructure DB home resource will be generated for the new DB home resources created.
	NewHomePrefix string `pulumi:"newHomePrefix"`
	// Target database software image OCID.
	SoftwareImageId string `pulumi:"softwareImageId"`
	// Type of Exadata Fleet Update Cycle.
	Type string `pulumi:"type"`
	// Target DB or GI version string for the Exadata Fleet Update Cycle.
	Version string `pulumi:"version"`
}

// GetFsuCycleGoalVersionDetailInput is an input type that accepts GetFsuCycleGoalVersionDetailArgs and GetFsuCycleGoalVersionDetailOutput values.
// You can construct a concrete instance of `GetFsuCycleGoalVersionDetailInput` via:
//
//	GetFsuCycleGoalVersionDetailArgs{...}
type GetFsuCycleGoalVersionDetailInput interface {
	pulumi.Input

	ToGetFsuCycleGoalVersionDetailOutput() GetFsuCycleGoalVersionDetailOutput
	ToGetFsuCycleGoalVersionDetailOutputWithContext(context.Context) GetFsuCycleGoalVersionDetailOutput
}

type GetFsuCycleGoalVersionDetailArgs struct {
	// Goal home policy to use when Staging the Goal Version during patching. CREATE_NEW: Create a new DBHome (for Database Collections) for the specified image or version. USE_EXISTING: All database targets in the same VMCluster or CloudVmCluster will be moved to a shared database home.  If an existing home for the selected image or version is not found in the VM Cluster for a target database, then a new home will be created.  If more than one existing home for the selected image is found, then the home with the least number of databases will be used.  If multiple homes have the least number of databases, then a home will be selected at random.
	HomePolicy pulumi.StringInput `pulumi:"homePolicy"`
	// Prefix name used for new DB home resources created as part of the Stage Action. Format: <specified_prefix>_<timestamp> If not specified, a default Oracle Cloud Infrastructure DB home resource will be generated for the new DB home resources created.
	NewHomePrefix pulumi.StringInput `pulumi:"newHomePrefix"`
	// Target database software image OCID.
	SoftwareImageId pulumi.StringInput `pulumi:"softwareImageId"`
	// Type of Exadata Fleet Update Cycle.
	Type pulumi.StringInput `pulumi:"type"`
	// Target DB or GI version string for the Exadata Fleet Update Cycle.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetFsuCycleGoalVersionDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCycleGoalVersionDetail)(nil)).Elem()
}

func (i GetFsuCycleGoalVersionDetailArgs) ToGetFsuCycleGoalVersionDetailOutput() GetFsuCycleGoalVersionDetailOutput {
	return i.ToGetFsuCycleGoalVersionDetailOutputWithContext(context.Background())
}

func (i GetFsuCycleGoalVersionDetailArgs) ToGetFsuCycleGoalVersionDetailOutputWithContext(ctx context.Context) GetFsuCycleGoalVersionDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCycleGoalVersionDetailOutput)
}

// GetFsuCycleGoalVersionDetailArrayInput is an input type that accepts GetFsuCycleGoalVersionDetailArray and GetFsuCycleGoalVersionDetailArrayOutput values.
// You can construct a concrete instance of `GetFsuCycleGoalVersionDetailArrayInput` via:
//
//	GetFsuCycleGoalVersionDetailArray{ GetFsuCycleGoalVersionDetailArgs{...} }
type GetFsuCycleGoalVersionDetailArrayInput interface {
	pulumi.Input

	ToGetFsuCycleGoalVersionDetailArrayOutput() GetFsuCycleGoalVersionDetailArrayOutput
	ToGetFsuCycleGoalVersionDetailArrayOutputWithContext(context.Context) GetFsuCycleGoalVersionDetailArrayOutput
}

type GetFsuCycleGoalVersionDetailArray []GetFsuCycleGoalVersionDetailInput

func (GetFsuCycleGoalVersionDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCycleGoalVersionDetail)(nil)).Elem()
}

func (i GetFsuCycleGoalVersionDetailArray) ToGetFsuCycleGoalVersionDetailArrayOutput() GetFsuCycleGoalVersionDetailArrayOutput {
	return i.ToGetFsuCycleGoalVersionDetailArrayOutputWithContext(context.Background())
}

func (i GetFsuCycleGoalVersionDetailArray) ToGetFsuCycleGoalVersionDetailArrayOutputWithContext(ctx context.Context) GetFsuCycleGoalVersionDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCycleGoalVersionDetailArrayOutput)
}

type GetFsuCycleGoalVersionDetailOutput struct{ *pulumi.OutputState }

func (GetFsuCycleGoalVersionDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCycleGoalVersionDetail)(nil)).Elem()
}

func (o GetFsuCycleGoalVersionDetailOutput) ToGetFsuCycleGoalVersionDetailOutput() GetFsuCycleGoalVersionDetailOutput {
	return o
}

func (o GetFsuCycleGoalVersionDetailOutput) ToGetFsuCycleGoalVersionDetailOutputWithContext(ctx context.Context) GetFsuCycleGoalVersionDetailOutput {
	return o
}

// Goal home policy to use when Staging the Goal Version during patching. CREATE_NEW: Create a new DBHome (for Database Collections) for the specified image or version. USE_EXISTING: All database targets in the same VMCluster or CloudVmCluster will be moved to a shared database home.  If an existing home for the selected image or version is not found in the VM Cluster for a target database, then a new home will be created.  If more than one existing home for the selected image is found, then the home with the least number of databases will be used.  If multiple homes have the least number of databases, then a home will be selected at random.
func (o GetFsuCycleGoalVersionDetailOutput) HomePolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCycleGoalVersionDetail) string { return v.HomePolicy }).(pulumi.StringOutput)
}

// Prefix name used for new DB home resources created as part of the Stage Action. Format: <specified_prefix>_<timestamp> If not specified, a default Oracle Cloud Infrastructure DB home resource will be generated for the new DB home resources created.
func (o GetFsuCycleGoalVersionDetailOutput) NewHomePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCycleGoalVersionDetail) string { return v.NewHomePrefix }).(pulumi.StringOutput)
}

// Target database software image OCID.
func (o GetFsuCycleGoalVersionDetailOutput) SoftwareImageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCycleGoalVersionDetail) string { return v.SoftwareImageId }).(pulumi.StringOutput)
}

// Type of Exadata Fleet Update Cycle.
func (o GetFsuCycleGoalVersionDetailOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCycleGoalVersionDetail) string { return v.Type }).(pulumi.StringOutput)
}

// Target DB or GI version string for the Exadata Fleet Update Cycle.
func (o GetFsuCycleGoalVersionDetailOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCycleGoalVersionDetail) string { return v.Version }).(pulumi.StringOutput)
}

type GetFsuCycleGoalVersionDetailArrayOutput struct{ *pulumi.OutputState }

func (GetFsuCycleGoalVersionDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCycleGoalVersionDetail)(nil)).Elem()
}

func (o GetFsuCycleGoalVersionDetailArrayOutput) ToGetFsuCycleGoalVersionDetailArrayOutput() GetFsuCycleGoalVersionDetailArrayOutput {
	return o
}

func (o GetFsuCycleGoalVersionDetailArrayOutput) ToGetFsuCycleGoalVersionDetailArrayOutputWithContext(ctx context.Context) GetFsuCycleGoalVersionDetailArrayOutput {
	return o
}

func (o GetFsuCycleGoalVersionDetailArrayOutput) Index(i pulumi.IntInput) GetFsuCycleGoalVersionDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFsuCycleGoalVersionDetail {
		return vs[0].([]GetFsuCycleGoalVersionDetail)[vs[1].(int)]
	}).(GetFsuCycleGoalVersionDetailOutput)
}

type GetFsuCycleNextActionToExecute struct {
	// The date and time the Exadata Fleet Update Action is expected to start. [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeToStart string `pulumi:"timeToStart"`
	// Type of Exadata Fleet Update Cycle.
	Type string `pulumi:"type"`
}

// GetFsuCycleNextActionToExecuteInput is an input type that accepts GetFsuCycleNextActionToExecuteArgs and GetFsuCycleNextActionToExecuteOutput values.
// You can construct a concrete instance of `GetFsuCycleNextActionToExecuteInput` via:
//
//	GetFsuCycleNextActionToExecuteArgs{...}
type GetFsuCycleNextActionToExecuteInput interface {
	pulumi.Input

	ToGetFsuCycleNextActionToExecuteOutput() GetFsuCycleNextActionToExecuteOutput
	ToGetFsuCycleNextActionToExecuteOutputWithContext(context.Context) GetFsuCycleNextActionToExecuteOutput
}

type GetFsuCycleNextActionToExecuteArgs struct {
	// The date and time the Exadata Fleet Update Action is expected to start. [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeToStart pulumi.StringInput `pulumi:"timeToStart"`
	// Type of Exadata Fleet Update Cycle.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetFsuCycleNextActionToExecuteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCycleNextActionToExecute)(nil)).Elem()
}

func (i GetFsuCycleNextActionToExecuteArgs) ToGetFsuCycleNextActionToExecuteOutput() GetFsuCycleNextActionToExecuteOutput {
	return i.ToGetFsuCycleNextActionToExecuteOutputWithContext(context.Background())
}

func (i GetFsuCycleNextActionToExecuteArgs) ToGetFsuCycleNextActionToExecuteOutputWithContext(ctx context.Context) GetFsuCycleNextActionToExecuteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCycleNextActionToExecuteOutput)
}

// GetFsuCycleNextActionToExecuteArrayInput is an input type that accepts GetFsuCycleNextActionToExecuteArray and GetFsuCycleNextActionToExecuteArrayOutput values.
// You can construct a concrete instance of `GetFsuCycleNextActionToExecuteArrayInput` via:
//
//	GetFsuCycleNextActionToExecuteArray{ GetFsuCycleNextActionToExecuteArgs{...} }
type GetFsuCycleNextActionToExecuteArrayInput interface {
	pulumi.Input

	ToGetFsuCycleNextActionToExecuteArrayOutput() GetFsuCycleNextActionToExecuteArrayOutput
	ToGetFsuCycleNextActionToExecuteArrayOutputWithContext(context.Context) GetFsuCycleNextActionToExecuteArrayOutput
}

type GetFsuCycleNextActionToExecuteArray []GetFsuCycleNextActionToExecuteInput

func (GetFsuCycleNextActionToExecuteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCycleNextActionToExecute)(nil)).Elem()
}

func (i GetFsuCycleNextActionToExecuteArray) ToGetFsuCycleNextActionToExecuteArrayOutput() GetFsuCycleNextActionToExecuteArrayOutput {
	return i.ToGetFsuCycleNextActionToExecuteArrayOutputWithContext(context.Background())
}

func (i GetFsuCycleNextActionToExecuteArray) ToGetFsuCycleNextActionToExecuteArrayOutputWithContext(ctx context.Context) GetFsuCycleNextActionToExecuteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCycleNextActionToExecuteArrayOutput)
}

type GetFsuCycleNextActionToExecuteOutput struct{ *pulumi.OutputState }

func (GetFsuCycleNextActionToExecuteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCycleNextActionToExecute)(nil)).Elem()
}

func (o GetFsuCycleNextActionToExecuteOutput) ToGetFsuCycleNextActionToExecuteOutput() GetFsuCycleNextActionToExecuteOutput {
	return o
}

func (o GetFsuCycleNextActionToExecuteOutput) ToGetFsuCycleNextActionToExecuteOutputWithContext(ctx context.Context) GetFsuCycleNextActionToExecuteOutput {
	return o
}

// The date and time the Exadata Fleet Update Action is expected to start. [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
func (o GetFsuCycleNextActionToExecuteOutput) TimeToStart() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCycleNextActionToExecute) string { return v.TimeToStart }).(pulumi.StringOutput)
}

// Type of Exadata Fleet Update Cycle.
func (o GetFsuCycleNextActionToExecuteOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCycleNextActionToExecute) string { return v.Type }).(pulumi.StringOutput)
}

type GetFsuCycleNextActionToExecuteArrayOutput struct{ *pulumi.OutputState }

func (GetFsuCycleNextActionToExecuteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCycleNextActionToExecute)(nil)).Elem()
}

func (o GetFsuCycleNextActionToExecuteArrayOutput) ToGetFsuCycleNextActionToExecuteArrayOutput() GetFsuCycleNextActionToExecuteArrayOutput {
	return o
}

func (o GetFsuCycleNextActionToExecuteArrayOutput) ToGetFsuCycleNextActionToExecuteArrayOutputWithContext(ctx context.Context) GetFsuCycleNextActionToExecuteArrayOutput {
	return o
}

func (o GetFsuCycleNextActionToExecuteArrayOutput) Index(i pulumi.IntInput) GetFsuCycleNextActionToExecuteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFsuCycleNextActionToExecute {
		return vs[0].([]GetFsuCycleNextActionToExecute)[vs[1].(int)]
	}).(GetFsuCycleNextActionToExecuteOutput)
}

type GetFsuCycleStageActionSchedule struct {
	// The date and time the Exadata Fleet Update Action is expected to start. [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeToStart string `pulumi:"timeToStart"`
	// Type of Exadata Fleet Update Cycle.
	Type string `pulumi:"type"`
}

// GetFsuCycleStageActionScheduleInput is an input type that accepts GetFsuCycleStageActionScheduleArgs and GetFsuCycleStageActionScheduleOutput values.
// You can construct a concrete instance of `GetFsuCycleStageActionScheduleInput` via:
//
//	GetFsuCycleStageActionScheduleArgs{...}
type GetFsuCycleStageActionScheduleInput interface {
	pulumi.Input

	ToGetFsuCycleStageActionScheduleOutput() GetFsuCycleStageActionScheduleOutput
	ToGetFsuCycleStageActionScheduleOutputWithContext(context.Context) GetFsuCycleStageActionScheduleOutput
}

type GetFsuCycleStageActionScheduleArgs struct {
	// The date and time the Exadata Fleet Update Action is expected to start. [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeToStart pulumi.StringInput `pulumi:"timeToStart"`
	// Type of Exadata Fleet Update Cycle.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetFsuCycleStageActionScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCycleStageActionSchedule)(nil)).Elem()
}

func (i GetFsuCycleStageActionScheduleArgs) ToGetFsuCycleStageActionScheduleOutput() GetFsuCycleStageActionScheduleOutput {
	return i.ToGetFsuCycleStageActionScheduleOutputWithContext(context.Background())
}

func (i GetFsuCycleStageActionScheduleArgs) ToGetFsuCycleStageActionScheduleOutputWithContext(ctx context.Context) GetFsuCycleStageActionScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCycleStageActionScheduleOutput)
}

// GetFsuCycleStageActionScheduleArrayInput is an input type that accepts GetFsuCycleStageActionScheduleArray and GetFsuCycleStageActionScheduleArrayOutput values.
// You can construct a concrete instance of `GetFsuCycleStageActionScheduleArrayInput` via:
//
//	GetFsuCycleStageActionScheduleArray{ GetFsuCycleStageActionScheduleArgs{...} }
type GetFsuCycleStageActionScheduleArrayInput interface {
	pulumi.Input

	ToGetFsuCycleStageActionScheduleArrayOutput() GetFsuCycleStageActionScheduleArrayOutput
	ToGetFsuCycleStageActionScheduleArrayOutputWithContext(context.Context) GetFsuCycleStageActionScheduleArrayOutput
}

type GetFsuCycleStageActionScheduleArray []GetFsuCycleStageActionScheduleInput

func (GetFsuCycleStageActionScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCycleStageActionSchedule)(nil)).Elem()
}

func (i GetFsuCycleStageActionScheduleArray) ToGetFsuCycleStageActionScheduleArrayOutput() GetFsuCycleStageActionScheduleArrayOutput {
	return i.ToGetFsuCycleStageActionScheduleArrayOutputWithContext(context.Background())
}

func (i GetFsuCycleStageActionScheduleArray) ToGetFsuCycleStageActionScheduleArrayOutputWithContext(ctx context.Context) GetFsuCycleStageActionScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCycleStageActionScheduleArrayOutput)
}

type GetFsuCycleStageActionScheduleOutput struct{ *pulumi.OutputState }

func (GetFsuCycleStageActionScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCycleStageActionSchedule)(nil)).Elem()
}

func (o GetFsuCycleStageActionScheduleOutput) ToGetFsuCycleStageActionScheduleOutput() GetFsuCycleStageActionScheduleOutput {
	return o
}

func (o GetFsuCycleStageActionScheduleOutput) ToGetFsuCycleStageActionScheduleOutputWithContext(ctx context.Context) GetFsuCycleStageActionScheduleOutput {
	return o
}

// The date and time the Exadata Fleet Update Action is expected to start. [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
func (o GetFsuCycleStageActionScheduleOutput) TimeToStart() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCycleStageActionSchedule) string { return v.TimeToStart }).(pulumi.StringOutput)
}

// Type of Exadata Fleet Update Cycle.
func (o GetFsuCycleStageActionScheduleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCycleStageActionSchedule) string { return v.Type }).(pulumi.StringOutput)
}

type GetFsuCycleStageActionScheduleArrayOutput struct{ *pulumi.OutputState }

func (GetFsuCycleStageActionScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCycleStageActionSchedule)(nil)).Elem()
}

func (o GetFsuCycleStageActionScheduleArrayOutput) ToGetFsuCycleStageActionScheduleArrayOutput() GetFsuCycleStageActionScheduleArrayOutput {
	return o
}

func (o GetFsuCycleStageActionScheduleArrayOutput) ToGetFsuCycleStageActionScheduleArrayOutputWithContext(ctx context.Context) GetFsuCycleStageActionScheduleArrayOutput {
	return o
}

func (o GetFsuCycleStageActionScheduleArrayOutput) Index(i pulumi.IntInput) GetFsuCycleStageActionScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFsuCycleStageActionSchedule {
		return vs[0].([]GetFsuCycleStageActionSchedule)[vs[1].(int)]
	}).(GetFsuCycleStageActionScheduleOutput)
}

type GetFsuCyclesFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetFsuCyclesFilterInput is an input type that accepts GetFsuCyclesFilterArgs and GetFsuCyclesFilterOutput values.
// You can construct a concrete instance of `GetFsuCyclesFilterInput` via:
//
//	GetFsuCyclesFilterArgs{...}
type GetFsuCyclesFilterInput interface {
	pulumi.Input

	ToGetFsuCyclesFilterOutput() GetFsuCyclesFilterOutput
	ToGetFsuCyclesFilterOutputWithContext(context.Context) GetFsuCyclesFilterOutput
}

type GetFsuCyclesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetFsuCyclesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCyclesFilter)(nil)).Elem()
}

func (i GetFsuCyclesFilterArgs) ToGetFsuCyclesFilterOutput() GetFsuCyclesFilterOutput {
	return i.ToGetFsuCyclesFilterOutputWithContext(context.Background())
}

func (i GetFsuCyclesFilterArgs) ToGetFsuCyclesFilterOutputWithContext(ctx context.Context) GetFsuCyclesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCyclesFilterOutput)
}

// GetFsuCyclesFilterArrayInput is an input type that accepts GetFsuCyclesFilterArray and GetFsuCyclesFilterArrayOutput values.
// You can construct a concrete instance of `GetFsuCyclesFilterArrayInput` via:
//
//	GetFsuCyclesFilterArray{ GetFsuCyclesFilterArgs{...} }
type GetFsuCyclesFilterArrayInput interface {
	pulumi.Input

	ToGetFsuCyclesFilterArrayOutput() GetFsuCyclesFilterArrayOutput
	ToGetFsuCyclesFilterArrayOutputWithContext(context.Context) GetFsuCyclesFilterArrayOutput
}

type GetFsuCyclesFilterArray []GetFsuCyclesFilterInput

func (GetFsuCyclesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCyclesFilter)(nil)).Elem()
}

func (i GetFsuCyclesFilterArray) ToGetFsuCyclesFilterArrayOutput() GetFsuCyclesFilterArrayOutput {
	return i.ToGetFsuCyclesFilterArrayOutputWithContext(context.Background())
}

func (i GetFsuCyclesFilterArray) ToGetFsuCyclesFilterArrayOutputWithContext(ctx context.Context) GetFsuCyclesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCyclesFilterArrayOutput)
}

type GetFsuCyclesFilterOutput struct{ *pulumi.OutputState }

func (GetFsuCyclesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCyclesFilter)(nil)).Elem()
}

func (o GetFsuCyclesFilterOutput) ToGetFsuCyclesFilterOutput() GetFsuCyclesFilterOutput {
	return o
}

func (o GetFsuCyclesFilterOutput) ToGetFsuCyclesFilterOutputWithContext(ctx context.Context) GetFsuCyclesFilterOutput {
	return o
}

func (o GetFsuCyclesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCyclesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetFsuCyclesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetFsuCyclesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetFsuCyclesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFsuCyclesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetFsuCyclesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetFsuCyclesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCyclesFilter)(nil)).Elem()
}

func (o GetFsuCyclesFilterArrayOutput) ToGetFsuCyclesFilterArrayOutput() GetFsuCyclesFilterArrayOutput {
	return o
}

func (o GetFsuCyclesFilterArrayOutput) ToGetFsuCyclesFilterArrayOutputWithContext(ctx context.Context) GetFsuCyclesFilterArrayOutput {
	return o
}

func (o GetFsuCyclesFilterArrayOutput) Index(i pulumi.IntInput) GetFsuCyclesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFsuCyclesFilter {
		return vs[0].([]GetFsuCyclesFilter)[vs[1].(int)]
	}).(GetFsuCyclesFilterOutput)
}

type GetFsuCyclesFsuCycleSummaryCollection struct {
	Items []GetFsuCyclesFsuCycleSummaryCollectionItem `pulumi:"items"`
}

// GetFsuCyclesFsuCycleSummaryCollectionInput is an input type that accepts GetFsuCyclesFsuCycleSummaryCollectionArgs and GetFsuCyclesFsuCycleSummaryCollectionOutput values.
// You can construct a concrete instance of `GetFsuCyclesFsuCycleSummaryCollectionInput` via:
//
//	GetFsuCyclesFsuCycleSummaryCollectionArgs{...}
type GetFsuCyclesFsuCycleSummaryCollectionInput interface {
	pulumi.Input

	ToGetFsuCyclesFsuCycleSummaryCollectionOutput() GetFsuCyclesFsuCycleSummaryCollectionOutput
	ToGetFsuCyclesFsuCycleSummaryCollectionOutputWithContext(context.Context) GetFsuCyclesFsuCycleSummaryCollectionOutput
}

type GetFsuCyclesFsuCycleSummaryCollectionArgs struct {
	Items GetFsuCyclesFsuCycleSummaryCollectionItemArrayInput `pulumi:"items"`
}

func (GetFsuCyclesFsuCycleSummaryCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCyclesFsuCycleSummaryCollection)(nil)).Elem()
}

func (i GetFsuCyclesFsuCycleSummaryCollectionArgs) ToGetFsuCyclesFsuCycleSummaryCollectionOutput() GetFsuCyclesFsuCycleSummaryCollectionOutput {
	return i.ToGetFsuCyclesFsuCycleSummaryCollectionOutputWithContext(context.Background())
}

func (i GetFsuCyclesFsuCycleSummaryCollectionArgs) ToGetFsuCyclesFsuCycleSummaryCollectionOutputWithContext(ctx context.Context) GetFsuCyclesFsuCycleSummaryCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCyclesFsuCycleSummaryCollectionOutput)
}

// GetFsuCyclesFsuCycleSummaryCollectionArrayInput is an input type that accepts GetFsuCyclesFsuCycleSummaryCollectionArray and GetFsuCyclesFsuCycleSummaryCollectionArrayOutput values.
// You can construct a concrete instance of `GetFsuCyclesFsuCycleSummaryCollectionArrayInput` via:
//
//	GetFsuCyclesFsuCycleSummaryCollectionArray{ GetFsuCyclesFsuCycleSummaryCollectionArgs{...} }
type GetFsuCyclesFsuCycleSummaryCollectionArrayInput interface {
	pulumi.Input

	ToGetFsuCyclesFsuCycleSummaryCollectionArrayOutput() GetFsuCyclesFsuCycleSummaryCollectionArrayOutput
	ToGetFsuCyclesFsuCycleSummaryCollectionArrayOutputWithContext(context.Context) GetFsuCyclesFsuCycleSummaryCollectionArrayOutput
}

type GetFsuCyclesFsuCycleSummaryCollectionArray []GetFsuCyclesFsuCycleSummaryCollectionInput

func (GetFsuCyclesFsuCycleSummaryCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCyclesFsuCycleSummaryCollection)(nil)).Elem()
}

func (i GetFsuCyclesFsuCycleSummaryCollectionArray) ToGetFsuCyclesFsuCycleSummaryCollectionArrayOutput() GetFsuCyclesFsuCycleSummaryCollectionArrayOutput {
	return i.ToGetFsuCyclesFsuCycleSummaryCollectionArrayOutputWithContext(context.Background())
}

func (i GetFsuCyclesFsuCycleSummaryCollectionArray) ToGetFsuCyclesFsuCycleSummaryCollectionArrayOutputWithContext(ctx context.Context) GetFsuCyclesFsuCycleSummaryCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCyclesFsuCycleSummaryCollectionArrayOutput)
}

type GetFsuCyclesFsuCycleSummaryCollectionOutput struct{ *pulumi.OutputState }

func (GetFsuCyclesFsuCycleSummaryCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCyclesFsuCycleSummaryCollection)(nil)).Elem()
}

func (o GetFsuCyclesFsuCycleSummaryCollectionOutput) ToGetFsuCyclesFsuCycleSummaryCollectionOutput() GetFsuCyclesFsuCycleSummaryCollectionOutput {
	return o
}

func (o GetFsuCyclesFsuCycleSummaryCollectionOutput) ToGetFsuCyclesFsuCycleSummaryCollectionOutputWithContext(ctx context.Context) GetFsuCyclesFsuCycleSummaryCollectionOutput {
	return o
}

func (o GetFsuCyclesFsuCycleSummaryCollectionOutput) Items() GetFsuCyclesFsuCycleSummaryCollectionItemArrayOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollection) []GetFsuCyclesFsuCycleSummaryCollectionItem {
		return v.Items
	}).(GetFsuCyclesFsuCycleSummaryCollectionItemArrayOutput)
}

type GetFsuCyclesFsuCycleSummaryCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetFsuCyclesFsuCycleSummaryCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCyclesFsuCycleSummaryCollection)(nil)).Elem()
}

func (o GetFsuCyclesFsuCycleSummaryCollectionArrayOutput) ToGetFsuCyclesFsuCycleSummaryCollectionArrayOutput() GetFsuCyclesFsuCycleSummaryCollectionArrayOutput {
	return o
}

func (o GetFsuCyclesFsuCycleSummaryCollectionArrayOutput) ToGetFsuCyclesFsuCycleSummaryCollectionArrayOutputWithContext(ctx context.Context) GetFsuCyclesFsuCycleSummaryCollectionArrayOutput {
	return o
}

func (o GetFsuCyclesFsuCycleSummaryCollectionArrayOutput) Index(i pulumi.IntInput) GetFsuCyclesFsuCycleSummaryCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFsuCyclesFsuCycleSummaryCollection {
		return vs[0].([]GetFsuCyclesFsuCycleSummaryCollection)[vs[1].(int)]
	}).(GetFsuCyclesFsuCycleSummaryCollectionOutput)
}

type GetFsuCyclesFsuCycleSummaryCollectionItem struct {
	// Scheduling related details for the Exadata Fleet Update Action. The specified time should not conflict with existing Exadata Infrastructure maintenance windows. Null scheduleDetails would execute the Exadata Fleet Update Action as soon as possible.
	ApplyActionSchedules []GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionSchedule `pulumi:"applyActionSchedules"`
	// Batching strategy details to use during PRECHECK and APPLY Cycle Actions.
	BatchingStrategies []GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategy `pulumi:"batchingStrategies"`
	// A filter to return only resources whose Collection type matches the given type.
	CollectionType string `pulumi:"collectionType"`
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Details to configure diagnostics collection for targets affected by this Exadata Fleet Update Maintenance Cycle.
	DiagnosticsCollections []GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollection `pulumi:"diagnosticsCollections"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// OCID identifier for the Action that is currently in execution, if applicable.
	ExecutingFsuActionId string `pulumi:"executingFsuActionId"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// A filter to return only resources whose fsuCollectionId matches the given fsuCollectionId.
	FsuCollectionId string `pulumi:"fsuCollectionId"`
	// Goal version or image details for the Exadata Fleet Update Cycle.
	GoalVersionDetails []GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetail `pulumi:"goalVersionDetails"`
	// OCID identifier for the Exadata Fleet Update Cycle.
	Id string `pulumi:"id"`
	// List of bug numbers to ignore.
	IsIgnoreMissingPatches []string `pulumi:"isIgnoreMissingPatches"`
	// Ignore all patches between the source and target homes during patching.
	IsIgnorePatches bool `pulumi:"isIgnorePatches"`
	// Ensure that services of administrator-managed Oracle RAC or Oracle RAC One databases are running on the same instances before and after the move operation.
	IsKeepPlacement bool `pulumi:"isKeepPlacement"`
	// The latest Action type that was completed in the Exadata Fleet Update Cycle. No value would indicate that the Cycle has not completed any Action yet.
	LastCompletedAction string `pulumi:"lastCompletedAction"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the latest Action  in the Exadata Fleet Update Cycle.
	LastCompletedActionId string `pulumi:"lastCompletedActionId"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Service drain timeout specified in seconds.
	MaxDrainTimeoutInSeconds int `pulumi:"maxDrainTimeoutInSeconds"`
	// In this array all the possible actions will be listed. The first element is the suggested Action.
	NextActionToExecutes []GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecute `pulumi:"nextActionToExecutes"`
	// Current rollback cycle state if rollback maintenance cycle action has been attempted. No value would indicate that the Cycle has not run a rollback maintenance cycle action before.
	RollbackCycleState string `pulumi:"rollbackCycleState"`
	// Scheduling related details for the Exadata Fleet Update Action. The specified time should not conflict with existing Exadata Infrastructure maintenance windows. Null scheduleDetails would execute the Exadata Fleet Update Action as soon as possible.
	StageActionSchedules []GetFsuCyclesFsuCycleSummaryCollectionItemStageActionSchedule `pulumi:"stageActionSchedules"`
	// A filter to return only resources whose lifecycleState matches the given lifecycleState.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time the Exadata Fleet Update Cycle was created, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the Exadata Fleet Update Cycle was finished, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeFinished string `pulumi:"timeFinished"`
	// The date and time the Exadata Fleet Update Cycle was updated, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeUpdated string `pulumi:"timeUpdated"`
	// Type of Exadata Fleet Update Cycle.
	Type string `pulumi:"type"`
}

// GetFsuCyclesFsuCycleSummaryCollectionItemInput is an input type that accepts GetFsuCyclesFsuCycleSummaryCollectionItemArgs and GetFsuCyclesFsuCycleSummaryCollectionItemOutput values.
// You can construct a concrete instance of `GetFsuCyclesFsuCycleSummaryCollectionItemInput` via:
//
//	GetFsuCyclesFsuCycleSummaryCollectionItemArgs{...}
type GetFsuCyclesFsuCycleSummaryCollectionItemInput interface {
	pulumi.Input

	ToGetFsuCyclesFsuCycleSummaryCollectionItemOutput() GetFsuCyclesFsuCycleSummaryCollectionItemOutput
	ToGetFsuCyclesFsuCycleSummaryCollectionItemOutputWithContext(context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemOutput
}

type GetFsuCyclesFsuCycleSummaryCollectionItemArgs struct {
	// Scheduling related details for the Exadata Fleet Update Action. The specified time should not conflict with existing Exadata Infrastructure maintenance windows. Null scheduleDetails would execute the Exadata Fleet Update Action as soon as possible.
	ApplyActionSchedules GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArrayInput `pulumi:"applyActionSchedules"`
	// Batching strategy details to use during PRECHECK and APPLY Cycle Actions.
	BatchingStrategies GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArrayInput `pulumi:"batchingStrategies"`
	// A filter to return only resources whose Collection type matches the given type.
	CollectionType pulumi.StringInput `pulumi:"collectionType"`
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// Details to configure diagnostics collection for targets affected by this Exadata Fleet Update Maintenance Cycle.
	DiagnosticsCollections GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArrayInput `pulumi:"diagnosticsCollections"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// OCID identifier for the Action that is currently in execution, if applicable.
	ExecutingFsuActionId pulumi.StringInput `pulumi:"executingFsuActionId"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// A filter to return only resources whose fsuCollectionId matches the given fsuCollectionId.
	FsuCollectionId pulumi.StringInput `pulumi:"fsuCollectionId"`
	// Goal version or image details for the Exadata Fleet Update Cycle.
	GoalVersionDetails GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArrayInput `pulumi:"goalVersionDetails"`
	// OCID identifier for the Exadata Fleet Update Cycle.
	Id pulumi.StringInput `pulumi:"id"`
	// List of bug numbers to ignore.
	IsIgnoreMissingPatches pulumi.StringArrayInput `pulumi:"isIgnoreMissingPatches"`
	// Ignore all patches between the source and target homes during patching.
	IsIgnorePatches pulumi.BoolInput `pulumi:"isIgnorePatches"`
	// Ensure that services of administrator-managed Oracle RAC or Oracle RAC One databases are running on the same instances before and after the move operation.
	IsKeepPlacement pulumi.BoolInput `pulumi:"isKeepPlacement"`
	// The latest Action type that was completed in the Exadata Fleet Update Cycle. No value would indicate that the Cycle has not completed any Action yet.
	LastCompletedAction pulumi.StringInput `pulumi:"lastCompletedAction"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the latest Action  in the Exadata Fleet Update Cycle.
	LastCompletedActionId pulumi.StringInput `pulumi:"lastCompletedActionId"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// Service drain timeout specified in seconds.
	MaxDrainTimeoutInSeconds pulumi.IntInput `pulumi:"maxDrainTimeoutInSeconds"`
	// In this array all the possible actions will be listed. The first element is the suggested Action.
	NextActionToExecutes GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArrayInput `pulumi:"nextActionToExecutes"`
	// Current rollback cycle state if rollback maintenance cycle action has been attempted. No value would indicate that the Cycle has not run a rollback maintenance cycle action before.
	RollbackCycleState pulumi.StringInput `pulumi:"rollbackCycleState"`
	// Scheduling related details for the Exadata Fleet Update Action. The specified time should not conflict with existing Exadata Infrastructure maintenance windows. Null scheduleDetails would execute the Exadata Fleet Update Action as soon as possible.
	StageActionSchedules GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArrayInput `pulumi:"stageActionSchedules"`
	// A filter to return only resources whose lifecycleState matches the given lifecycleState.
	State pulumi.StringInput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput `pulumi:"systemTags"`
	// The date and time the Exadata Fleet Update Cycle was created, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the Exadata Fleet Update Cycle was finished, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeFinished pulumi.StringInput `pulumi:"timeFinished"`
	// The date and time the Exadata Fleet Update Cycle was updated, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// Type of Exadata Fleet Update Cycle.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetFsuCyclesFsuCycleSummaryCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCyclesFsuCycleSummaryCollectionItem)(nil)).Elem()
}

func (i GetFsuCyclesFsuCycleSummaryCollectionItemArgs) ToGetFsuCyclesFsuCycleSummaryCollectionItemOutput() GetFsuCyclesFsuCycleSummaryCollectionItemOutput {
	return i.ToGetFsuCyclesFsuCycleSummaryCollectionItemOutputWithContext(context.Background())
}

func (i GetFsuCyclesFsuCycleSummaryCollectionItemArgs) ToGetFsuCyclesFsuCycleSummaryCollectionItemOutputWithContext(ctx context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCyclesFsuCycleSummaryCollectionItemOutput)
}

// GetFsuCyclesFsuCycleSummaryCollectionItemArrayInput is an input type that accepts GetFsuCyclesFsuCycleSummaryCollectionItemArray and GetFsuCyclesFsuCycleSummaryCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetFsuCyclesFsuCycleSummaryCollectionItemArrayInput` via:
//
//	GetFsuCyclesFsuCycleSummaryCollectionItemArray{ GetFsuCyclesFsuCycleSummaryCollectionItemArgs{...} }
type GetFsuCyclesFsuCycleSummaryCollectionItemArrayInput interface {
	pulumi.Input

	ToGetFsuCyclesFsuCycleSummaryCollectionItemArrayOutput() GetFsuCyclesFsuCycleSummaryCollectionItemArrayOutput
	ToGetFsuCyclesFsuCycleSummaryCollectionItemArrayOutputWithContext(context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemArrayOutput
}

type GetFsuCyclesFsuCycleSummaryCollectionItemArray []GetFsuCyclesFsuCycleSummaryCollectionItemInput

func (GetFsuCyclesFsuCycleSummaryCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCyclesFsuCycleSummaryCollectionItem)(nil)).Elem()
}

func (i GetFsuCyclesFsuCycleSummaryCollectionItemArray) ToGetFsuCyclesFsuCycleSummaryCollectionItemArrayOutput() GetFsuCyclesFsuCycleSummaryCollectionItemArrayOutput {
	return i.ToGetFsuCyclesFsuCycleSummaryCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetFsuCyclesFsuCycleSummaryCollectionItemArray) ToGetFsuCyclesFsuCycleSummaryCollectionItemArrayOutputWithContext(ctx context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCyclesFsuCycleSummaryCollectionItemArrayOutput)
}

type GetFsuCyclesFsuCycleSummaryCollectionItemOutput struct{ *pulumi.OutputState }

func (GetFsuCyclesFsuCycleSummaryCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCyclesFsuCycleSummaryCollectionItem)(nil)).Elem()
}

func (o GetFsuCyclesFsuCycleSummaryCollectionItemOutput) ToGetFsuCyclesFsuCycleSummaryCollectionItemOutput() GetFsuCyclesFsuCycleSummaryCollectionItemOutput {
	return o
}

func (o GetFsuCyclesFsuCycleSummaryCollectionItemOutput) ToGetFsuCyclesFsuCycleSummaryCollectionItemOutputWithContext(ctx context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemOutput {
	return o
}

// Scheduling related details for the Exadata Fleet Update Action. The specified time should not conflict with existing Exadata Infrastructure maintenance windows. Null scheduleDetails would execute the Exadata Fleet Update Action as soon as possible.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemOutput) ApplyActionSchedules() GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArrayOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItem) []GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionSchedule {
		return v.ApplyActionSchedules
	}).(GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArrayOutput)
}

// Batching strategy details to use during PRECHECK and APPLY Cycle Actions.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemOutput) BatchingStrategies() GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArrayOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItem) []GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategy {
		return v.BatchingStrategies
	}).(GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArrayOutput)
}

// A filter to return only resources whose Collection type matches the given type.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemOutput) CollectionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItem) string { return v.CollectionType }).(pulumi.StringOutput)
}

// The ID of the compartment in which to list resources.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetFsuCyclesFsuCycleSummaryCollectionItemOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItem) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Details to configure diagnostics collection for targets affected by this Exadata Fleet Update Maintenance Cycle.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemOutput) DiagnosticsCollections() GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArrayOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItem) []GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollection {
		return v.DiagnosticsCollections
	}).(GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArrayOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// OCID identifier for the Action that is currently in execution, if applicable.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemOutput) ExecutingFsuActionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItem) string { return v.ExecutingFsuActionId }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetFsuCyclesFsuCycleSummaryCollectionItemOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItem) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// A filter to return only resources whose fsuCollectionId matches the given fsuCollectionId.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemOutput) FsuCollectionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItem) string { return v.FsuCollectionId }).(pulumi.StringOutput)
}

// Goal version or image details for the Exadata Fleet Update Cycle.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemOutput) GoalVersionDetails() GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArrayOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItem) []GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetail {
		return v.GoalVersionDetails
	}).(GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArrayOutput)
}

// OCID identifier for the Exadata Fleet Update Cycle.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// List of bug numbers to ignore.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemOutput) IsIgnoreMissingPatches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItem) []string { return v.IsIgnoreMissingPatches }).(pulumi.StringArrayOutput)
}

// Ignore all patches between the source and target homes during patching.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemOutput) IsIgnorePatches() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItem) bool { return v.IsIgnorePatches }).(pulumi.BoolOutput)
}

// Ensure that services of administrator-managed Oracle RAC or Oracle RAC One databases are running on the same instances before and after the move operation.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemOutput) IsKeepPlacement() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItem) bool { return v.IsKeepPlacement }).(pulumi.BoolOutput)
}

// The latest Action type that was completed in the Exadata Fleet Update Cycle. No value would indicate that the Cycle has not completed any Action yet.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemOutput) LastCompletedAction() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItem) string { return v.LastCompletedAction }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the latest Action  in the Exadata Fleet Update Cycle.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemOutput) LastCompletedActionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItem) string { return v.LastCompletedActionId }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItem) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Service drain timeout specified in seconds.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemOutput) MaxDrainTimeoutInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItem) int { return v.MaxDrainTimeoutInSeconds }).(pulumi.IntOutput)
}

// In this array all the possible actions will be listed. The first element is the suggested Action.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemOutput) NextActionToExecutes() GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArrayOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItem) []GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecute {
		return v.NextActionToExecutes
	}).(GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArrayOutput)
}

// Current rollback cycle state if rollback maintenance cycle action has been attempted. No value would indicate that the Cycle has not run a rollback maintenance cycle action before.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemOutput) RollbackCycleState() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItem) string { return v.RollbackCycleState }).(pulumi.StringOutput)
}

// Scheduling related details for the Exadata Fleet Update Action. The specified time should not conflict with existing Exadata Infrastructure maintenance windows. Null scheduleDetails would execute the Exadata Fleet Update Action as soon as possible.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemOutput) StageActionSchedules() GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArrayOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItem) []GetFsuCyclesFsuCycleSummaryCollectionItemStageActionSchedule {
		return v.StageActionSchedules
	}).(GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArrayOutput)
}

// A filter to return only resources whose lifecycleState matches the given lifecycleState.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetFsuCyclesFsuCycleSummaryCollectionItemOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItem) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The date and time the Exadata Fleet Update Cycle was created, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the Exadata Fleet Update Cycle was finished, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o GetFsuCyclesFsuCycleSummaryCollectionItemOutput) TimeFinished() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItem) string { return v.TimeFinished }).(pulumi.StringOutput)
}

// The date and time the Exadata Fleet Update Cycle was updated, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Type of Exadata Fleet Update Cycle.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItem) string { return v.Type }).(pulumi.StringOutput)
}

type GetFsuCyclesFsuCycleSummaryCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetFsuCyclesFsuCycleSummaryCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCyclesFsuCycleSummaryCollectionItem)(nil)).Elem()
}

func (o GetFsuCyclesFsuCycleSummaryCollectionItemArrayOutput) ToGetFsuCyclesFsuCycleSummaryCollectionItemArrayOutput() GetFsuCyclesFsuCycleSummaryCollectionItemArrayOutput {
	return o
}

func (o GetFsuCyclesFsuCycleSummaryCollectionItemArrayOutput) ToGetFsuCyclesFsuCycleSummaryCollectionItemArrayOutputWithContext(ctx context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemArrayOutput {
	return o
}

func (o GetFsuCyclesFsuCycleSummaryCollectionItemArrayOutput) Index(i pulumi.IntInput) GetFsuCyclesFsuCycleSummaryCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFsuCyclesFsuCycleSummaryCollectionItem {
		return vs[0].([]GetFsuCyclesFsuCycleSummaryCollectionItem)[vs[1].(int)]
	}).(GetFsuCyclesFsuCycleSummaryCollectionItemOutput)
}

type GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionSchedule struct {
	// The date and time the Exadata Fleet Update Action is expected to start. [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeToStart string `pulumi:"timeToStart"`
	// Type of Exadata Fleet Update Cycle.
	Type string `pulumi:"type"`
}

// GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleInput is an input type that accepts GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArgs and GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleOutput values.
// You can construct a concrete instance of `GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleInput` via:
//
//	GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArgs{...}
type GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleInput interface {
	pulumi.Input

	ToGetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleOutput() GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleOutput
	ToGetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleOutputWithContext(context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleOutput
}

type GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArgs struct {
	// The date and time the Exadata Fleet Update Action is expected to start. [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeToStart pulumi.StringInput `pulumi:"timeToStart"`
	// Type of Exadata Fleet Update Cycle.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionSchedule)(nil)).Elem()
}

func (i GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArgs) ToGetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleOutput() GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleOutput {
	return i.ToGetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleOutputWithContext(context.Background())
}

func (i GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArgs) ToGetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleOutputWithContext(ctx context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleOutput)
}

// GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArrayInput is an input type that accepts GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArray and GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArrayOutput values.
// You can construct a concrete instance of `GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArrayInput` via:
//
//	GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArray{ GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArgs{...} }
type GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArrayInput interface {
	pulumi.Input

	ToGetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArrayOutput() GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArrayOutput
	ToGetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArrayOutputWithContext(context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArrayOutput
}

type GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArray []GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleInput

func (GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionSchedule)(nil)).Elem()
}

func (i GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArray) ToGetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArrayOutput() GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArrayOutput {
	return i.ToGetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArrayOutputWithContext(context.Background())
}

func (i GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArray) ToGetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArrayOutputWithContext(ctx context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArrayOutput)
}

type GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleOutput struct{ *pulumi.OutputState }

func (GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionSchedule)(nil)).Elem()
}

func (o GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleOutput) ToGetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleOutput() GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleOutput {
	return o
}

func (o GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleOutput) ToGetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleOutputWithContext(ctx context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleOutput {
	return o
}

// The date and time the Exadata Fleet Update Action is expected to start. [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleOutput) TimeToStart() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionSchedule) string { return v.TimeToStart }).(pulumi.StringOutput)
}

// Type of Exadata Fleet Update Cycle.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionSchedule) string { return v.Type }).(pulumi.StringOutput)
}

type GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArrayOutput struct{ *pulumi.OutputState }

func (GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionSchedule)(nil)).Elem()
}

func (o GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArrayOutput) ToGetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArrayOutput() GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArrayOutput {
	return o
}

func (o GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArrayOutput) ToGetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArrayOutputWithContext(ctx context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArrayOutput {
	return o
}

func (o GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArrayOutput) Index(i pulumi.IntInput) GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionSchedule {
		return vs[0].([]GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionSchedule)[vs[1].(int)]
	}).(GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleOutput)
}

type GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategy struct {
	// True to force rolling patching.
	IsForceRolling bool `pulumi:"isForceRolling"`
	// True to wait for customer to resume the Apply Action once the first half is done. False to automatically patch the second half.
	IsWaitForBatchResume bool `pulumi:"isWaitForBatchResume"`
	// Percentage of availability in the service during the Patch operation.
	Percentage int `pulumi:"percentage"`
	// Type of Exadata Fleet Update Cycle.
	Type string `pulumi:"type"`
}

// GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyInput is an input type that accepts GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArgs and GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyOutput values.
// You can construct a concrete instance of `GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyInput` via:
//
//	GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArgs{...}
type GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyInput interface {
	pulumi.Input

	ToGetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyOutput() GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyOutput
	ToGetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyOutputWithContext(context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyOutput
}

type GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArgs struct {
	// True to force rolling patching.
	IsForceRolling pulumi.BoolInput `pulumi:"isForceRolling"`
	// True to wait for customer to resume the Apply Action once the first half is done. False to automatically patch the second half.
	IsWaitForBatchResume pulumi.BoolInput `pulumi:"isWaitForBatchResume"`
	// Percentage of availability in the service during the Patch operation.
	Percentage pulumi.IntInput `pulumi:"percentage"`
	// Type of Exadata Fleet Update Cycle.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategy)(nil)).Elem()
}

func (i GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArgs) ToGetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyOutput() GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyOutput {
	return i.ToGetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyOutputWithContext(context.Background())
}

func (i GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArgs) ToGetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyOutputWithContext(ctx context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyOutput)
}

// GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArrayInput is an input type that accepts GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArray and GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArrayOutput values.
// You can construct a concrete instance of `GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArrayInput` via:
//
//	GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArray{ GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArgs{...} }
type GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArrayInput interface {
	pulumi.Input

	ToGetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArrayOutput() GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArrayOutput
	ToGetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArrayOutputWithContext(context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArrayOutput
}

type GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArray []GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyInput

func (GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategy)(nil)).Elem()
}

func (i GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArray) ToGetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArrayOutput() GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArrayOutput {
	return i.ToGetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArrayOutputWithContext(context.Background())
}

func (i GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArray) ToGetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArrayOutputWithContext(ctx context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArrayOutput)
}

type GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyOutput struct{ *pulumi.OutputState }

func (GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategy)(nil)).Elem()
}

func (o GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyOutput) ToGetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyOutput() GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyOutput {
	return o
}

func (o GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyOutput) ToGetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyOutputWithContext(ctx context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyOutput {
	return o
}

// True to force rolling patching.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyOutput) IsForceRolling() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategy) bool { return v.IsForceRolling }).(pulumi.BoolOutput)
}

// True to wait for customer to resume the Apply Action once the first half is done. False to automatically patch the second half.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyOutput) IsWaitForBatchResume() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategy) bool { return v.IsWaitForBatchResume }).(pulumi.BoolOutput)
}

// Percentage of availability in the service during the Patch operation.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyOutput) Percentage() pulumi.IntOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategy) int { return v.Percentage }).(pulumi.IntOutput)
}

// Type of Exadata Fleet Update Cycle.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategy) string { return v.Type }).(pulumi.StringOutput)
}

type GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArrayOutput struct{ *pulumi.OutputState }

func (GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategy)(nil)).Elem()
}

func (o GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArrayOutput) ToGetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArrayOutput() GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArrayOutput {
	return o
}

func (o GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArrayOutput) ToGetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArrayOutputWithContext(ctx context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArrayOutput {
	return o
}

func (o GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArrayOutput) Index(i pulumi.IntInput) GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategy {
		return vs[0].([]GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategy)[vs[1].(int)]
	}).(GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyOutput)
}

type GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollection struct {
	// Enable incident logs and trace collection.  Allow Oracle to collect incident logs and traces to enable fault diagnosis and issue resolution according to the selected mode.
	LogCollectionMode string `pulumi:"logCollectionMode"`
}

// GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionInput is an input type that accepts GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArgs and GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionOutput values.
// You can construct a concrete instance of `GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionInput` via:
//
//	GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArgs{...}
type GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionInput interface {
	pulumi.Input

	ToGetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionOutput() GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionOutput
	ToGetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionOutputWithContext(context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionOutput
}

type GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArgs struct {
	// Enable incident logs and trace collection.  Allow Oracle to collect incident logs and traces to enable fault diagnosis and issue resolution according to the selected mode.
	LogCollectionMode pulumi.StringInput `pulumi:"logCollectionMode"`
}

func (GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollection)(nil)).Elem()
}

func (i GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArgs) ToGetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionOutput() GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionOutput {
	return i.ToGetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionOutputWithContext(context.Background())
}

func (i GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArgs) ToGetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionOutputWithContext(ctx context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionOutput)
}

// GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArrayInput is an input type that accepts GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArray and GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArrayOutput values.
// You can construct a concrete instance of `GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArrayInput` via:
//
//	GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArray{ GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArgs{...} }
type GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArrayInput interface {
	pulumi.Input

	ToGetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArrayOutput() GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArrayOutput
	ToGetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArrayOutputWithContext(context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArrayOutput
}

type GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArray []GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionInput

func (GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollection)(nil)).Elem()
}

func (i GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArray) ToGetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArrayOutput() GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArrayOutput {
	return i.ToGetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArrayOutputWithContext(context.Background())
}

func (i GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArray) ToGetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArrayOutputWithContext(ctx context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArrayOutput)
}

type GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionOutput struct{ *pulumi.OutputState }

func (GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollection)(nil)).Elem()
}

func (o GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionOutput) ToGetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionOutput() GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionOutput {
	return o
}

func (o GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionOutput) ToGetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionOutputWithContext(ctx context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionOutput {
	return o
}

// Enable incident logs and trace collection.  Allow Oracle to collect incident logs and traces to enable fault diagnosis and issue resolution according to the selected mode.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionOutput) LogCollectionMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollection) string {
		return v.LogCollectionMode
	}).(pulumi.StringOutput)
}

type GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollection)(nil)).Elem()
}

func (o GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArrayOutput) ToGetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArrayOutput() GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArrayOutput {
	return o
}

func (o GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArrayOutput) ToGetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArrayOutputWithContext(ctx context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArrayOutput {
	return o
}

func (o GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArrayOutput) Index(i pulumi.IntInput) GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollection {
		return vs[0].([]GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollection)[vs[1].(int)]
	}).(GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionOutput)
}

type GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetail struct {
	// Goal home policy to use when Staging the Goal Version during patching. CREATE_NEW: Create a new DBHome (for Database Collections) for the specified image or version. USE_EXISTING: All database targets in the same VMCluster or CloudVmCluster will be moved to a shared database home.  If an existing home for the selected image or version is not found in the VM Cluster for a target database, then a new home will be created.  If more than one existing home for the selected image is found, then the home with the least number of databases will be used.  If multiple homes have the least number of databases, then a home will be selected at random.
	HomePolicy string `pulumi:"homePolicy"`
	// Prefix name used for new DB home resources created as part of the Stage Action. Format: <specified_prefix>_<timestamp> If not specified, a default Oracle Cloud Infrastructure DB home resource will be generated for the new DB home resources created.
	NewHomePrefix string `pulumi:"newHomePrefix"`
	// Target database software image OCID.
	SoftwareImageId string `pulumi:"softwareImageId"`
	// Type of Exadata Fleet Update Cycle.
	Type string `pulumi:"type"`
	// Target DB or GI version string for the Exadata Fleet Update Cycle.
	Version string `pulumi:"version"`
}

// GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailInput is an input type that accepts GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArgs and GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailOutput values.
// You can construct a concrete instance of `GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailInput` via:
//
//	GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArgs{...}
type GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailInput interface {
	pulumi.Input

	ToGetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailOutput() GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailOutput
	ToGetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailOutputWithContext(context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailOutput
}

type GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArgs struct {
	// Goal home policy to use when Staging the Goal Version during patching. CREATE_NEW: Create a new DBHome (for Database Collections) for the specified image or version. USE_EXISTING: All database targets in the same VMCluster or CloudVmCluster will be moved to a shared database home.  If an existing home for the selected image or version is not found in the VM Cluster for a target database, then a new home will be created.  If more than one existing home for the selected image is found, then the home with the least number of databases will be used.  If multiple homes have the least number of databases, then a home will be selected at random.
	HomePolicy pulumi.StringInput `pulumi:"homePolicy"`
	// Prefix name used for new DB home resources created as part of the Stage Action. Format: <specified_prefix>_<timestamp> If not specified, a default Oracle Cloud Infrastructure DB home resource will be generated for the new DB home resources created.
	NewHomePrefix pulumi.StringInput `pulumi:"newHomePrefix"`
	// Target database software image OCID.
	SoftwareImageId pulumi.StringInput `pulumi:"softwareImageId"`
	// Type of Exadata Fleet Update Cycle.
	Type pulumi.StringInput `pulumi:"type"`
	// Target DB or GI version string for the Exadata Fleet Update Cycle.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetail)(nil)).Elem()
}

func (i GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArgs) ToGetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailOutput() GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailOutput {
	return i.ToGetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailOutputWithContext(context.Background())
}

func (i GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArgs) ToGetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailOutputWithContext(ctx context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailOutput)
}

// GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArrayInput is an input type that accepts GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArray and GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArrayOutput values.
// You can construct a concrete instance of `GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArrayInput` via:
//
//	GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArray{ GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArgs{...} }
type GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArrayInput interface {
	pulumi.Input

	ToGetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArrayOutput() GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArrayOutput
	ToGetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArrayOutputWithContext(context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArrayOutput
}

type GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArray []GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailInput

func (GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetail)(nil)).Elem()
}

func (i GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArray) ToGetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArrayOutput() GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArrayOutput {
	return i.ToGetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArrayOutputWithContext(context.Background())
}

func (i GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArray) ToGetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArrayOutputWithContext(ctx context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArrayOutput)
}

type GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailOutput struct{ *pulumi.OutputState }

func (GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetail)(nil)).Elem()
}

func (o GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailOutput) ToGetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailOutput() GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailOutput {
	return o
}

func (o GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailOutput) ToGetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailOutputWithContext(ctx context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailOutput {
	return o
}

// Goal home policy to use when Staging the Goal Version during patching. CREATE_NEW: Create a new DBHome (for Database Collections) for the specified image or version. USE_EXISTING: All database targets in the same VMCluster or CloudVmCluster will be moved to a shared database home.  If an existing home for the selected image or version is not found in the VM Cluster for a target database, then a new home will be created.  If more than one existing home for the selected image is found, then the home with the least number of databases will be used.  If multiple homes have the least number of databases, then a home will be selected at random.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailOutput) HomePolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetail) string { return v.HomePolicy }).(pulumi.StringOutput)
}

// Prefix name used for new DB home resources created as part of the Stage Action. Format: <specified_prefix>_<timestamp> If not specified, a default Oracle Cloud Infrastructure DB home resource will be generated for the new DB home resources created.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailOutput) NewHomePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetail) string { return v.NewHomePrefix }).(pulumi.StringOutput)
}

// Target database software image OCID.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailOutput) SoftwareImageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetail) string { return v.SoftwareImageId }).(pulumi.StringOutput)
}

// Type of Exadata Fleet Update Cycle.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetail) string { return v.Type }).(pulumi.StringOutput)
}

// Target DB or GI version string for the Exadata Fleet Update Cycle.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetail) string { return v.Version }).(pulumi.StringOutput)
}

type GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArrayOutput struct{ *pulumi.OutputState }

func (GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetail)(nil)).Elem()
}

func (o GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArrayOutput) ToGetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArrayOutput() GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArrayOutput {
	return o
}

func (o GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArrayOutput) ToGetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArrayOutputWithContext(ctx context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArrayOutput {
	return o
}

func (o GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArrayOutput) Index(i pulumi.IntInput) GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetail {
		return vs[0].([]GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetail)[vs[1].(int)]
	}).(GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailOutput)
}

type GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecute struct {
	// The date and time the Exadata Fleet Update Action is expected to start. [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeToStart string `pulumi:"timeToStart"`
	// Type of Exadata Fleet Update Cycle.
	Type string `pulumi:"type"`
}

// GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteInput is an input type that accepts GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArgs and GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteOutput values.
// You can construct a concrete instance of `GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteInput` via:
//
//	GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArgs{...}
type GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteInput interface {
	pulumi.Input

	ToGetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteOutput() GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteOutput
	ToGetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteOutputWithContext(context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteOutput
}

type GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArgs struct {
	// The date and time the Exadata Fleet Update Action is expected to start. [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeToStart pulumi.StringInput `pulumi:"timeToStart"`
	// Type of Exadata Fleet Update Cycle.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecute)(nil)).Elem()
}

func (i GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArgs) ToGetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteOutput() GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteOutput {
	return i.ToGetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteOutputWithContext(context.Background())
}

func (i GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArgs) ToGetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteOutputWithContext(ctx context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteOutput)
}

// GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArrayInput is an input type that accepts GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArray and GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArrayOutput values.
// You can construct a concrete instance of `GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArrayInput` via:
//
//	GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArray{ GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArgs{...} }
type GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArrayInput interface {
	pulumi.Input

	ToGetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArrayOutput() GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArrayOutput
	ToGetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArrayOutputWithContext(context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArrayOutput
}

type GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArray []GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteInput

func (GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecute)(nil)).Elem()
}

func (i GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArray) ToGetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArrayOutput() GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArrayOutput {
	return i.ToGetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArrayOutputWithContext(context.Background())
}

func (i GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArray) ToGetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArrayOutputWithContext(ctx context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArrayOutput)
}

type GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteOutput struct{ *pulumi.OutputState }

func (GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecute)(nil)).Elem()
}

func (o GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteOutput) ToGetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteOutput() GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteOutput {
	return o
}

func (o GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteOutput) ToGetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteOutputWithContext(ctx context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteOutput {
	return o
}

// The date and time the Exadata Fleet Update Action is expected to start. [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteOutput) TimeToStart() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecute) string { return v.TimeToStart }).(pulumi.StringOutput)
}

// Type of Exadata Fleet Update Cycle.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecute) string { return v.Type }).(pulumi.StringOutput)
}

type GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArrayOutput struct{ *pulumi.OutputState }

func (GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecute)(nil)).Elem()
}

func (o GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArrayOutput) ToGetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArrayOutput() GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArrayOutput {
	return o
}

func (o GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArrayOutput) ToGetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArrayOutputWithContext(ctx context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArrayOutput {
	return o
}

func (o GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArrayOutput) Index(i pulumi.IntInput) GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecute {
		return vs[0].([]GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecute)[vs[1].(int)]
	}).(GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteOutput)
}

type GetFsuCyclesFsuCycleSummaryCollectionItemStageActionSchedule struct {
	// The date and time the Exadata Fleet Update Action is expected to start. [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeToStart string `pulumi:"timeToStart"`
	// Type of Exadata Fleet Update Cycle.
	Type string `pulumi:"type"`
}

// GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleInput is an input type that accepts GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArgs and GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleOutput values.
// You can construct a concrete instance of `GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleInput` via:
//
//	GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArgs{...}
type GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleInput interface {
	pulumi.Input

	ToGetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleOutput() GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleOutput
	ToGetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleOutputWithContext(context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleOutput
}

type GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArgs struct {
	// The date and time the Exadata Fleet Update Action is expected to start. [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeToStart pulumi.StringInput `pulumi:"timeToStart"`
	// Type of Exadata Fleet Update Cycle.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCyclesFsuCycleSummaryCollectionItemStageActionSchedule)(nil)).Elem()
}

func (i GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArgs) ToGetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleOutput() GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleOutput {
	return i.ToGetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleOutputWithContext(context.Background())
}

func (i GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArgs) ToGetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleOutputWithContext(ctx context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleOutput)
}

// GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArrayInput is an input type that accepts GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArray and GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArrayOutput values.
// You can construct a concrete instance of `GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArrayInput` via:
//
//	GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArray{ GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArgs{...} }
type GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArrayInput interface {
	pulumi.Input

	ToGetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArrayOutput() GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArrayOutput
	ToGetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArrayOutputWithContext(context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArrayOutput
}

type GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArray []GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleInput

func (GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCyclesFsuCycleSummaryCollectionItemStageActionSchedule)(nil)).Elem()
}

func (i GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArray) ToGetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArrayOutput() GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArrayOutput {
	return i.ToGetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArrayOutputWithContext(context.Background())
}

func (i GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArray) ToGetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArrayOutputWithContext(ctx context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArrayOutput)
}

type GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleOutput struct{ *pulumi.OutputState }

func (GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFsuCyclesFsuCycleSummaryCollectionItemStageActionSchedule)(nil)).Elem()
}

func (o GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleOutput) ToGetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleOutput() GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleOutput {
	return o
}

func (o GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleOutput) ToGetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleOutputWithContext(ctx context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleOutput {
	return o
}

// The date and time the Exadata Fleet Update Action is expected to start. [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleOutput) TimeToStart() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItemStageActionSchedule) string { return v.TimeToStart }).(pulumi.StringOutput)
}

// Type of Exadata Fleet Update Cycle.
func (o GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetFsuCyclesFsuCycleSummaryCollectionItemStageActionSchedule) string { return v.Type }).(pulumi.StringOutput)
}

type GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArrayOutput struct{ *pulumi.OutputState }

func (GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFsuCyclesFsuCycleSummaryCollectionItemStageActionSchedule)(nil)).Elem()
}

func (o GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArrayOutput) ToGetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArrayOutput() GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArrayOutput {
	return o
}

func (o GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArrayOutput) ToGetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArrayOutputWithContext(ctx context.Context) GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArrayOutput {
	return o
}

func (o GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArrayOutput) Index(i pulumi.IntInput) GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFsuCyclesFsuCycleSummaryCollectionItemStageActionSchedule {
		return vs[0].([]GetFsuCyclesFsuCycleSummaryCollectionItemStageActionSchedule)[vs[1].(int)]
	}).(GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FsuCollectionActiveFsuCycleInput)(nil)).Elem(), FsuCollectionActiveFsuCycleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FsuCollectionActiveFsuCycleArrayInput)(nil)).Elem(), FsuCollectionActiveFsuCycleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FsuCollectionFleetDiscoveryInput)(nil)).Elem(), FsuCollectionFleetDiscoveryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FsuCollectionFleetDiscoveryPtrInput)(nil)).Elem(), FsuCollectionFleetDiscoveryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FsuCollectionFleetDiscoveryFilterInput)(nil)).Elem(), FsuCollectionFleetDiscoveryFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FsuCollectionFleetDiscoveryFilterArrayInput)(nil)).Elem(), FsuCollectionFleetDiscoveryFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FsuCollectionFleetDiscoveryFilterTagInput)(nil)).Elem(), FsuCollectionFleetDiscoveryFilterTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FsuCollectionFleetDiscoveryFilterTagArrayInput)(nil)).Elem(), FsuCollectionFleetDiscoveryFilterTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FsuCycleApplyActionScheduleInput)(nil)).Elem(), FsuCycleApplyActionScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FsuCycleApplyActionSchedulePtrInput)(nil)).Elem(), FsuCycleApplyActionScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FsuCycleBatchingStrategyInput)(nil)).Elem(), FsuCycleBatchingStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FsuCycleBatchingStrategyPtrInput)(nil)).Elem(), FsuCycleBatchingStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FsuCycleDiagnosticsCollectionInput)(nil)).Elem(), FsuCycleDiagnosticsCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FsuCycleDiagnosticsCollectionPtrInput)(nil)).Elem(), FsuCycleDiagnosticsCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FsuCycleGoalVersionDetailsInput)(nil)).Elem(), FsuCycleGoalVersionDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FsuCycleGoalVersionDetailsPtrInput)(nil)).Elem(), FsuCycleGoalVersionDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FsuCycleNextActionToExecuteInput)(nil)).Elem(), FsuCycleNextActionToExecuteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FsuCycleNextActionToExecuteArrayInput)(nil)).Elem(), FsuCycleNextActionToExecuteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FsuCycleStageActionScheduleInput)(nil)).Elem(), FsuCycleStageActionScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FsuCycleStageActionSchedulePtrInput)(nil)).Elem(), FsuCycleStageActionScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCollectionActiveFsuCycleInput)(nil)).Elem(), GetFsuCollectionActiveFsuCycleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCollectionActiveFsuCycleArrayInput)(nil)).Elem(), GetFsuCollectionActiveFsuCycleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCollectionFleetDiscoveryInput)(nil)).Elem(), GetFsuCollectionFleetDiscoveryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCollectionFleetDiscoveryArrayInput)(nil)).Elem(), GetFsuCollectionFleetDiscoveryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCollectionFleetDiscoveryFilterInput)(nil)).Elem(), GetFsuCollectionFleetDiscoveryFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCollectionFleetDiscoveryFilterArrayInput)(nil)).Elem(), GetFsuCollectionFleetDiscoveryFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCollectionFleetDiscoveryFilterTagInput)(nil)).Elem(), GetFsuCollectionFleetDiscoveryFilterTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCollectionFleetDiscoveryFilterTagArrayInput)(nil)).Elem(), GetFsuCollectionFleetDiscoveryFilterTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCollectionsFilterInput)(nil)).Elem(), GetFsuCollectionsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCollectionsFilterArrayInput)(nil)).Elem(), GetFsuCollectionsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCollectionsFsuCollectionSummaryCollectionInput)(nil)).Elem(), GetFsuCollectionsFsuCollectionSummaryCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCollectionsFsuCollectionSummaryCollectionArrayInput)(nil)).Elem(), GetFsuCollectionsFsuCollectionSummaryCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCollectionsFsuCollectionSummaryCollectionItemInput)(nil)).Elem(), GetFsuCollectionsFsuCollectionSummaryCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCollectionsFsuCollectionSummaryCollectionItemArrayInput)(nil)).Elem(), GetFsuCollectionsFsuCollectionSummaryCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleInput)(nil)).Elem(), GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArrayInput)(nil)).Elem(), GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryInput)(nil)).Elem(), GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArrayInput)(nil)).Elem(), GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterInput)(nil)).Elem(), GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArrayInput)(nil)).Elem(), GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagInput)(nil)).Elem(), GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArrayInput)(nil)).Elem(), GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCycleApplyActionScheduleInput)(nil)).Elem(), GetFsuCycleApplyActionScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCycleApplyActionScheduleArrayInput)(nil)).Elem(), GetFsuCycleApplyActionScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCycleBatchingStrategyInput)(nil)).Elem(), GetFsuCycleBatchingStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCycleBatchingStrategyArrayInput)(nil)).Elem(), GetFsuCycleBatchingStrategyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCycleDiagnosticsCollectionInput)(nil)).Elem(), GetFsuCycleDiagnosticsCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCycleDiagnosticsCollectionArrayInput)(nil)).Elem(), GetFsuCycleDiagnosticsCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCycleGoalVersionDetailInput)(nil)).Elem(), GetFsuCycleGoalVersionDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCycleGoalVersionDetailArrayInput)(nil)).Elem(), GetFsuCycleGoalVersionDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCycleNextActionToExecuteInput)(nil)).Elem(), GetFsuCycleNextActionToExecuteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCycleNextActionToExecuteArrayInput)(nil)).Elem(), GetFsuCycleNextActionToExecuteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCycleStageActionScheduleInput)(nil)).Elem(), GetFsuCycleStageActionScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCycleStageActionScheduleArrayInput)(nil)).Elem(), GetFsuCycleStageActionScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCyclesFilterInput)(nil)).Elem(), GetFsuCyclesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCyclesFilterArrayInput)(nil)).Elem(), GetFsuCyclesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCyclesFsuCycleSummaryCollectionInput)(nil)).Elem(), GetFsuCyclesFsuCycleSummaryCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCyclesFsuCycleSummaryCollectionArrayInput)(nil)).Elem(), GetFsuCyclesFsuCycleSummaryCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCyclesFsuCycleSummaryCollectionItemInput)(nil)).Elem(), GetFsuCyclesFsuCycleSummaryCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCyclesFsuCycleSummaryCollectionItemArrayInput)(nil)).Elem(), GetFsuCyclesFsuCycleSummaryCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleInput)(nil)).Elem(), GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArrayInput)(nil)).Elem(), GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyInput)(nil)).Elem(), GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArrayInput)(nil)).Elem(), GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionInput)(nil)).Elem(), GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArrayInput)(nil)).Elem(), GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailInput)(nil)).Elem(), GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArrayInput)(nil)).Elem(), GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteInput)(nil)).Elem(), GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArrayInput)(nil)).Elem(), GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleInput)(nil)).Elem(), GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArrayInput)(nil)).Elem(), GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArray{})
	pulumi.RegisterOutputType(FsuCollectionActiveFsuCycleOutput{})
	pulumi.RegisterOutputType(FsuCollectionActiveFsuCycleArrayOutput{})
	pulumi.RegisterOutputType(FsuCollectionFleetDiscoveryOutput{})
	pulumi.RegisterOutputType(FsuCollectionFleetDiscoveryPtrOutput{})
	pulumi.RegisterOutputType(FsuCollectionFleetDiscoveryFilterOutput{})
	pulumi.RegisterOutputType(FsuCollectionFleetDiscoveryFilterArrayOutput{})
	pulumi.RegisterOutputType(FsuCollectionFleetDiscoveryFilterTagOutput{})
	pulumi.RegisterOutputType(FsuCollectionFleetDiscoveryFilterTagArrayOutput{})
	pulumi.RegisterOutputType(FsuCycleApplyActionScheduleOutput{})
	pulumi.RegisterOutputType(FsuCycleApplyActionSchedulePtrOutput{})
	pulumi.RegisterOutputType(FsuCycleBatchingStrategyOutput{})
	pulumi.RegisterOutputType(FsuCycleBatchingStrategyPtrOutput{})
	pulumi.RegisterOutputType(FsuCycleDiagnosticsCollectionOutput{})
	pulumi.RegisterOutputType(FsuCycleDiagnosticsCollectionPtrOutput{})
	pulumi.RegisterOutputType(FsuCycleGoalVersionDetailsOutput{})
	pulumi.RegisterOutputType(FsuCycleGoalVersionDetailsPtrOutput{})
	pulumi.RegisterOutputType(FsuCycleNextActionToExecuteOutput{})
	pulumi.RegisterOutputType(FsuCycleNextActionToExecuteArrayOutput{})
	pulumi.RegisterOutputType(FsuCycleStageActionScheduleOutput{})
	pulumi.RegisterOutputType(FsuCycleStageActionSchedulePtrOutput{})
	pulumi.RegisterOutputType(GetFsuCollectionActiveFsuCycleOutput{})
	pulumi.RegisterOutputType(GetFsuCollectionActiveFsuCycleArrayOutput{})
	pulumi.RegisterOutputType(GetFsuCollectionFleetDiscoveryOutput{})
	pulumi.RegisterOutputType(GetFsuCollectionFleetDiscoveryArrayOutput{})
	pulumi.RegisterOutputType(GetFsuCollectionFleetDiscoveryFilterOutput{})
	pulumi.RegisterOutputType(GetFsuCollectionFleetDiscoveryFilterArrayOutput{})
	pulumi.RegisterOutputType(GetFsuCollectionFleetDiscoveryFilterTagOutput{})
	pulumi.RegisterOutputType(GetFsuCollectionFleetDiscoveryFilterTagArrayOutput{})
	pulumi.RegisterOutputType(GetFsuCollectionsFilterOutput{})
	pulumi.RegisterOutputType(GetFsuCollectionsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetFsuCollectionsFsuCollectionSummaryCollectionOutput{})
	pulumi.RegisterOutputType(GetFsuCollectionsFsuCollectionSummaryCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetFsuCollectionsFsuCollectionSummaryCollectionItemOutput{})
	pulumi.RegisterOutputType(GetFsuCollectionsFsuCollectionSummaryCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleOutput{})
	pulumi.RegisterOutputType(GetFsuCollectionsFsuCollectionSummaryCollectionItemActiveFsuCycleArrayOutput{})
	pulumi.RegisterOutputType(GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryOutput{})
	pulumi.RegisterOutputType(GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryArrayOutput{})
	pulumi.RegisterOutputType(GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterOutput{})
	pulumi.RegisterOutputType(GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterArrayOutput{})
	pulumi.RegisterOutputType(GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagOutput{})
	pulumi.RegisterOutputType(GetFsuCollectionsFsuCollectionSummaryCollectionItemFleetDiscoveryFilterTagArrayOutput{})
	pulumi.RegisterOutputType(GetFsuCycleApplyActionScheduleOutput{})
	pulumi.RegisterOutputType(GetFsuCycleApplyActionScheduleArrayOutput{})
	pulumi.RegisterOutputType(GetFsuCycleBatchingStrategyOutput{})
	pulumi.RegisterOutputType(GetFsuCycleBatchingStrategyArrayOutput{})
	pulumi.RegisterOutputType(GetFsuCycleDiagnosticsCollectionOutput{})
	pulumi.RegisterOutputType(GetFsuCycleDiagnosticsCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetFsuCycleGoalVersionDetailOutput{})
	pulumi.RegisterOutputType(GetFsuCycleGoalVersionDetailArrayOutput{})
	pulumi.RegisterOutputType(GetFsuCycleNextActionToExecuteOutput{})
	pulumi.RegisterOutputType(GetFsuCycleNextActionToExecuteArrayOutput{})
	pulumi.RegisterOutputType(GetFsuCycleStageActionScheduleOutput{})
	pulumi.RegisterOutputType(GetFsuCycleStageActionScheduleArrayOutput{})
	pulumi.RegisterOutputType(GetFsuCyclesFilterOutput{})
	pulumi.RegisterOutputType(GetFsuCyclesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetFsuCyclesFsuCycleSummaryCollectionOutput{})
	pulumi.RegisterOutputType(GetFsuCyclesFsuCycleSummaryCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetFsuCyclesFsuCycleSummaryCollectionItemOutput{})
	pulumi.RegisterOutputType(GetFsuCyclesFsuCycleSummaryCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleOutput{})
	pulumi.RegisterOutputType(GetFsuCyclesFsuCycleSummaryCollectionItemApplyActionScheduleArrayOutput{})
	pulumi.RegisterOutputType(GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyOutput{})
	pulumi.RegisterOutputType(GetFsuCyclesFsuCycleSummaryCollectionItemBatchingStrategyArrayOutput{})
	pulumi.RegisterOutputType(GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionOutput{})
	pulumi.RegisterOutputType(GetFsuCyclesFsuCycleSummaryCollectionItemDiagnosticsCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailOutput{})
	pulumi.RegisterOutputType(GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetailArrayOutput{})
	pulumi.RegisterOutputType(GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteOutput{})
	pulumi.RegisterOutputType(GetFsuCyclesFsuCycleSummaryCollectionItemNextActionToExecuteArrayOutput{})
	pulumi.RegisterOutputType(GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleOutput{})
	pulumi.RegisterOutputType(GetFsuCyclesFsuCycleSummaryCollectionItemStageActionScheduleArrayOutput{})
}
