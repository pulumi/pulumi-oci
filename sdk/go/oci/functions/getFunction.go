// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package functions

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Function resource in Oracle Cloud Infrastructure Functions service.
//
// Retrieves a function.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/Functions"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := Functions.GetFunction(ctx, &functions.GetFunctionArgs{
// 			FunctionId: oci_functions_function.Test_function.Id,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupFunction(ctx *pulumi.Context, args *LookupFunctionArgs, opts ...pulumi.InvokeOption) (*LookupFunctionResult, error) {
	var rv LookupFunctionResult
	err := ctx.Invoke("oci:Functions/getFunction:getFunction", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFunction.
type LookupFunctionArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this function.
	FunctionId string `pulumi:"functionId"`
}

// A collection of values returned by getFunction.
type LookupFunctionResult struct {
	// The OCID of the application the function belongs to.
	ApplicationId string `pulumi:"applicationId"`
	// The OCID of the compartment that contains the function.
	CompartmentId string `pulumi:"compartmentId"`
	// Function configuration. Overrides application configuration. Keys must be ASCII strings consisting solely of letters, digits, and the '_' (underscore) character, and must not begin with a digit. Values should be limited to printable unicode characters.  Example: `{"MY_FUNCTION_CONFIG": "ConfVal"}`
	Config map[string]interface{} `pulumi:"config"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The display name of the function. The display name is unique within the application containing the function.
	DisplayName string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	FunctionId   string                 `pulumi:"functionId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function.
	Id string `pulumi:"id"`
	// The qualified name of the Docker image to use in the function, including the image tag. The image should be in the Oracle Cloud Infrastructure Registry that is in the same region as the function itself. Example: `phx.ocir.io/ten/functions/function:0.0.1`
	Image string `pulumi:"image"`
	// The image digest for the version of the image that will be pulled when invoking this function. If no value is specified, the digest currently associated with the image in the Oracle Cloud Infrastructure Registry will be used. Example: `sha256:ca0eeb6fb05351dfc8759c20733c91def84cb8007aa89a5bf606bc8b315b9fc7`
	ImageDigest string `pulumi:"imageDigest"`
	// The base https invoke URL to set on a client in order to invoke a function. This URL will never change over the lifetime of the function and can be cached.
	InvokeEndpoint string `pulumi:"invokeEndpoint"`
	// Maximum usable memory for the function (MiB).
	MemoryInMbs string `pulumi:"memoryInMbs"`
	// Define the strategy for provisioned concurrency for the function.
	ProvisionedConcurrencyConfigs []GetFunctionProvisionedConcurrencyConfig `pulumi:"provisionedConcurrencyConfigs"`
	// The current state of the function.
	State string `pulumi:"state"`
	// The time the function was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-09-12T22:47:12.613Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The time the function was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-09-12T22:47:12.613Z`
	TimeUpdated string `pulumi:"timeUpdated"`
	// Timeout for executions of the function. Value in seconds.
	TimeoutInSeconds int `pulumi:"timeoutInSeconds"`
	// Define the tracing configuration for a function.
	TraceConfigs []GetFunctionTraceConfig `pulumi:"traceConfigs"`
}

func LookupFunctionOutput(ctx *pulumi.Context, args LookupFunctionOutputArgs, opts ...pulumi.InvokeOption) LookupFunctionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFunctionResult, error) {
			args := v.(LookupFunctionArgs)
			r, err := LookupFunction(ctx, &args, opts...)
			var s LookupFunctionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFunctionResultOutput)
}

// A collection of arguments for invoking getFunction.
type LookupFunctionOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this function.
	FunctionId pulumi.StringInput `pulumi:"functionId"`
}

func (LookupFunctionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFunctionArgs)(nil)).Elem()
}

// A collection of values returned by getFunction.
type LookupFunctionResultOutput struct{ *pulumi.OutputState }

func (LookupFunctionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFunctionResult)(nil)).Elem()
}

func (o LookupFunctionResultOutput) ToLookupFunctionResultOutput() LookupFunctionResultOutput {
	return o
}

func (o LookupFunctionResultOutput) ToLookupFunctionResultOutputWithContext(ctx context.Context) LookupFunctionResultOutput {
	return o
}

// The OCID of the application the function belongs to.
func (o LookupFunctionResultOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFunctionResult) string { return v.ApplicationId }).(pulumi.StringOutput)
}

// The OCID of the compartment that contains the function.
func (o LookupFunctionResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFunctionResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Function configuration. Overrides application configuration. Keys must be ASCII strings consisting solely of letters, digits, and the '_' (underscore) character, and must not begin with a digit. Values should be limited to printable unicode characters.  Example: `{"MY_FUNCTION_CONFIG": "ConfVal"}`
func (o LookupFunctionResultOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v LookupFunctionResult) map[string]interface{} { return v.Config }).(pulumi.MapOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o LookupFunctionResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupFunctionResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// The display name of the function. The display name is unique within the application containing the function.
func (o LookupFunctionResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFunctionResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o LookupFunctionResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupFunctionResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

func (o LookupFunctionResultOutput) FunctionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFunctionResult) string { return v.FunctionId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function.
func (o LookupFunctionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFunctionResult) string { return v.Id }).(pulumi.StringOutput)
}

// The qualified name of the Docker image to use in the function, including the image tag. The image should be in the Oracle Cloud Infrastructure Registry that is in the same region as the function itself. Example: `phx.ocir.io/ten/functions/function:0.0.1`
func (o LookupFunctionResultOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFunctionResult) string { return v.Image }).(pulumi.StringOutput)
}

// The image digest for the version of the image that will be pulled when invoking this function. If no value is specified, the digest currently associated with the image in the Oracle Cloud Infrastructure Registry will be used. Example: `sha256:ca0eeb6fb05351dfc8759c20733c91def84cb8007aa89a5bf606bc8b315b9fc7`
func (o LookupFunctionResultOutput) ImageDigest() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFunctionResult) string { return v.ImageDigest }).(pulumi.StringOutput)
}

// The base https invoke URL to set on a client in order to invoke a function. This URL will never change over the lifetime of the function and can be cached.
func (o LookupFunctionResultOutput) InvokeEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFunctionResult) string { return v.InvokeEndpoint }).(pulumi.StringOutput)
}

// Maximum usable memory for the function (MiB).
func (o LookupFunctionResultOutput) MemoryInMbs() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFunctionResult) string { return v.MemoryInMbs }).(pulumi.StringOutput)
}

// Define the strategy for provisioned concurrency for the function.
func (o LookupFunctionResultOutput) ProvisionedConcurrencyConfigs() GetFunctionProvisionedConcurrencyConfigArrayOutput {
	return o.ApplyT(func(v LookupFunctionResult) []GetFunctionProvisionedConcurrencyConfig {
		return v.ProvisionedConcurrencyConfigs
	}).(GetFunctionProvisionedConcurrencyConfigArrayOutput)
}

// The current state of the function.
func (o LookupFunctionResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFunctionResult) string { return v.State }).(pulumi.StringOutput)
}

// The time the function was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-09-12T22:47:12.613Z`
func (o LookupFunctionResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFunctionResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the function was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-09-12T22:47:12.613Z`
func (o LookupFunctionResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFunctionResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Timeout for executions of the function. Value in seconds.
func (o LookupFunctionResultOutput) TimeoutInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFunctionResult) int { return v.TimeoutInSeconds }).(pulumi.IntOutput)
}

// Define the tracing configuration for a function.
func (o LookupFunctionResultOutput) TraceConfigs() GetFunctionTraceConfigArrayOutput {
	return o.ApplyT(func(v LookupFunctionResult) []GetFunctionTraceConfig { return v.TraceConfigs }).(GetFunctionTraceConfigArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFunctionResultOutput{})
}
