// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package functions

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Functions in Oracle Cloud Infrastructure Functions service.
//
// Lists functions for an application.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Functions"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Functions.GetFunctions(ctx, &functions.GetFunctionsArgs{
//				ApplicationId: oci_functions_application.Test_application.Id,
//				DisplayName:   pulumi.StringRef(_var.Function_display_name),
//				Id:            pulumi.StringRef(_var.Function_id),
//				State:         pulumi.StringRef(_var.Function_state),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetFunctions(ctx *pulumi.Context, args *GetFunctionsArgs, opts ...pulumi.InvokeOption) (*GetFunctionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetFunctionsResult
	err := ctx.Invoke("oci:Functions/getFunctions:getFunctions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFunctions.
type GetFunctionsArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the application to which this function belongs.
	ApplicationId string `pulumi:"applicationId"`
	// A filter to return only functions with display names that match the display name string. Matching is exact.
	DisplayName *string              `pulumi:"displayName"`
	Filters     []GetFunctionsFilter `pulumi:"filters"`
	// A filter to return only functions with the specified OCID.
	Id *string `pulumi:"id"`
	// A filter to return only functions that match the lifecycle state in this parameter. Example: `Creating`
	State *string `pulumi:"state"`
}

// A collection of values returned by getFunctions.
type GetFunctionsResult struct {
	// The OCID of the application the function belongs to.
	ApplicationId string `pulumi:"applicationId"`
	// The display name of the function. The display name is unique within the application containing the function.
	DisplayName *string              `pulumi:"displayName"`
	Filters     []GetFunctionsFilter `pulumi:"filters"`
	// The list of functions.
	Functions []GetFunctionsFunction `pulumi:"functions"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function.
	Id *string `pulumi:"id"`
	// The current state of the function.
	State *string `pulumi:"state"`
}

func GetFunctionsOutput(ctx *pulumi.Context, args GetFunctionsOutputArgs, opts ...pulumi.InvokeOption) GetFunctionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetFunctionsResult, error) {
			args := v.(GetFunctionsArgs)
			r, err := GetFunctions(ctx, &args, opts...)
			var s GetFunctionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetFunctionsResultOutput)
}

// A collection of arguments for invoking getFunctions.
type GetFunctionsOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the application to which this function belongs.
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	// A filter to return only functions with display names that match the display name string. Matching is exact.
	DisplayName pulumi.StringPtrInput        `pulumi:"displayName"`
	Filters     GetFunctionsFilterArrayInput `pulumi:"filters"`
	// A filter to return only functions with the specified OCID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return only functions that match the lifecycle state in this parameter. Example: `Creating`
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetFunctionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionsArgs)(nil)).Elem()
}

// A collection of values returned by getFunctions.
type GetFunctionsResultOutput struct{ *pulumi.OutputState }

func (GetFunctionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionsResult)(nil)).Elem()
}

func (o GetFunctionsResultOutput) ToGetFunctionsResultOutput() GetFunctionsResultOutput {
	return o
}

func (o GetFunctionsResultOutput) ToGetFunctionsResultOutputWithContext(ctx context.Context) GetFunctionsResultOutput {
	return o
}

// The OCID of the application the function belongs to.
func (o GetFunctionsResultOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsResult) string { return v.ApplicationId }).(pulumi.StringOutput)
}

// The display name of the function. The display name is unique within the application containing the function.
func (o GetFunctionsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFunctionsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetFunctionsResultOutput) Filters() GetFunctionsFilterArrayOutput {
	return o.ApplyT(func(v GetFunctionsResult) []GetFunctionsFilter { return v.Filters }).(GetFunctionsFilterArrayOutput)
}

// The list of functions.
func (o GetFunctionsResultOutput) Functions() GetFunctionsFunctionArrayOutput {
	return o.ApplyT(func(v GetFunctionsResult) []GetFunctionsFunction { return v.Functions }).(GetFunctionsFunctionArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function.
func (o GetFunctionsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFunctionsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The current state of the function.
func (o GetFunctionsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFunctionsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetFunctionsResultOutput{})
}
