// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package functions

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Pbf Listing Versions in Oracle Cloud Infrastructure Functions service.
//
// Fetches a wrapped list of all Pre-built Function(PBF) Listing versions. Returns a PbfListingVersionCollection
// containing an array of PbfListingVersionSummary response models.
//
// Note that the PbfListingIdentifier must be provided as a query parameter, otherwise an exception shall
// be thrown.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Functions"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Functions.GetPbfListingVersions(ctx, &functions.GetPbfListingVersionsArgs{
//				PbfListingId:        testPbfListing.Id,
//				IsCurrentVersion:    pulumi.BoolRef(pbfListingVersionIsCurrentVersion),
//				Name:                pulumi.StringRef(pbfListingVersionName),
//				PbfListingVersionId: pulumi.StringRef(testPbfListingVersion.Id),
//				State:               pulumi.StringRef(pbfListingVersionState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetPbfListingVersions(ctx *pulumi.Context, args *GetPbfListingVersionsArgs, opts ...pulumi.InvokeOption) (*GetPbfListingVersionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPbfListingVersionsResult
	err := ctx.Invoke("oci:Functions/getPbfListingVersions:getPbfListingVersions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPbfListingVersions.
type GetPbfListingVersionsArgs struct {
	Filters []GetPbfListingVersionsFilter `pulumi:"filters"`
	// Matches the current version (the most recently added version with an Active  lifecycleState) associated with a PbfListing.
	IsCurrentVersion *bool `pulumi:"isCurrentVersion"`
	// Matches a PbfListingVersion based on a provided semantic version name for a PbfListingVersion.  Each PbfListingVersion name is unique with respect to its associated PbfListing.
	Name *string `pulumi:"name"`
	// unique PbfListing identifier
	PbfListingId string `pulumi:"pbfListingId"`
	// unique PbfListingVersion identifier
	PbfListingVersionId *string `pulumi:"pbfListingVersionId"`
	// A filter to return only resources their lifecycleState matches the given lifecycleState.
	State *string `pulumi:"state"`
}

// A collection of values returned by getPbfListingVersions.
type GetPbfListingVersionsResult struct {
	Filters []GetPbfListingVersionsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id               string `pulumi:"id"`
	IsCurrentVersion *bool  `pulumi:"isCurrentVersion"`
	// A brief descriptive name for the PBF trigger.
	Name *string `pulumi:"name"`
	// The OCID of the PbfListing this resource version belongs to.
	PbfListingId        string  `pulumi:"pbfListingId"`
	PbfListingVersionId *string `pulumi:"pbfListingVersionId"`
	// The list of pbf_listing_versions_collection.
	PbfListingVersionsCollections []GetPbfListingVersionsPbfListingVersionsCollection `pulumi:"pbfListingVersionsCollections"`
	// The current state of the PBF resource.
	State *string `pulumi:"state"`
}

func GetPbfListingVersionsOutput(ctx *pulumi.Context, args GetPbfListingVersionsOutputArgs, opts ...pulumi.InvokeOption) GetPbfListingVersionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPbfListingVersionsResult, error) {
			args := v.(GetPbfListingVersionsArgs)
			r, err := GetPbfListingVersions(ctx, &args, opts...)
			var s GetPbfListingVersionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPbfListingVersionsResultOutput)
}

// A collection of arguments for invoking getPbfListingVersions.
type GetPbfListingVersionsOutputArgs struct {
	Filters GetPbfListingVersionsFilterArrayInput `pulumi:"filters"`
	// Matches the current version (the most recently added version with an Active  lifecycleState) associated with a PbfListing.
	IsCurrentVersion pulumi.BoolPtrInput `pulumi:"isCurrentVersion"`
	// Matches a PbfListingVersion based on a provided semantic version name for a PbfListingVersion.  Each PbfListingVersion name is unique with respect to its associated PbfListing.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// unique PbfListing identifier
	PbfListingId pulumi.StringInput `pulumi:"pbfListingId"`
	// unique PbfListingVersion identifier
	PbfListingVersionId pulumi.StringPtrInput `pulumi:"pbfListingVersionId"`
	// A filter to return only resources their lifecycleState matches the given lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetPbfListingVersionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPbfListingVersionsArgs)(nil)).Elem()
}

// A collection of values returned by getPbfListingVersions.
type GetPbfListingVersionsResultOutput struct{ *pulumi.OutputState }

func (GetPbfListingVersionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPbfListingVersionsResult)(nil)).Elem()
}

func (o GetPbfListingVersionsResultOutput) ToGetPbfListingVersionsResultOutput() GetPbfListingVersionsResultOutput {
	return o
}

func (o GetPbfListingVersionsResultOutput) ToGetPbfListingVersionsResultOutputWithContext(ctx context.Context) GetPbfListingVersionsResultOutput {
	return o
}

func (o GetPbfListingVersionsResultOutput) Filters() GetPbfListingVersionsFilterArrayOutput {
	return o.ApplyT(func(v GetPbfListingVersionsResult) []GetPbfListingVersionsFilter { return v.Filters }).(GetPbfListingVersionsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPbfListingVersionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPbfListingVersionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPbfListingVersionsResultOutput) IsCurrentVersion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetPbfListingVersionsResult) *bool { return v.IsCurrentVersion }).(pulumi.BoolPtrOutput)
}

// A brief descriptive name for the PBF trigger.
func (o GetPbfListingVersionsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPbfListingVersionsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The OCID of the PbfListing this resource version belongs to.
func (o GetPbfListingVersionsResultOutput) PbfListingId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPbfListingVersionsResult) string { return v.PbfListingId }).(pulumi.StringOutput)
}

func (o GetPbfListingVersionsResultOutput) PbfListingVersionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPbfListingVersionsResult) *string { return v.PbfListingVersionId }).(pulumi.StringPtrOutput)
}

// The list of pbf_listing_versions_collection.
func (o GetPbfListingVersionsResultOutput) PbfListingVersionsCollections() GetPbfListingVersionsPbfListingVersionsCollectionArrayOutput {
	return o.ApplyT(func(v GetPbfListingVersionsResult) []GetPbfListingVersionsPbfListingVersionsCollection {
		return v.PbfListingVersionsCollections
	}).(GetPbfListingVersionsPbfListingVersionsCollectionArrayOutput)
}

// The current state of the PBF resource.
func (o GetPbfListingVersionsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPbfListingVersionsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPbfListingVersionsResultOutput{})
}
