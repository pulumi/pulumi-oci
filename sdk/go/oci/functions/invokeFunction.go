// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package functions

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Invoke Function resource in Oracle Cloud Infrastructure Functions service.
//
// # Invokes a function
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/functions"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := functions.NewInvokeFunction(ctx, "test_invoke_function", &functions.InvokeFunctionArgs{
//				FunctionId:          pulumi.Any(testFunction.Id),
//				InvokeFunctionBody:  pulumi.Any(invokeFunctionInvokeFunctionBody),
//				FnIntent:            pulumi.Any(invokeFunctionFnIntent),
//				FnInvokeType:        pulumi.Any(invokeFunctionFnInvokeType),
//				IsDryRun:            pulumi.Any(invokeFunctionIsDryRun),
//				Base64EncodeContent: pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Import is not supported for this resource.
type InvokeFunction struct {
	pulumi.CustomResourceState

	Base64EncodeContent pulumi.BoolPtrOutput `pulumi:"base64EncodeContent"`
	// Content of the response string, if any. If `base64EncodeContent` is set to `true`, then this content will be base64 encoded.
	Content pulumi.StringOutput `pulumi:"content"`
	// An optional intent header that indicates to the FDK the way the event should be interpreted. E.g. 'httprequest', 'cloudevent'.
	FnIntent pulumi.StringOutput `pulumi:"fnIntent"`
	// Indicates whether Oracle Functions should execute the request and return the result ('sync') of the execution,  or whether Oracle Functions should return as soon as processing has begun ('detached') and leave result handling to the function.
	FnInvokeType pulumi.StringOutput `pulumi:"fnInvokeType"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this function.
	FunctionId pulumi.StringOutput `pulumi:"functionId"`
	// An absolute path to a file on the local system that contains the input to be provided to the function. Cannot be defined if `invokeFunctionBody` or `invokeFunctionBodyBase64Encoded` is defined. Note: The maximum size of the request is limited. This limit is currently 6MB and the endpoint will not accept requests that are bigger than this limit.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	InputBodySourcePath pulumi.StringPtrOutput `pulumi:"inputBodySourcePath"`
	InvokeEndpoint      pulumi.StringOutput    `pulumi:"invokeEndpoint"`
	// The body of the function invocation. Note: The maximum size of the request is limited. This limit is currently 6MB and the endpoint will not accept requests that are bigger than this limit. Cannot be defined if `inputBodySourcePath` or `invokeFunctionBodyBase64Encoded` is defined.
	InvokeFunctionBody              pulumi.StringOutput `pulumi:"invokeFunctionBody"`
	InvokeFunctionBodyBase64Encoded pulumi.StringOutput `pulumi:"invokeFunctionBodyBase64Encoded"`
	// Indicates that the request is a dry run, if set to "true". A dry run request does not execute the function.
	IsDryRun pulumi.BoolOutput `pulumi:"isDryRun"`
}

// NewInvokeFunction registers a new resource with the given unique name, arguments, and options.
func NewInvokeFunction(ctx *pulumi.Context,
	name string, args *InvokeFunctionArgs, opts ...pulumi.ResourceOption) (*InvokeFunction, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FunctionId == nil {
		return nil, errors.New("invalid value for required argument 'FunctionId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource InvokeFunction
	err := ctx.RegisterResource("oci:Functions/invokeFunction:InvokeFunction", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInvokeFunction gets an existing InvokeFunction resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInvokeFunction(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InvokeFunctionState, opts ...pulumi.ResourceOption) (*InvokeFunction, error) {
	var resource InvokeFunction
	err := ctx.ReadResource("oci:Functions/invokeFunction:InvokeFunction", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InvokeFunction resources.
type invokeFunctionState struct {
	Base64EncodeContent *bool `pulumi:"base64EncodeContent"`
	// Content of the response string, if any. If `base64EncodeContent` is set to `true`, then this content will be base64 encoded.
	Content *string `pulumi:"content"`
	// An optional intent header that indicates to the FDK the way the event should be interpreted. E.g. 'httprequest', 'cloudevent'.
	FnIntent *string `pulumi:"fnIntent"`
	// Indicates whether Oracle Functions should execute the request and return the result ('sync') of the execution,  or whether Oracle Functions should return as soon as processing has begun ('detached') and leave result handling to the function.
	FnInvokeType *string `pulumi:"fnInvokeType"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this function.
	FunctionId *string `pulumi:"functionId"`
	// An absolute path to a file on the local system that contains the input to be provided to the function. Cannot be defined if `invokeFunctionBody` or `invokeFunctionBodyBase64Encoded` is defined. Note: The maximum size of the request is limited. This limit is currently 6MB and the endpoint will not accept requests that are bigger than this limit.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	InputBodySourcePath *string `pulumi:"inputBodySourcePath"`
	InvokeEndpoint      *string `pulumi:"invokeEndpoint"`
	// The body of the function invocation. Note: The maximum size of the request is limited. This limit is currently 6MB and the endpoint will not accept requests that are bigger than this limit. Cannot be defined if `inputBodySourcePath` or `invokeFunctionBodyBase64Encoded` is defined.
	InvokeFunctionBody              *string `pulumi:"invokeFunctionBody"`
	InvokeFunctionBodyBase64Encoded *string `pulumi:"invokeFunctionBodyBase64Encoded"`
	// Indicates that the request is a dry run, if set to "true". A dry run request does not execute the function.
	IsDryRun *bool `pulumi:"isDryRun"`
}

type InvokeFunctionState struct {
	Base64EncodeContent pulumi.BoolPtrInput
	// Content of the response string, if any. If `base64EncodeContent` is set to `true`, then this content will be base64 encoded.
	Content pulumi.StringPtrInput
	// An optional intent header that indicates to the FDK the way the event should be interpreted. E.g. 'httprequest', 'cloudevent'.
	FnIntent pulumi.StringPtrInput
	// Indicates whether Oracle Functions should execute the request and return the result ('sync') of the execution,  or whether Oracle Functions should return as soon as processing has begun ('detached') and leave result handling to the function.
	FnInvokeType pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this function.
	FunctionId pulumi.StringPtrInput
	// An absolute path to a file on the local system that contains the input to be provided to the function. Cannot be defined if `invokeFunctionBody` or `invokeFunctionBodyBase64Encoded` is defined. Note: The maximum size of the request is limited. This limit is currently 6MB and the endpoint will not accept requests that are bigger than this limit.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	InputBodySourcePath pulumi.StringPtrInput
	InvokeEndpoint      pulumi.StringPtrInput
	// The body of the function invocation. Note: The maximum size of the request is limited. This limit is currently 6MB and the endpoint will not accept requests that are bigger than this limit. Cannot be defined if `inputBodySourcePath` or `invokeFunctionBodyBase64Encoded` is defined.
	InvokeFunctionBody              pulumi.StringPtrInput
	InvokeFunctionBodyBase64Encoded pulumi.StringPtrInput
	// Indicates that the request is a dry run, if set to "true". A dry run request does not execute the function.
	IsDryRun pulumi.BoolPtrInput
}

func (InvokeFunctionState) ElementType() reflect.Type {
	return reflect.TypeOf((*invokeFunctionState)(nil)).Elem()
}

type invokeFunctionArgs struct {
	Base64EncodeContent *bool `pulumi:"base64EncodeContent"`
	// An optional intent header that indicates to the FDK the way the event should be interpreted. E.g. 'httprequest', 'cloudevent'.
	FnIntent *string `pulumi:"fnIntent"`
	// Indicates whether Oracle Functions should execute the request and return the result ('sync') of the execution,  or whether Oracle Functions should return as soon as processing has begun ('detached') and leave result handling to the function.
	FnInvokeType *string `pulumi:"fnInvokeType"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this function.
	FunctionId string `pulumi:"functionId"`
	// An absolute path to a file on the local system that contains the input to be provided to the function. Cannot be defined if `invokeFunctionBody` or `invokeFunctionBodyBase64Encoded` is defined. Note: The maximum size of the request is limited. This limit is currently 6MB and the endpoint will not accept requests that are bigger than this limit.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	InputBodySourcePath *string `pulumi:"inputBodySourcePath"`
	// The body of the function invocation. Note: The maximum size of the request is limited. This limit is currently 6MB and the endpoint will not accept requests that are bigger than this limit. Cannot be defined if `inputBodySourcePath` or `invokeFunctionBodyBase64Encoded` is defined.
	InvokeFunctionBody              *string `pulumi:"invokeFunctionBody"`
	InvokeFunctionBodyBase64Encoded *string `pulumi:"invokeFunctionBodyBase64Encoded"`
	// Indicates that the request is a dry run, if set to "true". A dry run request does not execute the function.
	IsDryRun *bool `pulumi:"isDryRun"`
}

// The set of arguments for constructing a InvokeFunction resource.
type InvokeFunctionArgs struct {
	Base64EncodeContent pulumi.BoolPtrInput
	// An optional intent header that indicates to the FDK the way the event should be interpreted. E.g. 'httprequest', 'cloudevent'.
	FnIntent pulumi.StringPtrInput
	// Indicates whether Oracle Functions should execute the request and return the result ('sync') of the execution,  or whether Oracle Functions should return as soon as processing has begun ('detached') and leave result handling to the function.
	FnInvokeType pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this function.
	FunctionId pulumi.StringInput
	// An absolute path to a file on the local system that contains the input to be provided to the function. Cannot be defined if `invokeFunctionBody` or `invokeFunctionBodyBase64Encoded` is defined. Note: The maximum size of the request is limited. This limit is currently 6MB and the endpoint will not accept requests that are bigger than this limit.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	InputBodySourcePath pulumi.StringPtrInput
	// The body of the function invocation. Note: The maximum size of the request is limited. This limit is currently 6MB and the endpoint will not accept requests that are bigger than this limit. Cannot be defined if `inputBodySourcePath` or `invokeFunctionBodyBase64Encoded` is defined.
	InvokeFunctionBody              pulumi.StringPtrInput
	InvokeFunctionBodyBase64Encoded pulumi.StringPtrInput
	// Indicates that the request is a dry run, if set to "true". A dry run request does not execute the function.
	IsDryRun pulumi.BoolPtrInput
}

func (InvokeFunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*invokeFunctionArgs)(nil)).Elem()
}

type InvokeFunctionInput interface {
	pulumi.Input

	ToInvokeFunctionOutput() InvokeFunctionOutput
	ToInvokeFunctionOutputWithContext(ctx context.Context) InvokeFunctionOutput
}

func (*InvokeFunction) ElementType() reflect.Type {
	return reflect.TypeOf((**InvokeFunction)(nil)).Elem()
}

func (i *InvokeFunction) ToInvokeFunctionOutput() InvokeFunctionOutput {
	return i.ToInvokeFunctionOutputWithContext(context.Background())
}

func (i *InvokeFunction) ToInvokeFunctionOutputWithContext(ctx context.Context) InvokeFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvokeFunctionOutput)
}

// InvokeFunctionArrayInput is an input type that accepts InvokeFunctionArray and InvokeFunctionArrayOutput values.
// You can construct a concrete instance of `InvokeFunctionArrayInput` via:
//
//	InvokeFunctionArray{ InvokeFunctionArgs{...} }
type InvokeFunctionArrayInput interface {
	pulumi.Input

	ToInvokeFunctionArrayOutput() InvokeFunctionArrayOutput
	ToInvokeFunctionArrayOutputWithContext(context.Context) InvokeFunctionArrayOutput
}

type InvokeFunctionArray []InvokeFunctionInput

func (InvokeFunctionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InvokeFunction)(nil)).Elem()
}

func (i InvokeFunctionArray) ToInvokeFunctionArrayOutput() InvokeFunctionArrayOutput {
	return i.ToInvokeFunctionArrayOutputWithContext(context.Background())
}

func (i InvokeFunctionArray) ToInvokeFunctionArrayOutputWithContext(ctx context.Context) InvokeFunctionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvokeFunctionArrayOutput)
}

// InvokeFunctionMapInput is an input type that accepts InvokeFunctionMap and InvokeFunctionMapOutput values.
// You can construct a concrete instance of `InvokeFunctionMapInput` via:
//
//	InvokeFunctionMap{ "key": InvokeFunctionArgs{...} }
type InvokeFunctionMapInput interface {
	pulumi.Input

	ToInvokeFunctionMapOutput() InvokeFunctionMapOutput
	ToInvokeFunctionMapOutputWithContext(context.Context) InvokeFunctionMapOutput
}

type InvokeFunctionMap map[string]InvokeFunctionInput

func (InvokeFunctionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InvokeFunction)(nil)).Elem()
}

func (i InvokeFunctionMap) ToInvokeFunctionMapOutput() InvokeFunctionMapOutput {
	return i.ToInvokeFunctionMapOutputWithContext(context.Background())
}

func (i InvokeFunctionMap) ToInvokeFunctionMapOutputWithContext(ctx context.Context) InvokeFunctionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvokeFunctionMapOutput)
}

type InvokeFunctionOutput struct{ *pulumi.OutputState }

func (InvokeFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InvokeFunction)(nil)).Elem()
}

func (o InvokeFunctionOutput) ToInvokeFunctionOutput() InvokeFunctionOutput {
	return o
}

func (o InvokeFunctionOutput) ToInvokeFunctionOutputWithContext(ctx context.Context) InvokeFunctionOutput {
	return o
}

func (o InvokeFunctionOutput) Base64EncodeContent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InvokeFunction) pulumi.BoolPtrOutput { return v.Base64EncodeContent }).(pulumi.BoolPtrOutput)
}

// Content of the response string, if any. If `base64EncodeContent` is set to `true`, then this content will be base64 encoded.
func (o InvokeFunctionOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v *InvokeFunction) pulumi.StringOutput { return v.Content }).(pulumi.StringOutput)
}

// An optional intent header that indicates to the FDK the way the event should be interpreted. E.g. 'httprequest', 'cloudevent'.
func (o InvokeFunctionOutput) FnIntent() pulumi.StringOutput {
	return o.ApplyT(func(v *InvokeFunction) pulumi.StringOutput { return v.FnIntent }).(pulumi.StringOutput)
}

// Indicates whether Oracle Functions should execute the request and return the result ('sync') of the execution,  or whether Oracle Functions should return as soon as processing has begun ('detached') and leave result handling to the function.
func (o InvokeFunctionOutput) FnInvokeType() pulumi.StringOutput {
	return o.ApplyT(func(v *InvokeFunction) pulumi.StringOutput { return v.FnInvokeType }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this function.
func (o InvokeFunctionOutput) FunctionId() pulumi.StringOutput {
	return o.ApplyT(func(v *InvokeFunction) pulumi.StringOutput { return v.FunctionId }).(pulumi.StringOutput)
}

// An absolute path to a file on the local system that contains the input to be provided to the function. Cannot be defined if `invokeFunctionBody` or `invokeFunctionBodyBase64Encoded` is defined. Note: The maximum size of the request is limited. This limit is currently 6MB and the endpoint will not accept requests that are bigger than this limit.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o InvokeFunctionOutput) InputBodySourcePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InvokeFunction) pulumi.StringPtrOutput { return v.InputBodySourcePath }).(pulumi.StringPtrOutput)
}

func (o InvokeFunctionOutput) InvokeEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *InvokeFunction) pulumi.StringOutput { return v.InvokeEndpoint }).(pulumi.StringOutput)
}

// The body of the function invocation. Note: The maximum size of the request is limited. This limit is currently 6MB and the endpoint will not accept requests that are bigger than this limit. Cannot be defined if `inputBodySourcePath` or `invokeFunctionBodyBase64Encoded` is defined.
func (o InvokeFunctionOutput) InvokeFunctionBody() pulumi.StringOutput {
	return o.ApplyT(func(v *InvokeFunction) pulumi.StringOutput { return v.InvokeFunctionBody }).(pulumi.StringOutput)
}

func (o InvokeFunctionOutput) InvokeFunctionBodyBase64Encoded() pulumi.StringOutput {
	return o.ApplyT(func(v *InvokeFunction) pulumi.StringOutput { return v.InvokeFunctionBodyBase64Encoded }).(pulumi.StringOutput)
}

// Indicates that the request is a dry run, if set to "true". A dry run request does not execute the function.
func (o InvokeFunctionOutput) IsDryRun() pulumi.BoolOutput {
	return o.ApplyT(func(v *InvokeFunction) pulumi.BoolOutput { return v.IsDryRun }).(pulumi.BoolOutput)
}

type InvokeFunctionArrayOutput struct{ *pulumi.OutputState }

func (InvokeFunctionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InvokeFunction)(nil)).Elem()
}

func (o InvokeFunctionArrayOutput) ToInvokeFunctionArrayOutput() InvokeFunctionArrayOutput {
	return o
}

func (o InvokeFunctionArrayOutput) ToInvokeFunctionArrayOutputWithContext(ctx context.Context) InvokeFunctionArrayOutput {
	return o
}

func (o InvokeFunctionArrayOutput) Index(i pulumi.IntInput) InvokeFunctionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *InvokeFunction {
		return vs[0].([]*InvokeFunction)[vs[1].(int)]
	}).(InvokeFunctionOutput)
}

type InvokeFunctionMapOutput struct{ *pulumi.OutputState }

func (InvokeFunctionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InvokeFunction)(nil)).Elem()
}

func (o InvokeFunctionMapOutput) ToInvokeFunctionMapOutput() InvokeFunctionMapOutput {
	return o
}

func (o InvokeFunctionMapOutput) ToInvokeFunctionMapOutputWithContext(ctx context.Context) InvokeFunctionMapOutput {
	return o
}

func (o InvokeFunctionMapOutput) MapIndex(k pulumi.StringInput) InvokeFunctionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *InvokeFunction {
		return vs[0].(map[string]*InvokeFunction)[vs[1].(string)]
	}).(InvokeFunctionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InvokeFunctionInput)(nil)).Elem(), &InvokeFunction{})
	pulumi.RegisterInputType(reflect.TypeOf((*InvokeFunctionArrayInput)(nil)).Elem(), InvokeFunctionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InvokeFunctionMapInput)(nil)).Elem(), InvokeFunctionMap{})
	pulumi.RegisterOutputType(InvokeFunctionOutput{})
	pulumi.RegisterOutputType(InvokeFunctionArrayOutput{})
	pulumi.RegisterOutputType(InvokeFunctionMapOutput{})
}
