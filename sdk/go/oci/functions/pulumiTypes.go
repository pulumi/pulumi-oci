// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package functions

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ApplicationImagePolicyConfig struct {
	// (Updatable) Define if image signature verification policy is enabled for the application.
	IsPolicyEnabled bool `pulumi:"isPolicyEnabled"`
	// (Updatable) A list of KMS key details.
	KeyDetails []ApplicationImagePolicyConfigKeyDetail `pulumi:"keyDetails"`
}

// ApplicationImagePolicyConfigInput is an input type that accepts ApplicationImagePolicyConfigArgs and ApplicationImagePolicyConfigOutput values.
// You can construct a concrete instance of `ApplicationImagePolicyConfigInput` via:
//
//	ApplicationImagePolicyConfigArgs{...}
type ApplicationImagePolicyConfigInput interface {
	pulumi.Input

	ToApplicationImagePolicyConfigOutput() ApplicationImagePolicyConfigOutput
	ToApplicationImagePolicyConfigOutputWithContext(context.Context) ApplicationImagePolicyConfigOutput
}

type ApplicationImagePolicyConfigArgs struct {
	// (Updatable) Define if image signature verification policy is enabled for the application.
	IsPolicyEnabled pulumi.BoolInput `pulumi:"isPolicyEnabled"`
	// (Updatable) A list of KMS key details.
	KeyDetails ApplicationImagePolicyConfigKeyDetailArrayInput `pulumi:"keyDetails"`
}

func (ApplicationImagePolicyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationImagePolicyConfig)(nil)).Elem()
}

func (i ApplicationImagePolicyConfigArgs) ToApplicationImagePolicyConfigOutput() ApplicationImagePolicyConfigOutput {
	return i.ToApplicationImagePolicyConfigOutputWithContext(context.Background())
}

func (i ApplicationImagePolicyConfigArgs) ToApplicationImagePolicyConfigOutputWithContext(ctx context.Context) ApplicationImagePolicyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationImagePolicyConfigOutput)
}

func (i ApplicationImagePolicyConfigArgs) ToApplicationImagePolicyConfigPtrOutput() ApplicationImagePolicyConfigPtrOutput {
	return i.ToApplicationImagePolicyConfigPtrOutputWithContext(context.Background())
}

func (i ApplicationImagePolicyConfigArgs) ToApplicationImagePolicyConfigPtrOutputWithContext(ctx context.Context) ApplicationImagePolicyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationImagePolicyConfigOutput).ToApplicationImagePolicyConfigPtrOutputWithContext(ctx)
}

// ApplicationImagePolicyConfigPtrInput is an input type that accepts ApplicationImagePolicyConfigArgs, ApplicationImagePolicyConfigPtr and ApplicationImagePolicyConfigPtrOutput values.
// You can construct a concrete instance of `ApplicationImagePolicyConfigPtrInput` via:
//
//	        ApplicationImagePolicyConfigArgs{...}
//
//	or:
//
//	        nil
type ApplicationImagePolicyConfigPtrInput interface {
	pulumi.Input

	ToApplicationImagePolicyConfigPtrOutput() ApplicationImagePolicyConfigPtrOutput
	ToApplicationImagePolicyConfigPtrOutputWithContext(context.Context) ApplicationImagePolicyConfigPtrOutput
}

type applicationImagePolicyConfigPtrType ApplicationImagePolicyConfigArgs

func ApplicationImagePolicyConfigPtr(v *ApplicationImagePolicyConfigArgs) ApplicationImagePolicyConfigPtrInput {
	return (*applicationImagePolicyConfigPtrType)(v)
}

func (*applicationImagePolicyConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationImagePolicyConfig)(nil)).Elem()
}

func (i *applicationImagePolicyConfigPtrType) ToApplicationImagePolicyConfigPtrOutput() ApplicationImagePolicyConfigPtrOutput {
	return i.ToApplicationImagePolicyConfigPtrOutputWithContext(context.Background())
}

func (i *applicationImagePolicyConfigPtrType) ToApplicationImagePolicyConfigPtrOutputWithContext(ctx context.Context) ApplicationImagePolicyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationImagePolicyConfigPtrOutput)
}

type ApplicationImagePolicyConfigOutput struct{ *pulumi.OutputState }

func (ApplicationImagePolicyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationImagePolicyConfig)(nil)).Elem()
}

func (o ApplicationImagePolicyConfigOutput) ToApplicationImagePolicyConfigOutput() ApplicationImagePolicyConfigOutput {
	return o
}

func (o ApplicationImagePolicyConfigOutput) ToApplicationImagePolicyConfigOutputWithContext(ctx context.Context) ApplicationImagePolicyConfigOutput {
	return o
}

func (o ApplicationImagePolicyConfigOutput) ToApplicationImagePolicyConfigPtrOutput() ApplicationImagePolicyConfigPtrOutput {
	return o.ToApplicationImagePolicyConfigPtrOutputWithContext(context.Background())
}

func (o ApplicationImagePolicyConfigOutput) ToApplicationImagePolicyConfigPtrOutputWithContext(ctx context.Context) ApplicationImagePolicyConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationImagePolicyConfig) *ApplicationImagePolicyConfig {
		return &v
	}).(ApplicationImagePolicyConfigPtrOutput)
}

// (Updatable) Define if image signature verification policy is enabled for the application.
func (o ApplicationImagePolicyConfigOutput) IsPolicyEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ApplicationImagePolicyConfig) bool { return v.IsPolicyEnabled }).(pulumi.BoolOutput)
}

// (Updatable) A list of KMS key details.
func (o ApplicationImagePolicyConfigOutput) KeyDetails() ApplicationImagePolicyConfigKeyDetailArrayOutput {
	return o.ApplyT(func(v ApplicationImagePolicyConfig) []ApplicationImagePolicyConfigKeyDetail { return v.KeyDetails }).(ApplicationImagePolicyConfigKeyDetailArrayOutput)
}

type ApplicationImagePolicyConfigPtrOutput struct{ *pulumi.OutputState }

func (ApplicationImagePolicyConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationImagePolicyConfig)(nil)).Elem()
}

func (o ApplicationImagePolicyConfigPtrOutput) ToApplicationImagePolicyConfigPtrOutput() ApplicationImagePolicyConfigPtrOutput {
	return o
}

func (o ApplicationImagePolicyConfigPtrOutput) ToApplicationImagePolicyConfigPtrOutputWithContext(ctx context.Context) ApplicationImagePolicyConfigPtrOutput {
	return o
}

func (o ApplicationImagePolicyConfigPtrOutput) Elem() ApplicationImagePolicyConfigOutput {
	return o.ApplyT(func(v *ApplicationImagePolicyConfig) ApplicationImagePolicyConfig {
		if v != nil {
			return *v
		}
		var ret ApplicationImagePolicyConfig
		return ret
	}).(ApplicationImagePolicyConfigOutput)
}

// (Updatable) Define if image signature verification policy is enabled for the application.
func (o ApplicationImagePolicyConfigPtrOutput) IsPolicyEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationImagePolicyConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.IsPolicyEnabled
	}).(pulumi.BoolPtrOutput)
}

// (Updatable) A list of KMS key details.
func (o ApplicationImagePolicyConfigPtrOutput) KeyDetails() ApplicationImagePolicyConfigKeyDetailArrayOutput {
	return o.ApplyT(func(v *ApplicationImagePolicyConfig) []ApplicationImagePolicyConfigKeyDetail {
		if v == nil {
			return nil
		}
		return v.KeyDetails
	}).(ApplicationImagePolicyConfigKeyDetailArrayOutput)
}

type ApplicationImagePolicyConfigKeyDetail struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of the KMS key that will be used to verify the image signature.
	KmsKeyId string `pulumi:"kmsKeyId"`
}

// ApplicationImagePolicyConfigKeyDetailInput is an input type that accepts ApplicationImagePolicyConfigKeyDetailArgs and ApplicationImagePolicyConfigKeyDetailOutput values.
// You can construct a concrete instance of `ApplicationImagePolicyConfigKeyDetailInput` via:
//
//	ApplicationImagePolicyConfigKeyDetailArgs{...}
type ApplicationImagePolicyConfigKeyDetailInput interface {
	pulumi.Input

	ToApplicationImagePolicyConfigKeyDetailOutput() ApplicationImagePolicyConfigKeyDetailOutput
	ToApplicationImagePolicyConfigKeyDetailOutputWithContext(context.Context) ApplicationImagePolicyConfigKeyDetailOutput
}

type ApplicationImagePolicyConfigKeyDetailArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of the KMS key that will be used to verify the image signature.
	KmsKeyId pulumi.StringInput `pulumi:"kmsKeyId"`
}

func (ApplicationImagePolicyConfigKeyDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationImagePolicyConfigKeyDetail)(nil)).Elem()
}

func (i ApplicationImagePolicyConfigKeyDetailArgs) ToApplicationImagePolicyConfigKeyDetailOutput() ApplicationImagePolicyConfigKeyDetailOutput {
	return i.ToApplicationImagePolicyConfigKeyDetailOutputWithContext(context.Background())
}

func (i ApplicationImagePolicyConfigKeyDetailArgs) ToApplicationImagePolicyConfigKeyDetailOutputWithContext(ctx context.Context) ApplicationImagePolicyConfigKeyDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationImagePolicyConfigKeyDetailOutput)
}

// ApplicationImagePolicyConfigKeyDetailArrayInput is an input type that accepts ApplicationImagePolicyConfigKeyDetailArray and ApplicationImagePolicyConfigKeyDetailArrayOutput values.
// You can construct a concrete instance of `ApplicationImagePolicyConfigKeyDetailArrayInput` via:
//
//	ApplicationImagePolicyConfigKeyDetailArray{ ApplicationImagePolicyConfigKeyDetailArgs{...} }
type ApplicationImagePolicyConfigKeyDetailArrayInput interface {
	pulumi.Input

	ToApplicationImagePolicyConfigKeyDetailArrayOutput() ApplicationImagePolicyConfigKeyDetailArrayOutput
	ToApplicationImagePolicyConfigKeyDetailArrayOutputWithContext(context.Context) ApplicationImagePolicyConfigKeyDetailArrayOutput
}

type ApplicationImagePolicyConfigKeyDetailArray []ApplicationImagePolicyConfigKeyDetailInput

func (ApplicationImagePolicyConfigKeyDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationImagePolicyConfigKeyDetail)(nil)).Elem()
}

func (i ApplicationImagePolicyConfigKeyDetailArray) ToApplicationImagePolicyConfigKeyDetailArrayOutput() ApplicationImagePolicyConfigKeyDetailArrayOutput {
	return i.ToApplicationImagePolicyConfigKeyDetailArrayOutputWithContext(context.Background())
}

func (i ApplicationImagePolicyConfigKeyDetailArray) ToApplicationImagePolicyConfigKeyDetailArrayOutputWithContext(ctx context.Context) ApplicationImagePolicyConfigKeyDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationImagePolicyConfigKeyDetailArrayOutput)
}

type ApplicationImagePolicyConfigKeyDetailOutput struct{ *pulumi.OutputState }

func (ApplicationImagePolicyConfigKeyDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationImagePolicyConfigKeyDetail)(nil)).Elem()
}

func (o ApplicationImagePolicyConfigKeyDetailOutput) ToApplicationImagePolicyConfigKeyDetailOutput() ApplicationImagePolicyConfigKeyDetailOutput {
	return o
}

func (o ApplicationImagePolicyConfigKeyDetailOutput) ToApplicationImagePolicyConfigKeyDetailOutputWithContext(ctx context.Context) ApplicationImagePolicyConfigKeyDetailOutput {
	return o
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of the KMS key that will be used to verify the image signature.
func (o ApplicationImagePolicyConfigKeyDetailOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationImagePolicyConfigKeyDetail) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

type ApplicationImagePolicyConfigKeyDetailArrayOutput struct{ *pulumi.OutputState }

func (ApplicationImagePolicyConfigKeyDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationImagePolicyConfigKeyDetail)(nil)).Elem()
}

func (o ApplicationImagePolicyConfigKeyDetailArrayOutput) ToApplicationImagePolicyConfigKeyDetailArrayOutput() ApplicationImagePolicyConfigKeyDetailArrayOutput {
	return o
}

func (o ApplicationImagePolicyConfigKeyDetailArrayOutput) ToApplicationImagePolicyConfigKeyDetailArrayOutputWithContext(ctx context.Context) ApplicationImagePolicyConfigKeyDetailArrayOutput {
	return o
}

func (o ApplicationImagePolicyConfigKeyDetailArrayOutput) Index(i pulumi.IntInput) ApplicationImagePolicyConfigKeyDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationImagePolicyConfigKeyDetail {
		return vs[0].([]ApplicationImagePolicyConfigKeyDetail)[vs[1].(int)]
	}).(ApplicationImagePolicyConfigKeyDetailOutput)
}

type ApplicationTraceConfig struct {
	// (Updatable) The OCID of the collector (e.g. an APM Domain) trace events will be sent to.
	DomainId *string `pulumi:"domainId"`
	// (Updatable) Define if tracing is enabled for the resource.
	IsEnabled *bool `pulumi:"isEnabled"`
}

// ApplicationTraceConfigInput is an input type that accepts ApplicationTraceConfigArgs and ApplicationTraceConfigOutput values.
// You can construct a concrete instance of `ApplicationTraceConfigInput` via:
//
//	ApplicationTraceConfigArgs{...}
type ApplicationTraceConfigInput interface {
	pulumi.Input

	ToApplicationTraceConfigOutput() ApplicationTraceConfigOutput
	ToApplicationTraceConfigOutputWithContext(context.Context) ApplicationTraceConfigOutput
}

type ApplicationTraceConfigArgs struct {
	// (Updatable) The OCID of the collector (e.g. an APM Domain) trace events will be sent to.
	DomainId pulumi.StringPtrInput `pulumi:"domainId"`
	// (Updatable) Define if tracing is enabled for the resource.
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
}

func (ApplicationTraceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationTraceConfig)(nil)).Elem()
}

func (i ApplicationTraceConfigArgs) ToApplicationTraceConfigOutput() ApplicationTraceConfigOutput {
	return i.ToApplicationTraceConfigOutputWithContext(context.Background())
}

func (i ApplicationTraceConfigArgs) ToApplicationTraceConfigOutputWithContext(ctx context.Context) ApplicationTraceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationTraceConfigOutput)
}

func (i ApplicationTraceConfigArgs) ToApplicationTraceConfigPtrOutput() ApplicationTraceConfigPtrOutput {
	return i.ToApplicationTraceConfigPtrOutputWithContext(context.Background())
}

func (i ApplicationTraceConfigArgs) ToApplicationTraceConfigPtrOutputWithContext(ctx context.Context) ApplicationTraceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationTraceConfigOutput).ToApplicationTraceConfigPtrOutputWithContext(ctx)
}

// ApplicationTraceConfigPtrInput is an input type that accepts ApplicationTraceConfigArgs, ApplicationTraceConfigPtr and ApplicationTraceConfigPtrOutput values.
// You can construct a concrete instance of `ApplicationTraceConfigPtrInput` via:
//
//	        ApplicationTraceConfigArgs{...}
//
//	or:
//
//	        nil
type ApplicationTraceConfigPtrInput interface {
	pulumi.Input

	ToApplicationTraceConfigPtrOutput() ApplicationTraceConfigPtrOutput
	ToApplicationTraceConfigPtrOutputWithContext(context.Context) ApplicationTraceConfigPtrOutput
}

type applicationTraceConfigPtrType ApplicationTraceConfigArgs

func ApplicationTraceConfigPtr(v *ApplicationTraceConfigArgs) ApplicationTraceConfigPtrInput {
	return (*applicationTraceConfigPtrType)(v)
}

func (*applicationTraceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationTraceConfig)(nil)).Elem()
}

func (i *applicationTraceConfigPtrType) ToApplicationTraceConfigPtrOutput() ApplicationTraceConfigPtrOutput {
	return i.ToApplicationTraceConfigPtrOutputWithContext(context.Background())
}

func (i *applicationTraceConfigPtrType) ToApplicationTraceConfigPtrOutputWithContext(ctx context.Context) ApplicationTraceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationTraceConfigPtrOutput)
}

type ApplicationTraceConfigOutput struct{ *pulumi.OutputState }

func (ApplicationTraceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationTraceConfig)(nil)).Elem()
}

func (o ApplicationTraceConfigOutput) ToApplicationTraceConfigOutput() ApplicationTraceConfigOutput {
	return o
}

func (o ApplicationTraceConfigOutput) ToApplicationTraceConfigOutputWithContext(ctx context.Context) ApplicationTraceConfigOutput {
	return o
}

func (o ApplicationTraceConfigOutput) ToApplicationTraceConfigPtrOutput() ApplicationTraceConfigPtrOutput {
	return o.ToApplicationTraceConfigPtrOutputWithContext(context.Background())
}

func (o ApplicationTraceConfigOutput) ToApplicationTraceConfigPtrOutputWithContext(ctx context.Context) ApplicationTraceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationTraceConfig) *ApplicationTraceConfig {
		return &v
	}).(ApplicationTraceConfigPtrOutput)
}

// (Updatable) The OCID of the collector (e.g. an APM Domain) trace events will be sent to.
func (o ApplicationTraceConfigOutput) DomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationTraceConfig) *string { return v.DomainId }).(pulumi.StringPtrOutput)
}

// (Updatable) Define if tracing is enabled for the resource.
func (o ApplicationTraceConfigOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationTraceConfig) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

type ApplicationTraceConfigPtrOutput struct{ *pulumi.OutputState }

func (ApplicationTraceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationTraceConfig)(nil)).Elem()
}

func (o ApplicationTraceConfigPtrOutput) ToApplicationTraceConfigPtrOutput() ApplicationTraceConfigPtrOutput {
	return o
}

func (o ApplicationTraceConfigPtrOutput) ToApplicationTraceConfigPtrOutputWithContext(ctx context.Context) ApplicationTraceConfigPtrOutput {
	return o
}

func (o ApplicationTraceConfigPtrOutput) Elem() ApplicationTraceConfigOutput {
	return o.ApplyT(func(v *ApplicationTraceConfig) ApplicationTraceConfig {
		if v != nil {
			return *v
		}
		var ret ApplicationTraceConfig
		return ret
	}).(ApplicationTraceConfigOutput)
}

// (Updatable) The OCID of the collector (e.g. an APM Domain) trace events will be sent to.
func (o ApplicationTraceConfigPtrOutput) DomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationTraceConfig) *string {
		if v == nil {
			return nil
		}
		return v.DomainId
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Define if tracing is enabled for the resource.
func (o ApplicationTraceConfigPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationTraceConfig) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

type FunctionProvisionedConcurrencyConfig struct {
	// (Updatable)
	Count *int `pulumi:"count"`
	// (Updatable) The strategy for provisioned concurrency to be used.
	Strategy string `pulumi:"strategy"`
}

// FunctionProvisionedConcurrencyConfigInput is an input type that accepts FunctionProvisionedConcurrencyConfigArgs and FunctionProvisionedConcurrencyConfigOutput values.
// You can construct a concrete instance of `FunctionProvisionedConcurrencyConfigInput` via:
//
//	FunctionProvisionedConcurrencyConfigArgs{...}
type FunctionProvisionedConcurrencyConfigInput interface {
	pulumi.Input

	ToFunctionProvisionedConcurrencyConfigOutput() FunctionProvisionedConcurrencyConfigOutput
	ToFunctionProvisionedConcurrencyConfigOutputWithContext(context.Context) FunctionProvisionedConcurrencyConfigOutput
}

type FunctionProvisionedConcurrencyConfigArgs struct {
	// (Updatable)
	Count pulumi.IntPtrInput `pulumi:"count"`
	// (Updatable) The strategy for provisioned concurrency to be used.
	Strategy pulumi.StringInput `pulumi:"strategy"`
}

func (FunctionProvisionedConcurrencyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionProvisionedConcurrencyConfig)(nil)).Elem()
}

func (i FunctionProvisionedConcurrencyConfigArgs) ToFunctionProvisionedConcurrencyConfigOutput() FunctionProvisionedConcurrencyConfigOutput {
	return i.ToFunctionProvisionedConcurrencyConfigOutputWithContext(context.Background())
}

func (i FunctionProvisionedConcurrencyConfigArgs) ToFunctionProvisionedConcurrencyConfigOutputWithContext(ctx context.Context) FunctionProvisionedConcurrencyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionProvisionedConcurrencyConfigOutput)
}

func (i FunctionProvisionedConcurrencyConfigArgs) ToFunctionProvisionedConcurrencyConfigPtrOutput() FunctionProvisionedConcurrencyConfigPtrOutput {
	return i.ToFunctionProvisionedConcurrencyConfigPtrOutputWithContext(context.Background())
}

func (i FunctionProvisionedConcurrencyConfigArgs) ToFunctionProvisionedConcurrencyConfigPtrOutputWithContext(ctx context.Context) FunctionProvisionedConcurrencyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionProvisionedConcurrencyConfigOutput).ToFunctionProvisionedConcurrencyConfigPtrOutputWithContext(ctx)
}

// FunctionProvisionedConcurrencyConfigPtrInput is an input type that accepts FunctionProvisionedConcurrencyConfigArgs, FunctionProvisionedConcurrencyConfigPtr and FunctionProvisionedConcurrencyConfigPtrOutput values.
// You can construct a concrete instance of `FunctionProvisionedConcurrencyConfigPtrInput` via:
//
//	        FunctionProvisionedConcurrencyConfigArgs{...}
//
//	or:
//
//	        nil
type FunctionProvisionedConcurrencyConfigPtrInput interface {
	pulumi.Input

	ToFunctionProvisionedConcurrencyConfigPtrOutput() FunctionProvisionedConcurrencyConfigPtrOutput
	ToFunctionProvisionedConcurrencyConfigPtrOutputWithContext(context.Context) FunctionProvisionedConcurrencyConfigPtrOutput
}

type functionProvisionedConcurrencyConfigPtrType FunctionProvisionedConcurrencyConfigArgs

func FunctionProvisionedConcurrencyConfigPtr(v *FunctionProvisionedConcurrencyConfigArgs) FunctionProvisionedConcurrencyConfigPtrInput {
	return (*functionProvisionedConcurrencyConfigPtrType)(v)
}

func (*functionProvisionedConcurrencyConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionProvisionedConcurrencyConfig)(nil)).Elem()
}

func (i *functionProvisionedConcurrencyConfigPtrType) ToFunctionProvisionedConcurrencyConfigPtrOutput() FunctionProvisionedConcurrencyConfigPtrOutput {
	return i.ToFunctionProvisionedConcurrencyConfigPtrOutputWithContext(context.Background())
}

func (i *functionProvisionedConcurrencyConfigPtrType) ToFunctionProvisionedConcurrencyConfigPtrOutputWithContext(ctx context.Context) FunctionProvisionedConcurrencyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionProvisionedConcurrencyConfigPtrOutput)
}

type FunctionProvisionedConcurrencyConfigOutput struct{ *pulumi.OutputState }

func (FunctionProvisionedConcurrencyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionProvisionedConcurrencyConfig)(nil)).Elem()
}

func (o FunctionProvisionedConcurrencyConfigOutput) ToFunctionProvisionedConcurrencyConfigOutput() FunctionProvisionedConcurrencyConfigOutput {
	return o
}

func (o FunctionProvisionedConcurrencyConfigOutput) ToFunctionProvisionedConcurrencyConfigOutputWithContext(ctx context.Context) FunctionProvisionedConcurrencyConfigOutput {
	return o
}

func (o FunctionProvisionedConcurrencyConfigOutput) ToFunctionProvisionedConcurrencyConfigPtrOutput() FunctionProvisionedConcurrencyConfigPtrOutput {
	return o.ToFunctionProvisionedConcurrencyConfigPtrOutputWithContext(context.Background())
}

func (o FunctionProvisionedConcurrencyConfigOutput) ToFunctionProvisionedConcurrencyConfigPtrOutputWithContext(ctx context.Context) FunctionProvisionedConcurrencyConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionProvisionedConcurrencyConfig) *FunctionProvisionedConcurrencyConfig {
		return &v
	}).(FunctionProvisionedConcurrencyConfigPtrOutput)
}

// (Updatable)
func (o FunctionProvisionedConcurrencyConfigOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FunctionProvisionedConcurrencyConfig) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// (Updatable) The strategy for provisioned concurrency to be used.
func (o FunctionProvisionedConcurrencyConfigOutput) Strategy() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionProvisionedConcurrencyConfig) string { return v.Strategy }).(pulumi.StringOutput)
}

type FunctionProvisionedConcurrencyConfigPtrOutput struct{ *pulumi.OutputState }

func (FunctionProvisionedConcurrencyConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionProvisionedConcurrencyConfig)(nil)).Elem()
}

func (o FunctionProvisionedConcurrencyConfigPtrOutput) ToFunctionProvisionedConcurrencyConfigPtrOutput() FunctionProvisionedConcurrencyConfigPtrOutput {
	return o
}

func (o FunctionProvisionedConcurrencyConfigPtrOutput) ToFunctionProvisionedConcurrencyConfigPtrOutputWithContext(ctx context.Context) FunctionProvisionedConcurrencyConfigPtrOutput {
	return o
}

func (o FunctionProvisionedConcurrencyConfigPtrOutput) Elem() FunctionProvisionedConcurrencyConfigOutput {
	return o.ApplyT(func(v *FunctionProvisionedConcurrencyConfig) FunctionProvisionedConcurrencyConfig {
		if v != nil {
			return *v
		}
		var ret FunctionProvisionedConcurrencyConfig
		return ret
	}).(FunctionProvisionedConcurrencyConfigOutput)
}

// (Updatable)
func (o FunctionProvisionedConcurrencyConfigPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FunctionProvisionedConcurrencyConfig) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// (Updatable) The strategy for provisioned concurrency to be used.
func (o FunctionProvisionedConcurrencyConfigPtrOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionProvisionedConcurrencyConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Strategy
	}).(pulumi.StringPtrOutput)
}

type FunctionTraceConfig struct {
	// (Updatable) Define if tracing is enabled for the resource.
	IsEnabled *bool `pulumi:"isEnabled"`
}

// FunctionTraceConfigInput is an input type that accepts FunctionTraceConfigArgs and FunctionTraceConfigOutput values.
// You can construct a concrete instance of `FunctionTraceConfigInput` via:
//
//	FunctionTraceConfigArgs{...}
type FunctionTraceConfigInput interface {
	pulumi.Input

	ToFunctionTraceConfigOutput() FunctionTraceConfigOutput
	ToFunctionTraceConfigOutputWithContext(context.Context) FunctionTraceConfigOutput
}

type FunctionTraceConfigArgs struct {
	// (Updatable) Define if tracing is enabled for the resource.
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
}

func (FunctionTraceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionTraceConfig)(nil)).Elem()
}

func (i FunctionTraceConfigArgs) ToFunctionTraceConfigOutput() FunctionTraceConfigOutput {
	return i.ToFunctionTraceConfigOutputWithContext(context.Background())
}

func (i FunctionTraceConfigArgs) ToFunctionTraceConfigOutputWithContext(ctx context.Context) FunctionTraceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTraceConfigOutput)
}

func (i FunctionTraceConfigArgs) ToFunctionTraceConfigPtrOutput() FunctionTraceConfigPtrOutput {
	return i.ToFunctionTraceConfigPtrOutputWithContext(context.Background())
}

func (i FunctionTraceConfigArgs) ToFunctionTraceConfigPtrOutputWithContext(ctx context.Context) FunctionTraceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTraceConfigOutput).ToFunctionTraceConfigPtrOutputWithContext(ctx)
}

// FunctionTraceConfigPtrInput is an input type that accepts FunctionTraceConfigArgs, FunctionTraceConfigPtr and FunctionTraceConfigPtrOutput values.
// You can construct a concrete instance of `FunctionTraceConfigPtrInput` via:
//
//	        FunctionTraceConfigArgs{...}
//
//	or:
//
//	        nil
type FunctionTraceConfigPtrInput interface {
	pulumi.Input

	ToFunctionTraceConfigPtrOutput() FunctionTraceConfigPtrOutput
	ToFunctionTraceConfigPtrOutputWithContext(context.Context) FunctionTraceConfigPtrOutput
}

type functionTraceConfigPtrType FunctionTraceConfigArgs

func FunctionTraceConfigPtr(v *FunctionTraceConfigArgs) FunctionTraceConfigPtrInput {
	return (*functionTraceConfigPtrType)(v)
}

func (*functionTraceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionTraceConfig)(nil)).Elem()
}

func (i *functionTraceConfigPtrType) ToFunctionTraceConfigPtrOutput() FunctionTraceConfigPtrOutput {
	return i.ToFunctionTraceConfigPtrOutputWithContext(context.Background())
}

func (i *functionTraceConfigPtrType) ToFunctionTraceConfigPtrOutputWithContext(ctx context.Context) FunctionTraceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTraceConfigPtrOutput)
}

type FunctionTraceConfigOutput struct{ *pulumi.OutputState }

func (FunctionTraceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionTraceConfig)(nil)).Elem()
}

func (o FunctionTraceConfigOutput) ToFunctionTraceConfigOutput() FunctionTraceConfigOutput {
	return o
}

func (o FunctionTraceConfigOutput) ToFunctionTraceConfigOutputWithContext(ctx context.Context) FunctionTraceConfigOutput {
	return o
}

func (o FunctionTraceConfigOutput) ToFunctionTraceConfigPtrOutput() FunctionTraceConfigPtrOutput {
	return o.ToFunctionTraceConfigPtrOutputWithContext(context.Background())
}

func (o FunctionTraceConfigOutput) ToFunctionTraceConfigPtrOutputWithContext(ctx context.Context) FunctionTraceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionTraceConfig) *FunctionTraceConfig {
		return &v
	}).(FunctionTraceConfigPtrOutput)
}

// (Updatable) Define if tracing is enabled for the resource.
func (o FunctionTraceConfigOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FunctionTraceConfig) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

type FunctionTraceConfigPtrOutput struct{ *pulumi.OutputState }

func (FunctionTraceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionTraceConfig)(nil)).Elem()
}

func (o FunctionTraceConfigPtrOutput) ToFunctionTraceConfigPtrOutput() FunctionTraceConfigPtrOutput {
	return o
}

func (o FunctionTraceConfigPtrOutput) ToFunctionTraceConfigPtrOutputWithContext(ctx context.Context) FunctionTraceConfigPtrOutput {
	return o
}

func (o FunctionTraceConfigPtrOutput) Elem() FunctionTraceConfigOutput {
	return o.ApplyT(func(v *FunctionTraceConfig) FunctionTraceConfig {
		if v != nil {
			return *v
		}
		var ret FunctionTraceConfig
		return ret
	}).(FunctionTraceConfigOutput)
}

// (Updatable) Define if tracing is enabled for the resource.
func (o FunctionTraceConfigPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionTraceConfig) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

type GetApplicationImagePolicyConfig struct {
	// Define if image signature verification policy is enabled for the application.
	IsPolicyEnabled bool `pulumi:"isPolicyEnabled"`
	// A list of KMS key details.
	KeyDetails []GetApplicationImagePolicyConfigKeyDetail `pulumi:"keyDetails"`
}

// GetApplicationImagePolicyConfigInput is an input type that accepts GetApplicationImagePolicyConfigArgs and GetApplicationImagePolicyConfigOutput values.
// You can construct a concrete instance of `GetApplicationImagePolicyConfigInput` via:
//
//	GetApplicationImagePolicyConfigArgs{...}
type GetApplicationImagePolicyConfigInput interface {
	pulumi.Input

	ToGetApplicationImagePolicyConfigOutput() GetApplicationImagePolicyConfigOutput
	ToGetApplicationImagePolicyConfigOutputWithContext(context.Context) GetApplicationImagePolicyConfigOutput
}

type GetApplicationImagePolicyConfigArgs struct {
	// Define if image signature verification policy is enabled for the application.
	IsPolicyEnabled pulumi.BoolInput `pulumi:"isPolicyEnabled"`
	// A list of KMS key details.
	KeyDetails GetApplicationImagePolicyConfigKeyDetailArrayInput `pulumi:"keyDetails"`
}

func (GetApplicationImagePolicyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationImagePolicyConfig)(nil)).Elem()
}

func (i GetApplicationImagePolicyConfigArgs) ToGetApplicationImagePolicyConfigOutput() GetApplicationImagePolicyConfigOutput {
	return i.ToGetApplicationImagePolicyConfigOutputWithContext(context.Background())
}

func (i GetApplicationImagePolicyConfigArgs) ToGetApplicationImagePolicyConfigOutputWithContext(ctx context.Context) GetApplicationImagePolicyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationImagePolicyConfigOutput)
}

// GetApplicationImagePolicyConfigArrayInput is an input type that accepts GetApplicationImagePolicyConfigArray and GetApplicationImagePolicyConfigArrayOutput values.
// You can construct a concrete instance of `GetApplicationImagePolicyConfigArrayInput` via:
//
//	GetApplicationImagePolicyConfigArray{ GetApplicationImagePolicyConfigArgs{...} }
type GetApplicationImagePolicyConfigArrayInput interface {
	pulumi.Input

	ToGetApplicationImagePolicyConfigArrayOutput() GetApplicationImagePolicyConfigArrayOutput
	ToGetApplicationImagePolicyConfigArrayOutputWithContext(context.Context) GetApplicationImagePolicyConfigArrayOutput
}

type GetApplicationImagePolicyConfigArray []GetApplicationImagePolicyConfigInput

func (GetApplicationImagePolicyConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationImagePolicyConfig)(nil)).Elem()
}

func (i GetApplicationImagePolicyConfigArray) ToGetApplicationImagePolicyConfigArrayOutput() GetApplicationImagePolicyConfigArrayOutput {
	return i.ToGetApplicationImagePolicyConfigArrayOutputWithContext(context.Background())
}

func (i GetApplicationImagePolicyConfigArray) ToGetApplicationImagePolicyConfigArrayOutputWithContext(ctx context.Context) GetApplicationImagePolicyConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationImagePolicyConfigArrayOutput)
}

type GetApplicationImagePolicyConfigOutput struct{ *pulumi.OutputState }

func (GetApplicationImagePolicyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationImagePolicyConfig)(nil)).Elem()
}

func (o GetApplicationImagePolicyConfigOutput) ToGetApplicationImagePolicyConfigOutput() GetApplicationImagePolicyConfigOutput {
	return o
}

func (o GetApplicationImagePolicyConfigOutput) ToGetApplicationImagePolicyConfigOutputWithContext(ctx context.Context) GetApplicationImagePolicyConfigOutput {
	return o
}

// Define if image signature verification policy is enabled for the application.
func (o GetApplicationImagePolicyConfigOutput) IsPolicyEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationImagePolicyConfig) bool { return v.IsPolicyEnabled }).(pulumi.BoolOutput)
}

// A list of KMS key details.
func (o GetApplicationImagePolicyConfigOutput) KeyDetails() GetApplicationImagePolicyConfigKeyDetailArrayOutput {
	return o.ApplyT(func(v GetApplicationImagePolicyConfig) []GetApplicationImagePolicyConfigKeyDetail {
		return v.KeyDetails
	}).(GetApplicationImagePolicyConfigKeyDetailArrayOutput)
}

type GetApplicationImagePolicyConfigArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationImagePolicyConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationImagePolicyConfig)(nil)).Elem()
}

func (o GetApplicationImagePolicyConfigArrayOutput) ToGetApplicationImagePolicyConfigArrayOutput() GetApplicationImagePolicyConfigArrayOutput {
	return o
}

func (o GetApplicationImagePolicyConfigArrayOutput) ToGetApplicationImagePolicyConfigArrayOutputWithContext(ctx context.Context) GetApplicationImagePolicyConfigArrayOutput {
	return o
}

func (o GetApplicationImagePolicyConfigArrayOutput) Index(i pulumi.IntInput) GetApplicationImagePolicyConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationImagePolicyConfig {
		return vs[0].([]GetApplicationImagePolicyConfig)[vs[1].(int)]
	}).(GetApplicationImagePolicyConfigOutput)
}

type GetApplicationImagePolicyConfigKeyDetail struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of the KMS key that will be used to verify the image signature.
	KmsKeyId string `pulumi:"kmsKeyId"`
}

// GetApplicationImagePolicyConfigKeyDetailInput is an input type that accepts GetApplicationImagePolicyConfigKeyDetailArgs and GetApplicationImagePolicyConfigKeyDetailOutput values.
// You can construct a concrete instance of `GetApplicationImagePolicyConfigKeyDetailInput` via:
//
//	GetApplicationImagePolicyConfigKeyDetailArgs{...}
type GetApplicationImagePolicyConfigKeyDetailInput interface {
	pulumi.Input

	ToGetApplicationImagePolicyConfigKeyDetailOutput() GetApplicationImagePolicyConfigKeyDetailOutput
	ToGetApplicationImagePolicyConfigKeyDetailOutputWithContext(context.Context) GetApplicationImagePolicyConfigKeyDetailOutput
}

type GetApplicationImagePolicyConfigKeyDetailArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of the KMS key that will be used to verify the image signature.
	KmsKeyId pulumi.StringInput `pulumi:"kmsKeyId"`
}

func (GetApplicationImagePolicyConfigKeyDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationImagePolicyConfigKeyDetail)(nil)).Elem()
}

func (i GetApplicationImagePolicyConfigKeyDetailArgs) ToGetApplicationImagePolicyConfigKeyDetailOutput() GetApplicationImagePolicyConfigKeyDetailOutput {
	return i.ToGetApplicationImagePolicyConfigKeyDetailOutputWithContext(context.Background())
}

func (i GetApplicationImagePolicyConfigKeyDetailArgs) ToGetApplicationImagePolicyConfigKeyDetailOutputWithContext(ctx context.Context) GetApplicationImagePolicyConfigKeyDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationImagePolicyConfigKeyDetailOutput)
}

// GetApplicationImagePolicyConfigKeyDetailArrayInput is an input type that accepts GetApplicationImagePolicyConfigKeyDetailArray and GetApplicationImagePolicyConfigKeyDetailArrayOutput values.
// You can construct a concrete instance of `GetApplicationImagePolicyConfigKeyDetailArrayInput` via:
//
//	GetApplicationImagePolicyConfigKeyDetailArray{ GetApplicationImagePolicyConfigKeyDetailArgs{...} }
type GetApplicationImagePolicyConfigKeyDetailArrayInput interface {
	pulumi.Input

	ToGetApplicationImagePolicyConfigKeyDetailArrayOutput() GetApplicationImagePolicyConfigKeyDetailArrayOutput
	ToGetApplicationImagePolicyConfigKeyDetailArrayOutputWithContext(context.Context) GetApplicationImagePolicyConfigKeyDetailArrayOutput
}

type GetApplicationImagePolicyConfigKeyDetailArray []GetApplicationImagePolicyConfigKeyDetailInput

func (GetApplicationImagePolicyConfigKeyDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationImagePolicyConfigKeyDetail)(nil)).Elem()
}

func (i GetApplicationImagePolicyConfigKeyDetailArray) ToGetApplicationImagePolicyConfigKeyDetailArrayOutput() GetApplicationImagePolicyConfigKeyDetailArrayOutput {
	return i.ToGetApplicationImagePolicyConfigKeyDetailArrayOutputWithContext(context.Background())
}

func (i GetApplicationImagePolicyConfigKeyDetailArray) ToGetApplicationImagePolicyConfigKeyDetailArrayOutputWithContext(ctx context.Context) GetApplicationImagePolicyConfigKeyDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationImagePolicyConfigKeyDetailArrayOutput)
}

type GetApplicationImagePolicyConfigKeyDetailOutput struct{ *pulumi.OutputState }

func (GetApplicationImagePolicyConfigKeyDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationImagePolicyConfigKeyDetail)(nil)).Elem()
}

func (o GetApplicationImagePolicyConfigKeyDetailOutput) ToGetApplicationImagePolicyConfigKeyDetailOutput() GetApplicationImagePolicyConfigKeyDetailOutput {
	return o
}

func (o GetApplicationImagePolicyConfigKeyDetailOutput) ToGetApplicationImagePolicyConfigKeyDetailOutputWithContext(ctx context.Context) GetApplicationImagePolicyConfigKeyDetailOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of the KMS key that will be used to verify the image signature.
func (o GetApplicationImagePolicyConfigKeyDetailOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationImagePolicyConfigKeyDetail) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

type GetApplicationImagePolicyConfigKeyDetailArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationImagePolicyConfigKeyDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationImagePolicyConfigKeyDetail)(nil)).Elem()
}

func (o GetApplicationImagePolicyConfigKeyDetailArrayOutput) ToGetApplicationImagePolicyConfigKeyDetailArrayOutput() GetApplicationImagePolicyConfigKeyDetailArrayOutput {
	return o
}

func (o GetApplicationImagePolicyConfigKeyDetailArrayOutput) ToGetApplicationImagePolicyConfigKeyDetailArrayOutputWithContext(ctx context.Context) GetApplicationImagePolicyConfigKeyDetailArrayOutput {
	return o
}

func (o GetApplicationImagePolicyConfigKeyDetailArrayOutput) Index(i pulumi.IntInput) GetApplicationImagePolicyConfigKeyDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationImagePolicyConfigKeyDetail {
		return vs[0].([]GetApplicationImagePolicyConfigKeyDetail)[vs[1].(int)]
	}).(GetApplicationImagePolicyConfigKeyDetailOutput)
}

type GetApplicationTraceConfig struct {
	// The OCID of the collector (e.g. an APM Domain) trace events will be sent to.
	DomainId string `pulumi:"domainId"`
	// Define if tracing is enabled for the resource.
	IsEnabled bool `pulumi:"isEnabled"`
}

// GetApplicationTraceConfigInput is an input type that accepts GetApplicationTraceConfigArgs and GetApplicationTraceConfigOutput values.
// You can construct a concrete instance of `GetApplicationTraceConfigInput` via:
//
//	GetApplicationTraceConfigArgs{...}
type GetApplicationTraceConfigInput interface {
	pulumi.Input

	ToGetApplicationTraceConfigOutput() GetApplicationTraceConfigOutput
	ToGetApplicationTraceConfigOutputWithContext(context.Context) GetApplicationTraceConfigOutput
}

type GetApplicationTraceConfigArgs struct {
	// The OCID of the collector (e.g. an APM Domain) trace events will be sent to.
	DomainId pulumi.StringInput `pulumi:"domainId"`
	// Define if tracing is enabled for the resource.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
}

func (GetApplicationTraceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationTraceConfig)(nil)).Elem()
}

func (i GetApplicationTraceConfigArgs) ToGetApplicationTraceConfigOutput() GetApplicationTraceConfigOutput {
	return i.ToGetApplicationTraceConfigOutputWithContext(context.Background())
}

func (i GetApplicationTraceConfigArgs) ToGetApplicationTraceConfigOutputWithContext(ctx context.Context) GetApplicationTraceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationTraceConfigOutput)
}

// GetApplicationTraceConfigArrayInput is an input type that accepts GetApplicationTraceConfigArray and GetApplicationTraceConfigArrayOutput values.
// You can construct a concrete instance of `GetApplicationTraceConfigArrayInput` via:
//
//	GetApplicationTraceConfigArray{ GetApplicationTraceConfigArgs{...} }
type GetApplicationTraceConfigArrayInput interface {
	pulumi.Input

	ToGetApplicationTraceConfigArrayOutput() GetApplicationTraceConfigArrayOutput
	ToGetApplicationTraceConfigArrayOutputWithContext(context.Context) GetApplicationTraceConfigArrayOutput
}

type GetApplicationTraceConfigArray []GetApplicationTraceConfigInput

func (GetApplicationTraceConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationTraceConfig)(nil)).Elem()
}

func (i GetApplicationTraceConfigArray) ToGetApplicationTraceConfigArrayOutput() GetApplicationTraceConfigArrayOutput {
	return i.ToGetApplicationTraceConfigArrayOutputWithContext(context.Background())
}

func (i GetApplicationTraceConfigArray) ToGetApplicationTraceConfigArrayOutputWithContext(ctx context.Context) GetApplicationTraceConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationTraceConfigArrayOutput)
}

type GetApplicationTraceConfigOutput struct{ *pulumi.OutputState }

func (GetApplicationTraceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationTraceConfig)(nil)).Elem()
}

func (o GetApplicationTraceConfigOutput) ToGetApplicationTraceConfigOutput() GetApplicationTraceConfigOutput {
	return o
}

func (o GetApplicationTraceConfigOutput) ToGetApplicationTraceConfigOutputWithContext(ctx context.Context) GetApplicationTraceConfigOutput {
	return o
}

// The OCID of the collector (e.g. an APM Domain) trace events will be sent to.
func (o GetApplicationTraceConfigOutput) DomainId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationTraceConfig) string { return v.DomainId }).(pulumi.StringOutput)
}

// Define if tracing is enabled for the resource.
func (o GetApplicationTraceConfigOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationTraceConfig) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

type GetApplicationTraceConfigArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationTraceConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationTraceConfig)(nil)).Elem()
}

func (o GetApplicationTraceConfigArrayOutput) ToGetApplicationTraceConfigArrayOutput() GetApplicationTraceConfigArrayOutput {
	return o
}

func (o GetApplicationTraceConfigArrayOutput) ToGetApplicationTraceConfigArrayOutputWithContext(ctx context.Context) GetApplicationTraceConfigArrayOutput {
	return o
}

func (o GetApplicationTraceConfigArrayOutput) Index(i pulumi.IntInput) GetApplicationTraceConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationTraceConfig {
		return vs[0].([]GetApplicationTraceConfig)[vs[1].(int)]
	}).(GetApplicationTraceConfigOutput)
}

type GetApplicationsApplication struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to which this resource belongs.
	CompartmentId string `pulumi:"compartmentId"`
	// Application configuration for functions in this application (passed as environment variables). Can be overridden by function configuration. Keys must be ASCII strings consisting solely of letters, digits, and the '_' (underscore) character, and must not begin with a digit. Values should be limited to printable unicode characters.  Example: `{"MY_FUNCTION_CONFIG": "ConfVal"}`
	Config map[string]interface{} `pulumi:"config"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A filter to return only applications with display names that match the display name string. Matching is exact.
	DisplayName string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A filter to return only applications with the specified OCID.
	Id string `pulumi:"id"`
	// Define the image signature verification policy for an application.
	ImagePolicyConfigs []GetApplicationsApplicationImagePolicyConfig `pulumi:"imagePolicyConfigs"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of the Network Security Groups to add the application to.
	NetworkSecurityGroupIds []string `pulumi:"networkSecurityGroupIds"`
	// A filter to return only applications that match the lifecycle state in this parameter. Example: `Creating`
	State string `pulumi:"state"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of the subnets in which to run functions in the application.
	SubnetIds []string `pulumi:"subnetIds"`
	// A syslog URL to which to send all function logs. Supports tcp, udp, and tcp+tls. The syslog URL must be reachable from all of the subnets configured for the application. Note: If you enable the Oracle Cloud Infrastructure Logging service for this application, the syslogUrl value is ignored. Function logs are sent to the Oracle Cloud Infrastructure Logging service, and not to the syslog URL.  Example: `tcp://logserver.myserver:1234`
	SyslogUrl string `pulumi:"syslogUrl"`
	// The time the application was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-09-12T22:47:12.613Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The time the application was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-09-12T22:47:12.613Z`
	TimeUpdated string `pulumi:"timeUpdated"`
	// Define the tracing configuration for an application.
	TraceConfigs []GetApplicationsApplicationTraceConfig `pulumi:"traceConfigs"`
}

// GetApplicationsApplicationInput is an input type that accepts GetApplicationsApplicationArgs and GetApplicationsApplicationOutput values.
// You can construct a concrete instance of `GetApplicationsApplicationInput` via:
//
//	GetApplicationsApplicationArgs{...}
type GetApplicationsApplicationInput interface {
	pulumi.Input

	ToGetApplicationsApplicationOutput() GetApplicationsApplicationOutput
	ToGetApplicationsApplicationOutputWithContext(context.Context) GetApplicationsApplicationOutput
}

type GetApplicationsApplicationArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to which this resource belongs.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Application configuration for functions in this application (passed as environment variables). Can be overridden by function configuration. Keys must be ASCII strings consisting solely of letters, digits, and the '_' (underscore) character, and must not begin with a digit. Values should be limited to printable unicode characters.  Example: `{"MY_FUNCTION_CONFIG": "ConfVal"}`
	Config pulumi.MapInput `pulumi:"config"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// A filter to return only applications with display names that match the display name string. Matching is exact.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// A filter to return only applications with the specified OCID.
	Id pulumi.StringInput `pulumi:"id"`
	// Define the image signature verification policy for an application.
	ImagePolicyConfigs GetApplicationsApplicationImagePolicyConfigArrayInput `pulumi:"imagePolicyConfigs"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of the Network Security Groups to add the application to.
	NetworkSecurityGroupIds pulumi.StringArrayInput `pulumi:"networkSecurityGroupIds"`
	// A filter to return only applications that match the lifecycle state in this parameter. Example: `Creating`
	State pulumi.StringInput `pulumi:"state"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of the subnets in which to run functions in the application.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	// A syslog URL to which to send all function logs. Supports tcp, udp, and tcp+tls. The syslog URL must be reachable from all of the subnets configured for the application. Note: If you enable the Oracle Cloud Infrastructure Logging service for this application, the syslogUrl value is ignored. Function logs are sent to the Oracle Cloud Infrastructure Logging service, and not to the syslog URL.  Example: `tcp://logserver.myserver:1234`
	SyslogUrl pulumi.StringInput `pulumi:"syslogUrl"`
	// The time the application was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-09-12T22:47:12.613Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the application was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-09-12T22:47:12.613Z`
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// Define the tracing configuration for an application.
	TraceConfigs GetApplicationsApplicationTraceConfigArrayInput `pulumi:"traceConfigs"`
}

func (GetApplicationsApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationsApplication)(nil)).Elem()
}

func (i GetApplicationsApplicationArgs) ToGetApplicationsApplicationOutput() GetApplicationsApplicationOutput {
	return i.ToGetApplicationsApplicationOutputWithContext(context.Background())
}

func (i GetApplicationsApplicationArgs) ToGetApplicationsApplicationOutputWithContext(ctx context.Context) GetApplicationsApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationsApplicationOutput)
}

// GetApplicationsApplicationArrayInput is an input type that accepts GetApplicationsApplicationArray and GetApplicationsApplicationArrayOutput values.
// You can construct a concrete instance of `GetApplicationsApplicationArrayInput` via:
//
//	GetApplicationsApplicationArray{ GetApplicationsApplicationArgs{...} }
type GetApplicationsApplicationArrayInput interface {
	pulumi.Input

	ToGetApplicationsApplicationArrayOutput() GetApplicationsApplicationArrayOutput
	ToGetApplicationsApplicationArrayOutputWithContext(context.Context) GetApplicationsApplicationArrayOutput
}

type GetApplicationsApplicationArray []GetApplicationsApplicationInput

func (GetApplicationsApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationsApplication)(nil)).Elem()
}

func (i GetApplicationsApplicationArray) ToGetApplicationsApplicationArrayOutput() GetApplicationsApplicationArrayOutput {
	return i.ToGetApplicationsApplicationArrayOutputWithContext(context.Background())
}

func (i GetApplicationsApplicationArray) ToGetApplicationsApplicationArrayOutputWithContext(ctx context.Context) GetApplicationsApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationsApplicationArrayOutput)
}

type GetApplicationsApplicationOutput struct{ *pulumi.OutputState }

func (GetApplicationsApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationsApplication)(nil)).Elem()
}

func (o GetApplicationsApplicationOutput) ToGetApplicationsApplicationOutput() GetApplicationsApplicationOutput {
	return o
}

func (o GetApplicationsApplicationOutput) ToGetApplicationsApplicationOutputWithContext(ctx context.Context) GetApplicationsApplicationOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to which this resource belongs.
func (o GetApplicationsApplicationOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationsApplication) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Application configuration for functions in this application (passed as environment variables). Can be overridden by function configuration. Keys must be ASCII strings consisting solely of letters, digits, and the '_' (underscore) character, and must not begin with a digit. Values should be limited to printable unicode characters.  Example: `{"MY_FUNCTION_CONFIG": "ConfVal"}`
func (o GetApplicationsApplicationOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v GetApplicationsApplication) map[string]interface{} { return v.Config }).(pulumi.MapOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o GetApplicationsApplicationOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetApplicationsApplication) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// A filter to return only applications with display names that match the display name string. Matching is exact.
func (o GetApplicationsApplicationOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationsApplication) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o GetApplicationsApplicationOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetApplicationsApplication) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// A filter to return only applications with the specified OCID.
func (o GetApplicationsApplicationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationsApplication) string { return v.Id }).(pulumi.StringOutput)
}

// Define the image signature verification policy for an application.
func (o GetApplicationsApplicationOutput) ImagePolicyConfigs() GetApplicationsApplicationImagePolicyConfigArrayOutput {
	return o.ApplyT(func(v GetApplicationsApplication) []GetApplicationsApplicationImagePolicyConfig {
		return v.ImagePolicyConfigs
	}).(GetApplicationsApplicationImagePolicyConfigArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of the Network Security Groups to add the application to.
func (o GetApplicationsApplicationOutput) NetworkSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplicationsApplication) []string { return v.NetworkSecurityGroupIds }).(pulumi.StringArrayOutput)
}

// A filter to return only applications that match the lifecycle state in this parameter. Example: `Creating`
func (o GetApplicationsApplicationOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationsApplication) string { return v.State }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of the subnets in which to run functions in the application.
func (o GetApplicationsApplicationOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplicationsApplication) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// A syslog URL to which to send all function logs. Supports tcp, udp, and tcp+tls. The syslog URL must be reachable from all of the subnets configured for the application. Note: If you enable the Oracle Cloud Infrastructure Logging service for this application, the syslogUrl value is ignored. Function logs are sent to the Oracle Cloud Infrastructure Logging service, and not to the syslog URL.  Example: `tcp://logserver.myserver:1234`
func (o GetApplicationsApplicationOutput) SyslogUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationsApplication) string { return v.SyslogUrl }).(pulumi.StringOutput)
}

// The time the application was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-09-12T22:47:12.613Z`
func (o GetApplicationsApplicationOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationsApplication) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the application was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-09-12T22:47:12.613Z`
func (o GetApplicationsApplicationOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationsApplication) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Define the tracing configuration for an application.
func (o GetApplicationsApplicationOutput) TraceConfigs() GetApplicationsApplicationTraceConfigArrayOutput {
	return o.ApplyT(func(v GetApplicationsApplication) []GetApplicationsApplicationTraceConfig { return v.TraceConfigs }).(GetApplicationsApplicationTraceConfigArrayOutput)
}

type GetApplicationsApplicationArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationsApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationsApplication)(nil)).Elem()
}

func (o GetApplicationsApplicationArrayOutput) ToGetApplicationsApplicationArrayOutput() GetApplicationsApplicationArrayOutput {
	return o
}

func (o GetApplicationsApplicationArrayOutput) ToGetApplicationsApplicationArrayOutputWithContext(ctx context.Context) GetApplicationsApplicationArrayOutput {
	return o
}

func (o GetApplicationsApplicationArrayOutput) Index(i pulumi.IntInput) GetApplicationsApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationsApplication {
		return vs[0].([]GetApplicationsApplication)[vs[1].(int)]
	}).(GetApplicationsApplicationOutput)
}

type GetApplicationsApplicationImagePolicyConfig struct {
	// Define if image signature verification policy is enabled for the application.
	IsPolicyEnabled bool `pulumi:"isPolicyEnabled"`
	// A list of KMS key details.
	KeyDetails []GetApplicationsApplicationImagePolicyConfigKeyDetail `pulumi:"keyDetails"`
}

// GetApplicationsApplicationImagePolicyConfigInput is an input type that accepts GetApplicationsApplicationImagePolicyConfigArgs and GetApplicationsApplicationImagePolicyConfigOutput values.
// You can construct a concrete instance of `GetApplicationsApplicationImagePolicyConfigInput` via:
//
//	GetApplicationsApplicationImagePolicyConfigArgs{...}
type GetApplicationsApplicationImagePolicyConfigInput interface {
	pulumi.Input

	ToGetApplicationsApplicationImagePolicyConfigOutput() GetApplicationsApplicationImagePolicyConfigOutput
	ToGetApplicationsApplicationImagePolicyConfigOutputWithContext(context.Context) GetApplicationsApplicationImagePolicyConfigOutput
}

type GetApplicationsApplicationImagePolicyConfigArgs struct {
	// Define if image signature verification policy is enabled for the application.
	IsPolicyEnabled pulumi.BoolInput `pulumi:"isPolicyEnabled"`
	// A list of KMS key details.
	KeyDetails GetApplicationsApplicationImagePolicyConfigKeyDetailArrayInput `pulumi:"keyDetails"`
}

func (GetApplicationsApplicationImagePolicyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationsApplicationImagePolicyConfig)(nil)).Elem()
}

func (i GetApplicationsApplicationImagePolicyConfigArgs) ToGetApplicationsApplicationImagePolicyConfigOutput() GetApplicationsApplicationImagePolicyConfigOutput {
	return i.ToGetApplicationsApplicationImagePolicyConfigOutputWithContext(context.Background())
}

func (i GetApplicationsApplicationImagePolicyConfigArgs) ToGetApplicationsApplicationImagePolicyConfigOutputWithContext(ctx context.Context) GetApplicationsApplicationImagePolicyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationsApplicationImagePolicyConfigOutput)
}

// GetApplicationsApplicationImagePolicyConfigArrayInput is an input type that accepts GetApplicationsApplicationImagePolicyConfigArray and GetApplicationsApplicationImagePolicyConfigArrayOutput values.
// You can construct a concrete instance of `GetApplicationsApplicationImagePolicyConfigArrayInput` via:
//
//	GetApplicationsApplicationImagePolicyConfigArray{ GetApplicationsApplicationImagePolicyConfigArgs{...} }
type GetApplicationsApplicationImagePolicyConfigArrayInput interface {
	pulumi.Input

	ToGetApplicationsApplicationImagePolicyConfigArrayOutput() GetApplicationsApplicationImagePolicyConfigArrayOutput
	ToGetApplicationsApplicationImagePolicyConfigArrayOutputWithContext(context.Context) GetApplicationsApplicationImagePolicyConfigArrayOutput
}

type GetApplicationsApplicationImagePolicyConfigArray []GetApplicationsApplicationImagePolicyConfigInput

func (GetApplicationsApplicationImagePolicyConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationsApplicationImagePolicyConfig)(nil)).Elem()
}

func (i GetApplicationsApplicationImagePolicyConfigArray) ToGetApplicationsApplicationImagePolicyConfigArrayOutput() GetApplicationsApplicationImagePolicyConfigArrayOutput {
	return i.ToGetApplicationsApplicationImagePolicyConfigArrayOutputWithContext(context.Background())
}

func (i GetApplicationsApplicationImagePolicyConfigArray) ToGetApplicationsApplicationImagePolicyConfigArrayOutputWithContext(ctx context.Context) GetApplicationsApplicationImagePolicyConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationsApplicationImagePolicyConfigArrayOutput)
}

type GetApplicationsApplicationImagePolicyConfigOutput struct{ *pulumi.OutputState }

func (GetApplicationsApplicationImagePolicyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationsApplicationImagePolicyConfig)(nil)).Elem()
}

func (o GetApplicationsApplicationImagePolicyConfigOutput) ToGetApplicationsApplicationImagePolicyConfigOutput() GetApplicationsApplicationImagePolicyConfigOutput {
	return o
}

func (o GetApplicationsApplicationImagePolicyConfigOutput) ToGetApplicationsApplicationImagePolicyConfigOutputWithContext(ctx context.Context) GetApplicationsApplicationImagePolicyConfigOutput {
	return o
}

// Define if image signature verification policy is enabled for the application.
func (o GetApplicationsApplicationImagePolicyConfigOutput) IsPolicyEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationsApplicationImagePolicyConfig) bool { return v.IsPolicyEnabled }).(pulumi.BoolOutput)
}

// A list of KMS key details.
func (o GetApplicationsApplicationImagePolicyConfigOutput) KeyDetails() GetApplicationsApplicationImagePolicyConfigKeyDetailArrayOutput {
	return o.ApplyT(func(v GetApplicationsApplicationImagePolicyConfig) []GetApplicationsApplicationImagePolicyConfigKeyDetail {
		return v.KeyDetails
	}).(GetApplicationsApplicationImagePolicyConfigKeyDetailArrayOutput)
}

type GetApplicationsApplicationImagePolicyConfigArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationsApplicationImagePolicyConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationsApplicationImagePolicyConfig)(nil)).Elem()
}

func (o GetApplicationsApplicationImagePolicyConfigArrayOutput) ToGetApplicationsApplicationImagePolicyConfigArrayOutput() GetApplicationsApplicationImagePolicyConfigArrayOutput {
	return o
}

func (o GetApplicationsApplicationImagePolicyConfigArrayOutput) ToGetApplicationsApplicationImagePolicyConfigArrayOutputWithContext(ctx context.Context) GetApplicationsApplicationImagePolicyConfigArrayOutput {
	return o
}

func (o GetApplicationsApplicationImagePolicyConfigArrayOutput) Index(i pulumi.IntInput) GetApplicationsApplicationImagePolicyConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationsApplicationImagePolicyConfig {
		return vs[0].([]GetApplicationsApplicationImagePolicyConfig)[vs[1].(int)]
	}).(GetApplicationsApplicationImagePolicyConfigOutput)
}

type GetApplicationsApplicationImagePolicyConfigKeyDetail struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of the KMS key that will be used to verify the image signature.
	KmsKeyId string `pulumi:"kmsKeyId"`
}

// GetApplicationsApplicationImagePolicyConfigKeyDetailInput is an input type that accepts GetApplicationsApplicationImagePolicyConfigKeyDetailArgs and GetApplicationsApplicationImagePolicyConfigKeyDetailOutput values.
// You can construct a concrete instance of `GetApplicationsApplicationImagePolicyConfigKeyDetailInput` via:
//
//	GetApplicationsApplicationImagePolicyConfigKeyDetailArgs{...}
type GetApplicationsApplicationImagePolicyConfigKeyDetailInput interface {
	pulumi.Input

	ToGetApplicationsApplicationImagePolicyConfigKeyDetailOutput() GetApplicationsApplicationImagePolicyConfigKeyDetailOutput
	ToGetApplicationsApplicationImagePolicyConfigKeyDetailOutputWithContext(context.Context) GetApplicationsApplicationImagePolicyConfigKeyDetailOutput
}

type GetApplicationsApplicationImagePolicyConfigKeyDetailArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of the KMS key that will be used to verify the image signature.
	KmsKeyId pulumi.StringInput `pulumi:"kmsKeyId"`
}

func (GetApplicationsApplicationImagePolicyConfigKeyDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationsApplicationImagePolicyConfigKeyDetail)(nil)).Elem()
}

func (i GetApplicationsApplicationImagePolicyConfigKeyDetailArgs) ToGetApplicationsApplicationImagePolicyConfigKeyDetailOutput() GetApplicationsApplicationImagePolicyConfigKeyDetailOutput {
	return i.ToGetApplicationsApplicationImagePolicyConfigKeyDetailOutputWithContext(context.Background())
}

func (i GetApplicationsApplicationImagePolicyConfigKeyDetailArgs) ToGetApplicationsApplicationImagePolicyConfigKeyDetailOutputWithContext(ctx context.Context) GetApplicationsApplicationImagePolicyConfigKeyDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationsApplicationImagePolicyConfigKeyDetailOutput)
}

// GetApplicationsApplicationImagePolicyConfigKeyDetailArrayInput is an input type that accepts GetApplicationsApplicationImagePolicyConfigKeyDetailArray and GetApplicationsApplicationImagePolicyConfigKeyDetailArrayOutput values.
// You can construct a concrete instance of `GetApplicationsApplicationImagePolicyConfigKeyDetailArrayInput` via:
//
//	GetApplicationsApplicationImagePolicyConfigKeyDetailArray{ GetApplicationsApplicationImagePolicyConfigKeyDetailArgs{...} }
type GetApplicationsApplicationImagePolicyConfigKeyDetailArrayInput interface {
	pulumi.Input

	ToGetApplicationsApplicationImagePolicyConfigKeyDetailArrayOutput() GetApplicationsApplicationImagePolicyConfigKeyDetailArrayOutput
	ToGetApplicationsApplicationImagePolicyConfigKeyDetailArrayOutputWithContext(context.Context) GetApplicationsApplicationImagePolicyConfigKeyDetailArrayOutput
}

type GetApplicationsApplicationImagePolicyConfigKeyDetailArray []GetApplicationsApplicationImagePolicyConfigKeyDetailInput

func (GetApplicationsApplicationImagePolicyConfigKeyDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationsApplicationImagePolicyConfigKeyDetail)(nil)).Elem()
}

func (i GetApplicationsApplicationImagePolicyConfigKeyDetailArray) ToGetApplicationsApplicationImagePolicyConfigKeyDetailArrayOutput() GetApplicationsApplicationImagePolicyConfigKeyDetailArrayOutput {
	return i.ToGetApplicationsApplicationImagePolicyConfigKeyDetailArrayOutputWithContext(context.Background())
}

func (i GetApplicationsApplicationImagePolicyConfigKeyDetailArray) ToGetApplicationsApplicationImagePolicyConfigKeyDetailArrayOutputWithContext(ctx context.Context) GetApplicationsApplicationImagePolicyConfigKeyDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationsApplicationImagePolicyConfigKeyDetailArrayOutput)
}

type GetApplicationsApplicationImagePolicyConfigKeyDetailOutput struct{ *pulumi.OutputState }

func (GetApplicationsApplicationImagePolicyConfigKeyDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationsApplicationImagePolicyConfigKeyDetail)(nil)).Elem()
}

func (o GetApplicationsApplicationImagePolicyConfigKeyDetailOutput) ToGetApplicationsApplicationImagePolicyConfigKeyDetailOutput() GetApplicationsApplicationImagePolicyConfigKeyDetailOutput {
	return o
}

func (o GetApplicationsApplicationImagePolicyConfigKeyDetailOutput) ToGetApplicationsApplicationImagePolicyConfigKeyDetailOutputWithContext(ctx context.Context) GetApplicationsApplicationImagePolicyConfigKeyDetailOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of the KMS key that will be used to verify the image signature.
func (o GetApplicationsApplicationImagePolicyConfigKeyDetailOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationsApplicationImagePolicyConfigKeyDetail) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

type GetApplicationsApplicationImagePolicyConfigKeyDetailArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationsApplicationImagePolicyConfigKeyDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationsApplicationImagePolicyConfigKeyDetail)(nil)).Elem()
}

func (o GetApplicationsApplicationImagePolicyConfigKeyDetailArrayOutput) ToGetApplicationsApplicationImagePolicyConfigKeyDetailArrayOutput() GetApplicationsApplicationImagePolicyConfigKeyDetailArrayOutput {
	return o
}

func (o GetApplicationsApplicationImagePolicyConfigKeyDetailArrayOutput) ToGetApplicationsApplicationImagePolicyConfigKeyDetailArrayOutputWithContext(ctx context.Context) GetApplicationsApplicationImagePolicyConfigKeyDetailArrayOutput {
	return o
}

func (o GetApplicationsApplicationImagePolicyConfigKeyDetailArrayOutput) Index(i pulumi.IntInput) GetApplicationsApplicationImagePolicyConfigKeyDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationsApplicationImagePolicyConfigKeyDetail {
		return vs[0].([]GetApplicationsApplicationImagePolicyConfigKeyDetail)[vs[1].(int)]
	}).(GetApplicationsApplicationImagePolicyConfigKeyDetailOutput)
}

type GetApplicationsApplicationTraceConfig struct {
	// The OCID of the collector (e.g. an APM Domain) trace events will be sent to.
	DomainId string `pulumi:"domainId"`
	// Define if tracing is enabled for the resource.
	IsEnabled bool `pulumi:"isEnabled"`
}

// GetApplicationsApplicationTraceConfigInput is an input type that accepts GetApplicationsApplicationTraceConfigArgs and GetApplicationsApplicationTraceConfigOutput values.
// You can construct a concrete instance of `GetApplicationsApplicationTraceConfigInput` via:
//
//	GetApplicationsApplicationTraceConfigArgs{...}
type GetApplicationsApplicationTraceConfigInput interface {
	pulumi.Input

	ToGetApplicationsApplicationTraceConfigOutput() GetApplicationsApplicationTraceConfigOutput
	ToGetApplicationsApplicationTraceConfigOutputWithContext(context.Context) GetApplicationsApplicationTraceConfigOutput
}

type GetApplicationsApplicationTraceConfigArgs struct {
	// The OCID of the collector (e.g. an APM Domain) trace events will be sent to.
	DomainId pulumi.StringInput `pulumi:"domainId"`
	// Define if tracing is enabled for the resource.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
}

func (GetApplicationsApplicationTraceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationsApplicationTraceConfig)(nil)).Elem()
}

func (i GetApplicationsApplicationTraceConfigArgs) ToGetApplicationsApplicationTraceConfigOutput() GetApplicationsApplicationTraceConfigOutput {
	return i.ToGetApplicationsApplicationTraceConfigOutputWithContext(context.Background())
}

func (i GetApplicationsApplicationTraceConfigArgs) ToGetApplicationsApplicationTraceConfigOutputWithContext(ctx context.Context) GetApplicationsApplicationTraceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationsApplicationTraceConfigOutput)
}

// GetApplicationsApplicationTraceConfigArrayInput is an input type that accepts GetApplicationsApplicationTraceConfigArray and GetApplicationsApplicationTraceConfigArrayOutput values.
// You can construct a concrete instance of `GetApplicationsApplicationTraceConfigArrayInput` via:
//
//	GetApplicationsApplicationTraceConfigArray{ GetApplicationsApplicationTraceConfigArgs{...} }
type GetApplicationsApplicationTraceConfigArrayInput interface {
	pulumi.Input

	ToGetApplicationsApplicationTraceConfigArrayOutput() GetApplicationsApplicationTraceConfigArrayOutput
	ToGetApplicationsApplicationTraceConfigArrayOutputWithContext(context.Context) GetApplicationsApplicationTraceConfigArrayOutput
}

type GetApplicationsApplicationTraceConfigArray []GetApplicationsApplicationTraceConfigInput

func (GetApplicationsApplicationTraceConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationsApplicationTraceConfig)(nil)).Elem()
}

func (i GetApplicationsApplicationTraceConfigArray) ToGetApplicationsApplicationTraceConfigArrayOutput() GetApplicationsApplicationTraceConfigArrayOutput {
	return i.ToGetApplicationsApplicationTraceConfigArrayOutputWithContext(context.Background())
}

func (i GetApplicationsApplicationTraceConfigArray) ToGetApplicationsApplicationTraceConfigArrayOutputWithContext(ctx context.Context) GetApplicationsApplicationTraceConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationsApplicationTraceConfigArrayOutput)
}

type GetApplicationsApplicationTraceConfigOutput struct{ *pulumi.OutputState }

func (GetApplicationsApplicationTraceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationsApplicationTraceConfig)(nil)).Elem()
}

func (o GetApplicationsApplicationTraceConfigOutput) ToGetApplicationsApplicationTraceConfigOutput() GetApplicationsApplicationTraceConfigOutput {
	return o
}

func (o GetApplicationsApplicationTraceConfigOutput) ToGetApplicationsApplicationTraceConfigOutputWithContext(ctx context.Context) GetApplicationsApplicationTraceConfigOutput {
	return o
}

// The OCID of the collector (e.g. an APM Domain) trace events will be sent to.
func (o GetApplicationsApplicationTraceConfigOutput) DomainId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationsApplicationTraceConfig) string { return v.DomainId }).(pulumi.StringOutput)
}

// Define if tracing is enabled for the resource.
func (o GetApplicationsApplicationTraceConfigOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationsApplicationTraceConfig) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

type GetApplicationsApplicationTraceConfigArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationsApplicationTraceConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationsApplicationTraceConfig)(nil)).Elem()
}

func (o GetApplicationsApplicationTraceConfigArrayOutput) ToGetApplicationsApplicationTraceConfigArrayOutput() GetApplicationsApplicationTraceConfigArrayOutput {
	return o
}

func (o GetApplicationsApplicationTraceConfigArrayOutput) ToGetApplicationsApplicationTraceConfigArrayOutputWithContext(ctx context.Context) GetApplicationsApplicationTraceConfigArrayOutput {
	return o
}

func (o GetApplicationsApplicationTraceConfigArrayOutput) Index(i pulumi.IntInput) GetApplicationsApplicationTraceConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationsApplicationTraceConfig {
		return vs[0].([]GetApplicationsApplicationTraceConfig)[vs[1].(int)]
	}).(GetApplicationsApplicationTraceConfigOutput)
}

type GetApplicationsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetApplicationsFilterInput is an input type that accepts GetApplicationsFilterArgs and GetApplicationsFilterOutput values.
// You can construct a concrete instance of `GetApplicationsFilterInput` via:
//
//	GetApplicationsFilterArgs{...}
type GetApplicationsFilterInput interface {
	pulumi.Input

	ToGetApplicationsFilterOutput() GetApplicationsFilterOutput
	ToGetApplicationsFilterOutputWithContext(context.Context) GetApplicationsFilterOutput
}

type GetApplicationsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetApplicationsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationsFilter)(nil)).Elem()
}

func (i GetApplicationsFilterArgs) ToGetApplicationsFilterOutput() GetApplicationsFilterOutput {
	return i.ToGetApplicationsFilterOutputWithContext(context.Background())
}

func (i GetApplicationsFilterArgs) ToGetApplicationsFilterOutputWithContext(ctx context.Context) GetApplicationsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationsFilterOutput)
}

// GetApplicationsFilterArrayInput is an input type that accepts GetApplicationsFilterArray and GetApplicationsFilterArrayOutput values.
// You can construct a concrete instance of `GetApplicationsFilterArrayInput` via:
//
//	GetApplicationsFilterArray{ GetApplicationsFilterArgs{...} }
type GetApplicationsFilterArrayInput interface {
	pulumi.Input

	ToGetApplicationsFilterArrayOutput() GetApplicationsFilterArrayOutput
	ToGetApplicationsFilterArrayOutputWithContext(context.Context) GetApplicationsFilterArrayOutput
}

type GetApplicationsFilterArray []GetApplicationsFilterInput

func (GetApplicationsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationsFilter)(nil)).Elem()
}

func (i GetApplicationsFilterArray) ToGetApplicationsFilterArrayOutput() GetApplicationsFilterArrayOutput {
	return i.ToGetApplicationsFilterArrayOutputWithContext(context.Background())
}

func (i GetApplicationsFilterArray) ToGetApplicationsFilterArrayOutputWithContext(ctx context.Context) GetApplicationsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationsFilterArrayOutput)
}

type GetApplicationsFilterOutput struct{ *pulumi.OutputState }

func (GetApplicationsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationsFilter)(nil)).Elem()
}

func (o GetApplicationsFilterOutput) ToGetApplicationsFilterOutput() GetApplicationsFilterOutput {
	return o
}

func (o GetApplicationsFilterOutput) ToGetApplicationsFilterOutputWithContext(ctx context.Context) GetApplicationsFilterOutput {
	return o
}

func (o GetApplicationsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetApplicationsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetApplicationsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetApplicationsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplicationsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetApplicationsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationsFilter)(nil)).Elem()
}

func (o GetApplicationsFilterArrayOutput) ToGetApplicationsFilterArrayOutput() GetApplicationsFilterArrayOutput {
	return o
}

func (o GetApplicationsFilterArrayOutput) ToGetApplicationsFilterArrayOutputWithContext(ctx context.Context) GetApplicationsFilterArrayOutput {
	return o
}

func (o GetApplicationsFilterArrayOutput) Index(i pulumi.IntInput) GetApplicationsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationsFilter {
		return vs[0].([]GetApplicationsFilter)[vs[1].(int)]
	}).(GetApplicationsFilterOutput)
}

type GetFunctionProvisionedConcurrencyConfig struct {
	Count int `pulumi:"count"`
	// The strategy for provisioned concurrency to be used.
	Strategy string `pulumi:"strategy"`
}

// GetFunctionProvisionedConcurrencyConfigInput is an input type that accepts GetFunctionProvisionedConcurrencyConfigArgs and GetFunctionProvisionedConcurrencyConfigOutput values.
// You can construct a concrete instance of `GetFunctionProvisionedConcurrencyConfigInput` via:
//
//	GetFunctionProvisionedConcurrencyConfigArgs{...}
type GetFunctionProvisionedConcurrencyConfigInput interface {
	pulumi.Input

	ToGetFunctionProvisionedConcurrencyConfigOutput() GetFunctionProvisionedConcurrencyConfigOutput
	ToGetFunctionProvisionedConcurrencyConfigOutputWithContext(context.Context) GetFunctionProvisionedConcurrencyConfigOutput
}

type GetFunctionProvisionedConcurrencyConfigArgs struct {
	Count pulumi.IntInput `pulumi:"count"`
	// The strategy for provisioned concurrency to be used.
	Strategy pulumi.StringInput `pulumi:"strategy"`
}

func (GetFunctionProvisionedConcurrencyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionProvisionedConcurrencyConfig)(nil)).Elem()
}

func (i GetFunctionProvisionedConcurrencyConfigArgs) ToGetFunctionProvisionedConcurrencyConfigOutput() GetFunctionProvisionedConcurrencyConfigOutput {
	return i.ToGetFunctionProvisionedConcurrencyConfigOutputWithContext(context.Background())
}

func (i GetFunctionProvisionedConcurrencyConfigArgs) ToGetFunctionProvisionedConcurrencyConfigOutputWithContext(ctx context.Context) GetFunctionProvisionedConcurrencyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionProvisionedConcurrencyConfigOutput)
}

// GetFunctionProvisionedConcurrencyConfigArrayInput is an input type that accepts GetFunctionProvisionedConcurrencyConfigArray and GetFunctionProvisionedConcurrencyConfigArrayOutput values.
// You can construct a concrete instance of `GetFunctionProvisionedConcurrencyConfigArrayInput` via:
//
//	GetFunctionProvisionedConcurrencyConfigArray{ GetFunctionProvisionedConcurrencyConfigArgs{...} }
type GetFunctionProvisionedConcurrencyConfigArrayInput interface {
	pulumi.Input

	ToGetFunctionProvisionedConcurrencyConfigArrayOutput() GetFunctionProvisionedConcurrencyConfigArrayOutput
	ToGetFunctionProvisionedConcurrencyConfigArrayOutputWithContext(context.Context) GetFunctionProvisionedConcurrencyConfigArrayOutput
}

type GetFunctionProvisionedConcurrencyConfigArray []GetFunctionProvisionedConcurrencyConfigInput

func (GetFunctionProvisionedConcurrencyConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionProvisionedConcurrencyConfig)(nil)).Elem()
}

func (i GetFunctionProvisionedConcurrencyConfigArray) ToGetFunctionProvisionedConcurrencyConfigArrayOutput() GetFunctionProvisionedConcurrencyConfigArrayOutput {
	return i.ToGetFunctionProvisionedConcurrencyConfigArrayOutputWithContext(context.Background())
}

func (i GetFunctionProvisionedConcurrencyConfigArray) ToGetFunctionProvisionedConcurrencyConfigArrayOutputWithContext(ctx context.Context) GetFunctionProvisionedConcurrencyConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionProvisionedConcurrencyConfigArrayOutput)
}

type GetFunctionProvisionedConcurrencyConfigOutput struct{ *pulumi.OutputState }

func (GetFunctionProvisionedConcurrencyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionProvisionedConcurrencyConfig)(nil)).Elem()
}

func (o GetFunctionProvisionedConcurrencyConfigOutput) ToGetFunctionProvisionedConcurrencyConfigOutput() GetFunctionProvisionedConcurrencyConfigOutput {
	return o
}

func (o GetFunctionProvisionedConcurrencyConfigOutput) ToGetFunctionProvisionedConcurrencyConfigOutputWithContext(ctx context.Context) GetFunctionProvisionedConcurrencyConfigOutput {
	return o
}

func (o GetFunctionProvisionedConcurrencyConfigOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v GetFunctionProvisionedConcurrencyConfig) int { return v.Count }).(pulumi.IntOutput)
}

// The strategy for provisioned concurrency to be used.
func (o GetFunctionProvisionedConcurrencyConfigOutput) Strategy() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionProvisionedConcurrencyConfig) string { return v.Strategy }).(pulumi.StringOutput)
}

type GetFunctionProvisionedConcurrencyConfigArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionProvisionedConcurrencyConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionProvisionedConcurrencyConfig)(nil)).Elem()
}

func (o GetFunctionProvisionedConcurrencyConfigArrayOutput) ToGetFunctionProvisionedConcurrencyConfigArrayOutput() GetFunctionProvisionedConcurrencyConfigArrayOutput {
	return o
}

func (o GetFunctionProvisionedConcurrencyConfigArrayOutput) ToGetFunctionProvisionedConcurrencyConfigArrayOutputWithContext(ctx context.Context) GetFunctionProvisionedConcurrencyConfigArrayOutput {
	return o
}

func (o GetFunctionProvisionedConcurrencyConfigArrayOutput) Index(i pulumi.IntInput) GetFunctionProvisionedConcurrencyConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionProvisionedConcurrencyConfig {
		return vs[0].([]GetFunctionProvisionedConcurrencyConfig)[vs[1].(int)]
	}).(GetFunctionProvisionedConcurrencyConfigOutput)
}

type GetFunctionTraceConfig struct {
	// Define if tracing is enabled for the resource.
	IsEnabled bool `pulumi:"isEnabled"`
}

// GetFunctionTraceConfigInput is an input type that accepts GetFunctionTraceConfigArgs and GetFunctionTraceConfigOutput values.
// You can construct a concrete instance of `GetFunctionTraceConfigInput` via:
//
//	GetFunctionTraceConfigArgs{...}
type GetFunctionTraceConfigInput interface {
	pulumi.Input

	ToGetFunctionTraceConfigOutput() GetFunctionTraceConfigOutput
	ToGetFunctionTraceConfigOutputWithContext(context.Context) GetFunctionTraceConfigOutput
}

type GetFunctionTraceConfigArgs struct {
	// Define if tracing is enabled for the resource.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
}

func (GetFunctionTraceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionTraceConfig)(nil)).Elem()
}

func (i GetFunctionTraceConfigArgs) ToGetFunctionTraceConfigOutput() GetFunctionTraceConfigOutput {
	return i.ToGetFunctionTraceConfigOutputWithContext(context.Background())
}

func (i GetFunctionTraceConfigArgs) ToGetFunctionTraceConfigOutputWithContext(ctx context.Context) GetFunctionTraceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionTraceConfigOutput)
}

// GetFunctionTraceConfigArrayInput is an input type that accepts GetFunctionTraceConfigArray and GetFunctionTraceConfigArrayOutput values.
// You can construct a concrete instance of `GetFunctionTraceConfigArrayInput` via:
//
//	GetFunctionTraceConfigArray{ GetFunctionTraceConfigArgs{...} }
type GetFunctionTraceConfigArrayInput interface {
	pulumi.Input

	ToGetFunctionTraceConfigArrayOutput() GetFunctionTraceConfigArrayOutput
	ToGetFunctionTraceConfigArrayOutputWithContext(context.Context) GetFunctionTraceConfigArrayOutput
}

type GetFunctionTraceConfigArray []GetFunctionTraceConfigInput

func (GetFunctionTraceConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionTraceConfig)(nil)).Elem()
}

func (i GetFunctionTraceConfigArray) ToGetFunctionTraceConfigArrayOutput() GetFunctionTraceConfigArrayOutput {
	return i.ToGetFunctionTraceConfigArrayOutputWithContext(context.Background())
}

func (i GetFunctionTraceConfigArray) ToGetFunctionTraceConfigArrayOutputWithContext(ctx context.Context) GetFunctionTraceConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionTraceConfigArrayOutput)
}

type GetFunctionTraceConfigOutput struct{ *pulumi.OutputState }

func (GetFunctionTraceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionTraceConfig)(nil)).Elem()
}

func (o GetFunctionTraceConfigOutput) ToGetFunctionTraceConfigOutput() GetFunctionTraceConfigOutput {
	return o
}

func (o GetFunctionTraceConfigOutput) ToGetFunctionTraceConfigOutputWithContext(ctx context.Context) GetFunctionTraceConfigOutput {
	return o
}

// Define if tracing is enabled for the resource.
func (o GetFunctionTraceConfigOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFunctionTraceConfig) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

type GetFunctionTraceConfigArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionTraceConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionTraceConfig)(nil)).Elem()
}

func (o GetFunctionTraceConfigArrayOutput) ToGetFunctionTraceConfigArrayOutput() GetFunctionTraceConfigArrayOutput {
	return o
}

func (o GetFunctionTraceConfigArrayOutput) ToGetFunctionTraceConfigArrayOutputWithContext(ctx context.Context) GetFunctionTraceConfigArrayOutput {
	return o
}

func (o GetFunctionTraceConfigArrayOutput) Index(i pulumi.IntInput) GetFunctionTraceConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionTraceConfig {
		return vs[0].([]GetFunctionTraceConfig)[vs[1].(int)]
	}).(GetFunctionTraceConfigOutput)
}

type GetFunctionsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetFunctionsFilterInput is an input type that accepts GetFunctionsFilterArgs and GetFunctionsFilterOutput values.
// You can construct a concrete instance of `GetFunctionsFilterInput` via:
//
//	GetFunctionsFilterArgs{...}
type GetFunctionsFilterInput interface {
	pulumi.Input

	ToGetFunctionsFilterOutput() GetFunctionsFilterOutput
	ToGetFunctionsFilterOutputWithContext(context.Context) GetFunctionsFilterOutput
}

type GetFunctionsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetFunctionsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionsFilter)(nil)).Elem()
}

func (i GetFunctionsFilterArgs) ToGetFunctionsFilterOutput() GetFunctionsFilterOutput {
	return i.ToGetFunctionsFilterOutputWithContext(context.Background())
}

func (i GetFunctionsFilterArgs) ToGetFunctionsFilterOutputWithContext(ctx context.Context) GetFunctionsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionsFilterOutput)
}

// GetFunctionsFilterArrayInput is an input type that accepts GetFunctionsFilterArray and GetFunctionsFilterArrayOutput values.
// You can construct a concrete instance of `GetFunctionsFilterArrayInput` via:
//
//	GetFunctionsFilterArray{ GetFunctionsFilterArgs{...} }
type GetFunctionsFilterArrayInput interface {
	pulumi.Input

	ToGetFunctionsFilterArrayOutput() GetFunctionsFilterArrayOutput
	ToGetFunctionsFilterArrayOutputWithContext(context.Context) GetFunctionsFilterArrayOutput
}

type GetFunctionsFilterArray []GetFunctionsFilterInput

func (GetFunctionsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionsFilter)(nil)).Elem()
}

func (i GetFunctionsFilterArray) ToGetFunctionsFilterArrayOutput() GetFunctionsFilterArrayOutput {
	return i.ToGetFunctionsFilterArrayOutputWithContext(context.Background())
}

func (i GetFunctionsFilterArray) ToGetFunctionsFilterArrayOutputWithContext(ctx context.Context) GetFunctionsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionsFilterArrayOutput)
}

type GetFunctionsFilterOutput struct{ *pulumi.OutputState }

func (GetFunctionsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionsFilter)(nil)).Elem()
}

func (o GetFunctionsFilterOutput) ToGetFunctionsFilterOutput() GetFunctionsFilterOutput {
	return o
}

func (o GetFunctionsFilterOutput) ToGetFunctionsFilterOutputWithContext(ctx context.Context) GetFunctionsFilterOutput {
	return o
}

func (o GetFunctionsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetFunctionsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetFunctionsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetFunctionsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFunctionsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetFunctionsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionsFilter)(nil)).Elem()
}

func (o GetFunctionsFilterArrayOutput) ToGetFunctionsFilterArrayOutput() GetFunctionsFilterArrayOutput {
	return o
}

func (o GetFunctionsFilterArrayOutput) ToGetFunctionsFilterArrayOutputWithContext(ctx context.Context) GetFunctionsFilterArrayOutput {
	return o
}

func (o GetFunctionsFilterArrayOutput) Index(i pulumi.IntInput) GetFunctionsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionsFilter {
		return vs[0].([]GetFunctionsFilter)[vs[1].(int)]
	}).(GetFunctionsFilterOutput)
}

type GetFunctionsFunction struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the application to which this function belongs.
	ApplicationId string `pulumi:"applicationId"`
	// The OCID of the compartment that contains the function.
	CompartmentId string `pulumi:"compartmentId"`
	// Function configuration. Overrides application configuration. Keys must be ASCII strings consisting solely of letters, digits, and the '_' (underscore) character, and must not begin with a digit. Values should be limited to printable unicode characters.  Example: `{"MY_FUNCTION_CONFIG": "ConfVal"}`
	Config map[string]interface{} `pulumi:"config"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A filter to return only functions with display names that match the display name string. Matching is exact.
	DisplayName string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A filter to return only functions with the specified OCID.
	Id string `pulumi:"id"`
	// The qualified name of the Docker image to use in the function, including the image tag. The image should be in the Oracle Cloud Infrastructure Registry that is in the same region as the function itself. Example: `phx.ocir.io/ten/functions/function:0.0.1`
	Image string `pulumi:"image"`
	// The image digest for the version of the image that will be pulled when invoking this function. If no value is specified, the digest currently associated with the image in the Oracle Cloud Infrastructure Registry will be used. Example: `sha256:ca0eeb6fb05351dfc8759c20733c91def84cb8007aa89a5bf606bc8b315b9fc7`
	ImageDigest string `pulumi:"imageDigest"`
	// The base https invoke URL to set on a client in order to invoke a function. This URL will never change over the lifetime of the function and can be cached.
	InvokeEndpoint string `pulumi:"invokeEndpoint"`
	// Maximum usable memory for the function (MiB).
	MemoryInMbs string `pulumi:"memoryInMbs"`
	// Define the strategy for provisioned concurrency for the function.
	ProvisionedConcurrencyConfigs []GetFunctionsFunctionProvisionedConcurrencyConfig `pulumi:"provisionedConcurrencyConfigs"`
	// A filter to return only functions that match the lifecycle state in this parameter. Example: `Creating`
	State string `pulumi:"state"`
	// The time the function was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-09-12T22:47:12.613Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The time the function was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-09-12T22:47:12.613Z`
	TimeUpdated string `pulumi:"timeUpdated"`
	// Timeout for executions of the function. Value in seconds.
	TimeoutInSeconds int `pulumi:"timeoutInSeconds"`
	// Define the tracing configuration for a function.
	TraceConfigs []GetFunctionsFunctionTraceConfig `pulumi:"traceConfigs"`
}

// GetFunctionsFunctionInput is an input type that accepts GetFunctionsFunctionArgs and GetFunctionsFunctionOutput values.
// You can construct a concrete instance of `GetFunctionsFunctionInput` via:
//
//	GetFunctionsFunctionArgs{...}
type GetFunctionsFunctionInput interface {
	pulumi.Input

	ToGetFunctionsFunctionOutput() GetFunctionsFunctionOutput
	ToGetFunctionsFunctionOutputWithContext(context.Context) GetFunctionsFunctionOutput
}

type GetFunctionsFunctionArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the application to which this function belongs.
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	// The OCID of the compartment that contains the function.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Function configuration. Overrides application configuration. Keys must be ASCII strings consisting solely of letters, digits, and the '_' (underscore) character, and must not begin with a digit. Values should be limited to printable unicode characters.  Example: `{"MY_FUNCTION_CONFIG": "ConfVal"}`
	Config pulumi.MapInput `pulumi:"config"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// A filter to return only functions with display names that match the display name string. Matching is exact.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// A filter to return only functions with the specified OCID.
	Id pulumi.StringInput `pulumi:"id"`
	// The qualified name of the Docker image to use in the function, including the image tag. The image should be in the Oracle Cloud Infrastructure Registry that is in the same region as the function itself. Example: `phx.ocir.io/ten/functions/function:0.0.1`
	Image pulumi.StringInput `pulumi:"image"`
	// The image digest for the version of the image that will be pulled when invoking this function. If no value is specified, the digest currently associated with the image in the Oracle Cloud Infrastructure Registry will be used. Example: `sha256:ca0eeb6fb05351dfc8759c20733c91def84cb8007aa89a5bf606bc8b315b9fc7`
	ImageDigest pulumi.StringInput `pulumi:"imageDigest"`
	// The base https invoke URL to set on a client in order to invoke a function. This URL will never change over the lifetime of the function and can be cached.
	InvokeEndpoint pulumi.StringInput `pulumi:"invokeEndpoint"`
	// Maximum usable memory for the function (MiB).
	MemoryInMbs pulumi.StringInput `pulumi:"memoryInMbs"`
	// Define the strategy for provisioned concurrency for the function.
	ProvisionedConcurrencyConfigs GetFunctionsFunctionProvisionedConcurrencyConfigArrayInput `pulumi:"provisionedConcurrencyConfigs"`
	// A filter to return only functions that match the lifecycle state in this parameter. Example: `Creating`
	State pulumi.StringInput `pulumi:"state"`
	// The time the function was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-09-12T22:47:12.613Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the function was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-09-12T22:47:12.613Z`
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// Timeout for executions of the function. Value in seconds.
	TimeoutInSeconds pulumi.IntInput `pulumi:"timeoutInSeconds"`
	// Define the tracing configuration for a function.
	TraceConfigs GetFunctionsFunctionTraceConfigArrayInput `pulumi:"traceConfigs"`
}

func (GetFunctionsFunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionsFunction)(nil)).Elem()
}

func (i GetFunctionsFunctionArgs) ToGetFunctionsFunctionOutput() GetFunctionsFunctionOutput {
	return i.ToGetFunctionsFunctionOutputWithContext(context.Background())
}

func (i GetFunctionsFunctionArgs) ToGetFunctionsFunctionOutputWithContext(ctx context.Context) GetFunctionsFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionsFunctionOutput)
}

// GetFunctionsFunctionArrayInput is an input type that accepts GetFunctionsFunctionArray and GetFunctionsFunctionArrayOutput values.
// You can construct a concrete instance of `GetFunctionsFunctionArrayInput` via:
//
//	GetFunctionsFunctionArray{ GetFunctionsFunctionArgs{...} }
type GetFunctionsFunctionArrayInput interface {
	pulumi.Input

	ToGetFunctionsFunctionArrayOutput() GetFunctionsFunctionArrayOutput
	ToGetFunctionsFunctionArrayOutputWithContext(context.Context) GetFunctionsFunctionArrayOutput
}

type GetFunctionsFunctionArray []GetFunctionsFunctionInput

func (GetFunctionsFunctionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionsFunction)(nil)).Elem()
}

func (i GetFunctionsFunctionArray) ToGetFunctionsFunctionArrayOutput() GetFunctionsFunctionArrayOutput {
	return i.ToGetFunctionsFunctionArrayOutputWithContext(context.Background())
}

func (i GetFunctionsFunctionArray) ToGetFunctionsFunctionArrayOutputWithContext(ctx context.Context) GetFunctionsFunctionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionsFunctionArrayOutput)
}

type GetFunctionsFunctionOutput struct{ *pulumi.OutputState }

func (GetFunctionsFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionsFunction)(nil)).Elem()
}

func (o GetFunctionsFunctionOutput) ToGetFunctionsFunctionOutput() GetFunctionsFunctionOutput {
	return o
}

func (o GetFunctionsFunctionOutput) ToGetFunctionsFunctionOutputWithContext(ctx context.Context) GetFunctionsFunctionOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the application to which this function belongs.
func (o GetFunctionsFunctionOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsFunction) string { return v.ApplicationId }).(pulumi.StringOutput)
}

// The OCID of the compartment that contains the function.
func (o GetFunctionsFunctionOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsFunction) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Function configuration. Overrides application configuration. Keys must be ASCII strings consisting solely of letters, digits, and the '_' (underscore) character, and must not begin with a digit. Values should be limited to printable unicode characters.  Example: `{"MY_FUNCTION_CONFIG": "ConfVal"}`
func (o GetFunctionsFunctionOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v GetFunctionsFunction) map[string]interface{} { return v.Config }).(pulumi.MapOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o GetFunctionsFunctionOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetFunctionsFunction) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// A filter to return only functions with display names that match the display name string. Matching is exact.
func (o GetFunctionsFunctionOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsFunction) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o GetFunctionsFunctionOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetFunctionsFunction) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// A filter to return only functions with the specified OCID.
func (o GetFunctionsFunctionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsFunction) string { return v.Id }).(pulumi.StringOutput)
}

// The qualified name of the Docker image to use in the function, including the image tag. The image should be in the Oracle Cloud Infrastructure Registry that is in the same region as the function itself. Example: `phx.ocir.io/ten/functions/function:0.0.1`
func (o GetFunctionsFunctionOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsFunction) string { return v.Image }).(pulumi.StringOutput)
}

// The image digest for the version of the image that will be pulled when invoking this function. If no value is specified, the digest currently associated with the image in the Oracle Cloud Infrastructure Registry will be used. Example: `sha256:ca0eeb6fb05351dfc8759c20733c91def84cb8007aa89a5bf606bc8b315b9fc7`
func (o GetFunctionsFunctionOutput) ImageDigest() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsFunction) string { return v.ImageDigest }).(pulumi.StringOutput)
}

// The base https invoke URL to set on a client in order to invoke a function. This URL will never change over the lifetime of the function and can be cached.
func (o GetFunctionsFunctionOutput) InvokeEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsFunction) string { return v.InvokeEndpoint }).(pulumi.StringOutput)
}

// Maximum usable memory for the function (MiB).
func (o GetFunctionsFunctionOutput) MemoryInMbs() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsFunction) string { return v.MemoryInMbs }).(pulumi.StringOutput)
}

// Define the strategy for provisioned concurrency for the function.
func (o GetFunctionsFunctionOutput) ProvisionedConcurrencyConfigs() GetFunctionsFunctionProvisionedConcurrencyConfigArrayOutput {
	return o.ApplyT(func(v GetFunctionsFunction) []GetFunctionsFunctionProvisionedConcurrencyConfig {
		return v.ProvisionedConcurrencyConfigs
	}).(GetFunctionsFunctionProvisionedConcurrencyConfigArrayOutput)
}

// A filter to return only functions that match the lifecycle state in this parameter. Example: `Creating`
func (o GetFunctionsFunctionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsFunction) string { return v.State }).(pulumi.StringOutput)
}

// The time the function was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-09-12T22:47:12.613Z`
func (o GetFunctionsFunctionOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsFunction) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the function was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-09-12T22:47:12.613Z`
func (o GetFunctionsFunctionOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsFunction) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Timeout for executions of the function. Value in seconds.
func (o GetFunctionsFunctionOutput) TimeoutInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetFunctionsFunction) int { return v.TimeoutInSeconds }).(pulumi.IntOutput)
}

// Define the tracing configuration for a function.
func (o GetFunctionsFunctionOutput) TraceConfigs() GetFunctionsFunctionTraceConfigArrayOutput {
	return o.ApplyT(func(v GetFunctionsFunction) []GetFunctionsFunctionTraceConfig { return v.TraceConfigs }).(GetFunctionsFunctionTraceConfigArrayOutput)
}

type GetFunctionsFunctionArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionsFunctionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionsFunction)(nil)).Elem()
}

func (o GetFunctionsFunctionArrayOutput) ToGetFunctionsFunctionArrayOutput() GetFunctionsFunctionArrayOutput {
	return o
}

func (o GetFunctionsFunctionArrayOutput) ToGetFunctionsFunctionArrayOutputWithContext(ctx context.Context) GetFunctionsFunctionArrayOutput {
	return o
}

func (o GetFunctionsFunctionArrayOutput) Index(i pulumi.IntInput) GetFunctionsFunctionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionsFunction {
		return vs[0].([]GetFunctionsFunction)[vs[1].(int)]
	}).(GetFunctionsFunctionOutput)
}

type GetFunctionsFunctionProvisionedConcurrencyConfig struct {
	Count int `pulumi:"count"`
	// The strategy for provisioned concurrency to be used.
	Strategy string `pulumi:"strategy"`
}

// GetFunctionsFunctionProvisionedConcurrencyConfigInput is an input type that accepts GetFunctionsFunctionProvisionedConcurrencyConfigArgs and GetFunctionsFunctionProvisionedConcurrencyConfigOutput values.
// You can construct a concrete instance of `GetFunctionsFunctionProvisionedConcurrencyConfigInput` via:
//
//	GetFunctionsFunctionProvisionedConcurrencyConfigArgs{...}
type GetFunctionsFunctionProvisionedConcurrencyConfigInput interface {
	pulumi.Input

	ToGetFunctionsFunctionProvisionedConcurrencyConfigOutput() GetFunctionsFunctionProvisionedConcurrencyConfigOutput
	ToGetFunctionsFunctionProvisionedConcurrencyConfigOutputWithContext(context.Context) GetFunctionsFunctionProvisionedConcurrencyConfigOutput
}

type GetFunctionsFunctionProvisionedConcurrencyConfigArgs struct {
	Count pulumi.IntInput `pulumi:"count"`
	// The strategy for provisioned concurrency to be used.
	Strategy pulumi.StringInput `pulumi:"strategy"`
}

func (GetFunctionsFunctionProvisionedConcurrencyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionsFunctionProvisionedConcurrencyConfig)(nil)).Elem()
}

func (i GetFunctionsFunctionProvisionedConcurrencyConfigArgs) ToGetFunctionsFunctionProvisionedConcurrencyConfigOutput() GetFunctionsFunctionProvisionedConcurrencyConfigOutput {
	return i.ToGetFunctionsFunctionProvisionedConcurrencyConfigOutputWithContext(context.Background())
}

func (i GetFunctionsFunctionProvisionedConcurrencyConfigArgs) ToGetFunctionsFunctionProvisionedConcurrencyConfigOutputWithContext(ctx context.Context) GetFunctionsFunctionProvisionedConcurrencyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionsFunctionProvisionedConcurrencyConfigOutput)
}

// GetFunctionsFunctionProvisionedConcurrencyConfigArrayInput is an input type that accepts GetFunctionsFunctionProvisionedConcurrencyConfigArray and GetFunctionsFunctionProvisionedConcurrencyConfigArrayOutput values.
// You can construct a concrete instance of `GetFunctionsFunctionProvisionedConcurrencyConfigArrayInput` via:
//
//	GetFunctionsFunctionProvisionedConcurrencyConfigArray{ GetFunctionsFunctionProvisionedConcurrencyConfigArgs{...} }
type GetFunctionsFunctionProvisionedConcurrencyConfigArrayInput interface {
	pulumi.Input

	ToGetFunctionsFunctionProvisionedConcurrencyConfigArrayOutput() GetFunctionsFunctionProvisionedConcurrencyConfigArrayOutput
	ToGetFunctionsFunctionProvisionedConcurrencyConfigArrayOutputWithContext(context.Context) GetFunctionsFunctionProvisionedConcurrencyConfigArrayOutput
}

type GetFunctionsFunctionProvisionedConcurrencyConfigArray []GetFunctionsFunctionProvisionedConcurrencyConfigInput

func (GetFunctionsFunctionProvisionedConcurrencyConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionsFunctionProvisionedConcurrencyConfig)(nil)).Elem()
}

func (i GetFunctionsFunctionProvisionedConcurrencyConfigArray) ToGetFunctionsFunctionProvisionedConcurrencyConfigArrayOutput() GetFunctionsFunctionProvisionedConcurrencyConfigArrayOutput {
	return i.ToGetFunctionsFunctionProvisionedConcurrencyConfigArrayOutputWithContext(context.Background())
}

func (i GetFunctionsFunctionProvisionedConcurrencyConfigArray) ToGetFunctionsFunctionProvisionedConcurrencyConfigArrayOutputWithContext(ctx context.Context) GetFunctionsFunctionProvisionedConcurrencyConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionsFunctionProvisionedConcurrencyConfigArrayOutput)
}

type GetFunctionsFunctionProvisionedConcurrencyConfigOutput struct{ *pulumi.OutputState }

func (GetFunctionsFunctionProvisionedConcurrencyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionsFunctionProvisionedConcurrencyConfig)(nil)).Elem()
}

func (o GetFunctionsFunctionProvisionedConcurrencyConfigOutput) ToGetFunctionsFunctionProvisionedConcurrencyConfigOutput() GetFunctionsFunctionProvisionedConcurrencyConfigOutput {
	return o
}

func (o GetFunctionsFunctionProvisionedConcurrencyConfigOutput) ToGetFunctionsFunctionProvisionedConcurrencyConfigOutputWithContext(ctx context.Context) GetFunctionsFunctionProvisionedConcurrencyConfigOutput {
	return o
}

func (o GetFunctionsFunctionProvisionedConcurrencyConfigOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v GetFunctionsFunctionProvisionedConcurrencyConfig) int { return v.Count }).(pulumi.IntOutput)
}

// The strategy for provisioned concurrency to be used.
func (o GetFunctionsFunctionProvisionedConcurrencyConfigOutput) Strategy() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsFunctionProvisionedConcurrencyConfig) string { return v.Strategy }).(pulumi.StringOutput)
}

type GetFunctionsFunctionProvisionedConcurrencyConfigArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionsFunctionProvisionedConcurrencyConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionsFunctionProvisionedConcurrencyConfig)(nil)).Elem()
}

func (o GetFunctionsFunctionProvisionedConcurrencyConfigArrayOutput) ToGetFunctionsFunctionProvisionedConcurrencyConfigArrayOutput() GetFunctionsFunctionProvisionedConcurrencyConfigArrayOutput {
	return o
}

func (o GetFunctionsFunctionProvisionedConcurrencyConfigArrayOutput) ToGetFunctionsFunctionProvisionedConcurrencyConfigArrayOutputWithContext(ctx context.Context) GetFunctionsFunctionProvisionedConcurrencyConfigArrayOutput {
	return o
}

func (o GetFunctionsFunctionProvisionedConcurrencyConfigArrayOutput) Index(i pulumi.IntInput) GetFunctionsFunctionProvisionedConcurrencyConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionsFunctionProvisionedConcurrencyConfig {
		return vs[0].([]GetFunctionsFunctionProvisionedConcurrencyConfig)[vs[1].(int)]
	}).(GetFunctionsFunctionProvisionedConcurrencyConfigOutput)
}

type GetFunctionsFunctionTraceConfig struct {
	// Define if tracing is enabled for the resource.
	IsEnabled bool `pulumi:"isEnabled"`
}

// GetFunctionsFunctionTraceConfigInput is an input type that accepts GetFunctionsFunctionTraceConfigArgs and GetFunctionsFunctionTraceConfigOutput values.
// You can construct a concrete instance of `GetFunctionsFunctionTraceConfigInput` via:
//
//	GetFunctionsFunctionTraceConfigArgs{...}
type GetFunctionsFunctionTraceConfigInput interface {
	pulumi.Input

	ToGetFunctionsFunctionTraceConfigOutput() GetFunctionsFunctionTraceConfigOutput
	ToGetFunctionsFunctionTraceConfigOutputWithContext(context.Context) GetFunctionsFunctionTraceConfigOutput
}

type GetFunctionsFunctionTraceConfigArgs struct {
	// Define if tracing is enabled for the resource.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
}

func (GetFunctionsFunctionTraceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionsFunctionTraceConfig)(nil)).Elem()
}

func (i GetFunctionsFunctionTraceConfigArgs) ToGetFunctionsFunctionTraceConfigOutput() GetFunctionsFunctionTraceConfigOutput {
	return i.ToGetFunctionsFunctionTraceConfigOutputWithContext(context.Background())
}

func (i GetFunctionsFunctionTraceConfigArgs) ToGetFunctionsFunctionTraceConfigOutputWithContext(ctx context.Context) GetFunctionsFunctionTraceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionsFunctionTraceConfigOutput)
}

// GetFunctionsFunctionTraceConfigArrayInput is an input type that accepts GetFunctionsFunctionTraceConfigArray and GetFunctionsFunctionTraceConfigArrayOutput values.
// You can construct a concrete instance of `GetFunctionsFunctionTraceConfigArrayInput` via:
//
//	GetFunctionsFunctionTraceConfigArray{ GetFunctionsFunctionTraceConfigArgs{...} }
type GetFunctionsFunctionTraceConfigArrayInput interface {
	pulumi.Input

	ToGetFunctionsFunctionTraceConfigArrayOutput() GetFunctionsFunctionTraceConfigArrayOutput
	ToGetFunctionsFunctionTraceConfigArrayOutputWithContext(context.Context) GetFunctionsFunctionTraceConfigArrayOutput
}

type GetFunctionsFunctionTraceConfigArray []GetFunctionsFunctionTraceConfigInput

func (GetFunctionsFunctionTraceConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionsFunctionTraceConfig)(nil)).Elem()
}

func (i GetFunctionsFunctionTraceConfigArray) ToGetFunctionsFunctionTraceConfigArrayOutput() GetFunctionsFunctionTraceConfigArrayOutput {
	return i.ToGetFunctionsFunctionTraceConfigArrayOutputWithContext(context.Background())
}

func (i GetFunctionsFunctionTraceConfigArray) ToGetFunctionsFunctionTraceConfigArrayOutputWithContext(ctx context.Context) GetFunctionsFunctionTraceConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionsFunctionTraceConfigArrayOutput)
}

type GetFunctionsFunctionTraceConfigOutput struct{ *pulumi.OutputState }

func (GetFunctionsFunctionTraceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionsFunctionTraceConfig)(nil)).Elem()
}

func (o GetFunctionsFunctionTraceConfigOutput) ToGetFunctionsFunctionTraceConfigOutput() GetFunctionsFunctionTraceConfigOutput {
	return o
}

func (o GetFunctionsFunctionTraceConfigOutput) ToGetFunctionsFunctionTraceConfigOutputWithContext(ctx context.Context) GetFunctionsFunctionTraceConfigOutput {
	return o
}

// Define if tracing is enabled for the resource.
func (o GetFunctionsFunctionTraceConfigOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFunctionsFunctionTraceConfig) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

type GetFunctionsFunctionTraceConfigArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionsFunctionTraceConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionsFunctionTraceConfig)(nil)).Elem()
}

func (o GetFunctionsFunctionTraceConfigArrayOutput) ToGetFunctionsFunctionTraceConfigArrayOutput() GetFunctionsFunctionTraceConfigArrayOutput {
	return o
}

func (o GetFunctionsFunctionTraceConfigArrayOutput) ToGetFunctionsFunctionTraceConfigArrayOutputWithContext(ctx context.Context) GetFunctionsFunctionTraceConfigArrayOutput {
	return o
}

func (o GetFunctionsFunctionTraceConfigArrayOutput) Index(i pulumi.IntInput) GetFunctionsFunctionTraceConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionsFunctionTraceConfig {
		return vs[0].([]GetFunctionsFunctionTraceConfig)[vs[1].(int)]
	}).(GetFunctionsFunctionTraceConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationImagePolicyConfigInput)(nil)).Elem(), ApplicationImagePolicyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationImagePolicyConfigPtrInput)(nil)).Elem(), ApplicationImagePolicyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationImagePolicyConfigKeyDetailInput)(nil)).Elem(), ApplicationImagePolicyConfigKeyDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationImagePolicyConfigKeyDetailArrayInput)(nil)).Elem(), ApplicationImagePolicyConfigKeyDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationTraceConfigInput)(nil)).Elem(), ApplicationTraceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationTraceConfigPtrInput)(nil)).Elem(), ApplicationTraceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionProvisionedConcurrencyConfigInput)(nil)).Elem(), FunctionProvisionedConcurrencyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionProvisionedConcurrencyConfigPtrInput)(nil)).Elem(), FunctionProvisionedConcurrencyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionTraceConfigInput)(nil)).Elem(), FunctionTraceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionTraceConfigPtrInput)(nil)).Elem(), FunctionTraceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationImagePolicyConfigInput)(nil)).Elem(), GetApplicationImagePolicyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationImagePolicyConfigArrayInput)(nil)).Elem(), GetApplicationImagePolicyConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationImagePolicyConfigKeyDetailInput)(nil)).Elem(), GetApplicationImagePolicyConfigKeyDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationImagePolicyConfigKeyDetailArrayInput)(nil)).Elem(), GetApplicationImagePolicyConfigKeyDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationTraceConfigInput)(nil)).Elem(), GetApplicationTraceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationTraceConfigArrayInput)(nil)).Elem(), GetApplicationTraceConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationsApplicationInput)(nil)).Elem(), GetApplicationsApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationsApplicationArrayInput)(nil)).Elem(), GetApplicationsApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationsApplicationImagePolicyConfigInput)(nil)).Elem(), GetApplicationsApplicationImagePolicyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationsApplicationImagePolicyConfigArrayInput)(nil)).Elem(), GetApplicationsApplicationImagePolicyConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationsApplicationImagePolicyConfigKeyDetailInput)(nil)).Elem(), GetApplicationsApplicationImagePolicyConfigKeyDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationsApplicationImagePolicyConfigKeyDetailArrayInput)(nil)).Elem(), GetApplicationsApplicationImagePolicyConfigKeyDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationsApplicationTraceConfigInput)(nil)).Elem(), GetApplicationsApplicationTraceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationsApplicationTraceConfigArrayInput)(nil)).Elem(), GetApplicationsApplicationTraceConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationsFilterInput)(nil)).Elem(), GetApplicationsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationsFilterArrayInput)(nil)).Elem(), GetApplicationsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionProvisionedConcurrencyConfigInput)(nil)).Elem(), GetFunctionProvisionedConcurrencyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionProvisionedConcurrencyConfigArrayInput)(nil)).Elem(), GetFunctionProvisionedConcurrencyConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionTraceConfigInput)(nil)).Elem(), GetFunctionTraceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionTraceConfigArrayInput)(nil)).Elem(), GetFunctionTraceConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionsFilterInput)(nil)).Elem(), GetFunctionsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionsFilterArrayInput)(nil)).Elem(), GetFunctionsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionsFunctionInput)(nil)).Elem(), GetFunctionsFunctionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionsFunctionArrayInput)(nil)).Elem(), GetFunctionsFunctionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionsFunctionProvisionedConcurrencyConfigInput)(nil)).Elem(), GetFunctionsFunctionProvisionedConcurrencyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionsFunctionProvisionedConcurrencyConfigArrayInput)(nil)).Elem(), GetFunctionsFunctionProvisionedConcurrencyConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionsFunctionTraceConfigInput)(nil)).Elem(), GetFunctionsFunctionTraceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionsFunctionTraceConfigArrayInput)(nil)).Elem(), GetFunctionsFunctionTraceConfigArray{})
	pulumi.RegisterOutputType(ApplicationImagePolicyConfigOutput{})
	pulumi.RegisterOutputType(ApplicationImagePolicyConfigPtrOutput{})
	pulumi.RegisterOutputType(ApplicationImagePolicyConfigKeyDetailOutput{})
	pulumi.RegisterOutputType(ApplicationImagePolicyConfigKeyDetailArrayOutput{})
	pulumi.RegisterOutputType(ApplicationTraceConfigOutput{})
	pulumi.RegisterOutputType(ApplicationTraceConfigPtrOutput{})
	pulumi.RegisterOutputType(FunctionProvisionedConcurrencyConfigOutput{})
	pulumi.RegisterOutputType(FunctionProvisionedConcurrencyConfigPtrOutput{})
	pulumi.RegisterOutputType(FunctionTraceConfigOutput{})
	pulumi.RegisterOutputType(FunctionTraceConfigPtrOutput{})
	pulumi.RegisterOutputType(GetApplicationImagePolicyConfigOutput{})
	pulumi.RegisterOutputType(GetApplicationImagePolicyConfigArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationImagePolicyConfigKeyDetailOutput{})
	pulumi.RegisterOutputType(GetApplicationImagePolicyConfigKeyDetailArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationTraceConfigOutput{})
	pulumi.RegisterOutputType(GetApplicationTraceConfigArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationsApplicationOutput{})
	pulumi.RegisterOutputType(GetApplicationsApplicationArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationsApplicationImagePolicyConfigOutput{})
	pulumi.RegisterOutputType(GetApplicationsApplicationImagePolicyConfigArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationsApplicationImagePolicyConfigKeyDetailOutput{})
	pulumi.RegisterOutputType(GetApplicationsApplicationImagePolicyConfigKeyDetailArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationsApplicationTraceConfigOutput{})
	pulumi.RegisterOutputType(GetApplicationsApplicationTraceConfigArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationsFilterOutput{})
	pulumi.RegisterOutputType(GetApplicationsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionProvisionedConcurrencyConfigOutput{})
	pulumi.RegisterOutputType(GetFunctionProvisionedConcurrencyConfigArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionTraceConfigOutput{})
	pulumi.RegisterOutputType(GetFunctionTraceConfigArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionsFilterOutput{})
	pulumi.RegisterOutputType(GetFunctionsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionsFunctionOutput{})
	pulumi.RegisterOutputType(GetFunctionsFunctionArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionsFunctionProvisionedConcurrencyConfigOutput{})
	pulumi.RegisterOutputType(GetFunctionsFunctionProvisionedConcurrencyConfigArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionsFunctionTraceConfigOutput{})
	pulumi.RegisterOutputType(GetFunctionsFunctionTraceConfigArrayOutput{})
}
