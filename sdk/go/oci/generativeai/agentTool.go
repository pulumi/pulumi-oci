// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package generativeai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Tool resource in Oracle Cloud Infrastructure Generative Ai Agent service.
//
// Creates a tool.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/generativeai"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := generativeai.NewAgentTool(ctx, "test_tool", &generativeai.AgentToolArgs{
//				AgentId:       pulumi.Any(testAgent.Id),
//				CompartmentId: pulumi.Any(compartmentId),
//				Description:   pulumi.Any(toolDescription),
//				ToolConfig: &generativeai.AgentToolToolConfigArgs{
//					ToolConfigType:  pulumi.Any(toolToolConfigToolConfigType),
//					AgentEndpointId: pulumi.Any(testAgentEndpoint.Id),
//					ApiSchema: &generativeai.AgentToolToolConfigApiSchemaArgs{
//						ApiSchemaInputLocationType: pulumi.Any(toolToolConfigApiSchemaApiSchemaInputLocationType),
//						Bucket:                     pulumi.Any(toolToolConfigApiSchemaBucket),
//						Content:                    pulumi.Any(toolToolConfigApiSchemaContent),
//						Namespace:                  pulumi.Any(toolToolConfigApiSchemaNamespace),
//						Object:                     pulumi.Any(toolToolConfigApiSchemaObject),
//					},
//					DatabaseConnection: &generativeai.AgentToolToolConfigDatabaseConnectionArgs{
//						ConnectionId:   pulumi.Any(testConnection.Id),
//						ConnectionType: pulumi.Any(toolToolConfigDatabaseConnectionConnectionType),
//					},
//					DatabaseSchema: &generativeai.AgentToolToolConfigDatabaseSchemaArgs{
//						InputLocationType: pulumi.Any(toolToolConfigDatabaseSchemaInputLocationType),
//						Bucket:            pulumi.Any(toolToolConfigDatabaseSchemaBucket),
//						Content:           pulumi.Any(toolToolConfigDatabaseSchemaContent),
//						Namespace:         pulumi.Any(toolToolConfigDatabaseSchemaNamespace),
//						Prefix:            pulumi.Any(toolToolConfigDatabaseSchemaPrefix),
//					},
//					Dialect: pulumi.Any(toolToolConfigDialect),
//					Function: &generativeai.AgentToolToolConfigFunctionArgs{
//						Description: pulumi.Any(toolToolConfigFunctionDescription),
//						Name:        pulumi.Any(toolToolConfigFunctionName),
//						Parameters:  pulumi.Any(toolToolConfigFunctionParameters),
//					},
//					GenerationLlmCustomization: &generativeai.AgentToolToolConfigGenerationLlmCustomizationArgs{
//						Instruction: pulumi.Any(toolToolConfigGenerationLlmCustomizationInstruction),
//					},
//					HttpEndpointAuthConfig: &generativeai.AgentToolToolConfigHttpEndpointAuthConfigArgs{
//						HttpEndpointAuthSources: generativeai.AgentToolToolConfigHttpEndpointAuthConfigHttpEndpointAuthSourceArray{
//							&generativeai.AgentToolToolConfigHttpEndpointAuthConfigHttpEndpointAuthSourceArgs{
//								HttpEndpointAuthScope: pulumi.Any(toolToolConfigHttpEndpointAuthConfigHttpEndpointAuthSourcesHttpEndpointAuthScope),
//								HttpEndpointAuthScopeConfig: &generativeai.AgentToolToolConfigHttpEndpointAuthConfigHttpEndpointAuthSourceHttpEndpointAuthScopeConfigArgs{
//									HttpEndpointAuthScopeConfigType: pulumi.Any(toolToolConfigHttpEndpointAuthConfigHttpEndpointAuthSourcesHttpEndpointAuthScopeConfigHttpEndpointAuthScopeConfigType),
//									ClientId:                        pulumi.Any(testClient.Id),
//									IdcsUrl:                         pulumi.Any(toolToolConfigHttpEndpointAuthConfigHttpEndpointAuthSourcesHttpEndpointAuthScopeConfigIdcsUrl),
//									KeyLocation:                     pulumi.Any(toolToolConfigHttpEndpointAuthConfigHttpEndpointAuthSourcesHttpEndpointAuthScopeConfigKeyLocation),
//									KeyName:                         pulumi.Any(testKey.Name),
//									ScopeUrl:                        pulumi.Any(toolToolConfigHttpEndpointAuthConfigHttpEndpointAuthSourcesHttpEndpointAuthScopeConfigScopeUrl),
//									VaultSecretId:                   pulumi.Any(testSecret.Id),
//								},
//							},
//						},
//					},
//					IclExamples: &generativeai.AgentToolToolConfigIclExamplesArgs{
//						InputLocationType: pulumi.Any(toolToolConfigIclExamplesInputLocationType),
//						Bucket:            pulumi.Any(toolToolConfigIclExamplesBucket),
//						Content:           pulumi.Any(toolToolConfigIclExamplesContent),
//						Namespace:         pulumi.Any(toolToolConfigIclExamplesNamespace),
//						Prefix:            pulumi.Any(toolToolConfigIclExamplesPrefix),
//					},
//					KnowledgeBaseConfigs: generativeai.AgentToolToolConfigKnowledgeBaseConfigArray{
//						&generativeai.AgentToolToolConfigKnowledgeBaseConfigArgs{
//							KnowledgeBaseId: pulumi.Any(testKnowledgeBase.Id),
//						},
//					},
//					ModelSize:                  pulumi.Any(toolToolConfigModelSize),
//					ShouldEnableSelfCorrection: pulumi.Any(toolToolConfigShouldEnableSelfCorrection),
//					ShouldEnableSqlExecution:   pulumi.Any(toolToolConfigShouldEnableSqlExecution),
//					SubnetId:                   pulumi.Any(testSubnet.Id),
//					TableAndColumnDescription: &generativeai.AgentToolToolConfigTableAndColumnDescriptionArgs{
//						InputLocationType: pulumi.Any(toolToolConfigTableAndColumnDescriptionInputLocationType),
//						Bucket:            pulumi.Any(toolToolConfigTableAndColumnDescriptionBucket),
//						Content:           pulumi.Any(toolToolConfigTableAndColumnDescriptionContent),
//						Namespace:         pulumi.Any(toolToolConfigTableAndColumnDescriptionNamespace),
//						Prefix:            pulumi.Any(toolToolConfigTableAndColumnDescriptionPrefix),
//					},
//				},
//				DefinedTags: pulumi.StringMap{
//					"Operations.CostCenter": pulumi.String("42"),
//				},
//				DisplayName: pulumi.Any(toolDisplayName),
//				FreeformTags: pulumi.StringMap{
//					"Department": pulumi.String("Finance"),
//				},
//				Metadata: pulumi.Any(toolMetadata),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Tools can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:GenerativeAi/agentTool:AgentTool test_tool "id"
// ```
type AgentTool struct {
	pulumi.CustomResourceState

	// The OCID of the agent that this Tool is attached to.
	AgentId pulumi.StringOutput `pulumi:"agentId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) Description about the Tool.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// (Updatable) Key-value pairs to allow additional configurations.
	Metadata pulumi.StringMapOutput `pulumi:"metadata"`
	// The current state of the Tool.
	State pulumi.StringOutput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// The date and time the Tool was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The date and time the Tool was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// (Updatable) The configuration and type of Tool.
	ToolConfig AgentToolToolConfigOutput `pulumi:"toolConfig"`
}

// NewAgentTool registers a new resource with the given unique name, arguments, and options.
func NewAgentTool(ctx *pulumi.Context,
	name string, args *AgentToolArgs, opts ...pulumi.ResourceOption) (*AgentTool, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AgentId == nil {
		return nil, errors.New("invalid value for required argument 'AgentId'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.ToolConfig == nil {
		return nil, errors.New("invalid value for required argument 'ToolConfig'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AgentTool
	err := ctx.RegisterResource("oci:GenerativeAi/agentTool:AgentTool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAgentTool gets an existing AgentTool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAgentTool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AgentToolState, opts ...pulumi.ResourceOption) (*AgentTool, error) {
	var resource AgentTool
	err := ctx.ReadResource("oci:GenerativeAi/agentTool:AgentTool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AgentTool resources.
type agentToolState struct {
	// The OCID of the agent that this Tool is attached to.
	AgentId *string `pulumi:"agentId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) Description about the Tool.
	Description *string `pulumi:"description"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// (Updatable) Key-value pairs to allow additional configurations.
	Metadata map[string]string `pulumi:"metadata"`
	// The current state of the Tool.
	State *string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time the Tool was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the Tool was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeUpdated *string `pulumi:"timeUpdated"`
	// (Updatable) The configuration and type of Tool.
	ToolConfig *AgentToolToolConfig `pulumi:"toolConfig"`
}

type AgentToolState struct {
	// The OCID of the agent that this Tool is attached to.
	AgentId pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) Description about the Tool.
	Description pulumi.StringPtrInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput
	// (Updatable) Key-value pairs to allow additional configurations.
	Metadata pulumi.StringMapInput
	// The current state of the Tool.
	State pulumi.StringPtrInput
	// System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput
	// The date and time the Tool was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
	// The date and time the Tool was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeUpdated pulumi.StringPtrInput
	// (Updatable) The configuration and type of Tool.
	ToolConfig AgentToolToolConfigPtrInput
}

func (AgentToolState) ElementType() reflect.Type {
	return reflect.TypeOf((*agentToolState)(nil)).Elem()
}

type agentToolArgs struct {
	// The OCID of the agent that this Tool is attached to.
	AgentId string `pulumi:"agentId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) Description about the Tool.
	Description string `pulumi:"description"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// (Updatable) Key-value pairs to allow additional configurations.
	Metadata map[string]string `pulumi:"metadata"`
	// (Updatable) The configuration and type of Tool.
	ToolConfig AgentToolToolConfig `pulumi:"toolConfig"`
}

// The set of arguments for constructing a AgentTool resource.
type AgentToolArgs struct {
	// The OCID of the agent that this Tool is attached to.
	AgentId pulumi.StringInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) Description about the Tool.
	Description pulumi.StringInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput
	// (Updatable) Key-value pairs to allow additional configurations.
	Metadata pulumi.StringMapInput
	// (Updatable) The configuration and type of Tool.
	ToolConfig AgentToolToolConfigInput
}

func (AgentToolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*agentToolArgs)(nil)).Elem()
}

type AgentToolInput interface {
	pulumi.Input

	ToAgentToolOutput() AgentToolOutput
	ToAgentToolOutputWithContext(ctx context.Context) AgentToolOutput
}

func (*AgentTool) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentTool)(nil)).Elem()
}

func (i *AgentTool) ToAgentToolOutput() AgentToolOutput {
	return i.ToAgentToolOutputWithContext(context.Background())
}

func (i *AgentTool) ToAgentToolOutputWithContext(ctx context.Context) AgentToolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentToolOutput)
}

// AgentToolArrayInput is an input type that accepts AgentToolArray and AgentToolArrayOutput values.
// You can construct a concrete instance of `AgentToolArrayInput` via:
//
//	AgentToolArray{ AgentToolArgs{...} }
type AgentToolArrayInput interface {
	pulumi.Input

	ToAgentToolArrayOutput() AgentToolArrayOutput
	ToAgentToolArrayOutputWithContext(context.Context) AgentToolArrayOutput
}

type AgentToolArray []AgentToolInput

func (AgentToolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AgentTool)(nil)).Elem()
}

func (i AgentToolArray) ToAgentToolArrayOutput() AgentToolArrayOutput {
	return i.ToAgentToolArrayOutputWithContext(context.Background())
}

func (i AgentToolArray) ToAgentToolArrayOutputWithContext(ctx context.Context) AgentToolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentToolArrayOutput)
}

// AgentToolMapInput is an input type that accepts AgentToolMap and AgentToolMapOutput values.
// You can construct a concrete instance of `AgentToolMapInput` via:
//
//	AgentToolMap{ "key": AgentToolArgs{...} }
type AgentToolMapInput interface {
	pulumi.Input

	ToAgentToolMapOutput() AgentToolMapOutput
	ToAgentToolMapOutputWithContext(context.Context) AgentToolMapOutput
}

type AgentToolMap map[string]AgentToolInput

func (AgentToolMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AgentTool)(nil)).Elem()
}

func (i AgentToolMap) ToAgentToolMapOutput() AgentToolMapOutput {
	return i.ToAgentToolMapOutputWithContext(context.Background())
}

func (i AgentToolMap) ToAgentToolMapOutputWithContext(ctx context.Context) AgentToolMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentToolMapOutput)
}

type AgentToolOutput struct{ *pulumi.OutputState }

func (AgentToolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentTool)(nil)).Elem()
}

func (o AgentToolOutput) ToAgentToolOutput() AgentToolOutput {
	return o
}

func (o AgentToolOutput) ToAgentToolOutputWithContext(ctx context.Context) AgentToolOutput {
	return o
}

// The OCID of the agent that this Tool is attached to.
func (o AgentToolOutput) AgentId() pulumi.StringOutput {
	return o.ApplyT(func(v *AgentTool) pulumi.StringOutput { return v.AgentId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o AgentToolOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *AgentTool) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o AgentToolOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AgentTool) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) Description about the Tool.
func (o AgentToolOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *AgentTool) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o AgentToolOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *AgentTool) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o AgentToolOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AgentTool) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// (Updatable) Key-value pairs to allow additional configurations.
func (o AgentToolOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AgentTool) pulumi.StringMapOutput { return v.Metadata }).(pulumi.StringMapOutput)
}

// The current state of the Tool.
func (o AgentToolOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *AgentTool) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o AgentToolOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AgentTool) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The date and time the Tool was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
func (o AgentToolOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *AgentTool) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the Tool was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
func (o AgentToolOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *AgentTool) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

// (Updatable) The configuration and type of Tool.
func (o AgentToolOutput) ToolConfig() AgentToolToolConfigOutput {
	return o.ApplyT(func(v *AgentTool) AgentToolToolConfigOutput { return v.ToolConfig }).(AgentToolToolConfigOutput)
}

type AgentToolArrayOutput struct{ *pulumi.OutputState }

func (AgentToolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AgentTool)(nil)).Elem()
}

func (o AgentToolArrayOutput) ToAgentToolArrayOutput() AgentToolArrayOutput {
	return o
}

func (o AgentToolArrayOutput) ToAgentToolArrayOutputWithContext(ctx context.Context) AgentToolArrayOutput {
	return o
}

func (o AgentToolArrayOutput) Index(i pulumi.IntInput) AgentToolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AgentTool {
		return vs[0].([]*AgentTool)[vs[1].(int)]
	}).(AgentToolOutput)
}

type AgentToolMapOutput struct{ *pulumi.OutputState }

func (AgentToolMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AgentTool)(nil)).Elem()
}

func (o AgentToolMapOutput) ToAgentToolMapOutput() AgentToolMapOutput {
	return o
}

func (o AgentToolMapOutput) ToAgentToolMapOutputWithContext(ctx context.Context) AgentToolMapOutput {
	return o
}

func (o AgentToolMapOutput) MapIndex(k pulumi.StringInput) AgentToolOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AgentTool {
		return vs[0].(map[string]*AgentTool)[vs[1].(string)]
	}).(AgentToolOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AgentToolInput)(nil)).Elem(), &AgentTool{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentToolArrayInput)(nil)).Elem(), AgentToolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentToolMapInput)(nil)).Elem(), AgentToolMap{})
	pulumi.RegisterOutputType(AgentToolOutput{})
	pulumi.RegisterOutputType(AgentToolArrayOutput{})
	pulumi.RegisterOutputType(AgentToolMapOutput{})
}
