// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package generativeai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Tool resource in Oracle Cloud Infrastructure Generative Ai Agent service.
//
// Gets information about a tool.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/generativeai"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := generativeai.GetAgentTool(ctx, &generativeai.GetAgentToolArgs{
//				ToolId: testToolOciGenerativeAiAgentTool.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAgentTool(ctx *pulumi.Context, args *LookupAgentToolArgs, opts ...pulumi.InvokeOption) (*LookupAgentToolResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAgentToolResult
	err := ctx.Invoke("oci:GenerativeAi/getAgentTool:getAgentTool", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAgentTool.
type LookupAgentToolArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Tool.
	ToolId string `pulumi:"toolId"`
}

// A collection of values returned by getAgentTool.
type LookupAgentToolResult struct {
	// The OCID of the agent that this Tool is attached to.
	AgentId string `pulumi:"agentId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A description of the function.
	Description string `pulumi:"description"`
	// A user-friendly name. Does not have to be unique, and it's changeable.
	DisplayName string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Tool.
	Id string `pulumi:"id"`
	// Key-value pairs to allow additional configurations.
	Metadata map[string]string `pulumi:"metadata"`
	// The current state of the Tool.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time the Tool was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the Tool was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeUpdated string `pulumi:"timeUpdated"`
	// The configuration and type of Tool.
	ToolConfigs []GetAgentToolToolConfig `pulumi:"toolConfigs"`
	ToolId      string                   `pulumi:"toolId"`
}

func LookupAgentToolOutput(ctx *pulumi.Context, args LookupAgentToolOutputArgs, opts ...pulumi.InvokeOption) LookupAgentToolResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAgentToolResultOutput, error) {
			args := v.(LookupAgentToolArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:GenerativeAi/getAgentTool:getAgentTool", args, LookupAgentToolResultOutput{}, options).(LookupAgentToolResultOutput), nil
		}).(LookupAgentToolResultOutput)
}

// A collection of arguments for invoking getAgentTool.
type LookupAgentToolOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Tool.
	ToolId pulumi.StringInput `pulumi:"toolId"`
}

func (LookupAgentToolOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAgentToolArgs)(nil)).Elem()
}

// A collection of values returned by getAgentTool.
type LookupAgentToolResultOutput struct{ *pulumi.OutputState }

func (LookupAgentToolResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAgentToolResult)(nil)).Elem()
}

func (o LookupAgentToolResultOutput) ToLookupAgentToolResultOutput() LookupAgentToolResultOutput {
	return o
}

func (o LookupAgentToolResultOutput) ToLookupAgentToolResultOutputWithContext(ctx context.Context) LookupAgentToolResultOutput {
	return o
}

// The OCID of the agent that this Tool is attached to.
func (o LookupAgentToolResultOutput) AgentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAgentToolResult) string { return v.AgentId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o LookupAgentToolResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAgentToolResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o LookupAgentToolResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAgentToolResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A description of the function.
func (o LookupAgentToolResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAgentToolResult) string { return v.Description }).(pulumi.StringOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable.
func (o LookupAgentToolResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAgentToolResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o LookupAgentToolResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAgentToolResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Tool.
func (o LookupAgentToolResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAgentToolResult) string { return v.Id }).(pulumi.StringOutput)
}

// Key-value pairs to allow additional configurations.
func (o LookupAgentToolResultOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAgentToolResult) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// The current state of the Tool.
func (o LookupAgentToolResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAgentToolResult) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupAgentToolResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAgentToolResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The date and time the Tool was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
func (o LookupAgentToolResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAgentToolResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the Tool was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
func (o LookupAgentToolResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAgentToolResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The configuration and type of Tool.
func (o LookupAgentToolResultOutput) ToolConfigs() GetAgentToolToolConfigArrayOutput {
	return o.ApplyT(func(v LookupAgentToolResult) []GetAgentToolToolConfig { return v.ToolConfigs }).(GetAgentToolToolConfigArrayOutput)
}

func (o LookupAgentToolResultOutput) ToolId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAgentToolResult) string { return v.ToolId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAgentToolResultOutput{})
}
