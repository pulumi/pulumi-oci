// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package generativeai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Tools in Oracle Cloud Infrastructure Generative Ai Agent service.
//
// Gets a list of tools.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/generativeai"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := generativeai.GetAgentTools(ctx, &generativeai.GetAgentToolsArgs{
//				AgentId:       pulumi.StringRef(testAgent.Id),
//				CompartmentId: pulumi.StringRef(compartmentId),
//				DisplayName:   pulumi.StringRef(toolDisplayName),
//				State:         pulumi.StringRef(toolState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAgentTools(ctx *pulumi.Context, args *GetAgentToolsArgs, opts ...pulumi.InvokeOption) (*GetAgentToolsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAgentToolsResult
	err := ctx.Invoke("oci:GenerativeAi/getAgentTools:getAgentTools", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAgentTools.
type GetAgentToolsArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the agent.
	AgentId *string `pulumi:"agentId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
	CompartmentId *string `pulumi:"compartmentId"`
	// A filter to return only resources that match the given display name exactly.
	DisplayName *string               `pulumi:"displayName"`
	Filters     []GetAgentToolsFilter `pulumi:"filters"`
	// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
	State *string `pulumi:"state"`
}

// A collection of values returned by getAgentTools.
type GetAgentToolsResult struct {
	// The OCID of the agent that this Tool is attached to.
	AgentId *string `pulumi:"agentId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// A user-friendly name. Does not have to be unique, and it's changeable.
	DisplayName *string               `pulumi:"displayName"`
	Filters     []GetAgentToolsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The current state of the Tool.
	State *string `pulumi:"state"`
	// The list of tool_collection.
	ToolCollections []GetAgentToolsToolCollection `pulumi:"toolCollections"`
}

func GetAgentToolsOutput(ctx *pulumi.Context, args GetAgentToolsOutputArgs, opts ...pulumi.InvokeOption) GetAgentToolsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetAgentToolsResultOutput, error) {
			args := v.(GetAgentToolsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:GenerativeAi/getAgentTools:getAgentTools", args, GetAgentToolsResultOutput{}, options).(GetAgentToolsResultOutput), nil
		}).(GetAgentToolsResultOutput)
}

// A collection of arguments for invoking getAgentTools.
type GetAgentToolsOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the agent.
	AgentId pulumi.StringPtrInput `pulumi:"agentId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the given display name exactly.
	DisplayName pulumi.StringPtrInput         `pulumi:"displayName"`
	Filters     GetAgentToolsFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetAgentToolsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAgentToolsArgs)(nil)).Elem()
}

// A collection of values returned by getAgentTools.
type GetAgentToolsResultOutput struct{ *pulumi.OutputState }

func (GetAgentToolsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAgentToolsResult)(nil)).Elem()
}

func (o GetAgentToolsResultOutput) ToGetAgentToolsResultOutput() GetAgentToolsResultOutput {
	return o
}

func (o GetAgentToolsResultOutput) ToGetAgentToolsResultOutputWithContext(ctx context.Context) GetAgentToolsResultOutput {
	return o
}

// The OCID of the agent that this Tool is attached to.
func (o GetAgentToolsResultOutput) AgentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAgentToolsResult) *string { return v.AgentId }).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o GetAgentToolsResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAgentToolsResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable.
func (o GetAgentToolsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAgentToolsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetAgentToolsResultOutput) Filters() GetAgentToolsFilterArrayOutput {
	return o.ApplyT(func(v GetAgentToolsResult) []GetAgentToolsFilter { return v.Filters }).(GetAgentToolsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAgentToolsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAgentToolsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The current state of the Tool.
func (o GetAgentToolsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAgentToolsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The list of tool_collection.
func (o GetAgentToolsResultOutput) ToolCollections() GetAgentToolsToolCollectionArrayOutput {
	return o.ApplyT(func(v GetAgentToolsResult) []GetAgentToolsToolCollection { return v.ToolCollections }).(GetAgentToolsToolCollectionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAgentToolsResultOutput{})
}
