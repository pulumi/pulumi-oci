// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package generativeai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Dedicated Ai Clusters in Oracle Cloud Infrastructure Generative Ai service.
//
// Lists the dedicated AI clusters in a specific compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/GenerativeAi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := GenerativeAi.GetDedicatedAiClusters(ctx, &generativeai.GetDedicatedAiClustersArgs{
//				CompartmentId: compartmentId,
//				DisplayName:   pulumi.StringRef(dedicatedAiClusterDisplayName),
//				Id:            pulumi.StringRef(dedicatedAiClusterId),
//				State:         pulumi.StringRef(dedicatedAiClusterState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDedicatedAiClusters(ctx *pulumi.Context, args *GetDedicatedAiClustersArgs, opts ...pulumi.InvokeOption) (*GetDedicatedAiClustersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDedicatedAiClustersResult
	err := ctx.Invoke("oci:GenerativeAi/getDedicatedAiClusters:getDedicatedAiClusters", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDedicatedAiClusters.
type GetDedicatedAiClustersArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the given display name exactly.
	DisplayName *string                        `pulumi:"displayName"`
	Filters     []GetDedicatedAiClustersFilter `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the dedicated AI cluster.
	Id *string `pulumi:"id"`
	// A filter to return only the dedicated AI clusters that their lifecycle state matches the given lifecycle state.
	State *string `pulumi:"state"`
}

// A collection of values returned by getDedicatedAiClusters.
type GetDedicatedAiClustersResult struct {
	// The compartment OCID to create the dedicated AI cluster in.
	CompartmentId string `pulumi:"compartmentId"`
	// The list of dedicated_ai_cluster_collection.
	DedicatedAiClusterCollections []GetDedicatedAiClustersDedicatedAiClusterCollection `pulumi:"dedicatedAiClusterCollections"`
	// A user-friendly name. Does not have to be unique, and it's changeable.
	DisplayName *string                        `pulumi:"displayName"`
	Filters     []GetDedicatedAiClustersFilter `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the dedicated AI cluster.
	Id *string `pulumi:"id"`
	// The current state of the dedicated AI cluster.
	State *string `pulumi:"state"`
}

func GetDedicatedAiClustersOutput(ctx *pulumi.Context, args GetDedicatedAiClustersOutputArgs, opts ...pulumi.InvokeOption) GetDedicatedAiClustersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDedicatedAiClustersResult, error) {
			args := v.(GetDedicatedAiClustersArgs)
			r, err := GetDedicatedAiClusters(ctx, &args, opts...)
			var s GetDedicatedAiClustersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDedicatedAiClustersResultOutput)
}

// A collection of arguments for invoking getDedicatedAiClusters.
type GetDedicatedAiClustersOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the given display name exactly.
	DisplayName pulumi.StringPtrInput                  `pulumi:"displayName"`
	Filters     GetDedicatedAiClustersFilterArrayInput `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the dedicated AI cluster.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return only the dedicated AI clusters that their lifecycle state matches the given lifecycle state.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetDedicatedAiClustersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedAiClustersArgs)(nil)).Elem()
}

// A collection of values returned by getDedicatedAiClusters.
type GetDedicatedAiClustersResultOutput struct{ *pulumi.OutputState }

func (GetDedicatedAiClustersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedAiClustersResult)(nil)).Elem()
}

func (o GetDedicatedAiClustersResultOutput) ToGetDedicatedAiClustersResultOutput() GetDedicatedAiClustersResultOutput {
	return o
}

func (o GetDedicatedAiClustersResultOutput) ToGetDedicatedAiClustersResultOutputWithContext(ctx context.Context) GetDedicatedAiClustersResultOutput {
	return o
}

// The compartment OCID to create the dedicated AI cluster in.
func (o GetDedicatedAiClustersResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedAiClustersResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The list of dedicated_ai_cluster_collection.
func (o GetDedicatedAiClustersResultOutput) DedicatedAiClusterCollections() GetDedicatedAiClustersDedicatedAiClusterCollectionArrayOutput {
	return o.ApplyT(func(v GetDedicatedAiClustersResult) []GetDedicatedAiClustersDedicatedAiClusterCollection {
		return v.DedicatedAiClusterCollections
	}).(GetDedicatedAiClustersDedicatedAiClusterCollectionArrayOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable.
func (o GetDedicatedAiClustersResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDedicatedAiClustersResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetDedicatedAiClustersResultOutput) Filters() GetDedicatedAiClustersFilterArrayOutput {
	return o.ApplyT(func(v GetDedicatedAiClustersResult) []GetDedicatedAiClustersFilter { return v.Filters }).(GetDedicatedAiClustersFilterArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the dedicated AI cluster.
func (o GetDedicatedAiClustersResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDedicatedAiClustersResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The current state of the dedicated AI cluster.
func (o GetDedicatedAiClustersResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDedicatedAiClustersResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDedicatedAiClustersResultOutput{})
}
