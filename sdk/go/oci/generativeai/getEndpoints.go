// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package generativeai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Endpoints in Oracle Cloud Infrastructure Generative Ai service.
//
// Lists the endpoints of a specific compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/GenerativeAi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := GenerativeAi.GetEndpoints(ctx, &generativeai.GetEndpointsArgs{
//				CompartmentId: _var.Compartment_id,
//				DisplayName:   pulumi.StringRef(_var.Endpoint_display_name),
//				Id:            pulumi.StringRef(_var.Endpoint_id),
//				State:         pulumi.StringRef(_var.Endpoint_state),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetEndpoints(ctx *pulumi.Context, args *GetEndpointsArgs, opts ...pulumi.InvokeOption) (*GetEndpointsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEndpointsResult
	err := ctx.Invoke("oci:GenerativeAi/getEndpoints:getEndpoints", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEndpoints.
type GetEndpointsArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the given display name exactly.
	DisplayName *string              `pulumi:"displayName"`
	Filters     []GetEndpointsFilter `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the endpoint.
	Id *string `pulumi:"id"`
	// A filter to return only resources that their lifecycle state matches the given lifecycle state.
	State *string `pulumi:"state"`
}

// A collection of values returned by getEndpoints.
type GetEndpointsResult struct {
	// The compartment OCID to create the endpoint in.
	CompartmentId string `pulumi:"compartmentId"`
	// A user-friendly name. Does not have to be unique, and it's changeable.
	DisplayName *string `pulumi:"displayName"`
	// The list of endpoint_collection.
	EndpointCollections []GetEndpointsEndpointCollection `pulumi:"endpointCollections"`
	Filters             []GetEndpointsFilter             `pulumi:"filters"`
	// An OCID that uniquely identifies this endpoint resource.
	Id *string `pulumi:"id"`
	// The current state of the endpoint.
	State *string `pulumi:"state"`
}

func GetEndpointsOutput(ctx *pulumi.Context, args GetEndpointsOutputArgs, opts ...pulumi.InvokeOption) GetEndpointsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetEndpointsResult, error) {
			args := v.(GetEndpointsArgs)
			r, err := GetEndpoints(ctx, &args, opts...)
			var s GetEndpointsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetEndpointsResultOutput)
}

// A collection of arguments for invoking getEndpoints.
type GetEndpointsOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the given display name exactly.
	DisplayName pulumi.StringPtrInput        `pulumi:"displayName"`
	Filters     GetEndpointsFilterArrayInput `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the endpoint.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return only resources that their lifecycle state matches the given lifecycle state.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetEndpointsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointsArgs)(nil)).Elem()
}

// A collection of values returned by getEndpoints.
type GetEndpointsResultOutput struct{ *pulumi.OutputState }

func (GetEndpointsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointsResult)(nil)).Elem()
}

func (o GetEndpointsResultOutput) ToGetEndpointsResultOutput() GetEndpointsResultOutput {
	return o
}

func (o GetEndpointsResultOutput) ToGetEndpointsResultOutputWithContext(ctx context.Context) GetEndpointsResultOutput {
	return o
}

// The compartment OCID to create the endpoint in.
func (o GetEndpointsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable.
func (o GetEndpointsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEndpointsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The list of endpoint_collection.
func (o GetEndpointsResultOutput) EndpointCollections() GetEndpointsEndpointCollectionArrayOutput {
	return o.ApplyT(func(v GetEndpointsResult) []GetEndpointsEndpointCollection { return v.EndpointCollections }).(GetEndpointsEndpointCollectionArrayOutput)
}

func (o GetEndpointsResultOutput) Filters() GetEndpointsFilterArrayOutput {
	return o.ApplyT(func(v GetEndpointsResult) []GetEndpointsFilter { return v.Filters }).(GetEndpointsFilterArrayOutput)
}

// An OCID that uniquely identifies this endpoint resource.
func (o GetEndpointsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEndpointsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The current state of the endpoint.
func (o GetEndpointsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEndpointsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEndpointsResultOutput{})
}
