// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package globallydistributeddatabase

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Sharded Database resource in Oracle Cloud Infrastructure Globally Distributed Database service.
//
// Gets the details of the Sharded database identified by given id.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/globallydistributeddatabase"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := globallydistributeddatabase.GetShardedDatabase(ctx, &globallydistributeddatabase.GetShardedDatabaseArgs{
//				ShardedDatabaseId: testShardedDatabaseOciGloballyDistributedDatabaseShardedDatabase.Id,
//				Metadata:          pulumi.StringRef(shardedDatabaseMetadata),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupShardedDatabase(ctx *pulumi.Context, args *LookupShardedDatabaseArgs, opts ...pulumi.InvokeOption) (*LookupShardedDatabaseResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupShardedDatabaseResult
	err := ctx.Invoke("oci:GloballyDistributedDatabase/getShardedDatabase:getShardedDatabase", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getShardedDatabase.
type LookupShardedDatabaseArgs struct {
	// Comma separated names of argument corresponding to which metadata need to be retrived, namely VM_CLUSTER_INFO, ADDITIONAL_RESOURCE_INFO. An example is metadata=VM_CLUSTER_INFO,ADDITIONAL_RESOURCE_INFO.
	Metadata *string `pulumi:"metadata"`
	// Sharded Database identifier
	ShardedDatabaseId string `pulumi:"shardedDatabaseId"`
}

// A collection of values returned by getShardedDatabase.
type LookupShardedDatabaseResult struct {
	CaSignedCertificate string `pulumi:"caSignedCertificate"`
	// Details of ATP-D based catalogs.
	CatalogDetails []GetShardedDatabaseCatalogDetail `pulumi:"catalogDetails"`
	// The character set for the database.
	CharacterSet string `pulumi:"characterSet"`
	// The default number of unique chunks in a shardspace. The value of chunks must be greater than 2 times the size of the largest shardgroup in any shardspace.
	Chunks int `pulumi:"chunks"`
	// The certificate common name used in all cloudAutonomousVmClusters for the sharded database topology. Eg. Production. All the clusters used in one sharded database topology shall have same CABundle setup. Valid characterset for clusterCertificateCommonName include uppercase or lowercase letters, numbers, hyphens, underscores, and period.
	ClusterCertificateCommonName string `pulumi:"clusterCertificateCommonName"`
	// Identifier of the compartment in which sharded database exists.
	CompartmentId                        string   `pulumi:"compartmentId"`
	ConfigureGsmsTrigger                 int      `pulumi:"configureGsmsTrigger"`
	ConfigureGsmsTriggerIsLatestGsmImage bool     `pulumi:"configureGsmsTriggerIsLatestGsmImage"`
	ConfigureGsmsTriggerOldGsmNames      []string `pulumi:"configureGsmsTriggerOldGsmNames"`
	ConfigureShardingTrigger             int      `pulumi:"configureShardingTrigger"`
	// Details of sharded database connection String.
	ConnectionStrings []GetShardedDatabaseConnectionString `pulumi:"connectionStrings"`
	// The database deployment type.
	DbDeploymentType string `pulumi:"dbDeploymentType"`
	// Oracle Database version number.
	DbVersion string `pulumi:"dbVersion"`
	// Possible workload types.
	DbWorkload string `pulumi:"dbWorkload"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Oracle sharded database display name.
	DisplayName                                 string `pulumi:"displayName"`
	DownloadGsmCertificateSigningRequestTrigger int    `pulumi:"downloadGsmCertificateSigningRequestTrigger"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags                                map[string]string `pulumi:"freeformTags"`
	GenerateGsmCertificateSigningRequestTrigger int               `pulumi:"generateGsmCertificateSigningRequestTrigger"`
	GenerateWalletPassword                      string            `pulumi:"generateWalletPassword"`
	GenerateWalletTrigger                       int               `pulumi:"generateWalletTrigger"`
	GetConnectionStringTrigger                  int               `pulumi:"getConnectionStringTrigger"`
	// Details of GSM instances for the sharded database.
	Gsms []GetShardedDatabaseGsm `pulumi:"gsms"`
	// Sharded Database identifier
	Id             string `pulumi:"id"`
	LifecycleState string `pulumi:"lifecycleState"`
	// Detailed message for the lifecycle state.
	LifecycleStateDetails string `pulumi:"lifecycleStateDetails"`
	// The GSM listener port number.
	ListenerPort int `pulumi:"listenerPort"`
	// The TLS listener port number for sharded database.
	ListenerPortTls int `pulumi:"listenerPortTls"`
	// Additional metadata related to shard's underlying supporting resource.
	Metadata *string `pulumi:"metadata"`
	// The national character set for the database.
	NcharacterSet string `pulumi:"ncharacterSet"`
	// Ons local port number.
	OnsPortLocal int `pulumi:"onsPortLocal"`
	// Ons remote port number.
	OnsPortRemote   int                                `pulumi:"onsPortRemote"`
	PatchOperations []GetShardedDatabasePatchOperation `pulumi:"patchOperations"`
	// Unique prefix for the sharded database.
	Prefix string `pulumi:"prefix"`
	// The OCID of private endpoint being used by the sharded database.
	PrivateEndpoint string `pulumi:"privateEndpoint"`
	// The Replication factor for RAFT replication based sharded database. Currently supported values are 3, 5 and 7.
	ReplicationFactor int `pulumi:"replicationFactor"`
	// The Replication method for sharded database. Use RAFT for Raft replication, and DG for DataGuard. If replicationMethod is not provided, it defaults to DG.
	ReplicationMethod string `pulumi:"replicationMethod"`
	// For RAFT replication based sharded database, the value should be atleast twice the number of shards.
	ReplicationUnit int `pulumi:"replicationUnit"`
	// Details of ATP-D based shards.
	ShardDetails      []GetShardedDatabaseShardDetail `pulumi:"shardDetails"`
	ShardedDatabaseId string                          `pulumi:"shardedDatabaseId"`
	// Sharding Method.
	ShardingMethod       string `pulumi:"shardingMethod"`
	StartDatabaseTrigger int    `pulumi:"startDatabaseTrigger"`
	// Lifecycle states for sharded databases.
	State               string `pulumi:"state"`
	StopDatabaseTrigger int    `pulumi:"stopDatabaseTrigger"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time the the Sharded Database was created. An RFC3339 formatted datetime string
	TimeCreated string `pulumi:"timeCreated"`
	// The time the Sharded Database was last updated. An RFC3339 formatted datetime string
	TimeUpdated string `pulumi:"timeUpdated"`
	// Timezone associated with the sharded database.
	TimeZone                                        string `pulumi:"timeZone"`
	UploadSignedCertificateAndGenerateWalletTrigger int    `pulumi:"uploadSignedCertificateAndGenerateWalletTrigger"`
	ValidateNetworkTrigger                          int    `pulumi:"validateNetworkTrigger"`
}

func LookupShardedDatabaseOutput(ctx *pulumi.Context, args LookupShardedDatabaseOutputArgs, opts ...pulumi.InvokeOption) LookupShardedDatabaseResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupShardedDatabaseResultOutput, error) {
			args := v.(LookupShardedDatabaseArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:GloballyDistributedDatabase/getShardedDatabase:getShardedDatabase", args, LookupShardedDatabaseResultOutput{}, options).(LookupShardedDatabaseResultOutput), nil
		}).(LookupShardedDatabaseResultOutput)
}

// A collection of arguments for invoking getShardedDatabase.
type LookupShardedDatabaseOutputArgs struct {
	// Comma separated names of argument corresponding to which metadata need to be retrived, namely VM_CLUSTER_INFO, ADDITIONAL_RESOURCE_INFO. An example is metadata=VM_CLUSTER_INFO,ADDITIONAL_RESOURCE_INFO.
	Metadata pulumi.StringPtrInput `pulumi:"metadata"`
	// Sharded Database identifier
	ShardedDatabaseId pulumi.StringInput `pulumi:"shardedDatabaseId"`
}

func (LookupShardedDatabaseOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupShardedDatabaseArgs)(nil)).Elem()
}

// A collection of values returned by getShardedDatabase.
type LookupShardedDatabaseResultOutput struct{ *pulumi.OutputState }

func (LookupShardedDatabaseResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupShardedDatabaseResult)(nil)).Elem()
}

func (o LookupShardedDatabaseResultOutput) ToLookupShardedDatabaseResultOutput() LookupShardedDatabaseResultOutput {
	return o
}

func (o LookupShardedDatabaseResultOutput) ToLookupShardedDatabaseResultOutputWithContext(ctx context.Context) LookupShardedDatabaseResultOutput {
	return o
}

func (o LookupShardedDatabaseResultOutput) CaSignedCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) string { return v.CaSignedCertificate }).(pulumi.StringOutput)
}

// Details of ATP-D based catalogs.
func (o LookupShardedDatabaseResultOutput) CatalogDetails() GetShardedDatabaseCatalogDetailArrayOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) []GetShardedDatabaseCatalogDetail { return v.CatalogDetails }).(GetShardedDatabaseCatalogDetailArrayOutput)
}

// The character set for the database.
func (o LookupShardedDatabaseResultOutput) CharacterSet() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) string { return v.CharacterSet }).(pulumi.StringOutput)
}

// The default number of unique chunks in a shardspace. The value of chunks must be greater than 2 times the size of the largest shardgroup in any shardspace.
func (o LookupShardedDatabaseResultOutput) Chunks() pulumi.IntOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) int { return v.Chunks }).(pulumi.IntOutput)
}

// The certificate common name used in all cloudAutonomousVmClusters for the sharded database topology. Eg. Production. All the clusters used in one sharded database topology shall have same CABundle setup. Valid characterset for clusterCertificateCommonName include uppercase or lowercase letters, numbers, hyphens, underscores, and period.
func (o LookupShardedDatabaseResultOutput) ClusterCertificateCommonName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) string { return v.ClusterCertificateCommonName }).(pulumi.StringOutput)
}

// Identifier of the compartment in which sharded database exists.
func (o LookupShardedDatabaseResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o LookupShardedDatabaseResultOutput) ConfigureGsmsTrigger() pulumi.IntOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) int { return v.ConfigureGsmsTrigger }).(pulumi.IntOutput)
}

func (o LookupShardedDatabaseResultOutput) ConfigureGsmsTriggerIsLatestGsmImage() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) bool { return v.ConfigureGsmsTriggerIsLatestGsmImage }).(pulumi.BoolOutput)
}

func (o LookupShardedDatabaseResultOutput) ConfigureGsmsTriggerOldGsmNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) []string { return v.ConfigureGsmsTriggerOldGsmNames }).(pulumi.StringArrayOutput)
}

func (o LookupShardedDatabaseResultOutput) ConfigureShardingTrigger() pulumi.IntOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) int { return v.ConfigureShardingTrigger }).(pulumi.IntOutput)
}

// Details of sharded database connection String.
func (o LookupShardedDatabaseResultOutput) ConnectionStrings() GetShardedDatabaseConnectionStringArrayOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) []GetShardedDatabaseConnectionString { return v.ConnectionStrings }).(GetShardedDatabaseConnectionStringArrayOutput)
}

// The database deployment type.
func (o LookupShardedDatabaseResultOutput) DbDeploymentType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) string { return v.DbDeploymentType }).(pulumi.StringOutput)
}

// Oracle Database version number.
func (o LookupShardedDatabaseResultOutput) DbVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) string { return v.DbVersion }).(pulumi.StringOutput)
}

// Possible workload types.
func (o LookupShardedDatabaseResultOutput) DbWorkload() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) string { return v.DbWorkload }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupShardedDatabaseResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Oracle sharded database display name.
func (o LookupShardedDatabaseResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

func (o LookupShardedDatabaseResultOutput) DownloadGsmCertificateSigningRequestTrigger() pulumi.IntOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) int { return v.DownloadGsmCertificateSigningRequestTrigger }).(pulumi.IntOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupShardedDatabaseResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

func (o LookupShardedDatabaseResultOutput) GenerateGsmCertificateSigningRequestTrigger() pulumi.IntOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) int { return v.GenerateGsmCertificateSigningRequestTrigger }).(pulumi.IntOutput)
}

func (o LookupShardedDatabaseResultOutput) GenerateWalletPassword() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) string { return v.GenerateWalletPassword }).(pulumi.StringOutput)
}

func (o LookupShardedDatabaseResultOutput) GenerateWalletTrigger() pulumi.IntOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) int { return v.GenerateWalletTrigger }).(pulumi.IntOutput)
}

func (o LookupShardedDatabaseResultOutput) GetConnectionStringTrigger() pulumi.IntOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) int { return v.GetConnectionStringTrigger }).(pulumi.IntOutput)
}

// Details of GSM instances for the sharded database.
func (o LookupShardedDatabaseResultOutput) Gsms() GetShardedDatabaseGsmArrayOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) []GetShardedDatabaseGsm { return v.Gsms }).(GetShardedDatabaseGsmArrayOutput)
}

// Sharded Database identifier
func (o LookupShardedDatabaseResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupShardedDatabaseResultOutput) LifecycleState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) string { return v.LifecycleState }).(pulumi.StringOutput)
}

// Detailed message for the lifecycle state.
func (o LookupShardedDatabaseResultOutput) LifecycleStateDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) string { return v.LifecycleStateDetails }).(pulumi.StringOutput)
}

// The GSM listener port number.
func (o LookupShardedDatabaseResultOutput) ListenerPort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) int { return v.ListenerPort }).(pulumi.IntOutput)
}

// The TLS listener port number for sharded database.
func (o LookupShardedDatabaseResultOutput) ListenerPortTls() pulumi.IntOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) int { return v.ListenerPortTls }).(pulumi.IntOutput)
}

// Additional metadata related to shard's underlying supporting resource.
func (o LookupShardedDatabaseResultOutput) Metadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) *string { return v.Metadata }).(pulumi.StringPtrOutput)
}

// The national character set for the database.
func (o LookupShardedDatabaseResultOutput) NcharacterSet() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) string { return v.NcharacterSet }).(pulumi.StringOutput)
}

// Ons local port number.
func (o LookupShardedDatabaseResultOutput) OnsPortLocal() pulumi.IntOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) int { return v.OnsPortLocal }).(pulumi.IntOutput)
}

// Ons remote port number.
func (o LookupShardedDatabaseResultOutput) OnsPortRemote() pulumi.IntOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) int { return v.OnsPortRemote }).(pulumi.IntOutput)
}

func (o LookupShardedDatabaseResultOutput) PatchOperations() GetShardedDatabasePatchOperationArrayOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) []GetShardedDatabasePatchOperation { return v.PatchOperations }).(GetShardedDatabasePatchOperationArrayOutput)
}

// Unique prefix for the sharded database.
func (o LookupShardedDatabaseResultOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) string { return v.Prefix }).(pulumi.StringOutput)
}

// The OCID of private endpoint being used by the sharded database.
func (o LookupShardedDatabaseResultOutput) PrivateEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) string { return v.PrivateEndpoint }).(pulumi.StringOutput)
}

// The Replication factor for RAFT replication based sharded database. Currently supported values are 3, 5 and 7.
func (o LookupShardedDatabaseResultOutput) ReplicationFactor() pulumi.IntOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) int { return v.ReplicationFactor }).(pulumi.IntOutput)
}

// The Replication method for sharded database. Use RAFT for Raft replication, and DG for DataGuard. If replicationMethod is not provided, it defaults to DG.
func (o LookupShardedDatabaseResultOutput) ReplicationMethod() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) string { return v.ReplicationMethod }).(pulumi.StringOutput)
}

// For RAFT replication based sharded database, the value should be atleast twice the number of shards.
func (o LookupShardedDatabaseResultOutput) ReplicationUnit() pulumi.IntOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) int { return v.ReplicationUnit }).(pulumi.IntOutput)
}

// Details of ATP-D based shards.
func (o LookupShardedDatabaseResultOutput) ShardDetails() GetShardedDatabaseShardDetailArrayOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) []GetShardedDatabaseShardDetail { return v.ShardDetails }).(GetShardedDatabaseShardDetailArrayOutput)
}

func (o LookupShardedDatabaseResultOutput) ShardedDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) string { return v.ShardedDatabaseId }).(pulumi.StringOutput)
}

// Sharding Method.
func (o LookupShardedDatabaseResultOutput) ShardingMethod() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) string { return v.ShardingMethod }).(pulumi.StringOutput)
}

func (o LookupShardedDatabaseResultOutput) StartDatabaseTrigger() pulumi.IntOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) int { return v.StartDatabaseTrigger }).(pulumi.IntOutput)
}

// Lifecycle states for sharded databases.
func (o LookupShardedDatabaseResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupShardedDatabaseResultOutput) StopDatabaseTrigger() pulumi.IntOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) int { return v.StopDatabaseTrigger }).(pulumi.IntOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupShardedDatabaseResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The time the the Sharded Database was created. An RFC3339 formatted datetime string
func (o LookupShardedDatabaseResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the Sharded Database was last updated. An RFC3339 formatted datetime string
func (o LookupShardedDatabaseResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Timezone associated with the sharded database.
func (o LookupShardedDatabaseResultOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) string { return v.TimeZone }).(pulumi.StringOutput)
}

func (o LookupShardedDatabaseResultOutput) UploadSignedCertificateAndGenerateWalletTrigger() pulumi.IntOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) int { return v.UploadSignedCertificateAndGenerateWalletTrigger }).(pulumi.IntOutput)
}

func (o LookupShardedDatabaseResultOutput) ValidateNetworkTrigger() pulumi.IntOutput {
	return o.ApplyT(func(v LookupShardedDatabaseResult) int { return v.ValidateNetworkTrigger }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupShardedDatabaseResultOutput{})
}
