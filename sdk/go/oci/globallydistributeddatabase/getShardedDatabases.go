// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package globallydistributeddatabase

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Sharded Databases in Oracle Cloud Infrastructure Globally Distributed Database service.
//
// List of Sharded databases.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/globallydistributeddatabase"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := globallydistributeddatabase.GetShardedDatabases(ctx, &globallydistributeddatabase.GetShardedDatabasesArgs{
//				CompartmentId: compartmentId,
//				DisplayName:   pulumi.StringRef(shardedDatabaseDisplayName),
//				State:         pulumi.StringRef(shardedDatabaseState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetShardedDatabases(ctx *pulumi.Context, args *GetShardedDatabasesArgs, opts ...pulumi.InvokeOption) (*GetShardedDatabasesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetShardedDatabasesResult
	err := ctx.Invoke("oci:GloballyDistributedDatabase/getShardedDatabases:getShardedDatabases", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getShardedDatabases.
type GetShardedDatabasesArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only sharded databases that match the entire name given. The match is not case sensitive.
	DisplayName *string                     `pulumi:"displayName"`
	Filters     []GetShardedDatabasesFilter `pulumi:"filters"`
	// A filter to return only resources their lifecycleState matches the given lifecycleState.
	State *string `pulumi:"state"`
}

// A collection of values returned by getShardedDatabases.
type GetShardedDatabasesResult struct {
	// Identifier of the compartment in which sharded database exists.
	CompartmentId string `pulumi:"compartmentId"`
	// Oracle sharded database display name.
	DisplayName *string                     `pulumi:"displayName"`
	Filters     []GetShardedDatabasesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of sharded_database_collection.
	ShardedDatabaseCollections []GetShardedDatabasesShardedDatabaseCollection `pulumi:"shardedDatabaseCollections"`
	// Lifecycle states for sharded databases.
	State *string `pulumi:"state"`
}

func GetShardedDatabasesOutput(ctx *pulumi.Context, args GetShardedDatabasesOutputArgs, opts ...pulumi.InvokeOption) GetShardedDatabasesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetShardedDatabasesResultOutput, error) {
			args := v.(GetShardedDatabasesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:GloballyDistributedDatabase/getShardedDatabases:getShardedDatabases", args, GetShardedDatabasesResultOutput{}, options).(GetShardedDatabasesResultOutput), nil
		}).(GetShardedDatabasesResultOutput)
}

// A collection of arguments for invoking getShardedDatabases.
type GetShardedDatabasesOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only sharded databases that match the entire name given. The match is not case sensitive.
	DisplayName pulumi.StringPtrInput               `pulumi:"displayName"`
	Filters     GetShardedDatabasesFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources their lifecycleState matches the given lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetShardedDatabasesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetShardedDatabasesArgs)(nil)).Elem()
}

// A collection of values returned by getShardedDatabases.
type GetShardedDatabasesResultOutput struct{ *pulumi.OutputState }

func (GetShardedDatabasesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetShardedDatabasesResult)(nil)).Elem()
}

func (o GetShardedDatabasesResultOutput) ToGetShardedDatabasesResultOutput() GetShardedDatabasesResultOutput {
	return o
}

func (o GetShardedDatabasesResultOutput) ToGetShardedDatabasesResultOutputWithContext(ctx context.Context) GetShardedDatabasesResultOutput {
	return o
}

// Identifier of the compartment in which sharded database exists.
func (o GetShardedDatabasesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabasesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Oracle sharded database display name.
func (o GetShardedDatabasesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetShardedDatabasesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetShardedDatabasesResultOutput) Filters() GetShardedDatabasesFilterArrayOutput {
	return o.ApplyT(func(v GetShardedDatabasesResult) []GetShardedDatabasesFilter { return v.Filters }).(GetShardedDatabasesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetShardedDatabasesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabasesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of sharded_database_collection.
func (o GetShardedDatabasesResultOutput) ShardedDatabaseCollections() GetShardedDatabasesShardedDatabaseCollectionArrayOutput {
	return o.ApplyT(func(v GetShardedDatabasesResult) []GetShardedDatabasesShardedDatabaseCollection {
		return v.ShardedDatabaseCollections
	}).(GetShardedDatabasesShardedDatabaseCollectionArrayOutput)
}

// Lifecycle states for sharded databases.
func (o GetShardedDatabasesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetShardedDatabasesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetShardedDatabasesResultOutput{})
}
