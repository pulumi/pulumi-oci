// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package globallydistributeddatabase

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ShardedDatabaseCatalogDetail struct {
	// Admin password for the catalog database.
	AdminPassword string `pulumi:"adminPassword"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud Autonomous Exadata VM Cluster.
	CloudAutonomousVmClusterId string `pulumi:"cloudAutonomousVmClusterId"`
	// The compute count for the catalog database. It has to be in multiple of 2.
	ComputeCount float64 `pulumi:"computeCount"`
	// Identifier of the underlying container database.
	ContainerDatabaseId *string `pulumi:"containerDatabaseId"`
	// Identifier of the underlying container database parent.
	ContainerDatabaseParentId *string `pulumi:"containerDatabaseParentId"`
	// The data disk group size to be allocated in GBs for the catalog database.
	DataStorageSizeInGbs float64 `pulumi:"dataStorageSizeInGbs"`
	// Details of encryption key to be used to encrypt data for shards and catalog for sharded database. For system-defined sharding type, all shards have to use same encryptionKeyDetails. For system-defined sharding, if encryptionKeyDetails are not specified for catalog, then Oracle managed key will be used for catalog. For user-defined sharding type, if encryptionKeyDetails are not provided for any shard or catalog, then Oracle managed key will be used for such shard or catalog. For system-defined or user-defined sharding type, if the shard or catalog has a peer in region other than primary shard or catalog region, then make sure to provide virtual vault for such shard or catalog, which is also replicated to peer region (the region where peer or standby shard or catalog exists).
	EncryptionKeyDetails *ShardedDatabaseCatalogDetailEncryptionKeyDetails `pulumi:"encryptionKeyDetails"`
	// Determines the auto-scaling mode for the catalog database.
	IsAutoScalingEnabled bool `pulumi:"isAutoScalingEnabled"`
	// Additional metadata related to shard's underlying supporting resource.
	Metadata map[string]string `pulumi:"metadata"`
	// Name of the shard.
	Name *string `pulumi:"name"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the peer cloud Autonomous Exadata VM Cluster.
	PeerCloudAutonomousVmClusterId *string `pulumi:"peerCloudAutonomousVmClusterId"`
	// Name of the shard-group to which the shard belongs.
	ShardGroup *string `pulumi:"shardGroup"`
	// Status of shard or catalog or gsm for the sharded database.
	Status *string `pulumi:"status"`
	// Identifier of the underlying supporting resource.
	SupportingResourceId *string `pulumi:"supportingResourceId"`
	// The time the the Sharded Database was created. An RFC3339 formatted datetime string
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the ssl certificate associated with shard expires. An RFC3339 formatted datetime string
	TimeSslCertificateExpires *string `pulumi:"timeSslCertificateExpires"`
	// The time the Sharded Database was last updated. An RFC3339 formatted datetime string
	TimeUpdated *string `pulumi:"timeUpdated"`
}

// ShardedDatabaseCatalogDetailInput is an input type that accepts ShardedDatabaseCatalogDetailArgs and ShardedDatabaseCatalogDetailOutput values.
// You can construct a concrete instance of `ShardedDatabaseCatalogDetailInput` via:
//
//	ShardedDatabaseCatalogDetailArgs{...}
type ShardedDatabaseCatalogDetailInput interface {
	pulumi.Input

	ToShardedDatabaseCatalogDetailOutput() ShardedDatabaseCatalogDetailOutput
	ToShardedDatabaseCatalogDetailOutputWithContext(context.Context) ShardedDatabaseCatalogDetailOutput
}

type ShardedDatabaseCatalogDetailArgs struct {
	// Admin password for the catalog database.
	AdminPassword pulumi.StringInput `pulumi:"adminPassword"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud Autonomous Exadata VM Cluster.
	CloudAutonomousVmClusterId pulumi.StringInput `pulumi:"cloudAutonomousVmClusterId"`
	// The compute count for the catalog database. It has to be in multiple of 2.
	ComputeCount pulumi.Float64Input `pulumi:"computeCount"`
	// Identifier of the underlying container database.
	ContainerDatabaseId pulumi.StringPtrInput `pulumi:"containerDatabaseId"`
	// Identifier of the underlying container database parent.
	ContainerDatabaseParentId pulumi.StringPtrInput `pulumi:"containerDatabaseParentId"`
	// The data disk group size to be allocated in GBs for the catalog database.
	DataStorageSizeInGbs pulumi.Float64Input `pulumi:"dataStorageSizeInGbs"`
	// Details of encryption key to be used to encrypt data for shards and catalog for sharded database. For system-defined sharding type, all shards have to use same encryptionKeyDetails. For system-defined sharding, if encryptionKeyDetails are not specified for catalog, then Oracle managed key will be used for catalog. For user-defined sharding type, if encryptionKeyDetails are not provided for any shard or catalog, then Oracle managed key will be used for such shard or catalog. For system-defined or user-defined sharding type, if the shard or catalog has a peer in region other than primary shard or catalog region, then make sure to provide virtual vault for such shard or catalog, which is also replicated to peer region (the region where peer or standby shard or catalog exists).
	EncryptionKeyDetails ShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrInput `pulumi:"encryptionKeyDetails"`
	// Determines the auto-scaling mode for the catalog database.
	IsAutoScalingEnabled pulumi.BoolInput `pulumi:"isAutoScalingEnabled"`
	// Additional metadata related to shard's underlying supporting resource.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// Name of the shard.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the peer cloud Autonomous Exadata VM Cluster.
	PeerCloudAutonomousVmClusterId pulumi.StringPtrInput `pulumi:"peerCloudAutonomousVmClusterId"`
	// Name of the shard-group to which the shard belongs.
	ShardGroup pulumi.StringPtrInput `pulumi:"shardGroup"`
	// Status of shard or catalog or gsm for the sharded database.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Identifier of the underlying supporting resource.
	SupportingResourceId pulumi.StringPtrInput `pulumi:"supportingResourceId"`
	// The time the the Sharded Database was created. An RFC3339 formatted datetime string
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The time the ssl certificate associated with shard expires. An RFC3339 formatted datetime string
	TimeSslCertificateExpires pulumi.StringPtrInput `pulumi:"timeSslCertificateExpires"`
	// The time the Sharded Database was last updated. An RFC3339 formatted datetime string
	TimeUpdated pulumi.StringPtrInput `pulumi:"timeUpdated"`
}

func (ShardedDatabaseCatalogDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShardedDatabaseCatalogDetail)(nil)).Elem()
}

func (i ShardedDatabaseCatalogDetailArgs) ToShardedDatabaseCatalogDetailOutput() ShardedDatabaseCatalogDetailOutput {
	return i.ToShardedDatabaseCatalogDetailOutputWithContext(context.Background())
}

func (i ShardedDatabaseCatalogDetailArgs) ToShardedDatabaseCatalogDetailOutputWithContext(ctx context.Context) ShardedDatabaseCatalogDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShardedDatabaseCatalogDetailOutput)
}

// ShardedDatabaseCatalogDetailArrayInput is an input type that accepts ShardedDatabaseCatalogDetailArray and ShardedDatabaseCatalogDetailArrayOutput values.
// You can construct a concrete instance of `ShardedDatabaseCatalogDetailArrayInput` via:
//
//	ShardedDatabaseCatalogDetailArray{ ShardedDatabaseCatalogDetailArgs{...} }
type ShardedDatabaseCatalogDetailArrayInput interface {
	pulumi.Input

	ToShardedDatabaseCatalogDetailArrayOutput() ShardedDatabaseCatalogDetailArrayOutput
	ToShardedDatabaseCatalogDetailArrayOutputWithContext(context.Context) ShardedDatabaseCatalogDetailArrayOutput
}

type ShardedDatabaseCatalogDetailArray []ShardedDatabaseCatalogDetailInput

func (ShardedDatabaseCatalogDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShardedDatabaseCatalogDetail)(nil)).Elem()
}

func (i ShardedDatabaseCatalogDetailArray) ToShardedDatabaseCatalogDetailArrayOutput() ShardedDatabaseCatalogDetailArrayOutput {
	return i.ToShardedDatabaseCatalogDetailArrayOutputWithContext(context.Background())
}

func (i ShardedDatabaseCatalogDetailArray) ToShardedDatabaseCatalogDetailArrayOutputWithContext(ctx context.Context) ShardedDatabaseCatalogDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShardedDatabaseCatalogDetailArrayOutput)
}

type ShardedDatabaseCatalogDetailOutput struct{ *pulumi.OutputState }

func (ShardedDatabaseCatalogDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShardedDatabaseCatalogDetail)(nil)).Elem()
}

func (o ShardedDatabaseCatalogDetailOutput) ToShardedDatabaseCatalogDetailOutput() ShardedDatabaseCatalogDetailOutput {
	return o
}

func (o ShardedDatabaseCatalogDetailOutput) ToShardedDatabaseCatalogDetailOutputWithContext(ctx context.Context) ShardedDatabaseCatalogDetailOutput {
	return o
}

// Admin password for the catalog database.
func (o ShardedDatabaseCatalogDetailOutput) AdminPassword() pulumi.StringOutput {
	return o.ApplyT(func(v ShardedDatabaseCatalogDetail) string { return v.AdminPassword }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud Autonomous Exadata VM Cluster.
func (o ShardedDatabaseCatalogDetailOutput) CloudAutonomousVmClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v ShardedDatabaseCatalogDetail) string { return v.CloudAutonomousVmClusterId }).(pulumi.StringOutput)
}

// The compute count for the catalog database. It has to be in multiple of 2.
func (o ShardedDatabaseCatalogDetailOutput) ComputeCount() pulumi.Float64Output {
	return o.ApplyT(func(v ShardedDatabaseCatalogDetail) float64 { return v.ComputeCount }).(pulumi.Float64Output)
}

// Identifier of the underlying container database.
func (o ShardedDatabaseCatalogDetailOutput) ContainerDatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShardedDatabaseCatalogDetail) *string { return v.ContainerDatabaseId }).(pulumi.StringPtrOutput)
}

// Identifier of the underlying container database parent.
func (o ShardedDatabaseCatalogDetailOutput) ContainerDatabaseParentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShardedDatabaseCatalogDetail) *string { return v.ContainerDatabaseParentId }).(pulumi.StringPtrOutput)
}

// The data disk group size to be allocated in GBs for the catalog database.
func (o ShardedDatabaseCatalogDetailOutput) DataStorageSizeInGbs() pulumi.Float64Output {
	return o.ApplyT(func(v ShardedDatabaseCatalogDetail) float64 { return v.DataStorageSizeInGbs }).(pulumi.Float64Output)
}

// Details of encryption key to be used to encrypt data for shards and catalog for sharded database. For system-defined sharding type, all shards have to use same encryptionKeyDetails. For system-defined sharding, if encryptionKeyDetails are not specified for catalog, then Oracle managed key will be used for catalog. For user-defined sharding type, if encryptionKeyDetails are not provided for any shard or catalog, then Oracle managed key will be used for such shard or catalog. For system-defined or user-defined sharding type, if the shard or catalog has a peer in region other than primary shard or catalog region, then make sure to provide virtual vault for such shard or catalog, which is also replicated to peer region (the region where peer or standby shard or catalog exists).
func (o ShardedDatabaseCatalogDetailOutput) EncryptionKeyDetails() ShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutput {
	return o.ApplyT(func(v ShardedDatabaseCatalogDetail) *ShardedDatabaseCatalogDetailEncryptionKeyDetails {
		return v.EncryptionKeyDetails
	}).(ShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutput)
}

// Determines the auto-scaling mode for the catalog database.
func (o ShardedDatabaseCatalogDetailOutput) IsAutoScalingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ShardedDatabaseCatalogDetail) bool { return v.IsAutoScalingEnabled }).(pulumi.BoolOutput)
}

// Additional metadata related to shard's underlying supporting resource.
func (o ShardedDatabaseCatalogDetailOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ShardedDatabaseCatalogDetail) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// Name of the shard.
func (o ShardedDatabaseCatalogDetailOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShardedDatabaseCatalogDetail) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the peer cloud Autonomous Exadata VM Cluster.
func (o ShardedDatabaseCatalogDetailOutput) PeerCloudAutonomousVmClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShardedDatabaseCatalogDetail) *string { return v.PeerCloudAutonomousVmClusterId }).(pulumi.StringPtrOutput)
}

// Name of the shard-group to which the shard belongs.
func (o ShardedDatabaseCatalogDetailOutput) ShardGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShardedDatabaseCatalogDetail) *string { return v.ShardGroup }).(pulumi.StringPtrOutput)
}

// Status of shard or catalog or gsm for the sharded database.
func (o ShardedDatabaseCatalogDetailOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShardedDatabaseCatalogDetail) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Identifier of the underlying supporting resource.
func (o ShardedDatabaseCatalogDetailOutput) SupportingResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShardedDatabaseCatalogDetail) *string { return v.SupportingResourceId }).(pulumi.StringPtrOutput)
}

// The time the the Sharded Database was created. An RFC3339 formatted datetime string
func (o ShardedDatabaseCatalogDetailOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShardedDatabaseCatalogDetail) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The time the ssl certificate associated with shard expires. An RFC3339 formatted datetime string
func (o ShardedDatabaseCatalogDetailOutput) TimeSslCertificateExpires() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShardedDatabaseCatalogDetail) *string { return v.TimeSslCertificateExpires }).(pulumi.StringPtrOutput)
}

// The time the Sharded Database was last updated. An RFC3339 formatted datetime string
func (o ShardedDatabaseCatalogDetailOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShardedDatabaseCatalogDetail) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

type ShardedDatabaseCatalogDetailArrayOutput struct{ *pulumi.OutputState }

func (ShardedDatabaseCatalogDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShardedDatabaseCatalogDetail)(nil)).Elem()
}

func (o ShardedDatabaseCatalogDetailArrayOutput) ToShardedDatabaseCatalogDetailArrayOutput() ShardedDatabaseCatalogDetailArrayOutput {
	return o
}

func (o ShardedDatabaseCatalogDetailArrayOutput) ToShardedDatabaseCatalogDetailArrayOutputWithContext(ctx context.Context) ShardedDatabaseCatalogDetailArrayOutput {
	return o
}

func (o ShardedDatabaseCatalogDetailArrayOutput) Index(i pulumi.IntInput) ShardedDatabaseCatalogDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShardedDatabaseCatalogDetail {
		return vs[0].([]ShardedDatabaseCatalogDetail)[vs[1].(int)]
	}).(ShardedDatabaseCatalogDetailOutput)
}

type ShardedDatabaseCatalogDetailEncryptionKeyDetails struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key in vault identified by vaultId in customer tenancy  that is used as the master encryption key.
	KmsKeyId string `pulumi:"kmsKeyId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key version for key identified by kmsKeyId that is used in data encryption (TDE) operations.
	KmsKeyVersionId *string `pulumi:"kmsKeyVersionId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the vault in customer tenancy where KMS key is present. For shard or catalog with cross-region data guard enabled, user needs to make sure to provide virtual private vault only, which is also replicated in the region of standby shard.
	VaultId string `pulumi:"vaultId"`
}

// ShardedDatabaseCatalogDetailEncryptionKeyDetailsInput is an input type that accepts ShardedDatabaseCatalogDetailEncryptionKeyDetailsArgs and ShardedDatabaseCatalogDetailEncryptionKeyDetailsOutput values.
// You can construct a concrete instance of `ShardedDatabaseCatalogDetailEncryptionKeyDetailsInput` via:
//
//	ShardedDatabaseCatalogDetailEncryptionKeyDetailsArgs{...}
type ShardedDatabaseCatalogDetailEncryptionKeyDetailsInput interface {
	pulumi.Input

	ToShardedDatabaseCatalogDetailEncryptionKeyDetailsOutput() ShardedDatabaseCatalogDetailEncryptionKeyDetailsOutput
	ToShardedDatabaseCatalogDetailEncryptionKeyDetailsOutputWithContext(context.Context) ShardedDatabaseCatalogDetailEncryptionKeyDetailsOutput
}

type ShardedDatabaseCatalogDetailEncryptionKeyDetailsArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key in vault identified by vaultId in customer tenancy  that is used as the master encryption key.
	KmsKeyId pulumi.StringInput `pulumi:"kmsKeyId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key version for key identified by kmsKeyId that is used in data encryption (TDE) operations.
	KmsKeyVersionId pulumi.StringPtrInput `pulumi:"kmsKeyVersionId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the vault in customer tenancy where KMS key is present. For shard or catalog with cross-region data guard enabled, user needs to make sure to provide virtual private vault only, which is also replicated in the region of standby shard.
	VaultId pulumi.StringInput `pulumi:"vaultId"`
}

func (ShardedDatabaseCatalogDetailEncryptionKeyDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShardedDatabaseCatalogDetailEncryptionKeyDetails)(nil)).Elem()
}

func (i ShardedDatabaseCatalogDetailEncryptionKeyDetailsArgs) ToShardedDatabaseCatalogDetailEncryptionKeyDetailsOutput() ShardedDatabaseCatalogDetailEncryptionKeyDetailsOutput {
	return i.ToShardedDatabaseCatalogDetailEncryptionKeyDetailsOutputWithContext(context.Background())
}

func (i ShardedDatabaseCatalogDetailEncryptionKeyDetailsArgs) ToShardedDatabaseCatalogDetailEncryptionKeyDetailsOutputWithContext(ctx context.Context) ShardedDatabaseCatalogDetailEncryptionKeyDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShardedDatabaseCatalogDetailEncryptionKeyDetailsOutput)
}

func (i ShardedDatabaseCatalogDetailEncryptionKeyDetailsArgs) ToShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutput() ShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutput {
	return i.ToShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutputWithContext(context.Background())
}

func (i ShardedDatabaseCatalogDetailEncryptionKeyDetailsArgs) ToShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutputWithContext(ctx context.Context) ShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShardedDatabaseCatalogDetailEncryptionKeyDetailsOutput).ToShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutputWithContext(ctx)
}

// ShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrInput is an input type that accepts ShardedDatabaseCatalogDetailEncryptionKeyDetailsArgs, ShardedDatabaseCatalogDetailEncryptionKeyDetailsPtr and ShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutput values.
// You can construct a concrete instance of `ShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrInput` via:
//
//	        ShardedDatabaseCatalogDetailEncryptionKeyDetailsArgs{...}
//
//	or:
//
//	        nil
type ShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrInput interface {
	pulumi.Input

	ToShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutput() ShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutput
	ToShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutputWithContext(context.Context) ShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutput
}

type shardedDatabaseCatalogDetailEncryptionKeyDetailsPtrType ShardedDatabaseCatalogDetailEncryptionKeyDetailsArgs

func ShardedDatabaseCatalogDetailEncryptionKeyDetailsPtr(v *ShardedDatabaseCatalogDetailEncryptionKeyDetailsArgs) ShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrInput {
	return (*shardedDatabaseCatalogDetailEncryptionKeyDetailsPtrType)(v)
}

func (*shardedDatabaseCatalogDetailEncryptionKeyDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ShardedDatabaseCatalogDetailEncryptionKeyDetails)(nil)).Elem()
}

func (i *shardedDatabaseCatalogDetailEncryptionKeyDetailsPtrType) ToShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutput() ShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutput {
	return i.ToShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutputWithContext(context.Background())
}

func (i *shardedDatabaseCatalogDetailEncryptionKeyDetailsPtrType) ToShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutputWithContext(ctx context.Context) ShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutput)
}

type ShardedDatabaseCatalogDetailEncryptionKeyDetailsOutput struct{ *pulumi.OutputState }

func (ShardedDatabaseCatalogDetailEncryptionKeyDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShardedDatabaseCatalogDetailEncryptionKeyDetails)(nil)).Elem()
}

func (o ShardedDatabaseCatalogDetailEncryptionKeyDetailsOutput) ToShardedDatabaseCatalogDetailEncryptionKeyDetailsOutput() ShardedDatabaseCatalogDetailEncryptionKeyDetailsOutput {
	return o
}

func (o ShardedDatabaseCatalogDetailEncryptionKeyDetailsOutput) ToShardedDatabaseCatalogDetailEncryptionKeyDetailsOutputWithContext(ctx context.Context) ShardedDatabaseCatalogDetailEncryptionKeyDetailsOutput {
	return o
}

func (o ShardedDatabaseCatalogDetailEncryptionKeyDetailsOutput) ToShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutput() ShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutput {
	return o.ToShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutputWithContext(context.Background())
}

func (o ShardedDatabaseCatalogDetailEncryptionKeyDetailsOutput) ToShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutputWithContext(ctx context.Context) ShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ShardedDatabaseCatalogDetailEncryptionKeyDetails) *ShardedDatabaseCatalogDetailEncryptionKeyDetails {
		return &v
	}).(ShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key in vault identified by vaultId in customer tenancy  that is used as the master encryption key.
func (o ShardedDatabaseCatalogDetailEncryptionKeyDetailsOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v ShardedDatabaseCatalogDetailEncryptionKeyDetails) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key version for key identified by kmsKeyId that is used in data encryption (TDE) operations.
func (o ShardedDatabaseCatalogDetailEncryptionKeyDetailsOutput) KmsKeyVersionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShardedDatabaseCatalogDetailEncryptionKeyDetails) *string { return v.KmsKeyVersionId }).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the vault in customer tenancy where KMS key is present. For shard or catalog with cross-region data guard enabled, user needs to make sure to provide virtual private vault only, which is also replicated in the region of standby shard.
func (o ShardedDatabaseCatalogDetailEncryptionKeyDetailsOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v ShardedDatabaseCatalogDetailEncryptionKeyDetails) string { return v.VaultId }).(pulumi.StringOutput)
}

type ShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutput struct{ *pulumi.OutputState }

func (ShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShardedDatabaseCatalogDetailEncryptionKeyDetails)(nil)).Elem()
}

func (o ShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutput) ToShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutput() ShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutput {
	return o
}

func (o ShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutput) ToShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutputWithContext(ctx context.Context) ShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutput {
	return o
}

func (o ShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutput) Elem() ShardedDatabaseCatalogDetailEncryptionKeyDetailsOutput {
	return o.ApplyT(func(v *ShardedDatabaseCatalogDetailEncryptionKeyDetails) ShardedDatabaseCatalogDetailEncryptionKeyDetails {
		if v != nil {
			return *v
		}
		var ret ShardedDatabaseCatalogDetailEncryptionKeyDetails
		return ret
	}).(ShardedDatabaseCatalogDetailEncryptionKeyDetailsOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key in vault identified by vaultId in customer tenancy  that is used as the master encryption key.
func (o ShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShardedDatabaseCatalogDetailEncryptionKeyDetails) *string {
		if v == nil {
			return nil
		}
		return &v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key version for key identified by kmsKeyId that is used in data encryption (TDE) operations.
func (o ShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutput) KmsKeyVersionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShardedDatabaseCatalogDetailEncryptionKeyDetails) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyVersionId
	}).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the vault in customer tenancy where KMS key is present. For shard or catalog with cross-region data guard enabled, user needs to make sure to provide virtual private vault only, which is also replicated in the region of standby shard.
func (o ShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutput) VaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShardedDatabaseCatalogDetailEncryptionKeyDetails) *string {
		if v == nil {
			return nil
		}
		return &v.VaultId
	}).(pulumi.StringPtrOutput)
}

type ShardedDatabaseConnectionString struct {
	// Collection of connection strings.
	AllConnectionStrings map[string]string `pulumi:"allConnectionStrings"`
}

// ShardedDatabaseConnectionStringInput is an input type that accepts ShardedDatabaseConnectionStringArgs and ShardedDatabaseConnectionStringOutput values.
// You can construct a concrete instance of `ShardedDatabaseConnectionStringInput` via:
//
//	ShardedDatabaseConnectionStringArgs{...}
type ShardedDatabaseConnectionStringInput interface {
	pulumi.Input

	ToShardedDatabaseConnectionStringOutput() ShardedDatabaseConnectionStringOutput
	ToShardedDatabaseConnectionStringOutputWithContext(context.Context) ShardedDatabaseConnectionStringOutput
}

type ShardedDatabaseConnectionStringArgs struct {
	// Collection of connection strings.
	AllConnectionStrings pulumi.StringMapInput `pulumi:"allConnectionStrings"`
}

func (ShardedDatabaseConnectionStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShardedDatabaseConnectionString)(nil)).Elem()
}

func (i ShardedDatabaseConnectionStringArgs) ToShardedDatabaseConnectionStringOutput() ShardedDatabaseConnectionStringOutput {
	return i.ToShardedDatabaseConnectionStringOutputWithContext(context.Background())
}

func (i ShardedDatabaseConnectionStringArgs) ToShardedDatabaseConnectionStringOutputWithContext(ctx context.Context) ShardedDatabaseConnectionStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShardedDatabaseConnectionStringOutput)
}

// ShardedDatabaseConnectionStringArrayInput is an input type that accepts ShardedDatabaseConnectionStringArray and ShardedDatabaseConnectionStringArrayOutput values.
// You can construct a concrete instance of `ShardedDatabaseConnectionStringArrayInput` via:
//
//	ShardedDatabaseConnectionStringArray{ ShardedDatabaseConnectionStringArgs{...} }
type ShardedDatabaseConnectionStringArrayInput interface {
	pulumi.Input

	ToShardedDatabaseConnectionStringArrayOutput() ShardedDatabaseConnectionStringArrayOutput
	ToShardedDatabaseConnectionStringArrayOutputWithContext(context.Context) ShardedDatabaseConnectionStringArrayOutput
}

type ShardedDatabaseConnectionStringArray []ShardedDatabaseConnectionStringInput

func (ShardedDatabaseConnectionStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShardedDatabaseConnectionString)(nil)).Elem()
}

func (i ShardedDatabaseConnectionStringArray) ToShardedDatabaseConnectionStringArrayOutput() ShardedDatabaseConnectionStringArrayOutput {
	return i.ToShardedDatabaseConnectionStringArrayOutputWithContext(context.Background())
}

func (i ShardedDatabaseConnectionStringArray) ToShardedDatabaseConnectionStringArrayOutputWithContext(ctx context.Context) ShardedDatabaseConnectionStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShardedDatabaseConnectionStringArrayOutput)
}

type ShardedDatabaseConnectionStringOutput struct{ *pulumi.OutputState }

func (ShardedDatabaseConnectionStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShardedDatabaseConnectionString)(nil)).Elem()
}

func (o ShardedDatabaseConnectionStringOutput) ToShardedDatabaseConnectionStringOutput() ShardedDatabaseConnectionStringOutput {
	return o
}

func (o ShardedDatabaseConnectionStringOutput) ToShardedDatabaseConnectionStringOutputWithContext(ctx context.Context) ShardedDatabaseConnectionStringOutput {
	return o
}

// Collection of connection strings.
func (o ShardedDatabaseConnectionStringOutput) AllConnectionStrings() pulumi.StringMapOutput {
	return o.ApplyT(func(v ShardedDatabaseConnectionString) map[string]string { return v.AllConnectionStrings }).(pulumi.StringMapOutput)
}

type ShardedDatabaseConnectionStringArrayOutput struct{ *pulumi.OutputState }

func (ShardedDatabaseConnectionStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShardedDatabaseConnectionString)(nil)).Elem()
}

func (o ShardedDatabaseConnectionStringArrayOutput) ToShardedDatabaseConnectionStringArrayOutput() ShardedDatabaseConnectionStringArrayOutput {
	return o
}

func (o ShardedDatabaseConnectionStringArrayOutput) ToShardedDatabaseConnectionStringArrayOutputWithContext(ctx context.Context) ShardedDatabaseConnectionStringArrayOutput {
	return o
}

func (o ShardedDatabaseConnectionStringArrayOutput) Index(i pulumi.IntInput) ShardedDatabaseConnectionStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShardedDatabaseConnectionString {
		return vs[0].([]ShardedDatabaseConnectionString)[vs[1].(int)]
	}).(ShardedDatabaseConnectionStringOutput)
}

type ShardedDatabaseGsm struct {
	// The compute amount available to the underlying autonomous database associated with shard.
	ComputeCount *float64 `pulumi:"computeCount"`
	// The data disk group size to be allocated in GBs.
	DataStorageSizeInGbs *float64 `pulumi:"dataStorageSizeInGbs"`
	// Additional metadata related to shard's underlying supporting resource.
	Metadata map[string]string `pulumi:"metadata"`
	// Name of the shard.
	Name *string `pulumi:"name"`
	// Status of shard or catalog or gsm for the sharded database.
	Status *string `pulumi:"status"`
	// Identifier of the underlying supporting resource.
	SupportingResourceId *string `pulumi:"supportingResourceId"`
	// The time the the Sharded Database was created. An RFC3339 formatted datetime string
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the ssl certificate associated with shard expires. An RFC3339 formatted datetime string
	TimeSslCertificateExpires *string `pulumi:"timeSslCertificateExpires"`
	// The time the Sharded Database was last updated. An RFC3339 formatted datetime string
	TimeUpdated *string `pulumi:"timeUpdated"`
}

// ShardedDatabaseGsmInput is an input type that accepts ShardedDatabaseGsmArgs and ShardedDatabaseGsmOutput values.
// You can construct a concrete instance of `ShardedDatabaseGsmInput` via:
//
//	ShardedDatabaseGsmArgs{...}
type ShardedDatabaseGsmInput interface {
	pulumi.Input

	ToShardedDatabaseGsmOutput() ShardedDatabaseGsmOutput
	ToShardedDatabaseGsmOutputWithContext(context.Context) ShardedDatabaseGsmOutput
}

type ShardedDatabaseGsmArgs struct {
	// The compute amount available to the underlying autonomous database associated with shard.
	ComputeCount pulumi.Float64PtrInput `pulumi:"computeCount"`
	// The data disk group size to be allocated in GBs.
	DataStorageSizeInGbs pulumi.Float64PtrInput `pulumi:"dataStorageSizeInGbs"`
	// Additional metadata related to shard's underlying supporting resource.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// Name of the shard.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Status of shard or catalog or gsm for the sharded database.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Identifier of the underlying supporting resource.
	SupportingResourceId pulumi.StringPtrInput `pulumi:"supportingResourceId"`
	// The time the the Sharded Database was created. An RFC3339 formatted datetime string
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The time the ssl certificate associated with shard expires. An RFC3339 formatted datetime string
	TimeSslCertificateExpires pulumi.StringPtrInput `pulumi:"timeSslCertificateExpires"`
	// The time the Sharded Database was last updated. An RFC3339 formatted datetime string
	TimeUpdated pulumi.StringPtrInput `pulumi:"timeUpdated"`
}

func (ShardedDatabaseGsmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShardedDatabaseGsm)(nil)).Elem()
}

func (i ShardedDatabaseGsmArgs) ToShardedDatabaseGsmOutput() ShardedDatabaseGsmOutput {
	return i.ToShardedDatabaseGsmOutputWithContext(context.Background())
}

func (i ShardedDatabaseGsmArgs) ToShardedDatabaseGsmOutputWithContext(ctx context.Context) ShardedDatabaseGsmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShardedDatabaseGsmOutput)
}

// ShardedDatabaseGsmArrayInput is an input type that accepts ShardedDatabaseGsmArray and ShardedDatabaseGsmArrayOutput values.
// You can construct a concrete instance of `ShardedDatabaseGsmArrayInput` via:
//
//	ShardedDatabaseGsmArray{ ShardedDatabaseGsmArgs{...} }
type ShardedDatabaseGsmArrayInput interface {
	pulumi.Input

	ToShardedDatabaseGsmArrayOutput() ShardedDatabaseGsmArrayOutput
	ToShardedDatabaseGsmArrayOutputWithContext(context.Context) ShardedDatabaseGsmArrayOutput
}

type ShardedDatabaseGsmArray []ShardedDatabaseGsmInput

func (ShardedDatabaseGsmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShardedDatabaseGsm)(nil)).Elem()
}

func (i ShardedDatabaseGsmArray) ToShardedDatabaseGsmArrayOutput() ShardedDatabaseGsmArrayOutput {
	return i.ToShardedDatabaseGsmArrayOutputWithContext(context.Background())
}

func (i ShardedDatabaseGsmArray) ToShardedDatabaseGsmArrayOutputWithContext(ctx context.Context) ShardedDatabaseGsmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShardedDatabaseGsmArrayOutput)
}

type ShardedDatabaseGsmOutput struct{ *pulumi.OutputState }

func (ShardedDatabaseGsmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShardedDatabaseGsm)(nil)).Elem()
}

func (o ShardedDatabaseGsmOutput) ToShardedDatabaseGsmOutput() ShardedDatabaseGsmOutput {
	return o
}

func (o ShardedDatabaseGsmOutput) ToShardedDatabaseGsmOutputWithContext(ctx context.Context) ShardedDatabaseGsmOutput {
	return o
}

// The compute amount available to the underlying autonomous database associated with shard.
func (o ShardedDatabaseGsmOutput) ComputeCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ShardedDatabaseGsm) *float64 { return v.ComputeCount }).(pulumi.Float64PtrOutput)
}

// The data disk group size to be allocated in GBs.
func (o ShardedDatabaseGsmOutput) DataStorageSizeInGbs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ShardedDatabaseGsm) *float64 { return v.DataStorageSizeInGbs }).(pulumi.Float64PtrOutput)
}

// Additional metadata related to shard's underlying supporting resource.
func (o ShardedDatabaseGsmOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ShardedDatabaseGsm) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// Name of the shard.
func (o ShardedDatabaseGsmOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShardedDatabaseGsm) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Status of shard or catalog or gsm for the sharded database.
func (o ShardedDatabaseGsmOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShardedDatabaseGsm) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Identifier of the underlying supporting resource.
func (o ShardedDatabaseGsmOutput) SupportingResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShardedDatabaseGsm) *string { return v.SupportingResourceId }).(pulumi.StringPtrOutput)
}

// The time the the Sharded Database was created. An RFC3339 formatted datetime string
func (o ShardedDatabaseGsmOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShardedDatabaseGsm) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The time the ssl certificate associated with shard expires. An RFC3339 formatted datetime string
func (o ShardedDatabaseGsmOutput) TimeSslCertificateExpires() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShardedDatabaseGsm) *string { return v.TimeSslCertificateExpires }).(pulumi.StringPtrOutput)
}

// The time the Sharded Database was last updated. An RFC3339 formatted datetime string
func (o ShardedDatabaseGsmOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShardedDatabaseGsm) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

type ShardedDatabaseGsmArrayOutput struct{ *pulumi.OutputState }

func (ShardedDatabaseGsmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShardedDatabaseGsm)(nil)).Elem()
}

func (o ShardedDatabaseGsmArrayOutput) ToShardedDatabaseGsmArrayOutput() ShardedDatabaseGsmArrayOutput {
	return o
}

func (o ShardedDatabaseGsmArrayOutput) ToShardedDatabaseGsmArrayOutputWithContext(ctx context.Context) ShardedDatabaseGsmArrayOutput {
	return o
}

func (o ShardedDatabaseGsmArrayOutput) Index(i pulumi.IntInput) ShardedDatabaseGsmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShardedDatabaseGsm {
		return vs[0].([]ShardedDatabaseGsm)[vs[1].(int)]
	}).(ShardedDatabaseGsmOutput)
}

type ShardedDatabasePatchOperation struct {
	// (Updatable) The operation can be one of these values: `INSERT`, `MERGE`, `REMOVE`
	Operation string `pulumi:"operation"`
	// (Updatable)
	Selection string `pulumi:"selection"`
	// (Updatable)
	Value string `pulumi:"value"`
}

// ShardedDatabasePatchOperationInput is an input type that accepts ShardedDatabasePatchOperationArgs and ShardedDatabasePatchOperationOutput values.
// You can construct a concrete instance of `ShardedDatabasePatchOperationInput` via:
//
//	ShardedDatabasePatchOperationArgs{...}
type ShardedDatabasePatchOperationInput interface {
	pulumi.Input

	ToShardedDatabasePatchOperationOutput() ShardedDatabasePatchOperationOutput
	ToShardedDatabasePatchOperationOutputWithContext(context.Context) ShardedDatabasePatchOperationOutput
}

type ShardedDatabasePatchOperationArgs struct {
	// (Updatable) The operation can be one of these values: `INSERT`, `MERGE`, `REMOVE`
	Operation pulumi.StringInput `pulumi:"operation"`
	// (Updatable)
	Selection pulumi.StringInput `pulumi:"selection"`
	// (Updatable)
	Value pulumi.StringInput `pulumi:"value"`
}

func (ShardedDatabasePatchOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShardedDatabasePatchOperation)(nil)).Elem()
}

func (i ShardedDatabasePatchOperationArgs) ToShardedDatabasePatchOperationOutput() ShardedDatabasePatchOperationOutput {
	return i.ToShardedDatabasePatchOperationOutputWithContext(context.Background())
}

func (i ShardedDatabasePatchOperationArgs) ToShardedDatabasePatchOperationOutputWithContext(ctx context.Context) ShardedDatabasePatchOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShardedDatabasePatchOperationOutput)
}

// ShardedDatabasePatchOperationArrayInput is an input type that accepts ShardedDatabasePatchOperationArray and ShardedDatabasePatchOperationArrayOutput values.
// You can construct a concrete instance of `ShardedDatabasePatchOperationArrayInput` via:
//
//	ShardedDatabasePatchOperationArray{ ShardedDatabasePatchOperationArgs{...} }
type ShardedDatabasePatchOperationArrayInput interface {
	pulumi.Input

	ToShardedDatabasePatchOperationArrayOutput() ShardedDatabasePatchOperationArrayOutput
	ToShardedDatabasePatchOperationArrayOutputWithContext(context.Context) ShardedDatabasePatchOperationArrayOutput
}

type ShardedDatabasePatchOperationArray []ShardedDatabasePatchOperationInput

func (ShardedDatabasePatchOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShardedDatabasePatchOperation)(nil)).Elem()
}

func (i ShardedDatabasePatchOperationArray) ToShardedDatabasePatchOperationArrayOutput() ShardedDatabasePatchOperationArrayOutput {
	return i.ToShardedDatabasePatchOperationArrayOutputWithContext(context.Background())
}

func (i ShardedDatabasePatchOperationArray) ToShardedDatabasePatchOperationArrayOutputWithContext(ctx context.Context) ShardedDatabasePatchOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShardedDatabasePatchOperationArrayOutput)
}

type ShardedDatabasePatchOperationOutput struct{ *pulumi.OutputState }

func (ShardedDatabasePatchOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShardedDatabasePatchOperation)(nil)).Elem()
}

func (o ShardedDatabasePatchOperationOutput) ToShardedDatabasePatchOperationOutput() ShardedDatabasePatchOperationOutput {
	return o
}

func (o ShardedDatabasePatchOperationOutput) ToShardedDatabasePatchOperationOutputWithContext(ctx context.Context) ShardedDatabasePatchOperationOutput {
	return o
}

// (Updatable) The operation can be one of these values: `INSERT`, `MERGE`, `REMOVE`
func (o ShardedDatabasePatchOperationOutput) Operation() pulumi.StringOutput {
	return o.ApplyT(func(v ShardedDatabasePatchOperation) string { return v.Operation }).(pulumi.StringOutput)
}

// (Updatable)
func (o ShardedDatabasePatchOperationOutput) Selection() pulumi.StringOutput {
	return o.ApplyT(func(v ShardedDatabasePatchOperation) string { return v.Selection }).(pulumi.StringOutput)
}

// (Updatable)
func (o ShardedDatabasePatchOperationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ShardedDatabasePatchOperation) string { return v.Value }).(pulumi.StringOutput)
}

type ShardedDatabasePatchOperationArrayOutput struct{ *pulumi.OutputState }

func (ShardedDatabasePatchOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShardedDatabasePatchOperation)(nil)).Elem()
}

func (o ShardedDatabasePatchOperationArrayOutput) ToShardedDatabasePatchOperationArrayOutput() ShardedDatabasePatchOperationArrayOutput {
	return o
}

func (o ShardedDatabasePatchOperationArrayOutput) ToShardedDatabasePatchOperationArrayOutputWithContext(ctx context.Context) ShardedDatabasePatchOperationArrayOutput {
	return o
}

func (o ShardedDatabasePatchOperationArrayOutput) Index(i pulumi.IntInput) ShardedDatabasePatchOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShardedDatabasePatchOperation {
		return vs[0].([]ShardedDatabasePatchOperation)[vs[1].(int)]
	}).(ShardedDatabasePatchOperationOutput)
}

type ShardedDatabaseShardDetail struct {
	// Admin password for shard database.
	AdminPassword string `pulumi:"adminPassword"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud Autonomous Exadata VM Cluster.
	CloudAutonomousVmClusterId string `pulumi:"cloudAutonomousVmClusterId"`
	// The compute count for the shard database. It has to be in multiples of 2.
	ComputeCount float64 `pulumi:"computeCount"`
	// Identifier of the underlying container database.
	ContainerDatabaseId *string `pulumi:"containerDatabaseId"`
	// Identifier of the underlying container database parent.
	ContainerDatabaseParentId *string `pulumi:"containerDatabaseParentId"`
	// The data disk group size to be allocated in GBs for the shard database.
	DataStorageSizeInGbs float64 `pulumi:"dataStorageSizeInGbs"`
	// Details of encryption key to be used to encrypt data for shards and catalog for sharded database. For system-defined sharding type, all shards have to use same encryptionKeyDetails. For system-defined sharding, if encryptionKeyDetails are not specified for catalog, then Oracle managed key will be used for catalog. For user-defined sharding type, if encryptionKeyDetails are not provided for any shard or catalog, then Oracle managed key will be used for such shard or catalog. For system-defined or user-defined sharding type, if the shard or catalog has a peer in region other than primary shard or catalog region, then make sure to provide virtual vault for such shard or catalog, which is also replicated to peer region (the region where peer or standby shard or catalog exists).
	EncryptionKeyDetails *ShardedDatabaseShardDetailEncryptionKeyDetails `pulumi:"encryptionKeyDetails"`
	// Determines the auto-scaling mode for the shard database.
	IsAutoScalingEnabled bool `pulumi:"isAutoScalingEnabled"`
	// Additional metadata related to shard's underlying supporting resource.
	Metadata map[string]string `pulumi:"metadata"`
	// Name of the shard.
	Name *string `pulumi:"name"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the peer cloud Autonomous Exadata VM Cluster.
	PeerCloudAutonomousVmClusterId *string `pulumi:"peerCloudAutonomousVmClusterId"`
	// Name of the shard-group to which the shard belongs.
	ShardGroup *string `pulumi:"shardGroup"`
	// The shard space name for the shard database. Shard space for existing shard cannot be changed, once shard is created. Shard space name shall be used while creation of new shards. For User defined sharding, every shard must have a unique shard space name. For system defined sharding, shard space name is not required.
	ShardSpace *string `pulumi:"shardSpace"`
	// Status of shard or catalog or gsm for the sharded database.
	Status *string `pulumi:"status"`
	// Identifier of the underlying supporting resource.
	SupportingResourceId *string `pulumi:"supportingResourceId"`
	// The time the the Sharded Database was created. An RFC3339 formatted datetime string
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the ssl certificate associated with shard expires. An RFC3339 formatted datetime string
	TimeSslCertificateExpires *string `pulumi:"timeSslCertificateExpires"`
	// The time the Sharded Database was last updated. An RFC3339 formatted datetime string
	TimeUpdated *string `pulumi:"timeUpdated"`
}

// ShardedDatabaseShardDetailInput is an input type that accepts ShardedDatabaseShardDetailArgs and ShardedDatabaseShardDetailOutput values.
// You can construct a concrete instance of `ShardedDatabaseShardDetailInput` via:
//
//	ShardedDatabaseShardDetailArgs{...}
type ShardedDatabaseShardDetailInput interface {
	pulumi.Input

	ToShardedDatabaseShardDetailOutput() ShardedDatabaseShardDetailOutput
	ToShardedDatabaseShardDetailOutputWithContext(context.Context) ShardedDatabaseShardDetailOutput
}

type ShardedDatabaseShardDetailArgs struct {
	// Admin password for shard database.
	AdminPassword pulumi.StringInput `pulumi:"adminPassword"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud Autonomous Exadata VM Cluster.
	CloudAutonomousVmClusterId pulumi.StringInput `pulumi:"cloudAutonomousVmClusterId"`
	// The compute count for the shard database. It has to be in multiples of 2.
	ComputeCount pulumi.Float64Input `pulumi:"computeCount"`
	// Identifier of the underlying container database.
	ContainerDatabaseId pulumi.StringPtrInput `pulumi:"containerDatabaseId"`
	// Identifier of the underlying container database parent.
	ContainerDatabaseParentId pulumi.StringPtrInput `pulumi:"containerDatabaseParentId"`
	// The data disk group size to be allocated in GBs for the shard database.
	DataStorageSizeInGbs pulumi.Float64Input `pulumi:"dataStorageSizeInGbs"`
	// Details of encryption key to be used to encrypt data for shards and catalog for sharded database. For system-defined sharding type, all shards have to use same encryptionKeyDetails. For system-defined sharding, if encryptionKeyDetails are not specified for catalog, then Oracle managed key will be used for catalog. For user-defined sharding type, if encryptionKeyDetails are not provided for any shard or catalog, then Oracle managed key will be used for such shard or catalog. For system-defined or user-defined sharding type, if the shard or catalog has a peer in region other than primary shard or catalog region, then make sure to provide virtual vault for such shard or catalog, which is also replicated to peer region (the region where peer or standby shard or catalog exists).
	EncryptionKeyDetails ShardedDatabaseShardDetailEncryptionKeyDetailsPtrInput `pulumi:"encryptionKeyDetails"`
	// Determines the auto-scaling mode for the shard database.
	IsAutoScalingEnabled pulumi.BoolInput `pulumi:"isAutoScalingEnabled"`
	// Additional metadata related to shard's underlying supporting resource.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// Name of the shard.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the peer cloud Autonomous Exadata VM Cluster.
	PeerCloudAutonomousVmClusterId pulumi.StringPtrInput `pulumi:"peerCloudAutonomousVmClusterId"`
	// Name of the shard-group to which the shard belongs.
	ShardGroup pulumi.StringPtrInput `pulumi:"shardGroup"`
	// The shard space name for the shard database. Shard space for existing shard cannot be changed, once shard is created. Shard space name shall be used while creation of new shards. For User defined sharding, every shard must have a unique shard space name. For system defined sharding, shard space name is not required.
	ShardSpace pulumi.StringPtrInput `pulumi:"shardSpace"`
	// Status of shard or catalog or gsm for the sharded database.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Identifier of the underlying supporting resource.
	SupportingResourceId pulumi.StringPtrInput `pulumi:"supportingResourceId"`
	// The time the the Sharded Database was created. An RFC3339 formatted datetime string
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The time the ssl certificate associated with shard expires. An RFC3339 formatted datetime string
	TimeSslCertificateExpires pulumi.StringPtrInput `pulumi:"timeSslCertificateExpires"`
	// The time the Sharded Database was last updated. An RFC3339 formatted datetime string
	TimeUpdated pulumi.StringPtrInput `pulumi:"timeUpdated"`
}

func (ShardedDatabaseShardDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShardedDatabaseShardDetail)(nil)).Elem()
}

func (i ShardedDatabaseShardDetailArgs) ToShardedDatabaseShardDetailOutput() ShardedDatabaseShardDetailOutput {
	return i.ToShardedDatabaseShardDetailOutputWithContext(context.Background())
}

func (i ShardedDatabaseShardDetailArgs) ToShardedDatabaseShardDetailOutputWithContext(ctx context.Context) ShardedDatabaseShardDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShardedDatabaseShardDetailOutput)
}

// ShardedDatabaseShardDetailArrayInput is an input type that accepts ShardedDatabaseShardDetailArray and ShardedDatabaseShardDetailArrayOutput values.
// You can construct a concrete instance of `ShardedDatabaseShardDetailArrayInput` via:
//
//	ShardedDatabaseShardDetailArray{ ShardedDatabaseShardDetailArgs{...} }
type ShardedDatabaseShardDetailArrayInput interface {
	pulumi.Input

	ToShardedDatabaseShardDetailArrayOutput() ShardedDatabaseShardDetailArrayOutput
	ToShardedDatabaseShardDetailArrayOutputWithContext(context.Context) ShardedDatabaseShardDetailArrayOutput
}

type ShardedDatabaseShardDetailArray []ShardedDatabaseShardDetailInput

func (ShardedDatabaseShardDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShardedDatabaseShardDetail)(nil)).Elem()
}

func (i ShardedDatabaseShardDetailArray) ToShardedDatabaseShardDetailArrayOutput() ShardedDatabaseShardDetailArrayOutput {
	return i.ToShardedDatabaseShardDetailArrayOutputWithContext(context.Background())
}

func (i ShardedDatabaseShardDetailArray) ToShardedDatabaseShardDetailArrayOutputWithContext(ctx context.Context) ShardedDatabaseShardDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShardedDatabaseShardDetailArrayOutput)
}

type ShardedDatabaseShardDetailOutput struct{ *pulumi.OutputState }

func (ShardedDatabaseShardDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShardedDatabaseShardDetail)(nil)).Elem()
}

func (o ShardedDatabaseShardDetailOutput) ToShardedDatabaseShardDetailOutput() ShardedDatabaseShardDetailOutput {
	return o
}

func (o ShardedDatabaseShardDetailOutput) ToShardedDatabaseShardDetailOutputWithContext(ctx context.Context) ShardedDatabaseShardDetailOutput {
	return o
}

// Admin password for shard database.
func (o ShardedDatabaseShardDetailOutput) AdminPassword() pulumi.StringOutput {
	return o.ApplyT(func(v ShardedDatabaseShardDetail) string { return v.AdminPassword }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud Autonomous Exadata VM Cluster.
func (o ShardedDatabaseShardDetailOutput) CloudAutonomousVmClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v ShardedDatabaseShardDetail) string { return v.CloudAutonomousVmClusterId }).(pulumi.StringOutput)
}

// The compute count for the shard database. It has to be in multiples of 2.
func (o ShardedDatabaseShardDetailOutput) ComputeCount() pulumi.Float64Output {
	return o.ApplyT(func(v ShardedDatabaseShardDetail) float64 { return v.ComputeCount }).(pulumi.Float64Output)
}

// Identifier of the underlying container database.
func (o ShardedDatabaseShardDetailOutput) ContainerDatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShardedDatabaseShardDetail) *string { return v.ContainerDatabaseId }).(pulumi.StringPtrOutput)
}

// Identifier of the underlying container database parent.
func (o ShardedDatabaseShardDetailOutput) ContainerDatabaseParentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShardedDatabaseShardDetail) *string { return v.ContainerDatabaseParentId }).(pulumi.StringPtrOutput)
}

// The data disk group size to be allocated in GBs for the shard database.
func (o ShardedDatabaseShardDetailOutput) DataStorageSizeInGbs() pulumi.Float64Output {
	return o.ApplyT(func(v ShardedDatabaseShardDetail) float64 { return v.DataStorageSizeInGbs }).(pulumi.Float64Output)
}

// Details of encryption key to be used to encrypt data for shards and catalog for sharded database. For system-defined sharding type, all shards have to use same encryptionKeyDetails. For system-defined sharding, if encryptionKeyDetails are not specified for catalog, then Oracle managed key will be used for catalog. For user-defined sharding type, if encryptionKeyDetails are not provided for any shard or catalog, then Oracle managed key will be used for such shard or catalog. For system-defined or user-defined sharding type, if the shard or catalog has a peer in region other than primary shard or catalog region, then make sure to provide virtual vault for such shard or catalog, which is also replicated to peer region (the region where peer or standby shard or catalog exists).
func (o ShardedDatabaseShardDetailOutput) EncryptionKeyDetails() ShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutput {
	return o.ApplyT(func(v ShardedDatabaseShardDetail) *ShardedDatabaseShardDetailEncryptionKeyDetails {
		return v.EncryptionKeyDetails
	}).(ShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutput)
}

// Determines the auto-scaling mode for the shard database.
func (o ShardedDatabaseShardDetailOutput) IsAutoScalingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ShardedDatabaseShardDetail) bool { return v.IsAutoScalingEnabled }).(pulumi.BoolOutput)
}

// Additional metadata related to shard's underlying supporting resource.
func (o ShardedDatabaseShardDetailOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ShardedDatabaseShardDetail) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// Name of the shard.
func (o ShardedDatabaseShardDetailOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShardedDatabaseShardDetail) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the peer cloud Autonomous Exadata VM Cluster.
func (o ShardedDatabaseShardDetailOutput) PeerCloudAutonomousVmClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShardedDatabaseShardDetail) *string { return v.PeerCloudAutonomousVmClusterId }).(pulumi.StringPtrOutput)
}

// Name of the shard-group to which the shard belongs.
func (o ShardedDatabaseShardDetailOutput) ShardGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShardedDatabaseShardDetail) *string { return v.ShardGroup }).(pulumi.StringPtrOutput)
}

// The shard space name for the shard database. Shard space for existing shard cannot be changed, once shard is created. Shard space name shall be used while creation of new shards. For User defined sharding, every shard must have a unique shard space name. For system defined sharding, shard space name is not required.
func (o ShardedDatabaseShardDetailOutput) ShardSpace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShardedDatabaseShardDetail) *string { return v.ShardSpace }).(pulumi.StringPtrOutput)
}

// Status of shard or catalog or gsm for the sharded database.
func (o ShardedDatabaseShardDetailOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShardedDatabaseShardDetail) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Identifier of the underlying supporting resource.
func (o ShardedDatabaseShardDetailOutput) SupportingResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShardedDatabaseShardDetail) *string { return v.SupportingResourceId }).(pulumi.StringPtrOutput)
}

// The time the the Sharded Database was created. An RFC3339 formatted datetime string
func (o ShardedDatabaseShardDetailOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShardedDatabaseShardDetail) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The time the ssl certificate associated with shard expires. An RFC3339 formatted datetime string
func (o ShardedDatabaseShardDetailOutput) TimeSslCertificateExpires() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShardedDatabaseShardDetail) *string { return v.TimeSslCertificateExpires }).(pulumi.StringPtrOutput)
}

// The time the Sharded Database was last updated. An RFC3339 formatted datetime string
func (o ShardedDatabaseShardDetailOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShardedDatabaseShardDetail) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

type ShardedDatabaseShardDetailArrayOutput struct{ *pulumi.OutputState }

func (ShardedDatabaseShardDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShardedDatabaseShardDetail)(nil)).Elem()
}

func (o ShardedDatabaseShardDetailArrayOutput) ToShardedDatabaseShardDetailArrayOutput() ShardedDatabaseShardDetailArrayOutput {
	return o
}

func (o ShardedDatabaseShardDetailArrayOutput) ToShardedDatabaseShardDetailArrayOutputWithContext(ctx context.Context) ShardedDatabaseShardDetailArrayOutput {
	return o
}

func (o ShardedDatabaseShardDetailArrayOutput) Index(i pulumi.IntInput) ShardedDatabaseShardDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShardedDatabaseShardDetail {
		return vs[0].([]ShardedDatabaseShardDetail)[vs[1].(int)]
	}).(ShardedDatabaseShardDetailOutput)
}

type ShardedDatabaseShardDetailEncryptionKeyDetails struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key in vault identified by vaultId in customer tenancy  that is used as the master encryption key.
	KmsKeyId string `pulumi:"kmsKeyId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key version for key identified by kmsKeyId that is used in data encryption (TDE) operations.
	KmsKeyVersionId *string `pulumi:"kmsKeyVersionId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the vault in customer tenancy where KMS key is present. For shard or catalog with cross-region data guard enabled, user needs to make sure to provide virtual private vault only, which is also replicated in the region of standby shard.
	VaultId string `pulumi:"vaultId"`
}

// ShardedDatabaseShardDetailEncryptionKeyDetailsInput is an input type that accepts ShardedDatabaseShardDetailEncryptionKeyDetailsArgs and ShardedDatabaseShardDetailEncryptionKeyDetailsOutput values.
// You can construct a concrete instance of `ShardedDatabaseShardDetailEncryptionKeyDetailsInput` via:
//
//	ShardedDatabaseShardDetailEncryptionKeyDetailsArgs{...}
type ShardedDatabaseShardDetailEncryptionKeyDetailsInput interface {
	pulumi.Input

	ToShardedDatabaseShardDetailEncryptionKeyDetailsOutput() ShardedDatabaseShardDetailEncryptionKeyDetailsOutput
	ToShardedDatabaseShardDetailEncryptionKeyDetailsOutputWithContext(context.Context) ShardedDatabaseShardDetailEncryptionKeyDetailsOutput
}

type ShardedDatabaseShardDetailEncryptionKeyDetailsArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key in vault identified by vaultId in customer tenancy  that is used as the master encryption key.
	KmsKeyId pulumi.StringInput `pulumi:"kmsKeyId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key version for key identified by kmsKeyId that is used in data encryption (TDE) operations.
	KmsKeyVersionId pulumi.StringPtrInput `pulumi:"kmsKeyVersionId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the vault in customer tenancy where KMS key is present. For shard or catalog with cross-region data guard enabled, user needs to make sure to provide virtual private vault only, which is also replicated in the region of standby shard.
	VaultId pulumi.StringInput `pulumi:"vaultId"`
}

func (ShardedDatabaseShardDetailEncryptionKeyDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShardedDatabaseShardDetailEncryptionKeyDetails)(nil)).Elem()
}

func (i ShardedDatabaseShardDetailEncryptionKeyDetailsArgs) ToShardedDatabaseShardDetailEncryptionKeyDetailsOutput() ShardedDatabaseShardDetailEncryptionKeyDetailsOutput {
	return i.ToShardedDatabaseShardDetailEncryptionKeyDetailsOutputWithContext(context.Background())
}

func (i ShardedDatabaseShardDetailEncryptionKeyDetailsArgs) ToShardedDatabaseShardDetailEncryptionKeyDetailsOutputWithContext(ctx context.Context) ShardedDatabaseShardDetailEncryptionKeyDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShardedDatabaseShardDetailEncryptionKeyDetailsOutput)
}

func (i ShardedDatabaseShardDetailEncryptionKeyDetailsArgs) ToShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutput() ShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutput {
	return i.ToShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutputWithContext(context.Background())
}

func (i ShardedDatabaseShardDetailEncryptionKeyDetailsArgs) ToShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutputWithContext(ctx context.Context) ShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShardedDatabaseShardDetailEncryptionKeyDetailsOutput).ToShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutputWithContext(ctx)
}

// ShardedDatabaseShardDetailEncryptionKeyDetailsPtrInput is an input type that accepts ShardedDatabaseShardDetailEncryptionKeyDetailsArgs, ShardedDatabaseShardDetailEncryptionKeyDetailsPtr and ShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutput values.
// You can construct a concrete instance of `ShardedDatabaseShardDetailEncryptionKeyDetailsPtrInput` via:
//
//	        ShardedDatabaseShardDetailEncryptionKeyDetailsArgs{...}
//
//	or:
//
//	        nil
type ShardedDatabaseShardDetailEncryptionKeyDetailsPtrInput interface {
	pulumi.Input

	ToShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutput() ShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutput
	ToShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutputWithContext(context.Context) ShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutput
}

type shardedDatabaseShardDetailEncryptionKeyDetailsPtrType ShardedDatabaseShardDetailEncryptionKeyDetailsArgs

func ShardedDatabaseShardDetailEncryptionKeyDetailsPtr(v *ShardedDatabaseShardDetailEncryptionKeyDetailsArgs) ShardedDatabaseShardDetailEncryptionKeyDetailsPtrInput {
	return (*shardedDatabaseShardDetailEncryptionKeyDetailsPtrType)(v)
}

func (*shardedDatabaseShardDetailEncryptionKeyDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ShardedDatabaseShardDetailEncryptionKeyDetails)(nil)).Elem()
}

func (i *shardedDatabaseShardDetailEncryptionKeyDetailsPtrType) ToShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutput() ShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutput {
	return i.ToShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutputWithContext(context.Background())
}

func (i *shardedDatabaseShardDetailEncryptionKeyDetailsPtrType) ToShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutputWithContext(ctx context.Context) ShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutput)
}

type ShardedDatabaseShardDetailEncryptionKeyDetailsOutput struct{ *pulumi.OutputState }

func (ShardedDatabaseShardDetailEncryptionKeyDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShardedDatabaseShardDetailEncryptionKeyDetails)(nil)).Elem()
}

func (o ShardedDatabaseShardDetailEncryptionKeyDetailsOutput) ToShardedDatabaseShardDetailEncryptionKeyDetailsOutput() ShardedDatabaseShardDetailEncryptionKeyDetailsOutput {
	return o
}

func (o ShardedDatabaseShardDetailEncryptionKeyDetailsOutput) ToShardedDatabaseShardDetailEncryptionKeyDetailsOutputWithContext(ctx context.Context) ShardedDatabaseShardDetailEncryptionKeyDetailsOutput {
	return o
}

func (o ShardedDatabaseShardDetailEncryptionKeyDetailsOutput) ToShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutput() ShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutput {
	return o.ToShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutputWithContext(context.Background())
}

func (o ShardedDatabaseShardDetailEncryptionKeyDetailsOutput) ToShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutputWithContext(ctx context.Context) ShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ShardedDatabaseShardDetailEncryptionKeyDetails) *ShardedDatabaseShardDetailEncryptionKeyDetails {
		return &v
	}).(ShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key in vault identified by vaultId in customer tenancy  that is used as the master encryption key.
func (o ShardedDatabaseShardDetailEncryptionKeyDetailsOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v ShardedDatabaseShardDetailEncryptionKeyDetails) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key version for key identified by kmsKeyId that is used in data encryption (TDE) operations.
func (o ShardedDatabaseShardDetailEncryptionKeyDetailsOutput) KmsKeyVersionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShardedDatabaseShardDetailEncryptionKeyDetails) *string { return v.KmsKeyVersionId }).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the vault in customer tenancy where KMS key is present. For shard or catalog with cross-region data guard enabled, user needs to make sure to provide virtual private vault only, which is also replicated in the region of standby shard.
func (o ShardedDatabaseShardDetailEncryptionKeyDetailsOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v ShardedDatabaseShardDetailEncryptionKeyDetails) string { return v.VaultId }).(pulumi.StringOutput)
}

type ShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutput struct{ *pulumi.OutputState }

func (ShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShardedDatabaseShardDetailEncryptionKeyDetails)(nil)).Elem()
}

func (o ShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutput) ToShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutput() ShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutput {
	return o
}

func (o ShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutput) ToShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutputWithContext(ctx context.Context) ShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutput {
	return o
}

func (o ShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutput) Elem() ShardedDatabaseShardDetailEncryptionKeyDetailsOutput {
	return o.ApplyT(func(v *ShardedDatabaseShardDetailEncryptionKeyDetails) ShardedDatabaseShardDetailEncryptionKeyDetails {
		if v != nil {
			return *v
		}
		var ret ShardedDatabaseShardDetailEncryptionKeyDetails
		return ret
	}).(ShardedDatabaseShardDetailEncryptionKeyDetailsOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key in vault identified by vaultId in customer tenancy  that is used as the master encryption key.
func (o ShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShardedDatabaseShardDetailEncryptionKeyDetails) *string {
		if v == nil {
			return nil
		}
		return &v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key version for key identified by kmsKeyId that is used in data encryption (TDE) operations.
func (o ShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutput) KmsKeyVersionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShardedDatabaseShardDetailEncryptionKeyDetails) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyVersionId
	}).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the vault in customer tenancy where KMS key is present. For shard or catalog with cross-region data guard enabled, user needs to make sure to provide virtual private vault only, which is also replicated in the region of standby shard.
func (o ShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutput) VaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShardedDatabaseShardDetailEncryptionKeyDetails) *string {
		if v == nil {
			return nil
		}
		return &v.VaultId
	}).(pulumi.StringPtrOutput)
}

type GetPrivateEndpointsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetPrivateEndpointsFilterInput is an input type that accepts GetPrivateEndpointsFilterArgs and GetPrivateEndpointsFilterOutput values.
// You can construct a concrete instance of `GetPrivateEndpointsFilterInput` via:
//
//	GetPrivateEndpointsFilterArgs{...}
type GetPrivateEndpointsFilterInput interface {
	pulumi.Input

	ToGetPrivateEndpointsFilterOutput() GetPrivateEndpointsFilterOutput
	ToGetPrivateEndpointsFilterOutputWithContext(context.Context) GetPrivateEndpointsFilterOutput
}

type GetPrivateEndpointsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetPrivateEndpointsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateEndpointsFilter)(nil)).Elem()
}

func (i GetPrivateEndpointsFilterArgs) ToGetPrivateEndpointsFilterOutput() GetPrivateEndpointsFilterOutput {
	return i.ToGetPrivateEndpointsFilterOutputWithContext(context.Background())
}

func (i GetPrivateEndpointsFilterArgs) ToGetPrivateEndpointsFilterOutputWithContext(ctx context.Context) GetPrivateEndpointsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateEndpointsFilterOutput)
}

// GetPrivateEndpointsFilterArrayInput is an input type that accepts GetPrivateEndpointsFilterArray and GetPrivateEndpointsFilterArrayOutput values.
// You can construct a concrete instance of `GetPrivateEndpointsFilterArrayInput` via:
//
//	GetPrivateEndpointsFilterArray{ GetPrivateEndpointsFilterArgs{...} }
type GetPrivateEndpointsFilterArrayInput interface {
	pulumi.Input

	ToGetPrivateEndpointsFilterArrayOutput() GetPrivateEndpointsFilterArrayOutput
	ToGetPrivateEndpointsFilterArrayOutputWithContext(context.Context) GetPrivateEndpointsFilterArrayOutput
}

type GetPrivateEndpointsFilterArray []GetPrivateEndpointsFilterInput

func (GetPrivateEndpointsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateEndpointsFilter)(nil)).Elem()
}

func (i GetPrivateEndpointsFilterArray) ToGetPrivateEndpointsFilterArrayOutput() GetPrivateEndpointsFilterArrayOutput {
	return i.ToGetPrivateEndpointsFilterArrayOutputWithContext(context.Background())
}

func (i GetPrivateEndpointsFilterArray) ToGetPrivateEndpointsFilterArrayOutputWithContext(ctx context.Context) GetPrivateEndpointsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateEndpointsFilterArrayOutput)
}

type GetPrivateEndpointsFilterOutput struct{ *pulumi.OutputState }

func (GetPrivateEndpointsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateEndpointsFilter)(nil)).Elem()
}

func (o GetPrivateEndpointsFilterOutput) ToGetPrivateEndpointsFilterOutput() GetPrivateEndpointsFilterOutput {
	return o
}

func (o GetPrivateEndpointsFilterOutput) ToGetPrivateEndpointsFilterOutputWithContext(ctx context.Context) GetPrivateEndpointsFilterOutput {
	return o
}

func (o GetPrivateEndpointsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateEndpointsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetPrivateEndpointsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetPrivateEndpointsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetPrivateEndpointsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPrivateEndpointsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetPrivateEndpointsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetPrivateEndpointsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateEndpointsFilter)(nil)).Elem()
}

func (o GetPrivateEndpointsFilterArrayOutput) ToGetPrivateEndpointsFilterArrayOutput() GetPrivateEndpointsFilterArrayOutput {
	return o
}

func (o GetPrivateEndpointsFilterArrayOutput) ToGetPrivateEndpointsFilterArrayOutputWithContext(ctx context.Context) GetPrivateEndpointsFilterArrayOutput {
	return o
}

func (o GetPrivateEndpointsFilterArrayOutput) Index(i pulumi.IntInput) GetPrivateEndpointsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivateEndpointsFilter {
		return vs[0].([]GetPrivateEndpointsFilter)[vs[1].(int)]
	}).(GetPrivateEndpointsFilterOutput)
}

type GetPrivateEndpointsPrivateEndpointCollection struct {
	Items []GetPrivateEndpointsPrivateEndpointCollectionItem `pulumi:"items"`
}

// GetPrivateEndpointsPrivateEndpointCollectionInput is an input type that accepts GetPrivateEndpointsPrivateEndpointCollectionArgs and GetPrivateEndpointsPrivateEndpointCollectionOutput values.
// You can construct a concrete instance of `GetPrivateEndpointsPrivateEndpointCollectionInput` via:
//
//	GetPrivateEndpointsPrivateEndpointCollectionArgs{...}
type GetPrivateEndpointsPrivateEndpointCollectionInput interface {
	pulumi.Input

	ToGetPrivateEndpointsPrivateEndpointCollectionOutput() GetPrivateEndpointsPrivateEndpointCollectionOutput
	ToGetPrivateEndpointsPrivateEndpointCollectionOutputWithContext(context.Context) GetPrivateEndpointsPrivateEndpointCollectionOutput
}

type GetPrivateEndpointsPrivateEndpointCollectionArgs struct {
	Items GetPrivateEndpointsPrivateEndpointCollectionItemArrayInput `pulumi:"items"`
}

func (GetPrivateEndpointsPrivateEndpointCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateEndpointsPrivateEndpointCollection)(nil)).Elem()
}

func (i GetPrivateEndpointsPrivateEndpointCollectionArgs) ToGetPrivateEndpointsPrivateEndpointCollectionOutput() GetPrivateEndpointsPrivateEndpointCollectionOutput {
	return i.ToGetPrivateEndpointsPrivateEndpointCollectionOutputWithContext(context.Background())
}

func (i GetPrivateEndpointsPrivateEndpointCollectionArgs) ToGetPrivateEndpointsPrivateEndpointCollectionOutputWithContext(ctx context.Context) GetPrivateEndpointsPrivateEndpointCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateEndpointsPrivateEndpointCollectionOutput)
}

// GetPrivateEndpointsPrivateEndpointCollectionArrayInput is an input type that accepts GetPrivateEndpointsPrivateEndpointCollectionArray and GetPrivateEndpointsPrivateEndpointCollectionArrayOutput values.
// You can construct a concrete instance of `GetPrivateEndpointsPrivateEndpointCollectionArrayInput` via:
//
//	GetPrivateEndpointsPrivateEndpointCollectionArray{ GetPrivateEndpointsPrivateEndpointCollectionArgs{...} }
type GetPrivateEndpointsPrivateEndpointCollectionArrayInput interface {
	pulumi.Input

	ToGetPrivateEndpointsPrivateEndpointCollectionArrayOutput() GetPrivateEndpointsPrivateEndpointCollectionArrayOutput
	ToGetPrivateEndpointsPrivateEndpointCollectionArrayOutputWithContext(context.Context) GetPrivateEndpointsPrivateEndpointCollectionArrayOutput
}

type GetPrivateEndpointsPrivateEndpointCollectionArray []GetPrivateEndpointsPrivateEndpointCollectionInput

func (GetPrivateEndpointsPrivateEndpointCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateEndpointsPrivateEndpointCollection)(nil)).Elem()
}

func (i GetPrivateEndpointsPrivateEndpointCollectionArray) ToGetPrivateEndpointsPrivateEndpointCollectionArrayOutput() GetPrivateEndpointsPrivateEndpointCollectionArrayOutput {
	return i.ToGetPrivateEndpointsPrivateEndpointCollectionArrayOutputWithContext(context.Background())
}

func (i GetPrivateEndpointsPrivateEndpointCollectionArray) ToGetPrivateEndpointsPrivateEndpointCollectionArrayOutputWithContext(ctx context.Context) GetPrivateEndpointsPrivateEndpointCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateEndpointsPrivateEndpointCollectionArrayOutput)
}

type GetPrivateEndpointsPrivateEndpointCollectionOutput struct{ *pulumi.OutputState }

func (GetPrivateEndpointsPrivateEndpointCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateEndpointsPrivateEndpointCollection)(nil)).Elem()
}

func (o GetPrivateEndpointsPrivateEndpointCollectionOutput) ToGetPrivateEndpointsPrivateEndpointCollectionOutput() GetPrivateEndpointsPrivateEndpointCollectionOutput {
	return o
}

func (o GetPrivateEndpointsPrivateEndpointCollectionOutput) ToGetPrivateEndpointsPrivateEndpointCollectionOutputWithContext(ctx context.Context) GetPrivateEndpointsPrivateEndpointCollectionOutput {
	return o
}

func (o GetPrivateEndpointsPrivateEndpointCollectionOutput) Items() GetPrivateEndpointsPrivateEndpointCollectionItemArrayOutput {
	return o.ApplyT(func(v GetPrivateEndpointsPrivateEndpointCollection) []GetPrivateEndpointsPrivateEndpointCollectionItem {
		return v.Items
	}).(GetPrivateEndpointsPrivateEndpointCollectionItemArrayOutput)
}

type GetPrivateEndpointsPrivateEndpointCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetPrivateEndpointsPrivateEndpointCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateEndpointsPrivateEndpointCollection)(nil)).Elem()
}

func (o GetPrivateEndpointsPrivateEndpointCollectionArrayOutput) ToGetPrivateEndpointsPrivateEndpointCollectionArrayOutput() GetPrivateEndpointsPrivateEndpointCollectionArrayOutput {
	return o
}

func (o GetPrivateEndpointsPrivateEndpointCollectionArrayOutput) ToGetPrivateEndpointsPrivateEndpointCollectionArrayOutputWithContext(ctx context.Context) GetPrivateEndpointsPrivateEndpointCollectionArrayOutput {
	return o
}

func (o GetPrivateEndpointsPrivateEndpointCollectionArrayOutput) Index(i pulumi.IntInput) GetPrivateEndpointsPrivateEndpointCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivateEndpointsPrivateEndpointCollection {
		return vs[0].([]GetPrivateEndpointsPrivateEndpointCollection)[vs[1].(int)]
	}).(GetPrivateEndpointsPrivateEndpointCollectionOutput)
}

type GetPrivateEndpointsPrivateEndpointCollectionItem struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// PrivateEndpoint description.
	Description string `pulumi:"description"`
	// A filter to return only private endpoint that match the entire name given. The match is not case sensitive.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The identifier of the Private Endpoint.
	Id string `pulumi:"id"`
	// Detailed message for the lifecycle state.
	LifecycleStateDetails string `pulumi:"lifecycleStateDetails"`
	// The OCIDs of the network security groups that the private endpoint belongs to.
	NsgIds []string `pulumi:"nsgIds"`
	// IP address of the Private Endpoint.
	PrivateIp string `pulumi:"privateIp"`
	// The identifier of the proxy compute instance.
	ProxyComputeInstanceId        string `pulumi:"proxyComputeInstanceId"`
	ReinstateProxyInstanceTrigger int    `pulumi:"reinstateProxyInstanceTrigger"`
	// The OCIDs of sharded databases that consumes the given private endpoint.
	ShardedDatabases []string `pulumi:"shardedDatabases"`
	// A filter to return only resources their lifecycleState matches the given lifecycleState.
	State string `pulumi:"state"`
	// Identifier of the subnet in which private endpoint exists.
	SubnetId string `pulumi:"subnetId"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time the PrivateEndpoint was first created. An RFC3339 formatted datetime string
	TimeCreated string `pulumi:"timeCreated"`
	// The time the Private Endpoint was last updated. An RFC3339 formatted datetime string
	TimeUpdated string `pulumi:"timeUpdated"`
	// Identifier of the VCN in which subnet exists.
	VcnId string `pulumi:"vcnId"`
}

// GetPrivateEndpointsPrivateEndpointCollectionItemInput is an input type that accepts GetPrivateEndpointsPrivateEndpointCollectionItemArgs and GetPrivateEndpointsPrivateEndpointCollectionItemOutput values.
// You can construct a concrete instance of `GetPrivateEndpointsPrivateEndpointCollectionItemInput` via:
//
//	GetPrivateEndpointsPrivateEndpointCollectionItemArgs{...}
type GetPrivateEndpointsPrivateEndpointCollectionItemInput interface {
	pulumi.Input

	ToGetPrivateEndpointsPrivateEndpointCollectionItemOutput() GetPrivateEndpointsPrivateEndpointCollectionItemOutput
	ToGetPrivateEndpointsPrivateEndpointCollectionItemOutputWithContext(context.Context) GetPrivateEndpointsPrivateEndpointCollectionItemOutput
}

type GetPrivateEndpointsPrivateEndpointCollectionItemArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// PrivateEndpoint description.
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only private endpoint that match the entire name given. The match is not case sensitive.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// The identifier of the Private Endpoint.
	Id pulumi.StringInput `pulumi:"id"`
	// Detailed message for the lifecycle state.
	LifecycleStateDetails pulumi.StringInput `pulumi:"lifecycleStateDetails"`
	// The OCIDs of the network security groups that the private endpoint belongs to.
	NsgIds pulumi.StringArrayInput `pulumi:"nsgIds"`
	// IP address of the Private Endpoint.
	PrivateIp pulumi.StringInput `pulumi:"privateIp"`
	// The identifier of the proxy compute instance.
	ProxyComputeInstanceId        pulumi.StringInput `pulumi:"proxyComputeInstanceId"`
	ReinstateProxyInstanceTrigger pulumi.IntInput    `pulumi:"reinstateProxyInstanceTrigger"`
	// The OCIDs of sharded databases that consumes the given private endpoint.
	ShardedDatabases pulumi.StringArrayInput `pulumi:"shardedDatabases"`
	// A filter to return only resources their lifecycleState matches the given lifecycleState.
	State pulumi.StringInput `pulumi:"state"`
	// Identifier of the subnet in which private endpoint exists.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput `pulumi:"systemTags"`
	// The time the PrivateEndpoint was first created. An RFC3339 formatted datetime string
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the Private Endpoint was last updated. An RFC3339 formatted datetime string
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// Identifier of the VCN in which subnet exists.
	VcnId pulumi.StringInput `pulumi:"vcnId"`
}

func (GetPrivateEndpointsPrivateEndpointCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateEndpointsPrivateEndpointCollectionItem)(nil)).Elem()
}

func (i GetPrivateEndpointsPrivateEndpointCollectionItemArgs) ToGetPrivateEndpointsPrivateEndpointCollectionItemOutput() GetPrivateEndpointsPrivateEndpointCollectionItemOutput {
	return i.ToGetPrivateEndpointsPrivateEndpointCollectionItemOutputWithContext(context.Background())
}

func (i GetPrivateEndpointsPrivateEndpointCollectionItemArgs) ToGetPrivateEndpointsPrivateEndpointCollectionItemOutputWithContext(ctx context.Context) GetPrivateEndpointsPrivateEndpointCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateEndpointsPrivateEndpointCollectionItemOutput)
}

// GetPrivateEndpointsPrivateEndpointCollectionItemArrayInput is an input type that accepts GetPrivateEndpointsPrivateEndpointCollectionItemArray and GetPrivateEndpointsPrivateEndpointCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetPrivateEndpointsPrivateEndpointCollectionItemArrayInput` via:
//
//	GetPrivateEndpointsPrivateEndpointCollectionItemArray{ GetPrivateEndpointsPrivateEndpointCollectionItemArgs{...} }
type GetPrivateEndpointsPrivateEndpointCollectionItemArrayInput interface {
	pulumi.Input

	ToGetPrivateEndpointsPrivateEndpointCollectionItemArrayOutput() GetPrivateEndpointsPrivateEndpointCollectionItemArrayOutput
	ToGetPrivateEndpointsPrivateEndpointCollectionItemArrayOutputWithContext(context.Context) GetPrivateEndpointsPrivateEndpointCollectionItemArrayOutput
}

type GetPrivateEndpointsPrivateEndpointCollectionItemArray []GetPrivateEndpointsPrivateEndpointCollectionItemInput

func (GetPrivateEndpointsPrivateEndpointCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateEndpointsPrivateEndpointCollectionItem)(nil)).Elem()
}

func (i GetPrivateEndpointsPrivateEndpointCollectionItemArray) ToGetPrivateEndpointsPrivateEndpointCollectionItemArrayOutput() GetPrivateEndpointsPrivateEndpointCollectionItemArrayOutput {
	return i.ToGetPrivateEndpointsPrivateEndpointCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetPrivateEndpointsPrivateEndpointCollectionItemArray) ToGetPrivateEndpointsPrivateEndpointCollectionItemArrayOutputWithContext(ctx context.Context) GetPrivateEndpointsPrivateEndpointCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateEndpointsPrivateEndpointCollectionItemArrayOutput)
}

type GetPrivateEndpointsPrivateEndpointCollectionItemOutput struct{ *pulumi.OutputState }

func (GetPrivateEndpointsPrivateEndpointCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateEndpointsPrivateEndpointCollectionItem)(nil)).Elem()
}

func (o GetPrivateEndpointsPrivateEndpointCollectionItemOutput) ToGetPrivateEndpointsPrivateEndpointCollectionItemOutput() GetPrivateEndpointsPrivateEndpointCollectionItemOutput {
	return o
}

func (o GetPrivateEndpointsPrivateEndpointCollectionItemOutput) ToGetPrivateEndpointsPrivateEndpointCollectionItemOutputWithContext(ctx context.Context) GetPrivateEndpointsPrivateEndpointCollectionItemOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetPrivateEndpointsPrivateEndpointCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateEndpointsPrivateEndpointCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetPrivateEndpointsPrivateEndpointCollectionItemOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetPrivateEndpointsPrivateEndpointCollectionItem) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// PrivateEndpoint description.
func (o GetPrivateEndpointsPrivateEndpointCollectionItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateEndpointsPrivateEndpointCollectionItem) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only private endpoint that match the entire name given. The match is not case sensitive.
func (o GetPrivateEndpointsPrivateEndpointCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateEndpointsPrivateEndpointCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetPrivateEndpointsPrivateEndpointCollectionItemOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetPrivateEndpointsPrivateEndpointCollectionItem) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The identifier of the Private Endpoint.
func (o GetPrivateEndpointsPrivateEndpointCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateEndpointsPrivateEndpointCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// Detailed message for the lifecycle state.
func (o GetPrivateEndpointsPrivateEndpointCollectionItemOutput) LifecycleStateDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateEndpointsPrivateEndpointCollectionItem) string { return v.LifecycleStateDetails }).(pulumi.StringOutput)
}

// The OCIDs of the network security groups that the private endpoint belongs to.
func (o GetPrivateEndpointsPrivateEndpointCollectionItemOutput) NsgIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPrivateEndpointsPrivateEndpointCollectionItem) []string { return v.NsgIds }).(pulumi.StringArrayOutput)
}

// IP address of the Private Endpoint.
func (o GetPrivateEndpointsPrivateEndpointCollectionItemOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateEndpointsPrivateEndpointCollectionItem) string { return v.PrivateIp }).(pulumi.StringOutput)
}

// The identifier of the proxy compute instance.
func (o GetPrivateEndpointsPrivateEndpointCollectionItemOutput) ProxyComputeInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateEndpointsPrivateEndpointCollectionItem) string { return v.ProxyComputeInstanceId }).(pulumi.StringOutput)
}

func (o GetPrivateEndpointsPrivateEndpointCollectionItemOutput) ReinstateProxyInstanceTrigger() pulumi.IntOutput {
	return o.ApplyT(func(v GetPrivateEndpointsPrivateEndpointCollectionItem) int { return v.ReinstateProxyInstanceTrigger }).(pulumi.IntOutput)
}

// The OCIDs of sharded databases that consumes the given private endpoint.
func (o GetPrivateEndpointsPrivateEndpointCollectionItemOutput) ShardedDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPrivateEndpointsPrivateEndpointCollectionItem) []string { return v.ShardedDatabases }).(pulumi.StringArrayOutput)
}

// A filter to return only resources their lifecycleState matches the given lifecycleState.
func (o GetPrivateEndpointsPrivateEndpointCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateEndpointsPrivateEndpointCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// Identifier of the subnet in which private endpoint exists.
func (o GetPrivateEndpointsPrivateEndpointCollectionItemOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateEndpointsPrivateEndpointCollectionItem) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetPrivateEndpointsPrivateEndpointCollectionItemOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetPrivateEndpointsPrivateEndpointCollectionItem) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The time the PrivateEndpoint was first created. An RFC3339 formatted datetime string
func (o GetPrivateEndpointsPrivateEndpointCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateEndpointsPrivateEndpointCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the Private Endpoint was last updated. An RFC3339 formatted datetime string
func (o GetPrivateEndpointsPrivateEndpointCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateEndpointsPrivateEndpointCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Identifier of the VCN in which subnet exists.
func (o GetPrivateEndpointsPrivateEndpointCollectionItemOutput) VcnId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateEndpointsPrivateEndpointCollectionItem) string { return v.VcnId }).(pulumi.StringOutput)
}

type GetPrivateEndpointsPrivateEndpointCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetPrivateEndpointsPrivateEndpointCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateEndpointsPrivateEndpointCollectionItem)(nil)).Elem()
}

func (o GetPrivateEndpointsPrivateEndpointCollectionItemArrayOutput) ToGetPrivateEndpointsPrivateEndpointCollectionItemArrayOutput() GetPrivateEndpointsPrivateEndpointCollectionItemArrayOutput {
	return o
}

func (o GetPrivateEndpointsPrivateEndpointCollectionItemArrayOutput) ToGetPrivateEndpointsPrivateEndpointCollectionItemArrayOutputWithContext(ctx context.Context) GetPrivateEndpointsPrivateEndpointCollectionItemArrayOutput {
	return o
}

func (o GetPrivateEndpointsPrivateEndpointCollectionItemArrayOutput) Index(i pulumi.IntInput) GetPrivateEndpointsPrivateEndpointCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivateEndpointsPrivateEndpointCollectionItem {
		return vs[0].([]GetPrivateEndpointsPrivateEndpointCollectionItem)[vs[1].(int)]
	}).(GetPrivateEndpointsPrivateEndpointCollectionItemOutput)
}

type GetShardedDatabaseCatalogDetail struct {
	AdminPassword string `pulumi:"adminPassword"`
	// Identifier of the primary cloudAutonomousVmCluster for the shard.
	CloudAutonomousVmClusterId string `pulumi:"cloudAutonomousVmClusterId"`
	// The compute amount available to the underlying autonomous database associated with shard.
	ComputeCount float64 `pulumi:"computeCount"`
	// Identifier of the underlying container database.
	ContainerDatabaseId string `pulumi:"containerDatabaseId"`
	// Identifier of the underlying container database parent.
	ContainerDatabaseParentId string `pulumi:"containerDatabaseParentId"`
	// The data disk group size to be allocated in GBs.
	DataStorageSizeInGbs float64 `pulumi:"dataStorageSizeInGbs"`
	// Details of encryption key to be used to encrypt data for shards and catalog for sharded database. For system-defined sharding type, all shards have to use same encryptionKeyDetails. For system-defined sharding, if encryptionKeyDetails are not specified for catalog, then Oracle managed key will be used for catalog. For user-defined sharding type, if encryptionKeyDetails are not provided for any shard or catalog, then Oracle managed key will be used for such shard or catalog. For system-defined or user-defined sharding type, if the shard or catalog has a peer in region other than primary shard or catalog region, then make sure to provide virtual vault for such shard or catalog, which is also replicated to peer region (the region where peer or standby shard or catalog exists).
	EncryptionKeyDetails []GetShardedDatabaseCatalogDetailEncryptionKeyDetail `pulumi:"encryptionKeyDetails"`
	// Determines the auto-scaling mode.
	IsAutoScalingEnabled bool `pulumi:"isAutoScalingEnabled"`
	// Comma separated names of argument corresponding to which metadata need to be retrived, namely VM_CLUSTER_INFO, ADDITIONAL_RESOURCE_INFO. An example is metadata=VM_CLUSTER_INFO,ADDITIONAL_RESOURCE_INFO.
	Metadata map[string]string `pulumi:"metadata"`
	// Name of the shard.
	Name string `pulumi:"name"`
	// Identifier of the peer cloudAutonomousVmCluster for the shard.
	PeerCloudAutonomousVmClusterId string `pulumi:"peerCloudAutonomousVmClusterId"`
	// Name of the shard-group to which the shard belongs.
	ShardGroup string `pulumi:"shardGroup"`
	// Status of shard or catalog or gsm for the sharded database.
	Status string `pulumi:"status"`
	// Identifier of the underlying supporting resource.
	SupportingResourceId string `pulumi:"supportingResourceId"`
	// The time the the Sharded Database was created. An RFC3339 formatted datetime string
	TimeCreated string `pulumi:"timeCreated"`
	// The time the ssl certificate associated with shard expires. An RFC3339 formatted datetime string
	TimeSslCertificateExpires string `pulumi:"timeSslCertificateExpires"`
	// The time the Sharded Database was last updated. An RFC3339 formatted datetime string
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetShardedDatabaseCatalogDetailInput is an input type that accepts GetShardedDatabaseCatalogDetailArgs and GetShardedDatabaseCatalogDetailOutput values.
// You can construct a concrete instance of `GetShardedDatabaseCatalogDetailInput` via:
//
//	GetShardedDatabaseCatalogDetailArgs{...}
type GetShardedDatabaseCatalogDetailInput interface {
	pulumi.Input

	ToGetShardedDatabaseCatalogDetailOutput() GetShardedDatabaseCatalogDetailOutput
	ToGetShardedDatabaseCatalogDetailOutputWithContext(context.Context) GetShardedDatabaseCatalogDetailOutput
}

type GetShardedDatabaseCatalogDetailArgs struct {
	AdminPassword pulumi.StringInput `pulumi:"adminPassword"`
	// Identifier of the primary cloudAutonomousVmCluster for the shard.
	CloudAutonomousVmClusterId pulumi.StringInput `pulumi:"cloudAutonomousVmClusterId"`
	// The compute amount available to the underlying autonomous database associated with shard.
	ComputeCount pulumi.Float64Input `pulumi:"computeCount"`
	// Identifier of the underlying container database.
	ContainerDatabaseId pulumi.StringInput `pulumi:"containerDatabaseId"`
	// Identifier of the underlying container database parent.
	ContainerDatabaseParentId pulumi.StringInput `pulumi:"containerDatabaseParentId"`
	// The data disk group size to be allocated in GBs.
	DataStorageSizeInGbs pulumi.Float64Input `pulumi:"dataStorageSizeInGbs"`
	// Details of encryption key to be used to encrypt data for shards and catalog for sharded database. For system-defined sharding type, all shards have to use same encryptionKeyDetails. For system-defined sharding, if encryptionKeyDetails are not specified for catalog, then Oracle managed key will be used for catalog. For user-defined sharding type, if encryptionKeyDetails are not provided for any shard or catalog, then Oracle managed key will be used for such shard or catalog. For system-defined or user-defined sharding type, if the shard or catalog has a peer in region other than primary shard or catalog region, then make sure to provide virtual vault for such shard or catalog, which is also replicated to peer region (the region where peer or standby shard or catalog exists).
	EncryptionKeyDetails GetShardedDatabaseCatalogDetailEncryptionKeyDetailArrayInput `pulumi:"encryptionKeyDetails"`
	// Determines the auto-scaling mode.
	IsAutoScalingEnabled pulumi.BoolInput `pulumi:"isAutoScalingEnabled"`
	// Comma separated names of argument corresponding to which metadata need to be retrived, namely VM_CLUSTER_INFO, ADDITIONAL_RESOURCE_INFO. An example is metadata=VM_CLUSTER_INFO,ADDITIONAL_RESOURCE_INFO.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// Name of the shard.
	Name pulumi.StringInput `pulumi:"name"`
	// Identifier of the peer cloudAutonomousVmCluster for the shard.
	PeerCloudAutonomousVmClusterId pulumi.StringInput `pulumi:"peerCloudAutonomousVmClusterId"`
	// Name of the shard-group to which the shard belongs.
	ShardGroup pulumi.StringInput `pulumi:"shardGroup"`
	// Status of shard or catalog or gsm for the sharded database.
	Status pulumi.StringInput `pulumi:"status"`
	// Identifier of the underlying supporting resource.
	SupportingResourceId pulumi.StringInput `pulumi:"supportingResourceId"`
	// The time the the Sharded Database was created. An RFC3339 formatted datetime string
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the ssl certificate associated with shard expires. An RFC3339 formatted datetime string
	TimeSslCertificateExpires pulumi.StringInput `pulumi:"timeSslCertificateExpires"`
	// The time the Sharded Database was last updated. An RFC3339 formatted datetime string
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetShardedDatabaseCatalogDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetShardedDatabaseCatalogDetail)(nil)).Elem()
}

func (i GetShardedDatabaseCatalogDetailArgs) ToGetShardedDatabaseCatalogDetailOutput() GetShardedDatabaseCatalogDetailOutput {
	return i.ToGetShardedDatabaseCatalogDetailOutputWithContext(context.Background())
}

func (i GetShardedDatabaseCatalogDetailArgs) ToGetShardedDatabaseCatalogDetailOutputWithContext(ctx context.Context) GetShardedDatabaseCatalogDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetShardedDatabaseCatalogDetailOutput)
}

// GetShardedDatabaseCatalogDetailArrayInput is an input type that accepts GetShardedDatabaseCatalogDetailArray and GetShardedDatabaseCatalogDetailArrayOutput values.
// You can construct a concrete instance of `GetShardedDatabaseCatalogDetailArrayInput` via:
//
//	GetShardedDatabaseCatalogDetailArray{ GetShardedDatabaseCatalogDetailArgs{...} }
type GetShardedDatabaseCatalogDetailArrayInput interface {
	pulumi.Input

	ToGetShardedDatabaseCatalogDetailArrayOutput() GetShardedDatabaseCatalogDetailArrayOutput
	ToGetShardedDatabaseCatalogDetailArrayOutputWithContext(context.Context) GetShardedDatabaseCatalogDetailArrayOutput
}

type GetShardedDatabaseCatalogDetailArray []GetShardedDatabaseCatalogDetailInput

func (GetShardedDatabaseCatalogDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetShardedDatabaseCatalogDetail)(nil)).Elem()
}

func (i GetShardedDatabaseCatalogDetailArray) ToGetShardedDatabaseCatalogDetailArrayOutput() GetShardedDatabaseCatalogDetailArrayOutput {
	return i.ToGetShardedDatabaseCatalogDetailArrayOutputWithContext(context.Background())
}

func (i GetShardedDatabaseCatalogDetailArray) ToGetShardedDatabaseCatalogDetailArrayOutputWithContext(ctx context.Context) GetShardedDatabaseCatalogDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetShardedDatabaseCatalogDetailArrayOutput)
}

type GetShardedDatabaseCatalogDetailOutput struct{ *pulumi.OutputState }

func (GetShardedDatabaseCatalogDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetShardedDatabaseCatalogDetail)(nil)).Elem()
}

func (o GetShardedDatabaseCatalogDetailOutput) ToGetShardedDatabaseCatalogDetailOutput() GetShardedDatabaseCatalogDetailOutput {
	return o
}

func (o GetShardedDatabaseCatalogDetailOutput) ToGetShardedDatabaseCatalogDetailOutputWithContext(ctx context.Context) GetShardedDatabaseCatalogDetailOutput {
	return o
}

func (o GetShardedDatabaseCatalogDetailOutput) AdminPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseCatalogDetail) string { return v.AdminPassword }).(pulumi.StringOutput)
}

// Identifier of the primary cloudAutonomousVmCluster for the shard.
func (o GetShardedDatabaseCatalogDetailOutput) CloudAutonomousVmClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseCatalogDetail) string { return v.CloudAutonomousVmClusterId }).(pulumi.StringOutput)
}

// The compute amount available to the underlying autonomous database associated with shard.
func (o GetShardedDatabaseCatalogDetailOutput) ComputeCount() pulumi.Float64Output {
	return o.ApplyT(func(v GetShardedDatabaseCatalogDetail) float64 { return v.ComputeCount }).(pulumi.Float64Output)
}

// Identifier of the underlying container database.
func (o GetShardedDatabaseCatalogDetailOutput) ContainerDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseCatalogDetail) string { return v.ContainerDatabaseId }).(pulumi.StringOutput)
}

// Identifier of the underlying container database parent.
func (o GetShardedDatabaseCatalogDetailOutput) ContainerDatabaseParentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseCatalogDetail) string { return v.ContainerDatabaseParentId }).(pulumi.StringOutput)
}

// The data disk group size to be allocated in GBs.
func (o GetShardedDatabaseCatalogDetailOutput) DataStorageSizeInGbs() pulumi.Float64Output {
	return o.ApplyT(func(v GetShardedDatabaseCatalogDetail) float64 { return v.DataStorageSizeInGbs }).(pulumi.Float64Output)
}

// Details of encryption key to be used to encrypt data for shards and catalog for sharded database. For system-defined sharding type, all shards have to use same encryptionKeyDetails. For system-defined sharding, if encryptionKeyDetails are not specified for catalog, then Oracle managed key will be used for catalog. For user-defined sharding type, if encryptionKeyDetails are not provided for any shard or catalog, then Oracle managed key will be used for such shard or catalog. For system-defined or user-defined sharding type, if the shard or catalog has a peer in region other than primary shard or catalog region, then make sure to provide virtual vault for such shard or catalog, which is also replicated to peer region (the region where peer or standby shard or catalog exists).
func (o GetShardedDatabaseCatalogDetailOutput) EncryptionKeyDetails() GetShardedDatabaseCatalogDetailEncryptionKeyDetailArrayOutput {
	return o.ApplyT(func(v GetShardedDatabaseCatalogDetail) []GetShardedDatabaseCatalogDetailEncryptionKeyDetail {
		return v.EncryptionKeyDetails
	}).(GetShardedDatabaseCatalogDetailEncryptionKeyDetailArrayOutput)
}

// Determines the auto-scaling mode.
func (o GetShardedDatabaseCatalogDetailOutput) IsAutoScalingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetShardedDatabaseCatalogDetail) bool { return v.IsAutoScalingEnabled }).(pulumi.BoolOutput)
}

// Comma separated names of argument corresponding to which metadata need to be retrived, namely VM_CLUSTER_INFO, ADDITIONAL_RESOURCE_INFO. An example is metadata=VM_CLUSTER_INFO,ADDITIONAL_RESOURCE_INFO.
func (o GetShardedDatabaseCatalogDetailOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetShardedDatabaseCatalogDetail) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// Name of the shard.
func (o GetShardedDatabaseCatalogDetailOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseCatalogDetail) string { return v.Name }).(pulumi.StringOutput)
}

// Identifier of the peer cloudAutonomousVmCluster for the shard.
func (o GetShardedDatabaseCatalogDetailOutput) PeerCloudAutonomousVmClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseCatalogDetail) string { return v.PeerCloudAutonomousVmClusterId }).(pulumi.StringOutput)
}

// Name of the shard-group to which the shard belongs.
func (o GetShardedDatabaseCatalogDetailOutput) ShardGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseCatalogDetail) string { return v.ShardGroup }).(pulumi.StringOutput)
}

// Status of shard or catalog or gsm for the sharded database.
func (o GetShardedDatabaseCatalogDetailOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseCatalogDetail) string { return v.Status }).(pulumi.StringOutput)
}

// Identifier of the underlying supporting resource.
func (o GetShardedDatabaseCatalogDetailOutput) SupportingResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseCatalogDetail) string { return v.SupportingResourceId }).(pulumi.StringOutput)
}

// The time the the Sharded Database was created. An RFC3339 formatted datetime string
func (o GetShardedDatabaseCatalogDetailOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseCatalogDetail) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the ssl certificate associated with shard expires. An RFC3339 formatted datetime string
func (o GetShardedDatabaseCatalogDetailOutput) TimeSslCertificateExpires() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseCatalogDetail) string { return v.TimeSslCertificateExpires }).(pulumi.StringOutput)
}

// The time the Sharded Database was last updated. An RFC3339 formatted datetime string
func (o GetShardedDatabaseCatalogDetailOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseCatalogDetail) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetShardedDatabaseCatalogDetailArrayOutput struct{ *pulumi.OutputState }

func (GetShardedDatabaseCatalogDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetShardedDatabaseCatalogDetail)(nil)).Elem()
}

func (o GetShardedDatabaseCatalogDetailArrayOutput) ToGetShardedDatabaseCatalogDetailArrayOutput() GetShardedDatabaseCatalogDetailArrayOutput {
	return o
}

func (o GetShardedDatabaseCatalogDetailArrayOutput) ToGetShardedDatabaseCatalogDetailArrayOutputWithContext(ctx context.Context) GetShardedDatabaseCatalogDetailArrayOutput {
	return o
}

func (o GetShardedDatabaseCatalogDetailArrayOutput) Index(i pulumi.IntInput) GetShardedDatabaseCatalogDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetShardedDatabaseCatalogDetail {
		return vs[0].([]GetShardedDatabaseCatalogDetail)[vs[1].(int)]
	}).(GetShardedDatabaseCatalogDetailOutput)
}

type GetShardedDatabaseCatalogDetailEncryptionKeyDetail struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key in vault identified by vaultId in customer tenancy  that is used as the master encryption key.
	KmsKeyId string `pulumi:"kmsKeyId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key version for key identified by kmsKeyId that is used in data encryption (TDE) operations.
	KmsKeyVersionId string `pulumi:"kmsKeyVersionId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the vault in customer tenancy where KMS key is present. For shard or catalog with cross-region data guard enabled, user needs to make sure to provide virtual private vault only, which is also replicated in the region of standby shard.
	VaultId string `pulumi:"vaultId"`
}

// GetShardedDatabaseCatalogDetailEncryptionKeyDetailInput is an input type that accepts GetShardedDatabaseCatalogDetailEncryptionKeyDetailArgs and GetShardedDatabaseCatalogDetailEncryptionKeyDetailOutput values.
// You can construct a concrete instance of `GetShardedDatabaseCatalogDetailEncryptionKeyDetailInput` via:
//
//	GetShardedDatabaseCatalogDetailEncryptionKeyDetailArgs{...}
type GetShardedDatabaseCatalogDetailEncryptionKeyDetailInput interface {
	pulumi.Input

	ToGetShardedDatabaseCatalogDetailEncryptionKeyDetailOutput() GetShardedDatabaseCatalogDetailEncryptionKeyDetailOutput
	ToGetShardedDatabaseCatalogDetailEncryptionKeyDetailOutputWithContext(context.Context) GetShardedDatabaseCatalogDetailEncryptionKeyDetailOutput
}

type GetShardedDatabaseCatalogDetailEncryptionKeyDetailArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key in vault identified by vaultId in customer tenancy  that is used as the master encryption key.
	KmsKeyId pulumi.StringInput `pulumi:"kmsKeyId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key version for key identified by kmsKeyId that is used in data encryption (TDE) operations.
	KmsKeyVersionId pulumi.StringInput `pulumi:"kmsKeyVersionId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the vault in customer tenancy where KMS key is present. For shard or catalog with cross-region data guard enabled, user needs to make sure to provide virtual private vault only, which is also replicated in the region of standby shard.
	VaultId pulumi.StringInput `pulumi:"vaultId"`
}

func (GetShardedDatabaseCatalogDetailEncryptionKeyDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetShardedDatabaseCatalogDetailEncryptionKeyDetail)(nil)).Elem()
}

func (i GetShardedDatabaseCatalogDetailEncryptionKeyDetailArgs) ToGetShardedDatabaseCatalogDetailEncryptionKeyDetailOutput() GetShardedDatabaseCatalogDetailEncryptionKeyDetailOutput {
	return i.ToGetShardedDatabaseCatalogDetailEncryptionKeyDetailOutputWithContext(context.Background())
}

func (i GetShardedDatabaseCatalogDetailEncryptionKeyDetailArgs) ToGetShardedDatabaseCatalogDetailEncryptionKeyDetailOutputWithContext(ctx context.Context) GetShardedDatabaseCatalogDetailEncryptionKeyDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetShardedDatabaseCatalogDetailEncryptionKeyDetailOutput)
}

// GetShardedDatabaseCatalogDetailEncryptionKeyDetailArrayInput is an input type that accepts GetShardedDatabaseCatalogDetailEncryptionKeyDetailArray and GetShardedDatabaseCatalogDetailEncryptionKeyDetailArrayOutput values.
// You can construct a concrete instance of `GetShardedDatabaseCatalogDetailEncryptionKeyDetailArrayInput` via:
//
//	GetShardedDatabaseCatalogDetailEncryptionKeyDetailArray{ GetShardedDatabaseCatalogDetailEncryptionKeyDetailArgs{...} }
type GetShardedDatabaseCatalogDetailEncryptionKeyDetailArrayInput interface {
	pulumi.Input

	ToGetShardedDatabaseCatalogDetailEncryptionKeyDetailArrayOutput() GetShardedDatabaseCatalogDetailEncryptionKeyDetailArrayOutput
	ToGetShardedDatabaseCatalogDetailEncryptionKeyDetailArrayOutputWithContext(context.Context) GetShardedDatabaseCatalogDetailEncryptionKeyDetailArrayOutput
}

type GetShardedDatabaseCatalogDetailEncryptionKeyDetailArray []GetShardedDatabaseCatalogDetailEncryptionKeyDetailInput

func (GetShardedDatabaseCatalogDetailEncryptionKeyDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetShardedDatabaseCatalogDetailEncryptionKeyDetail)(nil)).Elem()
}

func (i GetShardedDatabaseCatalogDetailEncryptionKeyDetailArray) ToGetShardedDatabaseCatalogDetailEncryptionKeyDetailArrayOutput() GetShardedDatabaseCatalogDetailEncryptionKeyDetailArrayOutput {
	return i.ToGetShardedDatabaseCatalogDetailEncryptionKeyDetailArrayOutputWithContext(context.Background())
}

func (i GetShardedDatabaseCatalogDetailEncryptionKeyDetailArray) ToGetShardedDatabaseCatalogDetailEncryptionKeyDetailArrayOutputWithContext(ctx context.Context) GetShardedDatabaseCatalogDetailEncryptionKeyDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetShardedDatabaseCatalogDetailEncryptionKeyDetailArrayOutput)
}

type GetShardedDatabaseCatalogDetailEncryptionKeyDetailOutput struct{ *pulumi.OutputState }

func (GetShardedDatabaseCatalogDetailEncryptionKeyDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetShardedDatabaseCatalogDetailEncryptionKeyDetail)(nil)).Elem()
}

func (o GetShardedDatabaseCatalogDetailEncryptionKeyDetailOutput) ToGetShardedDatabaseCatalogDetailEncryptionKeyDetailOutput() GetShardedDatabaseCatalogDetailEncryptionKeyDetailOutput {
	return o
}

func (o GetShardedDatabaseCatalogDetailEncryptionKeyDetailOutput) ToGetShardedDatabaseCatalogDetailEncryptionKeyDetailOutputWithContext(ctx context.Context) GetShardedDatabaseCatalogDetailEncryptionKeyDetailOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key in vault identified by vaultId in customer tenancy  that is used as the master encryption key.
func (o GetShardedDatabaseCatalogDetailEncryptionKeyDetailOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseCatalogDetailEncryptionKeyDetail) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key version for key identified by kmsKeyId that is used in data encryption (TDE) operations.
func (o GetShardedDatabaseCatalogDetailEncryptionKeyDetailOutput) KmsKeyVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseCatalogDetailEncryptionKeyDetail) string { return v.KmsKeyVersionId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the vault in customer tenancy where KMS key is present. For shard or catalog with cross-region data guard enabled, user needs to make sure to provide virtual private vault only, which is also replicated in the region of standby shard.
func (o GetShardedDatabaseCatalogDetailEncryptionKeyDetailOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseCatalogDetailEncryptionKeyDetail) string { return v.VaultId }).(pulumi.StringOutput)
}

type GetShardedDatabaseCatalogDetailEncryptionKeyDetailArrayOutput struct{ *pulumi.OutputState }

func (GetShardedDatabaseCatalogDetailEncryptionKeyDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetShardedDatabaseCatalogDetailEncryptionKeyDetail)(nil)).Elem()
}

func (o GetShardedDatabaseCatalogDetailEncryptionKeyDetailArrayOutput) ToGetShardedDatabaseCatalogDetailEncryptionKeyDetailArrayOutput() GetShardedDatabaseCatalogDetailEncryptionKeyDetailArrayOutput {
	return o
}

func (o GetShardedDatabaseCatalogDetailEncryptionKeyDetailArrayOutput) ToGetShardedDatabaseCatalogDetailEncryptionKeyDetailArrayOutputWithContext(ctx context.Context) GetShardedDatabaseCatalogDetailEncryptionKeyDetailArrayOutput {
	return o
}

func (o GetShardedDatabaseCatalogDetailEncryptionKeyDetailArrayOutput) Index(i pulumi.IntInput) GetShardedDatabaseCatalogDetailEncryptionKeyDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetShardedDatabaseCatalogDetailEncryptionKeyDetail {
		return vs[0].([]GetShardedDatabaseCatalogDetailEncryptionKeyDetail)[vs[1].(int)]
	}).(GetShardedDatabaseCatalogDetailEncryptionKeyDetailOutput)
}

type GetShardedDatabaseConnectionString struct {
	// Collection of connection strings.
	AllConnectionStrings map[string]string `pulumi:"allConnectionStrings"`
}

// GetShardedDatabaseConnectionStringInput is an input type that accepts GetShardedDatabaseConnectionStringArgs and GetShardedDatabaseConnectionStringOutput values.
// You can construct a concrete instance of `GetShardedDatabaseConnectionStringInput` via:
//
//	GetShardedDatabaseConnectionStringArgs{...}
type GetShardedDatabaseConnectionStringInput interface {
	pulumi.Input

	ToGetShardedDatabaseConnectionStringOutput() GetShardedDatabaseConnectionStringOutput
	ToGetShardedDatabaseConnectionStringOutputWithContext(context.Context) GetShardedDatabaseConnectionStringOutput
}

type GetShardedDatabaseConnectionStringArgs struct {
	// Collection of connection strings.
	AllConnectionStrings pulumi.StringMapInput `pulumi:"allConnectionStrings"`
}

func (GetShardedDatabaseConnectionStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetShardedDatabaseConnectionString)(nil)).Elem()
}

func (i GetShardedDatabaseConnectionStringArgs) ToGetShardedDatabaseConnectionStringOutput() GetShardedDatabaseConnectionStringOutput {
	return i.ToGetShardedDatabaseConnectionStringOutputWithContext(context.Background())
}

func (i GetShardedDatabaseConnectionStringArgs) ToGetShardedDatabaseConnectionStringOutputWithContext(ctx context.Context) GetShardedDatabaseConnectionStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetShardedDatabaseConnectionStringOutput)
}

// GetShardedDatabaseConnectionStringArrayInput is an input type that accepts GetShardedDatabaseConnectionStringArray and GetShardedDatabaseConnectionStringArrayOutput values.
// You can construct a concrete instance of `GetShardedDatabaseConnectionStringArrayInput` via:
//
//	GetShardedDatabaseConnectionStringArray{ GetShardedDatabaseConnectionStringArgs{...} }
type GetShardedDatabaseConnectionStringArrayInput interface {
	pulumi.Input

	ToGetShardedDatabaseConnectionStringArrayOutput() GetShardedDatabaseConnectionStringArrayOutput
	ToGetShardedDatabaseConnectionStringArrayOutputWithContext(context.Context) GetShardedDatabaseConnectionStringArrayOutput
}

type GetShardedDatabaseConnectionStringArray []GetShardedDatabaseConnectionStringInput

func (GetShardedDatabaseConnectionStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetShardedDatabaseConnectionString)(nil)).Elem()
}

func (i GetShardedDatabaseConnectionStringArray) ToGetShardedDatabaseConnectionStringArrayOutput() GetShardedDatabaseConnectionStringArrayOutput {
	return i.ToGetShardedDatabaseConnectionStringArrayOutputWithContext(context.Background())
}

func (i GetShardedDatabaseConnectionStringArray) ToGetShardedDatabaseConnectionStringArrayOutputWithContext(ctx context.Context) GetShardedDatabaseConnectionStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetShardedDatabaseConnectionStringArrayOutput)
}

type GetShardedDatabaseConnectionStringOutput struct{ *pulumi.OutputState }

func (GetShardedDatabaseConnectionStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetShardedDatabaseConnectionString)(nil)).Elem()
}

func (o GetShardedDatabaseConnectionStringOutput) ToGetShardedDatabaseConnectionStringOutput() GetShardedDatabaseConnectionStringOutput {
	return o
}

func (o GetShardedDatabaseConnectionStringOutput) ToGetShardedDatabaseConnectionStringOutputWithContext(ctx context.Context) GetShardedDatabaseConnectionStringOutput {
	return o
}

// Collection of connection strings.
func (o GetShardedDatabaseConnectionStringOutput) AllConnectionStrings() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetShardedDatabaseConnectionString) map[string]string { return v.AllConnectionStrings }).(pulumi.StringMapOutput)
}

type GetShardedDatabaseConnectionStringArrayOutput struct{ *pulumi.OutputState }

func (GetShardedDatabaseConnectionStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetShardedDatabaseConnectionString)(nil)).Elem()
}

func (o GetShardedDatabaseConnectionStringArrayOutput) ToGetShardedDatabaseConnectionStringArrayOutput() GetShardedDatabaseConnectionStringArrayOutput {
	return o
}

func (o GetShardedDatabaseConnectionStringArrayOutput) ToGetShardedDatabaseConnectionStringArrayOutputWithContext(ctx context.Context) GetShardedDatabaseConnectionStringArrayOutput {
	return o
}

func (o GetShardedDatabaseConnectionStringArrayOutput) Index(i pulumi.IntInput) GetShardedDatabaseConnectionStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetShardedDatabaseConnectionString {
		return vs[0].([]GetShardedDatabaseConnectionString)[vs[1].(int)]
	}).(GetShardedDatabaseConnectionStringOutput)
}

type GetShardedDatabaseGsm struct {
	// The compute amount available to the underlying autonomous database associated with shard.
	ComputeCount float64 `pulumi:"computeCount"`
	// The data disk group size to be allocated in GBs.
	DataStorageSizeInGbs float64 `pulumi:"dataStorageSizeInGbs"`
	// Comma separated names of argument corresponding to which metadata need to be retrived, namely VM_CLUSTER_INFO, ADDITIONAL_RESOURCE_INFO. An example is metadata=VM_CLUSTER_INFO,ADDITIONAL_RESOURCE_INFO.
	Metadata map[string]string `pulumi:"metadata"`
	// Name of the shard.
	Name string `pulumi:"name"`
	// Status of shard or catalog or gsm for the sharded database.
	Status string `pulumi:"status"`
	// Identifier of the underlying supporting resource.
	SupportingResourceId string `pulumi:"supportingResourceId"`
	// The time the the Sharded Database was created. An RFC3339 formatted datetime string
	TimeCreated string `pulumi:"timeCreated"`
	// The time the ssl certificate associated with shard expires. An RFC3339 formatted datetime string
	TimeSslCertificateExpires string `pulumi:"timeSslCertificateExpires"`
	// The time the Sharded Database was last updated. An RFC3339 formatted datetime string
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetShardedDatabaseGsmInput is an input type that accepts GetShardedDatabaseGsmArgs and GetShardedDatabaseGsmOutput values.
// You can construct a concrete instance of `GetShardedDatabaseGsmInput` via:
//
//	GetShardedDatabaseGsmArgs{...}
type GetShardedDatabaseGsmInput interface {
	pulumi.Input

	ToGetShardedDatabaseGsmOutput() GetShardedDatabaseGsmOutput
	ToGetShardedDatabaseGsmOutputWithContext(context.Context) GetShardedDatabaseGsmOutput
}

type GetShardedDatabaseGsmArgs struct {
	// The compute amount available to the underlying autonomous database associated with shard.
	ComputeCount pulumi.Float64Input `pulumi:"computeCount"`
	// The data disk group size to be allocated in GBs.
	DataStorageSizeInGbs pulumi.Float64Input `pulumi:"dataStorageSizeInGbs"`
	// Comma separated names of argument corresponding to which metadata need to be retrived, namely VM_CLUSTER_INFO, ADDITIONAL_RESOURCE_INFO. An example is metadata=VM_CLUSTER_INFO,ADDITIONAL_RESOURCE_INFO.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// Name of the shard.
	Name pulumi.StringInput `pulumi:"name"`
	// Status of shard or catalog or gsm for the sharded database.
	Status pulumi.StringInput `pulumi:"status"`
	// Identifier of the underlying supporting resource.
	SupportingResourceId pulumi.StringInput `pulumi:"supportingResourceId"`
	// The time the the Sharded Database was created. An RFC3339 formatted datetime string
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the ssl certificate associated with shard expires. An RFC3339 formatted datetime string
	TimeSslCertificateExpires pulumi.StringInput `pulumi:"timeSslCertificateExpires"`
	// The time the Sharded Database was last updated. An RFC3339 formatted datetime string
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetShardedDatabaseGsmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetShardedDatabaseGsm)(nil)).Elem()
}

func (i GetShardedDatabaseGsmArgs) ToGetShardedDatabaseGsmOutput() GetShardedDatabaseGsmOutput {
	return i.ToGetShardedDatabaseGsmOutputWithContext(context.Background())
}

func (i GetShardedDatabaseGsmArgs) ToGetShardedDatabaseGsmOutputWithContext(ctx context.Context) GetShardedDatabaseGsmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetShardedDatabaseGsmOutput)
}

// GetShardedDatabaseGsmArrayInput is an input type that accepts GetShardedDatabaseGsmArray and GetShardedDatabaseGsmArrayOutput values.
// You can construct a concrete instance of `GetShardedDatabaseGsmArrayInput` via:
//
//	GetShardedDatabaseGsmArray{ GetShardedDatabaseGsmArgs{...} }
type GetShardedDatabaseGsmArrayInput interface {
	pulumi.Input

	ToGetShardedDatabaseGsmArrayOutput() GetShardedDatabaseGsmArrayOutput
	ToGetShardedDatabaseGsmArrayOutputWithContext(context.Context) GetShardedDatabaseGsmArrayOutput
}

type GetShardedDatabaseGsmArray []GetShardedDatabaseGsmInput

func (GetShardedDatabaseGsmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetShardedDatabaseGsm)(nil)).Elem()
}

func (i GetShardedDatabaseGsmArray) ToGetShardedDatabaseGsmArrayOutput() GetShardedDatabaseGsmArrayOutput {
	return i.ToGetShardedDatabaseGsmArrayOutputWithContext(context.Background())
}

func (i GetShardedDatabaseGsmArray) ToGetShardedDatabaseGsmArrayOutputWithContext(ctx context.Context) GetShardedDatabaseGsmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetShardedDatabaseGsmArrayOutput)
}

type GetShardedDatabaseGsmOutput struct{ *pulumi.OutputState }

func (GetShardedDatabaseGsmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetShardedDatabaseGsm)(nil)).Elem()
}

func (o GetShardedDatabaseGsmOutput) ToGetShardedDatabaseGsmOutput() GetShardedDatabaseGsmOutput {
	return o
}

func (o GetShardedDatabaseGsmOutput) ToGetShardedDatabaseGsmOutputWithContext(ctx context.Context) GetShardedDatabaseGsmOutput {
	return o
}

// The compute amount available to the underlying autonomous database associated with shard.
func (o GetShardedDatabaseGsmOutput) ComputeCount() pulumi.Float64Output {
	return o.ApplyT(func(v GetShardedDatabaseGsm) float64 { return v.ComputeCount }).(pulumi.Float64Output)
}

// The data disk group size to be allocated in GBs.
func (o GetShardedDatabaseGsmOutput) DataStorageSizeInGbs() pulumi.Float64Output {
	return o.ApplyT(func(v GetShardedDatabaseGsm) float64 { return v.DataStorageSizeInGbs }).(pulumi.Float64Output)
}

// Comma separated names of argument corresponding to which metadata need to be retrived, namely VM_CLUSTER_INFO, ADDITIONAL_RESOURCE_INFO. An example is metadata=VM_CLUSTER_INFO,ADDITIONAL_RESOURCE_INFO.
func (o GetShardedDatabaseGsmOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetShardedDatabaseGsm) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// Name of the shard.
func (o GetShardedDatabaseGsmOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseGsm) string { return v.Name }).(pulumi.StringOutput)
}

// Status of shard or catalog or gsm for the sharded database.
func (o GetShardedDatabaseGsmOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseGsm) string { return v.Status }).(pulumi.StringOutput)
}

// Identifier of the underlying supporting resource.
func (o GetShardedDatabaseGsmOutput) SupportingResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseGsm) string { return v.SupportingResourceId }).(pulumi.StringOutput)
}

// The time the the Sharded Database was created. An RFC3339 formatted datetime string
func (o GetShardedDatabaseGsmOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseGsm) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the ssl certificate associated with shard expires. An RFC3339 formatted datetime string
func (o GetShardedDatabaseGsmOutput) TimeSslCertificateExpires() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseGsm) string { return v.TimeSslCertificateExpires }).(pulumi.StringOutput)
}

// The time the Sharded Database was last updated. An RFC3339 formatted datetime string
func (o GetShardedDatabaseGsmOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseGsm) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetShardedDatabaseGsmArrayOutput struct{ *pulumi.OutputState }

func (GetShardedDatabaseGsmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetShardedDatabaseGsm)(nil)).Elem()
}

func (o GetShardedDatabaseGsmArrayOutput) ToGetShardedDatabaseGsmArrayOutput() GetShardedDatabaseGsmArrayOutput {
	return o
}

func (o GetShardedDatabaseGsmArrayOutput) ToGetShardedDatabaseGsmArrayOutputWithContext(ctx context.Context) GetShardedDatabaseGsmArrayOutput {
	return o
}

func (o GetShardedDatabaseGsmArrayOutput) Index(i pulumi.IntInput) GetShardedDatabaseGsmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetShardedDatabaseGsm {
		return vs[0].([]GetShardedDatabaseGsm)[vs[1].(int)]
	}).(GetShardedDatabaseGsmOutput)
}

type GetShardedDatabasePatchOperation struct {
	Operation string `pulumi:"operation"`
	Selection string `pulumi:"selection"`
	Value     string `pulumi:"value"`
}

// GetShardedDatabasePatchOperationInput is an input type that accepts GetShardedDatabasePatchOperationArgs and GetShardedDatabasePatchOperationOutput values.
// You can construct a concrete instance of `GetShardedDatabasePatchOperationInput` via:
//
//	GetShardedDatabasePatchOperationArgs{...}
type GetShardedDatabasePatchOperationInput interface {
	pulumi.Input

	ToGetShardedDatabasePatchOperationOutput() GetShardedDatabasePatchOperationOutput
	ToGetShardedDatabasePatchOperationOutputWithContext(context.Context) GetShardedDatabasePatchOperationOutput
}

type GetShardedDatabasePatchOperationArgs struct {
	Operation pulumi.StringInput `pulumi:"operation"`
	Selection pulumi.StringInput `pulumi:"selection"`
	Value     pulumi.StringInput `pulumi:"value"`
}

func (GetShardedDatabasePatchOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetShardedDatabasePatchOperation)(nil)).Elem()
}

func (i GetShardedDatabasePatchOperationArgs) ToGetShardedDatabasePatchOperationOutput() GetShardedDatabasePatchOperationOutput {
	return i.ToGetShardedDatabasePatchOperationOutputWithContext(context.Background())
}

func (i GetShardedDatabasePatchOperationArgs) ToGetShardedDatabasePatchOperationOutputWithContext(ctx context.Context) GetShardedDatabasePatchOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetShardedDatabasePatchOperationOutput)
}

// GetShardedDatabasePatchOperationArrayInput is an input type that accepts GetShardedDatabasePatchOperationArray and GetShardedDatabasePatchOperationArrayOutput values.
// You can construct a concrete instance of `GetShardedDatabasePatchOperationArrayInput` via:
//
//	GetShardedDatabasePatchOperationArray{ GetShardedDatabasePatchOperationArgs{...} }
type GetShardedDatabasePatchOperationArrayInput interface {
	pulumi.Input

	ToGetShardedDatabasePatchOperationArrayOutput() GetShardedDatabasePatchOperationArrayOutput
	ToGetShardedDatabasePatchOperationArrayOutputWithContext(context.Context) GetShardedDatabasePatchOperationArrayOutput
}

type GetShardedDatabasePatchOperationArray []GetShardedDatabasePatchOperationInput

func (GetShardedDatabasePatchOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetShardedDatabasePatchOperation)(nil)).Elem()
}

func (i GetShardedDatabasePatchOperationArray) ToGetShardedDatabasePatchOperationArrayOutput() GetShardedDatabasePatchOperationArrayOutput {
	return i.ToGetShardedDatabasePatchOperationArrayOutputWithContext(context.Background())
}

func (i GetShardedDatabasePatchOperationArray) ToGetShardedDatabasePatchOperationArrayOutputWithContext(ctx context.Context) GetShardedDatabasePatchOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetShardedDatabasePatchOperationArrayOutput)
}

type GetShardedDatabasePatchOperationOutput struct{ *pulumi.OutputState }

func (GetShardedDatabasePatchOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetShardedDatabasePatchOperation)(nil)).Elem()
}

func (o GetShardedDatabasePatchOperationOutput) ToGetShardedDatabasePatchOperationOutput() GetShardedDatabasePatchOperationOutput {
	return o
}

func (o GetShardedDatabasePatchOperationOutput) ToGetShardedDatabasePatchOperationOutputWithContext(ctx context.Context) GetShardedDatabasePatchOperationOutput {
	return o
}

func (o GetShardedDatabasePatchOperationOutput) Operation() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabasePatchOperation) string { return v.Operation }).(pulumi.StringOutput)
}

func (o GetShardedDatabasePatchOperationOutput) Selection() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabasePatchOperation) string { return v.Selection }).(pulumi.StringOutput)
}

func (o GetShardedDatabasePatchOperationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabasePatchOperation) string { return v.Value }).(pulumi.StringOutput)
}

type GetShardedDatabasePatchOperationArrayOutput struct{ *pulumi.OutputState }

func (GetShardedDatabasePatchOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetShardedDatabasePatchOperation)(nil)).Elem()
}

func (o GetShardedDatabasePatchOperationArrayOutput) ToGetShardedDatabasePatchOperationArrayOutput() GetShardedDatabasePatchOperationArrayOutput {
	return o
}

func (o GetShardedDatabasePatchOperationArrayOutput) ToGetShardedDatabasePatchOperationArrayOutputWithContext(ctx context.Context) GetShardedDatabasePatchOperationArrayOutput {
	return o
}

func (o GetShardedDatabasePatchOperationArrayOutput) Index(i pulumi.IntInput) GetShardedDatabasePatchOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetShardedDatabasePatchOperation {
		return vs[0].([]GetShardedDatabasePatchOperation)[vs[1].(int)]
	}).(GetShardedDatabasePatchOperationOutput)
}

type GetShardedDatabaseShardDetail struct {
	AdminPassword string `pulumi:"adminPassword"`
	// Identifier of the primary cloudAutonomousVmCluster for the shard.
	CloudAutonomousVmClusterId string `pulumi:"cloudAutonomousVmClusterId"`
	// The compute amount available to the underlying autonomous database associated with shard.
	ComputeCount float64 `pulumi:"computeCount"`
	// Identifier of the underlying container database.
	ContainerDatabaseId string `pulumi:"containerDatabaseId"`
	// Identifier of the underlying container database parent.
	ContainerDatabaseParentId string `pulumi:"containerDatabaseParentId"`
	// The data disk group size to be allocated in GBs.
	DataStorageSizeInGbs float64 `pulumi:"dataStorageSizeInGbs"`
	// Details of encryption key to be used to encrypt data for shards and catalog for sharded database. For system-defined sharding type, all shards have to use same encryptionKeyDetails. For system-defined sharding, if encryptionKeyDetails are not specified for catalog, then Oracle managed key will be used for catalog. For user-defined sharding type, if encryptionKeyDetails are not provided for any shard or catalog, then Oracle managed key will be used for such shard or catalog. For system-defined or user-defined sharding type, if the shard or catalog has a peer in region other than primary shard or catalog region, then make sure to provide virtual vault for such shard or catalog, which is also replicated to peer region (the region where peer or standby shard or catalog exists).
	EncryptionKeyDetails []GetShardedDatabaseShardDetailEncryptionKeyDetail `pulumi:"encryptionKeyDetails"`
	// Determines the auto-scaling mode.
	IsAutoScalingEnabled bool `pulumi:"isAutoScalingEnabled"`
	// Comma separated names of argument corresponding to which metadata need to be retrived, namely VM_CLUSTER_INFO, ADDITIONAL_RESOURCE_INFO. An example is metadata=VM_CLUSTER_INFO,ADDITIONAL_RESOURCE_INFO.
	Metadata map[string]string `pulumi:"metadata"`
	// Name of the shard.
	Name string `pulumi:"name"`
	// Identifier of the peer cloudAutonomousVmCluster for the shard.
	PeerCloudAutonomousVmClusterId string `pulumi:"peerCloudAutonomousVmClusterId"`
	// Name of the shard-group to which the shard belongs.
	ShardGroup string `pulumi:"shardGroup"`
	// Shard space name.
	ShardSpace string `pulumi:"shardSpace"`
	// Status of shard or catalog or gsm for the sharded database.
	Status string `pulumi:"status"`
	// Identifier of the underlying supporting resource.
	SupportingResourceId string `pulumi:"supportingResourceId"`
	// The time the the Sharded Database was created. An RFC3339 formatted datetime string
	TimeCreated string `pulumi:"timeCreated"`
	// The time the ssl certificate associated with shard expires. An RFC3339 formatted datetime string
	TimeSslCertificateExpires string `pulumi:"timeSslCertificateExpires"`
	// The time the Sharded Database was last updated. An RFC3339 formatted datetime string
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetShardedDatabaseShardDetailInput is an input type that accepts GetShardedDatabaseShardDetailArgs and GetShardedDatabaseShardDetailOutput values.
// You can construct a concrete instance of `GetShardedDatabaseShardDetailInput` via:
//
//	GetShardedDatabaseShardDetailArgs{...}
type GetShardedDatabaseShardDetailInput interface {
	pulumi.Input

	ToGetShardedDatabaseShardDetailOutput() GetShardedDatabaseShardDetailOutput
	ToGetShardedDatabaseShardDetailOutputWithContext(context.Context) GetShardedDatabaseShardDetailOutput
}

type GetShardedDatabaseShardDetailArgs struct {
	AdminPassword pulumi.StringInput `pulumi:"adminPassword"`
	// Identifier of the primary cloudAutonomousVmCluster for the shard.
	CloudAutonomousVmClusterId pulumi.StringInput `pulumi:"cloudAutonomousVmClusterId"`
	// The compute amount available to the underlying autonomous database associated with shard.
	ComputeCount pulumi.Float64Input `pulumi:"computeCount"`
	// Identifier of the underlying container database.
	ContainerDatabaseId pulumi.StringInput `pulumi:"containerDatabaseId"`
	// Identifier of the underlying container database parent.
	ContainerDatabaseParentId pulumi.StringInput `pulumi:"containerDatabaseParentId"`
	// The data disk group size to be allocated in GBs.
	DataStorageSizeInGbs pulumi.Float64Input `pulumi:"dataStorageSizeInGbs"`
	// Details of encryption key to be used to encrypt data for shards and catalog for sharded database. For system-defined sharding type, all shards have to use same encryptionKeyDetails. For system-defined sharding, if encryptionKeyDetails are not specified for catalog, then Oracle managed key will be used for catalog. For user-defined sharding type, if encryptionKeyDetails are not provided for any shard or catalog, then Oracle managed key will be used for such shard or catalog. For system-defined or user-defined sharding type, if the shard or catalog has a peer in region other than primary shard or catalog region, then make sure to provide virtual vault for such shard or catalog, which is also replicated to peer region (the region where peer or standby shard or catalog exists).
	EncryptionKeyDetails GetShardedDatabaseShardDetailEncryptionKeyDetailArrayInput `pulumi:"encryptionKeyDetails"`
	// Determines the auto-scaling mode.
	IsAutoScalingEnabled pulumi.BoolInput `pulumi:"isAutoScalingEnabled"`
	// Comma separated names of argument corresponding to which metadata need to be retrived, namely VM_CLUSTER_INFO, ADDITIONAL_RESOURCE_INFO. An example is metadata=VM_CLUSTER_INFO,ADDITIONAL_RESOURCE_INFO.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// Name of the shard.
	Name pulumi.StringInput `pulumi:"name"`
	// Identifier of the peer cloudAutonomousVmCluster for the shard.
	PeerCloudAutonomousVmClusterId pulumi.StringInput `pulumi:"peerCloudAutonomousVmClusterId"`
	// Name of the shard-group to which the shard belongs.
	ShardGroup pulumi.StringInput `pulumi:"shardGroup"`
	// Shard space name.
	ShardSpace pulumi.StringInput `pulumi:"shardSpace"`
	// Status of shard or catalog or gsm for the sharded database.
	Status pulumi.StringInput `pulumi:"status"`
	// Identifier of the underlying supporting resource.
	SupportingResourceId pulumi.StringInput `pulumi:"supportingResourceId"`
	// The time the the Sharded Database was created. An RFC3339 formatted datetime string
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the ssl certificate associated with shard expires. An RFC3339 formatted datetime string
	TimeSslCertificateExpires pulumi.StringInput `pulumi:"timeSslCertificateExpires"`
	// The time the Sharded Database was last updated. An RFC3339 formatted datetime string
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetShardedDatabaseShardDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetShardedDatabaseShardDetail)(nil)).Elem()
}

func (i GetShardedDatabaseShardDetailArgs) ToGetShardedDatabaseShardDetailOutput() GetShardedDatabaseShardDetailOutput {
	return i.ToGetShardedDatabaseShardDetailOutputWithContext(context.Background())
}

func (i GetShardedDatabaseShardDetailArgs) ToGetShardedDatabaseShardDetailOutputWithContext(ctx context.Context) GetShardedDatabaseShardDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetShardedDatabaseShardDetailOutput)
}

// GetShardedDatabaseShardDetailArrayInput is an input type that accepts GetShardedDatabaseShardDetailArray and GetShardedDatabaseShardDetailArrayOutput values.
// You can construct a concrete instance of `GetShardedDatabaseShardDetailArrayInput` via:
//
//	GetShardedDatabaseShardDetailArray{ GetShardedDatabaseShardDetailArgs{...} }
type GetShardedDatabaseShardDetailArrayInput interface {
	pulumi.Input

	ToGetShardedDatabaseShardDetailArrayOutput() GetShardedDatabaseShardDetailArrayOutput
	ToGetShardedDatabaseShardDetailArrayOutputWithContext(context.Context) GetShardedDatabaseShardDetailArrayOutput
}

type GetShardedDatabaseShardDetailArray []GetShardedDatabaseShardDetailInput

func (GetShardedDatabaseShardDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetShardedDatabaseShardDetail)(nil)).Elem()
}

func (i GetShardedDatabaseShardDetailArray) ToGetShardedDatabaseShardDetailArrayOutput() GetShardedDatabaseShardDetailArrayOutput {
	return i.ToGetShardedDatabaseShardDetailArrayOutputWithContext(context.Background())
}

func (i GetShardedDatabaseShardDetailArray) ToGetShardedDatabaseShardDetailArrayOutputWithContext(ctx context.Context) GetShardedDatabaseShardDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetShardedDatabaseShardDetailArrayOutput)
}

type GetShardedDatabaseShardDetailOutput struct{ *pulumi.OutputState }

func (GetShardedDatabaseShardDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetShardedDatabaseShardDetail)(nil)).Elem()
}

func (o GetShardedDatabaseShardDetailOutput) ToGetShardedDatabaseShardDetailOutput() GetShardedDatabaseShardDetailOutput {
	return o
}

func (o GetShardedDatabaseShardDetailOutput) ToGetShardedDatabaseShardDetailOutputWithContext(ctx context.Context) GetShardedDatabaseShardDetailOutput {
	return o
}

func (o GetShardedDatabaseShardDetailOutput) AdminPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseShardDetail) string { return v.AdminPassword }).(pulumi.StringOutput)
}

// Identifier of the primary cloudAutonomousVmCluster for the shard.
func (o GetShardedDatabaseShardDetailOutput) CloudAutonomousVmClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseShardDetail) string { return v.CloudAutonomousVmClusterId }).(pulumi.StringOutput)
}

// The compute amount available to the underlying autonomous database associated with shard.
func (o GetShardedDatabaseShardDetailOutput) ComputeCount() pulumi.Float64Output {
	return o.ApplyT(func(v GetShardedDatabaseShardDetail) float64 { return v.ComputeCount }).(pulumi.Float64Output)
}

// Identifier of the underlying container database.
func (o GetShardedDatabaseShardDetailOutput) ContainerDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseShardDetail) string { return v.ContainerDatabaseId }).(pulumi.StringOutput)
}

// Identifier of the underlying container database parent.
func (o GetShardedDatabaseShardDetailOutput) ContainerDatabaseParentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseShardDetail) string { return v.ContainerDatabaseParentId }).(pulumi.StringOutput)
}

// The data disk group size to be allocated in GBs.
func (o GetShardedDatabaseShardDetailOutput) DataStorageSizeInGbs() pulumi.Float64Output {
	return o.ApplyT(func(v GetShardedDatabaseShardDetail) float64 { return v.DataStorageSizeInGbs }).(pulumi.Float64Output)
}

// Details of encryption key to be used to encrypt data for shards and catalog for sharded database. For system-defined sharding type, all shards have to use same encryptionKeyDetails. For system-defined sharding, if encryptionKeyDetails are not specified for catalog, then Oracle managed key will be used for catalog. For user-defined sharding type, if encryptionKeyDetails are not provided for any shard or catalog, then Oracle managed key will be used for such shard or catalog. For system-defined or user-defined sharding type, if the shard or catalog has a peer in region other than primary shard or catalog region, then make sure to provide virtual vault for such shard or catalog, which is also replicated to peer region (the region where peer or standby shard or catalog exists).
func (o GetShardedDatabaseShardDetailOutput) EncryptionKeyDetails() GetShardedDatabaseShardDetailEncryptionKeyDetailArrayOutput {
	return o.ApplyT(func(v GetShardedDatabaseShardDetail) []GetShardedDatabaseShardDetailEncryptionKeyDetail {
		return v.EncryptionKeyDetails
	}).(GetShardedDatabaseShardDetailEncryptionKeyDetailArrayOutput)
}

// Determines the auto-scaling mode.
func (o GetShardedDatabaseShardDetailOutput) IsAutoScalingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetShardedDatabaseShardDetail) bool { return v.IsAutoScalingEnabled }).(pulumi.BoolOutput)
}

// Comma separated names of argument corresponding to which metadata need to be retrived, namely VM_CLUSTER_INFO, ADDITIONAL_RESOURCE_INFO. An example is metadata=VM_CLUSTER_INFO,ADDITIONAL_RESOURCE_INFO.
func (o GetShardedDatabaseShardDetailOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetShardedDatabaseShardDetail) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// Name of the shard.
func (o GetShardedDatabaseShardDetailOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseShardDetail) string { return v.Name }).(pulumi.StringOutput)
}

// Identifier of the peer cloudAutonomousVmCluster for the shard.
func (o GetShardedDatabaseShardDetailOutput) PeerCloudAutonomousVmClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseShardDetail) string { return v.PeerCloudAutonomousVmClusterId }).(pulumi.StringOutput)
}

// Name of the shard-group to which the shard belongs.
func (o GetShardedDatabaseShardDetailOutput) ShardGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseShardDetail) string { return v.ShardGroup }).(pulumi.StringOutput)
}

// Shard space name.
func (o GetShardedDatabaseShardDetailOutput) ShardSpace() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseShardDetail) string { return v.ShardSpace }).(pulumi.StringOutput)
}

// Status of shard or catalog or gsm for the sharded database.
func (o GetShardedDatabaseShardDetailOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseShardDetail) string { return v.Status }).(pulumi.StringOutput)
}

// Identifier of the underlying supporting resource.
func (o GetShardedDatabaseShardDetailOutput) SupportingResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseShardDetail) string { return v.SupportingResourceId }).(pulumi.StringOutput)
}

// The time the the Sharded Database was created. An RFC3339 formatted datetime string
func (o GetShardedDatabaseShardDetailOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseShardDetail) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the ssl certificate associated with shard expires. An RFC3339 formatted datetime string
func (o GetShardedDatabaseShardDetailOutput) TimeSslCertificateExpires() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseShardDetail) string { return v.TimeSslCertificateExpires }).(pulumi.StringOutput)
}

// The time the Sharded Database was last updated. An RFC3339 formatted datetime string
func (o GetShardedDatabaseShardDetailOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseShardDetail) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetShardedDatabaseShardDetailArrayOutput struct{ *pulumi.OutputState }

func (GetShardedDatabaseShardDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetShardedDatabaseShardDetail)(nil)).Elem()
}

func (o GetShardedDatabaseShardDetailArrayOutput) ToGetShardedDatabaseShardDetailArrayOutput() GetShardedDatabaseShardDetailArrayOutput {
	return o
}

func (o GetShardedDatabaseShardDetailArrayOutput) ToGetShardedDatabaseShardDetailArrayOutputWithContext(ctx context.Context) GetShardedDatabaseShardDetailArrayOutput {
	return o
}

func (o GetShardedDatabaseShardDetailArrayOutput) Index(i pulumi.IntInput) GetShardedDatabaseShardDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetShardedDatabaseShardDetail {
		return vs[0].([]GetShardedDatabaseShardDetail)[vs[1].(int)]
	}).(GetShardedDatabaseShardDetailOutput)
}

type GetShardedDatabaseShardDetailEncryptionKeyDetail struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key in vault identified by vaultId in customer tenancy  that is used as the master encryption key.
	KmsKeyId string `pulumi:"kmsKeyId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key version for key identified by kmsKeyId that is used in data encryption (TDE) operations.
	KmsKeyVersionId string `pulumi:"kmsKeyVersionId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the vault in customer tenancy where KMS key is present. For shard or catalog with cross-region data guard enabled, user needs to make sure to provide virtual private vault only, which is also replicated in the region of standby shard.
	VaultId string `pulumi:"vaultId"`
}

// GetShardedDatabaseShardDetailEncryptionKeyDetailInput is an input type that accepts GetShardedDatabaseShardDetailEncryptionKeyDetailArgs and GetShardedDatabaseShardDetailEncryptionKeyDetailOutput values.
// You can construct a concrete instance of `GetShardedDatabaseShardDetailEncryptionKeyDetailInput` via:
//
//	GetShardedDatabaseShardDetailEncryptionKeyDetailArgs{...}
type GetShardedDatabaseShardDetailEncryptionKeyDetailInput interface {
	pulumi.Input

	ToGetShardedDatabaseShardDetailEncryptionKeyDetailOutput() GetShardedDatabaseShardDetailEncryptionKeyDetailOutput
	ToGetShardedDatabaseShardDetailEncryptionKeyDetailOutputWithContext(context.Context) GetShardedDatabaseShardDetailEncryptionKeyDetailOutput
}

type GetShardedDatabaseShardDetailEncryptionKeyDetailArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key in vault identified by vaultId in customer tenancy  that is used as the master encryption key.
	KmsKeyId pulumi.StringInput `pulumi:"kmsKeyId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key version for key identified by kmsKeyId that is used in data encryption (TDE) operations.
	KmsKeyVersionId pulumi.StringInput `pulumi:"kmsKeyVersionId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the vault in customer tenancy where KMS key is present. For shard or catalog with cross-region data guard enabled, user needs to make sure to provide virtual private vault only, which is also replicated in the region of standby shard.
	VaultId pulumi.StringInput `pulumi:"vaultId"`
}

func (GetShardedDatabaseShardDetailEncryptionKeyDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetShardedDatabaseShardDetailEncryptionKeyDetail)(nil)).Elem()
}

func (i GetShardedDatabaseShardDetailEncryptionKeyDetailArgs) ToGetShardedDatabaseShardDetailEncryptionKeyDetailOutput() GetShardedDatabaseShardDetailEncryptionKeyDetailOutput {
	return i.ToGetShardedDatabaseShardDetailEncryptionKeyDetailOutputWithContext(context.Background())
}

func (i GetShardedDatabaseShardDetailEncryptionKeyDetailArgs) ToGetShardedDatabaseShardDetailEncryptionKeyDetailOutputWithContext(ctx context.Context) GetShardedDatabaseShardDetailEncryptionKeyDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetShardedDatabaseShardDetailEncryptionKeyDetailOutput)
}

// GetShardedDatabaseShardDetailEncryptionKeyDetailArrayInput is an input type that accepts GetShardedDatabaseShardDetailEncryptionKeyDetailArray and GetShardedDatabaseShardDetailEncryptionKeyDetailArrayOutput values.
// You can construct a concrete instance of `GetShardedDatabaseShardDetailEncryptionKeyDetailArrayInput` via:
//
//	GetShardedDatabaseShardDetailEncryptionKeyDetailArray{ GetShardedDatabaseShardDetailEncryptionKeyDetailArgs{...} }
type GetShardedDatabaseShardDetailEncryptionKeyDetailArrayInput interface {
	pulumi.Input

	ToGetShardedDatabaseShardDetailEncryptionKeyDetailArrayOutput() GetShardedDatabaseShardDetailEncryptionKeyDetailArrayOutput
	ToGetShardedDatabaseShardDetailEncryptionKeyDetailArrayOutputWithContext(context.Context) GetShardedDatabaseShardDetailEncryptionKeyDetailArrayOutput
}

type GetShardedDatabaseShardDetailEncryptionKeyDetailArray []GetShardedDatabaseShardDetailEncryptionKeyDetailInput

func (GetShardedDatabaseShardDetailEncryptionKeyDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetShardedDatabaseShardDetailEncryptionKeyDetail)(nil)).Elem()
}

func (i GetShardedDatabaseShardDetailEncryptionKeyDetailArray) ToGetShardedDatabaseShardDetailEncryptionKeyDetailArrayOutput() GetShardedDatabaseShardDetailEncryptionKeyDetailArrayOutput {
	return i.ToGetShardedDatabaseShardDetailEncryptionKeyDetailArrayOutputWithContext(context.Background())
}

func (i GetShardedDatabaseShardDetailEncryptionKeyDetailArray) ToGetShardedDatabaseShardDetailEncryptionKeyDetailArrayOutputWithContext(ctx context.Context) GetShardedDatabaseShardDetailEncryptionKeyDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetShardedDatabaseShardDetailEncryptionKeyDetailArrayOutput)
}

type GetShardedDatabaseShardDetailEncryptionKeyDetailOutput struct{ *pulumi.OutputState }

func (GetShardedDatabaseShardDetailEncryptionKeyDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetShardedDatabaseShardDetailEncryptionKeyDetail)(nil)).Elem()
}

func (o GetShardedDatabaseShardDetailEncryptionKeyDetailOutput) ToGetShardedDatabaseShardDetailEncryptionKeyDetailOutput() GetShardedDatabaseShardDetailEncryptionKeyDetailOutput {
	return o
}

func (o GetShardedDatabaseShardDetailEncryptionKeyDetailOutput) ToGetShardedDatabaseShardDetailEncryptionKeyDetailOutputWithContext(ctx context.Context) GetShardedDatabaseShardDetailEncryptionKeyDetailOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key in vault identified by vaultId in customer tenancy  that is used as the master encryption key.
func (o GetShardedDatabaseShardDetailEncryptionKeyDetailOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseShardDetailEncryptionKeyDetail) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key version for key identified by kmsKeyId that is used in data encryption (TDE) operations.
func (o GetShardedDatabaseShardDetailEncryptionKeyDetailOutput) KmsKeyVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseShardDetailEncryptionKeyDetail) string { return v.KmsKeyVersionId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the vault in customer tenancy where KMS key is present. For shard or catalog with cross-region data guard enabled, user needs to make sure to provide virtual private vault only, which is also replicated in the region of standby shard.
func (o GetShardedDatabaseShardDetailEncryptionKeyDetailOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabaseShardDetailEncryptionKeyDetail) string { return v.VaultId }).(pulumi.StringOutput)
}

type GetShardedDatabaseShardDetailEncryptionKeyDetailArrayOutput struct{ *pulumi.OutputState }

func (GetShardedDatabaseShardDetailEncryptionKeyDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetShardedDatabaseShardDetailEncryptionKeyDetail)(nil)).Elem()
}

func (o GetShardedDatabaseShardDetailEncryptionKeyDetailArrayOutput) ToGetShardedDatabaseShardDetailEncryptionKeyDetailArrayOutput() GetShardedDatabaseShardDetailEncryptionKeyDetailArrayOutput {
	return o
}

func (o GetShardedDatabaseShardDetailEncryptionKeyDetailArrayOutput) ToGetShardedDatabaseShardDetailEncryptionKeyDetailArrayOutputWithContext(ctx context.Context) GetShardedDatabaseShardDetailEncryptionKeyDetailArrayOutput {
	return o
}

func (o GetShardedDatabaseShardDetailEncryptionKeyDetailArrayOutput) Index(i pulumi.IntInput) GetShardedDatabaseShardDetailEncryptionKeyDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetShardedDatabaseShardDetailEncryptionKeyDetail {
		return vs[0].([]GetShardedDatabaseShardDetailEncryptionKeyDetail)[vs[1].(int)]
	}).(GetShardedDatabaseShardDetailEncryptionKeyDetailOutput)
}

type GetShardedDatabasesFilter struct {
	// Name of the shard.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetShardedDatabasesFilterInput is an input type that accepts GetShardedDatabasesFilterArgs and GetShardedDatabasesFilterOutput values.
// You can construct a concrete instance of `GetShardedDatabasesFilterInput` via:
//
//	GetShardedDatabasesFilterArgs{...}
type GetShardedDatabasesFilterInput interface {
	pulumi.Input

	ToGetShardedDatabasesFilterOutput() GetShardedDatabasesFilterOutput
	ToGetShardedDatabasesFilterOutputWithContext(context.Context) GetShardedDatabasesFilterOutput
}

type GetShardedDatabasesFilterArgs struct {
	// Name of the shard.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetShardedDatabasesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetShardedDatabasesFilter)(nil)).Elem()
}

func (i GetShardedDatabasesFilterArgs) ToGetShardedDatabasesFilterOutput() GetShardedDatabasesFilterOutput {
	return i.ToGetShardedDatabasesFilterOutputWithContext(context.Background())
}

func (i GetShardedDatabasesFilterArgs) ToGetShardedDatabasesFilterOutputWithContext(ctx context.Context) GetShardedDatabasesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetShardedDatabasesFilterOutput)
}

// GetShardedDatabasesFilterArrayInput is an input type that accepts GetShardedDatabasesFilterArray and GetShardedDatabasesFilterArrayOutput values.
// You can construct a concrete instance of `GetShardedDatabasesFilterArrayInput` via:
//
//	GetShardedDatabasesFilterArray{ GetShardedDatabasesFilterArgs{...} }
type GetShardedDatabasesFilterArrayInput interface {
	pulumi.Input

	ToGetShardedDatabasesFilterArrayOutput() GetShardedDatabasesFilterArrayOutput
	ToGetShardedDatabasesFilterArrayOutputWithContext(context.Context) GetShardedDatabasesFilterArrayOutput
}

type GetShardedDatabasesFilterArray []GetShardedDatabasesFilterInput

func (GetShardedDatabasesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetShardedDatabasesFilter)(nil)).Elem()
}

func (i GetShardedDatabasesFilterArray) ToGetShardedDatabasesFilterArrayOutput() GetShardedDatabasesFilterArrayOutput {
	return i.ToGetShardedDatabasesFilterArrayOutputWithContext(context.Background())
}

func (i GetShardedDatabasesFilterArray) ToGetShardedDatabasesFilterArrayOutputWithContext(ctx context.Context) GetShardedDatabasesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetShardedDatabasesFilterArrayOutput)
}

type GetShardedDatabasesFilterOutput struct{ *pulumi.OutputState }

func (GetShardedDatabasesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetShardedDatabasesFilter)(nil)).Elem()
}

func (o GetShardedDatabasesFilterOutput) ToGetShardedDatabasesFilterOutput() GetShardedDatabasesFilterOutput {
	return o
}

func (o GetShardedDatabasesFilterOutput) ToGetShardedDatabasesFilterOutputWithContext(ctx context.Context) GetShardedDatabasesFilterOutput {
	return o
}

// Name of the shard.
func (o GetShardedDatabasesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabasesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetShardedDatabasesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetShardedDatabasesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetShardedDatabasesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetShardedDatabasesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetShardedDatabasesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetShardedDatabasesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetShardedDatabasesFilter)(nil)).Elem()
}

func (o GetShardedDatabasesFilterArrayOutput) ToGetShardedDatabasesFilterArrayOutput() GetShardedDatabasesFilterArrayOutput {
	return o
}

func (o GetShardedDatabasesFilterArrayOutput) ToGetShardedDatabasesFilterArrayOutputWithContext(ctx context.Context) GetShardedDatabasesFilterArrayOutput {
	return o
}

func (o GetShardedDatabasesFilterArrayOutput) Index(i pulumi.IntInput) GetShardedDatabasesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetShardedDatabasesFilter {
		return vs[0].([]GetShardedDatabasesFilter)[vs[1].(int)]
	}).(GetShardedDatabasesFilterOutput)
}

type GetShardedDatabasesShardedDatabaseCollection struct {
	Items []GetShardedDatabasesShardedDatabaseCollectionItem `pulumi:"items"`
}

// GetShardedDatabasesShardedDatabaseCollectionInput is an input type that accepts GetShardedDatabasesShardedDatabaseCollectionArgs and GetShardedDatabasesShardedDatabaseCollectionOutput values.
// You can construct a concrete instance of `GetShardedDatabasesShardedDatabaseCollectionInput` via:
//
//	GetShardedDatabasesShardedDatabaseCollectionArgs{...}
type GetShardedDatabasesShardedDatabaseCollectionInput interface {
	pulumi.Input

	ToGetShardedDatabasesShardedDatabaseCollectionOutput() GetShardedDatabasesShardedDatabaseCollectionOutput
	ToGetShardedDatabasesShardedDatabaseCollectionOutputWithContext(context.Context) GetShardedDatabasesShardedDatabaseCollectionOutput
}

type GetShardedDatabasesShardedDatabaseCollectionArgs struct {
	Items GetShardedDatabasesShardedDatabaseCollectionItemArrayInput `pulumi:"items"`
}

func (GetShardedDatabasesShardedDatabaseCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetShardedDatabasesShardedDatabaseCollection)(nil)).Elem()
}

func (i GetShardedDatabasesShardedDatabaseCollectionArgs) ToGetShardedDatabasesShardedDatabaseCollectionOutput() GetShardedDatabasesShardedDatabaseCollectionOutput {
	return i.ToGetShardedDatabasesShardedDatabaseCollectionOutputWithContext(context.Background())
}

func (i GetShardedDatabasesShardedDatabaseCollectionArgs) ToGetShardedDatabasesShardedDatabaseCollectionOutputWithContext(ctx context.Context) GetShardedDatabasesShardedDatabaseCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetShardedDatabasesShardedDatabaseCollectionOutput)
}

// GetShardedDatabasesShardedDatabaseCollectionArrayInput is an input type that accepts GetShardedDatabasesShardedDatabaseCollectionArray and GetShardedDatabasesShardedDatabaseCollectionArrayOutput values.
// You can construct a concrete instance of `GetShardedDatabasesShardedDatabaseCollectionArrayInput` via:
//
//	GetShardedDatabasesShardedDatabaseCollectionArray{ GetShardedDatabasesShardedDatabaseCollectionArgs{...} }
type GetShardedDatabasesShardedDatabaseCollectionArrayInput interface {
	pulumi.Input

	ToGetShardedDatabasesShardedDatabaseCollectionArrayOutput() GetShardedDatabasesShardedDatabaseCollectionArrayOutput
	ToGetShardedDatabasesShardedDatabaseCollectionArrayOutputWithContext(context.Context) GetShardedDatabasesShardedDatabaseCollectionArrayOutput
}

type GetShardedDatabasesShardedDatabaseCollectionArray []GetShardedDatabasesShardedDatabaseCollectionInput

func (GetShardedDatabasesShardedDatabaseCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetShardedDatabasesShardedDatabaseCollection)(nil)).Elem()
}

func (i GetShardedDatabasesShardedDatabaseCollectionArray) ToGetShardedDatabasesShardedDatabaseCollectionArrayOutput() GetShardedDatabasesShardedDatabaseCollectionArrayOutput {
	return i.ToGetShardedDatabasesShardedDatabaseCollectionArrayOutputWithContext(context.Background())
}

func (i GetShardedDatabasesShardedDatabaseCollectionArray) ToGetShardedDatabasesShardedDatabaseCollectionArrayOutputWithContext(ctx context.Context) GetShardedDatabasesShardedDatabaseCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetShardedDatabasesShardedDatabaseCollectionArrayOutput)
}

type GetShardedDatabasesShardedDatabaseCollectionOutput struct{ *pulumi.OutputState }

func (GetShardedDatabasesShardedDatabaseCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetShardedDatabasesShardedDatabaseCollection)(nil)).Elem()
}

func (o GetShardedDatabasesShardedDatabaseCollectionOutput) ToGetShardedDatabasesShardedDatabaseCollectionOutput() GetShardedDatabasesShardedDatabaseCollectionOutput {
	return o
}

func (o GetShardedDatabasesShardedDatabaseCollectionOutput) ToGetShardedDatabasesShardedDatabaseCollectionOutputWithContext(ctx context.Context) GetShardedDatabasesShardedDatabaseCollectionOutput {
	return o
}

func (o GetShardedDatabasesShardedDatabaseCollectionOutput) Items() GetShardedDatabasesShardedDatabaseCollectionItemArrayOutput {
	return o.ApplyT(func(v GetShardedDatabasesShardedDatabaseCollection) []GetShardedDatabasesShardedDatabaseCollectionItem {
		return v.Items
	}).(GetShardedDatabasesShardedDatabaseCollectionItemArrayOutput)
}

type GetShardedDatabasesShardedDatabaseCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetShardedDatabasesShardedDatabaseCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetShardedDatabasesShardedDatabaseCollection)(nil)).Elem()
}

func (o GetShardedDatabasesShardedDatabaseCollectionArrayOutput) ToGetShardedDatabasesShardedDatabaseCollectionArrayOutput() GetShardedDatabasesShardedDatabaseCollectionArrayOutput {
	return o
}

func (o GetShardedDatabasesShardedDatabaseCollectionArrayOutput) ToGetShardedDatabasesShardedDatabaseCollectionArrayOutputWithContext(ctx context.Context) GetShardedDatabasesShardedDatabaseCollectionArrayOutput {
	return o
}

func (o GetShardedDatabasesShardedDatabaseCollectionArrayOutput) Index(i pulumi.IntInput) GetShardedDatabasesShardedDatabaseCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetShardedDatabasesShardedDatabaseCollection {
		return vs[0].([]GetShardedDatabasesShardedDatabaseCollection)[vs[1].(int)]
	}).(GetShardedDatabasesShardedDatabaseCollectionOutput)
}

type GetShardedDatabasesShardedDatabaseCollectionItem struct {
	// The character set for the database.
	CharacterSet string `pulumi:"characterSet"`
	// The default number of unique chunks in a shardspace. The value of chunks must be greater than 2 times the size of the largest shardgroup in any shardspace.
	Chunks int `pulumi:"chunks"`
	// The certificate common name used in all cloudAutonomousVmClusters for the sharded database topology. Eg. Production. All the clusters used in one sharded database topology shall have same CABundle setup. Valid characterset for clusterCertificateCommonName include uppercase or lowercase letters, numbers, hyphens, underscores, and period.
	ClusterCertificateCommonName string `pulumi:"clusterCertificateCommonName"`
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// The database deployment type.
	DbDeploymentType string `pulumi:"dbDeploymentType"`
	// Oracle Database version number.
	DbVersion string `pulumi:"dbVersion"`
	// Possible workload types.
	DbWorkload string `pulumi:"dbWorkload"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A filter to return only sharded databases that match the entire name given. The match is not case sensitive.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Sharded Database identifier
	Id             string `pulumi:"id"`
	LifecycleState string `pulumi:"lifecycleState"`
	// Detailed message for the lifecycle state.
	LifecycleStateDetails string `pulumi:"lifecycleStateDetails"`
	// The GSM listener port number.
	ListenerPort int `pulumi:"listenerPort"`
	// The TLS listener port number for sharded database.
	ListenerPortTls int `pulumi:"listenerPortTls"`
	// The national character set for the database.
	NcharacterSet string `pulumi:"ncharacterSet"`
	// Ons local port number.
	OnsPortLocal int `pulumi:"onsPortLocal"`
	// Ons remote port number.
	OnsPortRemote int `pulumi:"onsPortRemote"`
	// Unique prefix for the sharded database.
	Prefix string `pulumi:"prefix"`
	// The Replication factor for RAFT replication based sharded database. Currently supported values are 3, 5 and 7.
	ReplicationFactor int `pulumi:"replicationFactor"`
	// The Replication method for sharded database. Use RAFT for Raft replication, and DG for DataGuard. If replicationMethod is not provided, it defaults to DG.
	ReplicationMethod string `pulumi:"replicationMethod"`
	// For RAFT replication based sharded database, the value should be atleast twice the number of shards.
	ReplicationUnit int `pulumi:"replicationUnit"`
	// Sharding Method.
	ShardingMethod string `pulumi:"shardingMethod"`
	// A filter to return only resources their lifecycleState matches the given lifecycleState.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time the the Sharded Database was created. An RFC3339 formatted datetime string
	TimeCreated string `pulumi:"timeCreated"`
	// The time the Sharded Database was last updated. An RFC3339 formatted datetime string
	TimeUpdated               string  `pulumi:"timeUpdated"`
	TotalCpuCount             float64 `pulumi:"totalCpuCount"`
	TotalDataStorageSizeInGbs float64 `pulumi:"totalDataStorageSizeInGbs"`
}

// GetShardedDatabasesShardedDatabaseCollectionItemInput is an input type that accepts GetShardedDatabasesShardedDatabaseCollectionItemArgs and GetShardedDatabasesShardedDatabaseCollectionItemOutput values.
// You can construct a concrete instance of `GetShardedDatabasesShardedDatabaseCollectionItemInput` via:
//
//	GetShardedDatabasesShardedDatabaseCollectionItemArgs{...}
type GetShardedDatabasesShardedDatabaseCollectionItemInput interface {
	pulumi.Input

	ToGetShardedDatabasesShardedDatabaseCollectionItemOutput() GetShardedDatabasesShardedDatabaseCollectionItemOutput
	ToGetShardedDatabasesShardedDatabaseCollectionItemOutputWithContext(context.Context) GetShardedDatabasesShardedDatabaseCollectionItemOutput
}

type GetShardedDatabasesShardedDatabaseCollectionItemArgs struct {
	// The character set for the database.
	CharacterSet pulumi.StringInput `pulumi:"characterSet"`
	// The default number of unique chunks in a shardspace. The value of chunks must be greater than 2 times the size of the largest shardgroup in any shardspace.
	Chunks pulumi.IntInput `pulumi:"chunks"`
	// The certificate common name used in all cloudAutonomousVmClusters for the sharded database topology. Eg. Production. All the clusters used in one sharded database topology shall have same CABundle setup. Valid characterset for clusterCertificateCommonName include uppercase or lowercase letters, numbers, hyphens, underscores, and period.
	ClusterCertificateCommonName pulumi.StringInput `pulumi:"clusterCertificateCommonName"`
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The database deployment type.
	DbDeploymentType pulumi.StringInput `pulumi:"dbDeploymentType"`
	// Oracle Database version number.
	DbVersion pulumi.StringInput `pulumi:"dbVersion"`
	// Possible workload types.
	DbWorkload pulumi.StringInput `pulumi:"dbWorkload"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// A filter to return only sharded databases that match the entire name given. The match is not case sensitive.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// Sharded Database identifier
	Id             pulumi.StringInput `pulumi:"id"`
	LifecycleState pulumi.StringInput `pulumi:"lifecycleState"`
	// Detailed message for the lifecycle state.
	LifecycleStateDetails pulumi.StringInput `pulumi:"lifecycleStateDetails"`
	// The GSM listener port number.
	ListenerPort pulumi.IntInput `pulumi:"listenerPort"`
	// The TLS listener port number for sharded database.
	ListenerPortTls pulumi.IntInput `pulumi:"listenerPortTls"`
	// The national character set for the database.
	NcharacterSet pulumi.StringInput `pulumi:"ncharacterSet"`
	// Ons local port number.
	OnsPortLocal pulumi.IntInput `pulumi:"onsPortLocal"`
	// Ons remote port number.
	OnsPortRemote pulumi.IntInput `pulumi:"onsPortRemote"`
	// Unique prefix for the sharded database.
	Prefix pulumi.StringInput `pulumi:"prefix"`
	// The Replication factor for RAFT replication based sharded database. Currently supported values are 3, 5 and 7.
	ReplicationFactor pulumi.IntInput `pulumi:"replicationFactor"`
	// The Replication method for sharded database. Use RAFT for Raft replication, and DG for DataGuard. If replicationMethod is not provided, it defaults to DG.
	ReplicationMethod pulumi.StringInput `pulumi:"replicationMethod"`
	// For RAFT replication based sharded database, the value should be atleast twice the number of shards.
	ReplicationUnit pulumi.IntInput `pulumi:"replicationUnit"`
	// Sharding Method.
	ShardingMethod pulumi.StringInput `pulumi:"shardingMethod"`
	// A filter to return only resources their lifecycleState matches the given lifecycleState.
	State pulumi.StringInput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput `pulumi:"systemTags"`
	// The time the the Sharded Database was created. An RFC3339 formatted datetime string
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the Sharded Database was last updated. An RFC3339 formatted datetime string
	TimeUpdated               pulumi.StringInput  `pulumi:"timeUpdated"`
	TotalCpuCount             pulumi.Float64Input `pulumi:"totalCpuCount"`
	TotalDataStorageSizeInGbs pulumi.Float64Input `pulumi:"totalDataStorageSizeInGbs"`
}

func (GetShardedDatabasesShardedDatabaseCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetShardedDatabasesShardedDatabaseCollectionItem)(nil)).Elem()
}

func (i GetShardedDatabasesShardedDatabaseCollectionItemArgs) ToGetShardedDatabasesShardedDatabaseCollectionItemOutput() GetShardedDatabasesShardedDatabaseCollectionItemOutput {
	return i.ToGetShardedDatabasesShardedDatabaseCollectionItemOutputWithContext(context.Background())
}

func (i GetShardedDatabasesShardedDatabaseCollectionItemArgs) ToGetShardedDatabasesShardedDatabaseCollectionItemOutputWithContext(ctx context.Context) GetShardedDatabasesShardedDatabaseCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetShardedDatabasesShardedDatabaseCollectionItemOutput)
}

// GetShardedDatabasesShardedDatabaseCollectionItemArrayInput is an input type that accepts GetShardedDatabasesShardedDatabaseCollectionItemArray and GetShardedDatabasesShardedDatabaseCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetShardedDatabasesShardedDatabaseCollectionItemArrayInput` via:
//
//	GetShardedDatabasesShardedDatabaseCollectionItemArray{ GetShardedDatabasesShardedDatabaseCollectionItemArgs{...} }
type GetShardedDatabasesShardedDatabaseCollectionItemArrayInput interface {
	pulumi.Input

	ToGetShardedDatabasesShardedDatabaseCollectionItemArrayOutput() GetShardedDatabasesShardedDatabaseCollectionItemArrayOutput
	ToGetShardedDatabasesShardedDatabaseCollectionItemArrayOutputWithContext(context.Context) GetShardedDatabasesShardedDatabaseCollectionItemArrayOutput
}

type GetShardedDatabasesShardedDatabaseCollectionItemArray []GetShardedDatabasesShardedDatabaseCollectionItemInput

func (GetShardedDatabasesShardedDatabaseCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetShardedDatabasesShardedDatabaseCollectionItem)(nil)).Elem()
}

func (i GetShardedDatabasesShardedDatabaseCollectionItemArray) ToGetShardedDatabasesShardedDatabaseCollectionItemArrayOutput() GetShardedDatabasesShardedDatabaseCollectionItemArrayOutput {
	return i.ToGetShardedDatabasesShardedDatabaseCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetShardedDatabasesShardedDatabaseCollectionItemArray) ToGetShardedDatabasesShardedDatabaseCollectionItemArrayOutputWithContext(ctx context.Context) GetShardedDatabasesShardedDatabaseCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetShardedDatabasesShardedDatabaseCollectionItemArrayOutput)
}

type GetShardedDatabasesShardedDatabaseCollectionItemOutput struct{ *pulumi.OutputState }

func (GetShardedDatabasesShardedDatabaseCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetShardedDatabasesShardedDatabaseCollectionItem)(nil)).Elem()
}

func (o GetShardedDatabasesShardedDatabaseCollectionItemOutput) ToGetShardedDatabasesShardedDatabaseCollectionItemOutput() GetShardedDatabasesShardedDatabaseCollectionItemOutput {
	return o
}

func (o GetShardedDatabasesShardedDatabaseCollectionItemOutput) ToGetShardedDatabasesShardedDatabaseCollectionItemOutputWithContext(ctx context.Context) GetShardedDatabasesShardedDatabaseCollectionItemOutput {
	return o
}

// The character set for the database.
func (o GetShardedDatabasesShardedDatabaseCollectionItemOutput) CharacterSet() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabasesShardedDatabaseCollectionItem) string { return v.CharacterSet }).(pulumi.StringOutput)
}

// The default number of unique chunks in a shardspace. The value of chunks must be greater than 2 times the size of the largest shardgroup in any shardspace.
func (o GetShardedDatabasesShardedDatabaseCollectionItemOutput) Chunks() pulumi.IntOutput {
	return o.ApplyT(func(v GetShardedDatabasesShardedDatabaseCollectionItem) int { return v.Chunks }).(pulumi.IntOutput)
}

// The certificate common name used in all cloudAutonomousVmClusters for the sharded database topology. Eg. Production. All the clusters used in one sharded database topology shall have same CABundle setup. Valid characterset for clusterCertificateCommonName include uppercase or lowercase letters, numbers, hyphens, underscores, and period.
func (o GetShardedDatabasesShardedDatabaseCollectionItemOutput) ClusterCertificateCommonName() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabasesShardedDatabaseCollectionItem) string { return v.ClusterCertificateCommonName }).(pulumi.StringOutput)
}

// The ID of the compartment in which to list resources.
func (o GetShardedDatabasesShardedDatabaseCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabasesShardedDatabaseCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The database deployment type.
func (o GetShardedDatabasesShardedDatabaseCollectionItemOutput) DbDeploymentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabasesShardedDatabaseCollectionItem) string { return v.DbDeploymentType }).(pulumi.StringOutput)
}

// Oracle Database version number.
func (o GetShardedDatabasesShardedDatabaseCollectionItemOutput) DbVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabasesShardedDatabaseCollectionItem) string { return v.DbVersion }).(pulumi.StringOutput)
}

// Possible workload types.
func (o GetShardedDatabasesShardedDatabaseCollectionItemOutput) DbWorkload() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabasesShardedDatabaseCollectionItem) string { return v.DbWorkload }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetShardedDatabasesShardedDatabaseCollectionItemOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetShardedDatabasesShardedDatabaseCollectionItem) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A filter to return only sharded databases that match the entire name given. The match is not case sensitive.
func (o GetShardedDatabasesShardedDatabaseCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabasesShardedDatabaseCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetShardedDatabasesShardedDatabaseCollectionItemOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetShardedDatabasesShardedDatabaseCollectionItem) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Sharded Database identifier
func (o GetShardedDatabasesShardedDatabaseCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabasesShardedDatabaseCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetShardedDatabasesShardedDatabaseCollectionItemOutput) LifecycleState() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabasesShardedDatabaseCollectionItem) string { return v.LifecycleState }).(pulumi.StringOutput)
}

// Detailed message for the lifecycle state.
func (o GetShardedDatabasesShardedDatabaseCollectionItemOutput) LifecycleStateDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabasesShardedDatabaseCollectionItem) string { return v.LifecycleStateDetails }).(pulumi.StringOutput)
}

// The GSM listener port number.
func (o GetShardedDatabasesShardedDatabaseCollectionItemOutput) ListenerPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetShardedDatabasesShardedDatabaseCollectionItem) int { return v.ListenerPort }).(pulumi.IntOutput)
}

// The TLS listener port number for sharded database.
func (o GetShardedDatabasesShardedDatabaseCollectionItemOutput) ListenerPortTls() pulumi.IntOutput {
	return o.ApplyT(func(v GetShardedDatabasesShardedDatabaseCollectionItem) int { return v.ListenerPortTls }).(pulumi.IntOutput)
}

// The national character set for the database.
func (o GetShardedDatabasesShardedDatabaseCollectionItemOutput) NcharacterSet() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabasesShardedDatabaseCollectionItem) string { return v.NcharacterSet }).(pulumi.StringOutput)
}

// Ons local port number.
func (o GetShardedDatabasesShardedDatabaseCollectionItemOutput) OnsPortLocal() pulumi.IntOutput {
	return o.ApplyT(func(v GetShardedDatabasesShardedDatabaseCollectionItem) int { return v.OnsPortLocal }).(pulumi.IntOutput)
}

// Ons remote port number.
func (o GetShardedDatabasesShardedDatabaseCollectionItemOutput) OnsPortRemote() pulumi.IntOutput {
	return o.ApplyT(func(v GetShardedDatabasesShardedDatabaseCollectionItem) int { return v.OnsPortRemote }).(pulumi.IntOutput)
}

// Unique prefix for the sharded database.
func (o GetShardedDatabasesShardedDatabaseCollectionItemOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabasesShardedDatabaseCollectionItem) string { return v.Prefix }).(pulumi.StringOutput)
}

// The Replication factor for RAFT replication based sharded database. Currently supported values are 3, 5 and 7.
func (o GetShardedDatabasesShardedDatabaseCollectionItemOutput) ReplicationFactor() pulumi.IntOutput {
	return o.ApplyT(func(v GetShardedDatabasesShardedDatabaseCollectionItem) int { return v.ReplicationFactor }).(pulumi.IntOutput)
}

// The Replication method for sharded database. Use RAFT for Raft replication, and DG for DataGuard. If replicationMethod is not provided, it defaults to DG.
func (o GetShardedDatabasesShardedDatabaseCollectionItemOutput) ReplicationMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabasesShardedDatabaseCollectionItem) string { return v.ReplicationMethod }).(pulumi.StringOutput)
}

// For RAFT replication based sharded database, the value should be atleast twice the number of shards.
func (o GetShardedDatabasesShardedDatabaseCollectionItemOutput) ReplicationUnit() pulumi.IntOutput {
	return o.ApplyT(func(v GetShardedDatabasesShardedDatabaseCollectionItem) int { return v.ReplicationUnit }).(pulumi.IntOutput)
}

// Sharding Method.
func (o GetShardedDatabasesShardedDatabaseCollectionItemOutput) ShardingMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabasesShardedDatabaseCollectionItem) string { return v.ShardingMethod }).(pulumi.StringOutput)
}

// A filter to return only resources their lifecycleState matches the given lifecycleState.
func (o GetShardedDatabasesShardedDatabaseCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabasesShardedDatabaseCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetShardedDatabasesShardedDatabaseCollectionItemOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetShardedDatabasesShardedDatabaseCollectionItem) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The time the the Sharded Database was created. An RFC3339 formatted datetime string
func (o GetShardedDatabasesShardedDatabaseCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabasesShardedDatabaseCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the Sharded Database was last updated. An RFC3339 formatted datetime string
func (o GetShardedDatabasesShardedDatabaseCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetShardedDatabasesShardedDatabaseCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func (o GetShardedDatabasesShardedDatabaseCollectionItemOutput) TotalCpuCount() pulumi.Float64Output {
	return o.ApplyT(func(v GetShardedDatabasesShardedDatabaseCollectionItem) float64 { return v.TotalCpuCount }).(pulumi.Float64Output)
}

func (o GetShardedDatabasesShardedDatabaseCollectionItemOutput) TotalDataStorageSizeInGbs() pulumi.Float64Output {
	return o.ApplyT(func(v GetShardedDatabasesShardedDatabaseCollectionItem) float64 { return v.TotalDataStorageSizeInGbs }).(pulumi.Float64Output)
}

type GetShardedDatabasesShardedDatabaseCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetShardedDatabasesShardedDatabaseCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetShardedDatabasesShardedDatabaseCollectionItem)(nil)).Elem()
}

func (o GetShardedDatabasesShardedDatabaseCollectionItemArrayOutput) ToGetShardedDatabasesShardedDatabaseCollectionItemArrayOutput() GetShardedDatabasesShardedDatabaseCollectionItemArrayOutput {
	return o
}

func (o GetShardedDatabasesShardedDatabaseCollectionItemArrayOutput) ToGetShardedDatabasesShardedDatabaseCollectionItemArrayOutputWithContext(ctx context.Context) GetShardedDatabasesShardedDatabaseCollectionItemArrayOutput {
	return o
}

func (o GetShardedDatabasesShardedDatabaseCollectionItemArrayOutput) Index(i pulumi.IntInput) GetShardedDatabasesShardedDatabaseCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetShardedDatabasesShardedDatabaseCollectionItem {
		return vs[0].([]GetShardedDatabasesShardedDatabaseCollectionItem)[vs[1].(int)]
	}).(GetShardedDatabasesShardedDatabaseCollectionItemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ShardedDatabaseCatalogDetailInput)(nil)).Elem(), ShardedDatabaseCatalogDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShardedDatabaseCatalogDetailArrayInput)(nil)).Elem(), ShardedDatabaseCatalogDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShardedDatabaseCatalogDetailEncryptionKeyDetailsInput)(nil)).Elem(), ShardedDatabaseCatalogDetailEncryptionKeyDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrInput)(nil)).Elem(), ShardedDatabaseCatalogDetailEncryptionKeyDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShardedDatabaseConnectionStringInput)(nil)).Elem(), ShardedDatabaseConnectionStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShardedDatabaseConnectionStringArrayInput)(nil)).Elem(), ShardedDatabaseConnectionStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShardedDatabaseGsmInput)(nil)).Elem(), ShardedDatabaseGsmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShardedDatabaseGsmArrayInput)(nil)).Elem(), ShardedDatabaseGsmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShardedDatabasePatchOperationInput)(nil)).Elem(), ShardedDatabasePatchOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShardedDatabasePatchOperationArrayInput)(nil)).Elem(), ShardedDatabasePatchOperationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShardedDatabaseShardDetailInput)(nil)).Elem(), ShardedDatabaseShardDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShardedDatabaseShardDetailArrayInput)(nil)).Elem(), ShardedDatabaseShardDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShardedDatabaseShardDetailEncryptionKeyDetailsInput)(nil)).Elem(), ShardedDatabaseShardDetailEncryptionKeyDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShardedDatabaseShardDetailEncryptionKeyDetailsPtrInput)(nil)).Elem(), ShardedDatabaseShardDetailEncryptionKeyDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateEndpointsFilterInput)(nil)).Elem(), GetPrivateEndpointsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateEndpointsFilterArrayInput)(nil)).Elem(), GetPrivateEndpointsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateEndpointsPrivateEndpointCollectionInput)(nil)).Elem(), GetPrivateEndpointsPrivateEndpointCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateEndpointsPrivateEndpointCollectionArrayInput)(nil)).Elem(), GetPrivateEndpointsPrivateEndpointCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateEndpointsPrivateEndpointCollectionItemInput)(nil)).Elem(), GetPrivateEndpointsPrivateEndpointCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateEndpointsPrivateEndpointCollectionItemArrayInput)(nil)).Elem(), GetPrivateEndpointsPrivateEndpointCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetShardedDatabaseCatalogDetailInput)(nil)).Elem(), GetShardedDatabaseCatalogDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetShardedDatabaseCatalogDetailArrayInput)(nil)).Elem(), GetShardedDatabaseCatalogDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetShardedDatabaseCatalogDetailEncryptionKeyDetailInput)(nil)).Elem(), GetShardedDatabaseCatalogDetailEncryptionKeyDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetShardedDatabaseCatalogDetailEncryptionKeyDetailArrayInput)(nil)).Elem(), GetShardedDatabaseCatalogDetailEncryptionKeyDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetShardedDatabaseConnectionStringInput)(nil)).Elem(), GetShardedDatabaseConnectionStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetShardedDatabaseConnectionStringArrayInput)(nil)).Elem(), GetShardedDatabaseConnectionStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetShardedDatabaseGsmInput)(nil)).Elem(), GetShardedDatabaseGsmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetShardedDatabaseGsmArrayInput)(nil)).Elem(), GetShardedDatabaseGsmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetShardedDatabasePatchOperationInput)(nil)).Elem(), GetShardedDatabasePatchOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetShardedDatabasePatchOperationArrayInput)(nil)).Elem(), GetShardedDatabasePatchOperationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetShardedDatabaseShardDetailInput)(nil)).Elem(), GetShardedDatabaseShardDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetShardedDatabaseShardDetailArrayInput)(nil)).Elem(), GetShardedDatabaseShardDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetShardedDatabaseShardDetailEncryptionKeyDetailInput)(nil)).Elem(), GetShardedDatabaseShardDetailEncryptionKeyDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetShardedDatabaseShardDetailEncryptionKeyDetailArrayInput)(nil)).Elem(), GetShardedDatabaseShardDetailEncryptionKeyDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetShardedDatabasesFilterInput)(nil)).Elem(), GetShardedDatabasesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetShardedDatabasesFilterArrayInput)(nil)).Elem(), GetShardedDatabasesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetShardedDatabasesShardedDatabaseCollectionInput)(nil)).Elem(), GetShardedDatabasesShardedDatabaseCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetShardedDatabasesShardedDatabaseCollectionArrayInput)(nil)).Elem(), GetShardedDatabasesShardedDatabaseCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetShardedDatabasesShardedDatabaseCollectionItemInput)(nil)).Elem(), GetShardedDatabasesShardedDatabaseCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetShardedDatabasesShardedDatabaseCollectionItemArrayInput)(nil)).Elem(), GetShardedDatabasesShardedDatabaseCollectionItemArray{})
	pulumi.RegisterOutputType(ShardedDatabaseCatalogDetailOutput{})
	pulumi.RegisterOutputType(ShardedDatabaseCatalogDetailArrayOutput{})
	pulumi.RegisterOutputType(ShardedDatabaseCatalogDetailEncryptionKeyDetailsOutput{})
	pulumi.RegisterOutputType(ShardedDatabaseCatalogDetailEncryptionKeyDetailsPtrOutput{})
	pulumi.RegisterOutputType(ShardedDatabaseConnectionStringOutput{})
	pulumi.RegisterOutputType(ShardedDatabaseConnectionStringArrayOutput{})
	pulumi.RegisterOutputType(ShardedDatabaseGsmOutput{})
	pulumi.RegisterOutputType(ShardedDatabaseGsmArrayOutput{})
	pulumi.RegisterOutputType(ShardedDatabasePatchOperationOutput{})
	pulumi.RegisterOutputType(ShardedDatabasePatchOperationArrayOutput{})
	pulumi.RegisterOutputType(ShardedDatabaseShardDetailOutput{})
	pulumi.RegisterOutputType(ShardedDatabaseShardDetailArrayOutput{})
	pulumi.RegisterOutputType(ShardedDatabaseShardDetailEncryptionKeyDetailsOutput{})
	pulumi.RegisterOutputType(ShardedDatabaseShardDetailEncryptionKeyDetailsPtrOutput{})
	pulumi.RegisterOutputType(GetPrivateEndpointsFilterOutput{})
	pulumi.RegisterOutputType(GetPrivateEndpointsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetPrivateEndpointsPrivateEndpointCollectionOutput{})
	pulumi.RegisterOutputType(GetPrivateEndpointsPrivateEndpointCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetPrivateEndpointsPrivateEndpointCollectionItemOutput{})
	pulumi.RegisterOutputType(GetPrivateEndpointsPrivateEndpointCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetShardedDatabaseCatalogDetailOutput{})
	pulumi.RegisterOutputType(GetShardedDatabaseCatalogDetailArrayOutput{})
	pulumi.RegisterOutputType(GetShardedDatabaseCatalogDetailEncryptionKeyDetailOutput{})
	pulumi.RegisterOutputType(GetShardedDatabaseCatalogDetailEncryptionKeyDetailArrayOutput{})
	pulumi.RegisterOutputType(GetShardedDatabaseConnectionStringOutput{})
	pulumi.RegisterOutputType(GetShardedDatabaseConnectionStringArrayOutput{})
	pulumi.RegisterOutputType(GetShardedDatabaseGsmOutput{})
	pulumi.RegisterOutputType(GetShardedDatabaseGsmArrayOutput{})
	pulumi.RegisterOutputType(GetShardedDatabasePatchOperationOutput{})
	pulumi.RegisterOutputType(GetShardedDatabasePatchOperationArrayOutput{})
	pulumi.RegisterOutputType(GetShardedDatabaseShardDetailOutput{})
	pulumi.RegisterOutputType(GetShardedDatabaseShardDetailArrayOutput{})
	pulumi.RegisterOutputType(GetShardedDatabaseShardDetailEncryptionKeyDetailOutput{})
	pulumi.RegisterOutputType(GetShardedDatabaseShardDetailEncryptionKeyDetailArrayOutput{})
	pulumi.RegisterOutputType(GetShardedDatabasesFilterOutput{})
	pulumi.RegisterOutputType(GetShardedDatabasesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetShardedDatabasesShardedDatabaseCollectionOutput{})
	pulumi.RegisterOutputType(GetShardedDatabasesShardedDatabaseCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetShardedDatabasesShardedDatabaseCollectionItemOutput{})
	pulumi.RegisterOutputType(GetShardedDatabasesShardedDatabaseCollectionItemArrayOutput{})
}
