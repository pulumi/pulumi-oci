// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package goldengate

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Connections in Oracle Cloud Infrastructure Golden Gate service.
//
// Lists the Connections in the compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/GoldenGate"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := GoldenGate.GetConnections(ctx, &goldengate.GetConnectionsArgs{
//				CompartmentId:            compartmentId,
//				AssignableDeploymentId:   pulumi.StringRef(testDeployment.Id),
//				AssignableDeploymentType: pulumi.StringRef(connectionAssignableDeploymentType),
//				AssignedDeploymentId:     pulumi.StringRef(testDeployment.Id),
//				ConnectionTypes:          connectionConnectionType,
//				DisplayName:              pulumi.StringRef(connectionDisplayName),
//				State:                    pulumi.StringRef(connectionState),
//				TechnologyTypes:          connectionTechnologyType,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetConnections(ctx *pulumi.Context, args *GetConnectionsArgs, opts ...pulumi.InvokeOption) (*GetConnectionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetConnectionsResult
	err := ctx.Invoke("oci:GoldenGate/getConnections:getConnections", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConnections.
type GetConnectionsArgs struct {
	// Filters for compatible connections which can be, but currently not assigned to the deployment specified by its id.
	AssignableDeploymentId *string `pulumi:"assignableDeploymentId"`
	// Filters for connections which can be assigned to the latest version of the specified deployment type.
	AssignableDeploymentType *string `pulumi:"assignableDeploymentType"`
	// The OCID of the deployment which for the connection must be assigned.
	AssignedDeploymentId *string `pulumi:"assignedDeploymentId"`
	// The OCID of the compartment that contains the work request. Work requests should be scoped  to the same compartment as the resource the work request affects. If the work request concerns  multiple resources, and those resources are not in the same compartment, it is up to the service team  to pick the primary resource whose compartment should be used.
	CompartmentId string `pulumi:"compartmentId"`
	// The array of connection types.
	ConnectionTypes []string `pulumi:"connectionTypes"`
	// A filter to return only the resources that match the entire 'displayName' given.
	DisplayName *string                `pulumi:"displayName"`
	Filters     []GetConnectionsFilter `pulumi:"filters"`
	// A filter to return only connections having the 'lifecycleState' given.
	State *string `pulumi:"state"`
	// The array of technology types.
	TechnologyTypes []string `pulumi:"technologyTypes"`
}

// A collection of values returned by getConnections.
type GetConnectionsResult struct {
	AssignableDeploymentId   *string `pulumi:"assignableDeploymentId"`
	AssignableDeploymentType *string `pulumi:"assignableDeploymentType"`
	AssignedDeploymentId     *string `pulumi:"assignedDeploymentId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
	CompartmentId string `pulumi:"compartmentId"`
	// The list of connection_collection.
	ConnectionCollections []GetConnectionsConnectionCollection `pulumi:"connectionCollections"`
	// The connection type.
	ConnectionTypes []string `pulumi:"connectionTypes"`
	// An object's Display Name.
	DisplayName *string                `pulumi:"displayName"`
	Filters     []GetConnectionsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Possible lifecycle states for connection.
	State *string `pulumi:"state"`
	// The technology type.
	TechnologyTypes []string `pulumi:"technologyTypes"`
}

func GetConnectionsOutput(ctx *pulumi.Context, args GetConnectionsOutputArgs, opts ...pulumi.InvokeOption) GetConnectionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetConnectionsResult, error) {
			args := v.(GetConnectionsArgs)
			r, err := GetConnections(ctx, &args, opts...)
			var s GetConnectionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetConnectionsResultOutput)
}

// A collection of arguments for invoking getConnections.
type GetConnectionsOutputArgs struct {
	// Filters for compatible connections which can be, but currently not assigned to the deployment specified by its id.
	AssignableDeploymentId pulumi.StringPtrInput `pulumi:"assignableDeploymentId"`
	// Filters for connections which can be assigned to the latest version of the specified deployment type.
	AssignableDeploymentType pulumi.StringPtrInput `pulumi:"assignableDeploymentType"`
	// The OCID of the deployment which for the connection must be assigned.
	AssignedDeploymentId pulumi.StringPtrInput `pulumi:"assignedDeploymentId"`
	// The OCID of the compartment that contains the work request. Work requests should be scoped  to the same compartment as the resource the work request affects. If the work request concerns  multiple resources, and those resources are not in the same compartment, it is up to the service team  to pick the primary resource whose compartment should be used.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The array of connection types.
	ConnectionTypes pulumi.StringArrayInput `pulumi:"connectionTypes"`
	// A filter to return only the resources that match the entire 'displayName' given.
	DisplayName pulumi.StringPtrInput          `pulumi:"displayName"`
	Filters     GetConnectionsFilterArrayInput `pulumi:"filters"`
	// A filter to return only connections having the 'lifecycleState' given.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The array of technology types.
	TechnologyTypes pulumi.StringArrayInput `pulumi:"technologyTypes"`
}

func (GetConnectionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsArgs)(nil)).Elem()
}

// A collection of values returned by getConnections.
type GetConnectionsResultOutput struct{ *pulumi.OutputState }

func (GetConnectionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsResult)(nil)).Elem()
}

func (o GetConnectionsResultOutput) ToGetConnectionsResultOutput() GetConnectionsResultOutput {
	return o
}

func (o GetConnectionsResultOutput) ToGetConnectionsResultOutputWithContext(ctx context.Context) GetConnectionsResultOutput {
	return o
}

func (o GetConnectionsResultOutput) AssignableDeploymentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsResult) *string { return v.AssignableDeploymentId }).(pulumi.StringPtrOutput)
}

func (o GetConnectionsResultOutput) AssignableDeploymentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsResult) *string { return v.AssignableDeploymentType }).(pulumi.StringPtrOutput)
}

func (o GetConnectionsResultOutput) AssignedDeploymentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsResult) *string { return v.AssignedDeploymentId }).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
func (o GetConnectionsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The list of connection_collection.
func (o GetConnectionsResultOutput) ConnectionCollections() GetConnectionsConnectionCollectionArrayOutput {
	return o.ApplyT(func(v GetConnectionsResult) []GetConnectionsConnectionCollection { return v.ConnectionCollections }).(GetConnectionsConnectionCollectionArrayOutput)
}

// The connection type.
func (o GetConnectionsResultOutput) ConnectionTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConnectionsResult) []string { return v.ConnectionTypes }).(pulumi.StringArrayOutput)
}

// An object's Display Name.
func (o GetConnectionsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetConnectionsResultOutput) Filters() GetConnectionsFilterArrayOutput {
	return o.ApplyT(func(v GetConnectionsResult) []GetConnectionsFilter { return v.Filters }).(GetConnectionsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetConnectionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Possible lifecycle states for connection.
func (o GetConnectionsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The technology type.
func (o GetConnectionsResultOutput) TechnologyTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConnectionsResult) []string { return v.TechnologyTypes }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetConnectionsResultOutput{})
}
