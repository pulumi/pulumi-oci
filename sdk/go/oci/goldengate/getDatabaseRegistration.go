// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package goldengate

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Database Registration resource in Oracle Cloud Infrastructure Golden Gate service.
//
// Note: Deprecated. Use the /connections API instead.
// Retrieves a DatabaseRegistration.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/GoldenGate"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := GoldenGate.GetDatabaseRegistration(ctx, &goldengate.GetDatabaseRegistrationArgs{
//				DatabaseRegistrationId: oci_golden_gate_database_registration.Test_database_registration.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDatabaseRegistration(ctx *pulumi.Context, args *LookupDatabaseRegistrationArgs, opts ...pulumi.InvokeOption) (*LookupDatabaseRegistrationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDatabaseRegistrationResult
	err := ctx.Invoke("oci:GoldenGate/getDatabaseRegistration:getDatabaseRegistration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDatabaseRegistration.
type LookupDatabaseRegistrationArgs struct {
	// A unique DatabaseRegistration identifier.
	DatabaseRegistrationId string `pulumi:"databaseRegistrationId"`
}

// A collection of values returned by getDatabaseRegistration.
type LookupDatabaseRegistrationResult struct {
	// Credential store alias.
	AliasName string `pulumi:"aliasName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
	CompartmentId string `pulumi:"compartmentId"`
	// Connect descriptor or Easy Connect Naming method used to connect to a database.
	ConnectionString string `pulumi:"connectionString"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database being referenced.
	DatabaseId             string `pulumi:"databaseId"`
	DatabaseRegistrationId string `pulumi:"databaseRegistrationId"`
	// Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Metadata about this specific object.
	Description string `pulumi:"description"`
	// An object's Display Name.
	DisplayName string `pulumi:"displayName"`
	// A three-label Fully Qualified Domain Name (FQDN) for a resource.
	Fqdn string `pulumi:"fqdn"`
	// A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the databaseRegistration being referenced.
	Id string `pulumi:"id"`
	// The private IP address in the customer's VCN of the customer's endpoint, typically a database.
	IpAddress string `pulumi:"ipAddress"`
	// Refers to the customer's master key OCID.  If provided, it references a key to manage secrets. Customers must add policies to permit GoldenGate to use this key.
	KeyId string `pulumi:"keyId"`
	// Describes the object's current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	Password         string `pulumi:"password"`
	// A Private Endpoint IP address created in the customer's subnet.  A customer database can expect network traffic initiated by GoldenGate Service from this IP address.  It can also send network traffic to this IP address, typically in response to requests from GoldenGate Service.  The customer may use this IP address in Security Lists or Network Security Groups (NSG) as needed.
	RcePrivateIp string `pulumi:"rcePrivateIp"`
	// The OCID of the compartment where the GoldenGate Secret will be created.  If provided, it references a key to manage secrets. Customers must add policies to permit GoldenGate to use this key.
	SecretCompartmentId string `pulumi:"secretCompartmentId"`
	// The OCID of the customer's GoldenGate Service Secret.  If provided, it references a key that customers will be required to ensure the policies are established  to permit GoldenGate to use this Secret.
	SecretId string `pulumi:"secretId"`
	// The mode of the database connection session to be established by the data client. 'REDIRECT' - for a RAC database, 'DIRECT' - for a non-RAC database. Connection to a RAC database involves a redirection received from the SCAN listeners to the database node to connect to. By default the mode would be DIRECT.
	SessionMode string `pulumi:"sessionMode"`
	// Possible lifecycle states.
	State string `pulumi:"state"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the target subnet of the dedicated connection.
	SubnetId string `pulumi:"subnetId"`
	// The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
	TimeCreated string `pulumi:"timeCreated"`
	// The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
	TimeUpdated string `pulumi:"timeUpdated"`
	// The username Oracle GoldenGate uses to connect the associated system of the given technology. This username must already exist and be available by the system/application to be connected to and must conform to the case sensitivty requirments defined in it.
	Username string `pulumi:"username"`
	// Refers to the customer's vault OCID.  If provided, it references a vault where GoldenGate can manage secrets. Customers must add policies to permit GoldenGate to manage secrets contained within this vault.
	VaultId string `pulumi:"vaultId"`
	Wallet  string `pulumi:"wallet"`
}

func LookupDatabaseRegistrationOutput(ctx *pulumi.Context, args LookupDatabaseRegistrationOutputArgs, opts ...pulumi.InvokeOption) LookupDatabaseRegistrationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDatabaseRegistrationResult, error) {
			args := v.(LookupDatabaseRegistrationArgs)
			r, err := LookupDatabaseRegistration(ctx, &args, opts...)
			var s LookupDatabaseRegistrationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDatabaseRegistrationResultOutput)
}

// A collection of arguments for invoking getDatabaseRegistration.
type LookupDatabaseRegistrationOutputArgs struct {
	// A unique DatabaseRegistration identifier.
	DatabaseRegistrationId pulumi.StringInput `pulumi:"databaseRegistrationId"`
}

func (LookupDatabaseRegistrationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatabaseRegistrationArgs)(nil)).Elem()
}

// A collection of values returned by getDatabaseRegistration.
type LookupDatabaseRegistrationResultOutput struct{ *pulumi.OutputState }

func (LookupDatabaseRegistrationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatabaseRegistrationResult)(nil)).Elem()
}

func (o LookupDatabaseRegistrationResultOutput) ToLookupDatabaseRegistrationResultOutput() LookupDatabaseRegistrationResultOutput {
	return o
}

func (o LookupDatabaseRegistrationResultOutput) ToLookupDatabaseRegistrationResultOutputWithContext(ctx context.Context) LookupDatabaseRegistrationResultOutput {
	return o
}

// Credential store alias.
func (o LookupDatabaseRegistrationResultOutput) AliasName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseRegistrationResult) string { return v.AliasName }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
func (o LookupDatabaseRegistrationResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseRegistrationResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Connect descriptor or Easy Connect Naming method used to connect to a database.
func (o LookupDatabaseRegistrationResultOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseRegistrationResult) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database being referenced.
func (o LookupDatabaseRegistrationResultOutput) DatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseRegistrationResult) string { return v.DatabaseId }).(pulumi.StringOutput)
}

func (o LookupDatabaseRegistrationResultOutput) DatabaseRegistrationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseRegistrationResult) string { return v.DatabaseRegistrationId }).(pulumi.StringOutput)
}

// Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupDatabaseRegistrationResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupDatabaseRegistrationResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// Metadata about this specific object.
func (o LookupDatabaseRegistrationResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseRegistrationResult) string { return v.Description }).(pulumi.StringOutput)
}

// An object's Display Name.
func (o LookupDatabaseRegistrationResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseRegistrationResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// A three-label Fully Qualified Domain Name (FQDN) for a resource.
func (o LookupDatabaseRegistrationResultOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseRegistrationResult) string { return v.Fqdn }).(pulumi.StringOutput)
}

// A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
func (o LookupDatabaseRegistrationResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupDatabaseRegistrationResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the databaseRegistration being referenced.
func (o LookupDatabaseRegistrationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseRegistrationResult) string { return v.Id }).(pulumi.StringOutput)
}

// The private IP address in the customer's VCN of the customer's endpoint, typically a database.
func (o LookupDatabaseRegistrationResultOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseRegistrationResult) string { return v.IpAddress }).(pulumi.StringOutput)
}

// Refers to the customer's master key OCID.  If provided, it references a key to manage secrets. Customers must add policies to permit GoldenGate to use this key.
func (o LookupDatabaseRegistrationResultOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseRegistrationResult) string { return v.KeyId }).(pulumi.StringOutput)
}

// Describes the object's current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
func (o LookupDatabaseRegistrationResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseRegistrationResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

func (o LookupDatabaseRegistrationResultOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseRegistrationResult) string { return v.Password }).(pulumi.StringOutput)
}

// A Private Endpoint IP address created in the customer's subnet.  A customer database can expect network traffic initiated by GoldenGate Service from this IP address.  It can also send network traffic to this IP address, typically in response to requests from GoldenGate Service.  The customer may use this IP address in Security Lists or Network Security Groups (NSG) as needed.
func (o LookupDatabaseRegistrationResultOutput) RcePrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseRegistrationResult) string { return v.RcePrivateIp }).(pulumi.StringOutput)
}

// The OCID of the compartment where the GoldenGate Secret will be created.  If provided, it references a key to manage secrets. Customers must add policies to permit GoldenGate to use this key.
func (o LookupDatabaseRegistrationResultOutput) SecretCompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseRegistrationResult) string { return v.SecretCompartmentId }).(pulumi.StringOutput)
}

// The OCID of the customer's GoldenGate Service Secret.  If provided, it references a key that customers will be required to ensure the policies are established  to permit GoldenGate to use this Secret.
func (o LookupDatabaseRegistrationResultOutput) SecretId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseRegistrationResult) string { return v.SecretId }).(pulumi.StringOutput)
}

// The mode of the database connection session to be established by the data client. 'REDIRECT' - for a RAC database, 'DIRECT' - for a non-RAC database. Connection to a RAC database involves a redirection received from the SCAN listeners to the database node to connect to. By default the mode would be DIRECT.
func (o LookupDatabaseRegistrationResultOutput) SessionMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseRegistrationResult) string { return v.SessionMode }).(pulumi.StringOutput)
}

// Possible lifecycle states.
func (o LookupDatabaseRegistrationResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseRegistrationResult) string { return v.State }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the target subnet of the dedicated connection.
func (o LookupDatabaseRegistrationResultOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseRegistrationResult) string { return v.SubnetId }).(pulumi.StringOutput)
}

// The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
func (o LookupDatabaseRegistrationResultOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupDatabaseRegistrationResult) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
func (o LookupDatabaseRegistrationResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseRegistrationResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
func (o LookupDatabaseRegistrationResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseRegistrationResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The username Oracle GoldenGate uses to connect the associated system of the given technology. This username must already exist and be available by the system/application to be connected to and must conform to the case sensitivty requirments defined in it.
func (o LookupDatabaseRegistrationResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseRegistrationResult) string { return v.Username }).(pulumi.StringOutput)
}

// Refers to the customer's vault OCID.  If provided, it references a vault where GoldenGate can manage secrets. Customers must add policies to permit GoldenGate to manage secrets contained within this vault.
func (o LookupDatabaseRegistrationResultOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseRegistrationResult) string { return v.VaultId }).(pulumi.StringOutput)
}

func (o LookupDatabaseRegistrationResultOutput) Wallet() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseRegistrationResult) string { return v.Wallet }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDatabaseRegistrationResultOutput{})
}
