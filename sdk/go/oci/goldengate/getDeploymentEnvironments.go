// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package goldengate

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Deployment Environments in Oracle Cloud Infrastructure Golden Gate service.
//
// # Returns an array of DeploymentEnvironmentDescriptor
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/goldengate"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := goldengate.GetDeploymentEnvironments(ctx, &goldengate.GetDeploymentEnvironmentsArgs{
//				CompartmentId: compartmentId,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDeploymentEnvironments(ctx *pulumi.Context, args *GetDeploymentEnvironmentsArgs, opts ...pulumi.InvokeOption) (*GetDeploymentEnvironmentsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDeploymentEnvironmentsResult
	err := ctx.Invoke("oci:GoldenGate/getDeploymentEnvironments:getDeploymentEnvironments", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDeploymentEnvironments.
type GetDeploymentEnvironmentsArgs struct {
	// The OCID of the compartment that contains the work request. Work requests should be scoped  to the same compartment as the resource the work request affects. If the work request concerns  multiple resources, and those resources are not in the same compartment, it is up to the service team  to pick the primary resource whose compartment should be used.
	CompartmentId string                            `pulumi:"compartmentId"`
	Filters       []GetDeploymentEnvironmentsFilter `pulumi:"filters"`
}

// A collection of values returned by getDeploymentEnvironments.
type GetDeploymentEnvironmentsResult struct {
	CompartmentId string `pulumi:"compartmentId"`
	// The list of deployment_environment_collection.
	DeploymentEnvironmentCollections []GetDeploymentEnvironmentsDeploymentEnvironmentCollection `pulumi:"deploymentEnvironmentCollections"`
	Filters                          []GetDeploymentEnvironmentsFilter                          `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func GetDeploymentEnvironmentsOutput(ctx *pulumi.Context, args GetDeploymentEnvironmentsOutputArgs, opts ...pulumi.InvokeOption) GetDeploymentEnvironmentsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDeploymentEnvironmentsResultOutput, error) {
			args := v.(GetDeploymentEnvironmentsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:GoldenGate/getDeploymentEnvironments:getDeploymentEnvironments", args, GetDeploymentEnvironmentsResultOutput{}, options).(GetDeploymentEnvironmentsResultOutput), nil
		}).(GetDeploymentEnvironmentsResultOutput)
}

// A collection of arguments for invoking getDeploymentEnvironments.
type GetDeploymentEnvironmentsOutputArgs struct {
	// The OCID of the compartment that contains the work request. Work requests should be scoped  to the same compartment as the resource the work request affects. If the work request concerns  multiple resources, and those resources are not in the same compartment, it is up to the service team  to pick the primary resource whose compartment should be used.
	CompartmentId pulumi.StringInput                        `pulumi:"compartmentId"`
	Filters       GetDeploymentEnvironmentsFilterArrayInput `pulumi:"filters"`
}

func (GetDeploymentEnvironmentsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentEnvironmentsArgs)(nil)).Elem()
}

// A collection of values returned by getDeploymentEnvironments.
type GetDeploymentEnvironmentsResultOutput struct{ *pulumi.OutputState }

func (GetDeploymentEnvironmentsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentEnvironmentsResult)(nil)).Elem()
}

func (o GetDeploymentEnvironmentsResultOutput) ToGetDeploymentEnvironmentsResultOutput() GetDeploymentEnvironmentsResultOutput {
	return o
}

func (o GetDeploymentEnvironmentsResultOutput) ToGetDeploymentEnvironmentsResultOutputWithContext(ctx context.Context) GetDeploymentEnvironmentsResultOutput {
	return o
}

func (o GetDeploymentEnvironmentsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentEnvironmentsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The list of deployment_environment_collection.
func (o GetDeploymentEnvironmentsResultOutput) DeploymentEnvironmentCollections() GetDeploymentEnvironmentsDeploymentEnvironmentCollectionArrayOutput {
	return o.ApplyT(func(v GetDeploymentEnvironmentsResult) []GetDeploymentEnvironmentsDeploymentEnvironmentCollection {
		return v.DeploymentEnvironmentCollections
	}).(GetDeploymentEnvironmentsDeploymentEnvironmentCollectionArrayOutput)
}

func (o GetDeploymentEnvironmentsResultOutput) Filters() GetDeploymentEnvironmentsFilterArrayOutput {
	return o.ApplyT(func(v GetDeploymentEnvironmentsResult) []GetDeploymentEnvironmentsFilter { return v.Filters }).(GetDeploymentEnvironmentsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDeploymentEnvironmentsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentEnvironmentsResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDeploymentEnvironmentsResultOutput{})
}
