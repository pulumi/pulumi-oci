// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package goldengate

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Deployment Types in Oracle Cloud Infrastructure Golden Gate service.
//
// # Returns an array of DeploymentTypeDescriptor
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/GoldenGate"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := GoldenGate.GetDeploymentTypes(ctx, &goldengate.GetDeploymentTypesArgs{
//				CompartmentId:  compartmentId,
//				DeploymentType: pulumi.StringRef(deploymentTypeDeploymentType),
//				DisplayName:    pulumi.StringRef(deploymentTypeDisplayName),
//				OggVersion:     pulumi.StringRef(deploymentTypeOggVersion),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDeploymentTypes(ctx *pulumi.Context, args *GetDeploymentTypesArgs, opts ...pulumi.InvokeOption) (*GetDeploymentTypesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDeploymentTypesResult
	err := ctx.Invoke("oci:GoldenGate/getDeploymentTypes:getDeploymentTypes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDeploymentTypes.
type GetDeploymentTypesArgs struct {
	// The OCID of the compartment that contains the work request. Work requests should be scoped  to the same compartment as the resource the work request affects. If the work request concerns  multiple resources, and those resources are not in the same compartment, it is up to the service team  to pick the primary resource whose compartment should be used.
	CompartmentId string `pulumi:"compartmentId"`
	// The type of deployment, the value determines the exact 'type' of the service executed in the deployment. Default value is DATABASE_ORACLE.
	DeploymentType *string `pulumi:"deploymentType"`
	// A filter to return only the resources that match the entire 'displayName' given.
	DisplayName *string                    `pulumi:"displayName"`
	Filters     []GetDeploymentTypesFilter `pulumi:"filters"`
	// Allows to query by a specific GoldenGate version.
	OggVersion *string `pulumi:"oggVersion"`
}

// A collection of values returned by getDeploymentTypes.
type GetDeploymentTypesResult struct {
	CompartmentId string `pulumi:"compartmentId"`
	// The type of deployment, which can be any one of the Allowed values.  NOTE: Use of the value 'OGG' is maintained for backward compatibility purposes.  Its use is discouraged in favor of 'DATABASE_ORACLE'.
	DeploymentType *string `pulumi:"deploymentType"`
	// The list of deployment_type_collection.
	DeploymentTypeCollections []GetDeploymentTypesDeploymentTypeCollection `pulumi:"deploymentTypeCollections"`
	// An object's Display Name.
	DisplayName *string                    `pulumi:"displayName"`
	Filters     []GetDeploymentTypesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Version of OGG
	OggVersion *string `pulumi:"oggVersion"`
}

func GetDeploymentTypesOutput(ctx *pulumi.Context, args GetDeploymentTypesOutputArgs, opts ...pulumi.InvokeOption) GetDeploymentTypesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDeploymentTypesResultOutput, error) {
			args := v.(GetDeploymentTypesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:GoldenGate/getDeploymentTypes:getDeploymentTypes", args, GetDeploymentTypesResultOutput{}, options).(GetDeploymentTypesResultOutput), nil
		}).(GetDeploymentTypesResultOutput)
}

// A collection of arguments for invoking getDeploymentTypes.
type GetDeploymentTypesOutputArgs struct {
	// The OCID of the compartment that contains the work request. Work requests should be scoped  to the same compartment as the resource the work request affects. If the work request concerns  multiple resources, and those resources are not in the same compartment, it is up to the service team  to pick the primary resource whose compartment should be used.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The type of deployment, the value determines the exact 'type' of the service executed in the deployment. Default value is DATABASE_ORACLE.
	DeploymentType pulumi.StringPtrInput `pulumi:"deploymentType"`
	// A filter to return only the resources that match the entire 'displayName' given.
	DisplayName pulumi.StringPtrInput              `pulumi:"displayName"`
	Filters     GetDeploymentTypesFilterArrayInput `pulumi:"filters"`
	// Allows to query by a specific GoldenGate version.
	OggVersion pulumi.StringPtrInput `pulumi:"oggVersion"`
}

func (GetDeploymentTypesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentTypesArgs)(nil)).Elem()
}

// A collection of values returned by getDeploymentTypes.
type GetDeploymentTypesResultOutput struct{ *pulumi.OutputState }

func (GetDeploymentTypesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentTypesResult)(nil)).Elem()
}

func (o GetDeploymentTypesResultOutput) ToGetDeploymentTypesResultOutput() GetDeploymentTypesResultOutput {
	return o
}

func (o GetDeploymentTypesResultOutput) ToGetDeploymentTypesResultOutputWithContext(ctx context.Context) GetDeploymentTypesResultOutput {
	return o
}

func (o GetDeploymentTypesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentTypesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The type of deployment, which can be any one of the Allowed values.  NOTE: Use of the value 'OGG' is maintained for backward compatibility purposes.  Its use is discouraged in favor of 'DATABASE_ORACLE'.
func (o GetDeploymentTypesResultOutput) DeploymentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeploymentTypesResult) *string { return v.DeploymentType }).(pulumi.StringPtrOutput)
}

// The list of deployment_type_collection.
func (o GetDeploymentTypesResultOutput) DeploymentTypeCollections() GetDeploymentTypesDeploymentTypeCollectionArrayOutput {
	return o.ApplyT(func(v GetDeploymentTypesResult) []GetDeploymentTypesDeploymentTypeCollection {
		return v.DeploymentTypeCollections
	}).(GetDeploymentTypesDeploymentTypeCollectionArrayOutput)
}

// An object's Display Name.
func (o GetDeploymentTypesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeploymentTypesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetDeploymentTypesResultOutput) Filters() GetDeploymentTypesFilterArrayOutput {
	return o.ApplyT(func(v GetDeploymentTypesResult) []GetDeploymentTypesFilter { return v.Filters }).(GetDeploymentTypesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDeploymentTypesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentTypesResult) string { return v.Id }).(pulumi.StringOutput)
}

// Version of OGG
func (o GetDeploymentTypesResultOutput) OggVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeploymentTypesResult) *string { return v.OggVersion }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDeploymentTypesResultOutput{})
}
