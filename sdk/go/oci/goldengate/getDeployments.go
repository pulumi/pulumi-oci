// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package goldengate

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Deployments in Oracle Cloud Infrastructure Golden Gate service.
//
// Lists the Deployments in a compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/GoldenGate"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := GoldenGate.GetDeployments(ctx, &goldengate.GetDeploymentsArgs{
//				CompartmentId:           compartmentId,
//				AssignableConnectionId:  pulumi.StringRef(testConnection.Id),
//				AssignedConnectionId:    pulumi.StringRef(testConnection.Id),
//				DisplayName:             pulumi.StringRef(deploymentDisplayName),
//				Fqdn:                    pulumi.StringRef(deploymentFqdn),
//				LifecycleSubState:       pulumi.StringRef(deploymentLifecycleSubState),
//				State:                   pulumi.StringRef(deploymentState),
//				SupportedConnectionType: pulumi.StringRef(deploymentSupportedConnectionType),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDeployments(ctx *pulumi.Context, args *GetDeploymentsArgs, opts ...pulumi.InvokeOption) (*GetDeploymentsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDeploymentsResult
	err := ctx.Invoke("oci:GoldenGate/getDeployments:getDeployments", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDeployments.
type GetDeploymentsArgs struct {
	// Return the deployments to which the specified connectionId may be assigned.
	AssignableConnectionId *string `pulumi:"assignableConnectionId"`
	// The OCID of the connection which for the deployment must be assigned.
	AssignedConnectionId *string `pulumi:"assignedConnectionId"`
	// The OCID of the compartment that contains the work request. Work requests should be scoped  to the same compartment as the resource the work request affects. If the work request concerns  multiple resources, and those resources are not in the same compartment, it is up to the service team  to pick the primary resource whose compartment should be used.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only the resources that match the entire 'displayName' given.
	DisplayName *string                `pulumi:"displayName"`
	Filters     []GetDeploymentsFilter `pulumi:"filters"`
	// A filter to return only the resources that match the 'fqdn' given.
	Fqdn *string `pulumi:"fqdn"`
	// A filter to return only the resources that match the 'lifecycleSubState' given.
	LifecycleSubState *string `pulumi:"lifecycleSubState"`
	// A filter to return only the resources that match the 'lifecycleState' given.
	State *string `pulumi:"state"`
	// The connection type which the deployment must support.
	SupportedConnectionType *string `pulumi:"supportedConnectionType"`
}

// A collection of values returned by getDeployments.
type GetDeploymentsResult struct {
	AssignableConnectionId *string `pulumi:"assignableConnectionId"`
	AssignedConnectionId   *string `pulumi:"assignedConnectionId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
	CompartmentId string `pulumi:"compartmentId"`
	// The list of deployment_collection.
	DeploymentCollections []GetDeploymentsDeploymentCollection `pulumi:"deploymentCollections"`
	// An object's Display Name.
	DisplayName *string                `pulumi:"displayName"`
	Filters     []GetDeploymentsFilter `pulumi:"filters"`
	// A three-label Fully Qualified Domain Name (FQDN) for a resource.
	Fqdn *string `pulumi:"fqdn"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Possible GGS lifecycle sub-states.
	LifecycleSubState *string `pulumi:"lifecycleSubState"`
	// Possible lifecycle states.
	State                   *string `pulumi:"state"`
	SupportedConnectionType *string `pulumi:"supportedConnectionType"`
}

func GetDeploymentsOutput(ctx *pulumi.Context, args GetDeploymentsOutputArgs, opts ...pulumi.InvokeOption) GetDeploymentsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDeploymentsResultOutput, error) {
			args := v.(GetDeploymentsArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetDeploymentsResult
			secret, err := ctx.InvokePackageRaw("oci:GoldenGate/getDeployments:getDeployments", args, &rv, "", opts...)
			if err != nil {
				return GetDeploymentsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetDeploymentsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetDeploymentsResultOutput), nil
			}
			return output, nil
		}).(GetDeploymentsResultOutput)
}

// A collection of arguments for invoking getDeployments.
type GetDeploymentsOutputArgs struct {
	// Return the deployments to which the specified connectionId may be assigned.
	AssignableConnectionId pulumi.StringPtrInput `pulumi:"assignableConnectionId"`
	// The OCID of the connection which for the deployment must be assigned.
	AssignedConnectionId pulumi.StringPtrInput `pulumi:"assignedConnectionId"`
	// The OCID of the compartment that contains the work request. Work requests should be scoped  to the same compartment as the resource the work request affects. If the work request concerns  multiple resources, and those resources are not in the same compartment, it is up to the service team  to pick the primary resource whose compartment should be used.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only the resources that match the entire 'displayName' given.
	DisplayName pulumi.StringPtrInput          `pulumi:"displayName"`
	Filters     GetDeploymentsFilterArrayInput `pulumi:"filters"`
	// A filter to return only the resources that match the 'fqdn' given.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// A filter to return only the resources that match the 'lifecycleSubState' given.
	LifecycleSubState pulumi.StringPtrInput `pulumi:"lifecycleSubState"`
	// A filter to return only the resources that match the 'lifecycleState' given.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The connection type which the deployment must support.
	SupportedConnectionType pulumi.StringPtrInput `pulumi:"supportedConnectionType"`
}

func (GetDeploymentsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentsArgs)(nil)).Elem()
}

// A collection of values returned by getDeployments.
type GetDeploymentsResultOutput struct{ *pulumi.OutputState }

func (GetDeploymentsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentsResult)(nil)).Elem()
}

func (o GetDeploymentsResultOutput) ToGetDeploymentsResultOutput() GetDeploymentsResultOutput {
	return o
}

func (o GetDeploymentsResultOutput) ToGetDeploymentsResultOutputWithContext(ctx context.Context) GetDeploymentsResultOutput {
	return o
}

func (o GetDeploymentsResultOutput) AssignableConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeploymentsResult) *string { return v.AssignableConnectionId }).(pulumi.StringPtrOutput)
}

func (o GetDeploymentsResultOutput) AssignedConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeploymentsResult) *string { return v.AssignedConnectionId }).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
func (o GetDeploymentsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The list of deployment_collection.
func (o GetDeploymentsResultOutput) DeploymentCollections() GetDeploymentsDeploymentCollectionArrayOutput {
	return o.ApplyT(func(v GetDeploymentsResult) []GetDeploymentsDeploymentCollection { return v.DeploymentCollections }).(GetDeploymentsDeploymentCollectionArrayOutput)
}

// An object's Display Name.
func (o GetDeploymentsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeploymentsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetDeploymentsResultOutput) Filters() GetDeploymentsFilterArrayOutput {
	return o.ApplyT(func(v GetDeploymentsResult) []GetDeploymentsFilter { return v.Filters }).(GetDeploymentsFilterArrayOutput)
}

// A three-label Fully Qualified Domain Name (FQDN) for a resource.
func (o GetDeploymentsResultOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeploymentsResult) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDeploymentsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Possible GGS lifecycle sub-states.
func (o GetDeploymentsResultOutput) LifecycleSubState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeploymentsResult) *string { return v.LifecycleSubState }).(pulumi.StringPtrOutput)
}

// Possible lifecycle states.
func (o GetDeploymentsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeploymentsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func (o GetDeploymentsResultOutput) SupportedConnectionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeploymentsResult) *string { return v.SupportedConnectionType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDeploymentsResultOutput{})
}
