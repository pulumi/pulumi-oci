// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package goldengate

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Pipeline resource in Oracle Cloud Infrastructure Golden Gate service.
//
// Retrieves a Pipeline details.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/goldengate"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := goldengate.GetPipeline(ctx, &goldengate.GetPipelineArgs{
//				PipelineId: testPipelineOciGoldenGatePipeline.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupPipeline(ctx *pulumi.Context, args *LookupPipelineArgs, opts ...pulumi.InvokeOption) (*LookupPipelineResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPipelineResult
	err := ctx.Invoke("oci:GoldenGate/getPipeline:getPipeline", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPipeline.
type LookupPipelineArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the pipeline created.
	PipelineId string `pulumi:"pipelineId"`
}

// A collection of values returned by getPipeline.
type LookupPipelineResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
	CompartmentId string `pulumi:"compartmentId"`
	// The Minimum number of OCPUs to be made available for this Deployment.
	CpuCoreCount int `pulumi:"cpuCoreCount"`
	// Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Metadata about this specific object.
	Description string `pulumi:"description"`
	// An object's Display Name.
	DisplayName string `pulumi:"displayName"`
	// A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the pipeline. This option applies when retrieving a pipeline.
	Id string `pulumi:"id"`
	// Indicates if auto scaling is enabled for the Deployment's CPU core count.
	IsAutoScalingEnabled bool `pulumi:"isAutoScalingEnabled"`
	// The Oracle license model that applies to a Deployment.
	LicenseModel string `pulumi:"licenseModel"`
	// Describes the object's current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Possible lifecycle substates when retrieving a pipeline.
	LifecycleSubState string `pulumi:"lifecycleSubState"`
	// Locks associated with this resource.
	Locks []GetPipelineLock `pulumi:"locks"`
	// Mapping for source/target schema/tables for the pipeline data replication.
	MappingRules []GetPipelineMappingRule `pulumi:"mappingRules"`
	// Information regarding the pipeline diagnostic collection
	PipelineDiagnosticDatas []GetPipelinePipelineDiagnosticData `pulumi:"pipelineDiagnosticDatas"`
	PipelineId              string                              `pulumi:"pipelineId"`
	// Required pipeline options to configure the replication process (Extract or Replicat).
	ProcessOptions []GetPipelineProcessOption `pulumi:"processOptions"`
	// The type of the recipe
	RecipeType string `pulumi:"recipeType"`
	// The source connection details for creating a pipeline.
	SourceConnectionDetails []GetPipelineSourceConnectionDetail `pulumi:"sourceConnectionDetails"`
	// Lifecycle state of the pipeline.
	State string `pulumi:"state"`
	// The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The target connection details for creating a pipeline.
	TargetConnectionDetails []GetPipelineTargetConnectionDetail `pulumi:"targetConnectionDetails"`
	// The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
	TimeCreated string `pulumi:"timeCreated"`
	// When the resource was last updated. This option applies when retrieving a pipeline. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2024-07-25T21:10:29.600Z`.
	TimeLastRecorded string `pulumi:"timeLastRecorded"`
	// The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupPipelineOutput(ctx *pulumi.Context, args LookupPipelineOutputArgs, opts ...pulumi.InvokeOption) LookupPipelineResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPipelineResultOutput, error) {
			args := v.(LookupPipelineArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:GoldenGate/getPipeline:getPipeline", args, LookupPipelineResultOutput{}, options).(LookupPipelineResultOutput), nil
		}).(LookupPipelineResultOutput)
}

// A collection of arguments for invoking getPipeline.
type LookupPipelineOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the pipeline created.
	PipelineId pulumi.StringInput `pulumi:"pipelineId"`
}

func (LookupPipelineOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPipelineArgs)(nil)).Elem()
}

// A collection of values returned by getPipeline.
type LookupPipelineResultOutput struct{ *pulumi.OutputState }

func (LookupPipelineResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPipelineResult)(nil)).Elem()
}

func (o LookupPipelineResultOutput) ToLookupPipelineResultOutput() LookupPipelineResultOutput {
	return o
}

func (o LookupPipelineResultOutput) ToLookupPipelineResultOutputWithContext(ctx context.Context) LookupPipelineResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
func (o LookupPipelineResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPipelineResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The Minimum number of OCPUs to be made available for this Deployment.
func (o LookupPipelineResultOutput) CpuCoreCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPipelineResult) int { return v.CpuCoreCount }).(pulumi.IntOutput)
}

// Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupPipelineResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupPipelineResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Metadata about this specific object.
func (o LookupPipelineResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPipelineResult) string { return v.Description }).(pulumi.StringOutput)
}

// An object's Display Name.
func (o LookupPipelineResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPipelineResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
func (o LookupPipelineResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupPipelineResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the pipeline. This option applies when retrieving a pipeline.
func (o LookupPipelineResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPipelineResult) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates if auto scaling is enabled for the Deployment's CPU core count.
func (o LookupPipelineResultOutput) IsAutoScalingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupPipelineResult) bool { return v.IsAutoScalingEnabled }).(pulumi.BoolOutput)
}

// The Oracle license model that applies to a Deployment.
func (o LookupPipelineResultOutput) LicenseModel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPipelineResult) string { return v.LicenseModel }).(pulumi.StringOutput)
}

// Describes the object's current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
func (o LookupPipelineResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPipelineResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Possible lifecycle substates when retrieving a pipeline.
func (o LookupPipelineResultOutput) LifecycleSubState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPipelineResult) string { return v.LifecycleSubState }).(pulumi.StringOutput)
}

// Locks associated with this resource.
func (o LookupPipelineResultOutput) Locks() GetPipelineLockArrayOutput {
	return o.ApplyT(func(v LookupPipelineResult) []GetPipelineLock { return v.Locks }).(GetPipelineLockArrayOutput)
}

// Mapping for source/target schema/tables for the pipeline data replication.
func (o LookupPipelineResultOutput) MappingRules() GetPipelineMappingRuleArrayOutput {
	return o.ApplyT(func(v LookupPipelineResult) []GetPipelineMappingRule { return v.MappingRules }).(GetPipelineMappingRuleArrayOutput)
}

// Information regarding the pipeline diagnostic collection
func (o LookupPipelineResultOutput) PipelineDiagnosticDatas() GetPipelinePipelineDiagnosticDataArrayOutput {
	return o.ApplyT(func(v LookupPipelineResult) []GetPipelinePipelineDiagnosticData { return v.PipelineDiagnosticDatas }).(GetPipelinePipelineDiagnosticDataArrayOutput)
}

func (o LookupPipelineResultOutput) PipelineId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPipelineResult) string { return v.PipelineId }).(pulumi.StringOutput)
}

// Required pipeline options to configure the replication process (Extract or Replicat).
func (o LookupPipelineResultOutput) ProcessOptions() GetPipelineProcessOptionArrayOutput {
	return o.ApplyT(func(v LookupPipelineResult) []GetPipelineProcessOption { return v.ProcessOptions }).(GetPipelineProcessOptionArrayOutput)
}

// The type of the recipe
func (o LookupPipelineResultOutput) RecipeType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPipelineResult) string { return v.RecipeType }).(pulumi.StringOutput)
}

// The source connection details for creating a pipeline.
func (o LookupPipelineResultOutput) SourceConnectionDetails() GetPipelineSourceConnectionDetailArrayOutput {
	return o.ApplyT(func(v LookupPipelineResult) []GetPipelineSourceConnectionDetail { return v.SourceConnectionDetails }).(GetPipelineSourceConnectionDetailArrayOutput)
}

// Lifecycle state of the pipeline.
func (o LookupPipelineResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPipelineResult) string { return v.State }).(pulumi.StringOutput)
}

// The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
func (o LookupPipelineResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupPipelineResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The target connection details for creating a pipeline.
func (o LookupPipelineResultOutput) TargetConnectionDetails() GetPipelineTargetConnectionDetailArrayOutput {
	return o.ApplyT(func(v LookupPipelineResult) []GetPipelineTargetConnectionDetail { return v.TargetConnectionDetails }).(GetPipelineTargetConnectionDetailArrayOutput)
}

// The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
func (o LookupPipelineResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPipelineResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// When the resource was last updated. This option applies when retrieving a pipeline. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2024-07-25T21:10:29.600Z`.
func (o LookupPipelineResultOutput) TimeLastRecorded() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPipelineResult) string { return v.TimeLastRecorded }).(pulumi.StringOutput)
}

// The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
func (o LookupPipelineResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPipelineResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPipelineResultOutput{})
}
