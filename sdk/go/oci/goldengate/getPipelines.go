// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package goldengate

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Pipelines in Oracle Cloud Infrastructure Golden Gate service.
//
// Lists the Pipelines in the compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/goldengate"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := goldengate.GetPipelines(ctx, &goldengate.GetPipelinesArgs{
//				CompartmentId:     compartmentId,
//				DisplayName:       pulumi.StringRef(pipelineDisplayName),
//				LifecycleSubState: pulumi.StringRef(pipelineLifecycleSubState),
//				State:             pulumi.StringRef(pipelineState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetPipelines(ctx *pulumi.Context, args *GetPipelinesArgs, opts ...pulumi.InvokeOption) (*GetPipelinesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPipelinesResult
	err := ctx.Invoke("oci:GoldenGate/getPipelines:getPipelines", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPipelines.
type GetPipelinesArgs struct {
	// The OCID of the compartment that contains the work request. Work requests should be scoped  to the same compartment as the resource the work request affects. If the work request concerns  multiple resources, and those resources are not in the same compartment, it is up to the service team  to pick the primary resource whose compartment should be used.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only the resources that match the entire 'displayName' given.
	DisplayName *string              `pulumi:"displayName"`
	Filters     []GetPipelinesFilter `pulumi:"filters"`
	// A filtered list of pipelines to return for a given lifecycleSubState.
	LifecycleSubState *string `pulumi:"lifecycleSubState"`
	// A filtered list of pipelines to return for a given lifecycleState.
	State *string `pulumi:"state"`
}

// A collection of values returned by getPipelines.
type GetPipelinesResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
	CompartmentId string `pulumi:"compartmentId"`
	// An object's Display Name.
	DisplayName *string              `pulumi:"displayName"`
	Filters     []GetPipelinesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Possible lifecycle substates when retrieving a pipeline.
	LifecycleSubState *string `pulumi:"lifecycleSubState"`
	// The list of pipeline_collection.
	PipelineCollections []GetPipelinesPipelineCollection `pulumi:"pipelineCollections"`
	// Lifecycle state of the pipeline.
	State *string `pulumi:"state"`
}

func GetPipelinesOutput(ctx *pulumi.Context, args GetPipelinesOutputArgs, opts ...pulumi.InvokeOption) GetPipelinesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetPipelinesResultOutput, error) {
			args := v.(GetPipelinesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:GoldenGate/getPipelines:getPipelines", args, GetPipelinesResultOutput{}, options).(GetPipelinesResultOutput), nil
		}).(GetPipelinesResultOutput)
}

// A collection of arguments for invoking getPipelines.
type GetPipelinesOutputArgs struct {
	// The OCID of the compartment that contains the work request. Work requests should be scoped  to the same compartment as the resource the work request affects. If the work request concerns  multiple resources, and those resources are not in the same compartment, it is up to the service team  to pick the primary resource whose compartment should be used.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only the resources that match the entire 'displayName' given.
	DisplayName pulumi.StringPtrInput        `pulumi:"displayName"`
	Filters     GetPipelinesFilterArrayInput `pulumi:"filters"`
	// A filtered list of pipelines to return for a given lifecycleSubState.
	LifecycleSubState pulumi.StringPtrInput `pulumi:"lifecycleSubState"`
	// A filtered list of pipelines to return for a given lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetPipelinesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPipelinesArgs)(nil)).Elem()
}

// A collection of values returned by getPipelines.
type GetPipelinesResultOutput struct{ *pulumi.OutputState }

func (GetPipelinesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPipelinesResult)(nil)).Elem()
}

func (o GetPipelinesResultOutput) ToGetPipelinesResultOutput() GetPipelinesResultOutput {
	return o
}

func (o GetPipelinesResultOutput) ToGetPipelinesResultOutputWithContext(ctx context.Context) GetPipelinesResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
func (o GetPipelinesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelinesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// An object's Display Name.
func (o GetPipelinesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPipelinesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetPipelinesResultOutput) Filters() GetPipelinesFilterArrayOutput {
	return o.ApplyT(func(v GetPipelinesResult) []GetPipelinesFilter { return v.Filters }).(GetPipelinesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPipelinesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelinesResult) string { return v.Id }).(pulumi.StringOutput)
}

// Possible lifecycle substates when retrieving a pipeline.
func (o GetPipelinesResultOutput) LifecycleSubState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPipelinesResult) *string { return v.LifecycleSubState }).(pulumi.StringPtrOutput)
}

// The list of pipeline_collection.
func (o GetPipelinesResultOutput) PipelineCollections() GetPipelinesPipelineCollectionArrayOutput {
	return o.ApplyT(func(v GetPipelinesResult) []GetPipelinesPipelineCollection { return v.PipelineCollections }).(GetPipelinesPipelineCollectionArrayOutput)
}

// Lifecycle state of the pipeline.
func (o GetPipelinesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPipelinesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPipelinesResultOutput{})
}
