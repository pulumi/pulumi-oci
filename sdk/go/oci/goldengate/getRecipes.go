// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package goldengate

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Recipes in Oracle Cloud Infrastructure Golden Gate service.
//
// Returns an array of Recipe Summary.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/goldengate"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := goldengate.GetRecipes(ctx, &goldengate.GetRecipesArgs{
//				CompartmentId: compartmentId,
//				DisplayName:   pulumi.StringRef(recipeDisplayName),
//				RecipeType:    pulumi.StringRef(recipeRecipeType),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetRecipes(ctx *pulumi.Context, args *GetRecipesArgs, opts ...pulumi.InvokeOption) (*GetRecipesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRecipesResult
	err := ctx.Invoke("oci:GoldenGate/getRecipes:getRecipes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRecipes.
type GetRecipesArgs struct {
	// The OCID of the compartment that contains the work request. Work requests should be scoped  to the same compartment as the resource the work request affects. If the work request concerns  multiple resources, and those resources are not in the same compartment, it is up to the service team  to pick the primary resource whose compartment should be used.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only the resources that match the entire 'displayName' given.
	DisplayName *string            `pulumi:"displayName"`
	Filters     []GetRecipesFilter `pulumi:"filters"`
	// The pipeline's recipe type. The default value is ZERO_ETL.
	RecipeType *string `pulumi:"recipeType"`
}

// A collection of values returned by getRecipes.
type GetRecipesResult struct {
	CompartmentId string `pulumi:"compartmentId"`
	// An object's Display Name.
	DisplayName *string            `pulumi:"displayName"`
	Filters     []GetRecipesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of recipe_summary_collection.
	RecipeSummaryCollections []GetRecipesRecipeSummaryCollection `pulumi:"recipeSummaryCollections"`
	// The type of the recipe
	RecipeType *string `pulumi:"recipeType"`
}

func GetRecipesOutput(ctx *pulumi.Context, args GetRecipesOutputArgs, opts ...pulumi.InvokeOption) GetRecipesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetRecipesResultOutput, error) {
			args := v.(GetRecipesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:GoldenGate/getRecipes:getRecipes", args, GetRecipesResultOutput{}, options).(GetRecipesResultOutput), nil
		}).(GetRecipesResultOutput)
}

// A collection of arguments for invoking getRecipes.
type GetRecipesOutputArgs struct {
	// The OCID of the compartment that contains the work request. Work requests should be scoped  to the same compartment as the resource the work request affects. If the work request concerns  multiple resources, and those resources are not in the same compartment, it is up to the service team  to pick the primary resource whose compartment should be used.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only the resources that match the entire 'displayName' given.
	DisplayName pulumi.StringPtrInput      `pulumi:"displayName"`
	Filters     GetRecipesFilterArrayInput `pulumi:"filters"`
	// The pipeline's recipe type. The default value is ZERO_ETL.
	RecipeType pulumi.StringPtrInput `pulumi:"recipeType"`
}

func (GetRecipesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRecipesArgs)(nil)).Elem()
}

// A collection of values returned by getRecipes.
type GetRecipesResultOutput struct{ *pulumi.OutputState }

func (GetRecipesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRecipesResult)(nil)).Elem()
}

func (o GetRecipesResultOutput) ToGetRecipesResultOutput() GetRecipesResultOutput {
	return o
}

func (o GetRecipesResultOutput) ToGetRecipesResultOutputWithContext(ctx context.Context) GetRecipesResultOutput {
	return o
}

func (o GetRecipesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecipesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// An object's Display Name.
func (o GetRecipesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRecipesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetRecipesResultOutput) Filters() GetRecipesFilterArrayOutput {
	return o.ApplyT(func(v GetRecipesResult) []GetRecipesFilter { return v.Filters }).(GetRecipesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRecipesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecipesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of recipe_summary_collection.
func (o GetRecipesResultOutput) RecipeSummaryCollections() GetRecipesRecipeSummaryCollectionArrayOutput {
	return o.ApplyT(func(v GetRecipesResult) []GetRecipesRecipeSummaryCollection { return v.RecipeSummaryCollections }).(GetRecipesRecipeSummaryCollectionArrayOutput)
}

// The type of the recipe
func (o GetRecipesResultOutput) RecipeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRecipesResult) *string { return v.RecipeType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRecipesResultOutput{})
}
