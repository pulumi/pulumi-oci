// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package goldengate

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Trail Sequences in Oracle Cloud Infrastructure Golden Gate service.
//
// Lists the Trail Sequences for a TrailFile in a given deployment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/GoldenGate"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := GoldenGate.GetTrailSequences(ctx, &goldengate.GetTrailSequencesArgs{
//				DeploymentId:    oci_golden_gate_deployment.Test_deployment.Id,
//				TrailFileId:     oci_golden_gate_trail_file.Test_trail_file.Id,
//				DisplayName:     _var.Trail_sequence_display_name,
//				TrailSequenceId: oci_golden_gate_trail_sequence.Test_trail_sequence.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetTrailSequences(ctx *pulumi.Context, args *GetTrailSequencesArgs, opts ...pulumi.InvokeOption) (*GetTrailSequencesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTrailSequencesResult
	err := ctx.Invoke("oci:GoldenGate/getTrailSequences:getTrailSequences", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTrailSequences.
type GetTrailSequencesArgs struct {
	// A unique Deployment identifier.
	DeploymentId string `pulumi:"deploymentId"`
	// A filter to return only the resources that match the entire 'displayName' given.
	DisplayName string                    `pulumi:"displayName"`
	Filters     []GetTrailSequencesFilter `pulumi:"filters"`
	// A Trail File identifier
	TrailFileId string `pulumi:"trailFileId"`
	// A Trail Sequence identifier
	TrailSequenceId string `pulumi:"trailSequenceId"`
}

// A collection of values returned by getTrailSequences.
type GetTrailSequencesResult struct {
	DeploymentId string `pulumi:"deploymentId"`
	// An object's Display Name.
	DisplayName string                    `pulumi:"displayName"`
	Filters     []GetTrailSequencesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id          *string `pulumi:"id"`
	TrailFileId string  `pulumi:"trailFileId"`
	// The list of trail_sequence_collection.
	TrailSequenceCollections []GetTrailSequencesTrailSequenceCollection `pulumi:"trailSequenceCollections"`
	TrailSequenceId          string                                     `pulumi:"trailSequenceId"`
}

func GetTrailSequencesOutput(ctx *pulumi.Context, args GetTrailSequencesOutputArgs, opts ...pulumi.InvokeOption) GetTrailSequencesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTrailSequencesResult, error) {
			args := v.(GetTrailSequencesArgs)
			r, err := GetTrailSequences(ctx, &args, opts...)
			var s GetTrailSequencesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetTrailSequencesResultOutput)
}

// A collection of arguments for invoking getTrailSequences.
type GetTrailSequencesOutputArgs struct {
	// A unique Deployment identifier.
	DeploymentId pulumi.StringInput `pulumi:"deploymentId"`
	// A filter to return only the resources that match the entire 'displayName' given.
	DisplayName pulumi.StringInput                `pulumi:"displayName"`
	Filters     GetTrailSequencesFilterArrayInput `pulumi:"filters"`
	// A Trail File identifier
	TrailFileId pulumi.StringInput `pulumi:"trailFileId"`
	// A Trail Sequence identifier
	TrailSequenceId pulumi.StringInput `pulumi:"trailSequenceId"`
}

func (GetTrailSequencesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrailSequencesArgs)(nil)).Elem()
}

// A collection of values returned by getTrailSequences.
type GetTrailSequencesResultOutput struct{ *pulumi.OutputState }

func (GetTrailSequencesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrailSequencesResult)(nil)).Elem()
}

func (o GetTrailSequencesResultOutput) ToGetTrailSequencesResultOutput() GetTrailSequencesResultOutput {
	return o
}

func (o GetTrailSequencesResultOutput) ToGetTrailSequencesResultOutputWithContext(ctx context.Context) GetTrailSequencesResultOutput {
	return o
}

func (o GetTrailSequencesResultOutput) DeploymentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailSequencesResult) string { return v.DeploymentId }).(pulumi.StringOutput)
}

// An object's Display Name.
func (o GetTrailSequencesResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailSequencesResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

func (o GetTrailSequencesResultOutput) Filters() GetTrailSequencesFilterArrayOutput {
	return o.ApplyT(func(v GetTrailSequencesResult) []GetTrailSequencesFilter { return v.Filters }).(GetTrailSequencesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetTrailSequencesResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTrailSequencesResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetTrailSequencesResultOutput) TrailFileId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailSequencesResult) string { return v.TrailFileId }).(pulumi.StringOutput)
}

// The list of trail_sequence_collection.
func (o GetTrailSequencesResultOutput) TrailSequenceCollections() GetTrailSequencesTrailSequenceCollectionArrayOutput {
	return o.ApplyT(func(v GetTrailSequencesResult) []GetTrailSequencesTrailSequenceCollection {
		return v.TrailSequenceCollections
	}).(GetTrailSequencesTrailSequenceCollectionArrayOutput)
}

func (o GetTrailSequencesResultOutput) TrailSequenceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailSequencesResult) string { return v.TrailSequenceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTrailSequencesResultOutput{})
}
