// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package goldengate

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "oci:GoldenGate/connection:Connection":
		r = &Connection{}
	case "oci:GoldenGate/connectionAssignment:ConnectionAssignment":
		r = &ConnectionAssignment{}
	case "oci:GoldenGate/databaseRegistration:DatabaseRegistration":
		r = &DatabaseRegistration{}
	case "oci:GoldenGate/deployment:Deployment":
		r = &Deployment{}
	case "oci:GoldenGate/deploymentBackup:DeploymentBackup":
		r = &DeploymentBackup{}
	case "oci:GoldenGate/deploymentCertificate:DeploymentCertificate":
		r = &DeploymentCertificate{}
	case "oci:GoldenGate/pipeline:Pipeline":
		r = &Pipeline{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"oci",
		"GoldenGate/connection",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"GoldenGate/connectionAssignment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"GoldenGate/databaseRegistration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"GoldenGate/deployment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"GoldenGate/deploymentBackup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"GoldenGate/deploymentCertificate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"GoldenGate/pipeline",
		&module{version},
	)
}
