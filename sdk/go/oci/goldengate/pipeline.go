// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package goldengate

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Pipeline resource in Oracle Cloud Infrastructure Golden Gate service.
//
// Creates a new Pipeline.
//
// ## Import
//
// Pipelines can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:GoldenGate/pipeline:Pipeline test_pipeline "id"
// ```
type Pipeline struct {
	pulumi.CustomResourceState

	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// The Minimum number of OCPUs to be made available for this Deployment.
	CpuCoreCount pulumi.IntOutput `pulumi:"cpuCoreCount"`
	// (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) Metadata about this specific object.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) An object's Display Name.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// Indicates if auto scaling is enabled for the Deployment's CPU core count.
	IsAutoScalingEnabled pulumi.BoolOutput `pulumi:"isAutoScalingEnabled"`
	// (Updatable) The Oracle license model that applies to a Deployment.
	LicenseModel pulumi.StringOutput `pulumi:"licenseModel"`
	// Describes the object's current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// Possible lifecycle substates when retrieving a pipeline.
	LifecycleSubState pulumi.StringOutput `pulumi:"lifecycleSubState"`
	// Locks associated with this resource.
	Locks PipelineLockArrayOutput `pulumi:"locks"`
	// Mapping for source/target schema/tables for the pipeline data replication.
	MappingRules PipelineMappingRuleArrayOutput `pulumi:"mappingRules"`
	// Information regarding the pipeline diagnostic collection
	PipelineDiagnosticDatas PipelinePipelineDiagnosticDataArrayOutput `pulumi:"pipelineDiagnosticDatas"`
	// (Updatable) Required pipeline options to configure the replication process (Extract or Replicat).
	ProcessOptions PipelineProcessOptionsOutput `pulumi:"processOptions"`
	// (Updatable) The type of the recipe
	RecipeType pulumi.StringOutput `pulumi:"recipeType"`
	// The source connection details for creating a pipeline.
	SourceConnectionDetails PipelineSourceConnectionDetailsOutput `pulumi:"sourceConnectionDetails"`
	// Lifecycle state of the pipeline.
	State pulumi.StringOutput `pulumi:"state"`
	// The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// The target connection details for creating a pipeline.
	TargetConnectionDetails PipelineTargetConnectionDetailsOutput `pulumi:"targetConnectionDetails"`
	// The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// When the resource was last updated. This option applies when retrieving a pipeline. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2024-07-25T21:10:29.600Z`.
	TimeLastRecorded pulumi.StringOutput `pulumi:"timeLastRecorded"`
	// The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewPipeline registers a new resource with the given unique name, arguments, and options.
func NewPipeline(ctx *pulumi.Context,
	name string, args *PipelineArgs, opts ...pulumi.ResourceOption) (*Pipeline, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.LicenseModel == nil {
		return nil, errors.New("invalid value for required argument 'LicenseModel'")
	}
	if args.RecipeType == nil {
		return nil, errors.New("invalid value for required argument 'RecipeType'")
	}
	if args.SourceConnectionDetails == nil {
		return nil, errors.New("invalid value for required argument 'SourceConnectionDetails'")
	}
	if args.TargetConnectionDetails == nil {
		return nil, errors.New("invalid value for required argument 'TargetConnectionDetails'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Pipeline
	err := ctx.RegisterResource("oci:GoldenGate/pipeline:Pipeline", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPipeline gets an existing Pipeline resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPipeline(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PipelineState, opts ...pulumi.ResourceOption) (*Pipeline, error) {
	var resource Pipeline
	err := ctx.ReadResource("oci:GoldenGate/pipeline:Pipeline", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Pipeline resources.
type pipelineState struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
	CompartmentId *string `pulumi:"compartmentId"`
	// The Minimum number of OCPUs to be made available for this Deployment.
	CpuCoreCount *int `pulumi:"cpuCoreCount"`
	// (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) Metadata about this specific object.
	Description *string `pulumi:"description"`
	// (Updatable) An object's Display Name.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Indicates if auto scaling is enabled for the Deployment's CPU core count.
	IsAutoScalingEnabled *bool `pulumi:"isAutoScalingEnabled"`
	// (Updatable) The Oracle license model that applies to a Deployment.
	LicenseModel *string `pulumi:"licenseModel"`
	// Describes the object's current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// Possible lifecycle substates when retrieving a pipeline.
	LifecycleSubState *string `pulumi:"lifecycleSubState"`
	// Locks associated with this resource.
	Locks []PipelineLock `pulumi:"locks"`
	// Mapping for source/target schema/tables for the pipeline data replication.
	MappingRules []PipelineMappingRule `pulumi:"mappingRules"`
	// Information regarding the pipeline diagnostic collection
	PipelineDiagnosticDatas []PipelinePipelineDiagnosticData `pulumi:"pipelineDiagnosticDatas"`
	// (Updatable) Required pipeline options to configure the replication process (Extract or Replicat).
	ProcessOptions *PipelineProcessOptions `pulumi:"processOptions"`
	// (Updatable) The type of the recipe
	RecipeType *string `pulumi:"recipeType"`
	// The source connection details for creating a pipeline.
	SourceConnectionDetails *PipelineSourceConnectionDetails `pulumi:"sourceConnectionDetails"`
	// Lifecycle state of the pipeline.
	State *string `pulumi:"state"`
	// The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The target connection details for creating a pipeline.
	TargetConnectionDetails *PipelineTargetConnectionDetails `pulumi:"targetConnectionDetails"`
	// The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
	TimeCreated *string `pulumi:"timeCreated"`
	// When the resource was last updated. This option applies when retrieving a pipeline. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2024-07-25T21:10:29.600Z`.
	TimeLastRecorded *string `pulumi:"timeLastRecorded"`
	// The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type PipelineState struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
	CompartmentId pulumi.StringPtrInput
	// The Minimum number of OCPUs to be made available for this Deployment.
	CpuCoreCount pulumi.IntPtrInput
	// (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) Metadata about this specific object.
	Description pulumi.StringPtrInput
	// (Updatable) An object's Display Name.
	DisplayName pulumi.StringPtrInput
	// (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// Indicates if auto scaling is enabled for the Deployment's CPU core count.
	IsAutoScalingEnabled pulumi.BoolPtrInput
	// (Updatable) The Oracle license model that applies to a Deployment.
	LicenseModel pulumi.StringPtrInput
	// Describes the object's current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
	LifecycleDetails pulumi.StringPtrInput
	// Possible lifecycle substates when retrieving a pipeline.
	LifecycleSubState pulumi.StringPtrInput
	// Locks associated with this resource.
	Locks PipelineLockArrayInput
	// Mapping for source/target schema/tables for the pipeline data replication.
	MappingRules PipelineMappingRuleArrayInput
	// Information regarding the pipeline diagnostic collection
	PipelineDiagnosticDatas PipelinePipelineDiagnosticDataArrayInput
	// (Updatable) Required pipeline options to configure the replication process (Extract or Replicat).
	ProcessOptions PipelineProcessOptionsPtrInput
	// (Updatable) The type of the recipe
	RecipeType pulumi.StringPtrInput
	// The source connection details for creating a pipeline.
	SourceConnectionDetails PipelineSourceConnectionDetailsPtrInput
	// Lifecycle state of the pipeline.
	State pulumi.StringPtrInput
	// The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
	SystemTags pulumi.StringMapInput
	// The target connection details for creating a pipeline.
	TargetConnectionDetails PipelineTargetConnectionDetailsPtrInput
	// The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
	TimeCreated pulumi.StringPtrInput
	// When the resource was last updated. This option applies when retrieving a pipeline. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2024-07-25T21:10:29.600Z`.
	TimeLastRecorded pulumi.StringPtrInput
	// The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
	TimeUpdated pulumi.StringPtrInput
}

func (PipelineState) ElementType() reflect.Type {
	return reflect.TypeOf((*pipelineState)(nil)).Elem()
}

type pipelineArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) Metadata about this specific object.
	Description *string `pulumi:"description"`
	// (Updatable) An object's Display Name.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// (Updatable) The Oracle license model that applies to a Deployment.
	LicenseModel string `pulumi:"licenseModel"`
	// Locks associated with this resource.
	Locks []PipelineLock `pulumi:"locks"`
	// (Updatable) Required pipeline options to configure the replication process (Extract or Replicat).
	ProcessOptions *PipelineProcessOptions `pulumi:"processOptions"`
	// (Updatable) The type of the recipe
	RecipeType string `pulumi:"recipeType"`
	// The source connection details for creating a pipeline.
	SourceConnectionDetails PipelineSourceConnectionDetails `pulumi:"sourceConnectionDetails"`
	// The target connection details for creating a pipeline.
	TargetConnectionDetails PipelineTargetConnectionDetails `pulumi:"targetConnectionDetails"`
}

// The set of arguments for constructing a Pipeline resource.
type PipelineArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
	CompartmentId pulumi.StringInput
	// (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) Metadata about this specific object.
	Description pulumi.StringPtrInput
	// (Updatable) An object's Display Name.
	DisplayName pulumi.StringInput
	// (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// (Updatable) The Oracle license model that applies to a Deployment.
	LicenseModel pulumi.StringInput
	// Locks associated with this resource.
	Locks PipelineLockArrayInput
	// (Updatable) Required pipeline options to configure the replication process (Extract or Replicat).
	ProcessOptions PipelineProcessOptionsPtrInput
	// (Updatable) The type of the recipe
	RecipeType pulumi.StringInput
	// The source connection details for creating a pipeline.
	SourceConnectionDetails PipelineSourceConnectionDetailsInput
	// The target connection details for creating a pipeline.
	TargetConnectionDetails PipelineTargetConnectionDetailsInput
}

func (PipelineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*pipelineArgs)(nil)).Elem()
}

type PipelineInput interface {
	pulumi.Input

	ToPipelineOutput() PipelineOutput
	ToPipelineOutputWithContext(ctx context.Context) PipelineOutput
}

func (*Pipeline) ElementType() reflect.Type {
	return reflect.TypeOf((**Pipeline)(nil)).Elem()
}

func (i *Pipeline) ToPipelineOutput() PipelineOutput {
	return i.ToPipelineOutputWithContext(context.Background())
}

func (i *Pipeline) ToPipelineOutputWithContext(ctx context.Context) PipelineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineOutput)
}

// PipelineArrayInput is an input type that accepts PipelineArray and PipelineArrayOutput values.
// You can construct a concrete instance of `PipelineArrayInput` via:
//
//	PipelineArray{ PipelineArgs{...} }
type PipelineArrayInput interface {
	pulumi.Input

	ToPipelineArrayOutput() PipelineArrayOutput
	ToPipelineArrayOutputWithContext(context.Context) PipelineArrayOutput
}

type PipelineArray []PipelineInput

func (PipelineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Pipeline)(nil)).Elem()
}

func (i PipelineArray) ToPipelineArrayOutput() PipelineArrayOutput {
	return i.ToPipelineArrayOutputWithContext(context.Background())
}

func (i PipelineArray) ToPipelineArrayOutputWithContext(ctx context.Context) PipelineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineArrayOutput)
}

// PipelineMapInput is an input type that accepts PipelineMap and PipelineMapOutput values.
// You can construct a concrete instance of `PipelineMapInput` via:
//
//	PipelineMap{ "key": PipelineArgs{...} }
type PipelineMapInput interface {
	pulumi.Input

	ToPipelineMapOutput() PipelineMapOutput
	ToPipelineMapOutputWithContext(context.Context) PipelineMapOutput
}

type PipelineMap map[string]PipelineInput

func (PipelineMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Pipeline)(nil)).Elem()
}

func (i PipelineMap) ToPipelineMapOutput() PipelineMapOutput {
	return i.ToPipelineMapOutputWithContext(context.Background())
}

func (i PipelineMap) ToPipelineMapOutputWithContext(ctx context.Context) PipelineMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineMapOutput)
}

type PipelineOutput struct{ *pulumi.OutputState }

func (PipelineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Pipeline)(nil)).Elem()
}

func (o PipelineOutput) ToPipelineOutput() PipelineOutput {
	return o
}

func (o PipelineOutput) ToPipelineOutputWithContext(ctx context.Context) PipelineOutput {
	return o
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
func (o PipelineOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Pipeline) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// The Minimum number of OCPUs to be made available for this Deployment.
func (o PipelineOutput) CpuCoreCount() pulumi.IntOutput {
	return o.ApplyT(func(v *Pipeline) pulumi.IntOutput { return v.CpuCoreCount }).(pulumi.IntOutput)
}

// (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{"foo-namespace.bar-key": "value"}`
func (o PipelineOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Pipeline) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) Metadata about this specific object.
func (o PipelineOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Pipeline) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) An object's Display Name.
func (o PipelineOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Pipeline) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
func (o PipelineOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Pipeline) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Indicates if auto scaling is enabled for the Deployment's CPU core count.
func (o PipelineOutput) IsAutoScalingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *Pipeline) pulumi.BoolOutput { return v.IsAutoScalingEnabled }).(pulumi.BoolOutput)
}

// (Updatable) The Oracle license model that applies to a Deployment.
func (o PipelineOutput) LicenseModel() pulumi.StringOutput {
	return o.ApplyT(func(v *Pipeline) pulumi.StringOutput { return v.LicenseModel }).(pulumi.StringOutput)
}

// Describes the object's current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
func (o PipelineOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *Pipeline) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Possible lifecycle substates when retrieving a pipeline.
func (o PipelineOutput) LifecycleSubState() pulumi.StringOutput {
	return o.ApplyT(func(v *Pipeline) pulumi.StringOutput { return v.LifecycleSubState }).(pulumi.StringOutput)
}

// Locks associated with this resource.
func (o PipelineOutput) Locks() PipelineLockArrayOutput {
	return o.ApplyT(func(v *Pipeline) PipelineLockArrayOutput { return v.Locks }).(PipelineLockArrayOutput)
}

// Mapping for source/target schema/tables for the pipeline data replication.
func (o PipelineOutput) MappingRules() PipelineMappingRuleArrayOutput {
	return o.ApplyT(func(v *Pipeline) PipelineMappingRuleArrayOutput { return v.MappingRules }).(PipelineMappingRuleArrayOutput)
}

// Information regarding the pipeline diagnostic collection
func (o PipelineOutput) PipelineDiagnosticDatas() PipelinePipelineDiagnosticDataArrayOutput {
	return o.ApplyT(func(v *Pipeline) PipelinePipelineDiagnosticDataArrayOutput { return v.PipelineDiagnosticDatas }).(PipelinePipelineDiagnosticDataArrayOutput)
}

// (Updatable) Required pipeline options to configure the replication process (Extract or Replicat).
func (o PipelineOutput) ProcessOptions() PipelineProcessOptionsOutput {
	return o.ApplyT(func(v *Pipeline) PipelineProcessOptionsOutput { return v.ProcessOptions }).(PipelineProcessOptionsOutput)
}

// (Updatable) The type of the recipe
func (o PipelineOutput) RecipeType() pulumi.StringOutput {
	return o.ApplyT(func(v *Pipeline) pulumi.StringOutput { return v.RecipeType }).(pulumi.StringOutput)
}

// The source connection details for creating a pipeline.
func (o PipelineOutput) SourceConnectionDetails() PipelineSourceConnectionDetailsOutput {
	return o.ApplyT(func(v *Pipeline) PipelineSourceConnectionDetailsOutput { return v.SourceConnectionDetails }).(PipelineSourceConnectionDetailsOutput)
}

// Lifecycle state of the pipeline.
func (o PipelineOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Pipeline) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
func (o PipelineOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Pipeline) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The target connection details for creating a pipeline.
func (o PipelineOutput) TargetConnectionDetails() PipelineTargetConnectionDetailsOutput {
	return o.ApplyT(func(v *Pipeline) PipelineTargetConnectionDetailsOutput { return v.TargetConnectionDetails }).(PipelineTargetConnectionDetailsOutput)
}

// The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
func (o PipelineOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *Pipeline) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// When the resource was last updated. This option applies when retrieving a pipeline. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2024-07-25T21:10:29.600Z`.
func (o PipelineOutput) TimeLastRecorded() pulumi.StringOutput {
	return o.ApplyT(func(v *Pipeline) pulumi.StringOutput { return v.TimeLastRecorded }).(pulumi.StringOutput)
}

// The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
func (o PipelineOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *Pipeline) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type PipelineArrayOutput struct{ *pulumi.OutputState }

func (PipelineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Pipeline)(nil)).Elem()
}

func (o PipelineArrayOutput) ToPipelineArrayOutput() PipelineArrayOutput {
	return o
}

func (o PipelineArrayOutput) ToPipelineArrayOutputWithContext(ctx context.Context) PipelineArrayOutput {
	return o
}

func (o PipelineArrayOutput) Index(i pulumi.IntInput) PipelineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Pipeline {
		return vs[0].([]*Pipeline)[vs[1].(int)]
	}).(PipelineOutput)
}

type PipelineMapOutput struct{ *pulumi.OutputState }

func (PipelineMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Pipeline)(nil)).Elem()
}

func (o PipelineMapOutput) ToPipelineMapOutput() PipelineMapOutput {
	return o
}

func (o PipelineMapOutput) ToPipelineMapOutputWithContext(ctx context.Context) PipelineMapOutput {
	return o
}

func (o PipelineMapOutput) MapIndex(k pulumi.StringInput) PipelineOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Pipeline {
		return vs[0].(map[string]*Pipeline)[vs[1].(string)]
	}).(PipelineOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineInput)(nil)).Elem(), &Pipeline{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineArrayInput)(nil)).Elem(), PipelineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineMapInput)(nil)).Elem(), PipelineMap{})
	pulumi.RegisterOutputType(PipelineOutput{})
	pulumi.RegisterOutputType(PipelineArrayOutput{})
	pulumi.RegisterOutputType(PipelineMapOutput{})
}
