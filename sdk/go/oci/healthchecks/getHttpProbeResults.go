// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package healthchecks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Http Probe Results in Oracle Cloud Infrastructure Health Checks service.
//
// Gets the HTTP probe results for the specified probe or monitor, where
// the `probeConfigurationId` is the OCID of either a monitor or an
// on-demand probe.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/HealthChecks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := HealthChecks.GetHttpProbeResults(ctx, &healthchecks.GetHttpProbeResultsArgs{
//				ProbeConfigurationId:          oci_health_checks_probe_configuration.Test_probe_configuration.Id,
//				StartTimeGreaterThanOrEqualTo: pulumi.Float64Ref(_var.Http_probe_result_start_time_greater_than_or_equal_to),
//				StartTimeLessThanOrEqualTo:    pulumi.Float64Ref(_var.Http_probe_result_start_time_less_than_or_equal_to),
//				Target:                        pulumi.StringRef(_var.Http_probe_result_target),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetHttpProbeResults(ctx *pulumi.Context, args *GetHttpProbeResultsArgs, opts ...pulumi.InvokeOption) (*GetHttpProbeResultsResult, error) {
	var rv GetHttpProbeResultsResult
	err := ctx.Invoke("oci:HealthChecks/getHttpProbeResults:getHttpProbeResults", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getHttpProbeResults.
type GetHttpProbeResultsArgs struct {
	Filters []GetHttpProbeResultsFilter `pulumi:"filters"`
	// The OCID of a monitor or on-demand probe.
	ProbeConfigurationId string `pulumi:"probeConfigurationId"`
	// Returns results with a `startTime` equal to or greater than the specified value.
	StartTimeGreaterThanOrEqualTo *float64 `pulumi:"startTimeGreaterThanOrEqualTo"`
	// Returns results with a `startTime` equal to or less than the specified value.
	StartTimeLessThanOrEqualTo *float64 `pulumi:"startTimeLessThanOrEqualTo"`
	// Filters results that match the `target`.
	Target *string `pulumi:"target"`
}

// A collection of values returned by getHttpProbeResults.
type GetHttpProbeResultsResult struct {
	Filters []GetHttpProbeResultsFilter `pulumi:"filters"`
	// The list of http_probe_results.
	HttpProbeResults []GetHttpProbeResultsHttpProbeResult `pulumi:"httpProbeResults"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The OCID of the monitor or on-demand probe responsible for creating this result.
	ProbeConfigurationId          string   `pulumi:"probeConfigurationId"`
	StartTimeGreaterThanOrEqualTo *float64 `pulumi:"startTimeGreaterThanOrEqualTo"`
	StartTimeLessThanOrEqualTo    *float64 `pulumi:"startTimeLessThanOrEqualTo"`
	// The target hostname or IP address of the probe.
	Target *string `pulumi:"target"`
}

func GetHttpProbeResultsOutput(ctx *pulumi.Context, args GetHttpProbeResultsOutputArgs, opts ...pulumi.InvokeOption) GetHttpProbeResultsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetHttpProbeResultsResult, error) {
			args := v.(GetHttpProbeResultsArgs)
			r, err := GetHttpProbeResults(ctx, &args, opts...)
			var s GetHttpProbeResultsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetHttpProbeResultsResultOutput)
}

// A collection of arguments for invoking getHttpProbeResults.
type GetHttpProbeResultsOutputArgs struct {
	Filters GetHttpProbeResultsFilterArrayInput `pulumi:"filters"`
	// The OCID of a monitor or on-demand probe.
	ProbeConfigurationId pulumi.StringInput `pulumi:"probeConfigurationId"`
	// Returns results with a `startTime` equal to or greater than the specified value.
	StartTimeGreaterThanOrEqualTo pulumi.Float64PtrInput `pulumi:"startTimeGreaterThanOrEqualTo"`
	// Returns results with a `startTime` equal to or less than the specified value.
	StartTimeLessThanOrEqualTo pulumi.Float64PtrInput `pulumi:"startTimeLessThanOrEqualTo"`
	// Filters results that match the `target`.
	Target pulumi.StringPtrInput `pulumi:"target"`
}

func (GetHttpProbeResultsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHttpProbeResultsArgs)(nil)).Elem()
}

// A collection of values returned by getHttpProbeResults.
type GetHttpProbeResultsResultOutput struct{ *pulumi.OutputState }

func (GetHttpProbeResultsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHttpProbeResultsResult)(nil)).Elem()
}

func (o GetHttpProbeResultsResultOutput) ToGetHttpProbeResultsResultOutput() GetHttpProbeResultsResultOutput {
	return o
}

func (o GetHttpProbeResultsResultOutput) ToGetHttpProbeResultsResultOutputWithContext(ctx context.Context) GetHttpProbeResultsResultOutput {
	return o
}

func (o GetHttpProbeResultsResultOutput) Filters() GetHttpProbeResultsFilterArrayOutput {
	return o.ApplyT(func(v GetHttpProbeResultsResult) []GetHttpProbeResultsFilter { return v.Filters }).(GetHttpProbeResultsFilterArrayOutput)
}

// The list of http_probe_results.
func (o GetHttpProbeResultsResultOutput) HttpProbeResults() GetHttpProbeResultsHttpProbeResultArrayOutput {
	return o.ApplyT(func(v GetHttpProbeResultsResult) []GetHttpProbeResultsHttpProbeResult { return v.HttpProbeResults }).(GetHttpProbeResultsHttpProbeResultArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetHttpProbeResultsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHttpProbeResultsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The OCID of the monitor or on-demand probe responsible for creating this result.
func (o GetHttpProbeResultsResultOutput) ProbeConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHttpProbeResultsResult) string { return v.ProbeConfigurationId }).(pulumi.StringOutput)
}

func (o GetHttpProbeResultsResultOutput) StartTimeGreaterThanOrEqualTo() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GetHttpProbeResultsResult) *float64 { return v.StartTimeGreaterThanOrEqualTo }).(pulumi.Float64PtrOutput)
}

func (o GetHttpProbeResultsResultOutput) StartTimeLessThanOrEqualTo() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GetHttpProbeResultsResult) *float64 { return v.StartTimeLessThanOrEqualTo }).(pulumi.Float64PtrOutput)
}

// The target hostname or IP address of the probe.
func (o GetHttpProbeResultsResultOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHttpProbeResultsResult) *string { return v.Target }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetHttpProbeResultsResultOutput{})
}
