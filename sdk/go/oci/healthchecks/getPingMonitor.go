// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package healthchecks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Ping Monitor resource in Oracle Cloud Infrastructure Health Checks service.
//
// Gets the configuration for the specified ping monitor.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/HealthChecks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := HealthChecks.GetPingMonitor(ctx, &healthchecks.GetPingMonitorArgs{
//				MonitorId: testMonitor.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupPingMonitor(ctx *pulumi.Context, args *LookupPingMonitorArgs, opts ...pulumi.InvokeOption) (*LookupPingMonitorResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPingMonitorResult
	err := ctx.Invoke("oci:HealthChecks/getPingMonitor:getPingMonitor", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPingMonitor.
type LookupPingMonitorArgs struct {
	// The OCID of a monitor.
	MonitorId string `pulumi:"monitorId"`
}

// A collection of values returned by getPingMonitor.
type LookupPingMonitorResult struct {
	// The OCID of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A user-friendly and mutable name suitable for display in a user interface.
	DisplayName string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The region where updates must be made and where results must be fetched from.
	HomeRegion string `pulumi:"homeRegion"`
	// The OCID of the resource.
	Id string `pulumi:"id"`
	// The monitor interval in seconds. Valid values: 10, 30, and 60.
	IntervalInSeconds int `pulumi:"intervalInSeconds"`
	// Enables or disables the monitor. Set to 'true' to launch monitoring.
	IsEnabled bool   `pulumi:"isEnabled"`
	MonitorId string `pulumi:"monitorId"`
	// The port on which to probe endpoints. If unspecified, probes will use the default port of their protocol.
	Port int `pulumi:"port"`
	// The protocols for ping probes.
	Protocol string `pulumi:"protocol"`
	// A URL for fetching the probe results.
	ResultsUrl string `pulumi:"resultsUrl"`
	// A list of targets (hostnames or IP addresses) of the probe.
	Targets []string `pulumi:"targets"`
	// The RFC 3339-formatted creation date and time of the probe.
	TimeCreated string `pulumi:"timeCreated"`
	// The probe timeout in seconds. Valid values: 10, 20, 30, and 60. The probe timeout must be less than or equal to `intervalInSeconds` for monitors.
	TimeoutInSeconds int `pulumi:"timeoutInSeconds"`
	// A list of names of vantage points from which to execute the probe.
	VantagePointNames []string `pulumi:"vantagePointNames"`
}

func LookupPingMonitorOutput(ctx *pulumi.Context, args LookupPingMonitorOutputArgs, opts ...pulumi.InvokeOption) LookupPingMonitorResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPingMonitorResult, error) {
			args := v.(LookupPingMonitorArgs)
			r, err := LookupPingMonitor(ctx, &args, opts...)
			var s LookupPingMonitorResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPingMonitorResultOutput)
}

// A collection of arguments for invoking getPingMonitor.
type LookupPingMonitorOutputArgs struct {
	// The OCID of a monitor.
	MonitorId pulumi.StringInput `pulumi:"monitorId"`
}

func (LookupPingMonitorOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPingMonitorArgs)(nil)).Elem()
}

// A collection of values returned by getPingMonitor.
type LookupPingMonitorResultOutput struct{ *pulumi.OutputState }

func (LookupPingMonitorResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPingMonitorResult)(nil)).Elem()
}

func (o LookupPingMonitorResultOutput) ToLookupPingMonitorResultOutput() LookupPingMonitorResultOutput {
	return o
}

func (o LookupPingMonitorResultOutput) ToLookupPingMonitorResultOutputWithContext(ctx context.Context) LookupPingMonitorResultOutput {
	return o
}

// The OCID of the compartment.
func (o LookupPingMonitorResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPingMonitorResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o LookupPingMonitorResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupPingMonitorResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// A user-friendly and mutable name suitable for display in a user interface.
func (o LookupPingMonitorResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPingMonitorResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o LookupPingMonitorResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupPingMonitorResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The region where updates must be made and where results must be fetched from.
func (o LookupPingMonitorResultOutput) HomeRegion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPingMonitorResult) string { return v.HomeRegion }).(pulumi.StringOutput)
}

// The OCID of the resource.
func (o LookupPingMonitorResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPingMonitorResult) string { return v.Id }).(pulumi.StringOutput)
}

// The monitor interval in seconds. Valid values: 10, 30, and 60.
func (o LookupPingMonitorResultOutput) IntervalInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPingMonitorResult) int { return v.IntervalInSeconds }).(pulumi.IntOutput)
}

// Enables or disables the monitor. Set to 'true' to launch monitoring.
func (o LookupPingMonitorResultOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupPingMonitorResult) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

func (o LookupPingMonitorResultOutput) MonitorId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPingMonitorResult) string { return v.MonitorId }).(pulumi.StringOutput)
}

// The port on which to probe endpoints. If unspecified, probes will use the default port of their protocol.
func (o LookupPingMonitorResultOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPingMonitorResult) int { return v.Port }).(pulumi.IntOutput)
}

// The protocols for ping probes.
func (o LookupPingMonitorResultOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPingMonitorResult) string { return v.Protocol }).(pulumi.StringOutput)
}

// A URL for fetching the probe results.
func (o LookupPingMonitorResultOutput) ResultsUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPingMonitorResult) string { return v.ResultsUrl }).(pulumi.StringOutput)
}

// A list of targets (hostnames or IP addresses) of the probe.
func (o LookupPingMonitorResultOutput) Targets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupPingMonitorResult) []string { return v.Targets }).(pulumi.StringArrayOutput)
}

// The RFC 3339-formatted creation date and time of the probe.
func (o LookupPingMonitorResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPingMonitorResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The probe timeout in seconds. Valid values: 10, 20, 30, and 60. The probe timeout must be less than or equal to `intervalInSeconds` for monitors.
func (o LookupPingMonitorResultOutput) TimeoutInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPingMonitorResult) int { return v.TimeoutInSeconds }).(pulumi.IntOutput)
}

// A list of names of vantage points from which to execute the probe.
func (o LookupPingMonitorResultOutput) VantagePointNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupPingMonitorResult) []string { return v.VantagePointNames }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPingMonitorResultOutput{})
}
