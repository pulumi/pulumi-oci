// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package healthchecks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Ping Monitors in Oracle Cloud Infrastructure Health Checks service.
//
// Gets a list of configured ping monitors.
//
// Results are paginated based on `page` and `limit`.  The `opc-next-page` header provides
// a URL for fetching the next page.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/HealthChecks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := HealthChecks.GetPingMonitors(ctx, &healthchecks.GetPingMonitorsArgs{
//				CompartmentId: _var.Compartment_id,
//				DisplayName:   pulumi.StringRef(_var.Ping_monitor_display_name),
//				HomeRegion:    pulumi.StringRef(_var.Ping_monitor_home_region),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetPingMonitors(ctx *pulumi.Context, args *GetPingMonitorsArgs, opts ...pulumi.InvokeOption) (*GetPingMonitorsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPingMonitorsResult
	err := ctx.Invoke("oci:HealthChecks/getPingMonitors:getPingMonitors", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPingMonitors.
type GetPingMonitorsArgs struct {
	// Filters results by compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Filters results that exactly match the `displayName` field.
	DisplayName *string                 `pulumi:"displayName"`
	Filters     []GetPingMonitorsFilter `pulumi:"filters"`
	// Filters results that match the `homeRegion`.
	HomeRegion *string `pulumi:"homeRegion"`
}

// A collection of values returned by getPingMonitors.
type GetPingMonitorsResult struct {
	// The OCID of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// A user-friendly and mutable name suitable for display in a user interface.
	DisplayName *string                 `pulumi:"displayName"`
	Filters     []GetPingMonitorsFilter `pulumi:"filters"`
	// The region where updates must be made and where results must be fetched from.
	HomeRegion *string `pulumi:"homeRegion"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of ping_monitors.
	PingMonitors []GetPingMonitorsPingMonitor `pulumi:"pingMonitors"`
}

func GetPingMonitorsOutput(ctx *pulumi.Context, args GetPingMonitorsOutputArgs, opts ...pulumi.InvokeOption) GetPingMonitorsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPingMonitorsResult, error) {
			args := v.(GetPingMonitorsArgs)
			r, err := GetPingMonitors(ctx, &args, opts...)
			var s GetPingMonitorsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPingMonitorsResultOutput)
}

// A collection of arguments for invoking getPingMonitors.
type GetPingMonitorsOutputArgs struct {
	// Filters results by compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Filters results that exactly match the `displayName` field.
	DisplayName pulumi.StringPtrInput           `pulumi:"displayName"`
	Filters     GetPingMonitorsFilterArrayInput `pulumi:"filters"`
	// Filters results that match the `homeRegion`.
	HomeRegion pulumi.StringPtrInput `pulumi:"homeRegion"`
}

func (GetPingMonitorsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPingMonitorsArgs)(nil)).Elem()
}

// A collection of values returned by getPingMonitors.
type GetPingMonitorsResultOutput struct{ *pulumi.OutputState }

func (GetPingMonitorsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPingMonitorsResult)(nil)).Elem()
}

func (o GetPingMonitorsResultOutput) ToGetPingMonitorsResultOutput() GetPingMonitorsResultOutput {
	return o
}

func (o GetPingMonitorsResultOutput) ToGetPingMonitorsResultOutputWithContext(ctx context.Context) GetPingMonitorsResultOutput {
	return o
}

// The OCID of the compartment.
func (o GetPingMonitorsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPingMonitorsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A user-friendly and mutable name suitable for display in a user interface.
func (o GetPingMonitorsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPingMonitorsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetPingMonitorsResultOutput) Filters() GetPingMonitorsFilterArrayOutput {
	return o.ApplyT(func(v GetPingMonitorsResult) []GetPingMonitorsFilter { return v.Filters }).(GetPingMonitorsFilterArrayOutput)
}

// The region where updates must be made and where results must be fetched from.
func (o GetPingMonitorsResultOutput) HomeRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPingMonitorsResult) *string { return v.HomeRegion }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPingMonitorsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPingMonitorsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of ping_monitors.
func (o GetPingMonitorsResultOutput) PingMonitors() GetPingMonitorsPingMonitorArrayOutput {
	return o.ApplyT(func(v GetPingMonitorsResult) []GetPingMonitorsPingMonitor { return v.PingMonitors }).(GetPingMonitorsPingMonitorArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPingMonitorsResultOutput{})
}
