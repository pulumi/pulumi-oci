// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package healthchecks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Vantage Points in Oracle Cloud Infrastructure Health Checks service.
//
// Gets information about all vantage points available to the user.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/HealthChecks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := HealthChecks.GetVantagePoints(ctx, &healthchecks.GetVantagePointsArgs{
//				DisplayName: pulumi.StringRef(_var.Vantage_point_display_name),
//				Name:        pulumi.StringRef(_var.Vantage_point_name),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetVantagePoints(ctx *pulumi.Context, args *GetVantagePointsArgs, opts ...pulumi.InvokeOption) (*GetVantagePointsResult, error) {
	var rv GetVantagePointsResult
	err := ctx.Invoke("oci:HealthChecks/getVantagePoints:getVantagePoints", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVantagePoints.
type GetVantagePointsArgs struct {
	// Filters results that exactly match the `displayName` field.
	DisplayName *string                  `pulumi:"displayName"`
	Filters     []GetVantagePointsFilter `pulumi:"filters"`
	// Filters results that exactly match the `name` field.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getVantagePoints.
type GetVantagePointsResult struct {
	// The display name for the vantage point. Display names are determined by the best information available and may change over time.
	DisplayName *string                  `pulumi:"displayName"`
	Filters     []GetVantagePointsFilter `pulumi:"filters"`
	// The list of health_checks_vantage_points.
	HealthChecksVantagePoints []GetVantagePointsHealthChecksVantagePoint `pulumi:"healthChecksVantagePoints"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The unique, permanent name for the vantage point.
	Name *string `pulumi:"name"`
}

func GetVantagePointsOutput(ctx *pulumi.Context, args GetVantagePointsOutputArgs, opts ...pulumi.InvokeOption) GetVantagePointsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetVantagePointsResult, error) {
			args := v.(GetVantagePointsArgs)
			r, err := GetVantagePoints(ctx, &args, opts...)
			var s GetVantagePointsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetVantagePointsResultOutput)
}

// A collection of arguments for invoking getVantagePoints.
type GetVantagePointsOutputArgs struct {
	// Filters results that exactly match the `displayName` field.
	DisplayName pulumi.StringPtrInput            `pulumi:"displayName"`
	Filters     GetVantagePointsFilterArrayInput `pulumi:"filters"`
	// Filters results that exactly match the `name` field.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GetVantagePointsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVantagePointsArgs)(nil)).Elem()
}

// A collection of values returned by getVantagePoints.
type GetVantagePointsResultOutput struct{ *pulumi.OutputState }

func (GetVantagePointsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVantagePointsResult)(nil)).Elem()
}

func (o GetVantagePointsResultOutput) ToGetVantagePointsResultOutput() GetVantagePointsResultOutput {
	return o
}

func (o GetVantagePointsResultOutput) ToGetVantagePointsResultOutputWithContext(ctx context.Context) GetVantagePointsResultOutput {
	return o
}

// The display name for the vantage point. Display names are determined by the best information available and may change over time.
func (o GetVantagePointsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVantagePointsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetVantagePointsResultOutput) Filters() GetVantagePointsFilterArrayOutput {
	return o.ApplyT(func(v GetVantagePointsResult) []GetVantagePointsFilter { return v.Filters }).(GetVantagePointsFilterArrayOutput)
}

// The list of health_checks_vantage_points.
func (o GetVantagePointsResultOutput) HealthChecksVantagePoints() GetVantagePointsHealthChecksVantagePointArrayOutput {
	return o.ApplyT(func(v GetVantagePointsResult) []GetVantagePointsHealthChecksVantagePoint {
		return v.HealthChecksVantagePoints
	}).(GetVantagePointsHealthChecksVantagePointArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetVantagePointsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVantagePointsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The unique, permanent name for the vantage point.
func (o GetVantagePointsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVantagePointsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVantagePointsResultOutput{})
}
