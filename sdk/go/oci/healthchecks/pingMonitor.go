// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package healthchecks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Ping Monitor resource in Oracle Cloud Infrastructure Health Checks service.
//
// Creates a ping monitor. Vantage points will be automatically selected if not specified,
// and probes will be initiated from each vantage point to each of the targets at the frequency
// specified by `intervalInSeconds`.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/HealthChecks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := HealthChecks.NewPingMonitor(ctx, "testPingMonitor", &HealthChecks.PingMonitorArgs{
//				CompartmentId:     pulumi.Any(_var.Compartment_id),
//				DisplayName:       pulumi.Any(_var.Ping_monitor_display_name),
//				IntervalInSeconds: pulumi.Any(_var.Ping_monitor_interval_in_seconds),
//				Protocol:          pulumi.Any(_var.Ping_monitor_protocol),
//				Targets:           pulumi.Any(_var.Ping_monitor_targets),
//				DefinedTags: pulumi.Map{
//					"Operations.CostCenter": pulumi.Any("42"),
//				},
//				FreeformTags: pulumi.Map{
//					"Department": pulumi.Any("Finance"),
//				},
//				IsEnabled:         pulumi.Any(_var.Ping_monitor_is_enabled),
//				Port:              pulumi.Any(_var.Ping_monitor_port),
//				TimeoutInSeconds:  pulumi.Any(_var.Ping_monitor_timeout_in_seconds),
//				VantagePointNames: pulumi.Any(_var.Ping_monitor_vantage_point_names),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// PingMonitors can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:HealthChecks/pingMonitor:PingMonitor test_ping_monitor "id"
// ```
type PingMonitor struct {
	pulumi.CustomResourceState

	// (Updatable) The OCID of the compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A user-friendly and mutable name suitable for display in a user interface.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The region where updates must be made and where results must be fetched from.
	HomeRegion pulumi.StringOutput `pulumi:"homeRegion"`
	// (Updatable) The monitor interval in seconds. Valid values: 10, 30, and 60.
	IntervalInSeconds pulumi.IntOutput `pulumi:"intervalInSeconds"`
	// (Updatable) Enables or disables the monitor. Set to 'true' to launch monitoring.
	IsEnabled pulumi.BoolOutput `pulumi:"isEnabled"`
	// (Updatable) The port on which to probe endpoints. If unspecified, probes will use the default port of their protocol.
	Port pulumi.IntOutput `pulumi:"port"`
	// (Updatable) The protocols for ping probes.
	Protocol pulumi.StringOutput `pulumi:"protocol"`
	// A URL for fetching the probe results.
	ResultsUrl pulumi.StringOutput `pulumi:"resultsUrl"`
	// (Updatable) A list of targets (hostnames or IP addresses) of the probe.
	Targets pulumi.StringArrayOutput `pulumi:"targets"`
	// The RFC 3339-formatted creation date and time of the probe.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// (Updatable) The probe timeout in seconds. Valid values: 10, 20, 30, and 60. The probe timeout must be less than or equal to `intervalInSeconds` for monitors.
	TimeoutInSeconds pulumi.IntOutput `pulumi:"timeoutInSeconds"`
	// (Updatable) A list of names of vantage points from which to execute the probe.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VantagePointNames pulumi.StringArrayOutput `pulumi:"vantagePointNames"`
}

// NewPingMonitor registers a new resource with the given unique name, arguments, and options.
func NewPingMonitor(ctx *pulumi.Context,
	name string, args *PingMonitorArgs, opts ...pulumi.ResourceOption) (*PingMonitor, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.IntervalInSeconds == nil {
		return nil, errors.New("invalid value for required argument 'IntervalInSeconds'")
	}
	if args.Protocol == nil {
		return nil, errors.New("invalid value for required argument 'Protocol'")
	}
	if args.Targets == nil {
		return nil, errors.New("invalid value for required argument 'Targets'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PingMonitor
	err := ctx.RegisterResource("oci:HealthChecks/pingMonitor:PingMonitor", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPingMonitor gets an existing PingMonitor resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPingMonitor(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PingMonitorState, opts ...pulumi.ResourceOption) (*PingMonitor, error) {
	var resource PingMonitor
	err := ctx.ReadResource("oci:HealthChecks/pingMonitor:PingMonitor", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PingMonitor resources.
type pingMonitorState struct {
	// (Updatable) The OCID of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly and mutable name suitable for display in a user interface.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The region where updates must be made and where results must be fetched from.
	HomeRegion *string `pulumi:"homeRegion"`
	// (Updatable) The monitor interval in seconds. Valid values: 10, 30, and 60.
	IntervalInSeconds *int `pulumi:"intervalInSeconds"`
	// (Updatable) Enables or disables the monitor. Set to 'true' to launch monitoring.
	IsEnabled *bool `pulumi:"isEnabled"`
	// (Updatable) The port on which to probe endpoints. If unspecified, probes will use the default port of their protocol.
	Port *int `pulumi:"port"`
	// (Updatable) The protocols for ping probes.
	Protocol *string `pulumi:"protocol"`
	// A URL for fetching the probe results.
	ResultsUrl *string `pulumi:"resultsUrl"`
	// (Updatable) A list of targets (hostnames or IP addresses) of the probe.
	Targets []string `pulumi:"targets"`
	// The RFC 3339-formatted creation date and time of the probe.
	TimeCreated *string `pulumi:"timeCreated"`
	// (Updatable) The probe timeout in seconds. Valid values: 10, 20, 30, and 60. The probe timeout must be less than or equal to `intervalInSeconds` for monitors.
	TimeoutInSeconds *int `pulumi:"timeoutInSeconds"`
	// (Updatable) A list of names of vantage points from which to execute the probe.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VantagePointNames []string `pulumi:"vantagePointNames"`
}

type PingMonitorState struct {
	// (Updatable) The OCID of the compartment.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly and mutable name suitable for display in a user interface.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The region where updates must be made and where results must be fetched from.
	HomeRegion pulumi.StringPtrInput
	// (Updatable) The monitor interval in seconds. Valid values: 10, 30, and 60.
	IntervalInSeconds pulumi.IntPtrInput
	// (Updatable) Enables or disables the monitor. Set to 'true' to launch monitoring.
	IsEnabled pulumi.BoolPtrInput
	// (Updatable) The port on which to probe endpoints. If unspecified, probes will use the default port of their protocol.
	Port pulumi.IntPtrInput
	// (Updatable) The protocols for ping probes.
	Protocol pulumi.StringPtrInput
	// A URL for fetching the probe results.
	ResultsUrl pulumi.StringPtrInput
	// (Updatable) A list of targets (hostnames or IP addresses) of the probe.
	Targets pulumi.StringArrayInput
	// The RFC 3339-formatted creation date and time of the probe.
	TimeCreated pulumi.StringPtrInput
	// (Updatable) The probe timeout in seconds. Valid values: 10, 20, 30, and 60. The probe timeout must be less than or equal to `intervalInSeconds` for monitors.
	TimeoutInSeconds pulumi.IntPtrInput
	// (Updatable) A list of names of vantage points from which to execute the probe.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VantagePointNames pulumi.StringArrayInput
}

func (PingMonitorState) ElementType() reflect.Type {
	return reflect.TypeOf((*pingMonitorState)(nil)).Elem()
}

type pingMonitorArgs struct {
	// (Updatable) The OCID of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly and mutable name suitable for display in a user interface.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) The monitor interval in seconds. Valid values: 10, 30, and 60.
	IntervalInSeconds int `pulumi:"intervalInSeconds"`
	// (Updatable) Enables or disables the monitor. Set to 'true' to launch monitoring.
	IsEnabled *bool `pulumi:"isEnabled"`
	// (Updatable) The port on which to probe endpoints. If unspecified, probes will use the default port of their protocol.
	Port *int `pulumi:"port"`
	// (Updatable) The protocols for ping probes.
	Protocol string `pulumi:"protocol"`
	// (Updatable) A list of targets (hostnames or IP addresses) of the probe.
	Targets []string `pulumi:"targets"`
	// (Updatable) The probe timeout in seconds. Valid values: 10, 20, 30, and 60. The probe timeout must be less than or equal to `intervalInSeconds` for monitors.
	TimeoutInSeconds *int `pulumi:"timeoutInSeconds"`
	// (Updatable) A list of names of vantage points from which to execute the probe.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VantagePointNames []string `pulumi:"vantagePointNames"`
}

// The set of arguments for constructing a PingMonitor resource.
type PingMonitorArgs struct {
	// (Updatable) The OCID of the compartment.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly and mutable name suitable for display in a user interface.
	DisplayName pulumi.StringInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) The monitor interval in seconds. Valid values: 10, 30, and 60.
	IntervalInSeconds pulumi.IntInput
	// (Updatable) Enables or disables the monitor. Set to 'true' to launch monitoring.
	IsEnabled pulumi.BoolPtrInput
	// (Updatable) The port on which to probe endpoints. If unspecified, probes will use the default port of their protocol.
	Port pulumi.IntPtrInput
	// (Updatable) The protocols for ping probes.
	Protocol pulumi.StringInput
	// (Updatable) A list of targets (hostnames or IP addresses) of the probe.
	Targets pulumi.StringArrayInput
	// (Updatable) The probe timeout in seconds. Valid values: 10, 20, 30, and 60. The probe timeout must be less than or equal to `intervalInSeconds` for monitors.
	TimeoutInSeconds pulumi.IntPtrInput
	// (Updatable) A list of names of vantage points from which to execute the probe.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VantagePointNames pulumi.StringArrayInput
}

func (PingMonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*pingMonitorArgs)(nil)).Elem()
}

type PingMonitorInput interface {
	pulumi.Input

	ToPingMonitorOutput() PingMonitorOutput
	ToPingMonitorOutputWithContext(ctx context.Context) PingMonitorOutput
}

func (*PingMonitor) ElementType() reflect.Type {
	return reflect.TypeOf((**PingMonitor)(nil)).Elem()
}

func (i *PingMonitor) ToPingMonitorOutput() PingMonitorOutput {
	return i.ToPingMonitorOutputWithContext(context.Background())
}

func (i *PingMonitor) ToPingMonitorOutputWithContext(ctx context.Context) PingMonitorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PingMonitorOutput)
}

// PingMonitorArrayInput is an input type that accepts PingMonitorArray and PingMonitorArrayOutput values.
// You can construct a concrete instance of `PingMonitorArrayInput` via:
//
//	PingMonitorArray{ PingMonitorArgs{...} }
type PingMonitorArrayInput interface {
	pulumi.Input

	ToPingMonitorArrayOutput() PingMonitorArrayOutput
	ToPingMonitorArrayOutputWithContext(context.Context) PingMonitorArrayOutput
}

type PingMonitorArray []PingMonitorInput

func (PingMonitorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PingMonitor)(nil)).Elem()
}

func (i PingMonitorArray) ToPingMonitorArrayOutput() PingMonitorArrayOutput {
	return i.ToPingMonitorArrayOutputWithContext(context.Background())
}

func (i PingMonitorArray) ToPingMonitorArrayOutputWithContext(ctx context.Context) PingMonitorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PingMonitorArrayOutput)
}

// PingMonitorMapInput is an input type that accepts PingMonitorMap and PingMonitorMapOutput values.
// You can construct a concrete instance of `PingMonitorMapInput` via:
//
//	PingMonitorMap{ "key": PingMonitorArgs{...} }
type PingMonitorMapInput interface {
	pulumi.Input

	ToPingMonitorMapOutput() PingMonitorMapOutput
	ToPingMonitorMapOutputWithContext(context.Context) PingMonitorMapOutput
}

type PingMonitorMap map[string]PingMonitorInput

func (PingMonitorMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PingMonitor)(nil)).Elem()
}

func (i PingMonitorMap) ToPingMonitorMapOutput() PingMonitorMapOutput {
	return i.ToPingMonitorMapOutputWithContext(context.Background())
}

func (i PingMonitorMap) ToPingMonitorMapOutputWithContext(ctx context.Context) PingMonitorMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PingMonitorMapOutput)
}

type PingMonitorOutput struct{ *pulumi.OutputState }

func (PingMonitorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PingMonitor)(nil)).Elem()
}

func (o PingMonitorOutput) ToPingMonitorOutput() PingMonitorOutput {
	return o
}

func (o PingMonitorOutput) ToPingMonitorOutputWithContext(ctx context.Context) PingMonitorOutput {
	return o
}

// (Updatable) The OCID of the compartment.
func (o PingMonitorOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *PingMonitor) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o PingMonitorOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *PingMonitor) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) A user-friendly and mutable name suitable for display in a user interface.
func (o PingMonitorOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *PingMonitor) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o PingMonitorOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *PingMonitor) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// The region where updates must be made and where results must be fetched from.
func (o PingMonitorOutput) HomeRegion() pulumi.StringOutput {
	return o.ApplyT(func(v *PingMonitor) pulumi.StringOutput { return v.HomeRegion }).(pulumi.StringOutput)
}

// (Updatable) The monitor interval in seconds. Valid values: 10, 30, and 60.
func (o PingMonitorOutput) IntervalInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v *PingMonitor) pulumi.IntOutput { return v.IntervalInSeconds }).(pulumi.IntOutput)
}

// (Updatable) Enables or disables the monitor. Set to 'true' to launch monitoring.
func (o PingMonitorOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *PingMonitor) pulumi.BoolOutput { return v.IsEnabled }).(pulumi.BoolOutput)
}

// (Updatable) The port on which to probe endpoints. If unspecified, probes will use the default port of their protocol.
func (o PingMonitorOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v *PingMonitor) pulumi.IntOutput { return v.Port }).(pulumi.IntOutput)
}

// (Updatable) The protocols for ping probes.
func (o PingMonitorOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v *PingMonitor) pulumi.StringOutput { return v.Protocol }).(pulumi.StringOutput)
}

// A URL for fetching the probe results.
func (o PingMonitorOutput) ResultsUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *PingMonitor) pulumi.StringOutput { return v.ResultsUrl }).(pulumi.StringOutput)
}

// (Updatable) A list of targets (hostnames or IP addresses) of the probe.
func (o PingMonitorOutput) Targets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PingMonitor) pulumi.StringArrayOutput { return v.Targets }).(pulumi.StringArrayOutput)
}

// The RFC 3339-formatted creation date and time of the probe.
func (o PingMonitorOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *PingMonitor) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// (Updatable) The probe timeout in seconds. Valid values: 10, 20, 30, and 60. The probe timeout must be less than or equal to `intervalInSeconds` for monitors.
func (o PingMonitorOutput) TimeoutInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v *PingMonitor) pulumi.IntOutput { return v.TimeoutInSeconds }).(pulumi.IntOutput)
}

// (Updatable) A list of names of vantage points from which to execute the probe.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o PingMonitorOutput) VantagePointNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PingMonitor) pulumi.StringArrayOutput { return v.VantagePointNames }).(pulumi.StringArrayOutput)
}

type PingMonitorArrayOutput struct{ *pulumi.OutputState }

func (PingMonitorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PingMonitor)(nil)).Elem()
}

func (o PingMonitorArrayOutput) ToPingMonitorArrayOutput() PingMonitorArrayOutput {
	return o
}

func (o PingMonitorArrayOutput) ToPingMonitorArrayOutputWithContext(ctx context.Context) PingMonitorArrayOutput {
	return o
}

func (o PingMonitorArrayOutput) Index(i pulumi.IntInput) PingMonitorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PingMonitor {
		return vs[0].([]*PingMonitor)[vs[1].(int)]
	}).(PingMonitorOutput)
}

type PingMonitorMapOutput struct{ *pulumi.OutputState }

func (PingMonitorMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PingMonitor)(nil)).Elem()
}

func (o PingMonitorMapOutput) ToPingMonitorMapOutput() PingMonitorMapOutput {
	return o
}

func (o PingMonitorMapOutput) ToPingMonitorMapOutputWithContext(ctx context.Context) PingMonitorMapOutput {
	return o
}

func (o PingMonitorMapOutput) MapIndex(k pulumi.StringInput) PingMonitorOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PingMonitor {
		return vs[0].(map[string]*PingMonitor)[vs[1].(string)]
	}).(PingMonitorOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PingMonitorInput)(nil)).Elem(), &PingMonitor{})
	pulumi.RegisterInputType(reflect.TypeOf((*PingMonitorArrayInput)(nil)).Elem(), PingMonitorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PingMonitorMapInput)(nil)).Elem(), PingMonitorMap{})
	pulumi.RegisterOutputType(PingMonitorOutput{})
	pulumi.RegisterOutputType(PingMonitorArrayOutput{})
	pulumi.RegisterOutputType(PingMonitorMapOutput{})
}
