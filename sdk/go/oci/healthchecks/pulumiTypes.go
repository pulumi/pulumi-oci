// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package healthchecks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GetHttpMonitorsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetHttpMonitorsFilterInput is an input type that accepts GetHttpMonitorsFilterArgs and GetHttpMonitorsFilterOutput values.
// You can construct a concrete instance of `GetHttpMonitorsFilterInput` via:
//
//	GetHttpMonitorsFilterArgs{...}
type GetHttpMonitorsFilterInput interface {
	pulumi.Input

	ToGetHttpMonitorsFilterOutput() GetHttpMonitorsFilterOutput
	ToGetHttpMonitorsFilterOutputWithContext(context.Context) GetHttpMonitorsFilterOutput
}

type GetHttpMonitorsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetHttpMonitorsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHttpMonitorsFilter)(nil)).Elem()
}

func (i GetHttpMonitorsFilterArgs) ToGetHttpMonitorsFilterOutput() GetHttpMonitorsFilterOutput {
	return i.ToGetHttpMonitorsFilterOutputWithContext(context.Background())
}

func (i GetHttpMonitorsFilterArgs) ToGetHttpMonitorsFilterOutputWithContext(ctx context.Context) GetHttpMonitorsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHttpMonitorsFilterOutput)
}

// GetHttpMonitorsFilterArrayInput is an input type that accepts GetHttpMonitorsFilterArray and GetHttpMonitorsFilterArrayOutput values.
// You can construct a concrete instance of `GetHttpMonitorsFilterArrayInput` via:
//
//	GetHttpMonitorsFilterArray{ GetHttpMonitorsFilterArgs{...} }
type GetHttpMonitorsFilterArrayInput interface {
	pulumi.Input

	ToGetHttpMonitorsFilterArrayOutput() GetHttpMonitorsFilterArrayOutput
	ToGetHttpMonitorsFilterArrayOutputWithContext(context.Context) GetHttpMonitorsFilterArrayOutput
}

type GetHttpMonitorsFilterArray []GetHttpMonitorsFilterInput

func (GetHttpMonitorsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHttpMonitorsFilter)(nil)).Elem()
}

func (i GetHttpMonitorsFilterArray) ToGetHttpMonitorsFilterArrayOutput() GetHttpMonitorsFilterArrayOutput {
	return i.ToGetHttpMonitorsFilterArrayOutputWithContext(context.Background())
}

func (i GetHttpMonitorsFilterArray) ToGetHttpMonitorsFilterArrayOutputWithContext(ctx context.Context) GetHttpMonitorsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHttpMonitorsFilterArrayOutput)
}

type GetHttpMonitorsFilterOutput struct{ *pulumi.OutputState }

func (GetHttpMonitorsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHttpMonitorsFilter)(nil)).Elem()
}

func (o GetHttpMonitorsFilterOutput) ToGetHttpMonitorsFilterOutput() GetHttpMonitorsFilterOutput {
	return o
}

func (o GetHttpMonitorsFilterOutput) ToGetHttpMonitorsFilterOutputWithContext(ctx context.Context) GetHttpMonitorsFilterOutput {
	return o
}

func (o GetHttpMonitorsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetHttpMonitorsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetHttpMonitorsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetHttpMonitorsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetHttpMonitorsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHttpMonitorsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetHttpMonitorsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetHttpMonitorsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHttpMonitorsFilter)(nil)).Elem()
}

func (o GetHttpMonitorsFilterArrayOutput) ToGetHttpMonitorsFilterArrayOutput() GetHttpMonitorsFilterArrayOutput {
	return o
}

func (o GetHttpMonitorsFilterArrayOutput) ToGetHttpMonitorsFilterArrayOutputWithContext(ctx context.Context) GetHttpMonitorsFilterArrayOutput {
	return o
}

func (o GetHttpMonitorsFilterArrayOutput) Index(i pulumi.IntInput) GetHttpMonitorsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHttpMonitorsFilter {
		return vs[0].([]GetHttpMonitorsFilter)[vs[1].(int)]
	}).(GetHttpMonitorsFilterOutput)
}

type GetHttpMonitorsHttpMonitor struct {
	// Filters results by compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Filters results that exactly match the `displayName` field.
	DisplayName string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A dictionary of HTTP request headers.
	Headers map[string]interface{} `pulumi:"headers"`
	// Filters results that match the `homeRegion`.
	HomeRegion string `pulumi:"homeRegion"`
	// The OCID of the resource.
	Id string `pulumi:"id"`
	// The monitor interval in seconds. Valid values: 10, 30, and 60.
	IntervalInSeconds int `pulumi:"intervalInSeconds"`
	// Enables or disables the monitor. Set to 'true' to launch monitoring.
	IsEnabled bool `pulumi:"isEnabled"`
	// The supported HTTP methods available for probes.
	Method string `pulumi:"method"`
	// The optional URL path to probe, including query parameters.
	Path string `pulumi:"path"`
	// The port on which to probe endpoints. If unspecified, probes will use the default port of their protocol.
	Port int `pulumi:"port"`
	// The supported protocols available for HTTP probes.
	Protocol string `pulumi:"protocol"`
	// A URL for fetching the probe results.
	ResultsUrl string `pulumi:"resultsUrl"`
	// A list of targets (hostnames or IP addresses) of the probe.
	Targets []string `pulumi:"targets"`
	// The RFC 3339-formatted creation date and time of the probe.
	TimeCreated string `pulumi:"timeCreated"`
	// The probe timeout in seconds. Valid values: 10, 20, 30, and 60. The probe timeout must be less than or equal to `intervalInSeconds` for monitors.
	TimeoutInSeconds int `pulumi:"timeoutInSeconds"`
	// A list of names of vantage points from which to execute the probe.
	VantagePointNames []string `pulumi:"vantagePointNames"`
}

// GetHttpMonitorsHttpMonitorInput is an input type that accepts GetHttpMonitorsHttpMonitorArgs and GetHttpMonitorsHttpMonitorOutput values.
// You can construct a concrete instance of `GetHttpMonitorsHttpMonitorInput` via:
//
//	GetHttpMonitorsHttpMonitorArgs{...}
type GetHttpMonitorsHttpMonitorInput interface {
	pulumi.Input

	ToGetHttpMonitorsHttpMonitorOutput() GetHttpMonitorsHttpMonitorOutput
	ToGetHttpMonitorsHttpMonitorOutputWithContext(context.Context) GetHttpMonitorsHttpMonitorOutput
}

type GetHttpMonitorsHttpMonitorArgs struct {
	// Filters results by compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// Filters results that exactly match the `displayName` field.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// A dictionary of HTTP request headers.
	Headers pulumi.MapInput `pulumi:"headers"`
	// Filters results that match the `homeRegion`.
	HomeRegion pulumi.StringInput `pulumi:"homeRegion"`
	// The OCID of the resource.
	Id pulumi.StringInput `pulumi:"id"`
	// The monitor interval in seconds. Valid values: 10, 30, and 60.
	IntervalInSeconds pulumi.IntInput `pulumi:"intervalInSeconds"`
	// Enables or disables the monitor. Set to 'true' to launch monitoring.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The supported HTTP methods available for probes.
	Method pulumi.StringInput `pulumi:"method"`
	// The optional URL path to probe, including query parameters.
	Path pulumi.StringInput `pulumi:"path"`
	// The port on which to probe endpoints. If unspecified, probes will use the default port of their protocol.
	Port pulumi.IntInput `pulumi:"port"`
	// The supported protocols available for HTTP probes.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// A URL for fetching the probe results.
	ResultsUrl pulumi.StringInput `pulumi:"resultsUrl"`
	// A list of targets (hostnames or IP addresses) of the probe.
	Targets pulumi.StringArrayInput `pulumi:"targets"`
	// The RFC 3339-formatted creation date and time of the probe.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The probe timeout in seconds. Valid values: 10, 20, 30, and 60. The probe timeout must be less than or equal to `intervalInSeconds` for monitors.
	TimeoutInSeconds pulumi.IntInput `pulumi:"timeoutInSeconds"`
	// A list of names of vantage points from which to execute the probe.
	VantagePointNames pulumi.StringArrayInput `pulumi:"vantagePointNames"`
}

func (GetHttpMonitorsHttpMonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHttpMonitorsHttpMonitor)(nil)).Elem()
}

func (i GetHttpMonitorsHttpMonitorArgs) ToGetHttpMonitorsHttpMonitorOutput() GetHttpMonitorsHttpMonitorOutput {
	return i.ToGetHttpMonitorsHttpMonitorOutputWithContext(context.Background())
}

func (i GetHttpMonitorsHttpMonitorArgs) ToGetHttpMonitorsHttpMonitorOutputWithContext(ctx context.Context) GetHttpMonitorsHttpMonitorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHttpMonitorsHttpMonitorOutput)
}

// GetHttpMonitorsHttpMonitorArrayInput is an input type that accepts GetHttpMonitorsHttpMonitorArray and GetHttpMonitorsHttpMonitorArrayOutput values.
// You can construct a concrete instance of `GetHttpMonitorsHttpMonitorArrayInput` via:
//
//	GetHttpMonitorsHttpMonitorArray{ GetHttpMonitorsHttpMonitorArgs{...} }
type GetHttpMonitorsHttpMonitorArrayInput interface {
	pulumi.Input

	ToGetHttpMonitorsHttpMonitorArrayOutput() GetHttpMonitorsHttpMonitorArrayOutput
	ToGetHttpMonitorsHttpMonitorArrayOutputWithContext(context.Context) GetHttpMonitorsHttpMonitorArrayOutput
}

type GetHttpMonitorsHttpMonitorArray []GetHttpMonitorsHttpMonitorInput

func (GetHttpMonitorsHttpMonitorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHttpMonitorsHttpMonitor)(nil)).Elem()
}

func (i GetHttpMonitorsHttpMonitorArray) ToGetHttpMonitorsHttpMonitorArrayOutput() GetHttpMonitorsHttpMonitorArrayOutput {
	return i.ToGetHttpMonitorsHttpMonitorArrayOutputWithContext(context.Background())
}

func (i GetHttpMonitorsHttpMonitorArray) ToGetHttpMonitorsHttpMonitorArrayOutputWithContext(ctx context.Context) GetHttpMonitorsHttpMonitorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHttpMonitorsHttpMonitorArrayOutput)
}

type GetHttpMonitorsHttpMonitorOutput struct{ *pulumi.OutputState }

func (GetHttpMonitorsHttpMonitorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHttpMonitorsHttpMonitor)(nil)).Elem()
}

func (o GetHttpMonitorsHttpMonitorOutput) ToGetHttpMonitorsHttpMonitorOutput() GetHttpMonitorsHttpMonitorOutput {
	return o
}

func (o GetHttpMonitorsHttpMonitorOutput) ToGetHttpMonitorsHttpMonitorOutputWithContext(ctx context.Context) GetHttpMonitorsHttpMonitorOutput {
	return o
}

// Filters results by compartment.
func (o GetHttpMonitorsHttpMonitorOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHttpMonitorsHttpMonitor) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o GetHttpMonitorsHttpMonitorOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetHttpMonitorsHttpMonitor) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// Filters results that exactly match the `displayName` field.
func (o GetHttpMonitorsHttpMonitorOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetHttpMonitorsHttpMonitor) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o GetHttpMonitorsHttpMonitorOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetHttpMonitorsHttpMonitor) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// A dictionary of HTTP request headers.
func (o GetHttpMonitorsHttpMonitorOutput) Headers() pulumi.MapOutput {
	return o.ApplyT(func(v GetHttpMonitorsHttpMonitor) map[string]interface{} { return v.Headers }).(pulumi.MapOutput)
}

// Filters results that match the `homeRegion`.
func (o GetHttpMonitorsHttpMonitorOutput) HomeRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetHttpMonitorsHttpMonitor) string { return v.HomeRegion }).(pulumi.StringOutput)
}

// The OCID of the resource.
func (o GetHttpMonitorsHttpMonitorOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHttpMonitorsHttpMonitor) string { return v.Id }).(pulumi.StringOutput)
}

// The monitor interval in seconds. Valid values: 10, 30, and 60.
func (o GetHttpMonitorsHttpMonitorOutput) IntervalInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetHttpMonitorsHttpMonitor) int { return v.IntervalInSeconds }).(pulumi.IntOutput)
}

// Enables or disables the monitor. Set to 'true' to launch monitoring.
func (o GetHttpMonitorsHttpMonitorOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHttpMonitorsHttpMonitor) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The supported HTTP methods available for probes.
func (o GetHttpMonitorsHttpMonitorOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v GetHttpMonitorsHttpMonitor) string { return v.Method }).(pulumi.StringOutput)
}

// The optional URL path to probe, including query parameters.
func (o GetHttpMonitorsHttpMonitorOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetHttpMonitorsHttpMonitor) string { return v.Path }).(pulumi.StringOutput)
}

// The port on which to probe endpoints. If unspecified, probes will use the default port of their protocol.
func (o GetHttpMonitorsHttpMonitorOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetHttpMonitorsHttpMonitor) int { return v.Port }).(pulumi.IntOutput)
}

// The supported protocols available for HTTP probes.
func (o GetHttpMonitorsHttpMonitorOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetHttpMonitorsHttpMonitor) string { return v.Protocol }).(pulumi.StringOutput)
}

// A URL for fetching the probe results.
func (o GetHttpMonitorsHttpMonitorOutput) ResultsUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetHttpMonitorsHttpMonitor) string { return v.ResultsUrl }).(pulumi.StringOutput)
}

// A list of targets (hostnames or IP addresses) of the probe.
func (o GetHttpMonitorsHttpMonitorOutput) Targets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHttpMonitorsHttpMonitor) []string { return v.Targets }).(pulumi.StringArrayOutput)
}

// The RFC 3339-formatted creation date and time of the probe.
func (o GetHttpMonitorsHttpMonitorOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetHttpMonitorsHttpMonitor) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The probe timeout in seconds. Valid values: 10, 20, 30, and 60. The probe timeout must be less than or equal to `intervalInSeconds` for monitors.
func (o GetHttpMonitorsHttpMonitorOutput) TimeoutInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetHttpMonitorsHttpMonitor) int { return v.TimeoutInSeconds }).(pulumi.IntOutput)
}

// A list of names of vantage points from which to execute the probe.
func (o GetHttpMonitorsHttpMonitorOutput) VantagePointNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHttpMonitorsHttpMonitor) []string { return v.VantagePointNames }).(pulumi.StringArrayOutput)
}

type GetHttpMonitorsHttpMonitorArrayOutput struct{ *pulumi.OutputState }

func (GetHttpMonitorsHttpMonitorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHttpMonitorsHttpMonitor)(nil)).Elem()
}

func (o GetHttpMonitorsHttpMonitorArrayOutput) ToGetHttpMonitorsHttpMonitorArrayOutput() GetHttpMonitorsHttpMonitorArrayOutput {
	return o
}

func (o GetHttpMonitorsHttpMonitorArrayOutput) ToGetHttpMonitorsHttpMonitorArrayOutputWithContext(ctx context.Context) GetHttpMonitorsHttpMonitorArrayOutput {
	return o
}

func (o GetHttpMonitorsHttpMonitorArrayOutput) Index(i pulumi.IntInput) GetHttpMonitorsHttpMonitorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHttpMonitorsHttpMonitor {
		return vs[0].([]GetHttpMonitorsHttpMonitor)[vs[1].(int)]
	}).(GetHttpMonitorsHttpMonitorOutput)
}

type GetHttpProbeResultsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetHttpProbeResultsFilterInput is an input type that accepts GetHttpProbeResultsFilterArgs and GetHttpProbeResultsFilterOutput values.
// You can construct a concrete instance of `GetHttpProbeResultsFilterInput` via:
//
//	GetHttpProbeResultsFilterArgs{...}
type GetHttpProbeResultsFilterInput interface {
	pulumi.Input

	ToGetHttpProbeResultsFilterOutput() GetHttpProbeResultsFilterOutput
	ToGetHttpProbeResultsFilterOutputWithContext(context.Context) GetHttpProbeResultsFilterOutput
}

type GetHttpProbeResultsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetHttpProbeResultsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHttpProbeResultsFilter)(nil)).Elem()
}

func (i GetHttpProbeResultsFilterArgs) ToGetHttpProbeResultsFilterOutput() GetHttpProbeResultsFilterOutput {
	return i.ToGetHttpProbeResultsFilterOutputWithContext(context.Background())
}

func (i GetHttpProbeResultsFilterArgs) ToGetHttpProbeResultsFilterOutputWithContext(ctx context.Context) GetHttpProbeResultsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHttpProbeResultsFilterOutput)
}

// GetHttpProbeResultsFilterArrayInput is an input type that accepts GetHttpProbeResultsFilterArray and GetHttpProbeResultsFilterArrayOutput values.
// You can construct a concrete instance of `GetHttpProbeResultsFilterArrayInput` via:
//
//	GetHttpProbeResultsFilterArray{ GetHttpProbeResultsFilterArgs{...} }
type GetHttpProbeResultsFilterArrayInput interface {
	pulumi.Input

	ToGetHttpProbeResultsFilterArrayOutput() GetHttpProbeResultsFilterArrayOutput
	ToGetHttpProbeResultsFilterArrayOutputWithContext(context.Context) GetHttpProbeResultsFilterArrayOutput
}

type GetHttpProbeResultsFilterArray []GetHttpProbeResultsFilterInput

func (GetHttpProbeResultsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHttpProbeResultsFilter)(nil)).Elem()
}

func (i GetHttpProbeResultsFilterArray) ToGetHttpProbeResultsFilterArrayOutput() GetHttpProbeResultsFilterArrayOutput {
	return i.ToGetHttpProbeResultsFilterArrayOutputWithContext(context.Background())
}

func (i GetHttpProbeResultsFilterArray) ToGetHttpProbeResultsFilterArrayOutputWithContext(ctx context.Context) GetHttpProbeResultsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHttpProbeResultsFilterArrayOutput)
}

type GetHttpProbeResultsFilterOutput struct{ *pulumi.OutputState }

func (GetHttpProbeResultsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHttpProbeResultsFilter)(nil)).Elem()
}

func (o GetHttpProbeResultsFilterOutput) ToGetHttpProbeResultsFilterOutput() GetHttpProbeResultsFilterOutput {
	return o
}

func (o GetHttpProbeResultsFilterOutput) ToGetHttpProbeResultsFilterOutputWithContext(ctx context.Context) GetHttpProbeResultsFilterOutput {
	return o
}

func (o GetHttpProbeResultsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetHttpProbeResultsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetHttpProbeResultsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetHttpProbeResultsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetHttpProbeResultsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHttpProbeResultsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetHttpProbeResultsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetHttpProbeResultsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHttpProbeResultsFilter)(nil)).Elem()
}

func (o GetHttpProbeResultsFilterArrayOutput) ToGetHttpProbeResultsFilterArrayOutput() GetHttpProbeResultsFilterArrayOutput {
	return o
}

func (o GetHttpProbeResultsFilterArrayOutput) ToGetHttpProbeResultsFilterArrayOutputWithContext(ctx context.Context) GetHttpProbeResultsFilterArrayOutput {
	return o
}

func (o GetHttpProbeResultsFilterArrayOutput) Index(i pulumi.IntInput) GetHttpProbeResultsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHttpProbeResultsFilter {
		return vs[0].([]GetHttpProbeResultsFilter)[vs[1].(int)]
	}).(GetHttpProbeResultsFilterOutput)
}

type GetHttpProbeResultsHttpProbeResult struct {
	// The time immediately after the vantage point finishes establishing the connection to the server to retrieve the resource.
	ConnectEnd float64 `pulumi:"connectEnd"`
	// The time immediately before the vantage point starts establishing the connection to the server to retrieve the resource.
	ConnectStart float64 `pulumi:"connectStart"`
	// TCP connection results.  All durations are in milliseconds.
	Connections []GetHttpProbeResultsHttpProbeResultConnection `pulumi:"connections"`
	// The DNS resolution results.
	Dns []GetHttpProbeResultsHttpProbeResultDn `pulumi:"dns"`
	// The time immediately before the vantage point finishes the domain name lookup for the resource.
	DomainLookupEnd float64 `pulumi:"domainLookupEnd"`
	// The time immediately before the vantage point starts the domain name lookup for the resource.
	DomainLookupStart float64 `pulumi:"domainLookupStart"`
	// The total duration from start of request until response is fully consumed or the connection is closed.
	Duration float64 `pulumi:"duration"`
	// The size, in octets, of the payload body prior to removing any applied content-codings.
	EncodedBodySize int `pulumi:"encodedBodySize"`
	// The category of error if an error occurs executing the probe. The `errorMessage` field provides a message with the error details.
	// * NONE - No error
	// * DNS - DNS errors
	// * TRANSPORT - Transport-related errors, for example a "TLS certificate expired" error.
	// * NETWORK - Network-related errors, for example a "network unreachable" error.
	// * SYSTEM - Internal system errors.
	ErrorCategory string `pulumi:"errorCategory"`
	// The error information indicating why a probe execution failed.
	ErrorMessage string `pulumi:"errorMessage"`
	// The time immediately before the vantage point starts to fetch the resource.
	FetchStart float64 `pulumi:"fetchStart"`
	// True if the probe result is determined to be healthy based on probe type-specific criteria.  For HTTP probes, a probe result is considered healthy if the HTTP response code is greater than or equal to 200 and less than 300.
	IsHealthy bool `pulumi:"isHealthy"`
	// True if the probe did not complete before the configured `timeoutInSeconds` value.
	IsTimedOut bool `pulumi:"isTimedOut"`
	// A value identifying this specific probe result. The key is only unique within the results of its probe configuration. The key may be reused after 90 days.
	Key string `pulumi:"key"`
	// The OCID of a monitor or on-demand probe.
	ProbeConfigurationId string `pulumi:"probeConfigurationId"`
	// The supported protocols available for HTTP probes.
	Protocol string `pulumi:"protocol"`
	// The time immediately before the vantage point starts requesting the resource from the server.
	RequestStart float64 `pulumi:"requestStart"`
	// The time immediately after the vantage point receives the last byte of the response or immediately before the transport connection is closed, whichever comes first.
	ResponseEnd float64 `pulumi:"responseEnd"`
	// The time immediately after the vantage point's HTTP parser receives the first byte of the response.
	ResponseStart float64 `pulumi:"responseStart"`
	// The time immediately before the vantage point starts the handshake process to secure the current connection.
	SecureConnectionStart float64 `pulumi:"secureConnectionStart"`
	// The date and time the probe was executed, expressed in milliseconds since the POSIX epoch. This field is defined by the PerformanceResourceTiming interface of the W3C Resource Timing specification. For more information, see [Resource Timing](https://w3c.github.io/resource-timing/#sec-resource-timing).
	StartTime float64 `pulumi:"startTime"`
	// The HTTP response status code.
	StatusCode int `pulumi:"statusCode"`
	// Filters results that match the `target`.
	Target string `pulumi:"target"`
	// The name of the vantage point that executed the probe.
	VantagePointName string `pulumi:"vantagePointName"`
}

// GetHttpProbeResultsHttpProbeResultInput is an input type that accepts GetHttpProbeResultsHttpProbeResultArgs and GetHttpProbeResultsHttpProbeResultOutput values.
// You can construct a concrete instance of `GetHttpProbeResultsHttpProbeResultInput` via:
//
//	GetHttpProbeResultsHttpProbeResultArgs{...}
type GetHttpProbeResultsHttpProbeResultInput interface {
	pulumi.Input

	ToGetHttpProbeResultsHttpProbeResultOutput() GetHttpProbeResultsHttpProbeResultOutput
	ToGetHttpProbeResultsHttpProbeResultOutputWithContext(context.Context) GetHttpProbeResultsHttpProbeResultOutput
}

type GetHttpProbeResultsHttpProbeResultArgs struct {
	// The time immediately after the vantage point finishes establishing the connection to the server to retrieve the resource.
	ConnectEnd pulumi.Float64Input `pulumi:"connectEnd"`
	// The time immediately before the vantage point starts establishing the connection to the server to retrieve the resource.
	ConnectStart pulumi.Float64Input `pulumi:"connectStart"`
	// TCP connection results.  All durations are in milliseconds.
	Connections GetHttpProbeResultsHttpProbeResultConnectionArrayInput `pulumi:"connections"`
	// The DNS resolution results.
	Dns GetHttpProbeResultsHttpProbeResultDnArrayInput `pulumi:"dns"`
	// The time immediately before the vantage point finishes the domain name lookup for the resource.
	DomainLookupEnd pulumi.Float64Input `pulumi:"domainLookupEnd"`
	// The time immediately before the vantage point starts the domain name lookup for the resource.
	DomainLookupStart pulumi.Float64Input `pulumi:"domainLookupStart"`
	// The total duration from start of request until response is fully consumed or the connection is closed.
	Duration pulumi.Float64Input `pulumi:"duration"`
	// The size, in octets, of the payload body prior to removing any applied content-codings.
	EncodedBodySize pulumi.IntInput `pulumi:"encodedBodySize"`
	// The category of error if an error occurs executing the probe. The `errorMessage` field provides a message with the error details.
	// * NONE - No error
	// * DNS - DNS errors
	// * TRANSPORT - Transport-related errors, for example a "TLS certificate expired" error.
	// * NETWORK - Network-related errors, for example a "network unreachable" error.
	// * SYSTEM - Internal system errors.
	ErrorCategory pulumi.StringInput `pulumi:"errorCategory"`
	// The error information indicating why a probe execution failed.
	ErrorMessage pulumi.StringInput `pulumi:"errorMessage"`
	// The time immediately before the vantage point starts to fetch the resource.
	FetchStart pulumi.Float64Input `pulumi:"fetchStart"`
	// True if the probe result is determined to be healthy based on probe type-specific criteria.  For HTTP probes, a probe result is considered healthy if the HTTP response code is greater than or equal to 200 and less than 300.
	IsHealthy pulumi.BoolInput `pulumi:"isHealthy"`
	// True if the probe did not complete before the configured `timeoutInSeconds` value.
	IsTimedOut pulumi.BoolInput `pulumi:"isTimedOut"`
	// A value identifying this specific probe result. The key is only unique within the results of its probe configuration. The key may be reused after 90 days.
	Key pulumi.StringInput `pulumi:"key"`
	// The OCID of a monitor or on-demand probe.
	ProbeConfigurationId pulumi.StringInput `pulumi:"probeConfigurationId"`
	// The supported protocols available for HTTP probes.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The time immediately before the vantage point starts requesting the resource from the server.
	RequestStart pulumi.Float64Input `pulumi:"requestStart"`
	// The time immediately after the vantage point receives the last byte of the response or immediately before the transport connection is closed, whichever comes first.
	ResponseEnd pulumi.Float64Input `pulumi:"responseEnd"`
	// The time immediately after the vantage point's HTTP parser receives the first byte of the response.
	ResponseStart pulumi.Float64Input `pulumi:"responseStart"`
	// The time immediately before the vantage point starts the handshake process to secure the current connection.
	SecureConnectionStart pulumi.Float64Input `pulumi:"secureConnectionStart"`
	// The date and time the probe was executed, expressed in milliseconds since the POSIX epoch. This field is defined by the PerformanceResourceTiming interface of the W3C Resource Timing specification. For more information, see [Resource Timing](https://w3c.github.io/resource-timing/#sec-resource-timing).
	StartTime pulumi.Float64Input `pulumi:"startTime"`
	// The HTTP response status code.
	StatusCode pulumi.IntInput `pulumi:"statusCode"`
	// Filters results that match the `target`.
	Target pulumi.StringInput `pulumi:"target"`
	// The name of the vantage point that executed the probe.
	VantagePointName pulumi.StringInput `pulumi:"vantagePointName"`
}

func (GetHttpProbeResultsHttpProbeResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHttpProbeResultsHttpProbeResult)(nil)).Elem()
}

func (i GetHttpProbeResultsHttpProbeResultArgs) ToGetHttpProbeResultsHttpProbeResultOutput() GetHttpProbeResultsHttpProbeResultOutput {
	return i.ToGetHttpProbeResultsHttpProbeResultOutputWithContext(context.Background())
}

func (i GetHttpProbeResultsHttpProbeResultArgs) ToGetHttpProbeResultsHttpProbeResultOutputWithContext(ctx context.Context) GetHttpProbeResultsHttpProbeResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHttpProbeResultsHttpProbeResultOutput)
}

// GetHttpProbeResultsHttpProbeResultArrayInput is an input type that accepts GetHttpProbeResultsHttpProbeResultArray and GetHttpProbeResultsHttpProbeResultArrayOutput values.
// You can construct a concrete instance of `GetHttpProbeResultsHttpProbeResultArrayInput` via:
//
//	GetHttpProbeResultsHttpProbeResultArray{ GetHttpProbeResultsHttpProbeResultArgs{...} }
type GetHttpProbeResultsHttpProbeResultArrayInput interface {
	pulumi.Input

	ToGetHttpProbeResultsHttpProbeResultArrayOutput() GetHttpProbeResultsHttpProbeResultArrayOutput
	ToGetHttpProbeResultsHttpProbeResultArrayOutputWithContext(context.Context) GetHttpProbeResultsHttpProbeResultArrayOutput
}

type GetHttpProbeResultsHttpProbeResultArray []GetHttpProbeResultsHttpProbeResultInput

func (GetHttpProbeResultsHttpProbeResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHttpProbeResultsHttpProbeResult)(nil)).Elem()
}

func (i GetHttpProbeResultsHttpProbeResultArray) ToGetHttpProbeResultsHttpProbeResultArrayOutput() GetHttpProbeResultsHttpProbeResultArrayOutput {
	return i.ToGetHttpProbeResultsHttpProbeResultArrayOutputWithContext(context.Background())
}

func (i GetHttpProbeResultsHttpProbeResultArray) ToGetHttpProbeResultsHttpProbeResultArrayOutputWithContext(ctx context.Context) GetHttpProbeResultsHttpProbeResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHttpProbeResultsHttpProbeResultArrayOutput)
}

type GetHttpProbeResultsHttpProbeResultOutput struct{ *pulumi.OutputState }

func (GetHttpProbeResultsHttpProbeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHttpProbeResultsHttpProbeResult)(nil)).Elem()
}

func (o GetHttpProbeResultsHttpProbeResultOutput) ToGetHttpProbeResultsHttpProbeResultOutput() GetHttpProbeResultsHttpProbeResultOutput {
	return o
}

func (o GetHttpProbeResultsHttpProbeResultOutput) ToGetHttpProbeResultsHttpProbeResultOutputWithContext(ctx context.Context) GetHttpProbeResultsHttpProbeResultOutput {
	return o
}

// The time immediately after the vantage point finishes establishing the connection to the server to retrieve the resource.
func (o GetHttpProbeResultsHttpProbeResultOutput) ConnectEnd() pulumi.Float64Output {
	return o.ApplyT(func(v GetHttpProbeResultsHttpProbeResult) float64 { return v.ConnectEnd }).(pulumi.Float64Output)
}

// The time immediately before the vantage point starts establishing the connection to the server to retrieve the resource.
func (o GetHttpProbeResultsHttpProbeResultOutput) ConnectStart() pulumi.Float64Output {
	return o.ApplyT(func(v GetHttpProbeResultsHttpProbeResult) float64 { return v.ConnectStart }).(pulumi.Float64Output)
}

// TCP connection results.  All durations are in milliseconds.
func (o GetHttpProbeResultsHttpProbeResultOutput) Connections() GetHttpProbeResultsHttpProbeResultConnectionArrayOutput {
	return o.ApplyT(func(v GetHttpProbeResultsHttpProbeResult) []GetHttpProbeResultsHttpProbeResultConnection {
		return v.Connections
	}).(GetHttpProbeResultsHttpProbeResultConnectionArrayOutput)
}

// The DNS resolution results.
func (o GetHttpProbeResultsHttpProbeResultOutput) Dns() GetHttpProbeResultsHttpProbeResultDnArrayOutput {
	return o.ApplyT(func(v GetHttpProbeResultsHttpProbeResult) []GetHttpProbeResultsHttpProbeResultDn { return v.Dns }).(GetHttpProbeResultsHttpProbeResultDnArrayOutput)
}

// The time immediately before the vantage point finishes the domain name lookup for the resource.
func (o GetHttpProbeResultsHttpProbeResultOutput) DomainLookupEnd() pulumi.Float64Output {
	return o.ApplyT(func(v GetHttpProbeResultsHttpProbeResult) float64 { return v.DomainLookupEnd }).(pulumi.Float64Output)
}

// The time immediately before the vantage point starts the domain name lookup for the resource.
func (o GetHttpProbeResultsHttpProbeResultOutput) DomainLookupStart() pulumi.Float64Output {
	return o.ApplyT(func(v GetHttpProbeResultsHttpProbeResult) float64 { return v.DomainLookupStart }).(pulumi.Float64Output)
}

// The total duration from start of request until response is fully consumed or the connection is closed.
func (o GetHttpProbeResultsHttpProbeResultOutput) Duration() pulumi.Float64Output {
	return o.ApplyT(func(v GetHttpProbeResultsHttpProbeResult) float64 { return v.Duration }).(pulumi.Float64Output)
}

// The size, in octets, of the payload body prior to removing any applied content-codings.
func (o GetHttpProbeResultsHttpProbeResultOutput) EncodedBodySize() pulumi.IntOutput {
	return o.ApplyT(func(v GetHttpProbeResultsHttpProbeResult) int { return v.EncodedBodySize }).(pulumi.IntOutput)
}

// The category of error if an error occurs executing the probe. The `errorMessage` field provides a message with the error details.
// * NONE - No error
// * DNS - DNS errors
// * TRANSPORT - Transport-related errors, for example a "TLS certificate expired" error.
// * NETWORK - Network-related errors, for example a "network unreachable" error.
// * SYSTEM - Internal system errors.
func (o GetHttpProbeResultsHttpProbeResultOutput) ErrorCategory() pulumi.StringOutput {
	return o.ApplyT(func(v GetHttpProbeResultsHttpProbeResult) string { return v.ErrorCategory }).(pulumi.StringOutput)
}

// The error information indicating why a probe execution failed.
func (o GetHttpProbeResultsHttpProbeResultOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetHttpProbeResultsHttpProbeResult) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

// The time immediately before the vantage point starts to fetch the resource.
func (o GetHttpProbeResultsHttpProbeResultOutput) FetchStart() pulumi.Float64Output {
	return o.ApplyT(func(v GetHttpProbeResultsHttpProbeResult) float64 { return v.FetchStart }).(pulumi.Float64Output)
}

// True if the probe result is determined to be healthy based on probe type-specific criteria.  For HTTP probes, a probe result is considered healthy if the HTTP response code is greater than or equal to 200 and less than 300.
func (o GetHttpProbeResultsHttpProbeResultOutput) IsHealthy() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHttpProbeResultsHttpProbeResult) bool { return v.IsHealthy }).(pulumi.BoolOutput)
}

// True if the probe did not complete before the configured `timeoutInSeconds` value.
func (o GetHttpProbeResultsHttpProbeResultOutput) IsTimedOut() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHttpProbeResultsHttpProbeResult) bool { return v.IsTimedOut }).(pulumi.BoolOutput)
}

// A value identifying this specific probe result. The key is only unique within the results of its probe configuration. The key may be reused after 90 days.
func (o GetHttpProbeResultsHttpProbeResultOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetHttpProbeResultsHttpProbeResult) string { return v.Key }).(pulumi.StringOutput)
}

// The OCID of a monitor or on-demand probe.
func (o GetHttpProbeResultsHttpProbeResultOutput) ProbeConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHttpProbeResultsHttpProbeResult) string { return v.ProbeConfigurationId }).(pulumi.StringOutput)
}

// The supported protocols available for HTTP probes.
func (o GetHttpProbeResultsHttpProbeResultOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetHttpProbeResultsHttpProbeResult) string { return v.Protocol }).(pulumi.StringOutput)
}

// The time immediately before the vantage point starts requesting the resource from the server.
func (o GetHttpProbeResultsHttpProbeResultOutput) RequestStart() pulumi.Float64Output {
	return o.ApplyT(func(v GetHttpProbeResultsHttpProbeResult) float64 { return v.RequestStart }).(pulumi.Float64Output)
}

// The time immediately after the vantage point receives the last byte of the response or immediately before the transport connection is closed, whichever comes first.
func (o GetHttpProbeResultsHttpProbeResultOutput) ResponseEnd() pulumi.Float64Output {
	return o.ApplyT(func(v GetHttpProbeResultsHttpProbeResult) float64 { return v.ResponseEnd }).(pulumi.Float64Output)
}

// The time immediately after the vantage point's HTTP parser receives the first byte of the response.
func (o GetHttpProbeResultsHttpProbeResultOutput) ResponseStart() pulumi.Float64Output {
	return o.ApplyT(func(v GetHttpProbeResultsHttpProbeResult) float64 { return v.ResponseStart }).(pulumi.Float64Output)
}

// The time immediately before the vantage point starts the handshake process to secure the current connection.
func (o GetHttpProbeResultsHttpProbeResultOutput) SecureConnectionStart() pulumi.Float64Output {
	return o.ApplyT(func(v GetHttpProbeResultsHttpProbeResult) float64 { return v.SecureConnectionStart }).(pulumi.Float64Output)
}

// The date and time the probe was executed, expressed in milliseconds since the POSIX epoch. This field is defined by the PerformanceResourceTiming interface of the W3C Resource Timing specification. For more information, see [Resource Timing](https://w3c.github.io/resource-timing/#sec-resource-timing).
func (o GetHttpProbeResultsHttpProbeResultOutput) StartTime() pulumi.Float64Output {
	return o.ApplyT(func(v GetHttpProbeResultsHttpProbeResult) float64 { return v.StartTime }).(pulumi.Float64Output)
}

// The HTTP response status code.
func (o GetHttpProbeResultsHttpProbeResultOutput) StatusCode() pulumi.IntOutput {
	return o.ApplyT(func(v GetHttpProbeResultsHttpProbeResult) int { return v.StatusCode }).(pulumi.IntOutput)
}

// Filters results that match the `target`.
func (o GetHttpProbeResultsHttpProbeResultOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v GetHttpProbeResultsHttpProbeResult) string { return v.Target }).(pulumi.StringOutput)
}

// The name of the vantage point that executed the probe.
func (o GetHttpProbeResultsHttpProbeResultOutput) VantagePointName() pulumi.StringOutput {
	return o.ApplyT(func(v GetHttpProbeResultsHttpProbeResult) string { return v.VantagePointName }).(pulumi.StringOutput)
}

type GetHttpProbeResultsHttpProbeResultArrayOutput struct{ *pulumi.OutputState }

func (GetHttpProbeResultsHttpProbeResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHttpProbeResultsHttpProbeResult)(nil)).Elem()
}

func (o GetHttpProbeResultsHttpProbeResultArrayOutput) ToGetHttpProbeResultsHttpProbeResultArrayOutput() GetHttpProbeResultsHttpProbeResultArrayOutput {
	return o
}

func (o GetHttpProbeResultsHttpProbeResultArrayOutput) ToGetHttpProbeResultsHttpProbeResultArrayOutputWithContext(ctx context.Context) GetHttpProbeResultsHttpProbeResultArrayOutput {
	return o
}

func (o GetHttpProbeResultsHttpProbeResultArrayOutput) Index(i pulumi.IntInput) GetHttpProbeResultsHttpProbeResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHttpProbeResultsHttpProbeResult {
		return vs[0].([]GetHttpProbeResultsHttpProbeResult)[vs[1].(int)]
	}).(GetHttpProbeResultsHttpProbeResultOutput)
}

type GetHttpProbeResultsHttpProbeResultConnection struct {
	// The connection IP address.
	Address string `pulumi:"address"`
	// Total connect duration, calculated using `connectEnd` minus `connectStart`.
	ConnectDuration float64 `pulumi:"connectDuration"`
	// The port.
	Port int `pulumi:"port"`
	// The duration to secure the connection.  This value will be zero for insecure connections.  Calculated using `connectEnd` minus `secureConnectionStart`.
	SecureConnectDuration float64 `pulumi:"secureConnectDuration"`
}

// GetHttpProbeResultsHttpProbeResultConnectionInput is an input type that accepts GetHttpProbeResultsHttpProbeResultConnectionArgs and GetHttpProbeResultsHttpProbeResultConnectionOutput values.
// You can construct a concrete instance of `GetHttpProbeResultsHttpProbeResultConnectionInput` via:
//
//	GetHttpProbeResultsHttpProbeResultConnectionArgs{...}
type GetHttpProbeResultsHttpProbeResultConnectionInput interface {
	pulumi.Input

	ToGetHttpProbeResultsHttpProbeResultConnectionOutput() GetHttpProbeResultsHttpProbeResultConnectionOutput
	ToGetHttpProbeResultsHttpProbeResultConnectionOutputWithContext(context.Context) GetHttpProbeResultsHttpProbeResultConnectionOutput
}

type GetHttpProbeResultsHttpProbeResultConnectionArgs struct {
	// The connection IP address.
	Address pulumi.StringInput `pulumi:"address"`
	// Total connect duration, calculated using `connectEnd` minus `connectStart`.
	ConnectDuration pulumi.Float64Input `pulumi:"connectDuration"`
	// The port.
	Port pulumi.IntInput `pulumi:"port"`
	// The duration to secure the connection.  This value will be zero for insecure connections.  Calculated using `connectEnd` minus `secureConnectionStart`.
	SecureConnectDuration pulumi.Float64Input `pulumi:"secureConnectDuration"`
}

func (GetHttpProbeResultsHttpProbeResultConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHttpProbeResultsHttpProbeResultConnection)(nil)).Elem()
}

func (i GetHttpProbeResultsHttpProbeResultConnectionArgs) ToGetHttpProbeResultsHttpProbeResultConnectionOutput() GetHttpProbeResultsHttpProbeResultConnectionOutput {
	return i.ToGetHttpProbeResultsHttpProbeResultConnectionOutputWithContext(context.Background())
}

func (i GetHttpProbeResultsHttpProbeResultConnectionArgs) ToGetHttpProbeResultsHttpProbeResultConnectionOutputWithContext(ctx context.Context) GetHttpProbeResultsHttpProbeResultConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHttpProbeResultsHttpProbeResultConnectionOutput)
}

// GetHttpProbeResultsHttpProbeResultConnectionArrayInput is an input type that accepts GetHttpProbeResultsHttpProbeResultConnectionArray and GetHttpProbeResultsHttpProbeResultConnectionArrayOutput values.
// You can construct a concrete instance of `GetHttpProbeResultsHttpProbeResultConnectionArrayInput` via:
//
//	GetHttpProbeResultsHttpProbeResultConnectionArray{ GetHttpProbeResultsHttpProbeResultConnectionArgs{...} }
type GetHttpProbeResultsHttpProbeResultConnectionArrayInput interface {
	pulumi.Input

	ToGetHttpProbeResultsHttpProbeResultConnectionArrayOutput() GetHttpProbeResultsHttpProbeResultConnectionArrayOutput
	ToGetHttpProbeResultsHttpProbeResultConnectionArrayOutputWithContext(context.Context) GetHttpProbeResultsHttpProbeResultConnectionArrayOutput
}

type GetHttpProbeResultsHttpProbeResultConnectionArray []GetHttpProbeResultsHttpProbeResultConnectionInput

func (GetHttpProbeResultsHttpProbeResultConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHttpProbeResultsHttpProbeResultConnection)(nil)).Elem()
}

func (i GetHttpProbeResultsHttpProbeResultConnectionArray) ToGetHttpProbeResultsHttpProbeResultConnectionArrayOutput() GetHttpProbeResultsHttpProbeResultConnectionArrayOutput {
	return i.ToGetHttpProbeResultsHttpProbeResultConnectionArrayOutputWithContext(context.Background())
}

func (i GetHttpProbeResultsHttpProbeResultConnectionArray) ToGetHttpProbeResultsHttpProbeResultConnectionArrayOutputWithContext(ctx context.Context) GetHttpProbeResultsHttpProbeResultConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHttpProbeResultsHttpProbeResultConnectionArrayOutput)
}

type GetHttpProbeResultsHttpProbeResultConnectionOutput struct{ *pulumi.OutputState }

func (GetHttpProbeResultsHttpProbeResultConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHttpProbeResultsHttpProbeResultConnection)(nil)).Elem()
}

func (o GetHttpProbeResultsHttpProbeResultConnectionOutput) ToGetHttpProbeResultsHttpProbeResultConnectionOutput() GetHttpProbeResultsHttpProbeResultConnectionOutput {
	return o
}

func (o GetHttpProbeResultsHttpProbeResultConnectionOutput) ToGetHttpProbeResultsHttpProbeResultConnectionOutputWithContext(ctx context.Context) GetHttpProbeResultsHttpProbeResultConnectionOutput {
	return o
}

// The connection IP address.
func (o GetHttpProbeResultsHttpProbeResultConnectionOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetHttpProbeResultsHttpProbeResultConnection) string { return v.Address }).(pulumi.StringOutput)
}

// Total connect duration, calculated using `connectEnd` minus `connectStart`.
func (o GetHttpProbeResultsHttpProbeResultConnectionOutput) ConnectDuration() pulumi.Float64Output {
	return o.ApplyT(func(v GetHttpProbeResultsHttpProbeResultConnection) float64 { return v.ConnectDuration }).(pulumi.Float64Output)
}

// The port.
func (o GetHttpProbeResultsHttpProbeResultConnectionOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetHttpProbeResultsHttpProbeResultConnection) int { return v.Port }).(pulumi.IntOutput)
}

// The duration to secure the connection.  This value will be zero for insecure connections.  Calculated using `connectEnd` minus `secureConnectionStart`.
func (o GetHttpProbeResultsHttpProbeResultConnectionOutput) SecureConnectDuration() pulumi.Float64Output {
	return o.ApplyT(func(v GetHttpProbeResultsHttpProbeResultConnection) float64 { return v.SecureConnectDuration }).(pulumi.Float64Output)
}

type GetHttpProbeResultsHttpProbeResultConnectionArrayOutput struct{ *pulumi.OutputState }

func (GetHttpProbeResultsHttpProbeResultConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHttpProbeResultsHttpProbeResultConnection)(nil)).Elem()
}

func (o GetHttpProbeResultsHttpProbeResultConnectionArrayOutput) ToGetHttpProbeResultsHttpProbeResultConnectionArrayOutput() GetHttpProbeResultsHttpProbeResultConnectionArrayOutput {
	return o
}

func (o GetHttpProbeResultsHttpProbeResultConnectionArrayOutput) ToGetHttpProbeResultsHttpProbeResultConnectionArrayOutputWithContext(ctx context.Context) GetHttpProbeResultsHttpProbeResultConnectionArrayOutput {
	return o
}

func (o GetHttpProbeResultsHttpProbeResultConnectionArrayOutput) Index(i pulumi.IntInput) GetHttpProbeResultsHttpProbeResultConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHttpProbeResultsHttpProbeResultConnection {
		return vs[0].([]GetHttpProbeResultsHttpProbeResultConnection)[vs[1].(int)]
	}).(GetHttpProbeResultsHttpProbeResultConnectionOutput)
}

type GetHttpProbeResultsHttpProbeResultDn struct {
	// The addresses returned by DNS resolution.
	Addresses []string `pulumi:"addresses"`
	// Total DNS resolution duration, in milliseconds. Calculated using `domainLookupEnd` minus `domainLookupStart`.
	DomainLookupDuration float64 `pulumi:"domainLookupDuration"`
}

// GetHttpProbeResultsHttpProbeResultDnInput is an input type that accepts GetHttpProbeResultsHttpProbeResultDnArgs and GetHttpProbeResultsHttpProbeResultDnOutput values.
// You can construct a concrete instance of `GetHttpProbeResultsHttpProbeResultDnInput` via:
//
//	GetHttpProbeResultsHttpProbeResultDnArgs{...}
type GetHttpProbeResultsHttpProbeResultDnInput interface {
	pulumi.Input

	ToGetHttpProbeResultsHttpProbeResultDnOutput() GetHttpProbeResultsHttpProbeResultDnOutput
	ToGetHttpProbeResultsHttpProbeResultDnOutputWithContext(context.Context) GetHttpProbeResultsHttpProbeResultDnOutput
}

type GetHttpProbeResultsHttpProbeResultDnArgs struct {
	// The addresses returned by DNS resolution.
	Addresses pulumi.StringArrayInput `pulumi:"addresses"`
	// Total DNS resolution duration, in milliseconds. Calculated using `domainLookupEnd` minus `domainLookupStart`.
	DomainLookupDuration pulumi.Float64Input `pulumi:"domainLookupDuration"`
}

func (GetHttpProbeResultsHttpProbeResultDnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHttpProbeResultsHttpProbeResultDn)(nil)).Elem()
}

func (i GetHttpProbeResultsHttpProbeResultDnArgs) ToGetHttpProbeResultsHttpProbeResultDnOutput() GetHttpProbeResultsHttpProbeResultDnOutput {
	return i.ToGetHttpProbeResultsHttpProbeResultDnOutputWithContext(context.Background())
}

func (i GetHttpProbeResultsHttpProbeResultDnArgs) ToGetHttpProbeResultsHttpProbeResultDnOutputWithContext(ctx context.Context) GetHttpProbeResultsHttpProbeResultDnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHttpProbeResultsHttpProbeResultDnOutput)
}

// GetHttpProbeResultsHttpProbeResultDnArrayInput is an input type that accepts GetHttpProbeResultsHttpProbeResultDnArray and GetHttpProbeResultsHttpProbeResultDnArrayOutput values.
// You can construct a concrete instance of `GetHttpProbeResultsHttpProbeResultDnArrayInput` via:
//
//	GetHttpProbeResultsHttpProbeResultDnArray{ GetHttpProbeResultsHttpProbeResultDnArgs{...} }
type GetHttpProbeResultsHttpProbeResultDnArrayInput interface {
	pulumi.Input

	ToGetHttpProbeResultsHttpProbeResultDnArrayOutput() GetHttpProbeResultsHttpProbeResultDnArrayOutput
	ToGetHttpProbeResultsHttpProbeResultDnArrayOutputWithContext(context.Context) GetHttpProbeResultsHttpProbeResultDnArrayOutput
}

type GetHttpProbeResultsHttpProbeResultDnArray []GetHttpProbeResultsHttpProbeResultDnInput

func (GetHttpProbeResultsHttpProbeResultDnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHttpProbeResultsHttpProbeResultDn)(nil)).Elem()
}

func (i GetHttpProbeResultsHttpProbeResultDnArray) ToGetHttpProbeResultsHttpProbeResultDnArrayOutput() GetHttpProbeResultsHttpProbeResultDnArrayOutput {
	return i.ToGetHttpProbeResultsHttpProbeResultDnArrayOutputWithContext(context.Background())
}

func (i GetHttpProbeResultsHttpProbeResultDnArray) ToGetHttpProbeResultsHttpProbeResultDnArrayOutputWithContext(ctx context.Context) GetHttpProbeResultsHttpProbeResultDnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHttpProbeResultsHttpProbeResultDnArrayOutput)
}

type GetHttpProbeResultsHttpProbeResultDnOutput struct{ *pulumi.OutputState }

func (GetHttpProbeResultsHttpProbeResultDnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHttpProbeResultsHttpProbeResultDn)(nil)).Elem()
}

func (o GetHttpProbeResultsHttpProbeResultDnOutput) ToGetHttpProbeResultsHttpProbeResultDnOutput() GetHttpProbeResultsHttpProbeResultDnOutput {
	return o
}

func (o GetHttpProbeResultsHttpProbeResultDnOutput) ToGetHttpProbeResultsHttpProbeResultDnOutputWithContext(ctx context.Context) GetHttpProbeResultsHttpProbeResultDnOutput {
	return o
}

// The addresses returned by DNS resolution.
func (o GetHttpProbeResultsHttpProbeResultDnOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHttpProbeResultsHttpProbeResultDn) []string { return v.Addresses }).(pulumi.StringArrayOutput)
}

// Total DNS resolution duration, in milliseconds. Calculated using `domainLookupEnd` minus `domainLookupStart`.
func (o GetHttpProbeResultsHttpProbeResultDnOutput) DomainLookupDuration() pulumi.Float64Output {
	return o.ApplyT(func(v GetHttpProbeResultsHttpProbeResultDn) float64 { return v.DomainLookupDuration }).(pulumi.Float64Output)
}

type GetHttpProbeResultsHttpProbeResultDnArrayOutput struct{ *pulumi.OutputState }

func (GetHttpProbeResultsHttpProbeResultDnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHttpProbeResultsHttpProbeResultDn)(nil)).Elem()
}

func (o GetHttpProbeResultsHttpProbeResultDnArrayOutput) ToGetHttpProbeResultsHttpProbeResultDnArrayOutput() GetHttpProbeResultsHttpProbeResultDnArrayOutput {
	return o
}

func (o GetHttpProbeResultsHttpProbeResultDnArrayOutput) ToGetHttpProbeResultsHttpProbeResultDnArrayOutputWithContext(ctx context.Context) GetHttpProbeResultsHttpProbeResultDnArrayOutput {
	return o
}

func (o GetHttpProbeResultsHttpProbeResultDnArrayOutput) Index(i pulumi.IntInput) GetHttpProbeResultsHttpProbeResultDnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHttpProbeResultsHttpProbeResultDn {
		return vs[0].([]GetHttpProbeResultsHttpProbeResultDn)[vs[1].(int)]
	}).(GetHttpProbeResultsHttpProbeResultDnOutput)
}

type GetPingMonitorsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetPingMonitorsFilterInput is an input type that accepts GetPingMonitorsFilterArgs and GetPingMonitorsFilterOutput values.
// You can construct a concrete instance of `GetPingMonitorsFilterInput` via:
//
//	GetPingMonitorsFilterArgs{...}
type GetPingMonitorsFilterInput interface {
	pulumi.Input

	ToGetPingMonitorsFilterOutput() GetPingMonitorsFilterOutput
	ToGetPingMonitorsFilterOutputWithContext(context.Context) GetPingMonitorsFilterOutput
}

type GetPingMonitorsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetPingMonitorsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPingMonitorsFilter)(nil)).Elem()
}

func (i GetPingMonitorsFilterArgs) ToGetPingMonitorsFilterOutput() GetPingMonitorsFilterOutput {
	return i.ToGetPingMonitorsFilterOutputWithContext(context.Background())
}

func (i GetPingMonitorsFilterArgs) ToGetPingMonitorsFilterOutputWithContext(ctx context.Context) GetPingMonitorsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPingMonitorsFilterOutput)
}

// GetPingMonitorsFilterArrayInput is an input type that accepts GetPingMonitorsFilterArray and GetPingMonitorsFilterArrayOutput values.
// You can construct a concrete instance of `GetPingMonitorsFilterArrayInput` via:
//
//	GetPingMonitorsFilterArray{ GetPingMonitorsFilterArgs{...} }
type GetPingMonitorsFilterArrayInput interface {
	pulumi.Input

	ToGetPingMonitorsFilterArrayOutput() GetPingMonitorsFilterArrayOutput
	ToGetPingMonitorsFilterArrayOutputWithContext(context.Context) GetPingMonitorsFilterArrayOutput
}

type GetPingMonitorsFilterArray []GetPingMonitorsFilterInput

func (GetPingMonitorsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPingMonitorsFilter)(nil)).Elem()
}

func (i GetPingMonitorsFilterArray) ToGetPingMonitorsFilterArrayOutput() GetPingMonitorsFilterArrayOutput {
	return i.ToGetPingMonitorsFilterArrayOutputWithContext(context.Background())
}

func (i GetPingMonitorsFilterArray) ToGetPingMonitorsFilterArrayOutputWithContext(ctx context.Context) GetPingMonitorsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPingMonitorsFilterArrayOutput)
}

type GetPingMonitorsFilterOutput struct{ *pulumi.OutputState }

func (GetPingMonitorsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPingMonitorsFilter)(nil)).Elem()
}

func (o GetPingMonitorsFilterOutput) ToGetPingMonitorsFilterOutput() GetPingMonitorsFilterOutput {
	return o
}

func (o GetPingMonitorsFilterOutput) ToGetPingMonitorsFilterOutputWithContext(ctx context.Context) GetPingMonitorsFilterOutput {
	return o
}

func (o GetPingMonitorsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPingMonitorsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetPingMonitorsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetPingMonitorsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetPingMonitorsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPingMonitorsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetPingMonitorsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetPingMonitorsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPingMonitorsFilter)(nil)).Elem()
}

func (o GetPingMonitorsFilterArrayOutput) ToGetPingMonitorsFilterArrayOutput() GetPingMonitorsFilterArrayOutput {
	return o
}

func (o GetPingMonitorsFilterArrayOutput) ToGetPingMonitorsFilterArrayOutputWithContext(ctx context.Context) GetPingMonitorsFilterArrayOutput {
	return o
}

func (o GetPingMonitorsFilterArrayOutput) Index(i pulumi.IntInput) GetPingMonitorsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPingMonitorsFilter {
		return vs[0].([]GetPingMonitorsFilter)[vs[1].(int)]
	}).(GetPingMonitorsFilterOutput)
}

type GetPingMonitorsPingMonitor struct {
	// Filters results by compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Filters results that exactly match the `displayName` field.
	DisplayName string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Filters results that match the `homeRegion`.
	HomeRegion string `pulumi:"homeRegion"`
	// The OCID of the resource.
	Id string `pulumi:"id"`
	// The monitor interval in seconds. Valid values: 10, 30, and 60.
	IntervalInSeconds int `pulumi:"intervalInSeconds"`
	// Enables or disables the monitor. Set to 'true' to launch monitoring.
	IsEnabled bool `pulumi:"isEnabled"`
	// The port on which to probe endpoints. If unspecified, probes will use the default port of their protocol.
	Port int `pulumi:"port"`
	// The protocols for ping probes.
	Protocol string `pulumi:"protocol"`
	// A URL for fetching the probe results.
	ResultsUrl string `pulumi:"resultsUrl"`
	// A list of targets (hostnames or IP addresses) of the probe.
	Targets []string `pulumi:"targets"`
	// The RFC 3339-formatted creation date and time of the probe.
	TimeCreated string `pulumi:"timeCreated"`
	// The probe timeout in seconds. Valid values: 10, 20, 30, and 60. The probe timeout must be less than or equal to `intervalInSeconds` for monitors.
	TimeoutInSeconds int `pulumi:"timeoutInSeconds"`
	// A list of names of vantage points from which to execute the probe.
	VantagePointNames []string `pulumi:"vantagePointNames"`
}

// GetPingMonitorsPingMonitorInput is an input type that accepts GetPingMonitorsPingMonitorArgs and GetPingMonitorsPingMonitorOutput values.
// You can construct a concrete instance of `GetPingMonitorsPingMonitorInput` via:
//
//	GetPingMonitorsPingMonitorArgs{...}
type GetPingMonitorsPingMonitorInput interface {
	pulumi.Input

	ToGetPingMonitorsPingMonitorOutput() GetPingMonitorsPingMonitorOutput
	ToGetPingMonitorsPingMonitorOutputWithContext(context.Context) GetPingMonitorsPingMonitorOutput
}

type GetPingMonitorsPingMonitorArgs struct {
	// Filters results by compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// Filters results that exactly match the `displayName` field.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// Filters results that match the `homeRegion`.
	HomeRegion pulumi.StringInput `pulumi:"homeRegion"`
	// The OCID of the resource.
	Id pulumi.StringInput `pulumi:"id"`
	// The monitor interval in seconds. Valid values: 10, 30, and 60.
	IntervalInSeconds pulumi.IntInput `pulumi:"intervalInSeconds"`
	// Enables or disables the monitor. Set to 'true' to launch monitoring.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The port on which to probe endpoints. If unspecified, probes will use the default port of their protocol.
	Port pulumi.IntInput `pulumi:"port"`
	// The protocols for ping probes.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// A URL for fetching the probe results.
	ResultsUrl pulumi.StringInput `pulumi:"resultsUrl"`
	// A list of targets (hostnames or IP addresses) of the probe.
	Targets pulumi.StringArrayInput `pulumi:"targets"`
	// The RFC 3339-formatted creation date and time of the probe.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The probe timeout in seconds. Valid values: 10, 20, 30, and 60. The probe timeout must be less than or equal to `intervalInSeconds` for monitors.
	TimeoutInSeconds pulumi.IntInput `pulumi:"timeoutInSeconds"`
	// A list of names of vantage points from which to execute the probe.
	VantagePointNames pulumi.StringArrayInput `pulumi:"vantagePointNames"`
}

func (GetPingMonitorsPingMonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPingMonitorsPingMonitor)(nil)).Elem()
}

func (i GetPingMonitorsPingMonitorArgs) ToGetPingMonitorsPingMonitorOutput() GetPingMonitorsPingMonitorOutput {
	return i.ToGetPingMonitorsPingMonitorOutputWithContext(context.Background())
}

func (i GetPingMonitorsPingMonitorArgs) ToGetPingMonitorsPingMonitorOutputWithContext(ctx context.Context) GetPingMonitorsPingMonitorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPingMonitorsPingMonitorOutput)
}

// GetPingMonitorsPingMonitorArrayInput is an input type that accepts GetPingMonitorsPingMonitorArray and GetPingMonitorsPingMonitorArrayOutput values.
// You can construct a concrete instance of `GetPingMonitorsPingMonitorArrayInput` via:
//
//	GetPingMonitorsPingMonitorArray{ GetPingMonitorsPingMonitorArgs{...} }
type GetPingMonitorsPingMonitorArrayInput interface {
	pulumi.Input

	ToGetPingMonitorsPingMonitorArrayOutput() GetPingMonitorsPingMonitorArrayOutput
	ToGetPingMonitorsPingMonitorArrayOutputWithContext(context.Context) GetPingMonitorsPingMonitorArrayOutput
}

type GetPingMonitorsPingMonitorArray []GetPingMonitorsPingMonitorInput

func (GetPingMonitorsPingMonitorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPingMonitorsPingMonitor)(nil)).Elem()
}

func (i GetPingMonitorsPingMonitorArray) ToGetPingMonitorsPingMonitorArrayOutput() GetPingMonitorsPingMonitorArrayOutput {
	return i.ToGetPingMonitorsPingMonitorArrayOutputWithContext(context.Background())
}

func (i GetPingMonitorsPingMonitorArray) ToGetPingMonitorsPingMonitorArrayOutputWithContext(ctx context.Context) GetPingMonitorsPingMonitorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPingMonitorsPingMonitorArrayOutput)
}

type GetPingMonitorsPingMonitorOutput struct{ *pulumi.OutputState }

func (GetPingMonitorsPingMonitorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPingMonitorsPingMonitor)(nil)).Elem()
}

func (o GetPingMonitorsPingMonitorOutput) ToGetPingMonitorsPingMonitorOutput() GetPingMonitorsPingMonitorOutput {
	return o
}

func (o GetPingMonitorsPingMonitorOutput) ToGetPingMonitorsPingMonitorOutputWithContext(ctx context.Context) GetPingMonitorsPingMonitorOutput {
	return o
}

// Filters results by compartment.
func (o GetPingMonitorsPingMonitorOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPingMonitorsPingMonitor) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o GetPingMonitorsPingMonitorOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetPingMonitorsPingMonitor) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// Filters results that exactly match the `displayName` field.
func (o GetPingMonitorsPingMonitorOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPingMonitorsPingMonitor) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o GetPingMonitorsPingMonitorOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetPingMonitorsPingMonitor) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// Filters results that match the `homeRegion`.
func (o GetPingMonitorsPingMonitorOutput) HomeRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetPingMonitorsPingMonitor) string { return v.HomeRegion }).(pulumi.StringOutput)
}

// The OCID of the resource.
func (o GetPingMonitorsPingMonitorOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPingMonitorsPingMonitor) string { return v.Id }).(pulumi.StringOutput)
}

// The monitor interval in seconds. Valid values: 10, 30, and 60.
func (o GetPingMonitorsPingMonitorOutput) IntervalInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetPingMonitorsPingMonitor) int { return v.IntervalInSeconds }).(pulumi.IntOutput)
}

// Enables or disables the monitor. Set to 'true' to launch monitoring.
func (o GetPingMonitorsPingMonitorOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPingMonitorsPingMonitor) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The port on which to probe endpoints. If unspecified, probes will use the default port of their protocol.
func (o GetPingMonitorsPingMonitorOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetPingMonitorsPingMonitor) int { return v.Port }).(pulumi.IntOutput)
}

// The protocols for ping probes.
func (o GetPingMonitorsPingMonitorOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetPingMonitorsPingMonitor) string { return v.Protocol }).(pulumi.StringOutput)
}

// A URL for fetching the probe results.
func (o GetPingMonitorsPingMonitorOutput) ResultsUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetPingMonitorsPingMonitor) string { return v.ResultsUrl }).(pulumi.StringOutput)
}

// A list of targets (hostnames or IP addresses) of the probe.
func (o GetPingMonitorsPingMonitorOutput) Targets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPingMonitorsPingMonitor) []string { return v.Targets }).(pulumi.StringArrayOutput)
}

// The RFC 3339-formatted creation date and time of the probe.
func (o GetPingMonitorsPingMonitorOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetPingMonitorsPingMonitor) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The probe timeout in seconds. Valid values: 10, 20, 30, and 60. The probe timeout must be less than or equal to `intervalInSeconds` for monitors.
func (o GetPingMonitorsPingMonitorOutput) TimeoutInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetPingMonitorsPingMonitor) int { return v.TimeoutInSeconds }).(pulumi.IntOutput)
}

// A list of names of vantage points from which to execute the probe.
func (o GetPingMonitorsPingMonitorOutput) VantagePointNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPingMonitorsPingMonitor) []string { return v.VantagePointNames }).(pulumi.StringArrayOutput)
}

type GetPingMonitorsPingMonitorArrayOutput struct{ *pulumi.OutputState }

func (GetPingMonitorsPingMonitorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPingMonitorsPingMonitor)(nil)).Elem()
}

func (o GetPingMonitorsPingMonitorArrayOutput) ToGetPingMonitorsPingMonitorArrayOutput() GetPingMonitorsPingMonitorArrayOutput {
	return o
}

func (o GetPingMonitorsPingMonitorArrayOutput) ToGetPingMonitorsPingMonitorArrayOutputWithContext(ctx context.Context) GetPingMonitorsPingMonitorArrayOutput {
	return o
}

func (o GetPingMonitorsPingMonitorArrayOutput) Index(i pulumi.IntInput) GetPingMonitorsPingMonitorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPingMonitorsPingMonitor {
		return vs[0].([]GetPingMonitorsPingMonitor)[vs[1].(int)]
	}).(GetPingMonitorsPingMonitorOutput)
}

type GetPingProbeResultsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetPingProbeResultsFilterInput is an input type that accepts GetPingProbeResultsFilterArgs and GetPingProbeResultsFilterOutput values.
// You can construct a concrete instance of `GetPingProbeResultsFilterInput` via:
//
//	GetPingProbeResultsFilterArgs{...}
type GetPingProbeResultsFilterInput interface {
	pulumi.Input

	ToGetPingProbeResultsFilterOutput() GetPingProbeResultsFilterOutput
	ToGetPingProbeResultsFilterOutputWithContext(context.Context) GetPingProbeResultsFilterOutput
}

type GetPingProbeResultsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetPingProbeResultsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPingProbeResultsFilter)(nil)).Elem()
}

func (i GetPingProbeResultsFilterArgs) ToGetPingProbeResultsFilterOutput() GetPingProbeResultsFilterOutput {
	return i.ToGetPingProbeResultsFilterOutputWithContext(context.Background())
}

func (i GetPingProbeResultsFilterArgs) ToGetPingProbeResultsFilterOutputWithContext(ctx context.Context) GetPingProbeResultsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPingProbeResultsFilterOutput)
}

// GetPingProbeResultsFilterArrayInput is an input type that accepts GetPingProbeResultsFilterArray and GetPingProbeResultsFilterArrayOutput values.
// You can construct a concrete instance of `GetPingProbeResultsFilterArrayInput` via:
//
//	GetPingProbeResultsFilterArray{ GetPingProbeResultsFilterArgs{...} }
type GetPingProbeResultsFilterArrayInput interface {
	pulumi.Input

	ToGetPingProbeResultsFilterArrayOutput() GetPingProbeResultsFilterArrayOutput
	ToGetPingProbeResultsFilterArrayOutputWithContext(context.Context) GetPingProbeResultsFilterArrayOutput
}

type GetPingProbeResultsFilterArray []GetPingProbeResultsFilterInput

func (GetPingProbeResultsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPingProbeResultsFilter)(nil)).Elem()
}

func (i GetPingProbeResultsFilterArray) ToGetPingProbeResultsFilterArrayOutput() GetPingProbeResultsFilterArrayOutput {
	return i.ToGetPingProbeResultsFilterArrayOutputWithContext(context.Background())
}

func (i GetPingProbeResultsFilterArray) ToGetPingProbeResultsFilterArrayOutputWithContext(ctx context.Context) GetPingProbeResultsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPingProbeResultsFilterArrayOutput)
}

type GetPingProbeResultsFilterOutput struct{ *pulumi.OutputState }

func (GetPingProbeResultsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPingProbeResultsFilter)(nil)).Elem()
}

func (o GetPingProbeResultsFilterOutput) ToGetPingProbeResultsFilterOutput() GetPingProbeResultsFilterOutput {
	return o
}

func (o GetPingProbeResultsFilterOutput) ToGetPingProbeResultsFilterOutputWithContext(ctx context.Context) GetPingProbeResultsFilterOutput {
	return o
}

func (o GetPingProbeResultsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPingProbeResultsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetPingProbeResultsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetPingProbeResultsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetPingProbeResultsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPingProbeResultsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetPingProbeResultsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetPingProbeResultsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPingProbeResultsFilter)(nil)).Elem()
}

func (o GetPingProbeResultsFilterArrayOutput) ToGetPingProbeResultsFilterArrayOutput() GetPingProbeResultsFilterArrayOutput {
	return o
}

func (o GetPingProbeResultsFilterArrayOutput) ToGetPingProbeResultsFilterArrayOutputWithContext(ctx context.Context) GetPingProbeResultsFilterArrayOutput {
	return o
}

func (o GetPingProbeResultsFilterArrayOutput) Index(i pulumi.IntInput) GetPingProbeResultsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPingProbeResultsFilter {
		return vs[0].([]GetPingProbeResultsFilter)[vs[1].(int)]
	}).(GetPingProbeResultsFilterOutput)
}

type GetPingProbeResultsPingProbeResult struct {
	// The network connection results.
	Connections []GetPingProbeResultsPingProbeResultConnection `pulumi:"connections"`
	// The DNS resolution results.
	Dns []GetPingProbeResultsPingProbeResultDn `pulumi:"dns"`
	// The time immediately before the vantage point finishes the domain name lookup for the resource.
	DomainLookupEnd float64 `pulumi:"domainLookupEnd"`
	// The time immediately before the vantage point starts the domain name lookup for the resource.
	DomainLookupStart float64 `pulumi:"domainLookupStart"`
	// The category of error if an error occurs executing the probe. The `errorMessage` field provides a message with the error details.
	// * NONE - No error
	// * DNS - DNS errors
	// * TRANSPORT - Transport-related errors, for example a "TLS certificate expired" error.
	// * NETWORK - Network-related errors, for example a "network unreachable" error.
	// * SYSTEM - Internal system errors.
	ErrorCategory string `pulumi:"errorCategory"`
	// The error information indicating why a probe execution failed.
	ErrorMessage string `pulumi:"errorMessage"`
	// The ICMP code of the response message.  This field is not used when the protocol is set to TCP.  For more information on ICMP codes, see [Internet Control Message Protocol (ICMP) Parameters](https://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml).
	IcmpCode int `pulumi:"icmpCode"`
	// True if the probe result is determined to be healthy based on probe type-specific criteria.  For HTTP probes, a probe result is considered healthy if the HTTP response code is greater than or equal to 200 and less than 300.
	IsHealthy bool `pulumi:"isHealthy"`
	// True if the probe did not complete before the configured `timeoutInSeconds` value.
	IsTimedOut bool `pulumi:"isTimedOut"`
	// A value identifying this specific probe result. The key is only unique within the results of its probe configuration. The key may be reused after 90 days.
	Key string `pulumi:"key"`
	// The latency of the probe execution, in milliseconds.
	LatencyInMs float64 `pulumi:"latencyInMs"`
	// The OCID of a monitor or on-demand probe.
	ProbeConfigurationId string `pulumi:"probeConfigurationId"`
	// The protocols for ping probes.
	Protocol string `pulumi:"protocol"`
	// The date and time the probe was executed, expressed in milliseconds since the POSIX epoch. This field is defined by the PerformanceResourceTiming interface of the W3C Resource Timing specification. For more information, see [Resource Timing](https://w3c.github.io/resource-timing/#sec-resource-timing).
	StartTime float64 `pulumi:"startTime"`
	// Filters results that match the `target`.
	Target string `pulumi:"target"`
	// The name of the vantage point that executed the probe.
	VantagePointName string `pulumi:"vantagePointName"`
}

// GetPingProbeResultsPingProbeResultInput is an input type that accepts GetPingProbeResultsPingProbeResultArgs and GetPingProbeResultsPingProbeResultOutput values.
// You can construct a concrete instance of `GetPingProbeResultsPingProbeResultInput` via:
//
//	GetPingProbeResultsPingProbeResultArgs{...}
type GetPingProbeResultsPingProbeResultInput interface {
	pulumi.Input

	ToGetPingProbeResultsPingProbeResultOutput() GetPingProbeResultsPingProbeResultOutput
	ToGetPingProbeResultsPingProbeResultOutputWithContext(context.Context) GetPingProbeResultsPingProbeResultOutput
}

type GetPingProbeResultsPingProbeResultArgs struct {
	// The network connection results.
	Connections GetPingProbeResultsPingProbeResultConnectionArrayInput `pulumi:"connections"`
	// The DNS resolution results.
	Dns GetPingProbeResultsPingProbeResultDnArrayInput `pulumi:"dns"`
	// The time immediately before the vantage point finishes the domain name lookup for the resource.
	DomainLookupEnd pulumi.Float64Input `pulumi:"domainLookupEnd"`
	// The time immediately before the vantage point starts the domain name lookup for the resource.
	DomainLookupStart pulumi.Float64Input `pulumi:"domainLookupStart"`
	// The category of error if an error occurs executing the probe. The `errorMessage` field provides a message with the error details.
	// * NONE - No error
	// * DNS - DNS errors
	// * TRANSPORT - Transport-related errors, for example a "TLS certificate expired" error.
	// * NETWORK - Network-related errors, for example a "network unreachable" error.
	// * SYSTEM - Internal system errors.
	ErrorCategory pulumi.StringInput `pulumi:"errorCategory"`
	// The error information indicating why a probe execution failed.
	ErrorMessage pulumi.StringInput `pulumi:"errorMessage"`
	// The ICMP code of the response message.  This field is not used when the protocol is set to TCP.  For more information on ICMP codes, see [Internet Control Message Protocol (ICMP) Parameters](https://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml).
	IcmpCode pulumi.IntInput `pulumi:"icmpCode"`
	// True if the probe result is determined to be healthy based on probe type-specific criteria.  For HTTP probes, a probe result is considered healthy if the HTTP response code is greater than or equal to 200 and less than 300.
	IsHealthy pulumi.BoolInput `pulumi:"isHealthy"`
	// True if the probe did not complete before the configured `timeoutInSeconds` value.
	IsTimedOut pulumi.BoolInput `pulumi:"isTimedOut"`
	// A value identifying this specific probe result. The key is only unique within the results of its probe configuration. The key may be reused after 90 days.
	Key pulumi.StringInput `pulumi:"key"`
	// The latency of the probe execution, in milliseconds.
	LatencyInMs pulumi.Float64Input `pulumi:"latencyInMs"`
	// The OCID of a monitor or on-demand probe.
	ProbeConfigurationId pulumi.StringInput `pulumi:"probeConfigurationId"`
	// The protocols for ping probes.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The date and time the probe was executed, expressed in milliseconds since the POSIX epoch. This field is defined by the PerformanceResourceTiming interface of the W3C Resource Timing specification. For more information, see [Resource Timing](https://w3c.github.io/resource-timing/#sec-resource-timing).
	StartTime pulumi.Float64Input `pulumi:"startTime"`
	// Filters results that match the `target`.
	Target pulumi.StringInput `pulumi:"target"`
	// The name of the vantage point that executed the probe.
	VantagePointName pulumi.StringInput `pulumi:"vantagePointName"`
}

func (GetPingProbeResultsPingProbeResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPingProbeResultsPingProbeResult)(nil)).Elem()
}

func (i GetPingProbeResultsPingProbeResultArgs) ToGetPingProbeResultsPingProbeResultOutput() GetPingProbeResultsPingProbeResultOutput {
	return i.ToGetPingProbeResultsPingProbeResultOutputWithContext(context.Background())
}

func (i GetPingProbeResultsPingProbeResultArgs) ToGetPingProbeResultsPingProbeResultOutputWithContext(ctx context.Context) GetPingProbeResultsPingProbeResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPingProbeResultsPingProbeResultOutput)
}

// GetPingProbeResultsPingProbeResultArrayInput is an input type that accepts GetPingProbeResultsPingProbeResultArray and GetPingProbeResultsPingProbeResultArrayOutput values.
// You can construct a concrete instance of `GetPingProbeResultsPingProbeResultArrayInput` via:
//
//	GetPingProbeResultsPingProbeResultArray{ GetPingProbeResultsPingProbeResultArgs{...} }
type GetPingProbeResultsPingProbeResultArrayInput interface {
	pulumi.Input

	ToGetPingProbeResultsPingProbeResultArrayOutput() GetPingProbeResultsPingProbeResultArrayOutput
	ToGetPingProbeResultsPingProbeResultArrayOutputWithContext(context.Context) GetPingProbeResultsPingProbeResultArrayOutput
}

type GetPingProbeResultsPingProbeResultArray []GetPingProbeResultsPingProbeResultInput

func (GetPingProbeResultsPingProbeResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPingProbeResultsPingProbeResult)(nil)).Elem()
}

func (i GetPingProbeResultsPingProbeResultArray) ToGetPingProbeResultsPingProbeResultArrayOutput() GetPingProbeResultsPingProbeResultArrayOutput {
	return i.ToGetPingProbeResultsPingProbeResultArrayOutputWithContext(context.Background())
}

func (i GetPingProbeResultsPingProbeResultArray) ToGetPingProbeResultsPingProbeResultArrayOutputWithContext(ctx context.Context) GetPingProbeResultsPingProbeResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPingProbeResultsPingProbeResultArrayOutput)
}

type GetPingProbeResultsPingProbeResultOutput struct{ *pulumi.OutputState }

func (GetPingProbeResultsPingProbeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPingProbeResultsPingProbeResult)(nil)).Elem()
}

func (o GetPingProbeResultsPingProbeResultOutput) ToGetPingProbeResultsPingProbeResultOutput() GetPingProbeResultsPingProbeResultOutput {
	return o
}

func (o GetPingProbeResultsPingProbeResultOutput) ToGetPingProbeResultsPingProbeResultOutputWithContext(ctx context.Context) GetPingProbeResultsPingProbeResultOutput {
	return o
}

// The network connection results.
func (o GetPingProbeResultsPingProbeResultOutput) Connections() GetPingProbeResultsPingProbeResultConnectionArrayOutput {
	return o.ApplyT(func(v GetPingProbeResultsPingProbeResult) []GetPingProbeResultsPingProbeResultConnection {
		return v.Connections
	}).(GetPingProbeResultsPingProbeResultConnectionArrayOutput)
}

// The DNS resolution results.
func (o GetPingProbeResultsPingProbeResultOutput) Dns() GetPingProbeResultsPingProbeResultDnArrayOutput {
	return o.ApplyT(func(v GetPingProbeResultsPingProbeResult) []GetPingProbeResultsPingProbeResultDn { return v.Dns }).(GetPingProbeResultsPingProbeResultDnArrayOutput)
}

// The time immediately before the vantage point finishes the domain name lookup for the resource.
func (o GetPingProbeResultsPingProbeResultOutput) DomainLookupEnd() pulumi.Float64Output {
	return o.ApplyT(func(v GetPingProbeResultsPingProbeResult) float64 { return v.DomainLookupEnd }).(pulumi.Float64Output)
}

// The time immediately before the vantage point starts the domain name lookup for the resource.
func (o GetPingProbeResultsPingProbeResultOutput) DomainLookupStart() pulumi.Float64Output {
	return o.ApplyT(func(v GetPingProbeResultsPingProbeResult) float64 { return v.DomainLookupStart }).(pulumi.Float64Output)
}

// The category of error if an error occurs executing the probe. The `errorMessage` field provides a message with the error details.
// * NONE - No error
// * DNS - DNS errors
// * TRANSPORT - Transport-related errors, for example a "TLS certificate expired" error.
// * NETWORK - Network-related errors, for example a "network unreachable" error.
// * SYSTEM - Internal system errors.
func (o GetPingProbeResultsPingProbeResultOutput) ErrorCategory() pulumi.StringOutput {
	return o.ApplyT(func(v GetPingProbeResultsPingProbeResult) string { return v.ErrorCategory }).(pulumi.StringOutput)
}

// The error information indicating why a probe execution failed.
func (o GetPingProbeResultsPingProbeResultOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetPingProbeResultsPingProbeResult) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

// The ICMP code of the response message.  This field is not used when the protocol is set to TCP.  For more information on ICMP codes, see [Internet Control Message Protocol (ICMP) Parameters](https://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml).
func (o GetPingProbeResultsPingProbeResultOutput) IcmpCode() pulumi.IntOutput {
	return o.ApplyT(func(v GetPingProbeResultsPingProbeResult) int { return v.IcmpCode }).(pulumi.IntOutput)
}

// True if the probe result is determined to be healthy based on probe type-specific criteria.  For HTTP probes, a probe result is considered healthy if the HTTP response code is greater than or equal to 200 and less than 300.
func (o GetPingProbeResultsPingProbeResultOutput) IsHealthy() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPingProbeResultsPingProbeResult) bool { return v.IsHealthy }).(pulumi.BoolOutput)
}

// True if the probe did not complete before the configured `timeoutInSeconds` value.
func (o GetPingProbeResultsPingProbeResultOutput) IsTimedOut() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPingProbeResultsPingProbeResult) bool { return v.IsTimedOut }).(pulumi.BoolOutput)
}

// A value identifying this specific probe result. The key is only unique within the results of its probe configuration. The key may be reused after 90 days.
func (o GetPingProbeResultsPingProbeResultOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetPingProbeResultsPingProbeResult) string { return v.Key }).(pulumi.StringOutput)
}

// The latency of the probe execution, in milliseconds.
func (o GetPingProbeResultsPingProbeResultOutput) LatencyInMs() pulumi.Float64Output {
	return o.ApplyT(func(v GetPingProbeResultsPingProbeResult) float64 { return v.LatencyInMs }).(pulumi.Float64Output)
}

// The OCID of a monitor or on-demand probe.
func (o GetPingProbeResultsPingProbeResultOutput) ProbeConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPingProbeResultsPingProbeResult) string { return v.ProbeConfigurationId }).(pulumi.StringOutput)
}

// The protocols for ping probes.
func (o GetPingProbeResultsPingProbeResultOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetPingProbeResultsPingProbeResult) string { return v.Protocol }).(pulumi.StringOutput)
}

// The date and time the probe was executed, expressed in milliseconds since the POSIX epoch. This field is defined by the PerformanceResourceTiming interface of the W3C Resource Timing specification. For more information, see [Resource Timing](https://w3c.github.io/resource-timing/#sec-resource-timing).
func (o GetPingProbeResultsPingProbeResultOutput) StartTime() pulumi.Float64Output {
	return o.ApplyT(func(v GetPingProbeResultsPingProbeResult) float64 { return v.StartTime }).(pulumi.Float64Output)
}

// Filters results that match the `target`.
func (o GetPingProbeResultsPingProbeResultOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v GetPingProbeResultsPingProbeResult) string { return v.Target }).(pulumi.StringOutput)
}

// The name of the vantage point that executed the probe.
func (o GetPingProbeResultsPingProbeResultOutput) VantagePointName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPingProbeResultsPingProbeResult) string { return v.VantagePointName }).(pulumi.StringOutput)
}

type GetPingProbeResultsPingProbeResultArrayOutput struct{ *pulumi.OutputState }

func (GetPingProbeResultsPingProbeResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPingProbeResultsPingProbeResult)(nil)).Elem()
}

func (o GetPingProbeResultsPingProbeResultArrayOutput) ToGetPingProbeResultsPingProbeResultArrayOutput() GetPingProbeResultsPingProbeResultArrayOutput {
	return o
}

func (o GetPingProbeResultsPingProbeResultArrayOutput) ToGetPingProbeResultsPingProbeResultArrayOutputWithContext(ctx context.Context) GetPingProbeResultsPingProbeResultArrayOutput {
	return o
}

func (o GetPingProbeResultsPingProbeResultArrayOutput) Index(i pulumi.IntInput) GetPingProbeResultsPingProbeResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPingProbeResultsPingProbeResult {
		return vs[0].([]GetPingProbeResultsPingProbeResult)[vs[1].(int)]
	}).(GetPingProbeResultsPingProbeResultOutput)
}

type GetPingProbeResultsPingProbeResultConnection struct {
	// The connection IP address.
	Address string `pulumi:"address"`
	// The port.
	Port int `pulumi:"port"`
}

// GetPingProbeResultsPingProbeResultConnectionInput is an input type that accepts GetPingProbeResultsPingProbeResultConnectionArgs and GetPingProbeResultsPingProbeResultConnectionOutput values.
// You can construct a concrete instance of `GetPingProbeResultsPingProbeResultConnectionInput` via:
//
//	GetPingProbeResultsPingProbeResultConnectionArgs{...}
type GetPingProbeResultsPingProbeResultConnectionInput interface {
	pulumi.Input

	ToGetPingProbeResultsPingProbeResultConnectionOutput() GetPingProbeResultsPingProbeResultConnectionOutput
	ToGetPingProbeResultsPingProbeResultConnectionOutputWithContext(context.Context) GetPingProbeResultsPingProbeResultConnectionOutput
}

type GetPingProbeResultsPingProbeResultConnectionArgs struct {
	// The connection IP address.
	Address pulumi.StringInput `pulumi:"address"`
	// The port.
	Port pulumi.IntInput `pulumi:"port"`
}

func (GetPingProbeResultsPingProbeResultConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPingProbeResultsPingProbeResultConnection)(nil)).Elem()
}

func (i GetPingProbeResultsPingProbeResultConnectionArgs) ToGetPingProbeResultsPingProbeResultConnectionOutput() GetPingProbeResultsPingProbeResultConnectionOutput {
	return i.ToGetPingProbeResultsPingProbeResultConnectionOutputWithContext(context.Background())
}

func (i GetPingProbeResultsPingProbeResultConnectionArgs) ToGetPingProbeResultsPingProbeResultConnectionOutputWithContext(ctx context.Context) GetPingProbeResultsPingProbeResultConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPingProbeResultsPingProbeResultConnectionOutput)
}

// GetPingProbeResultsPingProbeResultConnectionArrayInput is an input type that accepts GetPingProbeResultsPingProbeResultConnectionArray and GetPingProbeResultsPingProbeResultConnectionArrayOutput values.
// You can construct a concrete instance of `GetPingProbeResultsPingProbeResultConnectionArrayInput` via:
//
//	GetPingProbeResultsPingProbeResultConnectionArray{ GetPingProbeResultsPingProbeResultConnectionArgs{...} }
type GetPingProbeResultsPingProbeResultConnectionArrayInput interface {
	pulumi.Input

	ToGetPingProbeResultsPingProbeResultConnectionArrayOutput() GetPingProbeResultsPingProbeResultConnectionArrayOutput
	ToGetPingProbeResultsPingProbeResultConnectionArrayOutputWithContext(context.Context) GetPingProbeResultsPingProbeResultConnectionArrayOutput
}

type GetPingProbeResultsPingProbeResultConnectionArray []GetPingProbeResultsPingProbeResultConnectionInput

func (GetPingProbeResultsPingProbeResultConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPingProbeResultsPingProbeResultConnection)(nil)).Elem()
}

func (i GetPingProbeResultsPingProbeResultConnectionArray) ToGetPingProbeResultsPingProbeResultConnectionArrayOutput() GetPingProbeResultsPingProbeResultConnectionArrayOutput {
	return i.ToGetPingProbeResultsPingProbeResultConnectionArrayOutputWithContext(context.Background())
}

func (i GetPingProbeResultsPingProbeResultConnectionArray) ToGetPingProbeResultsPingProbeResultConnectionArrayOutputWithContext(ctx context.Context) GetPingProbeResultsPingProbeResultConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPingProbeResultsPingProbeResultConnectionArrayOutput)
}

type GetPingProbeResultsPingProbeResultConnectionOutput struct{ *pulumi.OutputState }

func (GetPingProbeResultsPingProbeResultConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPingProbeResultsPingProbeResultConnection)(nil)).Elem()
}

func (o GetPingProbeResultsPingProbeResultConnectionOutput) ToGetPingProbeResultsPingProbeResultConnectionOutput() GetPingProbeResultsPingProbeResultConnectionOutput {
	return o
}

func (o GetPingProbeResultsPingProbeResultConnectionOutput) ToGetPingProbeResultsPingProbeResultConnectionOutputWithContext(ctx context.Context) GetPingProbeResultsPingProbeResultConnectionOutput {
	return o
}

// The connection IP address.
func (o GetPingProbeResultsPingProbeResultConnectionOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetPingProbeResultsPingProbeResultConnection) string { return v.Address }).(pulumi.StringOutput)
}

// The port.
func (o GetPingProbeResultsPingProbeResultConnectionOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetPingProbeResultsPingProbeResultConnection) int { return v.Port }).(pulumi.IntOutput)
}

type GetPingProbeResultsPingProbeResultConnectionArrayOutput struct{ *pulumi.OutputState }

func (GetPingProbeResultsPingProbeResultConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPingProbeResultsPingProbeResultConnection)(nil)).Elem()
}

func (o GetPingProbeResultsPingProbeResultConnectionArrayOutput) ToGetPingProbeResultsPingProbeResultConnectionArrayOutput() GetPingProbeResultsPingProbeResultConnectionArrayOutput {
	return o
}

func (o GetPingProbeResultsPingProbeResultConnectionArrayOutput) ToGetPingProbeResultsPingProbeResultConnectionArrayOutputWithContext(ctx context.Context) GetPingProbeResultsPingProbeResultConnectionArrayOutput {
	return o
}

func (o GetPingProbeResultsPingProbeResultConnectionArrayOutput) Index(i pulumi.IntInput) GetPingProbeResultsPingProbeResultConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPingProbeResultsPingProbeResultConnection {
		return vs[0].([]GetPingProbeResultsPingProbeResultConnection)[vs[1].(int)]
	}).(GetPingProbeResultsPingProbeResultConnectionOutput)
}

type GetPingProbeResultsPingProbeResultDn struct {
	// The addresses returned by DNS resolution.
	Addresses []string `pulumi:"addresses"`
	// Total DNS resolution duration, in milliseconds. Calculated using `domainLookupEnd` minus `domainLookupStart`.
	DomainLookupDuration float64 `pulumi:"domainLookupDuration"`
}

// GetPingProbeResultsPingProbeResultDnInput is an input type that accepts GetPingProbeResultsPingProbeResultDnArgs and GetPingProbeResultsPingProbeResultDnOutput values.
// You can construct a concrete instance of `GetPingProbeResultsPingProbeResultDnInput` via:
//
//	GetPingProbeResultsPingProbeResultDnArgs{...}
type GetPingProbeResultsPingProbeResultDnInput interface {
	pulumi.Input

	ToGetPingProbeResultsPingProbeResultDnOutput() GetPingProbeResultsPingProbeResultDnOutput
	ToGetPingProbeResultsPingProbeResultDnOutputWithContext(context.Context) GetPingProbeResultsPingProbeResultDnOutput
}

type GetPingProbeResultsPingProbeResultDnArgs struct {
	// The addresses returned by DNS resolution.
	Addresses pulumi.StringArrayInput `pulumi:"addresses"`
	// Total DNS resolution duration, in milliseconds. Calculated using `domainLookupEnd` minus `domainLookupStart`.
	DomainLookupDuration pulumi.Float64Input `pulumi:"domainLookupDuration"`
}

func (GetPingProbeResultsPingProbeResultDnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPingProbeResultsPingProbeResultDn)(nil)).Elem()
}

func (i GetPingProbeResultsPingProbeResultDnArgs) ToGetPingProbeResultsPingProbeResultDnOutput() GetPingProbeResultsPingProbeResultDnOutput {
	return i.ToGetPingProbeResultsPingProbeResultDnOutputWithContext(context.Background())
}

func (i GetPingProbeResultsPingProbeResultDnArgs) ToGetPingProbeResultsPingProbeResultDnOutputWithContext(ctx context.Context) GetPingProbeResultsPingProbeResultDnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPingProbeResultsPingProbeResultDnOutput)
}

// GetPingProbeResultsPingProbeResultDnArrayInput is an input type that accepts GetPingProbeResultsPingProbeResultDnArray and GetPingProbeResultsPingProbeResultDnArrayOutput values.
// You can construct a concrete instance of `GetPingProbeResultsPingProbeResultDnArrayInput` via:
//
//	GetPingProbeResultsPingProbeResultDnArray{ GetPingProbeResultsPingProbeResultDnArgs{...} }
type GetPingProbeResultsPingProbeResultDnArrayInput interface {
	pulumi.Input

	ToGetPingProbeResultsPingProbeResultDnArrayOutput() GetPingProbeResultsPingProbeResultDnArrayOutput
	ToGetPingProbeResultsPingProbeResultDnArrayOutputWithContext(context.Context) GetPingProbeResultsPingProbeResultDnArrayOutput
}

type GetPingProbeResultsPingProbeResultDnArray []GetPingProbeResultsPingProbeResultDnInput

func (GetPingProbeResultsPingProbeResultDnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPingProbeResultsPingProbeResultDn)(nil)).Elem()
}

func (i GetPingProbeResultsPingProbeResultDnArray) ToGetPingProbeResultsPingProbeResultDnArrayOutput() GetPingProbeResultsPingProbeResultDnArrayOutput {
	return i.ToGetPingProbeResultsPingProbeResultDnArrayOutputWithContext(context.Background())
}

func (i GetPingProbeResultsPingProbeResultDnArray) ToGetPingProbeResultsPingProbeResultDnArrayOutputWithContext(ctx context.Context) GetPingProbeResultsPingProbeResultDnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPingProbeResultsPingProbeResultDnArrayOutput)
}

type GetPingProbeResultsPingProbeResultDnOutput struct{ *pulumi.OutputState }

func (GetPingProbeResultsPingProbeResultDnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPingProbeResultsPingProbeResultDn)(nil)).Elem()
}

func (o GetPingProbeResultsPingProbeResultDnOutput) ToGetPingProbeResultsPingProbeResultDnOutput() GetPingProbeResultsPingProbeResultDnOutput {
	return o
}

func (o GetPingProbeResultsPingProbeResultDnOutput) ToGetPingProbeResultsPingProbeResultDnOutputWithContext(ctx context.Context) GetPingProbeResultsPingProbeResultDnOutput {
	return o
}

// The addresses returned by DNS resolution.
func (o GetPingProbeResultsPingProbeResultDnOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPingProbeResultsPingProbeResultDn) []string { return v.Addresses }).(pulumi.StringArrayOutput)
}

// Total DNS resolution duration, in milliseconds. Calculated using `domainLookupEnd` minus `domainLookupStart`.
func (o GetPingProbeResultsPingProbeResultDnOutput) DomainLookupDuration() pulumi.Float64Output {
	return o.ApplyT(func(v GetPingProbeResultsPingProbeResultDn) float64 { return v.DomainLookupDuration }).(pulumi.Float64Output)
}

type GetPingProbeResultsPingProbeResultDnArrayOutput struct{ *pulumi.OutputState }

func (GetPingProbeResultsPingProbeResultDnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPingProbeResultsPingProbeResultDn)(nil)).Elem()
}

func (o GetPingProbeResultsPingProbeResultDnArrayOutput) ToGetPingProbeResultsPingProbeResultDnArrayOutput() GetPingProbeResultsPingProbeResultDnArrayOutput {
	return o
}

func (o GetPingProbeResultsPingProbeResultDnArrayOutput) ToGetPingProbeResultsPingProbeResultDnArrayOutputWithContext(ctx context.Context) GetPingProbeResultsPingProbeResultDnArrayOutput {
	return o
}

func (o GetPingProbeResultsPingProbeResultDnArrayOutput) Index(i pulumi.IntInput) GetPingProbeResultsPingProbeResultDnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPingProbeResultsPingProbeResultDn {
		return vs[0].([]GetPingProbeResultsPingProbeResultDn)[vs[1].(int)]
	}).(GetPingProbeResultsPingProbeResultDnOutput)
}

type GetVantagePointsFilter struct {
	// Filters results that exactly match the `name` field.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetVantagePointsFilterInput is an input type that accepts GetVantagePointsFilterArgs and GetVantagePointsFilterOutput values.
// You can construct a concrete instance of `GetVantagePointsFilterInput` via:
//
//	GetVantagePointsFilterArgs{...}
type GetVantagePointsFilterInput interface {
	pulumi.Input

	ToGetVantagePointsFilterOutput() GetVantagePointsFilterOutput
	ToGetVantagePointsFilterOutputWithContext(context.Context) GetVantagePointsFilterOutput
}

type GetVantagePointsFilterArgs struct {
	// Filters results that exactly match the `name` field.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVantagePointsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVantagePointsFilter)(nil)).Elem()
}

func (i GetVantagePointsFilterArgs) ToGetVantagePointsFilterOutput() GetVantagePointsFilterOutput {
	return i.ToGetVantagePointsFilterOutputWithContext(context.Background())
}

func (i GetVantagePointsFilterArgs) ToGetVantagePointsFilterOutputWithContext(ctx context.Context) GetVantagePointsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVantagePointsFilterOutput)
}

// GetVantagePointsFilterArrayInput is an input type that accepts GetVantagePointsFilterArray and GetVantagePointsFilterArrayOutput values.
// You can construct a concrete instance of `GetVantagePointsFilterArrayInput` via:
//
//	GetVantagePointsFilterArray{ GetVantagePointsFilterArgs{...} }
type GetVantagePointsFilterArrayInput interface {
	pulumi.Input

	ToGetVantagePointsFilterArrayOutput() GetVantagePointsFilterArrayOutput
	ToGetVantagePointsFilterArrayOutputWithContext(context.Context) GetVantagePointsFilterArrayOutput
}

type GetVantagePointsFilterArray []GetVantagePointsFilterInput

func (GetVantagePointsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVantagePointsFilter)(nil)).Elem()
}

func (i GetVantagePointsFilterArray) ToGetVantagePointsFilterArrayOutput() GetVantagePointsFilterArrayOutput {
	return i.ToGetVantagePointsFilterArrayOutputWithContext(context.Background())
}

func (i GetVantagePointsFilterArray) ToGetVantagePointsFilterArrayOutputWithContext(ctx context.Context) GetVantagePointsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVantagePointsFilterArrayOutput)
}

type GetVantagePointsFilterOutput struct{ *pulumi.OutputState }

func (GetVantagePointsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVantagePointsFilter)(nil)).Elem()
}

func (o GetVantagePointsFilterOutput) ToGetVantagePointsFilterOutput() GetVantagePointsFilterOutput {
	return o
}

func (o GetVantagePointsFilterOutput) ToGetVantagePointsFilterOutputWithContext(ctx context.Context) GetVantagePointsFilterOutput {
	return o
}

// Filters results that exactly match the `name` field.
func (o GetVantagePointsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVantagePointsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetVantagePointsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetVantagePointsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetVantagePointsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVantagePointsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVantagePointsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVantagePointsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVantagePointsFilter)(nil)).Elem()
}

func (o GetVantagePointsFilterArrayOutput) ToGetVantagePointsFilterArrayOutput() GetVantagePointsFilterArrayOutput {
	return o
}

func (o GetVantagePointsFilterArrayOutput) ToGetVantagePointsFilterArrayOutputWithContext(ctx context.Context) GetVantagePointsFilterArrayOutput {
	return o
}

func (o GetVantagePointsFilterArrayOutput) Index(i pulumi.IntInput) GetVantagePointsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVantagePointsFilter {
		return vs[0].([]GetVantagePointsFilter)[vs[1].(int)]
	}).(GetVantagePointsFilterOutput)
}

type GetVantagePointsHealthChecksVantagePoint struct {
	// Filters results that exactly match the `displayName` field.
	DisplayName string `pulumi:"displayName"`
	// Geographic information about a vantage point.
	Geos []GetVantagePointsHealthChecksVantagePointGeo `pulumi:"geos"`
	// Filters results that exactly match the `name` field.
	Name string `pulumi:"name"`
	// The organization on whose infrastructure this vantage point resides. Provider names are not unique, as Oracle Cloud Infrastructure maintains many vantage points in each major provider.
	ProviderName string `pulumi:"providerName"`
	// An array of objects that describe how traffic to this vantage point is routed, including which prefixes and ASNs connect it to the internet.
	Routings []GetVantagePointsHealthChecksVantagePointRouting `pulumi:"routings"`
}

// GetVantagePointsHealthChecksVantagePointInput is an input type that accepts GetVantagePointsHealthChecksVantagePointArgs and GetVantagePointsHealthChecksVantagePointOutput values.
// You can construct a concrete instance of `GetVantagePointsHealthChecksVantagePointInput` via:
//
//	GetVantagePointsHealthChecksVantagePointArgs{...}
type GetVantagePointsHealthChecksVantagePointInput interface {
	pulumi.Input

	ToGetVantagePointsHealthChecksVantagePointOutput() GetVantagePointsHealthChecksVantagePointOutput
	ToGetVantagePointsHealthChecksVantagePointOutputWithContext(context.Context) GetVantagePointsHealthChecksVantagePointOutput
}

type GetVantagePointsHealthChecksVantagePointArgs struct {
	// Filters results that exactly match the `displayName` field.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Geographic information about a vantage point.
	Geos GetVantagePointsHealthChecksVantagePointGeoArrayInput `pulumi:"geos"`
	// Filters results that exactly match the `name` field.
	Name pulumi.StringInput `pulumi:"name"`
	// The organization on whose infrastructure this vantage point resides. Provider names are not unique, as Oracle Cloud Infrastructure maintains many vantage points in each major provider.
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	// An array of objects that describe how traffic to this vantage point is routed, including which prefixes and ASNs connect it to the internet.
	Routings GetVantagePointsHealthChecksVantagePointRoutingArrayInput `pulumi:"routings"`
}

func (GetVantagePointsHealthChecksVantagePointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVantagePointsHealthChecksVantagePoint)(nil)).Elem()
}

func (i GetVantagePointsHealthChecksVantagePointArgs) ToGetVantagePointsHealthChecksVantagePointOutput() GetVantagePointsHealthChecksVantagePointOutput {
	return i.ToGetVantagePointsHealthChecksVantagePointOutputWithContext(context.Background())
}

func (i GetVantagePointsHealthChecksVantagePointArgs) ToGetVantagePointsHealthChecksVantagePointOutputWithContext(ctx context.Context) GetVantagePointsHealthChecksVantagePointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVantagePointsHealthChecksVantagePointOutput)
}

// GetVantagePointsHealthChecksVantagePointArrayInput is an input type that accepts GetVantagePointsHealthChecksVantagePointArray and GetVantagePointsHealthChecksVantagePointArrayOutput values.
// You can construct a concrete instance of `GetVantagePointsHealthChecksVantagePointArrayInput` via:
//
//	GetVantagePointsHealthChecksVantagePointArray{ GetVantagePointsHealthChecksVantagePointArgs{...} }
type GetVantagePointsHealthChecksVantagePointArrayInput interface {
	pulumi.Input

	ToGetVantagePointsHealthChecksVantagePointArrayOutput() GetVantagePointsHealthChecksVantagePointArrayOutput
	ToGetVantagePointsHealthChecksVantagePointArrayOutputWithContext(context.Context) GetVantagePointsHealthChecksVantagePointArrayOutput
}

type GetVantagePointsHealthChecksVantagePointArray []GetVantagePointsHealthChecksVantagePointInput

func (GetVantagePointsHealthChecksVantagePointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVantagePointsHealthChecksVantagePoint)(nil)).Elem()
}

func (i GetVantagePointsHealthChecksVantagePointArray) ToGetVantagePointsHealthChecksVantagePointArrayOutput() GetVantagePointsHealthChecksVantagePointArrayOutput {
	return i.ToGetVantagePointsHealthChecksVantagePointArrayOutputWithContext(context.Background())
}

func (i GetVantagePointsHealthChecksVantagePointArray) ToGetVantagePointsHealthChecksVantagePointArrayOutputWithContext(ctx context.Context) GetVantagePointsHealthChecksVantagePointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVantagePointsHealthChecksVantagePointArrayOutput)
}

type GetVantagePointsHealthChecksVantagePointOutput struct{ *pulumi.OutputState }

func (GetVantagePointsHealthChecksVantagePointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVantagePointsHealthChecksVantagePoint)(nil)).Elem()
}

func (o GetVantagePointsHealthChecksVantagePointOutput) ToGetVantagePointsHealthChecksVantagePointOutput() GetVantagePointsHealthChecksVantagePointOutput {
	return o
}

func (o GetVantagePointsHealthChecksVantagePointOutput) ToGetVantagePointsHealthChecksVantagePointOutputWithContext(ctx context.Context) GetVantagePointsHealthChecksVantagePointOutput {
	return o
}

// Filters results that exactly match the `displayName` field.
func (o GetVantagePointsHealthChecksVantagePointOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVantagePointsHealthChecksVantagePoint) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Geographic information about a vantage point.
func (o GetVantagePointsHealthChecksVantagePointOutput) Geos() GetVantagePointsHealthChecksVantagePointGeoArrayOutput {
	return o.ApplyT(func(v GetVantagePointsHealthChecksVantagePoint) []GetVantagePointsHealthChecksVantagePointGeo {
		return v.Geos
	}).(GetVantagePointsHealthChecksVantagePointGeoArrayOutput)
}

// Filters results that exactly match the `name` field.
func (o GetVantagePointsHealthChecksVantagePointOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVantagePointsHealthChecksVantagePoint) string { return v.Name }).(pulumi.StringOutput)
}

// The organization on whose infrastructure this vantage point resides. Provider names are not unique, as Oracle Cloud Infrastructure maintains many vantage points in each major provider.
func (o GetVantagePointsHealthChecksVantagePointOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVantagePointsHealthChecksVantagePoint) string { return v.ProviderName }).(pulumi.StringOutput)
}

// An array of objects that describe how traffic to this vantage point is routed, including which prefixes and ASNs connect it to the internet.
func (o GetVantagePointsHealthChecksVantagePointOutput) Routings() GetVantagePointsHealthChecksVantagePointRoutingArrayOutput {
	return o.ApplyT(func(v GetVantagePointsHealthChecksVantagePoint) []GetVantagePointsHealthChecksVantagePointRouting {
		return v.Routings
	}).(GetVantagePointsHealthChecksVantagePointRoutingArrayOutput)
}

type GetVantagePointsHealthChecksVantagePointArrayOutput struct{ *pulumi.OutputState }

func (GetVantagePointsHealthChecksVantagePointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVantagePointsHealthChecksVantagePoint)(nil)).Elem()
}

func (o GetVantagePointsHealthChecksVantagePointArrayOutput) ToGetVantagePointsHealthChecksVantagePointArrayOutput() GetVantagePointsHealthChecksVantagePointArrayOutput {
	return o
}

func (o GetVantagePointsHealthChecksVantagePointArrayOutput) ToGetVantagePointsHealthChecksVantagePointArrayOutputWithContext(ctx context.Context) GetVantagePointsHealthChecksVantagePointArrayOutput {
	return o
}

func (o GetVantagePointsHealthChecksVantagePointArrayOutput) Index(i pulumi.IntInput) GetVantagePointsHealthChecksVantagePointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVantagePointsHealthChecksVantagePoint {
		return vs[0].([]GetVantagePointsHealthChecksVantagePoint)[vs[1].(int)]
	}).(GetVantagePointsHealthChecksVantagePointOutput)
}

type GetVantagePointsHealthChecksVantagePointGeo struct {
	// The ISO 3166-2 code for this location's first-level administrative division, either a US state or Canadian province. Only included for locations in the US or Canada. For a list of codes, see [Country Codes](https://www.iso.org/obp/ui/#search).
	AdminDivCode string `pulumi:"adminDivCode"`
	// Common English-language name for the city.
	CityName string `pulumi:"cityName"`
	// The ISO 3166-1 alpha-2 country code. For a list of codes, see [Country Codes](https://www.iso.org/obp/ui/#search).
	CountryCode string `pulumi:"countryCode"`
	// The common English-language name for the country.
	CountryName string `pulumi:"countryName"`
	// An opaque identifier for the geographic location of the vantage point.
	GeoKey string `pulumi:"geoKey"`
	// Degrees north of the Equator.
	Latitude float64 `pulumi:"latitude"`
	// Degrees east of the prime meridian.
	Longitude float64 `pulumi:"longitude"`
}

// GetVantagePointsHealthChecksVantagePointGeoInput is an input type that accepts GetVantagePointsHealthChecksVantagePointGeoArgs and GetVantagePointsHealthChecksVantagePointGeoOutput values.
// You can construct a concrete instance of `GetVantagePointsHealthChecksVantagePointGeoInput` via:
//
//	GetVantagePointsHealthChecksVantagePointGeoArgs{...}
type GetVantagePointsHealthChecksVantagePointGeoInput interface {
	pulumi.Input

	ToGetVantagePointsHealthChecksVantagePointGeoOutput() GetVantagePointsHealthChecksVantagePointGeoOutput
	ToGetVantagePointsHealthChecksVantagePointGeoOutputWithContext(context.Context) GetVantagePointsHealthChecksVantagePointGeoOutput
}

type GetVantagePointsHealthChecksVantagePointGeoArgs struct {
	// The ISO 3166-2 code for this location's first-level administrative division, either a US state or Canadian province. Only included for locations in the US or Canada. For a list of codes, see [Country Codes](https://www.iso.org/obp/ui/#search).
	AdminDivCode pulumi.StringInput `pulumi:"adminDivCode"`
	// Common English-language name for the city.
	CityName pulumi.StringInput `pulumi:"cityName"`
	// The ISO 3166-1 alpha-2 country code. For a list of codes, see [Country Codes](https://www.iso.org/obp/ui/#search).
	CountryCode pulumi.StringInput `pulumi:"countryCode"`
	// The common English-language name for the country.
	CountryName pulumi.StringInput `pulumi:"countryName"`
	// An opaque identifier for the geographic location of the vantage point.
	GeoKey pulumi.StringInput `pulumi:"geoKey"`
	// Degrees north of the Equator.
	Latitude pulumi.Float64Input `pulumi:"latitude"`
	// Degrees east of the prime meridian.
	Longitude pulumi.Float64Input `pulumi:"longitude"`
}

func (GetVantagePointsHealthChecksVantagePointGeoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVantagePointsHealthChecksVantagePointGeo)(nil)).Elem()
}

func (i GetVantagePointsHealthChecksVantagePointGeoArgs) ToGetVantagePointsHealthChecksVantagePointGeoOutput() GetVantagePointsHealthChecksVantagePointGeoOutput {
	return i.ToGetVantagePointsHealthChecksVantagePointGeoOutputWithContext(context.Background())
}

func (i GetVantagePointsHealthChecksVantagePointGeoArgs) ToGetVantagePointsHealthChecksVantagePointGeoOutputWithContext(ctx context.Context) GetVantagePointsHealthChecksVantagePointGeoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVantagePointsHealthChecksVantagePointGeoOutput)
}

// GetVantagePointsHealthChecksVantagePointGeoArrayInput is an input type that accepts GetVantagePointsHealthChecksVantagePointGeoArray and GetVantagePointsHealthChecksVantagePointGeoArrayOutput values.
// You can construct a concrete instance of `GetVantagePointsHealthChecksVantagePointGeoArrayInput` via:
//
//	GetVantagePointsHealthChecksVantagePointGeoArray{ GetVantagePointsHealthChecksVantagePointGeoArgs{...} }
type GetVantagePointsHealthChecksVantagePointGeoArrayInput interface {
	pulumi.Input

	ToGetVantagePointsHealthChecksVantagePointGeoArrayOutput() GetVantagePointsHealthChecksVantagePointGeoArrayOutput
	ToGetVantagePointsHealthChecksVantagePointGeoArrayOutputWithContext(context.Context) GetVantagePointsHealthChecksVantagePointGeoArrayOutput
}

type GetVantagePointsHealthChecksVantagePointGeoArray []GetVantagePointsHealthChecksVantagePointGeoInput

func (GetVantagePointsHealthChecksVantagePointGeoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVantagePointsHealthChecksVantagePointGeo)(nil)).Elem()
}

func (i GetVantagePointsHealthChecksVantagePointGeoArray) ToGetVantagePointsHealthChecksVantagePointGeoArrayOutput() GetVantagePointsHealthChecksVantagePointGeoArrayOutput {
	return i.ToGetVantagePointsHealthChecksVantagePointGeoArrayOutputWithContext(context.Background())
}

func (i GetVantagePointsHealthChecksVantagePointGeoArray) ToGetVantagePointsHealthChecksVantagePointGeoArrayOutputWithContext(ctx context.Context) GetVantagePointsHealthChecksVantagePointGeoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVantagePointsHealthChecksVantagePointGeoArrayOutput)
}

type GetVantagePointsHealthChecksVantagePointGeoOutput struct{ *pulumi.OutputState }

func (GetVantagePointsHealthChecksVantagePointGeoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVantagePointsHealthChecksVantagePointGeo)(nil)).Elem()
}

func (o GetVantagePointsHealthChecksVantagePointGeoOutput) ToGetVantagePointsHealthChecksVantagePointGeoOutput() GetVantagePointsHealthChecksVantagePointGeoOutput {
	return o
}

func (o GetVantagePointsHealthChecksVantagePointGeoOutput) ToGetVantagePointsHealthChecksVantagePointGeoOutputWithContext(ctx context.Context) GetVantagePointsHealthChecksVantagePointGeoOutput {
	return o
}

// The ISO 3166-2 code for this location's first-level administrative division, either a US state or Canadian province. Only included for locations in the US or Canada. For a list of codes, see [Country Codes](https://www.iso.org/obp/ui/#search).
func (o GetVantagePointsHealthChecksVantagePointGeoOutput) AdminDivCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetVantagePointsHealthChecksVantagePointGeo) string { return v.AdminDivCode }).(pulumi.StringOutput)
}

// Common English-language name for the city.
func (o GetVantagePointsHealthChecksVantagePointGeoOutput) CityName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVantagePointsHealthChecksVantagePointGeo) string { return v.CityName }).(pulumi.StringOutput)
}

// The ISO 3166-1 alpha-2 country code. For a list of codes, see [Country Codes](https://www.iso.org/obp/ui/#search).
func (o GetVantagePointsHealthChecksVantagePointGeoOutput) CountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetVantagePointsHealthChecksVantagePointGeo) string { return v.CountryCode }).(pulumi.StringOutput)
}

// The common English-language name for the country.
func (o GetVantagePointsHealthChecksVantagePointGeoOutput) CountryName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVantagePointsHealthChecksVantagePointGeo) string { return v.CountryName }).(pulumi.StringOutput)
}

// An opaque identifier for the geographic location of the vantage point.
func (o GetVantagePointsHealthChecksVantagePointGeoOutput) GeoKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetVantagePointsHealthChecksVantagePointGeo) string { return v.GeoKey }).(pulumi.StringOutput)
}

// Degrees north of the Equator.
func (o GetVantagePointsHealthChecksVantagePointGeoOutput) Latitude() pulumi.Float64Output {
	return o.ApplyT(func(v GetVantagePointsHealthChecksVantagePointGeo) float64 { return v.Latitude }).(pulumi.Float64Output)
}

// Degrees east of the prime meridian.
func (o GetVantagePointsHealthChecksVantagePointGeoOutput) Longitude() pulumi.Float64Output {
	return o.ApplyT(func(v GetVantagePointsHealthChecksVantagePointGeo) float64 { return v.Longitude }).(pulumi.Float64Output)
}

type GetVantagePointsHealthChecksVantagePointGeoArrayOutput struct{ *pulumi.OutputState }

func (GetVantagePointsHealthChecksVantagePointGeoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVantagePointsHealthChecksVantagePointGeo)(nil)).Elem()
}

func (o GetVantagePointsHealthChecksVantagePointGeoArrayOutput) ToGetVantagePointsHealthChecksVantagePointGeoArrayOutput() GetVantagePointsHealthChecksVantagePointGeoArrayOutput {
	return o
}

func (o GetVantagePointsHealthChecksVantagePointGeoArrayOutput) ToGetVantagePointsHealthChecksVantagePointGeoArrayOutputWithContext(ctx context.Context) GetVantagePointsHealthChecksVantagePointGeoArrayOutput {
	return o
}

func (o GetVantagePointsHealthChecksVantagePointGeoArrayOutput) Index(i pulumi.IntInput) GetVantagePointsHealthChecksVantagePointGeoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVantagePointsHealthChecksVantagePointGeo {
		return vs[0].([]GetVantagePointsHealthChecksVantagePointGeo)[vs[1].(int)]
	}).(GetVantagePointsHealthChecksVantagePointGeoOutput)
}

type GetVantagePointsHealthChecksVantagePointRouting struct {
	// The registry label for `asn`, usually the name of the organization that owns the ASN. May be omitted or null.
	AsLabel string `pulumi:"asLabel"`
	// The Autonomous System Number (ASN) identifying the organization responsible for routing packets to `prefix`.
	Asn int `pulumi:"asn"`
	// An IP prefix (CIDR syntax) that is less specific than `address`, through which `address` is routed.
	Prefix string `pulumi:"prefix"`
	// An integer between 0 and 100 used to select between multiple origin ASNs when routing to `prefix`. Most prefixes have exactly one origin ASN, in which case `weight` will be 100.
	Weight int `pulumi:"weight"`
}

// GetVantagePointsHealthChecksVantagePointRoutingInput is an input type that accepts GetVantagePointsHealthChecksVantagePointRoutingArgs and GetVantagePointsHealthChecksVantagePointRoutingOutput values.
// You can construct a concrete instance of `GetVantagePointsHealthChecksVantagePointRoutingInput` via:
//
//	GetVantagePointsHealthChecksVantagePointRoutingArgs{...}
type GetVantagePointsHealthChecksVantagePointRoutingInput interface {
	pulumi.Input

	ToGetVantagePointsHealthChecksVantagePointRoutingOutput() GetVantagePointsHealthChecksVantagePointRoutingOutput
	ToGetVantagePointsHealthChecksVantagePointRoutingOutputWithContext(context.Context) GetVantagePointsHealthChecksVantagePointRoutingOutput
}

type GetVantagePointsHealthChecksVantagePointRoutingArgs struct {
	// The registry label for `asn`, usually the name of the organization that owns the ASN. May be omitted or null.
	AsLabel pulumi.StringInput `pulumi:"asLabel"`
	// The Autonomous System Number (ASN) identifying the organization responsible for routing packets to `prefix`.
	Asn pulumi.IntInput `pulumi:"asn"`
	// An IP prefix (CIDR syntax) that is less specific than `address`, through which `address` is routed.
	Prefix pulumi.StringInput `pulumi:"prefix"`
	// An integer between 0 and 100 used to select between multiple origin ASNs when routing to `prefix`. Most prefixes have exactly one origin ASN, in which case `weight` will be 100.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (GetVantagePointsHealthChecksVantagePointRoutingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVantagePointsHealthChecksVantagePointRouting)(nil)).Elem()
}

func (i GetVantagePointsHealthChecksVantagePointRoutingArgs) ToGetVantagePointsHealthChecksVantagePointRoutingOutput() GetVantagePointsHealthChecksVantagePointRoutingOutput {
	return i.ToGetVantagePointsHealthChecksVantagePointRoutingOutputWithContext(context.Background())
}

func (i GetVantagePointsHealthChecksVantagePointRoutingArgs) ToGetVantagePointsHealthChecksVantagePointRoutingOutputWithContext(ctx context.Context) GetVantagePointsHealthChecksVantagePointRoutingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVantagePointsHealthChecksVantagePointRoutingOutput)
}

// GetVantagePointsHealthChecksVantagePointRoutingArrayInput is an input type that accepts GetVantagePointsHealthChecksVantagePointRoutingArray and GetVantagePointsHealthChecksVantagePointRoutingArrayOutput values.
// You can construct a concrete instance of `GetVantagePointsHealthChecksVantagePointRoutingArrayInput` via:
//
//	GetVantagePointsHealthChecksVantagePointRoutingArray{ GetVantagePointsHealthChecksVantagePointRoutingArgs{...} }
type GetVantagePointsHealthChecksVantagePointRoutingArrayInput interface {
	pulumi.Input

	ToGetVantagePointsHealthChecksVantagePointRoutingArrayOutput() GetVantagePointsHealthChecksVantagePointRoutingArrayOutput
	ToGetVantagePointsHealthChecksVantagePointRoutingArrayOutputWithContext(context.Context) GetVantagePointsHealthChecksVantagePointRoutingArrayOutput
}

type GetVantagePointsHealthChecksVantagePointRoutingArray []GetVantagePointsHealthChecksVantagePointRoutingInput

func (GetVantagePointsHealthChecksVantagePointRoutingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVantagePointsHealthChecksVantagePointRouting)(nil)).Elem()
}

func (i GetVantagePointsHealthChecksVantagePointRoutingArray) ToGetVantagePointsHealthChecksVantagePointRoutingArrayOutput() GetVantagePointsHealthChecksVantagePointRoutingArrayOutput {
	return i.ToGetVantagePointsHealthChecksVantagePointRoutingArrayOutputWithContext(context.Background())
}

func (i GetVantagePointsHealthChecksVantagePointRoutingArray) ToGetVantagePointsHealthChecksVantagePointRoutingArrayOutputWithContext(ctx context.Context) GetVantagePointsHealthChecksVantagePointRoutingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVantagePointsHealthChecksVantagePointRoutingArrayOutput)
}

type GetVantagePointsHealthChecksVantagePointRoutingOutput struct{ *pulumi.OutputState }

func (GetVantagePointsHealthChecksVantagePointRoutingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVantagePointsHealthChecksVantagePointRouting)(nil)).Elem()
}

func (o GetVantagePointsHealthChecksVantagePointRoutingOutput) ToGetVantagePointsHealthChecksVantagePointRoutingOutput() GetVantagePointsHealthChecksVantagePointRoutingOutput {
	return o
}

func (o GetVantagePointsHealthChecksVantagePointRoutingOutput) ToGetVantagePointsHealthChecksVantagePointRoutingOutputWithContext(ctx context.Context) GetVantagePointsHealthChecksVantagePointRoutingOutput {
	return o
}

// The registry label for `asn`, usually the name of the organization that owns the ASN. May be omitted or null.
func (o GetVantagePointsHealthChecksVantagePointRoutingOutput) AsLabel() pulumi.StringOutput {
	return o.ApplyT(func(v GetVantagePointsHealthChecksVantagePointRouting) string { return v.AsLabel }).(pulumi.StringOutput)
}

// The Autonomous System Number (ASN) identifying the organization responsible for routing packets to `prefix`.
func (o GetVantagePointsHealthChecksVantagePointRoutingOutput) Asn() pulumi.IntOutput {
	return o.ApplyT(func(v GetVantagePointsHealthChecksVantagePointRouting) int { return v.Asn }).(pulumi.IntOutput)
}

// An IP prefix (CIDR syntax) that is less specific than `address`, through which `address` is routed.
func (o GetVantagePointsHealthChecksVantagePointRoutingOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetVantagePointsHealthChecksVantagePointRouting) string { return v.Prefix }).(pulumi.StringOutput)
}

// An integer between 0 and 100 used to select between multiple origin ASNs when routing to `prefix`. Most prefixes have exactly one origin ASN, in which case `weight` will be 100.
func (o GetVantagePointsHealthChecksVantagePointRoutingOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetVantagePointsHealthChecksVantagePointRouting) int { return v.Weight }).(pulumi.IntOutput)
}

type GetVantagePointsHealthChecksVantagePointRoutingArrayOutput struct{ *pulumi.OutputState }

func (GetVantagePointsHealthChecksVantagePointRoutingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVantagePointsHealthChecksVantagePointRouting)(nil)).Elem()
}

func (o GetVantagePointsHealthChecksVantagePointRoutingArrayOutput) ToGetVantagePointsHealthChecksVantagePointRoutingArrayOutput() GetVantagePointsHealthChecksVantagePointRoutingArrayOutput {
	return o
}

func (o GetVantagePointsHealthChecksVantagePointRoutingArrayOutput) ToGetVantagePointsHealthChecksVantagePointRoutingArrayOutputWithContext(ctx context.Context) GetVantagePointsHealthChecksVantagePointRoutingArrayOutput {
	return o
}

func (o GetVantagePointsHealthChecksVantagePointRoutingArrayOutput) Index(i pulumi.IntInput) GetVantagePointsHealthChecksVantagePointRoutingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVantagePointsHealthChecksVantagePointRouting {
		return vs[0].([]GetVantagePointsHealthChecksVantagePointRouting)[vs[1].(int)]
	}).(GetVantagePointsHealthChecksVantagePointRoutingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetHttpMonitorsFilterInput)(nil)).Elem(), GetHttpMonitorsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHttpMonitorsFilterArrayInput)(nil)).Elem(), GetHttpMonitorsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHttpMonitorsHttpMonitorInput)(nil)).Elem(), GetHttpMonitorsHttpMonitorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHttpMonitorsHttpMonitorArrayInput)(nil)).Elem(), GetHttpMonitorsHttpMonitorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHttpProbeResultsFilterInput)(nil)).Elem(), GetHttpProbeResultsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHttpProbeResultsFilterArrayInput)(nil)).Elem(), GetHttpProbeResultsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHttpProbeResultsHttpProbeResultInput)(nil)).Elem(), GetHttpProbeResultsHttpProbeResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHttpProbeResultsHttpProbeResultArrayInput)(nil)).Elem(), GetHttpProbeResultsHttpProbeResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHttpProbeResultsHttpProbeResultConnectionInput)(nil)).Elem(), GetHttpProbeResultsHttpProbeResultConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHttpProbeResultsHttpProbeResultConnectionArrayInput)(nil)).Elem(), GetHttpProbeResultsHttpProbeResultConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHttpProbeResultsHttpProbeResultDnInput)(nil)).Elem(), GetHttpProbeResultsHttpProbeResultDnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHttpProbeResultsHttpProbeResultDnArrayInput)(nil)).Elem(), GetHttpProbeResultsHttpProbeResultDnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPingMonitorsFilterInput)(nil)).Elem(), GetPingMonitorsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPingMonitorsFilterArrayInput)(nil)).Elem(), GetPingMonitorsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPingMonitorsPingMonitorInput)(nil)).Elem(), GetPingMonitorsPingMonitorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPingMonitorsPingMonitorArrayInput)(nil)).Elem(), GetPingMonitorsPingMonitorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPingProbeResultsFilterInput)(nil)).Elem(), GetPingProbeResultsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPingProbeResultsFilterArrayInput)(nil)).Elem(), GetPingProbeResultsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPingProbeResultsPingProbeResultInput)(nil)).Elem(), GetPingProbeResultsPingProbeResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPingProbeResultsPingProbeResultArrayInput)(nil)).Elem(), GetPingProbeResultsPingProbeResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPingProbeResultsPingProbeResultConnectionInput)(nil)).Elem(), GetPingProbeResultsPingProbeResultConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPingProbeResultsPingProbeResultConnectionArrayInput)(nil)).Elem(), GetPingProbeResultsPingProbeResultConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPingProbeResultsPingProbeResultDnInput)(nil)).Elem(), GetPingProbeResultsPingProbeResultDnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPingProbeResultsPingProbeResultDnArrayInput)(nil)).Elem(), GetPingProbeResultsPingProbeResultDnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVantagePointsFilterInput)(nil)).Elem(), GetVantagePointsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVantagePointsFilterArrayInput)(nil)).Elem(), GetVantagePointsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVantagePointsHealthChecksVantagePointInput)(nil)).Elem(), GetVantagePointsHealthChecksVantagePointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVantagePointsHealthChecksVantagePointArrayInput)(nil)).Elem(), GetVantagePointsHealthChecksVantagePointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVantagePointsHealthChecksVantagePointGeoInput)(nil)).Elem(), GetVantagePointsHealthChecksVantagePointGeoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVantagePointsHealthChecksVantagePointGeoArrayInput)(nil)).Elem(), GetVantagePointsHealthChecksVantagePointGeoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVantagePointsHealthChecksVantagePointRoutingInput)(nil)).Elem(), GetVantagePointsHealthChecksVantagePointRoutingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVantagePointsHealthChecksVantagePointRoutingArrayInput)(nil)).Elem(), GetVantagePointsHealthChecksVantagePointRoutingArray{})
	pulumi.RegisterOutputType(GetHttpMonitorsFilterOutput{})
	pulumi.RegisterOutputType(GetHttpMonitorsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetHttpMonitorsHttpMonitorOutput{})
	pulumi.RegisterOutputType(GetHttpMonitorsHttpMonitorArrayOutput{})
	pulumi.RegisterOutputType(GetHttpProbeResultsFilterOutput{})
	pulumi.RegisterOutputType(GetHttpProbeResultsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetHttpProbeResultsHttpProbeResultOutput{})
	pulumi.RegisterOutputType(GetHttpProbeResultsHttpProbeResultArrayOutput{})
	pulumi.RegisterOutputType(GetHttpProbeResultsHttpProbeResultConnectionOutput{})
	pulumi.RegisterOutputType(GetHttpProbeResultsHttpProbeResultConnectionArrayOutput{})
	pulumi.RegisterOutputType(GetHttpProbeResultsHttpProbeResultDnOutput{})
	pulumi.RegisterOutputType(GetHttpProbeResultsHttpProbeResultDnArrayOutput{})
	pulumi.RegisterOutputType(GetPingMonitorsFilterOutput{})
	pulumi.RegisterOutputType(GetPingMonitorsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetPingMonitorsPingMonitorOutput{})
	pulumi.RegisterOutputType(GetPingMonitorsPingMonitorArrayOutput{})
	pulumi.RegisterOutputType(GetPingProbeResultsFilterOutput{})
	pulumi.RegisterOutputType(GetPingProbeResultsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetPingProbeResultsPingProbeResultOutput{})
	pulumi.RegisterOutputType(GetPingProbeResultsPingProbeResultArrayOutput{})
	pulumi.RegisterOutputType(GetPingProbeResultsPingProbeResultConnectionOutput{})
	pulumi.RegisterOutputType(GetPingProbeResultsPingProbeResultConnectionArrayOutput{})
	pulumi.RegisterOutputType(GetPingProbeResultsPingProbeResultDnOutput{})
	pulumi.RegisterOutputType(GetPingProbeResultsPingProbeResultDnArrayOutput{})
	pulumi.RegisterOutputType(GetVantagePointsFilterOutput{})
	pulumi.RegisterOutputType(GetVantagePointsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVantagePointsHealthChecksVantagePointOutput{})
	pulumi.RegisterOutputType(GetVantagePointsHealthChecksVantagePointArrayOutput{})
	pulumi.RegisterOutputType(GetVantagePointsHealthChecksVantagePointGeoOutput{})
	pulumi.RegisterOutputType(GetVantagePointsHealthChecksVantagePointGeoArrayOutput{})
	pulumi.RegisterOutputType(GetVantagePointsHealthChecksVantagePointRoutingOutput{})
	pulumi.RegisterOutputType(GetVantagePointsHealthChecksVantagePointRoutingArrayOutput{})
}
