// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Domain Replication To Region resource in Oracle Cloud Infrastructure Identity service.
//
// Replicate domain to a new region. This is an asynchronous call - where, at start,
// {@code state} of this domain in replica region is set to ENABLING_REPLICATION.
// On domain replication completion the {@code state} will be set to REPLICATION_ENABLED.
//
// To track progress, HTTP GET on /iamWorkRequests/{iamWorkRequestsId} endpoint will provide
// the async operation's status.
//
// If the replica region's {@code state} is already ENABLING_REPLICATION or REPLICATION_ENABLED,
// returns 409 CONFLICT.
// - If the domain doesn't exists, returns 404 NOT FOUND.
// - If home region is same as replication region, return 400 BAD REQUEST.
// - If Domain is not active or being updated, returns 400 BAD REQUEST.
// - If any internal error occurs, return 500 INTERNAL SERVER ERROR.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Identity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Identity.NewDomainReplicationToRegion(ctx, "testDomainReplicationToRegion", &Identity.DomainReplicationToRegionArgs{
//				DomainId:      pulumi.Any(oci_identity_domain.Test_domain.Id),
//				ReplicaRegion: pulumi.Any(_var.Domain_replication_to_region_replica_region),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Import is not supported for this resource.
type DomainReplicationToRegion struct {
	pulumi.CustomResourceState

	// The OCID of the domain
	DomainId pulumi.StringOutput `pulumi:"domainId"`
	// A region for which domain replication is requested for. See [Regions and Availability Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm) for the full list of supported region names.  Example: `us-phoenix-1`
	ReplicaRegion pulumi.StringOutput `pulumi:"replicaRegion"`
}

// NewDomainReplicationToRegion registers a new resource with the given unique name, arguments, and options.
func NewDomainReplicationToRegion(ctx *pulumi.Context,
	name string, args *DomainReplicationToRegionArgs, opts ...pulumi.ResourceOption) (*DomainReplicationToRegion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DomainId == nil {
		return nil, errors.New("invalid value for required argument 'DomainId'")
	}
	var resource DomainReplicationToRegion
	err := ctx.RegisterResource("oci:Identity/domainReplicationToRegion:DomainReplicationToRegion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomainReplicationToRegion gets an existing DomainReplicationToRegion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainReplicationToRegion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainReplicationToRegionState, opts ...pulumi.ResourceOption) (*DomainReplicationToRegion, error) {
	var resource DomainReplicationToRegion
	err := ctx.ReadResource("oci:Identity/domainReplicationToRegion:DomainReplicationToRegion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DomainReplicationToRegion resources.
type domainReplicationToRegionState struct {
	// The OCID of the domain
	DomainId *string `pulumi:"domainId"`
	// A region for which domain replication is requested for. See [Regions and Availability Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm) for the full list of supported region names.  Example: `us-phoenix-1`
	ReplicaRegion *string `pulumi:"replicaRegion"`
}

type DomainReplicationToRegionState struct {
	// The OCID of the domain
	DomainId pulumi.StringPtrInput
	// A region for which domain replication is requested for. See [Regions and Availability Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm) for the full list of supported region names.  Example: `us-phoenix-1`
	ReplicaRegion pulumi.StringPtrInput
}

func (DomainReplicationToRegionState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainReplicationToRegionState)(nil)).Elem()
}

type domainReplicationToRegionArgs struct {
	// The OCID of the domain
	DomainId string `pulumi:"domainId"`
	// A region for which domain replication is requested for. See [Regions and Availability Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm) for the full list of supported region names.  Example: `us-phoenix-1`
	ReplicaRegion *string `pulumi:"replicaRegion"`
}

// The set of arguments for constructing a DomainReplicationToRegion resource.
type DomainReplicationToRegionArgs struct {
	// The OCID of the domain
	DomainId pulumi.StringInput
	// A region for which domain replication is requested for. See [Regions and Availability Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm) for the full list of supported region names.  Example: `us-phoenix-1`
	ReplicaRegion pulumi.StringPtrInput
}

func (DomainReplicationToRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainReplicationToRegionArgs)(nil)).Elem()
}

type DomainReplicationToRegionInput interface {
	pulumi.Input

	ToDomainReplicationToRegionOutput() DomainReplicationToRegionOutput
	ToDomainReplicationToRegionOutputWithContext(ctx context.Context) DomainReplicationToRegionOutput
}

func (*DomainReplicationToRegion) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainReplicationToRegion)(nil)).Elem()
}

func (i *DomainReplicationToRegion) ToDomainReplicationToRegionOutput() DomainReplicationToRegionOutput {
	return i.ToDomainReplicationToRegionOutputWithContext(context.Background())
}

func (i *DomainReplicationToRegion) ToDomainReplicationToRegionOutputWithContext(ctx context.Context) DomainReplicationToRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainReplicationToRegionOutput)
}

// DomainReplicationToRegionArrayInput is an input type that accepts DomainReplicationToRegionArray and DomainReplicationToRegionArrayOutput values.
// You can construct a concrete instance of `DomainReplicationToRegionArrayInput` via:
//
//	DomainReplicationToRegionArray{ DomainReplicationToRegionArgs{...} }
type DomainReplicationToRegionArrayInput interface {
	pulumi.Input

	ToDomainReplicationToRegionArrayOutput() DomainReplicationToRegionArrayOutput
	ToDomainReplicationToRegionArrayOutputWithContext(context.Context) DomainReplicationToRegionArrayOutput
}

type DomainReplicationToRegionArray []DomainReplicationToRegionInput

func (DomainReplicationToRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainReplicationToRegion)(nil)).Elem()
}

func (i DomainReplicationToRegionArray) ToDomainReplicationToRegionArrayOutput() DomainReplicationToRegionArrayOutput {
	return i.ToDomainReplicationToRegionArrayOutputWithContext(context.Background())
}

func (i DomainReplicationToRegionArray) ToDomainReplicationToRegionArrayOutputWithContext(ctx context.Context) DomainReplicationToRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainReplicationToRegionArrayOutput)
}

// DomainReplicationToRegionMapInput is an input type that accepts DomainReplicationToRegionMap and DomainReplicationToRegionMapOutput values.
// You can construct a concrete instance of `DomainReplicationToRegionMapInput` via:
//
//	DomainReplicationToRegionMap{ "key": DomainReplicationToRegionArgs{...} }
type DomainReplicationToRegionMapInput interface {
	pulumi.Input

	ToDomainReplicationToRegionMapOutput() DomainReplicationToRegionMapOutput
	ToDomainReplicationToRegionMapOutputWithContext(context.Context) DomainReplicationToRegionMapOutput
}

type DomainReplicationToRegionMap map[string]DomainReplicationToRegionInput

func (DomainReplicationToRegionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainReplicationToRegion)(nil)).Elem()
}

func (i DomainReplicationToRegionMap) ToDomainReplicationToRegionMapOutput() DomainReplicationToRegionMapOutput {
	return i.ToDomainReplicationToRegionMapOutputWithContext(context.Background())
}

func (i DomainReplicationToRegionMap) ToDomainReplicationToRegionMapOutputWithContext(ctx context.Context) DomainReplicationToRegionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainReplicationToRegionMapOutput)
}

type DomainReplicationToRegionOutput struct{ *pulumi.OutputState }

func (DomainReplicationToRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainReplicationToRegion)(nil)).Elem()
}

func (o DomainReplicationToRegionOutput) ToDomainReplicationToRegionOutput() DomainReplicationToRegionOutput {
	return o
}

func (o DomainReplicationToRegionOutput) ToDomainReplicationToRegionOutputWithContext(ctx context.Context) DomainReplicationToRegionOutput {
	return o
}

// The OCID of the domain
func (o DomainReplicationToRegionOutput) DomainId() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainReplicationToRegion) pulumi.StringOutput { return v.DomainId }).(pulumi.StringOutput)
}

// A region for which domain replication is requested for. See [Regions and Availability Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm) for the full list of supported region names.  Example: `us-phoenix-1`
func (o DomainReplicationToRegionOutput) ReplicaRegion() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainReplicationToRegion) pulumi.StringOutput { return v.ReplicaRegion }).(pulumi.StringOutput)
}

type DomainReplicationToRegionArrayOutput struct{ *pulumi.OutputState }

func (DomainReplicationToRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainReplicationToRegion)(nil)).Elem()
}

func (o DomainReplicationToRegionArrayOutput) ToDomainReplicationToRegionArrayOutput() DomainReplicationToRegionArrayOutput {
	return o
}

func (o DomainReplicationToRegionArrayOutput) ToDomainReplicationToRegionArrayOutputWithContext(ctx context.Context) DomainReplicationToRegionArrayOutput {
	return o
}

func (o DomainReplicationToRegionArrayOutput) Index(i pulumi.IntInput) DomainReplicationToRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DomainReplicationToRegion {
		return vs[0].([]*DomainReplicationToRegion)[vs[1].(int)]
	}).(DomainReplicationToRegionOutput)
}

type DomainReplicationToRegionMapOutput struct{ *pulumi.OutputState }

func (DomainReplicationToRegionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainReplicationToRegion)(nil)).Elem()
}

func (o DomainReplicationToRegionMapOutput) ToDomainReplicationToRegionMapOutput() DomainReplicationToRegionMapOutput {
	return o
}

func (o DomainReplicationToRegionMapOutput) ToDomainReplicationToRegionMapOutputWithContext(ctx context.Context) DomainReplicationToRegionMapOutput {
	return o
}

func (o DomainReplicationToRegionMapOutput) MapIndex(k pulumi.StringInput) DomainReplicationToRegionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DomainReplicationToRegion {
		return vs[0].(map[string]*DomainReplicationToRegion)[vs[1].(string)]
	}).(DomainReplicationToRegionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainReplicationToRegionInput)(nil)).Elem(), &DomainReplicationToRegion{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainReplicationToRegionArrayInput)(nil)).Elem(), DomainReplicationToRegionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainReplicationToRegionMapInput)(nil)).Elem(), DomainReplicationToRegionMap{})
	pulumi.RegisterOutputType(DomainReplicationToRegionOutput{})
	pulumi.RegisterOutputType(DomainReplicationToRegionArrayOutput{})
	pulumi.RegisterOutputType(DomainReplicationToRegionMapOutput{})
}
