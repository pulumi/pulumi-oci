// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Account Recovery Setting resource in Oracle Cloud Infrastructure Identity Domains service.
//
// Replace an account recovery setting.
//
// ## Import
//
// AccountRecoverySettings can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Identity/domainsAccountRecoverySetting:DomainsAccountRecoverySetting test_account_recovery_setting "idcsEndpoint/{idcsEndpoint}/accountRecoverySettings/{accountRecoverySettingId}"
// ```
type DomainsAccountRecoverySetting struct {
	pulumi.CustomResourceState

	// ID of the resource
	AccountRecoverySettingId pulumi.StringOutput `pulumi:"accountRecoverySettingId"`
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayOutput `pulumi:"attributeSets"`
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrOutput `pulumi:"attributes"`
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrOutput `pulumi:"authorization"`
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid pulumi.StringOutput `pulumi:"compartmentOcid"`
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress pulumi.BoolOutput `pulumi:"deleteInProgress"`
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid pulumi.StringOutput `pulumi:"domainOcid"`
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	ExternalId pulumi.StringOutput `pulumi:"externalId"`
	// (Updatable) The account recovery factor used (for example, email, mobile number (SMS), security questions, mobile application push or TOTP) to verify the identity of the user and reset the user's password.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Factors pulumi.StringArrayOutput `pulumi:"factors"`
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies DomainsAccountRecoverySettingIdcsCreatedByArrayOutput `pulumi:"idcsCreatedBies"`
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringOutput `pulumi:"idcsEndpoint"`
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies DomainsAccountRecoverySettingIdcsLastModifiedByArrayOutput `pulumi:"idcsLastModifiedBies"`
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease pulumi.StringOutput `pulumi:"idcsLastUpgradedInRelease"`
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations pulumi.StringArrayOutput `pulumi:"idcsPreventedOperations"`
	// (Updatable) Indicates how many minutes to disable account recovery for the user. The default value is 30 metric minutes.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: integer
	// * uniqueness: none
	// * idcsMinValue: 5
	// * idcsMaxValue: 9999
	LockoutDuration pulumi.IntOutput `pulumi:"lockoutDuration"`
	// (Updatable) Indicates the maximum number of failed account recovery attempts allowed for the user.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: integer
	// * uniqueness: none
	// * idcsMinValue: 1
	// * idcsMaxValue: 99
	MaxIncorrectAttempts pulumi.IntOutput `pulumi:"maxIncorrectAttempts"`
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas DomainsAccountRecoverySettingMetaArrayOutput `pulumi:"metas"`
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid pulumi.StringOutput `pulumi:"ocid"`
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrOutput `pulumi:"resourceTypeSchemaVersion"`
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayOutput `pulumi:"schemas"`
	// (Updatable) A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsAccountRecoverySettingTagArrayOutput `pulumi:"tags"`
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TenancyOcid pulumi.StringOutput `pulumi:"tenancyOcid"`
}

// NewDomainsAccountRecoverySetting registers a new resource with the given unique name, arguments, and options.
func NewDomainsAccountRecoverySetting(ctx *pulumi.Context,
	name string, args *DomainsAccountRecoverySettingArgs, opts ...pulumi.ResourceOption) (*DomainsAccountRecoverySetting, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountRecoverySettingId == nil {
		return nil, errors.New("invalid value for required argument 'AccountRecoverySettingId'")
	}
	if args.Factors == nil {
		return nil, errors.New("invalid value for required argument 'Factors'")
	}
	if args.IdcsEndpoint == nil {
		return nil, errors.New("invalid value for required argument 'IdcsEndpoint'")
	}
	if args.LockoutDuration == nil {
		return nil, errors.New("invalid value for required argument 'LockoutDuration'")
	}
	if args.MaxIncorrectAttempts == nil {
		return nil, errors.New("invalid value for required argument 'MaxIncorrectAttempts'")
	}
	if args.Schemas == nil {
		return nil, errors.New("invalid value for required argument 'Schemas'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DomainsAccountRecoverySetting
	err := ctx.RegisterResource("oci:Identity/domainsAccountRecoverySetting:DomainsAccountRecoverySetting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomainsAccountRecoverySetting gets an existing DomainsAccountRecoverySetting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainsAccountRecoverySetting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainsAccountRecoverySettingState, opts ...pulumi.ResourceOption) (*DomainsAccountRecoverySetting, error) {
	var resource DomainsAccountRecoverySetting
	err := ctx.ReadResource("oci:Identity/domainsAccountRecoverySetting:DomainsAccountRecoverySetting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DomainsAccountRecoverySetting resources.
type domainsAccountRecoverySettingState struct {
	// ID of the resource
	AccountRecoverySettingId *string `pulumi:"accountRecoverySettingId"`
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets []string `pulumi:"attributeSets"`
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes *string `pulumi:"attributes"`
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid *string `pulumi:"compartmentOcid"`
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress *bool `pulumi:"deleteInProgress"`
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid *string `pulumi:"domainOcid"`
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	ExternalId *string `pulumi:"externalId"`
	// (Updatable) The account recovery factor used (for example, email, mobile number (SMS), security questions, mobile application push or TOTP) to verify the identity of the user and reset the user's password.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Factors []string `pulumi:"factors"`
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies []DomainsAccountRecoverySettingIdcsCreatedBy `pulumi:"idcsCreatedBies"`
	// The basic endpoint for the identity domain
	IdcsEndpoint *string `pulumi:"idcsEndpoint"`
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies []DomainsAccountRecoverySettingIdcsLastModifiedBy `pulumi:"idcsLastModifiedBies"`
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease *string `pulumi:"idcsLastUpgradedInRelease"`
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations []string `pulumi:"idcsPreventedOperations"`
	// (Updatable) Indicates how many minutes to disable account recovery for the user. The default value is 30 metric minutes.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: integer
	// * uniqueness: none
	// * idcsMinValue: 5
	// * idcsMaxValue: 9999
	LockoutDuration *int `pulumi:"lockoutDuration"`
	// (Updatable) Indicates the maximum number of failed account recovery attempts allowed for the user.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: integer
	// * uniqueness: none
	// * idcsMinValue: 1
	// * idcsMaxValue: 99
	MaxIncorrectAttempts *int `pulumi:"maxIncorrectAttempts"`
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas []DomainsAccountRecoverySettingMeta `pulumi:"metas"`
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid *string `pulumi:"ocid"`
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas []string `pulumi:"schemas"`
	// (Updatable) A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags []DomainsAccountRecoverySettingTag `pulumi:"tags"`
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TenancyOcid *string `pulumi:"tenancyOcid"`
}

type DomainsAccountRecoverySettingState struct {
	// ID of the resource
	AccountRecoverySettingId pulumi.StringPtrInput
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayInput
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrInput
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid pulumi.StringPtrInput
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress pulumi.BoolPtrInput
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid pulumi.StringPtrInput
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	ExternalId pulumi.StringPtrInput
	// (Updatable) The account recovery factor used (for example, email, mobile number (SMS), security questions, mobile application push or TOTP) to verify the identity of the user and reset the user's password.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Factors pulumi.StringArrayInput
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies DomainsAccountRecoverySettingIdcsCreatedByArrayInput
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringPtrInput
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies DomainsAccountRecoverySettingIdcsLastModifiedByArrayInput
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease pulumi.StringPtrInput
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations pulumi.StringArrayInput
	// (Updatable) Indicates how many minutes to disable account recovery for the user. The default value is 30 metric minutes.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: integer
	// * uniqueness: none
	// * idcsMinValue: 5
	// * idcsMaxValue: 9999
	LockoutDuration pulumi.IntPtrInput
	// (Updatable) Indicates the maximum number of failed account recovery attempts allowed for the user.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: integer
	// * uniqueness: none
	// * idcsMinValue: 1
	// * idcsMaxValue: 99
	MaxIncorrectAttempts pulumi.IntPtrInput
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas DomainsAccountRecoverySettingMetaArrayInput
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid pulumi.StringPtrInput
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayInput
	// (Updatable) A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsAccountRecoverySettingTagArrayInput
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TenancyOcid pulumi.StringPtrInput
}

func (DomainsAccountRecoverySettingState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainsAccountRecoverySettingState)(nil)).Elem()
}

type domainsAccountRecoverySettingArgs struct {
	// ID of the resource
	AccountRecoverySettingId string `pulumi:"accountRecoverySettingId"`
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets []string `pulumi:"attributeSets"`
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes *string `pulumi:"attributes"`
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	ExternalId *string `pulumi:"externalId"`
	// (Updatable) The account recovery factor used (for example, email, mobile number (SMS), security questions, mobile application push or TOTP) to verify the identity of the user and reset the user's password.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Factors []string `pulumi:"factors"`
	// The basic endpoint for the identity domain
	IdcsEndpoint string `pulumi:"idcsEndpoint"`
	// (Updatable) Indicates how many minutes to disable account recovery for the user. The default value is 30 metric minutes.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: integer
	// * uniqueness: none
	// * idcsMinValue: 5
	// * idcsMaxValue: 9999
	LockoutDuration int `pulumi:"lockoutDuration"`
	// (Updatable) Indicates the maximum number of failed account recovery attempts allowed for the user.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: integer
	// * uniqueness: none
	// * idcsMinValue: 1
	// * idcsMaxValue: 99
	MaxIncorrectAttempts int `pulumi:"maxIncorrectAttempts"`
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid *string `pulumi:"ocid"`
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas []string `pulumi:"schemas"`
	// (Updatable) A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags []DomainsAccountRecoverySettingTag `pulumi:"tags"`
}

// The set of arguments for constructing a DomainsAccountRecoverySetting resource.
type DomainsAccountRecoverySettingArgs struct {
	// ID of the resource
	AccountRecoverySettingId pulumi.StringInput
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayInput
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrInput
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	ExternalId pulumi.StringPtrInput
	// (Updatable) The account recovery factor used (for example, email, mobile number (SMS), security questions, mobile application push or TOTP) to verify the identity of the user and reset the user's password.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Factors pulumi.StringArrayInput
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringInput
	// (Updatable) Indicates how many minutes to disable account recovery for the user. The default value is 30 metric minutes.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: integer
	// * uniqueness: none
	// * idcsMinValue: 5
	// * idcsMaxValue: 9999
	LockoutDuration pulumi.IntInput
	// (Updatable) Indicates the maximum number of failed account recovery attempts allowed for the user.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: integer
	// * uniqueness: none
	// * idcsMinValue: 1
	// * idcsMaxValue: 99
	MaxIncorrectAttempts pulumi.IntInput
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid pulumi.StringPtrInput
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayInput
	// (Updatable) A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsAccountRecoverySettingTagArrayInput
}

func (DomainsAccountRecoverySettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainsAccountRecoverySettingArgs)(nil)).Elem()
}

type DomainsAccountRecoverySettingInput interface {
	pulumi.Input

	ToDomainsAccountRecoverySettingOutput() DomainsAccountRecoverySettingOutput
	ToDomainsAccountRecoverySettingOutputWithContext(ctx context.Context) DomainsAccountRecoverySettingOutput
}

func (*DomainsAccountRecoverySetting) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainsAccountRecoverySetting)(nil)).Elem()
}

func (i *DomainsAccountRecoverySetting) ToDomainsAccountRecoverySettingOutput() DomainsAccountRecoverySettingOutput {
	return i.ToDomainsAccountRecoverySettingOutputWithContext(context.Background())
}

func (i *DomainsAccountRecoverySetting) ToDomainsAccountRecoverySettingOutputWithContext(ctx context.Context) DomainsAccountRecoverySettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsAccountRecoverySettingOutput)
}

// DomainsAccountRecoverySettingArrayInput is an input type that accepts DomainsAccountRecoverySettingArray and DomainsAccountRecoverySettingArrayOutput values.
// You can construct a concrete instance of `DomainsAccountRecoverySettingArrayInput` via:
//
//	DomainsAccountRecoverySettingArray{ DomainsAccountRecoverySettingArgs{...} }
type DomainsAccountRecoverySettingArrayInput interface {
	pulumi.Input

	ToDomainsAccountRecoverySettingArrayOutput() DomainsAccountRecoverySettingArrayOutput
	ToDomainsAccountRecoverySettingArrayOutputWithContext(context.Context) DomainsAccountRecoverySettingArrayOutput
}

type DomainsAccountRecoverySettingArray []DomainsAccountRecoverySettingInput

func (DomainsAccountRecoverySettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainsAccountRecoverySetting)(nil)).Elem()
}

func (i DomainsAccountRecoverySettingArray) ToDomainsAccountRecoverySettingArrayOutput() DomainsAccountRecoverySettingArrayOutput {
	return i.ToDomainsAccountRecoverySettingArrayOutputWithContext(context.Background())
}

func (i DomainsAccountRecoverySettingArray) ToDomainsAccountRecoverySettingArrayOutputWithContext(ctx context.Context) DomainsAccountRecoverySettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsAccountRecoverySettingArrayOutput)
}

// DomainsAccountRecoverySettingMapInput is an input type that accepts DomainsAccountRecoverySettingMap and DomainsAccountRecoverySettingMapOutput values.
// You can construct a concrete instance of `DomainsAccountRecoverySettingMapInput` via:
//
//	DomainsAccountRecoverySettingMap{ "key": DomainsAccountRecoverySettingArgs{...} }
type DomainsAccountRecoverySettingMapInput interface {
	pulumi.Input

	ToDomainsAccountRecoverySettingMapOutput() DomainsAccountRecoverySettingMapOutput
	ToDomainsAccountRecoverySettingMapOutputWithContext(context.Context) DomainsAccountRecoverySettingMapOutput
}

type DomainsAccountRecoverySettingMap map[string]DomainsAccountRecoverySettingInput

func (DomainsAccountRecoverySettingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainsAccountRecoverySetting)(nil)).Elem()
}

func (i DomainsAccountRecoverySettingMap) ToDomainsAccountRecoverySettingMapOutput() DomainsAccountRecoverySettingMapOutput {
	return i.ToDomainsAccountRecoverySettingMapOutputWithContext(context.Background())
}

func (i DomainsAccountRecoverySettingMap) ToDomainsAccountRecoverySettingMapOutputWithContext(ctx context.Context) DomainsAccountRecoverySettingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsAccountRecoverySettingMapOutput)
}

type DomainsAccountRecoverySettingOutput struct{ *pulumi.OutputState }

func (DomainsAccountRecoverySettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainsAccountRecoverySetting)(nil)).Elem()
}

func (o DomainsAccountRecoverySettingOutput) ToDomainsAccountRecoverySettingOutput() DomainsAccountRecoverySettingOutput {
	return o
}

func (o DomainsAccountRecoverySettingOutput) ToDomainsAccountRecoverySettingOutputWithContext(ctx context.Context) DomainsAccountRecoverySettingOutput {
	return o
}

// ID of the resource
func (o DomainsAccountRecoverySettingOutput) AccountRecoverySettingId() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsAccountRecoverySetting) pulumi.StringOutput { return v.AccountRecoverySettingId }).(pulumi.StringOutput)
}

// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
func (o DomainsAccountRecoverySettingOutput) AttributeSets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsAccountRecoverySetting) pulumi.StringArrayOutput { return v.AttributeSets }).(pulumi.StringArrayOutput)
}

// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
func (o DomainsAccountRecoverySettingOutput) Attributes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsAccountRecoverySetting) pulumi.StringPtrOutput { return v.Attributes }).(pulumi.StringPtrOutput)
}

// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
func (o DomainsAccountRecoverySettingOutput) Authorization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsAccountRecoverySetting) pulumi.StringPtrOutput { return v.Authorization }).(pulumi.StringPtrOutput)
}

// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsAccountRecoverySettingOutput) CompartmentOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsAccountRecoverySetting) pulumi.StringOutput { return v.CompartmentOcid }).(pulumi.StringOutput)
}

// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: boolean
// * uniqueness: none
func (o DomainsAccountRecoverySettingOutput) DeleteInProgress() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsAccountRecoverySetting) pulumi.BoolOutput { return v.DeleteInProgress }).(pulumi.BoolOutput)
}

// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsAccountRecoverySettingOutput) DomainOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsAccountRecoverySetting) pulumi.StringOutput { return v.DomainOcid }).(pulumi.StringOutput)
}

// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
//
// **SCIM++ Properties:**
// * caseExact: false
// * multiValued: false
// * mutability: readWrite
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsAccountRecoverySettingOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsAccountRecoverySetting) pulumi.StringOutput { return v.ExternalId }).(pulumi.StringOutput)
}

// (Updatable) The account recovery factor used (for example, email, mobile number (SMS), security questions, mobile application push or TOTP) to verify the identity of the user and reset the user's password.
//
// **SCIM++ Properties:**
// * caseExact: true
// * idcsSearchable: true
// * multiValued: true
// * mutability: readWrite
// * required: true
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsAccountRecoverySettingOutput) Factors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsAccountRecoverySetting) pulumi.StringArrayOutput { return v.Factors }).(pulumi.StringArrayOutput)
}

// (Updatable) The User or App who created the Resource
//
// **SCIM++ Properties:**
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: true
// * returned: default
// * type: complex
func (o DomainsAccountRecoverySettingOutput) IdcsCreatedBies() DomainsAccountRecoverySettingIdcsCreatedByArrayOutput {
	return o.ApplyT(func(v *DomainsAccountRecoverySetting) DomainsAccountRecoverySettingIdcsCreatedByArrayOutput {
		return v.IdcsCreatedBies
	}).(DomainsAccountRecoverySettingIdcsCreatedByArrayOutput)
}

// The basic endpoint for the identity domain
func (o DomainsAccountRecoverySettingOutput) IdcsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsAccountRecoverySetting) pulumi.StringOutput { return v.IdcsEndpoint }).(pulumi.StringOutput)
}

// (Updatable) The User or App who modified the Resource
//
// **SCIM++ Properties:**
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: complex
func (o DomainsAccountRecoverySettingOutput) IdcsLastModifiedBies() DomainsAccountRecoverySettingIdcsLastModifiedByArrayOutput {
	return o.ApplyT(func(v *DomainsAccountRecoverySetting) DomainsAccountRecoverySettingIdcsLastModifiedByArrayOutput {
		return v.IdcsLastModifiedBies
	}).(DomainsAccountRecoverySettingIdcsLastModifiedByArrayOutput)
}

// (Updatable) The release number when the resource was upgraded.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: request
// * type: string
// * uniqueness: none
func (o DomainsAccountRecoverySettingOutput) IdcsLastUpgradedInRelease() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsAccountRecoverySetting) pulumi.StringOutput { return v.IdcsLastUpgradedInRelease }).(pulumi.StringOutput)
}

// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
//
// **SCIM++ Properties:**
// * idcsSearchable: false
// * multiValued: true
// * mutability: readOnly
// * required: false
// * returned: request
// * type: string
// * uniqueness: none
func (o DomainsAccountRecoverySettingOutput) IdcsPreventedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsAccountRecoverySetting) pulumi.StringArrayOutput { return v.IdcsPreventedOperations }).(pulumi.StringArrayOutput)
}

// (Updatable) Indicates how many minutes to disable account recovery for the user. The default value is 30 metric minutes.
//
// **SCIM++ Properties:**
// * caseExact: false
// * multiValued: false
// * mutability: readWrite
// * required: true
// * returned: default
// * type: integer
// * uniqueness: none
// * idcsMinValue: 5
// * idcsMaxValue: 9999
func (o DomainsAccountRecoverySettingOutput) LockoutDuration() pulumi.IntOutput {
	return o.ApplyT(func(v *DomainsAccountRecoverySetting) pulumi.IntOutput { return v.LockoutDuration }).(pulumi.IntOutput)
}

// (Updatable) Indicates the maximum number of failed account recovery attempts allowed for the user.
//
// **SCIM++ Properties:**
// * caseExact: false
// * multiValued: false
// * mutability: readWrite
// * required: true
// * returned: default
// * type: integer
// * uniqueness: none
// * idcsMinValue: 1
// * idcsMaxValue: 99
func (o DomainsAccountRecoverySettingOutput) MaxIncorrectAttempts() pulumi.IntOutput {
	return o.ApplyT(func(v *DomainsAccountRecoverySetting) pulumi.IntOutput { return v.MaxIncorrectAttempts }).(pulumi.IntOutput)
}

// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
// * type: complex
func (o DomainsAccountRecoverySettingOutput) Metas() DomainsAccountRecoverySettingMetaArrayOutput {
	return o.ApplyT(func(v *DomainsAccountRecoverySetting) DomainsAccountRecoverySettingMetaArrayOutput { return v.Metas }).(DomainsAccountRecoverySettingMetaArrayOutput)
}

// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
//
// **SCIM++ Properties:**
// * caseExact: true
// * idcsSearchable: true
// * multiValued: false
// * mutability: immutable
// * required: false
// * returned: default
// * type: string
// * uniqueness: global
func (o DomainsAccountRecoverySettingOutput) Ocid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsAccountRecoverySetting) pulumi.StringOutput { return v.Ocid }).(pulumi.StringOutput)
}

// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
func (o DomainsAccountRecoverySettingOutput) ResourceTypeSchemaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsAccountRecoverySetting) pulumi.StringPtrOutput { return v.ResourceTypeSchemaVersion }).(pulumi.StringPtrOutput)
}

// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: true
// * mutability: readWrite
// * required: true
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsAccountRecoverySettingOutput) Schemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsAccountRecoverySetting) pulumi.StringArrayOutput { return v.Schemas }).(pulumi.StringArrayOutput)
}

// (Updatable) A list of tags on this resource.
//
// **SCIM++ Properties:**
// * idcsCompositeKey: [key, value]
// * idcsSearchable: true
// * multiValued: true
// * mutability: readWrite
// * required: false
// * returned: request
// * type: complex
// * uniqueness: none
func (o DomainsAccountRecoverySettingOutput) Tags() DomainsAccountRecoverySettingTagArrayOutput {
	return o.ApplyT(func(v *DomainsAccountRecoverySetting) DomainsAccountRecoverySettingTagArrayOutput { return v.Tags }).(DomainsAccountRecoverySettingTagArrayOutput)
}

// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o DomainsAccountRecoverySettingOutput) TenancyOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsAccountRecoverySetting) pulumi.StringOutput { return v.TenancyOcid }).(pulumi.StringOutput)
}

type DomainsAccountRecoverySettingArrayOutput struct{ *pulumi.OutputState }

func (DomainsAccountRecoverySettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainsAccountRecoverySetting)(nil)).Elem()
}

func (o DomainsAccountRecoverySettingArrayOutput) ToDomainsAccountRecoverySettingArrayOutput() DomainsAccountRecoverySettingArrayOutput {
	return o
}

func (o DomainsAccountRecoverySettingArrayOutput) ToDomainsAccountRecoverySettingArrayOutputWithContext(ctx context.Context) DomainsAccountRecoverySettingArrayOutput {
	return o
}

func (o DomainsAccountRecoverySettingArrayOutput) Index(i pulumi.IntInput) DomainsAccountRecoverySettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DomainsAccountRecoverySetting {
		return vs[0].([]*DomainsAccountRecoverySetting)[vs[1].(int)]
	}).(DomainsAccountRecoverySettingOutput)
}

type DomainsAccountRecoverySettingMapOutput struct{ *pulumi.OutputState }

func (DomainsAccountRecoverySettingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainsAccountRecoverySetting)(nil)).Elem()
}

func (o DomainsAccountRecoverySettingMapOutput) ToDomainsAccountRecoverySettingMapOutput() DomainsAccountRecoverySettingMapOutput {
	return o
}

func (o DomainsAccountRecoverySettingMapOutput) ToDomainsAccountRecoverySettingMapOutputWithContext(ctx context.Context) DomainsAccountRecoverySettingMapOutput {
	return o
}

func (o DomainsAccountRecoverySettingMapOutput) MapIndex(k pulumi.StringInput) DomainsAccountRecoverySettingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DomainsAccountRecoverySetting {
		return vs[0].(map[string]*DomainsAccountRecoverySetting)[vs[1].(string)]
	}).(DomainsAccountRecoverySettingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsAccountRecoverySettingInput)(nil)).Elem(), &DomainsAccountRecoverySetting{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsAccountRecoverySettingArrayInput)(nil)).Elem(), DomainsAccountRecoverySettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsAccountRecoverySettingMapInput)(nil)).Elem(), DomainsAccountRecoverySettingMap{})
	pulumi.RegisterOutputType(DomainsAccountRecoverySettingOutput{})
	pulumi.RegisterOutputType(DomainsAccountRecoverySettingArrayOutput{})
	pulumi.RegisterOutputType(DomainsAccountRecoverySettingMapOutput{})
}
