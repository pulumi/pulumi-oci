// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This resource provides the Api Key resource in Oracle Cloud Infrastructure Identity Domains service.
//
// Create a user's API key.
//
// ## Import
//
// ApiKeys can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:Identity/domainsApiKey:DomainsApiKey test_api_key "idcsEndpoint/{idcsEndpoint}/apiKeys/{apiKeyId}"
//
// ```
type DomainsApiKey struct {
	pulumi.CustomResourceState

	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayOutput `pulumi:"attributeSets"`
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrOutput `pulumi:"attributes"`
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrOutput `pulumi:"authorization"`
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid pulumi.StringOutput `pulumi:"compartmentOcid"`
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress pulumi.BoolOutput `pulumi:"deleteInProgress"`
	// Description
	//
	// **Added In:** 2101262133
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * type: string
	// * mutability: readWrite
	// * required: false
	// * returned: default
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid pulumi.StringOutput `pulumi:"domainOcid"`
	// (Updatable) Fingerprint
	//
	// **Added In:** 2010242156
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * type: string
	// * mutability: readOnly
	// * required: true
	// * returned: default
	Fingerprint pulumi.StringOutput `pulumi:"fingerprint"`
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies DomainsApiKeyIdcsCreatedByArrayOutput `pulumi:"idcsCreatedBies"`
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringOutput `pulumi:"idcsEndpoint"`
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies DomainsApiKeyIdcsLastModifiedByArrayOutput `pulumi:"idcsLastModifiedBies"`
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease pulumi.StringOutput `pulumi:"idcsLastUpgradedInRelease"`
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations pulumi.StringArrayOutput `pulumi:"idcsPreventedOperations"`
	// Key or name of the tag.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Key pulumi.StringOutput `pulumi:"key"`
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas DomainsApiKeyMetaArrayOutput `pulumi:"metas"`
	// The user's OCID.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: always
	// * type: string
	// * uniqueness: none
	Ocid pulumi.StringOutput `pulumi:"ocid"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrOutput `pulumi:"resourceTypeSchemaVersion"`
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayOutput `pulumi:"schemas"`
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsApiKeyTagArrayOutput `pulumi:"tags"`
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	TenancyOcid pulumi.StringOutput `pulumi:"tenancyOcid"`
	// Controls whether a user can update themselves or not via User related APIs
	UrnietfparamsscimschemasoracleidcsextensionselfChangeUser DomainsApiKeyUrnietfparamsscimschemasoracleidcsextensionselfChangeUserOutput `pulumi:"urnietfparamsscimschemasoracleidcsextensionselfChangeUser"`
	// The user linked to the API key.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	User DomainsApiKeyUserOutput `pulumi:"user"`
}

// NewDomainsApiKey registers a new resource with the given unique name, arguments, and options.
func NewDomainsApiKey(ctx *pulumi.Context,
	name string, args *DomainsApiKeyArgs, opts ...pulumi.ResourceOption) (*DomainsApiKey, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IdcsEndpoint == nil {
		return nil, errors.New("invalid value for required argument 'IdcsEndpoint'")
	}
	if args.Key == nil {
		return nil, errors.New("invalid value for required argument 'Key'")
	}
	if args.Schemas == nil {
		return nil, errors.New("invalid value for required argument 'Schemas'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DomainsApiKey
	err := ctx.RegisterResource("oci:Identity/domainsApiKey:DomainsApiKey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomainsApiKey gets an existing DomainsApiKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainsApiKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainsApiKeyState, opts ...pulumi.ResourceOption) (*DomainsApiKey, error) {
	var resource DomainsApiKey
	err := ctx.ReadResource("oci:Identity/domainsApiKey:DomainsApiKey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DomainsApiKey resources.
type domainsApiKeyState struct {
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets []string `pulumi:"attributeSets"`
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes *string `pulumi:"attributes"`
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid *string `pulumi:"compartmentOcid"`
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress *bool `pulumi:"deleteInProgress"`
	// Description
	//
	// **Added In:** 2101262133
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * type: string
	// * mutability: readWrite
	// * required: false
	// * returned: default
	Description *string `pulumi:"description"`
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid *string `pulumi:"domainOcid"`
	// (Updatable) Fingerprint
	//
	// **Added In:** 2010242156
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * type: string
	// * mutability: readOnly
	// * required: true
	// * returned: default
	Fingerprint *string `pulumi:"fingerprint"`
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies []DomainsApiKeyIdcsCreatedBy `pulumi:"idcsCreatedBies"`
	// The basic endpoint for the identity domain
	IdcsEndpoint *string `pulumi:"idcsEndpoint"`
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies []DomainsApiKeyIdcsLastModifiedBy `pulumi:"idcsLastModifiedBies"`
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease *string `pulumi:"idcsLastUpgradedInRelease"`
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations []string `pulumi:"idcsPreventedOperations"`
	// Key or name of the tag.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Key *string `pulumi:"key"`
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas []DomainsApiKeyMeta `pulumi:"metas"`
	// The user's OCID.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: always
	// * type: string
	// * uniqueness: none
	Ocid *string `pulumi:"ocid"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas []string `pulumi:"schemas"`
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags []DomainsApiKeyTag `pulumi:"tags"`
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	TenancyOcid *string `pulumi:"tenancyOcid"`
	// Controls whether a user can update themselves or not via User related APIs
	UrnietfparamsscimschemasoracleidcsextensionselfChangeUser *DomainsApiKeyUrnietfparamsscimschemasoracleidcsextensionselfChangeUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionselfChangeUser"`
	// The user linked to the API key.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	User *DomainsApiKeyUser `pulumi:"user"`
}

type DomainsApiKeyState struct {
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayInput
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrInput
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid pulumi.StringPtrInput
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress pulumi.BoolPtrInput
	// Description
	//
	// **Added In:** 2101262133
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * type: string
	// * mutability: readWrite
	// * required: false
	// * returned: default
	Description pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid pulumi.StringPtrInput
	// (Updatable) Fingerprint
	//
	// **Added In:** 2010242156
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * type: string
	// * mutability: readOnly
	// * required: true
	// * returned: default
	Fingerprint pulumi.StringPtrInput
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies DomainsApiKeyIdcsCreatedByArrayInput
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringPtrInput
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies DomainsApiKeyIdcsLastModifiedByArrayInput
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease pulumi.StringPtrInput
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations pulumi.StringArrayInput
	// Key or name of the tag.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Key pulumi.StringPtrInput
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas DomainsApiKeyMetaArrayInput
	// The user's OCID.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: always
	// * type: string
	// * uniqueness: none
	Ocid pulumi.StringPtrInput
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayInput
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsApiKeyTagArrayInput
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	TenancyOcid pulumi.StringPtrInput
	// Controls whether a user can update themselves or not via User related APIs
	UrnietfparamsscimschemasoracleidcsextensionselfChangeUser DomainsApiKeyUrnietfparamsscimschemasoracleidcsextensionselfChangeUserPtrInput
	// The user linked to the API key.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	User DomainsApiKeyUserPtrInput
}

func (DomainsApiKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainsApiKeyState)(nil)).Elem()
}

type domainsApiKeyArgs struct {
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets []string `pulumi:"attributeSets"`
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes *string `pulumi:"attributes"`
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// Description
	//
	// **Added In:** 2101262133
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * type: string
	// * mutability: readWrite
	// * required: false
	// * returned: default
	Description *string `pulumi:"description"`
	// The basic endpoint for the identity domain
	IdcsEndpoint string `pulumi:"idcsEndpoint"`
	// Key or name of the tag.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Key string `pulumi:"key"`
	// The user's OCID.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: always
	// * type: string
	// * uniqueness: none
	Ocid *string `pulumi:"ocid"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas []string `pulumi:"schemas"`
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags []DomainsApiKeyTag `pulumi:"tags"`
	// Controls whether a user can update themselves or not via User related APIs
	UrnietfparamsscimschemasoracleidcsextensionselfChangeUser *DomainsApiKeyUrnietfparamsscimschemasoracleidcsextensionselfChangeUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionselfChangeUser"`
	// The user linked to the API key.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	User *DomainsApiKeyUser `pulumi:"user"`
}

// The set of arguments for constructing a DomainsApiKey resource.
type DomainsApiKeyArgs struct {
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayInput
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrInput
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput
	// Description
	//
	// **Added In:** 2101262133
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * type: string
	// * mutability: readWrite
	// * required: false
	// * returned: default
	Description pulumi.StringPtrInput
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringInput
	// Key or name of the tag.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Key pulumi.StringInput
	// The user's OCID.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: always
	// * type: string
	// * uniqueness: none
	Ocid pulumi.StringPtrInput
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayInput
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsApiKeyTagArrayInput
	// Controls whether a user can update themselves or not via User related APIs
	UrnietfparamsscimschemasoracleidcsextensionselfChangeUser DomainsApiKeyUrnietfparamsscimschemasoracleidcsextensionselfChangeUserPtrInput
	// The user linked to the API key.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	User DomainsApiKeyUserPtrInput
}

func (DomainsApiKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainsApiKeyArgs)(nil)).Elem()
}

type DomainsApiKeyInput interface {
	pulumi.Input

	ToDomainsApiKeyOutput() DomainsApiKeyOutput
	ToDomainsApiKeyOutputWithContext(ctx context.Context) DomainsApiKeyOutput
}

func (*DomainsApiKey) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainsApiKey)(nil)).Elem()
}

func (i *DomainsApiKey) ToDomainsApiKeyOutput() DomainsApiKeyOutput {
	return i.ToDomainsApiKeyOutputWithContext(context.Background())
}

func (i *DomainsApiKey) ToDomainsApiKeyOutputWithContext(ctx context.Context) DomainsApiKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsApiKeyOutput)
}

func (i *DomainsApiKey) ToOutput(ctx context.Context) pulumix.Output[*DomainsApiKey] {
	return pulumix.Output[*DomainsApiKey]{
		OutputState: i.ToDomainsApiKeyOutputWithContext(ctx).OutputState,
	}
}

// DomainsApiKeyArrayInput is an input type that accepts DomainsApiKeyArray and DomainsApiKeyArrayOutput values.
// You can construct a concrete instance of `DomainsApiKeyArrayInput` via:
//
//	DomainsApiKeyArray{ DomainsApiKeyArgs{...} }
type DomainsApiKeyArrayInput interface {
	pulumi.Input

	ToDomainsApiKeyArrayOutput() DomainsApiKeyArrayOutput
	ToDomainsApiKeyArrayOutputWithContext(context.Context) DomainsApiKeyArrayOutput
}

type DomainsApiKeyArray []DomainsApiKeyInput

func (DomainsApiKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainsApiKey)(nil)).Elem()
}

func (i DomainsApiKeyArray) ToDomainsApiKeyArrayOutput() DomainsApiKeyArrayOutput {
	return i.ToDomainsApiKeyArrayOutputWithContext(context.Background())
}

func (i DomainsApiKeyArray) ToDomainsApiKeyArrayOutputWithContext(ctx context.Context) DomainsApiKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsApiKeyArrayOutput)
}

func (i DomainsApiKeyArray) ToOutput(ctx context.Context) pulumix.Output[[]*DomainsApiKey] {
	return pulumix.Output[[]*DomainsApiKey]{
		OutputState: i.ToDomainsApiKeyArrayOutputWithContext(ctx).OutputState,
	}
}

// DomainsApiKeyMapInput is an input type that accepts DomainsApiKeyMap and DomainsApiKeyMapOutput values.
// You can construct a concrete instance of `DomainsApiKeyMapInput` via:
//
//	DomainsApiKeyMap{ "key": DomainsApiKeyArgs{...} }
type DomainsApiKeyMapInput interface {
	pulumi.Input

	ToDomainsApiKeyMapOutput() DomainsApiKeyMapOutput
	ToDomainsApiKeyMapOutputWithContext(context.Context) DomainsApiKeyMapOutput
}

type DomainsApiKeyMap map[string]DomainsApiKeyInput

func (DomainsApiKeyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainsApiKey)(nil)).Elem()
}

func (i DomainsApiKeyMap) ToDomainsApiKeyMapOutput() DomainsApiKeyMapOutput {
	return i.ToDomainsApiKeyMapOutputWithContext(context.Background())
}

func (i DomainsApiKeyMap) ToDomainsApiKeyMapOutputWithContext(ctx context.Context) DomainsApiKeyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsApiKeyMapOutput)
}

func (i DomainsApiKeyMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*DomainsApiKey] {
	return pulumix.Output[map[string]*DomainsApiKey]{
		OutputState: i.ToDomainsApiKeyMapOutputWithContext(ctx).OutputState,
	}
}

type DomainsApiKeyOutput struct{ *pulumi.OutputState }

func (DomainsApiKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainsApiKey)(nil)).Elem()
}

func (o DomainsApiKeyOutput) ToDomainsApiKeyOutput() DomainsApiKeyOutput {
	return o
}

func (o DomainsApiKeyOutput) ToDomainsApiKeyOutputWithContext(ctx context.Context) DomainsApiKeyOutput {
	return o
}

func (o DomainsApiKeyOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainsApiKey] {
	return pulumix.Output[*DomainsApiKey]{
		OutputState: o.OutputState,
	}
}

// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
func (o DomainsApiKeyOutput) AttributeSets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsApiKey) pulumi.StringArrayOutput { return v.AttributeSets }).(pulumi.StringArrayOutput)
}

// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
func (o DomainsApiKeyOutput) Attributes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsApiKey) pulumi.StringPtrOutput { return v.Attributes }).(pulumi.StringPtrOutput)
}

// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
func (o DomainsApiKeyOutput) Authorization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsApiKey) pulumi.StringPtrOutput { return v.Authorization }).(pulumi.StringPtrOutput)
}

// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsApiKeyOutput) CompartmentOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsApiKey) pulumi.StringOutput { return v.CompartmentOcid }).(pulumi.StringOutput)
}

// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: boolean
// * uniqueness: none
func (o DomainsApiKeyOutput) DeleteInProgress() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsApiKey) pulumi.BoolOutput { return v.DeleteInProgress }).(pulumi.BoolOutput)
}

// Description
//
// **Added In:** 2101262133
//
// **SCIM++ Properties:**
// * caseExact: false
// * type: string
// * mutability: readWrite
// * required: false
// * returned: default
func (o DomainsApiKeyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsApiKey) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsApiKeyOutput) DomainOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsApiKey) pulumi.StringOutput { return v.DomainOcid }).(pulumi.StringOutput)
}

// (Updatable) Fingerprint
//
// **Added In:** 2010242156
//
// **SCIM++ Properties:**
// * caseExact: true
// * idcsSearchable: true
// * type: string
// * mutability: readOnly
// * required: true
// * returned: default
func (o DomainsApiKeyOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsApiKey) pulumi.StringOutput { return v.Fingerprint }).(pulumi.StringOutput)
}

// (Updatable) The User or App who created the Resource
//
// **SCIM++ Properties:**
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: true
// * returned: default
// * type: complex
func (o DomainsApiKeyOutput) IdcsCreatedBies() DomainsApiKeyIdcsCreatedByArrayOutput {
	return o.ApplyT(func(v *DomainsApiKey) DomainsApiKeyIdcsCreatedByArrayOutput { return v.IdcsCreatedBies }).(DomainsApiKeyIdcsCreatedByArrayOutput)
}

// The basic endpoint for the identity domain
func (o DomainsApiKeyOutput) IdcsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsApiKey) pulumi.StringOutput { return v.IdcsEndpoint }).(pulumi.StringOutput)
}

// (Updatable) The User or App who modified the Resource
//
// **SCIM++ Properties:**
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: complex
func (o DomainsApiKeyOutput) IdcsLastModifiedBies() DomainsApiKeyIdcsLastModifiedByArrayOutput {
	return o.ApplyT(func(v *DomainsApiKey) DomainsApiKeyIdcsLastModifiedByArrayOutput { return v.IdcsLastModifiedBies }).(DomainsApiKeyIdcsLastModifiedByArrayOutput)
}

// (Updatable) The release number when the resource was upgraded.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: request
// * type: string
// * uniqueness: none
func (o DomainsApiKeyOutput) IdcsLastUpgradedInRelease() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsApiKey) pulumi.StringOutput { return v.IdcsLastUpgradedInRelease }).(pulumi.StringOutput)
}

// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
//
// **SCIM++ Properties:**
// * idcsSearchable: false
// * multiValued: true
// * mutability: readOnly
// * required: false
// * returned: request
// * type: string
// * uniqueness: none
func (o DomainsApiKeyOutput) IdcsPreventedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsApiKey) pulumi.StringArrayOutput { return v.IdcsPreventedOperations }).(pulumi.StringArrayOutput)
}

// Key or name of the tag.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: true
// * multiValued: false
// * mutability: readWrite
// * required: true
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsApiKeyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsApiKey) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
// * type: complex
func (o DomainsApiKeyOutput) Metas() DomainsApiKeyMetaArrayOutput {
	return o.ApplyT(func(v *DomainsApiKey) DomainsApiKeyMetaArrayOutput { return v.Metas }).(DomainsApiKeyMetaArrayOutput)
}

// The user's OCID.
//
// **SCIM++ Properties:**
// * caseExact: true
// * idcsSearchable: true
// * multiValued: false
// * mutability: immutable
// * required: false
// * returned: always
// * type: string
// * uniqueness: none
func (o DomainsApiKeyOutput) Ocid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsApiKey) pulumi.StringOutput { return v.Ocid }).(pulumi.StringOutput)
}

// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
func (o DomainsApiKeyOutput) ResourceTypeSchemaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsApiKey) pulumi.StringPtrOutput { return v.ResourceTypeSchemaVersion }).(pulumi.StringPtrOutput)
}

// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: true
// * mutability: readWrite
// * required: true
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsApiKeyOutput) Schemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsApiKey) pulumi.StringArrayOutput { return v.Schemas }).(pulumi.StringArrayOutput)
}

// A list of tags on this resource.
//
// **SCIM++ Properties:**
// * idcsCompositeKey: [key, value]
// * idcsSearchable: true
// * multiValued: true
// * mutability: readWrite
// * required: false
// * returned: request
// * type: complex
// * uniqueness: none
func (o DomainsApiKeyOutput) Tags() DomainsApiKeyTagArrayOutput {
	return o.ApplyT(func(v *DomainsApiKey) DomainsApiKeyTagArrayOutput { return v.Tags }).(DomainsApiKeyTagArrayOutput)
}

// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsApiKeyOutput) TenancyOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsApiKey) pulumi.StringOutput { return v.TenancyOcid }).(pulumi.StringOutput)
}

// Controls whether a user can update themselves or not via User related APIs
func (o DomainsApiKeyOutput) UrnietfparamsscimschemasoracleidcsextensionselfChangeUser() DomainsApiKeyUrnietfparamsscimschemasoracleidcsextensionselfChangeUserOutput {
	return o.ApplyT(func(v *DomainsApiKey) DomainsApiKeyUrnietfparamsscimschemasoracleidcsextensionselfChangeUserOutput {
		return v.UrnietfparamsscimschemasoracleidcsextensionselfChangeUser
	}).(DomainsApiKeyUrnietfparamsscimschemasoracleidcsextensionselfChangeUserOutput)
}

// The user linked to the API key.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: true
// * multiValued: false
// * mutability: immutable
// * required: false
// * returned: default
// * type: complex
// * uniqueness: none
func (o DomainsApiKeyOutput) User() DomainsApiKeyUserOutput {
	return o.ApplyT(func(v *DomainsApiKey) DomainsApiKeyUserOutput { return v.User }).(DomainsApiKeyUserOutput)
}

type DomainsApiKeyArrayOutput struct{ *pulumi.OutputState }

func (DomainsApiKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainsApiKey)(nil)).Elem()
}

func (o DomainsApiKeyArrayOutput) ToDomainsApiKeyArrayOutput() DomainsApiKeyArrayOutput {
	return o
}

func (o DomainsApiKeyArrayOutput) ToDomainsApiKeyArrayOutputWithContext(ctx context.Context) DomainsApiKeyArrayOutput {
	return o
}

func (o DomainsApiKeyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*DomainsApiKey] {
	return pulumix.Output[[]*DomainsApiKey]{
		OutputState: o.OutputState,
	}
}

func (o DomainsApiKeyArrayOutput) Index(i pulumi.IntInput) DomainsApiKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DomainsApiKey {
		return vs[0].([]*DomainsApiKey)[vs[1].(int)]
	}).(DomainsApiKeyOutput)
}

type DomainsApiKeyMapOutput struct{ *pulumi.OutputState }

func (DomainsApiKeyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainsApiKey)(nil)).Elem()
}

func (o DomainsApiKeyMapOutput) ToDomainsApiKeyMapOutput() DomainsApiKeyMapOutput {
	return o
}

func (o DomainsApiKeyMapOutput) ToDomainsApiKeyMapOutputWithContext(ctx context.Context) DomainsApiKeyMapOutput {
	return o
}

func (o DomainsApiKeyMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*DomainsApiKey] {
	return pulumix.Output[map[string]*DomainsApiKey]{
		OutputState: o.OutputState,
	}
}

func (o DomainsApiKeyMapOutput) MapIndex(k pulumi.StringInput) DomainsApiKeyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DomainsApiKey {
		return vs[0].(map[string]*DomainsApiKey)[vs[1].(string)]
	}).(DomainsApiKeyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsApiKeyInput)(nil)).Elem(), &DomainsApiKey{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsApiKeyArrayInput)(nil)).Elem(), DomainsApiKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsApiKeyMapInput)(nil)).Elem(), DomainsApiKeyMap{})
	pulumi.RegisterOutputType(DomainsApiKeyOutput{})
	pulumi.RegisterOutputType(DomainsApiKeyArrayOutput{})
	pulumi.RegisterOutputType(DomainsApiKeyMapOutput{})
}
