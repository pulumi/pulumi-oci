// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Approval Workflow Assignment resource in Oracle Cloud Infrastructure Identity Domains service.
//
// # Create Approval Workflow Assignment
//
// ## Import
//
// ApprovalWorkflowAssignments can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Identity/domainsApprovalWorkflowAssignment:DomainsApprovalWorkflowAssignment test_approval_workflow_assignment "idcsEndpoint/{idcsEndpoint}/approvalWorkflowAssignments/{approvalWorkflowAssignmentId}"
// ```
type DomainsApprovalWorkflowAssignment struct {
	pulumi.CustomResourceState

	// Details of the Approval Workflow
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: complex
	// * uniqueness: none
	ApprovalWorkflow DomainsApprovalWorkflowAssignmentApprovalWorkflowOutput `pulumi:"approvalWorkflow"`
	// Details of resource for which Approval Workflow is assigned
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: complex
	// * uniqueness: none
	AssignedTo DomainsApprovalWorkflowAssignmentAssignedToOutput `pulumi:"assignedTo"`
	// Type of approval workflow assignment to the resource. Resources like Group have only one workflow associated (default assignment type is membership), but resources like TemporalBusinessRole can have atleast 2 AWs attached, one for membership to TPR, another for activation of that TPR membership
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	AssignmentType pulumi.StringOutput `pulumi:"assignmentType"`
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayOutput `pulumi:"attributeSets"`
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrOutput `pulumi:"attributes"`
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrOutput `pulumi:"authorization"`
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid pulumi.StringOutput `pulumi:"compartmentOcid"`
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress pulumi.BoolOutput `pulumi:"deleteInProgress"`
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid pulumi.StringOutput `pulumi:"domainOcid"`
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies DomainsApprovalWorkflowAssignmentIdcsCreatedByArrayOutput `pulumi:"idcsCreatedBies"`
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringOutput `pulumi:"idcsEndpoint"`
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies DomainsApprovalWorkflowAssignmentIdcsLastModifiedByArrayOutput `pulumi:"idcsLastModifiedBies"`
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease pulumi.StringOutput `pulumi:"idcsLastUpgradedInRelease"`
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations pulumi.StringArrayOutput `pulumi:"idcsPreventedOperations"`
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas DomainsApprovalWorkflowAssignmentMetaArrayOutput `pulumi:"metas"`
	// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid pulumi.StringOutput `pulumi:"ocid"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrOutput `pulumi:"resourceTypeSchemaVersion"`
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayOutput `pulumi:"schemas"`
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsApprovalWorkflowAssignmentTagArrayOutput `pulumi:"tags"`
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TenancyOcid pulumi.StringOutput `pulumi:"tenancyOcid"`
}

// NewDomainsApprovalWorkflowAssignment registers a new resource with the given unique name, arguments, and options.
func NewDomainsApprovalWorkflowAssignment(ctx *pulumi.Context,
	name string, args *DomainsApprovalWorkflowAssignmentArgs, opts ...pulumi.ResourceOption) (*DomainsApprovalWorkflowAssignment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApprovalWorkflow == nil {
		return nil, errors.New("invalid value for required argument 'ApprovalWorkflow'")
	}
	if args.AssignedTo == nil {
		return nil, errors.New("invalid value for required argument 'AssignedTo'")
	}
	if args.AssignmentType == nil {
		return nil, errors.New("invalid value for required argument 'AssignmentType'")
	}
	if args.IdcsEndpoint == nil {
		return nil, errors.New("invalid value for required argument 'IdcsEndpoint'")
	}
	if args.Schemas == nil {
		return nil, errors.New("invalid value for required argument 'Schemas'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DomainsApprovalWorkflowAssignment
	err := ctx.RegisterResource("oci:Identity/domainsApprovalWorkflowAssignment:DomainsApprovalWorkflowAssignment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomainsApprovalWorkflowAssignment gets an existing DomainsApprovalWorkflowAssignment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainsApprovalWorkflowAssignment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainsApprovalWorkflowAssignmentState, opts ...pulumi.ResourceOption) (*DomainsApprovalWorkflowAssignment, error) {
	var resource DomainsApprovalWorkflowAssignment
	err := ctx.ReadResource("oci:Identity/domainsApprovalWorkflowAssignment:DomainsApprovalWorkflowAssignment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DomainsApprovalWorkflowAssignment resources.
type domainsApprovalWorkflowAssignmentState struct {
	// Details of the Approval Workflow
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: complex
	// * uniqueness: none
	ApprovalWorkflow *DomainsApprovalWorkflowAssignmentApprovalWorkflow `pulumi:"approvalWorkflow"`
	// Details of resource for which Approval Workflow is assigned
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: complex
	// * uniqueness: none
	AssignedTo *DomainsApprovalWorkflowAssignmentAssignedTo `pulumi:"assignedTo"`
	// Type of approval workflow assignment to the resource. Resources like Group have only one workflow associated (default assignment type is membership), but resources like TemporalBusinessRole can have atleast 2 AWs attached, one for membership to TPR, another for activation of that TPR membership
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	AssignmentType *string `pulumi:"assignmentType"`
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets []string `pulumi:"attributeSets"`
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes *string `pulumi:"attributes"`
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid *string `pulumi:"compartmentOcid"`
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress *bool `pulumi:"deleteInProgress"`
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid *string `pulumi:"domainOcid"`
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies []DomainsApprovalWorkflowAssignmentIdcsCreatedBy `pulumi:"idcsCreatedBies"`
	// The basic endpoint for the identity domain
	IdcsEndpoint *string `pulumi:"idcsEndpoint"`
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies []DomainsApprovalWorkflowAssignmentIdcsLastModifiedBy `pulumi:"idcsLastModifiedBies"`
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease *string `pulumi:"idcsLastUpgradedInRelease"`
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations []string `pulumi:"idcsPreventedOperations"`
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas []DomainsApprovalWorkflowAssignmentMeta `pulumi:"metas"`
	// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid *string `pulumi:"ocid"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas []string `pulumi:"schemas"`
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags []DomainsApprovalWorkflowAssignmentTag `pulumi:"tags"`
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TenancyOcid *string `pulumi:"tenancyOcid"`
}

type DomainsApprovalWorkflowAssignmentState struct {
	// Details of the Approval Workflow
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: complex
	// * uniqueness: none
	ApprovalWorkflow DomainsApprovalWorkflowAssignmentApprovalWorkflowPtrInput
	// Details of resource for which Approval Workflow is assigned
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: complex
	// * uniqueness: none
	AssignedTo DomainsApprovalWorkflowAssignmentAssignedToPtrInput
	// Type of approval workflow assignment to the resource. Resources like Group have only one workflow associated (default assignment type is membership), but resources like TemporalBusinessRole can have atleast 2 AWs attached, one for membership to TPR, another for activation of that TPR membership
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	AssignmentType pulumi.StringPtrInput
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayInput
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrInput
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid pulumi.StringPtrInput
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress pulumi.BoolPtrInput
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid pulumi.StringPtrInput
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies DomainsApprovalWorkflowAssignmentIdcsCreatedByArrayInput
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringPtrInput
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies DomainsApprovalWorkflowAssignmentIdcsLastModifiedByArrayInput
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease pulumi.StringPtrInput
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations pulumi.StringArrayInput
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas DomainsApprovalWorkflowAssignmentMetaArrayInput
	// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid pulumi.StringPtrInput
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayInput
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsApprovalWorkflowAssignmentTagArrayInput
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TenancyOcid pulumi.StringPtrInput
}

func (DomainsApprovalWorkflowAssignmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainsApprovalWorkflowAssignmentState)(nil)).Elem()
}

type domainsApprovalWorkflowAssignmentArgs struct {
	// Details of the Approval Workflow
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: complex
	// * uniqueness: none
	ApprovalWorkflow DomainsApprovalWorkflowAssignmentApprovalWorkflow `pulumi:"approvalWorkflow"`
	// Details of resource for which Approval Workflow is assigned
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: complex
	// * uniqueness: none
	AssignedTo DomainsApprovalWorkflowAssignmentAssignedTo `pulumi:"assignedTo"`
	// Type of approval workflow assignment to the resource. Resources like Group have only one workflow associated (default assignment type is membership), but resources like TemporalBusinessRole can have atleast 2 AWs attached, one for membership to TPR, another for activation of that TPR membership
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	AssignmentType string `pulumi:"assignmentType"`
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets []string `pulumi:"attributeSets"`
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes *string `pulumi:"attributes"`
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// The basic endpoint for the identity domain
	IdcsEndpoint string `pulumi:"idcsEndpoint"`
	// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid *string `pulumi:"ocid"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas []string `pulumi:"schemas"`
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags []DomainsApprovalWorkflowAssignmentTag `pulumi:"tags"`
}

// The set of arguments for constructing a DomainsApprovalWorkflowAssignment resource.
type DomainsApprovalWorkflowAssignmentArgs struct {
	// Details of the Approval Workflow
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: complex
	// * uniqueness: none
	ApprovalWorkflow DomainsApprovalWorkflowAssignmentApprovalWorkflowInput
	// Details of resource for which Approval Workflow is assigned
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: complex
	// * uniqueness: none
	AssignedTo DomainsApprovalWorkflowAssignmentAssignedToInput
	// Type of approval workflow assignment to the resource. Resources like Group have only one workflow associated (default assignment type is membership), but resources like TemporalBusinessRole can have atleast 2 AWs attached, one for membership to TPR, another for activation of that TPR membership
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	AssignmentType pulumi.StringInput
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayInput
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrInput
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringInput
	// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid pulumi.StringPtrInput
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayInput
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsApprovalWorkflowAssignmentTagArrayInput
}

func (DomainsApprovalWorkflowAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainsApprovalWorkflowAssignmentArgs)(nil)).Elem()
}

type DomainsApprovalWorkflowAssignmentInput interface {
	pulumi.Input

	ToDomainsApprovalWorkflowAssignmentOutput() DomainsApprovalWorkflowAssignmentOutput
	ToDomainsApprovalWorkflowAssignmentOutputWithContext(ctx context.Context) DomainsApprovalWorkflowAssignmentOutput
}

func (*DomainsApprovalWorkflowAssignment) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainsApprovalWorkflowAssignment)(nil)).Elem()
}

func (i *DomainsApprovalWorkflowAssignment) ToDomainsApprovalWorkflowAssignmentOutput() DomainsApprovalWorkflowAssignmentOutput {
	return i.ToDomainsApprovalWorkflowAssignmentOutputWithContext(context.Background())
}

func (i *DomainsApprovalWorkflowAssignment) ToDomainsApprovalWorkflowAssignmentOutputWithContext(ctx context.Context) DomainsApprovalWorkflowAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsApprovalWorkflowAssignmentOutput)
}

// DomainsApprovalWorkflowAssignmentArrayInput is an input type that accepts DomainsApprovalWorkflowAssignmentArray and DomainsApprovalWorkflowAssignmentArrayOutput values.
// You can construct a concrete instance of `DomainsApprovalWorkflowAssignmentArrayInput` via:
//
//	DomainsApprovalWorkflowAssignmentArray{ DomainsApprovalWorkflowAssignmentArgs{...} }
type DomainsApprovalWorkflowAssignmentArrayInput interface {
	pulumi.Input

	ToDomainsApprovalWorkflowAssignmentArrayOutput() DomainsApprovalWorkflowAssignmentArrayOutput
	ToDomainsApprovalWorkflowAssignmentArrayOutputWithContext(context.Context) DomainsApprovalWorkflowAssignmentArrayOutput
}

type DomainsApprovalWorkflowAssignmentArray []DomainsApprovalWorkflowAssignmentInput

func (DomainsApprovalWorkflowAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainsApprovalWorkflowAssignment)(nil)).Elem()
}

func (i DomainsApprovalWorkflowAssignmentArray) ToDomainsApprovalWorkflowAssignmentArrayOutput() DomainsApprovalWorkflowAssignmentArrayOutput {
	return i.ToDomainsApprovalWorkflowAssignmentArrayOutputWithContext(context.Background())
}

func (i DomainsApprovalWorkflowAssignmentArray) ToDomainsApprovalWorkflowAssignmentArrayOutputWithContext(ctx context.Context) DomainsApprovalWorkflowAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsApprovalWorkflowAssignmentArrayOutput)
}

// DomainsApprovalWorkflowAssignmentMapInput is an input type that accepts DomainsApprovalWorkflowAssignmentMap and DomainsApprovalWorkflowAssignmentMapOutput values.
// You can construct a concrete instance of `DomainsApprovalWorkflowAssignmentMapInput` via:
//
//	DomainsApprovalWorkflowAssignmentMap{ "key": DomainsApprovalWorkflowAssignmentArgs{...} }
type DomainsApprovalWorkflowAssignmentMapInput interface {
	pulumi.Input

	ToDomainsApprovalWorkflowAssignmentMapOutput() DomainsApprovalWorkflowAssignmentMapOutput
	ToDomainsApprovalWorkflowAssignmentMapOutputWithContext(context.Context) DomainsApprovalWorkflowAssignmentMapOutput
}

type DomainsApprovalWorkflowAssignmentMap map[string]DomainsApprovalWorkflowAssignmentInput

func (DomainsApprovalWorkflowAssignmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainsApprovalWorkflowAssignment)(nil)).Elem()
}

func (i DomainsApprovalWorkflowAssignmentMap) ToDomainsApprovalWorkflowAssignmentMapOutput() DomainsApprovalWorkflowAssignmentMapOutput {
	return i.ToDomainsApprovalWorkflowAssignmentMapOutputWithContext(context.Background())
}

func (i DomainsApprovalWorkflowAssignmentMap) ToDomainsApprovalWorkflowAssignmentMapOutputWithContext(ctx context.Context) DomainsApprovalWorkflowAssignmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsApprovalWorkflowAssignmentMapOutput)
}

type DomainsApprovalWorkflowAssignmentOutput struct{ *pulumi.OutputState }

func (DomainsApprovalWorkflowAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainsApprovalWorkflowAssignment)(nil)).Elem()
}

func (o DomainsApprovalWorkflowAssignmentOutput) ToDomainsApprovalWorkflowAssignmentOutput() DomainsApprovalWorkflowAssignmentOutput {
	return o
}

func (o DomainsApprovalWorkflowAssignmentOutput) ToDomainsApprovalWorkflowAssignmentOutputWithContext(ctx context.Context) DomainsApprovalWorkflowAssignmentOutput {
	return o
}

// Details of the Approval Workflow
//
// **SCIM++ Properties:**
// * caseExact: true
// * idcsSearchable: true
// * multiValued: false
// * mutability: readWrite
// * required: true
// * returned: default
// * type: complex
// * uniqueness: none
func (o DomainsApprovalWorkflowAssignmentOutput) ApprovalWorkflow() DomainsApprovalWorkflowAssignmentApprovalWorkflowOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowAssignment) DomainsApprovalWorkflowAssignmentApprovalWorkflowOutput {
		return v.ApprovalWorkflow
	}).(DomainsApprovalWorkflowAssignmentApprovalWorkflowOutput)
}

// Details of resource for which Approval Workflow is assigned
//
// **SCIM++ Properties:**
// * caseExact: true
// * idcsSearchable: true
// * multiValued: false
// * mutability: readWrite
// * required: true
// * returned: default
// * type: complex
// * uniqueness: none
func (o DomainsApprovalWorkflowAssignmentOutput) AssignedTo() DomainsApprovalWorkflowAssignmentAssignedToOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowAssignment) DomainsApprovalWorkflowAssignmentAssignedToOutput {
		return v.AssignedTo
	}).(DomainsApprovalWorkflowAssignmentAssignedToOutput)
}

// Type of approval workflow assignment to the resource. Resources like Group have only one workflow associated (default assignment type is membership), but resources like TemporalBusinessRole can have atleast 2 AWs attached, one for membership to TPR, another for activation of that TPR membership
//
// **SCIM++ Properties:**
// * caseExact: true
// * idcsSearchable: true
// * multiValued: false
// * mutability: readWrite
// * required: true
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsApprovalWorkflowAssignmentOutput) AssignmentType() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowAssignment) pulumi.StringOutput { return v.AssignmentType }).(pulumi.StringOutput)
}

// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
func (o DomainsApprovalWorkflowAssignmentOutput) AttributeSets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowAssignment) pulumi.StringArrayOutput { return v.AttributeSets }).(pulumi.StringArrayOutput)
}

// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
func (o DomainsApprovalWorkflowAssignmentOutput) Attributes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowAssignment) pulumi.StringPtrOutput { return v.Attributes }).(pulumi.StringPtrOutput)
}

// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
func (o DomainsApprovalWorkflowAssignmentOutput) Authorization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowAssignment) pulumi.StringPtrOutput { return v.Authorization }).(pulumi.StringPtrOutput)
}

// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsApprovalWorkflowAssignmentOutput) CompartmentOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowAssignment) pulumi.StringOutput { return v.CompartmentOcid }).(pulumi.StringOutput)
}

// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: boolean
// * uniqueness: none
func (o DomainsApprovalWorkflowAssignmentOutput) DeleteInProgress() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowAssignment) pulumi.BoolOutput { return v.DeleteInProgress }).(pulumi.BoolOutput)
}

// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsApprovalWorkflowAssignmentOutput) DomainOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowAssignment) pulumi.StringOutput { return v.DomainOcid }).(pulumi.StringOutput)
}

// (Updatable) The User or App who created the Resource
//
// **SCIM++ Properties:**
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: true
// * returned: default
// * type: complex
func (o DomainsApprovalWorkflowAssignmentOutput) IdcsCreatedBies() DomainsApprovalWorkflowAssignmentIdcsCreatedByArrayOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowAssignment) DomainsApprovalWorkflowAssignmentIdcsCreatedByArrayOutput {
		return v.IdcsCreatedBies
	}).(DomainsApprovalWorkflowAssignmentIdcsCreatedByArrayOutput)
}

// The basic endpoint for the identity domain
func (o DomainsApprovalWorkflowAssignmentOutput) IdcsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowAssignment) pulumi.StringOutput { return v.IdcsEndpoint }).(pulumi.StringOutput)
}

// (Updatable) The User or App who modified the Resource
//
// **SCIM++ Properties:**
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: complex
func (o DomainsApprovalWorkflowAssignmentOutput) IdcsLastModifiedBies() DomainsApprovalWorkflowAssignmentIdcsLastModifiedByArrayOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowAssignment) DomainsApprovalWorkflowAssignmentIdcsLastModifiedByArrayOutput {
		return v.IdcsLastModifiedBies
	}).(DomainsApprovalWorkflowAssignmentIdcsLastModifiedByArrayOutput)
}

// (Updatable) The release number when the resource was upgraded.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: request
// * type: string
// * uniqueness: none
func (o DomainsApprovalWorkflowAssignmentOutput) IdcsLastUpgradedInRelease() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowAssignment) pulumi.StringOutput { return v.IdcsLastUpgradedInRelease }).(pulumi.StringOutput)
}

// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
//
// **SCIM++ Properties:**
// * idcsSearchable: false
// * multiValued: true
// * mutability: readOnly
// * required: false
// * returned: request
// * type: string
// * uniqueness: none
func (o DomainsApprovalWorkflowAssignmentOutput) IdcsPreventedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowAssignment) pulumi.StringArrayOutput { return v.IdcsPreventedOperations }).(pulumi.StringArrayOutput)
}

// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
// * type: complex
func (o DomainsApprovalWorkflowAssignmentOutput) Metas() DomainsApprovalWorkflowAssignmentMetaArrayOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowAssignment) DomainsApprovalWorkflowAssignmentMetaArrayOutput {
		return v.Metas
	}).(DomainsApprovalWorkflowAssignmentMetaArrayOutput)
}

// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
//
// **SCIM++ Properties:**
// * caseExact: true
// * idcsSearchable: true
// * multiValued: false
// * mutability: immutable
// * required: false
// * returned: default
// * type: string
// * uniqueness: global
func (o DomainsApprovalWorkflowAssignmentOutput) Ocid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowAssignment) pulumi.StringOutput { return v.Ocid }).(pulumi.StringOutput)
}

// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
func (o DomainsApprovalWorkflowAssignmentOutput) ResourceTypeSchemaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowAssignment) pulumi.StringPtrOutput { return v.ResourceTypeSchemaVersion }).(pulumi.StringPtrOutput)
}

// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: true
// * mutability: readWrite
// * required: true
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsApprovalWorkflowAssignmentOutput) Schemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowAssignment) pulumi.StringArrayOutput { return v.Schemas }).(pulumi.StringArrayOutput)
}

// A list of tags on this resource.
//
// **SCIM++ Properties:**
// * idcsCompositeKey: [key, value]
// * idcsSearchable: true
// * multiValued: true
// * mutability: readWrite
// * required: false
// * returned: request
// * type: complex
// * uniqueness: none
func (o DomainsApprovalWorkflowAssignmentOutput) Tags() DomainsApprovalWorkflowAssignmentTagArrayOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowAssignment) DomainsApprovalWorkflowAssignmentTagArrayOutput {
		return v.Tags
	}).(DomainsApprovalWorkflowAssignmentTagArrayOutput)
}

// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o DomainsApprovalWorkflowAssignmentOutput) TenancyOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowAssignment) pulumi.StringOutput { return v.TenancyOcid }).(pulumi.StringOutput)
}

type DomainsApprovalWorkflowAssignmentArrayOutput struct{ *pulumi.OutputState }

func (DomainsApprovalWorkflowAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainsApprovalWorkflowAssignment)(nil)).Elem()
}

func (o DomainsApprovalWorkflowAssignmentArrayOutput) ToDomainsApprovalWorkflowAssignmentArrayOutput() DomainsApprovalWorkflowAssignmentArrayOutput {
	return o
}

func (o DomainsApprovalWorkflowAssignmentArrayOutput) ToDomainsApprovalWorkflowAssignmentArrayOutputWithContext(ctx context.Context) DomainsApprovalWorkflowAssignmentArrayOutput {
	return o
}

func (o DomainsApprovalWorkflowAssignmentArrayOutput) Index(i pulumi.IntInput) DomainsApprovalWorkflowAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DomainsApprovalWorkflowAssignment {
		return vs[0].([]*DomainsApprovalWorkflowAssignment)[vs[1].(int)]
	}).(DomainsApprovalWorkflowAssignmentOutput)
}

type DomainsApprovalWorkflowAssignmentMapOutput struct{ *pulumi.OutputState }

func (DomainsApprovalWorkflowAssignmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainsApprovalWorkflowAssignment)(nil)).Elem()
}

func (o DomainsApprovalWorkflowAssignmentMapOutput) ToDomainsApprovalWorkflowAssignmentMapOutput() DomainsApprovalWorkflowAssignmentMapOutput {
	return o
}

func (o DomainsApprovalWorkflowAssignmentMapOutput) ToDomainsApprovalWorkflowAssignmentMapOutputWithContext(ctx context.Context) DomainsApprovalWorkflowAssignmentMapOutput {
	return o
}

func (o DomainsApprovalWorkflowAssignmentMapOutput) MapIndex(k pulumi.StringInput) DomainsApprovalWorkflowAssignmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DomainsApprovalWorkflowAssignment {
		return vs[0].(map[string]*DomainsApprovalWorkflowAssignment)[vs[1].(string)]
	}).(DomainsApprovalWorkflowAssignmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsApprovalWorkflowAssignmentInput)(nil)).Elem(), &DomainsApprovalWorkflowAssignment{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsApprovalWorkflowAssignmentArrayInput)(nil)).Elem(), DomainsApprovalWorkflowAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsApprovalWorkflowAssignmentMapInput)(nil)).Elem(), DomainsApprovalWorkflowAssignmentMap{})
	pulumi.RegisterOutputType(DomainsApprovalWorkflowAssignmentOutput{})
	pulumi.RegisterOutputType(DomainsApprovalWorkflowAssignmentArrayOutput{})
	pulumi.RegisterOutputType(DomainsApprovalWorkflowAssignmentMapOutput{})
}
