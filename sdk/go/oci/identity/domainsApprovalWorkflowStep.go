// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Approval Workflow Step resource in Oracle Cloud Infrastructure Identity Domains service.
//
// # Create ApprovalWorkflowStep
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/identity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := identity.NewDomainsApprovalWorkflowStep(ctx, "test_approval_workflow_step", &identity.DomainsApprovalWorkflowStepArgs{
//				IdcsEndpoint: pulumi.Any(testDomain.Url),
//				Order:        pulumi.Any(approvalWorkflowStepOrder),
//				Schemas: pulumi.StringArray{
//					pulumi.String("urn:ietf:params:scim:schemas:oracle:idcs:ApprovalWorkflowStep"),
//				},
//				Type: pulumi.Any(approvalWorkflowStepType),
//				Approvers: identity.DomainsApprovalWorkflowStepApproverArray{
//					&identity.DomainsApprovalWorkflowStepApproverArgs{
//						Type:  pulumi.Any(approvalWorkflowStepApproversType),
//						Value: pulumi.Any(approvalWorkflowStepApproversValue),
//						Ocid:  pulumi.Any(approvalWorkflowStepApproversOcid),
//					},
//				},
//				ApproversExpressions: pulumi.Any(approvalWorkflowStepApproversExpressions),
//				AttributeSets: pulumi.StringArray{
//					pulumi.String("all"),
//				},
//				Attributes:                pulumi.String(""),
//				Authorization:             pulumi.Any(approvalWorkflowStepAuthorization),
//				Id:                        approvalWorkflowStepId,
//				MinimumApprovals:          pulumi.Any(approvalWorkflowStepMinimumApprovals),
//				Ocid:                      pulumi.Any(approvalWorkflowStepOcid),
//				ResourceTypeSchemaVersion: pulumi.Any(approvalWorkflowStepResourceTypeSchemaVersion),
//				Tags: identity.DomainsApprovalWorkflowStepTagArray{
//					&identity.DomainsApprovalWorkflowStepTagArgs{
//						Key:   pulumi.Any(approvalWorkflowStepTagsKey),
//						Value: pulumi.Any(approvalWorkflowStepTagsValue),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ApprovalWorkflowSteps can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Identity/domainsApprovalWorkflowStep:DomainsApprovalWorkflowStep test_approval_workflow_step "idcsEndpoint/{idcsEndpoint}/approvalWorkflowSteps/{approvalWorkflowStepId}"
// ```
type DomainsApprovalWorkflowStep struct {
	pulumi.CustomResourceState

	// Approvers of the ApprovalWorkflowStep.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * idcsCompositeKey: [value, type]
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Approvers DomainsApprovalWorkflowStepApproverArrayOutput `pulumi:"approvers"`
	// approversExpressions of ApprovalWorkflowStep
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	ApproversExpressions pulumi.StringArrayOutput `pulumi:"approversExpressions"`
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayOutput `pulumi:"attributeSets"`
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrOutput `pulumi:"attributes"`
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrOutput `pulumi:"authorization"`
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid pulumi.StringOutput `pulumi:"compartmentOcid"`
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress pulumi.BoolOutput `pulumi:"deleteInProgress"`
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid pulumi.StringOutput `pulumi:"domainOcid"`
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies DomainsApprovalWorkflowStepIdcsCreatedByArrayOutput `pulumi:"idcsCreatedBies"`
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringOutput `pulumi:"idcsEndpoint"`
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies DomainsApprovalWorkflowStepIdcsLastModifiedByArrayOutput `pulumi:"idcsLastModifiedBies"`
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease pulumi.StringOutput `pulumi:"idcsLastUpgradedInRelease"`
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations pulumi.StringArrayOutput `pulumi:"idcsPreventedOperations"`
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas DomainsApprovalWorkflowStepMetaArrayOutput `pulumi:"metas"`
	// Minimum number of Approvals required for this step.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * idcsMinValue: 1
	// * idcsMaxValue: 2147483647
	// * required: false
	// * returned: default
	// * type: integer
	// * uniqueness: none
	MinimumApprovals pulumi.IntOutput `pulumi:"minimumApprovals"`
	// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid pulumi.StringOutput `pulumi:"ocid"`
	// Order of the ApprovalWorkflowStep.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * idcsMaxValue: 2147483647
	// * required: true
	// * returned: default
	// * type: integer
	// * uniqueness: none
	Order pulumi.IntOutput `pulumi:"order"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrOutput `pulumi:"resourceTypeSchemaVersion"`
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayOutput `pulumi:"schemas"`
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsApprovalWorkflowStepTagArrayOutput `pulumi:"tags"`
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	TenancyOcid pulumi.StringOutput `pulumi:"tenancyOcid"`
	// Type of ApprovalWorkflowStep
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewDomainsApprovalWorkflowStep registers a new resource with the given unique name, arguments, and options.
func NewDomainsApprovalWorkflowStep(ctx *pulumi.Context,
	name string, args *DomainsApprovalWorkflowStepArgs, opts ...pulumi.ResourceOption) (*DomainsApprovalWorkflowStep, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IdcsEndpoint == nil {
		return nil, errors.New("invalid value for required argument 'IdcsEndpoint'")
	}
	if args.Order == nil {
		return nil, errors.New("invalid value for required argument 'Order'")
	}
	if args.Schemas == nil {
		return nil, errors.New("invalid value for required argument 'Schemas'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DomainsApprovalWorkflowStep
	err := ctx.RegisterResource("oci:Identity/domainsApprovalWorkflowStep:DomainsApprovalWorkflowStep", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomainsApprovalWorkflowStep gets an existing DomainsApprovalWorkflowStep resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainsApprovalWorkflowStep(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainsApprovalWorkflowStepState, opts ...pulumi.ResourceOption) (*DomainsApprovalWorkflowStep, error) {
	var resource DomainsApprovalWorkflowStep
	err := ctx.ReadResource("oci:Identity/domainsApprovalWorkflowStep:DomainsApprovalWorkflowStep", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DomainsApprovalWorkflowStep resources.
type domainsApprovalWorkflowStepState struct {
	// Approvers of the ApprovalWorkflowStep.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * idcsCompositeKey: [value, type]
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Approvers []DomainsApprovalWorkflowStepApprover `pulumi:"approvers"`
	// approversExpressions of ApprovalWorkflowStep
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	ApproversExpressions []string `pulumi:"approversExpressions"`
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets []string `pulumi:"attributeSets"`
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes *string `pulumi:"attributes"`
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid *string `pulumi:"compartmentOcid"`
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress *bool `pulumi:"deleteInProgress"`
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid *string `pulumi:"domainOcid"`
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies []DomainsApprovalWorkflowStepIdcsCreatedBy `pulumi:"idcsCreatedBies"`
	// The basic endpoint for the identity domain
	IdcsEndpoint *string `pulumi:"idcsEndpoint"`
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies []DomainsApprovalWorkflowStepIdcsLastModifiedBy `pulumi:"idcsLastModifiedBies"`
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease *string `pulumi:"idcsLastUpgradedInRelease"`
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations []string `pulumi:"idcsPreventedOperations"`
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas []DomainsApprovalWorkflowStepMeta `pulumi:"metas"`
	// Minimum number of Approvals required for this step.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * idcsMinValue: 1
	// * idcsMaxValue: 2147483647
	// * required: false
	// * returned: default
	// * type: integer
	// * uniqueness: none
	MinimumApprovals *int `pulumi:"minimumApprovals"`
	// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid *string `pulumi:"ocid"`
	// Order of the ApprovalWorkflowStep.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * idcsMaxValue: 2147483647
	// * required: true
	// * returned: default
	// * type: integer
	// * uniqueness: none
	Order *int `pulumi:"order"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas []string `pulumi:"schemas"`
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags []DomainsApprovalWorkflowStepTag `pulumi:"tags"`
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	TenancyOcid *string `pulumi:"tenancyOcid"`
	// Type of ApprovalWorkflowStep
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Type *string `pulumi:"type"`
}

type DomainsApprovalWorkflowStepState struct {
	// Approvers of the ApprovalWorkflowStep.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * idcsCompositeKey: [value, type]
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Approvers DomainsApprovalWorkflowStepApproverArrayInput
	// approversExpressions of ApprovalWorkflowStep
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	ApproversExpressions pulumi.StringArrayInput
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayInput
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrInput
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid pulumi.StringPtrInput
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress pulumi.BoolPtrInput
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid pulumi.StringPtrInput
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies DomainsApprovalWorkflowStepIdcsCreatedByArrayInput
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringPtrInput
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies DomainsApprovalWorkflowStepIdcsLastModifiedByArrayInput
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease pulumi.StringPtrInput
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations pulumi.StringArrayInput
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas DomainsApprovalWorkflowStepMetaArrayInput
	// Minimum number of Approvals required for this step.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * idcsMinValue: 1
	// * idcsMaxValue: 2147483647
	// * required: false
	// * returned: default
	// * type: integer
	// * uniqueness: none
	MinimumApprovals pulumi.IntPtrInput
	// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid pulumi.StringPtrInput
	// Order of the ApprovalWorkflowStep.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * idcsMaxValue: 2147483647
	// * required: true
	// * returned: default
	// * type: integer
	// * uniqueness: none
	Order pulumi.IntPtrInput
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayInput
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsApprovalWorkflowStepTagArrayInput
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	TenancyOcid pulumi.StringPtrInput
	// Type of ApprovalWorkflowStep
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Type pulumi.StringPtrInput
}

func (DomainsApprovalWorkflowStepState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainsApprovalWorkflowStepState)(nil)).Elem()
}

type domainsApprovalWorkflowStepArgs struct {
	// Approvers of the ApprovalWorkflowStep.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * idcsCompositeKey: [value, type]
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Approvers []DomainsApprovalWorkflowStepApprover `pulumi:"approvers"`
	// approversExpressions of ApprovalWorkflowStep
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	ApproversExpressions []string `pulumi:"approversExpressions"`
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets []string `pulumi:"attributeSets"`
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes *string `pulumi:"attributes"`
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// The basic endpoint for the identity domain
	IdcsEndpoint string `pulumi:"idcsEndpoint"`
	// Minimum number of Approvals required for this step.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * idcsMinValue: 1
	// * idcsMaxValue: 2147483647
	// * required: false
	// * returned: default
	// * type: integer
	// * uniqueness: none
	MinimumApprovals *int `pulumi:"minimumApprovals"`
	// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid *string `pulumi:"ocid"`
	// Order of the ApprovalWorkflowStep.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * idcsMaxValue: 2147483647
	// * required: true
	// * returned: default
	// * type: integer
	// * uniqueness: none
	Order int `pulumi:"order"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas []string `pulumi:"schemas"`
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags []DomainsApprovalWorkflowStepTag `pulumi:"tags"`
	// Type of ApprovalWorkflowStep
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a DomainsApprovalWorkflowStep resource.
type DomainsApprovalWorkflowStepArgs struct {
	// Approvers of the ApprovalWorkflowStep.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * idcsCompositeKey: [value, type]
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Approvers DomainsApprovalWorkflowStepApproverArrayInput
	// approversExpressions of ApprovalWorkflowStep
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	ApproversExpressions pulumi.StringArrayInput
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayInput
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrInput
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringInput
	// Minimum number of Approvals required for this step.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * idcsMinValue: 1
	// * idcsMaxValue: 2147483647
	// * required: false
	// * returned: default
	// * type: integer
	// * uniqueness: none
	MinimumApprovals pulumi.IntPtrInput
	// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid pulumi.StringPtrInput
	// Order of the ApprovalWorkflowStep.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * idcsMaxValue: 2147483647
	// * required: true
	// * returned: default
	// * type: integer
	// * uniqueness: none
	Order pulumi.IntInput
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayInput
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsApprovalWorkflowStepTagArrayInput
	// Type of ApprovalWorkflowStep
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Type pulumi.StringInput
}

func (DomainsApprovalWorkflowStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainsApprovalWorkflowStepArgs)(nil)).Elem()
}

type DomainsApprovalWorkflowStepInput interface {
	pulumi.Input

	ToDomainsApprovalWorkflowStepOutput() DomainsApprovalWorkflowStepOutput
	ToDomainsApprovalWorkflowStepOutputWithContext(ctx context.Context) DomainsApprovalWorkflowStepOutput
}

func (*DomainsApprovalWorkflowStep) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainsApprovalWorkflowStep)(nil)).Elem()
}

func (i *DomainsApprovalWorkflowStep) ToDomainsApprovalWorkflowStepOutput() DomainsApprovalWorkflowStepOutput {
	return i.ToDomainsApprovalWorkflowStepOutputWithContext(context.Background())
}

func (i *DomainsApprovalWorkflowStep) ToDomainsApprovalWorkflowStepOutputWithContext(ctx context.Context) DomainsApprovalWorkflowStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsApprovalWorkflowStepOutput)
}

// DomainsApprovalWorkflowStepArrayInput is an input type that accepts DomainsApprovalWorkflowStepArray and DomainsApprovalWorkflowStepArrayOutput values.
// You can construct a concrete instance of `DomainsApprovalWorkflowStepArrayInput` via:
//
//	DomainsApprovalWorkflowStepArray{ DomainsApprovalWorkflowStepArgs{...} }
type DomainsApprovalWorkflowStepArrayInput interface {
	pulumi.Input

	ToDomainsApprovalWorkflowStepArrayOutput() DomainsApprovalWorkflowStepArrayOutput
	ToDomainsApprovalWorkflowStepArrayOutputWithContext(context.Context) DomainsApprovalWorkflowStepArrayOutput
}

type DomainsApprovalWorkflowStepArray []DomainsApprovalWorkflowStepInput

func (DomainsApprovalWorkflowStepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainsApprovalWorkflowStep)(nil)).Elem()
}

func (i DomainsApprovalWorkflowStepArray) ToDomainsApprovalWorkflowStepArrayOutput() DomainsApprovalWorkflowStepArrayOutput {
	return i.ToDomainsApprovalWorkflowStepArrayOutputWithContext(context.Background())
}

func (i DomainsApprovalWorkflowStepArray) ToDomainsApprovalWorkflowStepArrayOutputWithContext(ctx context.Context) DomainsApprovalWorkflowStepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsApprovalWorkflowStepArrayOutput)
}

// DomainsApprovalWorkflowStepMapInput is an input type that accepts DomainsApprovalWorkflowStepMap and DomainsApprovalWorkflowStepMapOutput values.
// You can construct a concrete instance of `DomainsApprovalWorkflowStepMapInput` via:
//
//	DomainsApprovalWorkflowStepMap{ "key": DomainsApprovalWorkflowStepArgs{...} }
type DomainsApprovalWorkflowStepMapInput interface {
	pulumi.Input

	ToDomainsApprovalWorkflowStepMapOutput() DomainsApprovalWorkflowStepMapOutput
	ToDomainsApprovalWorkflowStepMapOutputWithContext(context.Context) DomainsApprovalWorkflowStepMapOutput
}

type DomainsApprovalWorkflowStepMap map[string]DomainsApprovalWorkflowStepInput

func (DomainsApprovalWorkflowStepMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainsApprovalWorkflowStep)(nil)).Elem()
}

func (i DomainsApprovalWorkflowStepMap) ToDomainsApprovalWorkflowStepMapOutput() DomainsApprovalWorkflowStepMapOutput {
	return i.ToDomainsApprovalWorkflowStepMapOutputWithContext(context.Background())
}

func (i DomainsApprovalWorkflowStepMap) ToDomainsApprovalWorkflowStepMapOutputWithContext(ctx context.Context) DomainsApprovalWorkflowStepMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsApprovalWorkflowStepMapOutput)
}

type DomainsApprovalWorkflowStepOutput struct{ *pulumi.OutputState }

func (DomainsApprovalWorkflowStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainsApprovalWorkflowStep)(nil)).Elem()
}

func (o DomainsApprovalWorkflowStepOutput) ToDomainsApprovalWorkflowStepOutput() DomainsApprovalWorkflowStepOutput {
	return o
}

func (o DomainsApprovalWorkflowStepOutput) ToDomainsApprovalWorkflowStepOutputWithContext(ctx context.Context) DomainsApprovalWorkflowStepOutput {
	return o
}

// Approvers of the ApprovalWorkflowStep.
//
// **SCIM++ Properties:**
// * caseExact: true
// * idcsSearchable: true
// * idcsCompositeKey: [value, type]
// * multiValued: true
// * mutability: readWrite
// * required: false
// * returned: default
// * type: complex
// * uniqueness: none
func (o DomainsApprovalWorkflowStepOutput) Approvers() DomainsApprovalWorkflowStepApproverArrayOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowStep) DomainsApprovalWorkflowStepApproverArrayOutput {
		return v.Approvers
	}).(DomainsApprovalWorkflowStepApproverArrayOutput)
}

// approversExpressions of ApprovalWorkflowStep
//
// **SCIM++ Properties:**
// * caseExact: true
// * idcsSearchable: true
// * multiValued: true
// * mutability: readWrite
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsApprovalWorkflowStepOutput) ApproversExpressions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowStep) pulumi.StringArrayOutput { return v.ApproversExpressions }).(pulumi.StringArrayOutput)
}

// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
func (o DomainsApprovalWorkflowStepOutput) AttributeSets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowStep) pulumi.StringArrayOutput { return v.AttributeSets }).(pulumi.StringArrayOutput)
}

// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
func (o DomainsApprovalWorkflowStepOutput) Attributes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowStep) pulumi.StringPtrOutput { return v.Attributes }).(pulumi.StringPtrOutput)
}

// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
func (o DomainsApprovalWorkflowStepOutput) Authorization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowStep) pulumi.StringPtrOutput { return v.Authorization }).(pulumi.StringPtrOutput)
}

// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsApprovalWorkflowStepOutput) CompartmentOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowStep) pulumi.StringOutput { return v.CompartmentOcid }).(pulumi.StringOutput)
}

// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: boolean
// * uniqueness: none
func (o DomainsApprovalWorkflowStepOutput) DeleteInProgress() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowStep) pulumi.BoolOutput { return v.DeleteInProgress }).(pulumi.BoolOutput)
}

// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsApprovalWorkflowStepOutput) DomainOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowStep) pulumi.StringOutput { return v.DomainOcid }).(pulumi.StringOutput)
}

// (Updatable) The User or App who created the Resource
//
// **SCIM++ Properties:**
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: true
// * returned: default
// * type: complex
func (o DomainsApprovalWorkflowStepOutput) IdcsCreatedBies() DomainsApprovalWorkflowStepIdcsCreatedByArrayOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowStep) DomainsApprovalWorkflowStepIdcsCreatedByArrayOutput {
		return v.IdcsCreatedBies
	}).(DomainsApprovalWorkflowStepIdcsCreatedByArrayOutput)
}

// The basic endpoint for the identity domain
func (o DomainsApprovalWorkflowStepOutput) IdcsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowStep) pulumi.StringOutput { return v.IdcsEndpoint }).(pulumi.StringOutput)
}

// (Updatable) The User or App who modified the Resource
//
// **SCIM++ Properties:**
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: complex
func (o DomainsApprovalWorkflowStepOutput) IdcsLastModifiedBies() DomainsApprovalWorkflowStepIdcsLastModifiedByArrayOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowStep) DomainsApprovalWorkflowStepIdcsLastModifiedByArrayOutput {
		return v.IdcsLastModifiedBies
	}).(DomainsApprovalWorkflowStepIdcsLastModifiedByArrayOutput)
}

// (Updatable) The release number when the resource was upgraded.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: request
// * type: string
// * uniqueness: none
func (o DomainsApprovalWorkflowStepOutput) IdcsLastUpgradedInRelease() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowStep) pulumi.StringOutput { return v.IdcsLastUpgradedInRelease }).(pulumi.StringOutput)
}

// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
//
// **SCIM++ Properties:**
// * idcsSearchable: false
// * multiValued: true
// * mutability: readOnly
// * required: false
// * returned: request
// * type: string
// * uniqueness: none
func (o DomainsApprovalWorkflowStepOutput) IdcsPreventedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowStep) pulumi.StringArrayOutput { return v.IdcsPreventedOperations }).(pulumi.StringArrayOutput)
}

// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
// * type: complex
func (o DomainsApprovalWorkflowStepOutput) Metas() DomainsApprovalWorkflowStepMetaArrayOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowStep) DomainsApprovalWorkflowStepMetaArrayOutput { return v.Metas }).(DomainsApprovalWorkflowStepMetaArrayOutput)
}

// Minimum number of Approvals required for this step.
//
// **SCIM++ Properties:**
// * caseExact: true
// * idcsSearchable: true
// * multiValued: false
// * mutability: readWrite
// * idcsMinValue: 1
// * idcsMaxValue: 2147483647
// * required: false
// * returned: default
// * type: integer
// * uniqueness: none
func (o DomainsApprovalWorkflowStepOutput) MinimumApprovals() pulumi.IntOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowStep) pulumi.IntOutput { return v.MinimumApprovals }).(pulumi.IntOutput)
}

// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
//
// **SCIM++ Properties:**
// * caseExact: true
// * idcsSearchable: true
// * multiValued: false
// * mutability: immutable
// * required: false
// * returned: default
// * type: string
// * uniqueness: global
func (o DomainsApprovalWorkflowStepOutput) Ocid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowStep) pulumi.StringOutput { return v.Ocid }).(pulumi.StringOutput)
}

// Order of the ApprovalWorkflowStep.
//
// **SCIM++ Properties:**
// * caseExact: true
// * idcsSearchable: true
// * multiValued: false
// * mutability: readWrite
// * idcsMaxValue: 2147483647
// * required: true
// * returned: default
// * type: integer
// * uniqueness: none
func (o DomainsApprovalWorkflowStepOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowStep) pulumi.IntOutput { return v.Order }).(pulumi.IntOutput)
}

// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
func (o DomainsApprovalWorkflowStepOutput) ResourceTypeSchemaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowStep) pulumi.StringPtrOutput { return v.ResourceTypeSchemaVersion }).(pulumi.StringPtrOutput)
}

// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: true
// * mutability: readWrite
// * required: true
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsApprovalWorkflowStepOutput) Schemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowStep) pulumi.StringArrayOutput { return v.Schemas }).(pulumi.StringArrayOutput)
}

// A list of tags on this resource.
//
// **SCIM++ Properties:**
// * idcsCompositeKey: [key, value]
// * idcsSearchable: true
// * multiValued: true
// * mutability: readWrite
// * required: false
// * returned: request
// * type: complex
// * uniqueness: none
func (o DomainsApprovalWorkflowStepOutput) Tags() DomainsApprovalWorkflowStepTagArrayOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowStep) DomainsApprovalWorkflowStepTagArrayOutput { return v.Tags }).(DomainsApprovalWorkflowStepTagArrayOutput)
}

// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsApprovalWorkflowStepOutput) TenancyOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowStep) pulumi.StringOutput { return v.TenancyOcid }).(pulumi.StringOutput)
}

// Type of ApprovalWorkflowStep
//
// **SCIM++ Properties:**
// * caseExact: true
// * idcsSearchable: true
// * multiValued: false
// * mutability: readWrite
// * required: true
// * returned: default
// * type: string
// * uniqueness: none
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o DomainsApprovalWorkflowStepOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsApprovalWorkflowStep) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type DomainsApprovalWorkflowStepArrayOutput struct{ *pulumi.OutputState }

func (DomainsApprovalWorkflowStepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainsApprovalWorkflowStep)(nil)).Elem()
}

func (o DomainsApprovalWorkflowStepArrayOutput) ToDomainsApprovalWorkflowStepArrayOutput() DomainsApprovalWorkflowStepArrayOutput {
	return o
}

func (o DomainsApprovalWorkflowStepArrayOutput) ToDomainsApprovalWorkflowStepArrayOutputWithContext(ctx context.Context) DomainsApprovalWorkflowStepArrayOutput {
	return o
}

func (o DomainsApprovalWorkflowStepArrayOutput) Index(i pulumi.IntInput) DomainsApprovalWorkflowStepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DomainsApprovalWorkflowStep {
		return vs[0].([]*DomainsApprovalWorkflowStep)[vs[1].(int)]
	}).(DomainsApprovalWorkflowStepOutput)
}

type DomainsApprovalWorkflowStepMapOutput struct{ *pulumi.OutputState }

func (DomainsApprovalWorkflowStepMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainsApprovalWorkflowStep)(nil)).Elem()
}

func (o DomainsApprovalWorkflowStepMapOutput) ToDomainsApprovalWorkflowStepMapOutput() DomainsApprovalWorkflowStepMapOutput {
	return o
}

func (o DomainsApprovalWorkflowStepMapOutput) ToDomainsApprovalWorkflowStepMapOutputWithContext(ctx context.Context) DomainsApprovalWorkflowStepMapOutput {
	return o
}

func (o DomainsApprovalWorkflowStepMapOutput) MapIndex(k pulumi.StringInput) DomainsApprovalWorkflowStepOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DomainsApprovalWorkflowStep {
		return vs[0].(map[string]*DomainsApprovalWorkflowStep)[vs[1].(string)]
	}).(DomainsApprovalWorkflowStepOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsApprovalWorkflowStepInput)(nil)).Elem(), &DomainsApprovalWorkflowStep{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsApprovalWorkflowStepArrayInput)(nil)).Elem(), DomainsApprovalWorkflowStepArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsApprovalWorkflowStepMapInput)(nil)).Elem(), DomainsApprovalWorkflowStepMap{})
	pulumi.RegisterOutputType(DomainsApprovalWorkflowStepOutput{})
	pulumi.RegisterOutputType(DomainsApprovalWorkflowStepArrayOutput{})
	pulumi.RegisterOutputType(DomainsApprovalWorkflowStepMapOutput{})
}
