// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Auth Token resource in Oracle Cloud Infrastructure Identity Domains service.
//
// Create a user's Auth token.
//
// ## Import
//
// AuthTokens can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Identity/domainsAuthToken:DomainsAuthToken test_auth_token "idcsEndpoint/{idcsEndpoint}/authTokens/{authTokenId}"
// ```
type DomainsAuthToken struct {
	pulumi.CustomResourceState

	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayOutput `pulumi:"attributeSets"`
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrOutput `pulumi:"attributes"`
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrOutput `pulumi:"authorization"`
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid pulumi.StringOutput `pulumi:"compartmentOcid"`
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress pulumi.BoolOutput `pulumi:"deleteInProgress"`
	// Description
	//
	// **Added In:** 2010242156
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * type: string
	// * mutability: readWrite
	// * required: false
	// * returned: default
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid pulumi.StringOutput `pulumi:"domainOcid"`
	// When the user's credential expire.
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: dateTime
	// * uniqueness: none
	ExpiresOn pulumi.StringOutput `pulumi:"expiresOn"`
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies DomainsAuthTokenIdcsCreatedByArrayOutput `pulumi:"idcsCreatedBies"`
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringOutput `pulumi:"idcsEndpoint"`
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies DomainsAuthTokenIdcsLastModifiedByArrayOutput `pulumi:"idcsLastModifiedBies"`
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease pulumi.StringOutput `pulumi:"idcsLastUpgradedInRelease"`
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations pulumi.StringArrayOutput `pulumi:"idcsPreventedOperations"`
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas DomainsAuthTokenMetaArrayOutput `pulumi:"metas"`
	// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid pulumi.StringOutput `pulumi:"ocid"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrOutput `pulumi:"resourceTypeSchemaVersion"`
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayOutput `pulumi:"schemas"`
	// The user's credential status.
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: never
	// * type: string
	// * uniqueness: none
	Status pulumi.StringOutput `pulumi:"status"`
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsAuthTokenTagArrayOutput `pulumi:"tags"`
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	TenancyOcid pulumi.StringOutput `pulumi:"tenancyOcid"`
	// (Updatable) token
	//
	// **Added In:** 2010242156
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * type: string
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsSensitive: hash_sc
	Token pulumi.StringOutput `pulumi:"token"`
	// Controls whether a user can update themselves or not via User related APIs
	UrnietfparamsscimschemasoracleidcsextensionselfChangeUser DomainsAuthTokenUrnietfparamsscimschemasoracleidcsextensionselfChangeUserOutput `pulumi:"urnietfparamsscimschemasoracleidcsextensionselfChangeUser"`
	// The user linked to the Auth token.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	User DomainsAuthTokenUserOutput `pulumi:"user"`
}

// NewDomainsAuthToken registers a new resource with the given unique name, arguments, and options.
func NewDomainsAuthToken(ctx *pulumi.Context,
	name string, args *DomainsAuthTokenArgs, opts ...pulumi.ResourceOption) (*DomainsAuthToken, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IdcsEndpoint == nil {
		return nil, errors.New("invalid value for required argument 'IdcsEndpoint'")
	}
	if args.Schemas == nil {
		return nil, errors.New("invalid value for required argument 'Schemas'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DomainsAuthToken
	err := ctx.RegisterResource("oci:Identity/domainsAuthToken:DomainsAuthToken", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomainsAuthToken gets an existing DomainsAuthToken resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainsAuthToken(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainsAuthTokenState, opts ...pulumi.ResourceOption) (*DomainsAuthToken, error) {
	var resource DomainsAuthToken
	err := ctx.ReadResource("oci:Identity/domainsAuthToken:DomainsAuthToken", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DomainsAuthToken resources.
type domainsAuthTokenState struct {
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets []string `pulumi:"attributeSets"`
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes *string `pulumi:"attributes"`
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid *string `pulumi:"compartmentOcid"`
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress *bool `pulumi:"deleteInProgress"`
	// Description
	//
	// **Added In:** 2010242156
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * type: string
	// * mutability: readWrite
	// * required: false
	// * returned: default
	Description *string `pulumi:"description"`
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid *string `pulumi:"domainOcid"`
	// When the user's credential expire.
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: dateTime
	// * uniqueness: none
	ExpiresOn *string `pulumi:"expiresOn"`
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies []DomainsAuthTokenIdcsCreatedBy `pulumi:"idcsCreatedBies"`
	// The basic endpoint for the identity domain
	IdcsEndpoint *string `pulumi:"idcsEndpoint"`
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies []DomainsAuthTokenIdcsLastModifiedBy `pulumi:"idcsLastModifiedBies"`
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease *string `pulumi:"idcsLastUpgradedInRelease"`
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations []string `pulumi:"idcsPreventedOperations"`
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas []DomainsAuthTokenMeta `pulumi:"metas"`
	// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid *string `pulumi:"ocid"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas []string `pulumi:"schemas"`
	// The user's credential status.
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: never
	// * type: string
	// * uniqueness: none
	Status *string `pulumi:"status"`
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags []DomainsAuthTokenTag `pulumi:"tags"`
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	TenancyOcid *string `pulumi:"tenancyOcid"`
	// (Updatable) token
	//
	// **Added In:** 2010242156
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * type: string
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsSensitive: hash_sc
	Token *string `pulumi:"token"`
	// Controls whether a user can update themselves or not via User related APIs
	UrnietfparamsscimschemasoracleidcsextensionselfChangeUser *DomainsAuthTokenUrnietfparamsscimschemasoracleidcsextensionselfChangeUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionselfChangeUser"`
	// The user linked to the Auth token.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	User *DomainsAuthTokenUser `pulumi:"user"`
}

type DomainsAuthTokenState struct {
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayInput
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrInput
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid pulumi.StringPtrInput
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress pulumi.BoolPtrInput
	// Description
	//
	// **Added In:** 2010242156
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * type: string
	// * mutability: readWrite
	// * required: false
	// * returned: default
	Description pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid pulumi.StringPtrInput
	// When the user's credential expire.
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: dateTime
	// * uniqueness: none
	ExpiresOn pulumi.StringPtrInput
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies DomainsAuthTokenIdcsCreatedByArrayInput
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringPtrInput
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies DomainsAuthTokenIdcsLastModifiedByArrayInput
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease pulumi.StringPtrInput
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations pulumi.StringArrayInput
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas DomainsAuthTokenMetaArrayInput
	// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid pulumi.StringPtrInput
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayInput
	// The user's credential status.
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: never
	// * type: string
	// * uniqueness: none
	Status pulumi.StringPtrInput
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsAuthTokenTagArrayInput
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	TenancyOcid pulumi.StringPtrInput
	// (Updatable) token
	//
	// **Added In:** 2010242156
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * type: string
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsSensitive: hash_sc
	Token pulumi.StringPtrInput
	// Controls whether a user can update themselves or not via User related APIs
	UrnietfparamsscimschemasoracleidcsextensionselfChangeUser DomainsAuthTokenUrnietfparamsscimschemasoracleidcsextensionselfChangeUserPtrInput
	// The user linked to the Auth token.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	User DomainsAuthTokenUserPtrInput
}

func (DomainsAuthTokenState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainsAuthTokenState)(nil)).Elem()
}

type domainsAuthTokenArgs struct {
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets []string `pulumi:"attributeSets"`
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes *string `pulumi:"attributes"`
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// Description
	//
	// **Added In:** 2010242156
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * type: string
	// * mutability: readWrite
	// * required: false
	// * returned: default
	Description *string `pulumi:"description"`
	// When the user's credential expire.
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: dateTime
	// * uniqueness: none
	ExpiresOn *string `pulumi:"expiresOn"`
	// The basic endpoint for the identity domain
	IdcsEndpoint string `pulumi:"idcsEndpoint"`
	// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid *string `pulumi:"ocid"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas []string `pulumi:"schemas"`
	// The user's credential status.
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: never
	// * type: string
	// * uniqueness: none
	Status *string `pulumi:"status"`
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags []DomainsAuthTokenTag `pulumi:"tags"`
	// Controls whether a user can update themselves or not via User related APIs
	UrnietfparamsscimschemasoracleidcsextensionselfChangeUser *DomainsAuthTokenUrnietfparamsscimschemasoracleidcsextensionselfChangeUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionselfChangeUser"`
	// The user linked to the Auth token.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	User *DomainsAuthTokenUser `pulumi:"user"`
}

// The set of arguments for constructing a DomainsAuthToken resource.
type DomainsAuthTokenArgs struct {
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayInput
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrInput
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput
	// Description
	//
	// **Added In:** 2010242156
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * type: string
	// * mutability: readWrite
	// * required: false
	// * returned: default
	Description pulumi.StringPtrInput
	// When the user's credential expire.
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: dateTime
	// * uniqueness: none
	ExpiresOn pulumi.StringPtrInput
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringInput
	// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid pulumi.StringPtrInput
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayInput
	// The user's credential status.
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: never
	// * type: string
	// * uniqueness: none
	Status pulumi.StringPtrInput
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsAuthTokenTagArrayInput
	// Controls whether a user can update themselves or not via User related APIs
	UrnietfparamsscimschemasoracleidcsextensionselfChangeUser DomainsAuthTokenUrnietfparamsscimschemasoracleidcsextensionselfChangeUserPtrInput
	// The user linked to the Auth token.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	User DomainsAuthTokenUserPtrInput
}

func (DomainsAuthTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainsAuthTokenArgs)(nil)).Elem()
}

type DomainsAuthTokenInput interface {
	pulumi.Input

	ToDomainsAuthTokenOutput() DomainsAuthTokenOutput
	ToDomainsAuthTokenOutputWithContext(ctx context.Context) DomainsAuthTokenOutput
}

func (*DomainsAuthToken) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainsAuthToken)(nil)).Elem()
}

func (i *DomainsAuthToken) ToDomainsAuthTokenOutput() DomainsAuthTokenOutput {
	return i.ToDomainsAuthTokenOutputWithContext(context.Background())
}

func (i *DomainsAuthToken) ToDomainsAuthTokenOutputWithContext(ctx context.Context) DomainsAuthTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsAuthTokenOutput)
}

// DomainsAuthTokenArrayInput is an input type that accepts DomainsAuthTokenArray and DomainsAuthTokenArrayOutput values.
// You can construct a concrete instance of `DomainsAuthTokenArrayInput` via:
//
//	DomainsAuthTokenArray{ DomainsAuthTokenArgs{...} }
type DomainsAuthTokenArrayInput interface {
	pulumi.Input

	ToDomainsAuthTokenArrayOutput() DomainsAuthTokenArrayOutput
	ToDomainsAuthTokenArrayOutputWithContext(context.Context) DomainsAuthTokenArrayOutput
}

type DomainsAuthTokenArray []DomainsAuthTokenInput

func (DomainsAuthTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainsAuthToken)(nil)).Elem()
}

func (i DomainsAuthTokenArray) ToDomainsAuthTokenArrayOutput() DomainsAuthTokenArrayOutput {
	return i.ToDomainsAuthTokenArrayOutputWithContext(context.Background())
}

func (i DomainsAuthTokenArray) ToDomainsAuthTokenArrayOutputWithContext(ctx context.Context) DomainsAuthTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsAuthTokenArrayOutput)
}

// DomainsAuthTokenMapInput is an input type that accepts DomainsAuthTokenMap and DomainsAuthTokenMapOutput values.
// You can construct a concrete instance of `DomainsAuthTokenMapInput` via:
//
//	DomainsAuthTokenMap{ "key": DomainsAuthTokenArgs{...} }
type DomainsAuthTokenMapInput interface {
	pulumi.Input

	ToDomainsAuthTokenMapOutput() DomainsAuthTokenMapOutput
	ToDomainsAuthTokenMapOutputWithContext(context.Context) DomainsAuthTokenMapOutput
}

type DomainsAuthTokenMap map[string]DomainsAuthTokenInput

func (DomainsAuthTokenMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainsAuthToken)(nil)).Elem()
}

func (i DomainsAuthTokenMap) ToDomainsAuthTokenMapOutput() DomainsAuthTokenMapOutput {
	return i.ToDomainsAuthTokenMapOutputWithContext(context.Background())
}

func (i DomainsAuthTokenMap) ToDomainsAuthTokenMapOutputWithContext(ctx context.Context) DomainsAuthTokenMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsAuthTokenMapOutput)
}

type DomainsAuthTokenOutput struct{ *pulumi.OutputState }

func (DomainsAuthTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainsAuthToken)(nil)).Elem()
}

func (o DomainsAuthTokenOutput) ToDomainsAuthTokenOutput() DomainsAuthTokenOutput {
	return o
}

func (o DomainsAuthTokenOutput) ToDomainsAuthTokenOutputWithContext(ctx context.Context) DomainsAuthTokenOutput {
	return o
}

// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
func (o DomainsAuthTokenOutput) AttributeSets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsAuthToken) pulumi.StringArrayOutput { return v.AttributeSets }).(pulumi.StringArrayOutput)
}

// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
func (o DomainsAuthTokenOutput) Attributes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsAuthToken) pulumi.StringPtrOutput { return v.Attributes }).(pulumi.StringPtrOutput)
}

// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
func (o DomainsAuthTokenOutput) Authorization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsAuthToken) pulumi.StringPtrOutput { return v.Authorization }).(pulumi.StringPtrOutput)
}

// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsAuthTokenOutput) CompartmentOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsAuthToken) pulumi.StringOutput { return v.CompartmentOcid }).(pulumi.StringOutput)
}

// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: boolean
// * uniqueness: none
func (o DomainsAuthTokenOutput) DeleteInProgress() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsAuthToken) pulumi.BoolOutput { return v.DeleteInProgress }).(pulumi.BoolOutput)
}

// Description
//
// **Added In:** 2010242156
//
// **SCIM++ Properties:**
// * caseExact: false
// * type: string
// * mutability: readWrite
// * required: false
// * returned: default
func (o DomainsAuthTokenOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsAuthToken) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsAuthTokenOutput) DomainOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsAuthToken) pulumi.StringOutput { return v.DomainOcid }).(pulumi.StringOutput)
}

// When the user's credential expire.
//
// **Added In:** 2109090424
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: immutable
// * required: false
// * returned: default
// * type: dateTime
// * uniqueness: none
func (o DomainsAuthTokenOutput) ExpiresOn() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsAuthToken) pulumi.StringOutput { return v.ExpiresOn }).(pulumi.StringOutput)
}

// (Updatable) The User or App who created the Resource
//
// **SCIM++ Properties:**
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: true
// * returned: default
// * type: complex
func (o DomainsAuthTokenOutput) IdcsCreatedBies() DomainsAuthTokenIdcsCreatedByArrayOutput {
	return o.ApplyT(func(v *DomainsAuthToken) DomainsAuthTokenIdcsCreatedByArrayOutput { return v.IdcsCreatedBies }).(DomainsAuthTokenIdcsCreatedByArrayOutput)
}

// The basic endpoint for the identity domain
func (o DomainsAuthTokenOutput) IdcsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsAuthToken) pulumi.StringOutput { return v.IdcsEndpoint }).(pulumi.StringOutput)
}

// (Updatable) The User or App who modified the Resource
//
// **SCIM++ Properties:**
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: complex
func (o DomainsAuthTokenOutput) IdcsLastModifiedBies() DomainsAuthTokenIdcsLastModifiedByArrayOutput {
	return o.ApplyT(func(v *DomainsAuthToken) DomainsAuthTokenIdcsLastModifiedByArrayOutput { return v.IdcsLastModifiedBies }).(DomainsAuthTokenIdcsLastModifiedByArrayOutput)
}

// (Updatable) The release number when the resource was upgraded.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: request
// * type: string
// * uniqueness: none
func (o DomainsAuthTokenOutput) IdcsLastUpgradedInRelease() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsAuthToken) pulumi.StringOutput { return v.IdcsLastUpgradedInRelease }).(pulumi.StringOutput)
}

// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
//
// **SCIM++ Properties:**
// * idcsSearchable: false
// * multiValued: true
// * mutability: readOnly
// * required: false
// * returned: request
// * type: string
// * uniqueness: none
func (o DomainsAuthTokenOutput) IdcsPreventedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsAuthToken) pulumi.StringArrayOutput { return v.IdcsPreventedOperations }).(pulumi.StringArrayOutput)
}

// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
// * type: complex
func (o DomainsAuthTokenOutput) Metas() DomainsAuthTokenMetaArrayOutput {
	return o.ApplyT(func(v *DomainsAuthToken) DomainsAuthTokenMetaArrayOutput { return v.Metas }).(DomainsAuthTokenMetaArrayOutput)
}

// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
//
// **SCIM++ Properties:**
// * caseExact: true
// * idcsSearchable: true
// * multiValued: false
// * mutability: immutable
// * required: false
// * returned: default
// * type: string
// * uniqueness: global
func (o DomainsAuthTokenOutput) Ocid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsAuthToken) pulumi.StringOutput { return v.Ocid }).(pulumi.StringOutput)
}

// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
func (o DomainsAuthTokenOutput) ResourceTypeSchemaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsAuthToken) pulumi.StringPtrOutput { return v.ResourceTypeSchemaVersion }).(pulumi.StringPtrOutput)
}

// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: true
// * mutability: readWrite
// * required: true
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsAuthTokenOutput) Schemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsAuthToken) pulumi.StringArrayOutput { return v.Schemas }).(pulumi.StringArrayOutput)
}

// The user's credential status.
//
// **Added In:** 2109090424
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readWrite
// * required: false
// * returned: never
// * type: string
// * uniqueness: none
func (o DomainsAuthTokenOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsAuthToken) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// A list of tags on this resource.
//
// **SCIM++ Properties:**
// * idcsCompositeKey: [key, value]
// * idcsSearchable: true
// * multiValued: true
// * mutability: readWrite
// * required: false
// * returned: request
// * type: complex
// * uniqueness: none
func (o DomainsAuthTokenOutput) Tags() DomainsAuthTokenTagArrayOutput {
	return o.ApplyT(func(v *DomainsAuthToken) DomainsAuthTokenTagArrayOutput { return v.Tags }).(DomainsAuthTokenTagArrayOutput)
}

// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsAuthTokenOutput) TenancyOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsAuthToken) pulumi.StringOutput { return v.TenancyOcid }).(pulumi.StringOutput)
}

// (Updatable) token
//
// **Added In:** 2010242156
//
// **SCIM++ Properties:**
// * caseExact: true
// * type: string
// * mutability: readOnly
// * required: false
// * returned: default
// * idcsSensitive: hash_sc
func (o DomainsAuthTokenOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsAuthToken) pulumi.StringOutput { return v.Token }).(pulumi.StringOutput)
}

// Controls whether a user can update themselves or not via User related APIs
func (o DomainsAuthTokenOutput) UrnietfparamsscimschemasoracleidcsextensionselfChangeUser() DomainsAuthTokenUrnietfparamsscimschemasoracleidcsextensionselfChangeUserOutput {
	return o.ApplyT(func(v *DomainsAuthToken) DomainsAuthTokenUrnietfparamsscimschemasoracleidcsextensionselfChangeUserOutput {
		return v.UrnietfparamsscimschemasoracleidcsextensionselfChangeUser
	}).(DomainsAuthTokenUrnietfparamsscimschemasoracleidcsextensionselfChangeUserOutput)
}

// The user linked to the Auth token.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: true
// * multiValued: false
// * mutability: immutable
// * required: false
// * returned: default
// * type: complex
// * uniqueness: none
func (o DomainsAuthTokenOutput) User() DomainsAuthTokenUserOutput {
	return o.ApplyT(func(v *DomainsAuthToken) DomainsAuthTokenUserOutput { return v.User }).(DomainsAuthTokenUserOutput)
}

type DomainsAuthTokenArrayOutput struct{ *pulumi.OutputState }

func (DomainsAuthTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainsAuthToken)(nil)).Elem()
}

func (o DomainsAuthTokenArrayOutput) ToDomainsAuthTokenArrayOutput() DomainsAuthTokenArrayOutput {
	return o
}

func (o DomainsAuthTokenArrayOutput) ToDomainsAuthTokenArrayOutputWithContext(ctx context.Context) DomainsAuthTokenArrayOutput {
	return o
}

func (o DomainsAuthTokenArrayOutput) Index(i pulumi.IntInput) DomainsAuthTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DomainsAuthToken {
		return vs[0].([]*DomainsAuthToken)[vs[1].(int)]
	}).(DomainsAuthTokenOutput)
}

type DomainsAuthTokenMapOutput struct{ *pulumi.OutputState }

func (DomainsAuthTokenMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainsAuthToken)(nil)).Elem()
}

func (o DomainsAuthTokenMapOutput) ToDomainsAuthTokenMapOutput() DomainsAuthTokenMapOutput {
	return o
}

func (o DomainsAuthTokenMapOutput) ToDomainsAuthTokenMapOutputWithContext(ctx context.Context) DomainsAuthTokenMapOutput {
	return o
}

func (o DomainsAuthTokenMapOutput) MapIndex(k pulumi.StringInput) DomainsAuthTokenOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DomainsAuthToken {
		return vs[0].(map[string]*DomainsAuthToken)[vs[1].(string)]
	}).(DomainsAuthTokenOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsAuthTokenInput)(nil)).Elem(), &DomainsAuthToken{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsAuthTokenArrayInput)(nil)).Elem(), DomainsAuthTokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsAuthTokenMapInput)(nil)).Elem(), DomainsAuthTokenMap{})
	pulumi.RegisterOutputType(DomainsAuthTokenOutput{})
	pulumi.RegisterOutputType(DomainsAuthTokenArrayOutput{})
	pulumi.RegisterOutputType(DomainsAuthTokenMapOutput{})
}
