// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Group resource in Oracle Cloud Infrastructure Identity Domains service.
//
// # Create a Group
//
// ## Import
//
// Groups can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:Identity/domainsGroup:DomainsGroup test_group "idcsEndpoint/{idcsEndpoint}/groups/{groupId}"
//
// ```
type DomainsGroup struct {
	pulumi.CustomResourceState

	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayOutput `pulumi:"attributeSets"`
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrOutput `pulumi:"attributes"`
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrOutput `pulumi:"authorization"`
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	CompartmentOcid pulumi.StringOutput `pulumi:"compartmentOcid"`
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	DeleteInProgress pulumi.BoolOutput `pulumi:"deleteInProgress"`
	// (Updatable) Group display name
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	DomainOcid pulumi.StringOutput `pulumi:"domainOcid"`
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	ExternalId pulumi.StringOutput `pulumi:"externalId"`
	// (Updatable) The User or App who created the Resource
	IdcsCreatedBies DomainsGroupIdcsCreatedByArrayOutput `pulumi:"idcsCreatedBies"`
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringOutput `pulumi:"idcsEndpoint"`
	// (Updatable) The User or App who modified the Resource
	IdcsLastModifiedBies DomainsGroupIdcsLastModifiedByArrayOutput `pulumi:"idcsLastModifiedBies"`
	// (Updatable) The release number when the resource was upgraded.
	IdcsLastUpgradedInRelease pulumi.StringOutput `pulumi:"idcsLastUpgradedInRelease"`
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	IdcsPreventedOperations pulumi.StringArrayOutput `pulumi:"idcsPreventedOperations"`
	// (Updatable) Group members - when requesting members attribute, a max of 10,000 members will be returned in a single request. It is recommended to use startIndex and count to return members in pages instead of in a single response, eg : #attributes=members[startIndex=1%26count=10]
	Members DomainsGroupMemberArrayOutput `pulumi:"members"`
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	Metas DomainsGroupMetaArrayOutput `pulumi:"metas"`
	// (Updatable) A human readable name for Group as defined by the Service Consumer
	NonUniqueDisplayName pulumi.StringOutput `pulumi:"nonUniqueDisplayName"`
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	Ocid pulumi.StringOutput `pulumi:"ocid"`
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrOutput `pulumi:"resourceTypeSchemaVersion"`
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	Schemas pulumi.StringArrayOutput `pulumi:"schemas"`
	// (Updatable) A list of tags on this resource.
	Tags DomainsGroupTagArrayOutput `pulumi:"tags"`
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	TenancyOcid pulumi.StringOutput `pulumi:"tenancyOcid"`
	// (Updatable) Oracle Cloud Infrastructure Tags.
	UrnietfparamsscimschemasoracleidcsextensionOciTags DomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsOutput `pulumi:"urnietfparamsscimschemasoracleidcsextensionOciTags"`
	// (Updatable) Schema for Database Service  Resource
	UrnietfparamsscimschemasoracleidcsextensiondbcsGroups DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupArrayOutput `pulumi:"urnietfparamsscimschemasoracleidcsextensiondbcsGroups"`
	// (Updatable) Dynamic Group
	UrnietfparamsscimschemasoracleidcsextensiondynamicGroup DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondynamicGroupOutput `pulumi:"urnietfparamsscimschemasoracleidcsextensiondynamicGroup"`
	// (Updatable) Idcs Group
	UrnietfparamsscimschemasoracleidcsextensiongroupGroup DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupOutput `pulumi:"urnietfparamsscimschemasoracleidcsextensiongroupGroup"`
	// (Updatable) POSIX Group extension
	UrnietfparamsscimschemasoracleidcsextensionposixGroup DomainsGroupUrnietfparamsscimschemasoracleidcsextensionposixGroupOutput `pulumi:"urnietfparamsscimschemasoracleidcsextensionposixGroup"`
	// (Updatable) Requestable Group
	UrnietfparamsscimschemasoracleidcsextensionrequestableGroup DomainsGroupUrnietfparamsscimschemasoracleidcsextensionrequestableGroupOutput `pulumi:"urnietfparamsscimschemasoracleidcsextensionrequestableGroup"`
}

// NewDomainsGroup registers a new resource with the given unique name, arguments, and options.
func NewDomainsGroup(ctx *pulumi.Context,
	name string, args *DomainsGroupArgs, opts ...pulumi.ResourceOption) (*DomainsGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.IdcsEndpoint == nil {
		return nil, errors.New("invalid value for required argument 'IdcsEndpoint'")
	}
	if args.Schemas == nil {
		return nil, errors.New("invalid value for required argument 'Schemas'")
	}
	var resource DomainsGroup
	err := ctx.RegisterResource("oci:Identity/domainsGroup:DomainsGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomainsGroup gets an existing DomainsGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainsGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainsGroupState, opts ...pulumi.ResourceOption) (*DomainsGroup, error) {
	var resource DomainsGroup
	err := ctx.ReadResource("oci:Identity/domainsGroup:DomainsGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DomainsGroup resources.
type domainsGroupState struct {
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets []string `pulumi:"attributeSets"`
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes *string `pulumi:"attributes"`
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	CompartmentOcid *string `pulumi:"compartmentOcid"`
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	DeleteInProgress *bool `pulumi:"deleteInProgress"`
	// (Updatable) Group display name
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	DomainOcid *string `pulumi:"domainOcid"`
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	ExternalId *string `pulumi:"externalId"`
	// (Updatable) The User or App who created the Resource
	IdcsCreatedBies []DomainsGroupIdcsCreatedBy `pulumi:"idcsCreatedBies"`
	// The basic endpoint for the identity domain
	IdcsEndpoint *string `pulumi:"idcsEndpoint"`
	// (Updatable) The User or App who modified the Resource
	IdcsLastModifiedBies []DomainsGroupIdcsLastModifiedBy `pulumi:"idcsLastModifiedBies"`
	// (Updatable) The release number when the resource was upgraded.
	IdcsLastUpgradedInRelease *string `pulumi:"idcsLastUpgradedInRelease"`
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	IdcsPreventedOperations []string `pulumi:"idcsPreventedOperations"`
	// (Updatable) Group members - when requesting members attribute, a max of 10,000 members will be returned in a single request. It is recommended to use startIndex and count to return members in pages instead of in a single response, eg : #attributes=members[startIndex=1%26count=10]
	Members []DomainsGroupMember `pulumi:"members"`
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	Metas []DomainsGroupMeta `pulumi:"metas"`
	// (Updatable) A human readable name for Group as defined by the Service Consumer
	NonUniqueDisplayName *string `pulumi:"nonUniqueDisplayName"`
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	Ocid *string `pulumi:"ocid"`
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	Schemas []string `pulumi:"schemas"`
	// (Updatable) A list of tags on this resource.
	Tags []DomainsGroupTag `pulumi:"tags"`
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	TenancyOcid *string `pulumi:"tenancyOcid"`
	// (Updatable) Oracle Cloud Infrastructure Tags.
	UrnietfparamsscimschemasoracleidcsextensionOciTags *DomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTags `pulumi:"urnietfparamsscimschemasoracleidcsextensionOciTags"`
	// (Updatable) Schema for Database Service  Resource
	UrnietfparamsscimschemasoracleidcsextensiondbcsGroups []DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroup `pulumi:"urnietfparamsscimschemasoracleidcsextensiondbcsGroups"`
	// (Updatable) Dynamic Group
	UrnietfparamsscimschemasoracleidcsextensiondynamicGroup *DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondynamicGroup `pulumi:"urnietfparamsscimschemasoracleidcsextensiondynamicGroup"`
	// (Updatable) Idcs Group
	UrnietfparamsscimschemasoracleidcsextensiongroupGroup *DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroup `pulumi:"urnietfparamsscimschemasoracleidcsextensiongroupGroup"`
	// (Updatable) POSIX Group extension
	UrnietfparamsscimschemasoracleidcsextensionposixGroup *DomainsGroupUrnietfparamsscimschemasoracleidcsextensionposixGroup `pulumi:"urnietfparamsscimschemasoracleidcsextensionposixGroup"`
	// (Updatable) Requestable Group
	UrnietfparamsscimschemasoracleidcsextensionrequestableGroup *DomainsGroupUrnietfparamsscimschemasoracleidcsextensionrequestableGroup `pulumi:"urnietfparamsscimschemasoracleidcsextensionrequestableGroup"`
}

type DomainsGroupState struct {
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayInput
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrInput
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	CompartmentOcid pulumi.StringPtrInput
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	DeleteInProgress pulumi.BoolPtrInput
	// (Updatable) Group display name
	DisplayName pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	DomainOcid pulumi.StringPtrInput
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	ExternalId pulumi.StringPtrInput
	// (Updatable) The User or App who created the Resource
	IdcsCreatedBies DomainsGroupIdcsCreatedByArrayInput
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringPtrInput
	// (Updatable) The User or App who modified the Resource
	IdcsLastModifiedBies DomainsGroupIdcsLastModifiedByArrayInput
	// (Updatable) The release number when the resource was upgraded.
	IdcsLastUpgradedInRelease pulumi.StringPtrInput
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	IdcsPreventedOperations pulumi.StringArrayInput
	// (Updatable) Group members - when requesting members attribute, a max of 10,000 members will be returned in a single request. It is recommended to use startIndex and count to return members in pages instead of in a single response, eg : #attributes=members[startIndex=1%26count=10]
	Members DomainsGroupMemberArrayInput
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	Metas DomainsGroupMetaArrayInput
	// (Updatable) A human readable name for Group as defined by the Service Consumer
	NonUniqueDisplayName pulumi.StringPtrInput
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	Ocid pulumi.StringPtrInput
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	Schemas pulumi.StringArrayInput
	// (Updatable) A list of tags on this resource.
	Tags DomainsGroupTagArrayInput
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	TenancyOcid pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure Tags.
	UrnietfparamsscimschemasoracleidcsextensionOciTags DomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsPtrInput
	// (Updatable) Schema for Database Service  Resource
	UrnietfparamsscimschemasoracleidcsextensiondbcsGroups DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupArrayInput
	// (Updatable) Dynamic Group
	UrnietfparamsscimschemasoracleidcsextensiondynamicGroup DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondynamicGroupPtrInput
	// (Updatable) Idcs Group
	UrnietfparamsscimschemasoracleidcsextensiongroupGroup DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupPtrInput
	// (Updatable) POSIX Group extension
	UrnietfparamsscimschemasoracleidcsextensionposixGroup DomainsGroupUrnietfparamsscimschemasoracleidcsextensionposixGroupPtrInput
	// (Updatable) Requestable Group
	UrnietfparamsscimschemasoracleidcsextensionrequestableGroup DomainsGroupUrnietfparamsscimschemasoracleidcsextensionrequestableGroupPtrInput
}

func (DomainsGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainsGroupState)(nil)).Elem()
}

type domainsGroupArgs struct {
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets []string `pulumi:"attributeSets"`
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes *string `pulumi:"attributes"`
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// (Updatable) Group display name
	DisplayName string `pulumi:"displayName"`
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	ExternalId *string `pulumi:"externalId"`
	// The basic endpoint for the identity domain
	IdcsEndpoint string `pulumi:"idcsEndpoint"`
	// (Updatable) Group members - when requesting members attribute, a max of 10,000 members will be returned in a single request. It is recommended to use startIndex and count to return members in pages instead of in a single response, eg : #attributes=members[startIndex=1%26count=10]
	Members []DomainsGroupMember `pulumi:"members"`
	// (Updatable) A human readable name for Group as defined by the Service Consumer
	NonUniqueDisplayName *string `pulumi:"nonUniqueDisplayName"`
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	Ocid *string `pulumi:"ocid"`
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	Schemas []string `pulumi:"schemas"`
	// (Updatable) A list of tags on this resource.
	Tags []DomainsGroupTag `pulumi:"tags"`
	// (Updatable) Oracle Cloud Infrastructure Tags.
	UrnietfparamsscimschemasoracleidcsextensionOciTags *DomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTags `pulumi:"urnietfparamsscimschemasoracleidcsextensionOciTags"`
	// (Updatable) Dynamic Group
	UrnietfparamsscimschemasoracleidcsextensiondynamicGroup *DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondynamicGroup `pulumi:"urnietfparamsscimschemasoracleidcsextensiondynamicGroup"`
	// (Updatable) Idcs Group
	UrnietfparamsscimschemasoracleidcsextensiongroupGroup *DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroup `pulumi:"urnietfparamsscimschemasoracleidcsextensiongroupGroup"`
	// (Updatable) POSIX Group extension
	UrnietfparamsscimschemasoracleidcsextensionposixGroup *DomainsGroupUrnietfparamsscimschemasoracleidcsextensionposixGroup `pulumi:"urnietfparamsscimschemasoracleidcsextensionposixGroup"`
	// (Updatable) Requestable Group
	UrnietfparamsscimschemasoracleidcsextensionrequestableGroup *DomainsGroupUrnietfparamsscimschemasoracleidcsextensionrequestableGroup `pulumi:"urnietfparamsscimschemasoracleidcsextensionrequestableGroup"`
}

// The set of arguments for constructing a DomainsGroup resource.
type DomainsGroupArgs struct {
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayInput
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrInput
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput
	// (Updatable) Group display name
	DisplayName pulumi.StringInput
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	ExternalId pulumi.StringPtrInput
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringInput
	// (Updatable) Group members - when requesting members attribute, a max of 10,000 members will be returned in a single request. It is recommended to use startIndex and count to return members in pages instead of in a single response, eg : #attributes=members[startIndex=1%26count=10]
	Members DomainsGroupMemberArrayInput
	// (Updatable) A human readable name for Group as defined by the Service Consumer
	NonUniqueDisplayName pulumi.StringPtrInput
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	Ocid pulumi.StringPtrInput
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	Schemas pulumi.StringArrayInput
	// (Updatable) A list of tags on this resource.
	Tags DomainsGroupTagArrayInput
	// (Updatable) Oracle Cloud Infrastructure Tags.
	UrnietfparamsscimschemasoracleidcsextensionOciTags DomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsPtrInput
	// (Updatable) Dynamic Group
	UrnietfparamsscimschemasoracleidcsextensiondynamicGroup DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondynamicGroupPtrInput
	// (Updatable) Idcs Group
	UrnietfparamsscimschemasoracleidcsextensiongroupGroup DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupPtrInput
	// (Updatable) POSIX Group extension
	UrnietfparamsscimschemasoracleidcsextensionposixGroup DomainsGroupUrnietfparamsscimschemasoracleidcsextensionposixGroupPtrInput
	// (Updatable) Requestable Group
	UrnietfparamsscimschemasoracleidcsextensionrequestableGroup DomainsGroupUrnietfparamsscimschemasoracleidcsextensionrequestableGroupPtrInput
}

func (DomainsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainsGroupArgs)(nil)).Elem()
}

type DomainsGroupInput interface {
	pulumi.Input

	ToDomainsGroupOutput() DomainsGroupOutput
	ToDomainsGroupOutputWithContext(ctx context.Context) DomainsGroupOutput
}

func (*DomainsGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainsGroup)(nil)).Elem()
}

func (i *DomainsGroup) ToDomainsGroupOutput() DomainsGroupOutput {
	return i.ToDomainsGroupOutputWithContext(context.Background())
}

func (i *DomainsGroup) ToDomainsGroupOutputWithContext(ctx context.Context) DomainsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsGroupOutput)
}

// DomainsGroupArrayInput is an input type that accepts DomainsGroupArray and DomainsGroupArrayOutput values.
// You can construct a concrete instance of `DomainsGroupArrayInput` via:
//
//	DomainsGroupArray{ DomainsGroupArgs{...} }
type DomainsGroupArrayInput interface {
	pulumi.Input

	ToDomainsGroupArrayOutput() DomainsGroupArrayOutput
	ToDomainsGroupArrayOutputWithContext(context.Context) DomainsGroupArrayOutput
}

type DomainsGroupArray []DomainsGroupInput

func (DomainsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainsGroup)(nil)).Elem()
}

func (i DomainsGroupArray) ToDomainsGroupArrayOutput() DomainsGroupArrayOutput {
	return i.ToDomainsGroupArrayOutputWithContext(context.Background())
}

func (i DomainsGroupArray) ToDomainsGroupArrayOutputWithContext(ctx context.Context) DomainsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsGroupArrayOutput)
}

// DomainsGroupMapInput is an input type that accepts DomainsGroupMap and DomainsGroupMapOutput values.
// You can construct a concrete instance of `DomainsGroupMapInput` via:
//
//	DomainsGroupMap{ "key": DomainsGroupArgs{...} }
type DomainsGroupMapInput interface {
	pulumi.Input

	ToDomainsGroupMapOutput() DomainsGroupMapOutput
	ToDomainsGroupMapOutputWithContext(context.Context) DomainsGroupMapOutput
}

type DomainsGroupMap map[string]DomainsGroupInput

func (DomainsGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainsGroup)(nil)).Elem()
}

func (i DomainsGroupMap) ToDomainsGroupMapOutput() DomainsGroupMapOutput {
	return i.ToDomainsGroupMapOutputWithContext(context.Background())
}

func (i DomainsGroupMap) ToDomainsGroupMapOutputWithContext(ctx context.Context) DomainsGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsGroupMapOutput)
}

type DomainsGroupOutput struct{ *pulumi.OutputState }

func (DomainsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainsGroup)(nil)).Elem()
}

func (o DomainsGroupOutput) ToDomainsGroupOutput() DomainsGroupOutput {
	return o
}

func (o DomainsGroupOutput) ToDomainsGroupOutputWithContext(ctx context.Context) DomainsGroupOutput {
	return o
}

// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
func (o DomainsGroupOutput) AttributeSets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsGroup) pulumi.StringArrayOutput { return v.AttributeSets }).(pulumi.StringArrayOutput)
}

// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
func (o DomainsGroupOutput) Attributes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsGroup) pulumi.StringPtrOutput { return v.Attributes }).(pulumi.StringPtrOutput)
}

// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
func (o DomainsGroupOutput) Authorization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsGroup) pulumi.StringPtrOutput { return v.Authorization }).(pulumi.StringPtrOutput)
}

// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
func (o DomainsGroupOutput) CompartmentOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsGroup) pulumi.StringOutput { return v.CompartmentOcid }).(pulumi.StringOutput)
}

// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
func (o DomainsGroupOutput) DeleteInProgress() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsGroup) pulumi.BoolOutput { return v.DeleteInProgress }).(pulumi.BoolOutput)
}

// (Updatable) Group display name
func (o DomainsGroupOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsGroup) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
func (o DomainsGroupOutput) DomainOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsGroup) pulumi.StringOutput { return v.DomainOcid }).(pulumi.StringOutput)
}

// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
func (o DomainsGroupOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsGroup) pulumi.StringOutput { return v.ExternalId }).(pulumi.StringOutput)
}

// (Updatable) The User or App who created the Resource
func (o DomainsGroupOutput) IdcsCreatedBies() DomainsGroupIdcsCreatedByArrayOutput {
	return o.ApplyT(func(v *DomainsGroup) DomainsGroupIdcsCreatedByArrayOutput { return v.IdcsCreatedBies }).(DomainsGroupIdcsCreatedByArrayOutput)
}

// The basic endpoint for the identity domain
func (o DomainsGroupOutput) IdcsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsGroup) pulumi.StringOutput { return v.IdcsEndpoint }).(pulumi.StringOutput)
}

// (Updatable) The User or App who modified the Resource
func (o DomainsGroupOutput) IdcsLastModifiedBies() DomainsGroupIdcsLastModifiedByArrayOutput {
	return o.ApplyT(func(v *DomainsGroup) DomainsGroupIdcsLastModifiedByArrayOutput { return v.IdcsLastModifiedBies }).(DomainsGroupIdcsLastModifiedByArrayOutput)
}

// (Updatable) The release number when the resource was upgraded.
func (o DomainsGroupOutput) IdcsLastUpgradedInRelease() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsGroup) pulumi.StringOutput { return v.IdcsLastUpgradedInRelease }).(pulumi.StringOutput)
}

// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
func (o DomainsGroupOutput) IdcsPreventedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsGroup) pulumi.StringArrayOutput { return v.IdcsPreventedOperations }).(pulumi.StringArrayOutput)
}

// (Updatable) Group members - when requesting members attribute, a max of 10,000 members will be returned in a single request. It is recommended to use startIndex and count to return members in pages instead of in a single response, eg : #attributes=members[startIndex=1%26count=10]
func (o DomainsGroupOutput) Members() DomainsGroupMemberArrayOutput {
	return o.ApplyT(func(v *DomainsGroup) DomainsGroupMemberArrayOutput { return v.Members }).(DomainsGroupMemberArrayOutput)
}

// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
func (o DomainsGroupOutput) Metas() DomainsGroupMetaArrayOutput {
	return o.ApplyT(func(v *DomainsGroup) DomainsGroupMetaArrayOutput { return v.Metas }).(DomainsGroupMetaArrayOutput)
}

// (Updatable) A human readable name for Group as defined by the Service Consumer
func (o DomainsGroupOutput) NonUniqueDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsGroup) pulumi.StringOutput { return v.NonUniqueDisplayName }).(pulumi.StringOutput)
}

// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
func (o DomainsGroupOutput) Ocid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsGroup) pulumi.StringOutput { return v.Ocid }).(pulumi.StringOutput)
}

// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
func (o DomainsGroupOutput) ResourceTypeSchemaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsGroup) pulumi.StringPtrOutput { return v.ResourceTypeSchemaVersion }).(pulumi.StringPtrOutput)
}

// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
func (o DomainsGroupOutput) Schemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsGroup) pulumi.StringArrayOutput { return v.Schemas }).(pulumi.StringArrayOutput)
}

// (Updatable) A list of tags on this resource.
func (o DomainsGroupOutput) Tags() DomainsGroupTagArrayOutput {
	return o.ApplyT(func(v *DomainsGroup) DomainsGroupTagArrayOutput { return v.Tags }).(DomainsGroupTagArrayOutput)
}

// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
func (o DomainsGroupOutput) TenancyOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsGroup) pulumi.StringOutput { return v.TenancyOcid }).(pulumi.StringOutput)
}

// (Updatable) Oracle Cloud Infrastructure Tags.
func (o DomainsGroupOutput) UrnietfparamsscimschemasoracleidcsextensionOciTags() DomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsOutput {
	return o.ApplyT(func(v *DomainsGroup) DomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsOutput {
		return v.UrnietfparamsscimschemasoracleidcsextensionOciTags
	}).(DomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsOutput)
}

// (Updatable) Schema for Database Service  Resource
func (o DomainsGroupOutput) UrnietfparamsscimschemasoracleidcsextensiondbcsGroups() DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupArrayOutput {
	return o.ApplyT(func(v *DomainsGroup) DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupArrayOutput {
		return v.UrnietfparamsscimschemasoracleidcsextensiondbcsGroups
	}).(DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupArrayOutput)
}

// (Updatable) Dynamic Group
func (o DomainsGroupOutput) UrnietfparamsscimschemasoracleidcsextensiondynamicGroup() DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondynamicGroupOutput {
	return o.ApplyT(func(v *DomainsGroup) DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondynamicGroupOutput {
		return v.UrnietfparamsscimschemasoracleidcsextensiondynamicGroup
	}).(DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondynamicGroupOutput)
}

// (Updatable) Idcs Group
func (o DomainsGroupOutput) UrnietfparamsscimschemasoracleidcsextensiongroupGroup() DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupOutput {
	return o.ApplyT(func(v *DomainsGroup) DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupOutput {
		return v.UrnietfparamsscimschemasoracleidcsextensiongroupGroup
	}).(DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupOutput)
}

// (Updatable) POSIX Group extension
func (o DomainsGroupOutput) UrnietfparamsscimschemasoracleidcsextensionposixGroup() DomainsGroupUrnietfparamsscimschemasoracleidcsextensionposixGroupOutput {
	return o.ApplyT(func(v *DomainsGroup) DomainsGroupUrnietfparamsscimschemasoracleidcsextensionposixGroupOutput {
		return v.UrnietfparamsscimschemasoracleidcsextensionposixGroup
	}).(DomainsGroupUrnietfparamsscimschemasoracleidcsextensionposixGroupOutput)
}

// (Updatable) Requestable Group
func (o DomainsGroupOutput) UrnietfparamsscimschemasoracleidcsextensionrequestableGroup() DomainsGroupUrnietfparamsscimschemasoracleidcsextensionrequestableGroupOutput {
	return o.ApplyT(func(v *DomainsGroup) DomainsGroupUrnietfparamsscimschemasoracleidcsextensionrequestableGroupOutput {
		return v.UrnietfparamsscimschemasoracleidcsextensionrequestableGroup
	}).(DomainsGroupUrnietfparamsscimschemasoracleidcsextensionrequestableGroupOutput)
}

type DomainsGroupArrayOutput struct{ *pulumi.OutputState }

func (DomainsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainsGroup)(nil)).Elem()
}

func (o DomainsGroupArrayOutput) ToDomainsGroupArrayOutput() DomainsGroupArrayOutput {
	return o
}

func (o DomainsGroupArrayOutput) ToDomainsGroupArrayOutputWithContext(ctx context.Context) DomainsGroupArrayOutput {
	return o
}

func (o DomainsGroupArrayOutput) Index(i pulumi.IntInput) DomainsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DomainsGroup {
		return vs[0].([]*DomainsGroup)[vs[1].(int)]
	}).(DomainsGroupOutput)
}

type DomainsGroupMapOutput struct{ *pulumi.OutputState }

func (DomainsGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainsGroup)(nil)).Elem()
}

func (o DomainsGroupMapOutput) ToDomainsGroupMapOutput() DomainsGroupMapOutput {
	return o
}

func (o DomainsGroupMapOutput) ToDomainsGroupMapOutputWithContext(ctx context.Context) DomainsGroupMapOutput {
	return o
}

func (o DomainsGroupMapOutput) MapIndex(k pulumi.StringInput) DomainsGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DomainsGroup {
		return vs[0].(map[string]*DomainsGroup)[vs[1].(string)]
	}).(DomainsGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsGroupInput)(nil)).Elem(), &DomainsGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsGroupArrayInput)(nil)).Elem(), DomainsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsGroupMapInput)(nil)).Elem(), DomainsGroupMap{})
	pulumi.RegisterOutputType(DomainsGroupOutput{})
	pulumi.RegisterOutputType(DomainsGroupArrayOutput{})
	pulumi.RegisterOutputType(DomainsGroupMapOutput{})
}
