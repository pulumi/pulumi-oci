// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Identity Provider resource in Oracle Cloud Infrastructure Identity Domains service.
//
// # Create an Identity Provider
//
// ## Import
//
// IdentityProviders can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:Identity/domainsIdentityProvider:DomainsIdentityProvider test_identity_provider "idcsEndpoint/{idcsEndpoint}/identityProviders/{identityProviderId}"
//
// ```
type DomainsIdentityProvider struct {
	pulumi.CustomResourceState

	// (Updatable) Assertion attribute name.
	AssertionAttribute pulumi.StringOutput `pulumi:"assertionAttribute"`
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayOutput `pulumi:"attributeSets"`
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrOutput `pulumi:"attributes"`
	// (Updatable) HTTP binding to use for authentication requests.
	AuthnRequestBinding pulumi.StringOutput `pulumi:"authnRequestBinding"`
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrOutput `pulumi:"authorization"`
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	CompartmentOcid pulumi.StringOutput `pulumi:"compartmentOcid"`
	// (Updatable) Correlation policy
	CorrelationPolicy DomainsIdentityProviderCorrelationPolicyOutput `pulumi:"correlationPolicy"`
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	DeleteInProgress pulumi.BoolOutput `pulumi:"deleteInProgress"`
	// (Updatable) Description
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	DomainOcid pulumi.StringOutput `pulumi:"domainOcid"`
	// (Updatable) Set to true to indicate Partner enabled.
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// (Updatable) Encryption certificate
	EncryptionCertificate pulumi.StringOutput `pulumi:"encryptionCertificate"`
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	ExternalId pulumi.StringOutput `pulumi:"externalId"`
	// (Updatable) Identity Provider Icon URL.
	IconUrl pulumi.StringOutput `pulumi:"iconUrl"`
	// (Updatable) The User or App who created the Resource
	IdcsCreatedBies DomainsIdentityProviderIdcsCreatedByArrayOutput `pulumi:"idcsCreatedBies"`
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringOutput `pulumi:"idcsEndpoint"`
	// (Updatable) The User or App who modified the Resource
	IdcsLastModifiedBies DomainsIdentityProviderIdcsLastModifiedByArrayOutput `pulumi:"idcsLastModifiedBies"`
	// (Updatable) The release number when the resource was upgraded.
	IdcsLastUpgradedInRelease pulumi.StringOutput `pulumi:"idcsLastUpgradedInRelease"`
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	IdcsPreventedOperations pulumi.StringArrayOutput `pulumi:"idcsPreventedOperations"`
	// (Updatable) Identity Provider SSO URL
	IdpSsoUrl pulumi.StringOutput `pulumi:"idpSsoUrl"`
	// (Updatable) Set to true to include the signing certificate in the signature.
	IncludeSigningCertInSignature pulumi.BoolOutput `pulumi:"includeSigningCertInSignature"`
	// (Updatable) Refers to every group of which a JIT-provisioned User should be a member.  Just-in-Time user-provisioning applies this static list when jitUserProvGroupStaticListEnabled:true.
	JitUserProvAssignedGroups DomainsIdentityProviderJitUserProvAssignedGroupArrayOutput `pulumi:"jitUserProvAssignedGroups"`
	// (Updatable) Set to true to indicate JIT User Creation is enabled
	JitUserProvAttributeUpdateEnabled pulumi.BoolOutput `pulumi:"jitUserProvAttributeUpdateEnabled"`
	// (Updatable) Assertion To User Mapping
	JitUserProvAttributes DomainsIdentityProviderJitUserProvAttributesOutput `pulumi:"jitUserProvAttributes"`
	// (Updatable) Set to true to indicate JIT User Creation is enabled
	JitUserProvCreateUserEnabled pulumi.BoolOutput `pulumi:"jitUserProvCreateUserEnabled"`
	// (Updatable) Set to true to indicate JIT User Provisioning is enabled
	JitUserProvEnabled pulumi.BoolOutput `pulumi:"jitUserProvEnabled"`
	// (Updatable) Set to true to indicate JIT User Provisioning Groups should be assigned based on assertion attribute
	JitUserProvGroupAssertionAttributeEnabled pulumi.BoolOutput `pulumi:"jitUserProvGroupAssertionAttributeEnabled"`
	// (Updatable) The default value is 'Overwrite', which tells Just-In-Time user-provisioning to replace any current group-assignments for a User with those assigned by assertions and/or those assigned statically. Specify 'Merge' if you want Just-In-Time user-provisioning to combine its group-assignments with those the user already has.
	JitUserProvGroupAssignmentMethod pulumi.StringOutput `pulumi:"jitUserProvGroupAssignmentMethod"`
	// (Updatable) Property to indicate the mode of group mapping
	JitUserProvGroupMappingMode pulumi.StringOutput `pulumi:"jitUserProvGroupMappingMode"`
	// (Updatable) The list of mappings between the Identity Domain Group and the IDP group.
	JitUserProvGroupMappings DomainsIdentityProviderJitUserProvGroupMappingArrayOutput `pulumi:"jitUserProvGroupMappings"`
	// (Updatable) Name of the assertion attribute containing the users groups
	JitUserProvGroupSamlAttributeName pulumi.StringOutput `pulumi:"jitUserProvGroupSamlAttributeName"`
	// (Updatable) Set to true to indicate JIT User Provisioning Groups should be assigned from a static list
	JitUserProvGroupStaticListEnabled pulumi.BoolOutput `pulumi:"jitUserProvGroupStaticListEnabled"`
	// (Updatable) Set to true to indicate ignoring absence of group while provisioning
	JitUserProvIgnoreErrorOnAbsentGroups pulumi.BoolOutput `pulumi:"jitUserProvIgnoreErrorOnAbsentGroups"`
	// (Updatable) HTTP binding to use for logout.
	LogoutBinding pulumi.StringOutput `pulumi:"logoutBinding"`
	// (Updatable) Set to true to enable logout.
	LogoutEnabled pulumi.BoolOutput `pulumi:"logoutEnabled"`
	// (Updatable) Logout request URL
	LogoutRequestUrl pulumi.StringOutput `pulumi:"logoutRequestUrl"`
	// (Updatable) Logout response URL
	LogoutResponseUrl pulumi.StringOutput `pulumi:"logoutResponseUrl"`
	// (Updatable) Metadata
	Metadata pulumi.StringOutput `pulumi:"metadata"`
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	Metas DomainsIdentityProviderMetaArrayOutput `pulumi:"metas"`
	// (Updatable) Default authentication request name ID format.
	NameIdFormat pulumi.StringOutput `pulumi:"nameIdFormat"`
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	Ocid pulumi.StringOutput `pulumi:"ocid"`
	// (Updatable) Unique name of the trusted Identity Provider.
	PartnerName pulumi.StringOutput `pulumi:"partnerName"`
	// (Updatable) Provider ID
	PartnerProviderId pulumi.StringOutput `pulumi:"partnerProviderId"`
	// (Updatable) SAML SP authentication type.
	RequestedAuthenticationContexts pulumi.StringArrayOutput `pulumi:"requestedAuthenticationContexts"`
	// (Updatable) This SP requires requests SAML IdP to enforce re-authentication.
	RequireForceAuthn pulumi.BoolOutput `pulumi:"requireForceAuthn"`
	// (Updatable) SAML SP must accept encrypted assertion only.
	RequiresEncryptedAssertion pulumi.BoolOutput `pulumi:"requiresEncryptedAssertion"`
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrOutput `pulumi:"resourceTypeSchemaVersion"`
	// (Updatable) SAML SP HoK Enabled.
	SamlHoKrequired pulumi.BoolOutput `pulumi:"samlHoKrequired"`
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	Schemas pulumi.StringArrayOutput `pulumi:"schemas"`
	// (Updatable) The serviceInstanceIdentifier of the App that hosts this IdP. This value will match the opcServiceInstanceGUID of any service-instance that the IdP represents.
	ServiceInstanceIdentifier pulumi.StringOutput `pulumi:"serviceInstanceIdentifier"`
	// (Updatable) Set to true to indicate whether to show IdP in login page or not.
	ShownOnLoginPage pulumi.BoolOutput `pulumi:"shownOnLoginPage"`
	// (Updatable) Signature hash algorithm.
	SignatureHashAlgorithm pulumi.StringOutput `pulumi:"signatureHashAlgorithm"`
	// (Updatable) Signing certificate
	SigningCertificate pulumi.StringOutput `pulumi:"signingCertificate"`
	// (Updatable) Succinct ID
	SuccinctId pulumi.StringOutput `pulumi:"succinctId"`
	// (Updatable) A list of tags on this resource.
	Tags DomainsIdentityProviderTagArrayOutput `pulumi:"tags"`
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	TenancyOcid pulumi.StringOutput `pulumi:"tenancyOcid"`
	// (Updatable) The alternate Provider ID to be used as the Oracle Identity Cloud Service providerID (instead of the one in SamlSettings) when interacting with this IdP.
	TenantProviderId pulumi.StringOutput `pulumi:"tenantProviderId"`
	// (Updatable) Identity Provider Type
	Type pulumi.StringOutput `pulumi:"type"`
	// (Updatable) Social Identity Provider Extension Schema
	UrnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProviderOutput `pulumi:"urnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider"`
	// (Updatable) X509 Identity Provider Extension Schema
	Urnietfparamsscimschemasoracleidcsextensionx509identityProvider DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionx509identityProviderOutput `pulumi:"urnietfparamsscimschemasoracleidcsextensionx509identityProvider"`
	// (Updatable) User mapping method.
	UserMappingMethod pulumi.StringOutput `pulumi:"userMappingMethod"`
	// (Updatable) This property specifies the userstore attribute value that must match the incoming assertion attribute value or the incoming nameid attribute value in order to identify the user during SSO.<br>You can construct the userMappingStoreAttribute value by specifying attributes from the Oracle Identity Cloud Service Core Users schema. For examples of how to construct the userMappingStoreAttribute value, see the <b>Example of a Request Body</b> section of the Examples tab for the <a href='./op-admin-v1-identityproviders-post.html'>POST</a> and <a href='./op-admin-v1-identityproviders-id-put.html'>PUT</a> methods of the /IdentityProviders endpoint.
	UserMappingStoreAttribute pulumi.StringOutput `pulumi:"userMappingStoreAttribute"`
}

// NewDomainsIdentityProvider registers a new resource with the given unique name, arguments, and options.
func NewDomainsIdentityProvider(ctx *pulumi.Context,
	name string, args *DomainsIdentityProviderArgs, opts ...pulumi.ResourceOption) (*DomainsIdentityProvider, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Enabled == nil {
		return nil, errors.New("invalid value for required argument 'Enabled'")
	}
	if args.IdcsEndpoint == nil {
		return nil, errors.New("invalid value for required argument 'IdcsEndpoint'")
	}
	if args.PartnerName == nil {
		return nil, errors.New("invalid value for required argument 'PartnerName'")
	}
	if args.Schemas == nil {
		return nil, errors.New("invalid value for required argument 'Schemas'")
	}
	var resource DomainsIdentityProvider
	err := ctx.RegisterResource("oci:Identity/domainsIdentityProvider:DomainsIdentityProvider", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomainsIdentityProvider gets an existing DomainsIdentityProvider resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainsIdentityProvider(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainsIdentityProviderState, opts ...pulumi.ResourceOption) (*DomainsIdentityProvider, error) {
	var resource DomainsIdentityProvider
	err := ctx.ReadResource("oci:Identity/domainsIdentityProvider:DomainsIdentityProvider", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DomainsIdentityProvider resources.
type domainsIdentityProviderState struct {
	// (Updatable) Assertion attribute name.
	AssertionAttribute *string `pulumi:"assertionAttribute"`
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets []string `pulumi:"attributeSets"`
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes *string `pulumi:"attributes"`
	// (Updatable) HTTP binding to use for authentication requests.
	AuthnRequestBinding *string `pulumi:"authnRequestBinding"`
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	CompartmentOcid *string `pulumi:"compartmentOcid"`
	// (Updatable) Correlation policy
	CorrelationPolicy *DomainsIdentityProviderCorrelationPolicy `pulumi:"correlationPolicy"`
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	DeleteInProgress *bool `pulumi:"deleteInProgress"`
	// (Updatable) Description
	Description *string `pulumi:"description"`
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	DomainOcid *string `pulumi:"domainOcid"`
	// (Updatable) Set to true to indicate Partner enabled.
	Enabled *bool `pulumi:"enabled"`
	// (Updatable) Encryption certificate
	EncryptionCertificate *string `pulumi:"encryptionCertificate"`
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	ExternalId *string `pulumi:"externalId"`
	// (Updatable) Identity Provider Icon URL.
	IconUrl *string `pulumi:"iconUrl"`
	// (Updatable) The User or App who created the Resource
	IdcsCreatedBies []DomainsIdentityProviderIdcsCreatedBy `pulumi:"idcsCreatedBies"`
	// The basic endpoint for the identity domain
	IdcsEndpoint *string `pulumi:"idcsEndpoint"`
	// (Updatable) The User or App who modified the Resource
	IdcsLastModifiedBies []DomainsIdentityProviderIdcsLastModifiedBy `pulumi:"idcsLastModifiedBies"`
	// (Updatable) The release number when the resource was upgraded.
	IdcsLastUpgradedInRelease *string `pulumi:"idcsLastUpgradedInRelease"`
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	IdcsPreventedOperations []string `pulumi:"idcsPreventedOperations"`
	// (Updatable) Identity Provider SSO URL
	IdpSsoUrl *string `pulumi:"idpSsoUrl"`
	// (Updatable) Set to true to include the signing certificate in the signature.
	IncludeSigningCertInSignature *bool `pulumi:"includeSigningCertInSignature"`
	// (Updatable) Refers to every group of which a JIT-provisioned User should be a member.  Just-in-Time user-provisioning applies this static list when jitUserProvGroupStaticListEnabled:true.
	JitUserProvAssignedGroups []DomainsIdentityProviderJitUserProvAssignedGroup `pulumi:"jitUserProvAssignedGroups"`
	// (Updatable) Set to true to indicate JIT User Creation is enabled
	JitUserProvAttributeUpdateEnabled *bool `pulumi:"jitUserProvAttributeUpdateEnabled"`
	// (Updatable) Assertion To User Mapping
	JitUserProvAttributes *DomainsIdentityProviderJitUserProvAttributes `pulumi:"jitUserProvAttributes"`
	// (Updatable) Set to true to indicate JIT User Creation is enabled
	JitUserProvCreateUserEnabled *bool `pulumi:"jitUserProvCreateUserEnabled"`
	// (Updatable) Set to true to indicate JIT User Provisioning is enabled
	JitUserProvEnabled *bool `pulumi:"jitUserProvEnabled"`
	// (Updatable) Set to true to indicate JIT User Provisioning Groups should be assigned based on assertion attribute
	JitUserProvGroupAssertionAttributeEnabled *bool `pulumi:"jitUserProvGroupAssertionAttributeEnabled"`
	// (Updatable) The default value is 'Overwrite', which tells Just-In-Time user-provisioning to replace any current group-assignments for a User with those assigned by assertions and/or those assigned statically. Specify 'Merge' if you want Just-In-Time user-provisioning to combine its group-assignments with those the user already has.
	JitUserProvGroupAssignmentMethod *string `pulumi:"jitUserProvGroupAssignmentMethod"`
	// (Updatable) Property to indicate the mode of group mapping
	JitUserProvGroupMappingMode *string `pulumi:"jitUserProvGroupMappingMode"`
	// (Updatable) The list of mappings between the Identity Domain Group and the IDP group.
	JitUserProvGroupMappings []DomainsIdentityProviderJitUserProvGroupMapping `pulumi:"jitUserProvGroupMappings"`
	// (Updatable) Name of the assertion attribute containing the users groups
	JitUserProvGroupSamlAttributeName *string `pulumi:"jitUserProvGroupSamlAttributeName"`
	// (Updatable) Set to true to indicate JIT User Provisioning Groups should be assigned from a static list
	JitUserProvGroupStaticListEnabled *bool `pulumi:"jitUserProvGroupStaticListEnabled"`
	// (Updatable) Set to true to indicate ignoring absence of group while provisioning
	JitUserProvIgnoreErrorOnAbsentGroups *bool `pulumi:"jitUserProvIgnoreErrorOnAbsentGroups"`
	// (Updatable) HTTP binding to use for logout.
	LogoutBinding *string `pulumi:"logoutBinding"`
	// (Updatable) Set to true to enable logout.
	LogoutEnabled *bool `pulumi:"logoutEnabled"`
	// (Updatable) Logout request URL
	LogoutRequestUrl *string `pulumi:"logoutRequestUrl"`
	// (Updatable) Logout response URL
	LogoutResponseUrl *string `pulumi:"logoutResponseUrl"`
	// (Updatable) Metadata
	Metadata *string `pulumi:"metadata"`
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	Metas []DomainsIdentityProviderMeta `pulumi:"metas"`
	// (Updatable) Default authentication request name ID format.
	NameIdFormat *string `pulumi:"nameIdFormat"`
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	Ocid *string `pulumi:"ocid"`
	// (Updatable) Unique name of the trusted Identity Provider.
	PartnerName *string `pulumi:"partnerName"`
	// (Updatable) Provider ID
	PartnerProviderId *string `pulumi:"partnerProviderId"`
	// (Updatable) SAML SP authentication type.
	RequestedAuthenticationContexts []string `pulumi:"requestedAuthenticationContexts"`
	// (Updatable) This SP requires requests SAML IdP to enforce re-authentication.
	RequireForceAuthn *bool `pulumi:"requireForceAuthn"`
	// (Updatable) SAML SP must accept encrypted assertion only.
	RequiresEncryptedAssertion *bool `pulumi:"requiresEncryptedAssertion"`
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// (Updatable) SAML SP HoK Enabled.
	SamlHoKrequired *bool `pulumi:"samlHoKrequired"`
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	Schemas []string `pulumi:"schemas"`
	// (Updatable) The serviceInstanceIdentifier of the App that hosts this IdP. This value will match the opcServiceInstanceGUID of any service-instance that the IdP represents.
	ServiceInstanceIdentifier *string `pulumi:"serviceInstanceIdentifier"`
	// (Updatable) Set to true to indicate whether to show IdP in login page or not.
	ShownOnLoginPage *bool `pulumi:"shownOnLoginPage"`
	// (Updatable) Signature hash algorithm.
	SignatureHashAlgorithm *string `pulumi:"signatureHashAlgorithm"`
	// (Updatable) Signing certificate
	SigningCertificate *string `pulumi:"signingCertificate"`
	// (Updatable) Succinct ID
	SuccinctId *string `pulumi:"succinctId"`
	// (Updatable) A list of tags on this resource.
	Tags []DomainsIdentityProviderTag `pulumi:"tags"`
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	TenancyOcid *string `pulumi:"tenancyOcid"`
	// (Updatable) The alternate Provider ID to be used as the Oracle Identity Cloud Service providerID (instead of the one in SamlSettings) when interacting with this IdP.
	TenantProviderId *string `pulumi:"tenantProviderId"`
	// (Updatable) Identity Provider Type
	Type *string `pulumi:"type"`
	// (Updatable) Social Identity Provider Extension Schema
	UrnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider *DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider `pulumi:"urnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider"`
	// (Updatable) X509 Identity Provider Extension Schema
	Urnietfparamsscimschemasoracleidcsextensionx509identityProvider *DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionx509identityProvider `pulumi:"urnietfparamsscimschemasoracleidcsextensionx509identityProvider"`
	// (Updatable) User mapping method.
	UserMappingMethod *string `pulumi:"userMappingMethod"`
	// (Updatable) This property specifies the userstore attribute value that must match the incoming assertion attribute value or the incoming nameid attribute value in order to identify the user during SSO.<br>You can construct the userMappingStoreAttribute value by specifying attributes from the Oracle Identity Cloud Service Core Users schema. For examples of how to construct the userMappingStoreAttribute value, see the <b>Example of a Request Body</b> section of the Examples tab for the <a href='./op-admin-v1-identityproviders-post.html'>POST</a> and <a href='./op-admin-v1-identityproviders-id-put.html'>PUT</a> methods of the /IdentityProviders endpoint.
	UserMappingStoreAttribute *string `pulumi:"userMappingStoreAttribute"`
}

type DomainsIdentityProviderState struct {
	// (Updatable) Assertion attribute name.
	AssertionAttribute pulumi.StringPtrInput
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayInput
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrInput
	// (Updatable) HTTP binding to use for authentication requests.
	AuthnRequestBinding pulumi.StringPtrInput
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	CompartmentOcid pulumi.StringPtrInput
	// (Updatable) Correlation policy
	CorrelationPolicy DomainsIdentityProviderCorrelationPolicyPtrInput
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	DeleteInProgress pulumi.BoolPtrInput
	// (Updatable) Description
	Description pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	DomainOcid pulumi.StringPtrInput
	// (Updatable) Set to true to indicate Partner enabled.
	Enabled pulumi.BoolPtrInput
	// (Updatable) Encryption certificate
	EncryptionCertificate pulumi.StringPtrInput
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	ExternalId pulumi.StringPtrInput
	// (Updatable) Identity Provider Icon URL.
	IconUrl pulumi.StringPtrInput
	// (Updatable) The User or App who created the Resource
	IdcsCreatedBies DomainsIdentityProviderIdcsCreatedByArrayInput
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringPtrInput
	// (Updatable) The User or App who modified the Resource
	IdcsLastModifiedBies DomainsIdentityProviderIdcsLastModifiedByArrayInput
	// (Updatable) The release number when the resource was upgraded.
	IdcsLastUpgradedInRelease pulumi.StringPtrInput
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	IdcsPreventedOperations pulumi.StringArrayInput
	// (Updatable) Identity Provider SSO URL
	IdpSsoUrl pulumi.StringPtrInput
	// (Updatable) Set to true to include the signing certificate in the signature.
	IncludeSigningCertInSignature pulumi.BoolPtrInput
	// (Updatable) Refers to every group of which a JIT-provisioned User should be a member.  Just-in-Time user-provisioning applies this static list when jitUserProvGroupStaticListEnabled:true.
	JitUserProvAssignedGroups DomainsIdentityProviderJitUserProvAssignedGroupArrayInput
	// (Updatable) Set to true to indicate JIT User Creation is enabled
	JitUserProvAttributeUpdateEnabled pulumi.BoolPtrInput
	// (Updatable) Assertion To User Mapping
	JitUserProvAttributes DomainsIdentityProviderJitUserProvAttributesPtrInput
	// (Updatable) Set to true to indicate JIT User Creation is enabled
	JitUserProvCreateUserEnabled pulumi.BoolPtrInput
	// (Updatable) Set to true to indicate JIT User Provisioning is enabled
	JitUserProvEnabled pulumi.BoolPtrInput
	// (Updatable) Set to true to indicate JIT User Provisioning Groups should be assigned based on assertion attribute
	JitUserProvGroupAssertionAttributeEnabled pulumi.BoolPtrInput
	// (Updatable) The default value is 'Overwrite', which tells Just-In-Time user-provisioning to replace any current group-assignments for a User with those assigned by assertions and/or those assigned statically. Specify 'Merge' if you want Just-In-Time user-provisioning to combine its group-assignments with those the user already has.
	JitUserProvGroupAssignmentMethod pulumi.StringPtrInput
	// (Updatable) Property to indicate the mode of group mapping
	JitUserProvGroupMappingMode pulumi.StringPtrInput
	// (Updatable) The list of mappings between the Identity Domain Group and the IDP group.
	JitUserProvGroupMappings DomainsIdentityProviderJitUserProvGroupMappingArrayInput
	// (Updatable) Name of the assertion attribute containing the users groups
	JitUserProvGroupSamlAttributeName pulumi.StringPtrInput
	// (Updatable) Set to true to indicate JIT User Provisioning Groups should be assigned from a static list
	JitUserProvGroupStaticListEnabled pulumi.BoolPtrInput
	// (Updatable) Set to true to indicate ignoring absence of group while provisioning
	JitUserProvIgnoreErrorOnAbsentGroups pulumi.BoolPtrInput
	// (Updatable) HTTP binding to use for logout.
	LogoutBinding pulumi.StringPtrInput
	// (Updatable) Set to true to enable logout.
	LogoutEnabled pulumi.BoolPtrInput
	// (Updatable) Logout request URL
	LogoutRequestUrl pulumi.StringPtrInput
	// (Updatable) Logout response URL
	LogoutResponseUrl pulumi.StringPtrInput
	// (Updatable) Metadata
	Metadata pulumi.StringPtrInput
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	Metas DomainsIdentityProviderMetaArrayInput
	// (Updatable) Default authentication request name ID format.
	NameIdFormat pulumi.StringPtrInput
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	Ocid pulumi.StringPtrInput
	// (Updatable) Unique name of the trusted Identity Provider.
	PartnerName pulumi.StringPtrInput
	// (Updatable) Provider ID
	PartnerProviderId pulumi.StringPtrInput
	// (Updatable) SAML SP authentication type.
	RequestedAuthenticationContexts pulumi.StringArrayInput
	// (Updatable) This SP requires requests SAML IdP to enforce re-authentication.
	RequireForceAuthn pulumi.BoolPtrInput
	// (Updatable) SAML SP must accept encrypted assertion only.
	RequiresEncryptedAssertion pulumi.BoolPtrInput
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput
	// (Updatable) SAML SP HoK Enabled.
	SamlHoKrequired pulumi.BoolPtrInput
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	Schemas pulumi.StringArrayInput
	// (Updatable) The serviceInstanceIdentifier of the App that hosts this IdP. This value will match the opcServiceInstanceGUID of any service-instance that the IdP represents.
	ServiceInstanceIdentifier pulumi.StringPtrInput
	// (Updatable) Set to true to indicate whether to show IdP in login page or not.
	ShownOnLoginPage pulumi.BoolPtrInput
	// (Updatable) Signature hash algorithm.
	SignatureHashAlgorithm pulumi.StringPtrInput
	// (Updatable) Signing certificate
	SigningCertificate pulumi.StringPtrInput
	// (Updatable) Succinct ID
	SuccinctId pulumi.StringPtrInput
	// (Updatable) A list of tags on this resource.
	Tags DomainsIdentityProviderTagArrayInput
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	TenancyOcid pulumi.StringPtrInput
	// (Updatable) The alternate Provider ID to be used as the Oracle Identity Cloud Service providerID (instead of the one in SamlSettings) when interacting with this IdP.
	TenantProviderId pulumi.StringPtrInput
	// (Updatable) Identity Provider Type
	Type pulumi.StringPtrInput
	// (Updatable) Social Identity Provider Extension Schema
	UrnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProviderPtrInput
	// (Updatable) X509 Identity Provider Extension Schema
	Urnietfparamsscimschemasoracleidcsextensionx509identityProvider DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionx509identityProviderPtrInput
	// (Updatable) User mapping method.
	UserMappingMethod pulumi.StringPtrInput
	// (Updatable) This property specifies the userstore attribute value that must match the incoming assertion attribute value or the incoming nameid attribute value in order to identify the user during SSO.<br>You can construct the userMappingStoreAttribute value by specifying attributes from the Oracle Identity Cloud Service Core Users schema. For examples of how to construct the userMappingStoreAttribute value, see the <b>Example of a Request Body</b> section of the Examples tab for the <a href='./op-admin-v1-identityproviders-post.html'>POST</a> and <a href='./op-admin-v1-identityproviders-id-put.html'>PUT</a> methods of the /IdentityProviders endpoint.
	UserMappingStoreAttribute pulumi.StringPtrInput
}

func (DomainsIdentityProviderState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainsIdentityProviderState)(nil)).Elem()
}

type domainsIdentityProviderArgs struct {
	// (Updatable) Assertion attribute name.
	AssertionAttribute *string `pulumi:"assertionAttribute"`
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets []string `pulumi:"attributeSets"`
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes *string `pulumi:"attributes"`
	// (Updatable) HTTP binding to use for authentication requests.
	AuthnRequestBinding *string `pulumi:"authnRequestBinding"`
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// (Updatable) Correlation policy
	CorrelationPolicy *DomainsIdentityProviderCorrelationPolicy `pulumi:"correlationPolicy"`
	// (Updatable) Description
	Description *string `pulumi:"description"`
	// (Updatable) Set to true to indicate Partner enabled.
	Enabled bool `pulumi:"enabled"`
	// (Updatable) Encryption certificate
	EncryptionCertificate *string `pulumi:"encryptionCertificate"`
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	ExternalId *string `pulumi:"externalId"`
	// (Updatable) Identity Provider Icon URL.
	IconUrl *string `pulumi:"iconUrl"`
	// The basic endpoint for the identity domain
	IdcsEndpoint string `pulumi:"idcsEndpoint"`
	// (Updatable) Identity Provider SSO URL
	IdpSsoUrl *string `pulumi:"idpSsoUrl"`
	// (Updatable) Set to true to include the signing certificate in the signature.
	IncludeSigningCertInSignature *bool `pulumi:"includeSigningCertInSignature"`
	// (Updatable) Refers to every group of which a JIT-provisioned User should be a member.  Just-in-Time user-provisioning applies this static list when jitUserProvGroupStaticListEnabled:true.
	JitUserProvAssignedGroups []DomainsIdentityProviderJitUserProvAssignedGroup `pulumi:"jitUserProvAssignedGroups"`
	// (Updatable) Set to true to indicate JIT User Creation is enabled
	JitUserProvAttributeUpdateEnabled *bool `pulumi:"jitUserProvAttributeUpdateEnabled"`
	// (Updatable) Assertion To User Mapping
	JitUserProvAttributes *DomainsIdentityProviderJitUserProvAttributes `pulumi:"jitUserProvAttributes"`
	// (Updatable) Set to true to indicate JIT User Creation is enabled
	JitUserProvCreateUserEnabled *bool `pulumi:"jitUserProvCreateUserEnabled"`
	// (Updatable) Set to true to indicate JIT User Provisioning is enabled
	JitUserProvEnabled *bool `pulumi:"jitUserProvEnabled"`
	// (Updatable) Set to true to indicate JIT User Provisioning Groups should be assigned based on assertion attribute
	JitUserProvGroupAssertionAttributeEnabled *bool `pulumi:"jitUserProvGroupAssertionAttributeEnabled"`
	// (Updatable) The default value is 'Overwrite', which tells Just-In-Time user-provisioning to replace any current group-assignments for a User with those assigned by assertions and/or those assigned statically. Specify 'Merge' if you want Just-In-Time user-provisioning to combine its group-assignments with those the user already has.
	JitUserProvGroupAssignmentMethod *string `pulumi:"jitUserProvGroupAssignmentMethod"`
	// (Updatable) Property to indicate the mode of group mapping
	JitUserProvGroupMappingMode *string `pulumi:"jitUserProvGroupMappingMode"`
	// (Updatable) The list of mappings between the Identity Domain Group and the IDP group.
	JitUserProvGroupMappings []DomainsIdentityProviderJitUserProvGroupMapping `pulumi:"jitUserProvGroupMappings"`
	// (Updatable) Name of the assertion attribute containing the users groups
	JitUserProvGroupSamlAttributeName *string `pulumi:"jitUserProvGroupSamlAttributeName"`
	// (Updatable) Set to true to indicate JIT User Provisioning Groups should be assigned from a static list
	JitUserProvGroupStaticListEnabled *bool `pulumi:"jitUserProvGroupStaticListEnabled"`
	// (Updatable) Set to true to indicate ignoring absence of group while provisioning
	JitUserProvIgnoreErrorOnAbsentGroups *bool `pulumi:"jitUserProvIgnoreErrorOnAbsentGroups"`
	// (Updatable) HTTP binding to use for logout.
	LogoutBinding *string `pulumi:"logoutBinding"`
	// (Updatable) Set to true to enable logout.
	LogoutEnabled *bool `pulumi:"logoutEnabled"`
	// (Updatable) Logout request URL
	LogoutRequestUrl *string `pulumi:"logoutRequestUrl"`
	// (Updatable) Logout response URL
	LogoutResponseUrl *string `pulumi:"logoutResponseUrl"`
	// (Updatable) Metadata
	Metadata *string `pulumi:"metadata"`
	// (Updatable) Default authentication request name ID format.
	NameIdFormat *string `pulumi:"nameIdFormat"`
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	Ocid *string `pulumi:"ocid"`
	// (Updatable) Unique name of the trusted Identity Provider.
	PartnerName string `pulumi:"partnerName"`
	// (Updatable) Provider ID
	PartnerProviderId *string `pulumi:"partnerProviderId"`
	// (Updatable) SAML SP authentication type.
	RequestedAuthenticationContexts []string `pulumi:"requestedAuthenticationContexts"`
	// (Updatable) This SP requires requests SAML IdP to enforce re-authentication.
	RequireForceAuthn *bool `pulumi:"requireForceAuthn"`
	// (Updatable) SAML SP must accept encrypted assertion only.
	RequiresEncryptedAssertion *bool `pulumi:"requiresEncryptedAssertion"`
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// (Updatable) SAML SP HoK Enabled.
	SamlHoKrequired *bool `pulumi:"samlHoKrequired"`
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	Schemas []string `pulumi:"schemas"`
	// (Updatable) The serviceInstanceIdentifier of the App that hosts this IdP. This value will match the opcServiceInstanceGUID of any service-instance that the IdP represents.
	ServiceInstanceIdentifier *string `pulumi:"serviceInstanceIdentifier"`
	// (Updatable) Set to true to indicate whether to show IdP in login page or not.
	ShownOnLoginPage *bool `pulumi:"shownOnLoginPage"`
	// (Updatable) Signature hash algorithm.
	SignatureHashAlgorithm *string `pulumi:"signatureHashAlgorithm"`
	// (Updatable) Signing certificate
	SigningCertificate *string `pulumi:"signingCertificate"`
	// (Updatable) Succinct ID
	SuccinctId *string `pulumi:"succinctId"`
	// (Updatable) A list of tags on this resource.
	Tags []DomainsIdentityProviderTag `pulumi:"tags"`
	// (Updatable) Identity Provider Type
	Type *string `pulumi:"type"`
	// (Updatable) Social Identity Provider Extension Schema
	UrnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider *DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider `pulumi:"urnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider"`
	// (Updatable) X509 Identity Provider Extension Schema
	Urnietfparamsscimschemasoracleidcsextensionx509identityProvider *DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionx509identityProvider `pulumi:"urnietfparamsscimschemasoracleidcsextensionx509identityProvider"`
	// (Updatable) User mapping method.
	UserMappingMethod *string `pulumi:"userMappingMethod"`
	// (Updatable) This property specifies the userstore attribute value that must match the incoming assertion attribute value or the incoming nameid attribute value in order to identify the user during SSO.<br>You can construct the userMappingStoreAttribute value by specifying attributes from the Oracle Identity Cloud Service Core Users schema. For examples of how to construct the userMappingStoreAttribute value, see the <b>Example of a Request Body</b> section of the Examples tab for the <a href='./op-admin-v1-identityproviders-post.html'>POST</a> and <a href='./op-admin-v1-identityproviders-id-put.html'>PUT</a> methods of the /IdentityProviders endpoint.
	UserMappingStoreAttribute *string `pulumi:"userMappingStoreAttribute"`
}

// The set of arguments for constructing a DomainsIdentityProvider resource.
type DomainsIdentityProviderArgs struct {
	// (Updatable) Assertion attribute name.
	AssertionAttribute pulumi.StringPtrInput
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayInput
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrInput
	// (Updatable) HTTP binding to use for authentication requests.
	AuthnRequestBinding pulumi.StringPtrInput
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput
	// (Updatable) Correlation policy
	CorrelationPolicy DomainsIdentityProviderCorrelationPolicyPtrInput
	// (Updatable) Description
	Description pulumi.StringPtrInput
	// (Updatable) Set to true to indicate Partner enabled.
	Enabled pulumi.BoolInput
	// (Updatable) Encryption certificate
	EncryptionCertificate pulumi.StringPtrInput
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	ExternalId pulumi.StringPtrInput
	// (Updatable) Identity Provider Icon URL.
	IconUrl pulumi.StringPtrInput
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringInput
	// (Updatable) Identity Provider SSO URL
	IdpSsoUrl pulumi.StringPtrInput
	// (Updatable) Set to true to include the signing certificate in the signature.
	IncludeSigningCertInSignature pulumi.BoolPtrInput
	// (Updatable) Refers to every group of which a JIT-provisioned User should be a member.  Just-in-Time user-provisioning applies this static list when jitUserProvGroupStaticListEnabled:true.
	JitUserProvAssignedGroups DomainsIdentityProviderJitUserProvAssignedGroupArrayInput
	// (Updatable) Set to true to indicate JIT User Creation is enabled
	JitUserProvAttributeUpdateEnabled pulumi.BoolPtrInput
	// (Updatable) Assertion To User Mapping
	JitUserProvAttributes DomainsIdentityProviderJitUserProvAttributesPtrInput
	// (Updatable) Set to true to indicate JIT User Creation is enabled
	JitUserProvCreateUserEnabled pulumi.BoolPtrInput
	// (Updatable) Set to true to indicate JIT User Provisioning is enabled
	JitUserProvEnabled pulumi.BoolPtrInput
	// (Updatable) Set to true to indicate JIT User Provisioning Groups should be assigned based on assertion attribute
	JitUserProvGroupAssertionAttributeEnabled pulumi.BoolPtrInput
	// (Updatable) The default value is 'Overwrite', which tells Just-In-Time user-provisioning to replace any current group-assignments for a User with those assigned by assertions and/or those assigned statically. Specify 'Merge' if you want Just-In-Time user-provisioning to combine its group-assignments with those the user already has.
	JitUserProvGroupAssignmentMethod pulumi.StringPtrInput
	// (Updatable) Property to indicate the mode of group mapping
	JitUserProvGroupMappingMode pulumi.StringPtrInput
	// (Updatable) The list of mappings between the Identity Domain Group and the IDP group.
	JitUserProvGroupMappings DomainsIdentityProviderJitUserProvGroupMappingArrayInput
	// (Updatable) Name of the assertion attribute containing the users groups
	JitUserProvGroupSamlAttributeName pulumi.StringPtrInput
	// (Updatable) Set to true to indicate JIT User Provisioning Groups should be assigned from a static list
	JitUserProvGroupStaticListEnabled pulumi.BoolPtrInput
	// (Updatable) Set to true to indicate ignoring absence of group while provisioning
	JitUserProvIgnoreErrorOnAbsentGroups pulumi.BoolPtrInput
	// (Updatable) HTTP binding to use for logout.
	LogoutBinding pulumi.StringPtrInput
	// (Updatable) Set to true to enable logout.
	LogoutEnabled pulumi.BoolPtrInput
	// (Updatable) Logout request URL
	LogoutRequestUrl pulumi.StringPtrInput
	// (Updatable) Logout response URL
	LogoutResponseUrl pulumi.StringPtrInput
	// (Updatable) Metadata
	Metadata pulumi.StringPtrInput
	// (Updatable) Default authentication request name ID format.
	NameIdFormat pulumi.StringPtrInput
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	Ocid pulumi.StringPtrInput
	// (Updatable) Unique name of the trusted Identity Provider.
	PartnerName pulumi.StringInput
	// (Updatable) Provider ID
	PartnerProviderId pulumi.StringPtrInput
	// (Updatable) SAML SP authentication type.
	RequestedAuthenticationContexts pulumi.StringArrayInput
	// (Updatable) This SP requires requests SAML IdP to enforce re-authentication.
	RequireForceAuthn pulumi.BoolPtrInput
	// (Updatable) SAML SP must accept encrypted assertion only.
	RequiresEncryptedAssertion pulumi.BoolPtrInput
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput
	// (Updatable) SAML SP HoK Enabled.
	SamlHoKrequired pulumi.BoolPtrInput
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	Schemas pulumi.StringArrayInput
	// (Updatable) The serviceInstanceIdentifier of the App that hosts this IdP. This value will match the opcServiceInstanceGUID of any service-instance that the IdP represents.
	ServiceInstanceIdentifier pulumi.StringPtrInput
	// (Updatable) Set to true to indicate whether to show IdP in login page or not.
	ShownOnLoginPage pulumi.BoolPtrInput
	// (Updatable) Signature hash algorithm.
	SignatureHashAlgorithm pulumi.StringPtrInput
	// (Updatable) Signing certificate
	SigningCertificate pulumi.StringPtrInput
	// (Updatable) Succinct ID
	SuccinctId pulumi.StringPtrInput
	// (Updatable) A list of tags on this resource.
	Tags DomainsIdentityProviderTagArrayInput
	// (Updatable) Identity Provider Type
	Type pulumi.StringPtrInput
	// (Updatable) Social Identity Provider Extension Schema
	UrnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProviderPtrInput
	// (Updatable) X509 Identity Provider Extension Schema
	Urnietfparamsscimschemasoracleidcsextensionx509identityProvider DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionx509identityProviderPtrInput
	// (Updatable) User mapping method.
	UserMappingMethod pulumi.StringPtrInput
	// (Updatable) This property specifies the userstore attribute value that must match the incoming assertion attribute value or the incoming nameid attribute value in order to identify the user during SSO.<br>You can construct the userMappingStoreAttribute value by specifying attributes from the Oracle Identity Cloud Service Core Users schema. For examples of how to construct the userMappingStoreAttribute value, see the <b>Example of a Request Body</b> section of the Examples tab for the <a href='./op-admin-v1-identityproviders-post.html'>POST</a> and <a href='./op-admin-v1-identityproviders-id-put.html'>PUT</a> methods of the /IdentityProviders endpoint.
	UserMappingStoreAttribute pulumi.StringPtrInput
}

func (DomainsIdentityProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainsIdentityProviderArgs)(nil)).Elem()
}

type DomainsIdentityProviderInput interface {
	pulumi.Input

	ToDomainsIdentityProviderOutput() DomainsIdentityProviderOutput
	ToDomainsIdentityProviderOutputWithContext(ctx context.Context) DomainsIdentityProviderOutput
}

func (*DomainsIdentityProvider) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainsIdentityProvider)(nil)).Elem()
}

func (i *DomainsIdentityProvider) ToDomainsIdentityProviderOutput() DomainsIdentityProviderOutput {
	return i.ToDomainsIdentityProviderOutputWithContext(context.Background())
}

func (i *DomainsIdentityProvider) ToDomainsIdentityProviderOutputWithContext(ctx context.Context) DomainsIdentityProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsIdentityProviderOutput)
}

// DomainsIdentityProviderArrayInput is an input type that accepts DomainsIdentityProviderArray and DomainsIdentityProviderArrayOutput values.
// You can construct a concrete instance of `DomainsIdentityProviderArrayInput` via:
//
//	DomainsIdentityProviderArray{ DomainsIdentityProviderArgs{...} }
type DomainsIdentityProviderArrayInput interface {
	pulumi.Input

	ToDomainsIdentityProviderArrayOutput() DomainsIdentityProviderArrayOutput
	ToDomainsIdentityProviderArrayOutputWithContext(context.Context) DomainsIdentityProviderArrayOutput
}

type DomainsIdentityProviderArray []DomainsIdentityProviderInput

func (DomainsIdentityProviderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainsIdentityProvider)(nil)).Elem()
}

func (i DomainsIdentityProviderArray) ToDomainsIdentityProviderArrayOutput() DomainsIdentityProviderArrayOutput {
	return i.ToDomainsIdentityProviderArrayOutputWithContext(context.Background())
}

func (i DomainsIdentityProviderArray) ToDomainsIdentityProviderArrayOutputWithContext(ctx context.Context) DomainsIdentityProviderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsIdentityProviderArrayOutput)
}

// DomainsIdentityProviderMapInput is an input type that accepts DomainsIdentityProviderMap and DomainsIdentityProviderMapOutput values.
// You can construct a concrete instance of `DomainsIdentityProviderMapInput` via:
//
//	DomainsIdentityProviderMap{ "key": DomainsIdentityProviderArgs{...} }
type DomainsIdentityProviderMapInput interface {
	pulumi.Input

	ToDomainsIdentityProviderMapOutput() DomainsIdentityProviderMapOutput
	ToDomainsIdentityProviderMapOutputWithContext(context.Context) DomainsIdentityProviderMapOutput
}

type DomainsIdentityProviderMap map[string]DomainsIdentityProviderInput

func (DomainsIdentityProviderMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainsIdentityProvider)(nil)).Elem()
}

func (i DomainsIdentityProviderMap) ToDomainsIdentityProviderMapOutput() DomainsIdentityProviderMapOutput {
	return i.ToDomainsIdentityProviderMapOutputWithContext(context.Background())
}

func (i DomainsIdentityProviderMap) ToDomainsIdentityProviderMapOutputWithContext(ctx context.Context) DomainsIdentityProviderMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsIdentityProviderMapOutput)
}

type DomainsIdentityProviderOutput struct{ *pulumi.OutputState }

func (DomainsIdentityProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainsIdentityProvider)(nil)).Elem()
}

func (o DomainsIdentityProviderOutput) ToDomainsIdentityProviderOutput() DomainsIdentityProviderOutput {
	return o
}

func (o DomainsIdentityProviderOutput) ToDomainsIdentityProviderOutputWithContext(ctx context.Context) DomainsIdentityProviderOutput {
	return o
}

// (Updatable) Assertion attribute name.
func (o DomainsIdentityProviderOutput) AssertionAttribute() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringOutput { return v.AssertionAttribute }).(pulumi.StringOutput)
}

// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
func (o DomainsIdentityProviderOutput) AttributeSets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringArrayOutput { return v.AttributeSets }).(pulumi.StringArrayOutput)
}

// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
func (o DomainsIdentityProviderOutput) Attributes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringPtrOutput { return v.Attributes }).(pulumi.StringPtrOutput)
}

// (Updatable) HTTP binding to use for authentication requests.
func (o DomainsIdentityProviderOutput) AuthnRequestBinding() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringOutput { return v.AuthnRequestBinding }).(pulumi.StringOutput)
}

// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
func (o DomainsIdentityProviderOutput) Authorization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringPtrOutput { return v.Authorization }).(pulumi.StringPtrOutput)
}

// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
func (o DomainsIdentityProviderOutput) CompartmentOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringOutput { return v.CompartmentOcid }).(pulumi.StringOutput)
}

// (Updatable) Correlation policy
func (o DomainsIdentityProviderOutput) CorrelationPolicy() DomainsIdentityProviderCorrelationPolicyOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) DomainsIdentityProviderCorrelationPolicyOutput {
		return v.CorrelationPolicy
	}).(DomainsIdentityProviderCorrelationPolicyOutput)
}

// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
func (o DomainsIdentityProviderOutput) DeleteInProgress() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.BoolOutput { return v.DeleteInProgress }).(pulumi.BoolOutput)
}

// (Updatable) Description
func (o DomainsIdentityProviderOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
func (o DomainsIdentityProviderOutput) DomainOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringOutput { return v.DomainOcid }).(pulumi.StringOutput)
}

// (Updatable) Set to true to indicate Partner enabled.
func (o DomainsIdentityProviderOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// (Updatable) Encryption certificate
func (o DomainsIdentityProviderOutput) EncryptionCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringOutput { return v.EncryptionCertificate }).(pulumi.StringOutput)
}

// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
func (o DomainsIdentityProviderOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringOutput { return v.ExternalId }).(pulumi.StringOutput)
}

// (Updatable) Identity Provider Icon URL.
func (o DomainsIdentityProviderOutput) IconUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringOutput { return v.IconUrl }).(pulumi.StringOutput)
}

// (Updatable) The User or App who created the Resource
func (o DomainsIdentityProviderOutput) IdcsCreatedBies() DomainsIdentityProviderIdcsCreatedByArrayOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) DomainsIdentityProviderIdcsCreatedByArrayOutput {
		return v.IdcsCreatedBies
	}).(DomainsIdentityProviderIdcsCreatedByArrayOutput)
}

// The basic endpoint for the identity domain
func (o DomainsIdentityProviderOutput) IdcsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringOutput { return v.IdcsEndpoint }).(pulumi.StringOutput)
}

// (Updatable) The User or App who modified the Resource
func (o DomainsIdentityProviderOutput) IdcsLastModifiedBies() DomainsIdentityProviderIdcsLastModifiedByArrayOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) DomainsIdentityProviderIdcsLastModifiedByArrayOutput {
		return v.IdcsLastModifiedBies
	}).(DomainsIdentityProviderIdcsLastModifiedByArrayOutput)
}

// (Updatable) The release number when the resource was upgraded.
func (o DomainsIdentityProviderOutput) IdcsLastUpgradedInRelease() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringOutput { return v.IdcsLastUpgradedInRelease }).(pulumi.StringOutput)
}

// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
func (o DomainsIdentityProviderOutput) IdcsPreventedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringArrayOutput { return v.IdcsPreventedOperations }).(pulumi.StringArrayOutput)
}

// (Updatable) Identity Provider SSO URL
func (o DomainsIdentityProviderOutput) IdpSsoUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringOutput { return v.IdpSsoUrl }).(pulumi.StringOutput)
}

// (Updatable) Set to true to include the signing certificate in the signature.
func (o DomainsIdentityProviderOutput) IncludeSigningCertInSignature() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.BoolOutput { return v.IncludeSigningCertInSignature }).(pulumi.BoolOutput)
}

// (Updatable) Refers to every group of which a JIT-provisioned User should be a member.  Just-in-Time user-provisioning applies this static list when jitUserProvGroupStaticListEnabled:true.
func (o DomainsIdentityProviderOutput) JitUserProvAssignedGroups() DomainsIdentityProviderJitUserProvAssignedGroupArrayOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) DomainsIdentityProviderJitUserProvAssignedGroupArrayOutput {
		return v.JitUserProvAssignedGroups
	}).(DomainsIdentityProviderJitUserProvAssignedGroupArrayOutput)
}

// (Updatable) Set to true to indicate JIT User Creation is enabled
func (o DomainsIdentityProviderOutput) JitUserProvAttributeUpdateEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.BoolOutput { return v.JitUserProvAttributeUpdateEnabled }).(pulumi.BoolOutput)
}

// (Updatable) Assertion To User Mapping
func (o DomainsIdentityProviderOutput) JitUserProvAttributes() DomainsIdentityProviderJitUserProvAttributesOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) DomainsIdentityProviderJitUserProvAttributesOutput {
		return v.JitUserProvAttributes
	}).(DomainsIdentityProviderJitUserProvAttributesOutput)
}

// (Updatable) Set to true to indicate JIT User Creation is enabled
func (o DomainsIdentityProviderOutput) JitUserProvCreateUserEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.BoolOutput { return v.JitUserProvCreateUserEnabled }).(pulumi.BoolOutput)
}

// (Updatable) Set to true to indicate JIT User Provisioning is enabled
func (o DomainsIdentityProviderOutput) JitUserProvEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.BoolOutput { return v.JitUserProvEnabled }).(pulumi.BoolOutput)
}

// (Updatable) Set to true to indicate JIT User Provisioning Groups should be assigned based on assertion attribute
func (o DomainsIdentityProviderOutput) JitUserProvGroupAssertionAttributeEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.BoolOutput { return v.JitUserProvGroupAssertionAttributeEnabled }).(pulumi.BoolOutput)
}

// (Updatable) The default value is 'Overwrite', which tells Just-In-Time user-provisioning to replace any current group-assignments for a User with those assigned by assertions and/or those assigned statically. Specify 'Merge' if you want Just-In-Time user-provisioning to combine its group-assignments with those the user already has.
func (o DomainsIdentityProviderOutput) JitUserProvGroupAssignmentMethod() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringOutput { return v.JitUserProvGroupAssignmentMethod }).(pulumi.StringOutput)
}

// (Updatable) Property to indicate the mode of group mapping
func (o DomainsIdentityProviderOutput) JitUserProvGroupMappingMode() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringOutput { return v.JitUserProvGroupMappingMode }).(pulumi.StringOutput)
}

// (Updatable) The list of mappings between the Identity Domain Group and the IDP group.
func (o DomainsIdentityProviderOutput) JitUserProvGroupMappings() DomainsIdentityProviderJitUserProvGroupMappingArrayOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) DomainsIdentityProviderJitUserProvGroupMappingArrayOutput {
		return v.JitUserProvGroupMappings
	}).(DomainsIdentityProviderJitUserProvGroupMappingArrayOutput)
}

// (Updatable) Name of the assertion attribute containing the users groups
func (o DomainsIdentityProviderOutput) JitUserProvGroupSamlAttributeName() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringOutput { return v.JitUserProvGroupSamlAttributeName }).(pulumi.StringOutput)
}

// (Updatable) Set to true to indicate JIT User Provisioning Groups should be assigned from a static list
func (o DomainsIdentityProviderOutput) JitUserProvGroupStaticListEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.BoolOutput { return v.JitUserProvGroupStaticListEnabled }).(pulumi.BoolOutput)
}

// (Updatable) Set to true to indicate ignoring absence of group while provisioning
func (o DomainsIdentityProviderOutput) JitUserProvIgnoreErrorOnAbsentGroups() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.BoolOutput { return v.JitUserProvIgnoreErrorOnAbsentGroups }).(pulumi.BoolOutput)
}

// (Updatable) HTTP binding to use for logout.
func (o DomainsIdentityProviderOutput) LogoutBinding() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringOutput { return v.LogoutBinding }).(pulumi.StringOutput)
}

// (Updatable) Set to true to enable logout.
func (o DomainsIdentityProviderOutput) LogoutEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.BoolOutput { return v.LogoutEnabled }).(pulumi.BoolOutput)
}

// (Updatable) Logout request URL
func (o DomainsIdentityProviderOutput) LogoutRequestUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringOutput { return v.LogoutRequestUrl }).(pulumi.StringOutput)
}

// (Updatable) Logout response URL
func (o DomainsIdentityProviderOutput) LogoutResponseUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringOutput { return v.LogoutResponseUrl }).(pulumi.StringOutput)
}

// (Updatable) Metadata
func (o DomainsIdentityProviderOutput) Metadata() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringOutput { return v.Metadata }).(pulumi.StringOutput)
}

// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
func (o DomainsIdentityProviderOutput) Metas() DomainsIdentityProviderMetaArrayOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) DomainsIdentityProviderMetaArrayOutput { return v.Metas }).(DomainsIdentityProviderMetaArrayOutput)
}

// (Updatable) Default authentication request name ID format.
func (o DomainsIdentityProviderOutput) NameIdFormat() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringOutput { return v.NameIdFormat }).(pulumi.StringOutput)
}

// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
func (o DomainsIdentityProviderOutput) Ocid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringOutput { return v.Ocid }).(pulumi.StringOutput)
}

// (Updatable) Unique name of the trusted Identity Provider.
func (o DomainsIdentityProviderOutput) PartnerName() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringOutput { return v.PartnerName }).(pulumi.StringOutput)
}

// (Updatable) Provider ID
func (o DomainsIdentityProviderOutput) PartnerProviderId() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringOutput { return v.PartnerProviderId }).(pulumi.StringOutput)
}

// (Updatable) SAML SP authentication type.
func (o DomainsIdentityProviderOutput) RequestedAuthenticationContexts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringArrayOutput { return v.RequestedAuthenticationContexts }).(pulumi.StringArrayOutput)
}

// (Updatable) This SP requires requests SAML IdP to enforce re-authentication.
func (o DomainsIdentityProviderOutput) RequireForceAuthn() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.BoolOutput { return v.RequireForceAuthn }).(pulumi.BoolOutput)
}

// (Updatable) SAML SP must accept encrypted assertion only.
func (o DomainsIdentityProviderOutput) RequiresEncryptedAssertion() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.BoolOutput { return v.RequiresEncryptedAssertion }).(pulumi.BoolOutput)
}

// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
func (o DomainsIdentityProviderOutput) ResourceTypeSchemaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringPtrOutput { return v.ResourceTypeSchemaVersion }).(pulumi.StringPtrOutput)
}

// (Updatable) SAML SP HoK Enabled.
func (o DomainsIdentityProviderOutput) SamlHoKrequired() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.BoolOutput { return v.SamlHoKrequired }).(pulumi.BoolOutput)
}

// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
func (o DomainsIdentityProviderOutput) Schemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringArrayOutput { return v.Schemas }).(pulumi.StringArrayOutput)
}

// (Updatable) The serviceInstanceIdentifier of the App that hosts this IdP. This value will match the opcServiceInstanceGUID of any service-instance that the IdP represents.
func (o DomainsIdentityProviderOutput) ServiceInstanceIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringOutput { return v.ServiceInstanceIdentifier }).(pulumi.StringOutput)
}

// (Updatable) Set to true to indicate whether to show IdP in login page or not.
func (o DomainsIdentityProviderOutput) ShownOnLoginPage() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.BoolOutput { return v.ShownOnLoginPage }).(pulumi.BoolOutput)
}

// (Updatable) Signature hash algorithm.
func (o DomainsIdentityProviderOutput) SignatureHashAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringOutput { return v.SignatureHashAlgorithm }).(pulumi.StringOutput)
}

// (Updatable) Signing certificate
func (o DomainsIdentityProviderOutput) SigningCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringOutput { return v.SigningCertificate }).(pulumi.StringOutput)
}

// (Updatable) Succinct ID
func (o DomainsIdentityProviderOutput) SuccinctId() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringOutput { return v.SuccinctId }).(pulumi.StringOutput)
}

// (Updatable) A list of tags on this resource.
func (o DomainsIdentityProviderOutput) Tags() DomainsIdentityProviderTagArrayOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) DomainsIdentityProviderTagArrayOutput { return v.Tags }).(DomainsIdentityProviderTagArrayOutput)
}

// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
func (o DomainsIdentityProviderOutput) TenancyOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringOutput { return v.TenancyOcid }).(pulumi.StringOutput)
}

// (Updatable) The alternate Provider ID to be used as the Oracle Identity Cloud Service providerID (instead of the one in SamlSettings) when interacting with this IdP.
func (o DomainsIdentityProviderOutput) TenantProviderId() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringOutput { return v.TenantProviderId }).(pulumi.StringOutput)
}

// (Updatable) Identity Provider Type
func (o DomainsIdentityProviderOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// (Updatable) Social Identity Provider Extension Schema
func (o DomainsIdentityProviderOutput) UrnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider() DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProviderOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProviderOutput {
		return v.UrnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider
	}).(DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProviderOutput)
}

// (Updatable) X509 Identity Provider Extension Schema
func (o DomainsIdentityProviderOutput) Urnietfparamsscimschemasoracleidcsextensionx509identityProvider() DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionx509identityProviderOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionx509identityProviderOutput {
		return v.Urnietfparamsscimschemasoracleidcsextensionx509identityProvider
	}).(DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionx509identityProviderOutput)
}

// (Updatable) User mapping method.
func (o DomainsIdentityProviderOutput) UserMappingMethod() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringOutput { return v.UserMappingMethod }).(pulumi.StringOutput)
}

// (Updatable) This property specifies the userstore attribute value that must match the incoming assertion attribute value or the incoming nameid attribute value in order to identify the user during SSO.<br>You can construct the userMappingStoreAttribute value by specifying attributes from the Oracle Identity Cloud Service Core Users schema. For examples of how to construct the userMappingStoreAttribute value, see the <b>Example of a Request Body</b> section of the Examples tab for the <a href='./op-admin-v1-identityproviders-post.html'>POST</a> and <a href='./op-admin-v1-identityproviders-id-put.html'>PUT</a> methods of the /IdentityProviders endpoint.
func (o DomainsIdentityProviderOutput) UserMappingStoreAttribute() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentityProvider) pulumi.StringOutput { return v.UserMappingStoreAttribute }).(pulumi.StringOutput)
}

type DomainsIdentityProviderArrayOutput struct{ *pulumi.OutputState }

func (DomainsIdentityProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainsIdentityProvider)(nil)).Elem()
}

func (o DomainsIdentityProviderArrayOutput) ToDomainsIdentityProviderArrayOutput() DomainsIdentityProviderArrayOutput {
	return o
}

func (o DomainsIdentityProviderArrayOutput) ToDomainsIdentityProviderArrayOutputWithContext(ctx context.Context) DomainsIdentityProviderArrayOutput {
	return o
}

func (o DomainsIdentityProviderArrayOutput) Index(i pulumi.IntInput) DomainsIdentityProviderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DomainsIdentityProvider {
		return vs[0].([]*DomainsIdentityProvider)[vs[1].(int)]
	}).(DomainsIdentityProviderOutput)
}

type DomainsIdentityProviderMapOutput struct{ *pulumi.OutputState }

func (DomainsIdentityProviderMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainsIdentityProvider)(nil)).Elem()
}

func (o DomainsIdentityProviderMapOutput) ToDomainsIdentityProviderMapOutput() DomainsIdentityProviderMapOutput {
	return o
}

func (o DomainsIdentityProviderMapOutput) ToDomainsIdentityProviderMapOutputWithContext(ctx context.Context) DomainsIdentityProviderMapOutput {
	return o
}

func (o DomainsIdentityProviderMapOutput) MapIndex(k pulumi.StringInput) DomainsIdentityProviderOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DomainsIdentityProvider {
		return vs[0].(map[string]*DomainsIdentityProvider)[vs[1].(string)]
	}).(DomainsIdentityProviderOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsIdentityProviderInput)(nil)).Elem(), &DomainsIdentityProvider{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsIdentityProviderArrayInput)(nil)).Elem(), DomainsIdentityProviderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsIdentityProviderMapInput)(nil)).Elem(), DomainsIdentityProviderMap{})
	pulumi.RegisterOutputType(DomainsIdentityProviderOutput{})
	pulumi.RegisterOutputType(DomainsIdentityProviderArrayOutput{})
	pulumi.RegisterOutputType(DomainsIdentityProviderMapOutput{})
}
