// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This resource provides the Identity Setting resource in Oracle Cloud Infrastructure Identity Domains service.
//
// Replace an Identity setting.
//
// ## Import
//
// IdentitySettings can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:Identity/domainsIdentitySetting:DomainsIdentitySetting test_identity_setting "idcsEndpoint/{idcsEndpoint}/identitySettings/{identitySettingId}"
//
// ```
type DomainsIdentitySetting struct {
	pulumi.CustomResourceState

	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayOutput `pulumi:"attributeSets"`
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrOutput `pulumi:"attributes"`
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrOutput `pulumi:"authorization"`
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid pulumi.StringOutput `pulumi:"compartmentOcid"`
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress pulumi.BoolOutput `pulumi:"deleteInProgress"`
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid pulumi.StringOutput `pulumi:"domainOcid"`
	// (Updatable) Indicates whether to show the 'user-is-locked' message during authentication if the user is already locked. The default value is false, which tells the system to show a generic 'authentication-failure' message. This is the most secure behavior. If the option is set to true, the system shows a more detailed 'error-message' that says the user is locked. This is more helpful but is less secure, for example, because the difference in error-messages could be used to determine which usernames exist and which do not.
	//
	// **Added In:** 19.2.1
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	EmitLockedMessageWhenUserIsLocked pulumi.BoolOutput `pulumi:"emitLockedMessageWhenUserIsLocked"`
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	ExternalId pulumi.StringOutput `pulumi:"externalId"`
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies DomainsIdentitySettingIdcsCreatedByArrayOutput `pulumi:"idcsCreatedBies"`
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringOutput `pulumi:"idcsEndpoint"`
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies DomainsIdentitySettingIdcsLastModifiedByArrayOutput `pulumi:"idcsLastModifiedBies"`
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease pulumi.StringOutput `pulumi:"idcsLastUpgradedInRelease"`
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations pulumi.StringArrayOutput `pulumi:"idcsPreventedOperations"`
	// ID of the resource
	IdentitySettingId pulumi.StringOutput `pulumi:"identitySettingId"`
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas DomainsIdentitySettingMetaArrayOutput `pulumi:"metas"`
	// (Updatable) Whether to allow users to update their own profile.
	//
	// **Added In:** 2207040824
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * required: false
	// * type: complex
	// * uniqueness: none
	MyProfile DomainsIdentitySettingMyProfileOutput `pulumi:"myProfile"`
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid pulumi.StringOutput `pulumi:"ocid"`
	// (Updatable) A list of Posix Gid settings.
	//
	// **Added In:** 17.4.6
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * required: false
	// * type: complex
	// * uniqueness: none
	PosixGid DomainsIdentitySettingPosixGidOutput `pulumi:"posixGid"`
	// (Updatable) A list of Posix Uid settings.
	//
	// **Added In:** 17.4.6
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * required: false
	// * type: complex
	// * uniqueness: none
	PosixUid DomainsIdentitySettingPosixUidOutput `pulumi:"posixUid"`
	// (Updatable) Indicates whether the primary email is required.
	//
	// **Added In:** 19.1.4
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	PrimaryEmailRequired pulumi.BoolOutput `pulumi:"primaryEmailRequired"`
	// (Updatable) Indicates whether to remove non-RFC5322 compliant emails before creating a user.
	//
	// **Added In:** 2106170416
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	RemoveInvalidEmails pulumi.BoolOutput `pulumi:"removeInvalidEmails"`
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrOutput `pulumi:"resourceTypeSchemaVersion"`
	// (Updatable) **Added In:** 2302092332
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none Determines the PasswordAuthenticator API response when a user is both 'locked' and 'inactive.' If false (default), a 'locked' message is shown. If true, an 'inactive' message is shown.
	ReturnInactiveOverLockedMessage pulumi.BoolOutput `pulumi:"returnInactiveOverLockedMessage"`
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayOutput `pulumi:"schemas"`
	// (Updatable) A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsIdentitySettingTagArrayOutput `pulumi:"tags"`
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	TenancyOcid pulumi.StringOutput `pulumi:"tenancyOcid"`
	// (Updatable) A list of tokens and their expiry length.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCompositeKey: [type]
	// * multiValued: true
	// * required: false
	// * type: complex
	// * uniqueness: none
	Tokens DomainsIdentitySettingTokenArrayOutput `pulumi:"tokens"`
	// (Updatable) Indicates whether a user is allowed to change their own recovery email.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	UserAllowedToSetRecoveryEmail pulumi.BoolOutput `pulumi:"userAllowedToSetRecoveryEmail"`
}

// NewDomainsIdentitySetting registers a new resource with the given unique name, arguments, and options.
func NewDomainsIdentitySetting(ctx *pulumi.Context,
	name string, args *DomainsIdentitySettingArgs, opts ...pulumi.ResourceOption) (*DomainsIdentitySetting, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IdcsEndpoint == nil {
		return nil, errors.New("invalid value for required argument 'IdcsEndpoint'")
	}
	if args.IdentitySettingId == nil {
		return nil, errors.New("invalid value for required argument 'IdentitySettingId'")
	}
	if args.Schemas == nil {
		return nil, errors.New("invalid value for required argument 'Schemas'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DomainsIdentitySetting
	err := ctx.RegisterResource("oci:Identity/domainsIdentitySetting:DomainsIdentitySetting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomainsIdentitySetting gets an existing DomainsIdentitySetting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainsIdentitySetting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainsIdentitySettingState, opts ...pulumi.ResourceOption) (*DomainsIdentitySetting, error) {
	var resource DomainsIdentitySetting
	err := ctx.ReadResource("oci:Identity/domainsIdentitySetting:DomainsIdentitySetting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DomainsIdentitySetting resources.
type domainsIdentitySettingState struct {
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets []string `pulumi:"attributeSets"`
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes *string `pulumi:"attributes"`
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid *string `pulumi:"compartmentOcid"`
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress *bool `pulumi:"deleteInProgress"`
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid *string `pulumi:"domainOcid"`
	// (Updatable) Indicates whether to show the 'user-is-locked' message during authentication if the user is already locked. The default value is false, which tells the system to show a generic 'authentication-failure' message. This is the most secure behavior. If the option is set to true, the system shows a more detailed 'error-message' that says the user is locked. This is more helpful but is less secure, for example, because the difference in error-messages could be used to determine which usernames exist and which do not.
	//
	// **Added In:** 19.2.1
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	EmitLockedMessageWhenUserIsLocked *bool `pulumi:"emitLockedMessageWhenUserIsLocked"`
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	ExternalId *string `pulumi:"externalId"`
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies []DomainsIdentitySettingIdcsCreatedBy `pulumi:"idcsCreatedBies"`
	// The basic endpoint for the identity domain
	IdcsEndpoint *string `pulumi:"idcsEndpoint"`
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies []DomainsIdentitySettingIdcsLastModifiedBy `pulumi:"idcsLastModifiedBies"`
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease *string `pulumi:"idcsLastUpgradedInRelease"`
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations []string `pulumi:"idcsPreventedOperations"`
	// ID of the resource
	IdentitySettingId *string `pulumi:"identitySettingId"`
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas []DomainsIdentitySettingMeta `pulumi:"metas"`
	// (Updatable) Whether to allow users to update their own profile.
	//
	// **Added In:** 2207040824
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * required: false
	// * type: complex
	// * uniqueness: none
	MyProfile *DomainsIdentitySettingMyProfile `pulumi:"myProfile"`
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid *string `pulumi:"ocid"`
	// (Updatable) A list of Posix Gid settings.
	//
	// **Added In:** 17.4.6
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * required: false
	// * type: complex
	// * uniqueness: none
	PosixGid *DomainsIdentitySettingPosixGid `pulumi:"posixGid"`
	// (Updatable) A list of Posix Uid settings.
	//
	// **Added In:** 17.4.6
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * required: false
	// * type: complex
	// * uniqueness: none
	PosixUid *DomainsIdentitySettingPosixUid `pulumi:"posixUid"`
	// (Updatable) Indicates whether the primary email is required.
	//
	// **Added In:** 19.1.4
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	PrimaryEmailRequired *bool `pulumi:"primaryEmailRequired"`
	// (Updatable) Indicates whether to remove non-RFC5322 compliant emails before creating a user.
	//
	// **Added In:** 2106170416
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	RemoveInvalidEmails *bool `pulumi:"removeInvalidEmails"`
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// (Updatable) **Added In:** 2302092332
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none Determines the PasswordAuthenticator API response when a user is both 'locked' and 'inactive.' If false (default), a 'locked' message is shown. If true, an 'inactive' message is shown.
	ReturnInactiveOverLockedMessage *bool `pulumi:"returnInactiveOverLockedMessage"`
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas []string `pulumi:"schemas"`
	// (Updatable) A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags []DomainsIdentitySettingTag `pulumi:"tags"`
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	TenancyOcid *string `pulumi:"tenancyOcid"`
	// (Updatable) A list of tokens and their expiry length.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCompositeKey: [type]
	// * multiValued: true
	// * required: false
	// * type: complex
	// * uniqueness: none
	Tokens []DomainsIdentitySettingToken `pulumi:"tokens"`
	// (Updatable) Indicates whether a user is allowed to change their own recovery email.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	UserAllowedToSetRecoveryEmail *bool `pulumi:"userAllowedToSetRecoveryEmail"`
}

type DomainsIdentitySettingState struct {
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayInput
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrInput
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid pulumi.StringPtrInput
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress pulumi.BoolPtrInput
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid pulumi.StringPtrInput
	// (Updatable) Indicates whether to show the 'user-is-locked' message during authentication if the user is already locked. The default value is false, which tells the system to show a generic 'authentication-failure' message. This is the most secure behavior. If the option is set to true, the system shows a more detailed 'error-message' that says the user is locked. This is more helpful but is less secure, for example, because the difference in error-messages could be used to determine which usernames exist and which do not.
	//
	// **Added In:** 19.2.1
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	EmitLockedMessageWhenUserIsLocked pulumi.BoolPtrInput
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	ExternalId pulumi.StringPtrInput
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies DomainsIdentitySettingIdcsCreatedByArrayInput
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringPtrInput
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies DomainsIdentitySettingIdcsLastModifiedByArrayInput
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease pulumi.StringPtrInput
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations pulumi.StringArrayInput
	// ID of the resource
	IdentitySettingId pulumi.StringPtrInput
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas DomainsIdentitySettingMetaArrayInput
	// (Updatable) Whether to allow users to update their own profile.
	//
	// **Added In:** 2207040824
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * required: false
	// * type: complex
	// * uniqueness: none
	MyProfile DomainsIdentitySettingMyProfilePtrInput
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid pulumi.StringPtrInput
	// (Updatable) A list of Posix Gid settings.
	//
	// **Added In:** 17.4.6
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * required: false
	// * type: complex
	// * uniqueness: none
	PosixGid DomainsIdentitySettingPosixGidPtrInput
	// (Updatable) A list of Posix Uid settings.
	//
	// **Added In:** 17.4.6
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * required: false
	// * type: complex
	// * uniqueness: none
	PosixUid DomainsIdentitySettingPosixUidPtrInput
	// (Updatable) Indicates whether the primary email is required.
	//
	// **Added In:** 19.1.4
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	PrimaryEmailRequired pulumi.BoolPtrInput
	// (Updatable) Indicates whether to remove non-RFC5322 compliant emails before creating a user.
	//
	// **Added In:** 2106170416
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	RemoveInvalidEmails pulumi.BoolPtrInput
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput
	// (Updatable) **Added In:** 2302092332
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none Determines the PasswordAuthenticator API response when a user is both 'locked' and 'inactive.' If false (default), a 'locked' message is shown. If true, an 'inactive' message is shown.
	ReturnInactiveOverLockedMessage pulumi.BoolPtrInput
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayInput
	// (Updatable) A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsIdentitySettingTagArrayInput
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	TenancyOcid pulumi.StringPtrInput
	// (Updatable) A list of tokens and their expiry length.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCompositeKey: [type]
	// * multiValued: true
	// * required: false
	// * type: complex
	// * uniqueness: none
	Tokens DomainsIdentitySettingTokenArrayInput
	// (Updatable) Indicates whether a user is allowed to change their own recovery email.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	UserAllowedToSetRecoveryEmail pulumi.BoolPtrInput
}

func (DomainsIdentitySettingState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainsIdentitySettingState)(nil)).Elem()
}

type domainsIdentitySettingArgs struct {
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets []string `pulumi:"attributeSets"`
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes *string `pulumi:"attributes"`
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// (Updatable) Indicates whether to show the 'user-is-locked' message during authentication if the user is already locked. The default value is false, which tells the system to show a generic 'authentication-failure' message. This is the most secure behavior. If the option is set to true, the system shows a more detailed 'error-message' that says the user is locked. This is more helpful but is less secure, for example, because the difference in error-messages could be used to determine which usernames exist and which do not.
	//
	// **Added In:** 19.2.1
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	EmitLockedMessageWhenUserIsLocked *bool `pulumi:"emitLockedMessageWhenUserIsLocked"`
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	ExternalId *string `pulumi:"externalId"`
	// The basic endpoint for the identity domain
	IdcsEndpoint string `pulumi:"idcsEndpoint"`
	// ID of the resource
	IdentitySettingId string `pulumi:"identitySettingId"`
	// (Updatable) Whether to allow users to update their own profile.
	//
	// **Added In:** 2207040824
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * required: false
	// * type: complex
	// * uniqueness: none
	MyProfile *DomainsIdentitySettingMyProfile `pulumi:"myProfile"`
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid *string `pulumi:"ocid"`
	// (Updatable) A list of Posix Gid settings.
	//
	// **Added In:** 17.4.6
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * required: false
	// * type: complex
	// * uniqueness: none
	PosixGid *DomainsIdentitySettingPosixGid `pulumi:"posixGid"`
	// (Updatable) A list of Posix Uid settings.
	//
	// **Added In:** 17.4.6
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * required: false
	// * type: complex
	// * uniqueness: none
	PosixUid *DomainsIdentitySettingPosixUid `pulumi:"posixUid"`
	// (Updatable) Indicates whether the primary email is required.
	//
	// **Added In:** 19.1.4
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	PrimaryEmailRequired *bool `pulumi:"primaryEmailRequired"`
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// (Updatable) **Added In:** 2302092332
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none Determines the PasswordAuthenticator API response when a user is both 'locked' and 'inactive.' If false (default), a 'locked' message is shown. If true, an 'inactive' message is shown.
	ReturnInactiveOverLockedMessage *bool `pulumi:"returnInactiveOverLockedMessage"`
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas []string `pulumi:"schemas"`
	// (Updatable) A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags []DomainsIdentitySettingTag `pulumi:"tags"`
	// (Updatable) A list of tokens and their expiry length.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCompositeKey: [type]
	// * multiValued: true
	// * required: false
	// * type: complex
	// * uniqueness: none
	Tokens []DomainsIdentitySettingToken `pulumi:"tokens"`
	// (Updatable) Indicates whether a user is allowed to change their own recovery email.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	UserAllowedToSetRecoveryEmail *bool `pulumi:"userAllowedToSetRecoveryEmail"`
}

// The set of arguments for constructing a DomainsIdentitySetting resource.
type DomainsIdentitySettingArgs struct {
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayInput
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrInput
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput
	// (Updatable) Indicates whether to show the 'user-is-locked' message during authentication if the user is already locked. The default value is false, which tells the system to show a generic 'authentication-failure' message. This is the most secure behavior. If the option is set to true, the system shows a more detailed 'error-message' that says the user is locked. This is more helpful but is less secure, for example, because the difference in error-messages could be used to determine which usernames exist and which do not.
	//
	// **Added In:** 19.2.1
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	EmitLockedMessageWhenUserIsLocked pulumi.BoolPtrInput
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	ExternalId pulumi.StringPtrInput
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringInput
	// ID of the resource
	IdentitySettingId pulumi.StringInput
	// (Updatable) Whether to allow users to update their own profile.
	//
	// **Added In:** 2207040824
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * required: false
	// * type: complex
	// * uniqueness: none
	MyProfile DomainsIdentitySettingMyProfilePtrInput
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid pulumi.StringPtrInput
	// (Updatable) A list of Posix Gid settings.
	//
	// **Added In:** 17.4.6
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * required: false
	// * type: complex
	// * uniqueness: none
	PosixGid DomainsIdentitySettingPosixGidPtrInput
	// (Updatable) A list of Posix Uid settings.
	//
	// **Added In:** 17.4.6
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * required: false
	// * type: complex
	// * uniqueness: none
	PosixUid DomainsIdentitySettingPosixUidPtrInput
	// (Updatable) Indicates whether the primary email is required.
	//
	// **Added In:** 19.1.4
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	PrimaryEmailRequired pulumi.BoolPtrInput
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput
	// (Updatable) **Added In:** 2302092332
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none Determines the PasswordAuthenticator API response when a user is both 'locked' and 'inactive.' If false (default), a 'locked' message is shown. If true, an 'inactive' message is shown.
	ReturnInactiveOverLockedMessage pulumi.BoolPtrInput
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayInput
	// (Updatable) A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsIdentitySettingTagArrayInput
	// (Updatable) A list of tokens and their expiry length.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCompositeKey: [type]
	// * multiValued: true
	// * required: false
	// * type: complex
	// * uniqueness: none
	Tokens DomainsIdentitySettingTokenArrayInput
	// (Updatable) Indicates whether a user is allowed to change their own recovery email.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	UserAllowedToSetRecoveryEmail pulumi.BoolPtrInput
}

func (DomainsIdentitySettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainsIdentitySettingArgs)(nil)).Elem()
}

type DomainsIdentitySettingInput interface {
	pulumi.Input

	ToDomainsIdentitySettingOutput() DomainsIdentitySettingOutput
	ToDomainsIdentitySettingOutputWithContext(ctx context.Context) DomainsIdentitySettingOutput
}

func (*DomainsIdentitySetting) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainsIdentitySetting)(nil)).Elem()
}

func (i *DomainsIdentitySetting) ToDomainsIdentitySettingOutput() DomainsIdentitySettingOutput {
	return i.ToDomainsIdentitySettingOutputWithContext(context.Background())
}

func (i *DomainsIdentitySetting) ToDomainsIdentitySettingOutputWithContext(ctx context.Context) DomainsIdentitySettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsIdentitySettingOutput)
}

func (i *DomainsIdentitySetting) ToOutput(ctx context.Context) pulumix.Output[*DomainsIdentitySetting] {
	return pulumix.Output[*DomainsIdentitySetting]{
		OutputState: i.ToDomainsIdentitySettingOutputWithContext(ctx).OutputState,
	}
}

// DomainsIdentitySettingArrayInput is an input type that accepts DomainsIdentitySettingArray and DomainsIdentitySettingArrayOutput values.
// You can construct a concrete instance of `DomainsIdentitySettingArrayInput` via:
//
//	DomainsIdentitySettingArray{ DomainsIdentitySettingArgs{...} }
type DomainsIdentitySettingArrayInput interface {
	pulumi.Input

	ToDomainsIdentitySettingArrayOutput() DomainsIdentitySettingArrayOutput
	ToDomainsIdentitySettingArrayOutputWithContext(context.Context) DomainsIdentitySettingArrayOutput
}

type DomainsIdentitySettingArray []DomainsIdentitySettingInput

func (DomainsIdentitySettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainsIdentitySetting)(nil)).Elem()
}

func (i DomainsIdentitySettingArray) ToDomainsIdentitySettingArrayOutput() DomainsIdentitySettingArrayOutput {
	return i.ToDomainsIdentitySettingArrayOutputWithContext(context.Background())
}

func (i DomainsIdentitySettingArray) ToDomainsIdentitySettingArrayOutputWithContext(ctx context.Context) DomainsIdentitySettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsIdentitySettingArrayOutput)
}

func (i DomainsIdentitySettingArray) ToOutput(ctx context.Context) pulumix.Output[[]*DomainsIdentitySetting] {
	return pulumix.Output[[]*DomainsIdentitySetting]{
		OutputState: i.ToDomainsIdentitySettingArrayOutputWithContext(ctx).OutputState,
	}
}

// DomainsIdentitySettingMapInput is an input type that accepts DomainsIdentitySettingMap and DomainsIdentitySettingMapOutput values.
// You can construct a concrete instance of `DomainsIdentitySettingMapInput` via:
//
//	DomainsIdentitySettingMap{ "key": DomainsIdentitySettingArgs{...} }
type DomainsIdentitySettingMapInput interface {
	pulumi.Input

	ToDomainsIdentitySettingMapOutput() DomainsIdentitySettingMapOutput
	ToDomainsIdentitySettingMapOutputWithContext(context.Context) DomainsIdentitySettingMapOutput
}

type DomainsIdentitySettingMap map[string]DomainsIdentitySettingInput

func (DomainsIdentitySettingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainsIdentitySetting)(nil)).Elem()
}

func (i DomainsIdentitySettingMap) ToDomainsIdentitySettingMapOutput() DomainsIdentitySettingMapOutput {
	return i.ToDomainsIdentitySettingMapOutputWithContext(context.Background())
}

func (i DomainsIdentitySettingMap) ToDomainsIdentitySettingMapOutputWithContext(ctx context.Context) DomainsIdentitySettingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsIdentitySettingMapOutput)
}

func (i DomainsIdentitySettingMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*DomainsIdentitySetting] {
	return pulumix.Output[map[string]*DomainsIdentitySetting]{
		OutputState: i.ToDomainsIdentitySettingMapOutputWithContext(ctx).OutputState,
	}
}

type DomainsIdentitySettingOutput struct{ *pulumi.OutputState }

func (DomainsIdentitySettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainsIdentitySetting)(nil)).Elem()
}

func (o DomainsIdentitySettingOutput) ToDomainsIdentitySettingOutput() DomainsIdentitySettingOutput {
	return o
}

func (o DomainsIdentitySettingOutput) ToDomainsIdentitySettingOutputWithContext(ctx context.Context) DomainsIdentitySettingOutput {
	return o
}

func (o DomainsIdentitySettingOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainsIdentitySetting] {
	return pulumix.Output[*DomainsIdentitySetting]{
		OutputState: o.OutputState,
	}
}

// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
func (o DomainsIdentitySettingOutput) AttributeSets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsIdentitySetting) pulumi.StringArrayOutput { return v.AttributeSets }).(pulumi.StringArrayOutput)
}

// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
func (o DomainsIdentitySettingOutput) Attributes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsIdentitySetting) pulumi.StringPtrOutput { return v.Attributes }).(pulumi.StringPtrOutput)
}

// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
func (o DomainsIdentitySettingOutput) Authorization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsIdentitySetting) pulumi.StringPtrOutput { return v.Authorization }).(pulumi.StringPtrOutput)
}

// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsIdentitySettingOutput) CompartmentOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentitySetting) pulumi.StringOutput { return v.CompartmentOcid }).(pulumi.StringOutput)
}

// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: boolean
// * uniqueness: none
func (o DomainsIdentitySettingOutput) DeleteInProgress() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsIdentitySetting) pulumi.BoolOutput { return v.DeleteInProgress }).(pulumi.BoolOutput)
}

// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsIdentitySettingOutput) DomainOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentitySetting) pulumi.StringOutput { return v.DomainOcid }).(pulumi.StringOutput)
}

// (Updatable) Indicates whether to show the 'user-is-locked' message during authentication if the user is already locked. The default value is false, which tells the system to show a generic 'authentication-failure' message. This is the most secure behavior. If the option is set to true, the system shows a more detailed 'error-message' that says the user is locked. This is more helpful but is less secure, for example, because the difference in error-messages could be used to determine which usernames exist and which do not.
//
// **Added In:** 19.2.1
//
// **SCIM++ Properties:**
// * caseExact: false
// * multiValued: false
// * mutability: readWrite
// * required: false
// * returned: default
// * type: boolean
// * uniqueness: none
func (o DomainsIdentitySettingOutput) EmitLockedMessageWhenUserIsLocked() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsIdentitySetting) pulumi.BoolOutput { return v.EmitLockedMessageWhenUserIsLocked }).(pulumi.BoolOutput)
}

// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
//
// **SCIM++ Properties:**
// * caseExact: false
// * multiValued: false
// * mutability: readWrite
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsIdentitySettingOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentitySetting) pulumi.StringOutput { return v.ExternalId }).(pulumi.StringOutput)
}

// (Updatable) The User or App who created the Resource
//
// **SCIM++ Properties:**
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: true
// * returned: default
// * type: complex
func (o DomainsIdentitySettingOutput) IdcsCreatedBies() DomainsIdentitySettingIdcsCreatedByArrayOutput {
	return o.ApplyT(func(v *DomainsIdentitySetting) DomainsIdentitySettingIdcsCreatedByArrayOutput {
		return v.IdcsCreatedBies
	}).(DomainsIdentitySettingIdcsCreatedByArrayOutput)
}

// The basic endpoint for the identity domain
func (o DomainsIdentitySettingOutput) IdcsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentitySetting) pulumi.StringOutput { return v.IdcsEndpoint }).(pulumi.StringOutput)
}

// (Updatable) The User or App who modified the Resource
//
// **SCIM++ Properties:**
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: complex
func (o DomainsIdentitySettingOutput) IdcsLastModifiedBies() DomainsIdentitySettingIdcsLastModifiedByArrayOutput {
	return o.ApplyT(func(v *DomainsIdentitySetting) DomainsIdentitySettingIdcsLastModifiedByArrayOutput {
		return v.IdcsLastModifiedBies
	}).(DomainsIdentitySettingIdcsLastModifiedByArrayOutput)
}

// (Updatable) The release number when the resource was upgraded.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: request
// * type: string
// * uniqueness: none
func (o DomainsIdentitySettingOutput) IdcsLastUpgradedInRelease() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentitySetting) pulumi.StringOutput { return v.IdcsLastUpgradedInRelease }).(pulumi.StringOutput)
}

// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
//
// **SCIM++ Properties:**
// * idcsSearchable: false
// * multiValued: true
// * mutability: readOnly
// * required: false
// * returned: request
// * type: string
// * uniqueness: none
func (o DomainsIdentitySettingOutput) IdcsPreventedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsIdentitySetting) pulumi.StringArrayOutput { return v.IdcsPreventedOperations }).(pulumi.StringArrayOutput)
}

// ID of the resource
func (o DomainsIdentitySettingOutput) IdentitySettingId() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentitySetting) pulumi.StringOutput { return v.IdentitySettingId }).(pulumi.StringOutput)
}

// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
// * type: complex
func (o DomainsIdentitySettingOutput) Metas() DomainsIdentitySettingMetaArrayOutput {
	return o.ApplyT(func(v *DomainsIdentitySetting) DomainsIdentitySettingMetaArrayOutput { return v.Metas }).(DomainsIdentitySettingMetaArrayOutput)
}

// (Updatable) Whether to allow users to update their own profile.
//
// **Added In:** 2207040824
//
// **SCIM++ Properties:**
// * caseExact: false
// * multiValued: false
// * required: false
// * type: complex
// * uniqueness: none
func (o DomainsIdentitySettingOutput) MyProfile() DomainsIdentitySettingMyProfileOutput {
	return o.ApplyT(func(v *DomainsIdentitySetting) DomainsIdentitySettingMyProfileOutput { return v.MyProfile }).(DomainsIdentitySettingMyProfileOutput)
}

// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
//
// **SCIM++ Properties:**
// * caseExact: true
// * idcsSearchable: true
// * multiValued: false
// * mutability: immutable
// * required: false
// * returned: default
// * type: string
// * uniqueness: global
func (o DomainsIdentitySettingOutput) Ocid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentitySetting) pulumi.StringOutput { return v.Ocid }).(pulumi.StringOutput)
}

// (Updatable) A list of Posix Gid settings.
//
// **Added In:** 17.4.6
//
// **SCIM++ Properties:**
// * caseExact: false
// * multiValued: false
// * required: false
// * type: complex
// * uniqueness: none
func (o DomainsIdentitySettingOutput) PosixGid() DomainsIdentitySettingPosixGidOutput {
	return o.ApplyT(func(v *DomainsIdentitySetting) DomainsIdentitySettingPosixGidOutput { return v.PosixGid }).(DomainsIdentitySettingPosixGidOutput)
}

// (Updatable) A list of Posix Uid settings.
//
// **Added In:** 17.4.6
//
// **SCIM++ Properties:**
// * caseExact: false
// * multiValued: false
// * required: false
// * type: complex
// * uniqueness: none
func (o DomainsIdentitySettingOutput) PosixUid() DomainsIdentitySettingPosixUidOutput {
	return o.ApplyT(func(v *DomainsIdentitySetting) DomainsIdentitySettingPosixUidOutput { return v.PosixUid }).(DomainsIdentitySettingPosixUidOutput)
}

// (Updatable) Indicates whether the primary email is required.
//
// **Added In:** 19.1.4
//
// **SCIM++ Properties:**
// * caseExact: false
// * multiValued: false
// * mutability: readWrite
// * required: false
// * returned: default
// * type: boolean
// * uniqueness: none
func (o DomainsIdentitySettingOutput) PrimaryEmailRequired() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsIdentitySetting) pulumi.BoolOutput { return v.PrimaryEmailRequired }).(pulumi.BoolOutput)
}

// (Updatable) Indicates whether to remove non-RFC5322 compliant emails before creating a user.
//
// **Added In:** 2106170416
//
// **SCIM++ Properties:**
// * caseExact: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: boolean
// * uniqueness: none
func (o DomainsIdentitySettingOutput) RemoveInvalidEmails() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsIdentitySetting) pulumi.BoolOutput { return v.RemoveInvalidEmails }).(pulumi.BoolOutput)
}

// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
func (o DomainsIdentitySettingOutput) ResourceTypeSchemaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsIdentitySetting) pulumi.StringPtrOutput { return v.ResourceTypeSchemaVersion }).(pulumi.StringPtrOutput)
}

// (Updatable) **Added In:** 2302092332
//
// **SCIM++ Properties:**
// * caseExact: false
// * multiValued: false
// * mutability: readWrite
// * required: false
// * returned: default
// * type: boolean
// * uniqueness: none Determines the PasswordAuthenticator API response when a user is both 'locked' and 'inactive.' If false (default), a 'locked' message is shown. If true, an 'inactive' message is shown.
func (o DomainsIdentitySettingOutput) ReturnInactiveOverLockedMessage() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsIdentitySetting) pulumi.BoolOutput { return v.ReturnInactiveOverLockedMessage }).(pulumi.BoolOutput)
}

// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: true
// * mutability: readWrite
// * required: true
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsIdentitySettingOutput) Schemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsIdentitySetting) pulumi.StringArrayOutput { return v.Schemas }).(pulumi.StringArrayOutput)
}

// (Updatable) A list of tags on this resource.
//
// **SCIM++ Properties:**
// * idcsCompositeKey: [key, value]
// * idcsSearchable: true
// * multiValued: true
// * mutability: readWrite
// * required: false
// * returned: request
// * type: complex
// * uniqueness: none
func (o DomainsIdentitySettingOutput) Tags() DomainsIdentitySettingTagArrayOutput {
	return o.ApplyT(func(v *DomainsIdentitySetting) DomainsIdentitySettingTagArrayOutput { return v.Tags }).(DomainsIdentitySettingTagArrayOutput)
}

// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsIdentitySettingOutput) TenancyOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsIdentitySetting) pulumi.StringOutput { return v.TenancyOcid }).(pulumi.StringOutput)
}

// (Updatable) A list of tokens and their expiry length.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsCompositeKey: [type]
// * multiValued: true
// * required: false
// * type: complex
// * uniqueness: none
func (o DomainsIdentitySettingOutput) Tokens() DomainsIdentitySettingTokenArrayOutput {
	return o.ApplyT(func(v *DomainsIdentitySetting) DomainsIdentitySettingTokenArrayOutput { return v.Tokens }).(DomainsIdentitySettingTokenArrayOutput)
}

// (Updatable) Indicates whether a user is allowed to change their own recovery email.
//
// **SCIM++ Properties:**
// * caseExact: false
// * multiValued: false
// * mutability: readWrite
// * required: false
// * returned: default
// * type: boolean
// * uniqueness: none
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o DomainsIdentitySettingOutput) UserAllowedToSetRecoveryEmail() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsIdentitySetting) pulumi.BoolOutput { return v.UserAllowedToSetRecoveryEmail }).(pulumi.BoolOutput)
}

type DomainsIdentitySettingArrayOutput struct{ *pulumi.OutputState }

func (DomainsIdentitySettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainsIdentitySetting)(nil)).Elem()
}

func (o DomainsIdentitySettingArrayOutput) ToDomainsIdentitySettingArrayOutput() DomainsIdentitySettingArrayOutput {
	return o
}

func (o DomainsIdentitySettingArrayOutput) ToDomainsIdentitySettingArrayOutputWithContext(ctx context.Context) DomainsIdentitySettingArrayOutput {
	return o
}

func (o DomainsIdentitySettingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*DomainsIdentitySetting] {
	return pulumix.Output[[]*DomainsIdentitySetting]{
		OutputState: o.OutputState,
	}
}

func (o DomainsIdentitySettingArrayOutput) Index(i pulumi.IntInput) DomainsIdentitySettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DomainsIdentitySetting {
		return vs[0].([]*DomainsIdentitySetting)[vs[1].(int)]
	}).(DomainsIdentitySettingOutput)
}

type DomainsIdentitySettingMapOutput struct{ *pulumi.OutputState }

func (DomainsIdentitySettingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainsIdentitySetting)(nil)).Elem()
}

func (o DomainsIdentitySettingMapOutput) ToDomainsIdentitySettingMapOutput() DomainsIdentitySettingMapOutput {
	return o
}

func (o DomainsIdentitySettingMapOutput) ToDomainsIdentitySettingMapOutputWithContext(ctx context.Context) DomainsIdentitySettingMapOutput {
	return o
}

func (o DomainsIdentitySettingMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*DomainsIdentitySetting] {
	return pulumix.Output[map[string]*DomainsIdentitySetting]{
		OutputState: o.OutputState,
	}
}

func (o DomainsIdentitySettingMapOutput) MapIndex(k pulumi.StringInput) DomainsIdentitySettingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DomainsIdentitySetting {
		return vs[0].(map[string]*DomainsIdentitySetting)[vs[1].(string)]
	}).(DomainsIdentitySettingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsIdentitySettingInput)(nil)).Elem(), &DomainsIdentitySetting{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsIdentitySettingArrayInput)(nil)).Elem(), DomainsIdentitySettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsIdentitySettingMapInput)(nil)).Elem(), DomainsIdentitySettingMap{})
	pulumi.RegisterOutputType(DomainsIdentitySettingOutput{})
	pulumi.RegisterOutputType(DomainsIdentitySettingArrayOutput{})
	pulumi.RegisterOutputType(DomainsIdentitySettingMapOutput{})
}
