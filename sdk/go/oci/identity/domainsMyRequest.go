// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the My Request resource in Oracle Cloud Infrastructure Identity Domains service.
//
// # Create a Request
//
// ** IMPORTANT **
// In our latest release, the property `status` is changed to readonly. It will now be automatically handled by the system. Please remove any manual assignment to this property to use the latest version.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/identity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := identity.NewDomainsMyRequest(ctx, "test_my_request", &identity.DomainsMyRequestArgs{
//				ApprovalDetails: identity.DomainsMyRequestApprovalDetailArray{
//					&identity.DomainsMyRequestApprovalDetailArgs{},
//				},
//				IdcsEndpoint:  pulumi.Any(testDomain.Url),
//				Justification: pulumi.Any(myRequestJustification),
//				Requesting: &identity.DomainsMyRequestRequestingArgs{
//					Type:        pulumi.Any(myRequestRequestingType),
//					Value:       pulumi.Any(groupToRequest.Id),
//					Description: pulumi.Any(myRequestRequestingDescription),
//				},
//				Schemas: pulumi.StringArray{
//					pulumi.String("urn:ietf:params:scim:schemas:oracle:idcs:Request"),
//				},
//				Action: pulumi.Any(myRequestAction),
//				AttributeSets: pulumi.StringArray{
//					pulumi.String("all"),
//				},
//				Attributes:    pulumi.String(""),
//				Authorization: pulumi.Any(myRequestAuthorization),
//				Ocid:          pulumi.Any(myRequestOcid),
//				Requestor: &identity.DomainsMyRequestRequestorArgs{
//					Value: pulumi.Any(myRequestRequestorValue),
//				},
//				ResourceTypeSchemaVersion: pulumi.Any(myRequestResourceTypeSchemaVersion),
//				Tags: identity.DomainsMyRequestTagArray{
//					&identity.DomainsMyRequestTagArgs{
//						Key:   pulumi.Any(myRequestTagsKey),
//						Value: pulumi.Any(myRequestTagsValue),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Import is not supported for this resource.
type DomainsMyRequest struct {
	pulumi.CustomResourceState

	// Requestor can set action to CANCEL to cancel the request or to ESCALATE to escalate the request while the request status is IN_PROGRESS. Requestor can't escalate the request if canceling or escalation is in progress.
	//
	// **Added In:** 2307071836
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Action pulumi.StringOutput `pulumi:"action"`
	// Approvals created for this request.
	//
	// **Added In:** 2307071836
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * returned: request
	// * type: complex
	// * uniqueness: none
	ApprovalDetails DomainsMyRequestApprovalDetailArrayOutput `pulumi:"approvalDetails"`
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayOutput `pulumi:"attributeSets"`
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrOutput `pulumi:"attributes"`
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrOutput `pulumi:"authorization"`
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid pulumi.StringOutput `pulumi:"compartmentOcid"`
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress pulumi.BoolOutput `pulumi:"deleteInProgress"`
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid pulumi.StringOutput `pulumi:"domainOcid"`
	// (Updatable) Time by when Request expires
	//
	// **Added In:** 2307071836
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: dateTime
	// * uniqueness: none
	Expires pulumi.StringOutput `pulumi:"expires"`
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies DomainsMyRequestIdcsCreatedByArrayOutput `pulumi:"idcsCreatedBies"`
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringOutput `pulumi:"idcsEndpoint"`
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies DomainsMyRequestIdcsLastModifiedByArrayOutput `pulumi:"idcsLastModifiedBies"`
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease pulumi.StringOutput `pulumi:"idcsLastUpgradedInRelease"`
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations pulumi.StringArrayOutput `pulumi:"idcsPreventedOperations"`
	// justification
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Justification pulumi.StringOutput `pulumi:"justification"`
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas DomainsMyRequestMetaArrayOutput `pulumi:"metas"`
	// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid pulumi.StringOutput `pulumi:"ocid"`
	// Requestable resource reference.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: true
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Requesting DomainsMyRequestRequestingOutput `pulumi:"requesting"`
	// Requesting User
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Requestor DomainsMyRequestRequestorOutput `pulumi:"requestor"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrOutput `pulumi:"resourceTypeSchemaVersion"`
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayOutput `pulumi:"schemas"`
	// (Updatable) status.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Status pulumi.StringOutput `pulumi:"status"`
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsMyRequestTagArrayOutput `pulumi:"tags"`
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TenancyOcid pulumi.StringOutput `pulumi:"tenancyOcid"`
}

// NewDomainsMyRequest registers a new resource with the given unique name, arguments, and options.
func NewDomainsMyRequest(ctx *pulumi.Context,
	name string, args *DomainsMyRequestArgs, opts ...pulumi.ResourceOption) (*DomainsMyRequest, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IdcsEndpoint == nil {
		return nil, errors.New("invalid value for required argument 'IdcsEndpoint'")
	}
	if args.Justification == nil {
		return nil, errors.New("invalid value for required argument 'Justification'")
	}
	if args.Requesting == nil {
		return nil, errors.New("invalid value for required argument 'Requesting'")
	}
	if args.Schemas == nil {
		return nil, errors.New("invalid value for required argument 'Schemas'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DomainsMyRequest
	err := ctx.RegisterResource("oci:Identity/domainsMyRequest:DomainsMyRequest", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomainsMyRequest gets an existing DomainsMyRequest resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainsMyRequest(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainsMyRequestState, opts ...pulumi.ResourceOption) (*DomainsMyRequest, error) {
	var resource DomainsMyRequest
	err := ctx.ReadResource("oci:Identity/domainsMyRequest:DomainsMyRequest", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DomainsMyRequest resources.
type domainsMyRequestState struct {
	// Requestor can set action to CANCEL to cancel the request or to ESCALATE to escalate the request while the request status is IN_PROGRESS. Requestor can't escalate the request if canceling or escalation is in progress.
	//
	// **Added In:** 2307071836
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Action *string `pulumi:"action"`
	// Approvals created for this request.
	//
	// **Added In:** 2307071836
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * returned: request
	// * type: complex
	// * uniqueness: none
	ApprovalDetails []DomainsMyRequestApprovalDetail `pulumi:"approvalDetails"`
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets []string `pulumi:"attributeSets"`
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes *string `pulumi:"attributes"`
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid *string `pulumi:"compartmentOcid"`
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress *bool `pulumi:"deleteInProgress"`
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid *string `pulumi:"domainOcid"`
	// (Updatable) Time by when Request expires
	//
	// **Added In:** 2307071836
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: dateTime
	// * uniqueness: none
	Expires *string `pulumi:"expires"`
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies []DomainsMyRequestIdcsCreatedBy `pulumi:"idcsCreatedBies"`
	// The basic endpoint for the identity domain
	IdcsEndpoint *string `pulumi:"idcsEndpoint"`
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies []DomainsMyRequestIdcsLastModifiedBy `pulumi:"idcsLastModifiedBies"`
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease *string `pulumi:"idcsLastUpgradedInRelease"`
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations []string `pulumi:"idcsPreventedOperations"`
	// justification
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Justification *string `pulumi:"justification"`
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas []DomainsMyRequestMeta `pulumi:"metas"`
	// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid *string `pulumi:"ocid"`
	// Requestable resource reference.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: true
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Requesting *DomainsMyRequestRequesting `pulumi:"requesting"`
	// Requesting User
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Requestor *DomainsMyRequestRequestor `pulumi:"requestor"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas []string `pulumi:"schemas"`
	// (Updatable) status.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Status *string `pulumi:"status"`
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags []DomainsMyRequestTag `pulumi:"tags"`
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TenancyOcid *string `pulumi:"tenancyOcid"`
}

type DomainsMyRequestState struct {
	// Requestor can set action to CANCEL to cancel the request or to ESCALATE to escalate the request while the request status is IN_PROGRESS. Requestor can't escalate the request if canceling or escalation is in progress.
	//
	// **Added In:** 2307071836
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Action pulumi.StringPtrInput
	// Approvals created for this request.
	//
	// **Added In:** 2307071836
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * returned: request
	// * type: complex
	// * uniqueness: none
	ApprovalDetails DomainsMyRequestApprovalDetailArrayInput
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayInput
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrInput
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid pulumi.StringPtrInput
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress pulumi.BoolPtrInput
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid pulumi.StringPtrInput
	// (Updatable) Time by when Request expires
	//
	// **Added In:** 2307071836
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: dateTime
	// * uniqueness: none
	Expires pulumi.StringPtrInput
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies DomainsMyRequestIdcsCreatedByArrayInput
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringPtrInput
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies DomainsMyRequestIdcsLastModifiedByArrayInput
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease pulumi.StringPtrInput
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations pulumi.StringArrayInput
	// justification
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Justification pulumi.StringPtrInput
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas DomainsMyRequestMetaArrayInput
	// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid pulumi.StringPtrInput
	// Requestable resource reference.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: true
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Requesting DomainsMyRequestRequestingPtrInput
	// Requesting User
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Requestor DomainsMyRequestRequestorPtrInput
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayInput
	// (Updatable) status.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Status pulumi.StringPtrInput
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsMyRequestTagArrayInput
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TenancyOcid pulumi.StringPtrInput
}

func (DomainsMyRequestState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainsMyRequestState)(nil)).Elem()
}

type domainsMyRequestArgs struct {
	// Requestor can set action to CANCEL to cancel the request or to ESCALATE to escalate the request while the request status is IN_PROGRESS. Requestor can't escalate the request if canceling or escalation is in progress.
	//
	// **Added In:** 2307071836
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Action *string `pulumi:"action"`
	// Approvals created for this request.
	//
	// **Added In:** 2307071836
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * returned: request
	// * type: complex
	// * uniqueness: none
	ApprovalDetails []DomainsMyRequestApprovalDetail `pulumi:"approvalDetails"`
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets []string `pulumi:"attributeSets"`
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes *string `pulumi:"attributes"`
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// The basic endpoint for the identity domain
	IdcsEndpoint string `pulumi:"idcsEndpoint"`
	// justification
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Justification string `pulumi:"justification"`
	// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid *string `pulumi:"ocid"`
	// Requestable resource reference.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: true
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Requesting DomainsMyRequestRequesting `pulumi:"requesting"`
	// Requesting User
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Requestor *DomainsMyRequestRequestor `pulumi:"requestor"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas []string `pulumi:"schemas"`
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags []DomainsMyRequestTag `pulumi:"tags"`
}

// The set of arguments for constructing a DomainsMyRequest resource.
type DomainsMyRequestArgs struct {
	// Requestor can set action to CANCEL to cancel the request or to ESCALATE to escalate the request while the request status is IN_PROGRESS. Requestor can't escalate the request if canceling or escalation is in progress.
	//
	// **Added In:** 2307071836
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Action pulumi.StringPtrInput
	// Approvals created for this request.
	//
	// **Added In:** 2307071836
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * returned: request
	// * type: complex
	// * uniqueness: none
	ApprovalDetails DomainsMyRequestApprovalDetailArrayInput
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayInput
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrInput
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringInput
	// justification
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Justification pulumi.StringInput
	// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid pulumi.StringPtrInput
	// Requestable resource reference.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: true
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Requesting DomainsMyRequestRequestingInput
	// Requesting User
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Requestor DomainsMyRequestRequestorPtrInput
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayInput
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsMyRequestTagArrayInput
}

func (DomainsMyRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainsMyRequestArgs)(nil)).Elem()
}

type DomainsMyRequestInput interface {
	pulumi.Input

	ToDomainsMyRequestOutput() DomainsMyRequestOutput
	ToDomainsMyRequestOutputWithContext(ctx context.Context) DomainsMyRequestOutput
}

func (*DomainsMyRequest) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainsMyRequest)(nil)).Elem()
}

func (i *DomainsMyRequest) ToDomainsMyRequestOutput() DomainsMyRequestOutput {
	return i.ToDomainsMyRequestOutputWithContext(context.Background())
}

func (i *DomainsMyRequest) ToDomainsMyRequestOutputWithContext(ctx context.Context) DomainsMyRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsMyRequestOutput)
}

// DomainsMyRequestArrayInput is an input type that accepts DomainsMyRequestArray and DomainsMyRequestArrayOutput values.
// You can construct a concrete instance of `DomainsMyRequestArrayInput` via:
//
//	DomainsMyRequestArray{ DomainsMyRequestArgs{...} }
type DomainsMyRequestArrayInput interface {
	pulumi.Input

	ToDomainsMyRequestArrayOutput() DomainsMyRequestArrayOutput
	ToDomainsMyRequestArrayOutputWithContext(context.Context) DomainsMyRequestArrayOutput
}

type DomainsMyRequestArray []DomainsMyRequestInput

func (DomainsMyRequestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainsMyRequest)(nil)).Elem()
}

func (i DomainsMyRequestArray) ToDomainsMyRequestArrayOutput() DomainsMyRequestArrayOutput {
	return i.ToDomainsMyRequestArrayOutputWithContext(context.Background())
}

func (i DomainsMyRequestArray) ToDomainsMyRequestArrayOutputWithContext(ctx context.Context) DomainsMyRequestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsMyRequestArrayOutput)
}

// DomainsMyRequestMapInput is an input type that accepts DomainsMyRequestMap and DomainsMyRequestMapOutput values.
// You can construct a concrete instance of `DomainsMyRequestMapInput` via:
//
//	DomainsMyRequestMap{ "key": DomainsMyRequestArgs{...} }
type DomainsMyRequestMapInput interface {
	pulumi.Input

	ToDomainsMyRequestMapOutput() DomainsMyRequestMapOutput
	ToDomainsMyRequestMapOutputWithContext(context.Context) DomainsMyRequestMapOutput
}

type DomainsMyRequestMap map[string]DomainsMyRequestInput

func (DomainsMyRequestMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainsMyRequest)(nil)).Elem()
}

func (i DomainsMyRequestMap) ToDomainsMyRequestMapOutput() DomainsMyRequestMapOutput {
	return i.ToDomainsMyRequestMapOutputWithContext(context.Background())
}

func (i DomainsMyRequestMap) ToDomainsMyRequestMapOutputWithContext(ctx context.Context) DomainsMyRequestMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsMyRequestMapOutput)
}

type DomainsMyRequestOutput struct{ *pulumi.OutputState }

func (DomainsMyRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainsMyRequest)(nil)).Elem()
}

func (o DomainsMyRequestOutput) ToDomainsMyRequestOutput() DomainsMyRequestOutput {
	return o
}

func (o DomainsMyRequestOutput) ToDomainsMyRequestOutputWithContext(ctx context.Context) DomainsMyRequestOutput {
	return o
}

// Requestor can set action to CANCEL to cancel the request or to ESCALATE to escalate the request while the request status is IN_PROGRESS. Requestor can't escalate the request if canceling or escalation is in progress.
//
// **Added In:** 2307071836
//
// **SCIM++ Properties:**
// * caseExact: true
// * idcsSearchable: true
// * multiValued: false
// * mutability: readWrite
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsMyRequestOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsMyRequest) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

// Approvals created for this request.
//
// **Added In:** 2307071836
//
// **SCIM++ Properties:**
// * idcsSearchable: false
// * multiValued: true
// * mutability: readOnly
// * returned: request
// * type: complex
// * uniqueness: none
func (o DomainsMyRequestOutput) ApprovalDetails() DomainsMyRequestApprovalDetailArrayOutput {
	return o.ApplyT(func(v *DomainsMyRequest) DomainsMyRequestApprovalDetailArrayOutput { return v.ApprovalDetails }).(DomainsMyRequestApprovalDetailArrayOutput)
}

// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
func (o DomainsMyRequestOutput) AttributeSets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsMyRequest) pulumi.StringArrayOutput { return v.AttributeSets }).(pulumi.StringArrayOutput)
}

// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
func (o DomainsMyRequestOutput) Attributes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsMyRequest) pulumi.StringPtrOutput { return v.Attributes }).(pulumi.StringPtrOutput)
}

// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
func (o DomainsMyRequestOutput) Authorization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsMyRequest) pulumi.StringPtrOutput { return v.Authorization }).(pulumi.StringPtrOutput)
}

// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsMyRequestOutput) CompartmentOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsMyRequest) pulumi.StringOutput { return v.CompartmentOcid }).(pulumi.StringOutput)
}

// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: boolean
// * uniqueness: none
func (o DomainsMyRequestOutput) DeleteInProgress() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsMyRequest) pulumi.BoolOutput { return v.DeleteInProgress }).(pulumi.BoolOutput)
}

// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsMyRequestOutput) DomainOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsMyRequest) pulumi.StringOutput { return v.DomainOcid }).(pulumi.StringOutput)
}

// (Updatable) Time by when Request expires
//
// **Added In:** 2307071836
//
// **SCIM++ Properties:**
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: dateTime
// * uniqueness: none
func (o DomainsMyRequestOutput) Expires() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsMyRequest) pulumi.StringOutput { return v.Expires }).(pulumi.StringOutput)
}

// (Updatable) The User or App who created the Resource
//
// **SCIM++ Properties:**
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: true
// * returned: default
// * type: complex
func (o DomainsMyRequestOutput) IdcsCreatedBies() DomainsMyRequestIdcsCreatedByArrayOutput {
	return o.ApplyT(func(v *DomainsMyRequest) DomainsMyRequestIdcsCreatedByArrayOutput { return v.IdcsCreatedBies }).(DomainsMyRequestIdcsCreatedByArrayOutput)
}

// The basic endpoint for the identity domain
func (o DomainsMyRequestOutput) IdcsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsMyRequest) pulumi.StringOutput { return v.IdcsEndpoint }).(pulumi.StringOutput)
}

// (Updatable) The User or App who modified the Resource
//
// **SCIM++ Properties:**
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: complex
func (o DomainsMyRequestOutput) IdcsLastModifiedBies() DomainsMyRequestIdcsLastModifiedByArrayOutput {
	return o.ApplyT(func(v *DomainsMyRequest) DomainsMyRequestIdcsLastModifiedByArrayOutput { return v.IdcsLastModifiedBies }).(DomainsMyRequestIdcsLastModifiedByArrayOutput)
}

// (Updatable) The release number when the resource was upgraded.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: request
// * type: string
// * uniqueness: none
func (o DomainsMyRequestOutput) IdcsLastUpgradedInRelease() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsMyRequest) pulumi.StringOutput { return v.IdcsLastUpgradedInRelease }).(pulumi.StringOutput)
}

// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
//
// **SCIM++ Properties:**
// * idcsSearchable: false
// * multiValued: true
// * mutability: readOnly
// * required: false
// * returned: request
// * type: string
// * uniqueness: none
func (o DomainsMyRequestOutput) IdcsPreventedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsMyRequest) pulumi.StringArrayOutput { return v.IdcsPreventedOperations }).(pulumi.StringArrayOutput)
}

// justification
//
// **SCIM++ Properties:**
// * caseExact: true
// * idcsSearchable: true
// * multiValued: false
// * mutability: immutable
// * required: true
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsMyRequestOutput) Justification() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsMyRequest) pulumi.StringOutput { return v.Justification }).(pulumi.StringOutput)
}

// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
// * type: complex
func (o DomainsMyRequestOutput) Metas() DomainsMyRequestMetaArrayOutput {
	return o.ApplyT(func(v *DomainsMyRequest) DomainsMyRequestMetaArrayOutput { return v.Metas }).(DomainsMyRequestMetaArrayOutput)
}

// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
//
// **SCIM++ Properties:**
// * caseExact: true
// * idcsSearchable: true
// * multiValued: false
// * mutability: immutable
// * required: false
// * returned: default
// * type: string
// * uniqueness: global
func (o DomainsMyRequestOutput) Ocid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsMyRequest) pulumi.StringOutput { return v.Ocid }).(pulumi.StringOutput)
}

// Requestable resource reference.
//
// **SCIM++ Properties:**
// * idcsSearchable: true
// * multiValued: false
// * mutability: immutable
// * required: true
// * returned: default
// * type: complex
// * uniqueness: none
func (o DomainsMyRequestOutput) Requesting() DomainsMyRequestRequestingOutput {
	return o.ApplyT(func(v *DomainsMyRequest) DomainsMyRequestRequestingOutput { return v.Requesting }).(DomainsMyRequestRequestingOutput)
}

// Requesting User
//
// **SCIM++ Properties:**
// * idcsSearchable: true
// * multiValued: false
// * mutability: immutable
// * required: false
// * returned: request
// * type: complex
// * uniqueness: none
func (o DomainsMyRequestOutput) Requestor() DomainsMyRequestRequestorOutput {
	return o.ApplyT(func(v *DomainsMyRequest) DomainsMyRequestRequestorOutput { return v.Requestor }).(DomainsMyRequestRequestorOutput)
}

// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
func (o DomainsMyRequestOutput) ResourceTypeSchemaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsMyRequest) pulumi.StringPtrOutput { return v.ResourceTypeSchemaVersion }).(pulumi.StringPtrOutput)
}

// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: true
// * mutability: readWrite
// * required: true
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsMyRequestOutput) Schemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsMyRequest) pulumi.StringArrayOutput { return v.Schemas }).(pulumi.StringArrayOutput)
}

// (Updatable) status.
//
// **SCIM++ Properties:**
// * caseExact: true
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsMyRequestOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsMyRequest) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// A list of tags on this resource.
//
// **SCIM++ Properties:**
// * idcsCompositeKey: [key, value]
// * idcsSearchable: true
// * multiValued: true
// * mutability: readWrite
// * required: false
// * returned: request
// * type: complex
// * uniqueness: none
func (o DomainsMyRequestOutput) Tags() DomainsMyRequestTagArrayOutput {
	return o.ApplyT(func(v *DomainsMyRequest) DomainsMyRequestTagArrayOutput { return v.Tags }).(DomainsMyRequestTagArrayOutput)
}

// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o DomainsMyRequestOutput) TenancyOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsMyRequest) pulumi.StringOutput { return v.TenancyOcid }).(pulumi.StringOutput)
}

type DomainsMyRequestArrayOutput struct{ *pulumi.OutputState }

func (DomainsMyRequestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainsMyRequest)(nil)).Elem()
}

func (o DomainsMyRequestArrayOutput) ToDomainsMyRequestArrayOutput() DomainsMyRequestArrayOutput {
	return o
}

func (o DomainsMyRequestArrayOutput) ToDomainsMyRequestArrayOutputWithContext(ctx context.Context) DomainsMyRequestArrayOutput {
	return o
}

func (o DomainsMyRequestArrayOutput) Index(i pulumi.IntInput) DomainsMyRequestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DomainsMyRequest {
		return vs[0].([]*DomainsMyRequest)[vs[1].(int)]
	}).(DomainsMyRequestOutput)
}

type DomainsMyRequestMapOutput struct{ *pulumi.OutputState }

func (DomainsMyRequestMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainsMyRequest)(nil)).Elem()
}

func (o DomainsMyRequestMapOutput) ToDomainsMyRequestMapOutput() DomainsMyRequestMapOutput {
	return o
}

func (o DomainsMyRequestMapOutput) ToDomainsMyRequestMapOutputWithContext(ctx context.Context) DomainsMyRequestMapOutput {
	return o
}

func (o DomainsMyRequestMapOutput) MapIndex(k pulumi.StringInput) DomainsMyRequestOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DomainsMyRequest {
		return vs[0].(map[string]*DomainsMyRequest)[vs[1].(string)]
	}).(DomainsMyRequestOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsMyRequestInput)(nil)).Elem(), &DomainsMyRequest{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsMyRequestArrayInput)(nil)).Elem(), DomainsMyRequestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsMyRequestMapInput)(nil)).Elem(), DomainsMyRequestMap{})
	pulumi.RegisterOutputType(DomainsMyRequestOutput{})
	pulumi.RegisterOutputType(DomainsMyRequestArrayOutput{})
	pulumi.RegisterOutputType(DomainsMyRequestMapOutput{})
}
