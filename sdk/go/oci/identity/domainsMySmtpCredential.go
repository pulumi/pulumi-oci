// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the My Smtp Credential resource in Oracle Cloud Infrastructure Identity Domains service.
//
// # Add a user's smtp credenials
//
// ## Import
//
// MySmtpCredentials can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:Identity/domainsMySmtpCredential:DomainsMySmtpCredential test_my_smtp_credential "idcsEndpoint/{idcsEndpoint}/mySmtpCredentials/{mySmtpCredentialId}"
//
// ```
type DomainsMySmtpCredential struct {
	pulumi.CustomResourceState

	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrOutput `pulumi:"authorization"`
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid pulumi.StringOutput `pulumi:"compartmentOcid"`
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress pulumi.BoolOutput `pulumi:"deleteInProgress"`
	// Description
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * type: string
	// * mutability: readWrite
	// * required: false
	// * returned: default
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid pulumi.StringOutput `pulumi:"domainOcid"`
	// User credential expires on
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: dateTime
	// * uniqueness: none
	ExpiresOn pulumi.StringOutput `pulumi:"expiresOn"`
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies DomainsMySmtpCredentialIdcsCreatedByArrayOutput `pulumi:"idcsCreatedBies"`
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringOutput `pulumi:"idcsEndpoint"`
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies DomainsMySmtpCredentialIdcsLastModifiedByArrayOutput `pulumi:"idcsLastModifiedBies"`
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease pulumi.StringOutput `pulumi:"idcsLastUpgradedInRelease"`
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations pulumi.StringArrayOutput `pulumi:"idcsPreventedOperations"`
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas DomainsMySmtpCredentialMetaArrayOutput `pulumi:"metas"`
	// User's ocid
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: always
	// * type: string
	// * uniqueness: none
	Ocid pulumi.StringOutput `pulumi:"ocid"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrOutput `pulumi:"resourceTypeSchemaVersion"`
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayOutput `pulumi:"schemas"`
	// User credential status
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: never
	// * type: string
	// * uniqueness: none
	Status pulumi.StringOutput `pulumi:"status"`
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsMySmtpCredentialTagArrayOutput `pulumi:"tags"`
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	TenancyOcid pulumi.StringOutput `pulumi:"tenancyOcid"`
	// User linked to smtp credential
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	User DomainsMySmtpCredentialUserOutput `pulumi:"user"`
	// (Updatable) User name
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * type: string
	// * mutability: readOnly
	// * required: true
	// * returned: default
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	UserName pulumi.StringOutput `pulumi:"userName"`
}

// NewDomainsMySmtpCredential registers a new resource with the given unique name, arguments, and options.
func NewDomainsMySmtpCredential(ctx *pulumi.Context,
	name string, args *DomainsMySmtpCredentialArgs, opts ...pulumi.ResourceOption) (*DomainsMySmtpCredential, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IdcsEndpoint == nil {
		return nil, errors.New("invalid value for required argument 'IdcsEndpoint'")
	}
	if args.Schemas == nil {
		return nil, errors.New("invalid value for required argument 'Schemas'")
	}
	var resource DomainsMySmtpCredential
	err := ctx.RegisterResource("oci:Identity/domainsMySmtpCredential:DomainsMySmtpCredential", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomainsMySmtpCredential gets an existing DomainsMySmtpCredential resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainsMySmtpCredential(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainsMySmtpCredentialState, opts ...pulumi.ResourceOption) (*DomainsMySmtpCredential, error) {
	var resource DomainsMySmtpCredential
	err := ctx.ReadResource("oci:Identity/domainsMySmtpCredential:DomainsMySmtpCredential", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DomainsMySmtpCredential resources.
type domainsMySmtpCredentialState struct {
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid *string `pulumi:"compartmentOcid"`
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress *bool `pulumi:"deleteInProgress"`
	// Description
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * type: string
	// * mutability: readWrite
	// * required: false
	// * returned: default
	Description *string `pulumi:"description"`
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid *string `pulumi:"domainOcid"`
	// User credential expires on
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: dateTime
	// * uniqueness: none
	ExpiresOn *string `pulumi:"expiresOn"`
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies []DomainsMySmtpCredentialIdcsCreatedBy `pulumi:"idcsCreatedBies"`
	// The basic endpoint for the identity domain
	IdcsEndpoint *string `pulumi:"idcsEndpoint"`
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies []DomainsMySmtpCredentialIdcsLastModifiedBy `pulumi:"idcsLastModifiedBies"`
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease *string `pulumi:"idcsLastUpgradedInRelease"`
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations []string `pulumi:"idcsPreventedOperations"`
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas []DomainsMySmtpCredentialMeta `pulumi:"metas"`
	// User's ocid
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: always
	// * type: string
	// * uniqueness: none
	Ocid *string `pulumi:"ocid"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas []string `pulumi:"schemas"`
	// User credential status
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: never
	// * type: string
	// * uniqueness: none
	Status *string `pulumi:"status"`
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags []DomainsMySmtpCredentialTag `pulumi:"tags"`
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	TenancyOcid *string `pulumi:"tenancyOcid"`
	// User linked to smtp credential
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	User *DomainsMySmtpCredentialUser `pulumi:"user"`
	// (Updatable) User name
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * type: string
	// * mutability: readOnly
	// * required: true
	// * returned: default
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	UserName *string `pulumi:"userName"`
}

type DomainsMySmtpCredentialState struct {
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid pulumi.StringPtrInput
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress pulumi.BoolPtrInput
	// Description
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * type: string
	// * mutability: readWrite
	// * required: false
	// * returned: default
	Description pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid pulumi.StringPtrInput
	// User credential expires on
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: dateTime
	// * uniqueness: none
	ExpiresOn pulumi.StringPtrInput
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies DomainsMySmtpCredentialIdcsCreatedByArrayInput
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringPtrInput
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies DomainsMySmtpCredentialIdcsLastModifiedByArrayInput
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease pulumi.StringPtrInput
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations pulumi.StringArrayInput
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas DomainsMySmtpCredentialMetaArrayInput
	// User's ocid
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: always
	// * type: string
	// * uniqueness: none
	Ocid pulumi.StringPtrInput
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayInput
	// User credential status
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: never
	// * type: string
	// * uniqueness: none
	Status pulumi.StringPtrInput
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsMySmtpCredentialTagArrayInput
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	TenancyOcid pulumi.StringPtrInput
	// User linked to smtp credential
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	User DomainsMySmtpCredentialUserPtrInput
	// (Updatable) User name
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * type: string
	// * mutability: readOnly
	// * required: true
	// * returned: default
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	UserName pulumi.StringPtrInput
}

func (DomainsMySmtpCredentialState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainsMySmtpCredentialState)(nil)).Elem()
}

type domainsMySmtpCredentialArgs struct {
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// Description
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * type: string
	// * mutability: readWrite
	// * required: false
	// * returned: default
	Description *string `pulumi:"description"`
	// User credential expires on
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: dateTime
	// * uniqueness: none
	ExpiresOn *string `pulumi:"expiresOn"`
	// The basic endpoint for the identity domain
	IdcsEndpoint string `pulumi:"idcsEndpoint"`
	// User's ocid
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: always
	// * type: string
	// * uniqueness: none
	Ocid *string `pulumi:"ocid"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas []string `pulumi:"schemas"`
	// User credential status
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: never
	// * type: string
	// * uniqueness: none
	Status *string `pulumi:"status"`
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags []DomainsMySmtpCredentialTag `pulumi:"tags"`
	// User linked to smtp credential
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	User *DomainsMySmtpCredentialUser `pulumi:"user"`
}

// The set of arguments for constructing a DomainsMySmtpCredential resource.
type DomainsMySmtpCredentialArgs struct {
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput
	// Description
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * type: string
	// * mutability: readWrite
	// * required: false
	// * returned: default
	Description pulumi.StringPtrInput
	// User credential expires on
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: dateTime
	// * uniqueness: none
	ExpiresOn pulumi.StringPtrInput
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringInput
	// User's ocid
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: always
	// * type: string
	// * uniqueness: none
	Ocid pulumi.StringPtrInput
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayInput
	// User credential status
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: never
	// * type: string
	// * uniqueness: none
	Status pulumi.StringPtrInput
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsMySmtpCredentialTagArrayInput
	// User linked to smtp credential
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	User DomainsMySmtpCredentialUserPtrInput
}

func (DomainsMySmtpCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainsMySmtpCredentialArgs)(nil)).Elem()
}

type DomainsMySmtpCredentialInput interface {
	pulumi.Input

	ToDomainsMySmtpCredentialOutput() DomainsMySmtpCredentialOutput
	ToDomainsMySmtpCredentialOutputWithContext(ctx context.Context) DomainsMySmtpCredentialOutput
}

func (*DomainsMySmtpCredential) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainsMySmtpCredential)(nil)).Elem()
}

func (i *DomainsMySmtpCredential) ToDomainsMySmtpCredentialOutput() DomainsMySmtpCredentialOutput {
	return i.ToDomainsMySmtpCredentialOutputWithContext(context.Background())
}

func (i *DomainsMySmtpCredential) ToDomainsMySmtpCredentialOutputWithContext(ctx context.Context) DomainsMySmtpCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsMySmtpCredentialOutput)
}

// DomainsMySmtpCredentialArrayInput is an input type that accepts DomainsMySmtpCredentialArray and DomainsMySmtpCredentialArrayOutput values.
// You can construct a concrete instance of `DomainsMySmtpCredentialArrayInput` via:
//
//	DomainsMySmtpCredentialArray{ DomainsMySmtpCredentialArgs{...} }
type DomainsMySmtpCredentialArrayInput interface {
	pulumi.Input

	ToDomainsMySmtpCredentialArrayOutput() DomainsMySmtpCredentialArrayOutput
	ToDomainsMySmtpCredentialArrayOutputWithContext(context.Context) DomainsMySmtpCredentialArrayOutput
}

type DomainsMySmtpCredentialArray []DomainsMySmtpCredentialInput

func (DomainsMySmtpCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainsMySmtpCredential)(nil)).Elem()
}

func (i DomainsMySmtpCredentialArray) ToDomainsMySmtpCredentialArrayOutput() DomainsMySmtpCredentialArrayOutput {
	return i.ToDomainsMySmtpCredentialArrayOutputWithContext(context.Background())
}

func (i DomainsMySmtpCredentialArray) ToDomainsMySmtpCredentialArrayOutputWithContext(ctx context.Context) DomainsMySmtpCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsMySmtpCredentialArrayOutput)
}

// DomainsMySmtpCredentialMapInput is an input type that accepts DomainsMySmtpCredentialMap and DomainsMySmtpCredentialMapOutput values.
// You can construct a concrete instance of `DomainsMySmtpCredentialMapInput` via:
//
//	DomainsMySmtpCredentialMap{ "key": DomainsMySmtpCredentialArgs{...} }
type DomainsMySmtpCredentialMapInput interface {
	pulumi.Input

	ToDomainsMySmtpCredentialMapOutput() DomainsMySmtpCredentialMapOutput
	ToDomainsMySmtpCredentialMapOutputWithContext(context.Context) DomainsMySmtpCredentialMapOutput
}

type DomainsMySmtpCredentialMap map[string]DomainsMySmtpCredentialInput

func (DomainsMySmtpCredentialMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainsMySmtpCredential)(nil)).Elem()
}

func (i DomainsMySmtpCredentialMap) ToDomainsMySmtpCredentialMapOutput() DomainsMySmtpCredentialMapOutput {
	return i.ToDomainsMySmtpCredentialMapOutputWithContext(context.Background())
}

func (i DomainsMySmtpCredentialMap) ToDomainsMySmtpCredentialMapOutputWithContext(ctx context.Context) DomainsMySmtpCredentialMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsMySmtpCredentialMapOutput)
}

type DomainsMySmtpCredentialOutput struct{ *pulumi.OutputState }

func (DomainsMySmtpCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainsMySmtpCredential)(nil)).Elem()
}

func (o DomainsMySmtpCredentialOutput) ToDomainsMySmtpCredentialOutput() DomainsMySmtpCredentialOutput {
	return o
}

func (o DomainsMySmtpCredentialOutput) ToDomainsMySmtpCredentialOutputWithContext(ctx context.Context) DomainsMySmtpCredentialOutput {
	return o
}

// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
func (o DomainsMySmtpCredentialOutput) Authorization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsMySmtpCredential) pulumi.StringPtrOutput { return v.Authorization }).(pulumi.StringPtrOutput)
}

// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsMySmtpCredentialOutput) CompartmentOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsMySmtpCredential) pulumi.StringOutput { return v.CompartmentOcid }).(pulumi.StringOutput)
}

// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: boolean
// * uniqueness: none
func (o DomainsMySmtpCredentialOutput) DeleteInProgress() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsMySmtpCredential) pulumi.BoolOutput { return v.DeleteInProgress }).(pulumi.BoolOutput)
}

// Description
//
// **SCIM++ Properties:**
// * caseExact: false
// * type: string
// * mutability: readWrite
// * required: false
// * returned: default
func (o DomainsMySmtpCredentialOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsMySmtpCredential) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsMySmtpCredentialOutput) DomainOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsMySmtpCredential) pulumi.StringOutput { return v.DomainOcid }).(pulumi.StringOutput)
}

// User credential expires on
//
// **Added In:** 2109090424
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: immutable
// * required: false
// * returned: default
// * type: dateTime
// * uniqueness: none
func (o DomainsMySmtpCredentialOutput) ExpiresOn() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsMySmtpCredential) pulumi.StringOutput { return v.ExpiresOn }).(pulumi.StringOutput)
}

// (Updatable) The User or App who created the Resource
//
// **SCIM++ Properties:**
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: true
// * returned: default
// * type: complex
func (o DomainsMySmtpCredentialOutput) IdcsCreatedBies() DomainsMySmtpCredentialIdcsCreatedByArrayOutput {
	return o.ApplyT(func(v *DomainsMySmtpCredential) DomainsMySmtpCredentialIdcsCreatedByArrayOutput {
		return v.IdcsCreatedBies
	}).(DomainsMySmtpCredentialIdcsCreatedByArrayOutput)
}

// The basic endpoint for the identity domain
func (o DomainsMySmtpCredentialOutput) IdcsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsMySmtpCredential) pulumi.StringOutput { return v.IdcsEndpoint }).(pulumi.StringOutput)
}

// (Updatable) The User or App who modified the Resource
//
// **SCIM++ Properties:**
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: complex
func (o DomainsMySmtpCredentialOutput) IdcsLastModifiedBies() DomainsMySmtpCredentialIdcsLastModifiedByArrayOutput {
	return o.ApplyT(func(v *DomainsMySmtpCredential) DomainsMySmtpCredentialIdcsLastModifiedByArrayOutput {
		return v.IdcsLastModifiedBies
	}).(DomainsMySmtpCredentialIdcsLastModifiedByArrayOutput)
}

// (Updatable) The release number when the resource was upgraded.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: request
// * type: string
// * uniqueness: none
func (o DomainsMySmtpCredentialOutput) IdcsLastUpgradedInRelease() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsMySmtpCredential) pulumi.StringOutput { return v.IdcsLastUpgradedInRelease }).(pulumi.StringOutput)
}

// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
//
// **SCIM++ Properties:**
// * idcsSearchable: false
// * multiValued: true
// * mutability: readOnly
// * required: false
// * returned: request
// * type: string
// * uniqueness: none
func (o DomainsMySmtpCredentialOutput) IdcsPreventedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsMySmtpCredential) pulumi.StringArrayOutput { return v.IdcsPreventedOperations }).(pulumi.StringArrayOutput)
}

// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
// * type: complex
func (o DomainsMySmtpCredentialOutput) Metas() DomainsMySmtpCredentialMetaArrayOutput {
	return o.ApplyT(func(v *DomainsMySmtpCredential) DomainsMySmtpCredentialMetaArrayOutput { return v.Metas }).(DomainsMySmtpCredentialMetaArrayOutput)
}

// User's ocid
//
// **SCIM++ Properties:**
// * caseExact: true
// * idcsSearchable: true
// * multiValued: false
// * mutability: immutable
// * required: false
// * returned: always
// * type: string
// * uniqueness: none
func (o DomainsMySmtpCredentialOutput) Ocid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsMySmtpCredential) pulumi.StringOutput { return v.Ocid }).(pulumi.StringOutput)
}

// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
func (o DomainsMySmtpCredentialOutput) ResourceTypeSchemaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsMySmtpCredential) pulumi.StringPtrOutput { return v.ResourceTypeSchemaVersion }).(pulumi.StringPtrOutput)
}

// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: true
// * mutability: readWrite
// * required: true
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsMySmtpCredentialOutput) Schemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsMySmtpCredential) pulumi.StringArrayOutput { return v.Schemas }).(pulumi.StringArrayOutput)
}

// User credential status
//
// **Added In:** 2109090424
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readWrite
// * required: false
// * returned: never
// * type: string
// * uniqueness: none
func (o DomainsMySmtpCredentialOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsMySmtpCredential) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// A list of tags on this resource.
//
// **SCIM++ Properties:**
// * idcsCompositeKey: [key, value]
// * idcsSearchable: true
// * multiValued: true
// * mutability: readWrite
// * required: false
// * returned: request
// * type: complex
// * uniqueness: none
func (o DomainsMySmtpCredentialOutput) Tags() DomainsMySmtpCredentialTagArrayOutput {
	return o.ApplyT(func(v *DomainsMySmtpCredential) DomainsMySmtpCredentialTagArrayOutput { return v.Tags }).(DomainsMySmtpCredentialTagArrayOutput)
}

// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsMySmtpCredentialOutput) TenancyOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsMySmtpCredential) pulumi.StringOutput { return v.TenancyOcid }).(pulumi.StringOutput)
}

// User linked to smtp credential
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: true
// * multiValued: false
// * mutability: immutable
// * required: false
// * returned: default
// * type: complex
// * uniqueness: none
func (o DomainsMySmtpCredentialOutput) User() DomainsMySmtpCredentialUserOutput {
	return o.ApplyT(func(v *DomainsMySmtpCredential) DomainsMySmtpCredentialUserOutput { return v.User }).(DomainsMySmtpCredentialUserOutput)
}

// (Updatable) User name
//
// **SCIM++ Properties:**
// * caseExact: false
// * type: string
// * mutability: readOnly
// * required: true
// * returned: default
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o DomainsMySmtpCredentialOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsMySmtpCredential) pulumi.StringOutput { return v.UserName }).(pulumi.StringOutput)
}

type DomainsMySmtpCredentialArrayOutput struct{ *pulumi.OutputState }

func (DomainsMySmtpCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainsMySmtpCredential)(nil)).Elem()
}

func (o DomainsMySmtpCredentialArrayOutput) ToDomainsMySmtpCredentialArrayOutput() DomainsMySmtpCredentialArrayOutput {
	return o
}

func (o DomainsMySmtpCredentialArrayOutput) ToDomainsMySmtpCredentialArrayOutputWithContext(ctx context.Context) DomainsMySmtpCredentialArrayOutput {
	return o
}

func (o DomainsMySmtpCredentialArrayOutput) Index(i pulumi.IntInput) DomainsMySmtpCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DomainsMySmtpCredential {
		return vs[0].([]*DomainsMySmtpCredential)[vs[1].(int)]
	}).(DomainsMySmtpCredentialOutput)
}

type DomainsMySmtpCredentialMapOutput struct{ *pulumi.OutputState }

func (DomainsMySmtpCredentialMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainsMySmtpCredential)(nil)).Elem()
}

func (o DomainsMySmtpCredentialMapOutput) ToDomainsMySmtpCredentialMapOutput() DomainsMySmtpCredentialMapOutput {
	return o
}

func (o DomainsMySmtpCredentialMapOutput) ToDomainsMySmtpCredentialMapOutputWithContext(ctx context.Context) DomainsMySmtpCredentialMapOutput {
	return o
}

func (o DomainsMySmtpCredentialMapOutput) MapIndex(k pulumi.StringInput) DomainsMySmtpCredentialOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DomainsMySmtpCredential {
		return vs[0].(map[string]*DomainsMySmtpCredential)[vs[1].(string)]
	}).(DomainsMySmtpCredentialOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsMySmtpCredentialInput)(nil)).Elem(), &DomainsMySmtpCredential{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsMySmtpCredentialArrayInput)(nil)).Elem(), DomainsMySmtpCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsMySmtpCredentialMapInput)(nil)).Elem(), DomainsMySmtpCredentialMap{})
	pulumi.RegisterOutputType(DomainsMySmtpCredentialOutput{})
	pulumi.RegisterOutputType(DomainsMySmtpCredentialArrayOutput{})
	pulumi.RegisterOutputType(DomainsMySmtpCredentialMapOutput{})
}
