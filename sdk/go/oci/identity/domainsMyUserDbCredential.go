// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This resource provides the My User Db Credential resource in Oracle Cloud Infrastructure Identity Domains service.
//
// Create a user's own database (DB) credential.
//
// ## Import
//
// MyUserDbCredentials can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:Identity/domainsMyUserDbCredential:DomainsMyUserDbCredential test_my_user_db_credential "idcsEndpoint/{idcsEndpoint}/myUserDbCredentials/{myUserDbCredentialId}"
//
// ```
type DomainsMyUserDbCredential struct {
	pulumi.CustomResourceState

	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrOutput `pulumi:"authorization"`
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid pulumi.StringOutput `pulumi:"compartmentOcid"`
	// The user's database password.
	//
	// **SCIM++ Properties:**
	// * type: string
	// * mutability: immutable
	// * returned: default
	// * required: true
	DbPassword pulumi.StringOutput `pulumi:"dbPassword"`
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress pulumi.BoolOutput `pulumi:"deleteInProgress"`
	// Description
	//
	// **Added In:** 2109020413
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * type: string
	// * mutability: readWrite
	// * required: false
	// * returned: default
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid pulumi.StringOutput `pulumi:"domainOcid"`
	// (Updatable) Indicates that the database password has expired.
	//
	// **SCIM++ Properties:**
	// * type: boolean
	// * mutability: readOnly
	// * returned: default
	Expired pulumi.BoolOutput `pulumi:"expired"`
	// When the user credential expires.
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: dateTime
	// * uniqueness: none
	ExpiresOn pulumi.StringOutput `pulumi:"expiresOn"`
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies DomainsMyUserDbCredentialIdcsCreatedByArrayOutput `pulumi:"idcsCreatedBies"`
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringOutput `pulumi:"idcsEndpoint"`
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies DomainsMyUserDbCredentialIdcsLastModifiedByArrayOutput `pulumi:"idcsLastModifiedBies"`
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease pulumi.StringOutput `pulumi:"idcsLastUpgradedInRelease"`
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations pulumi.StringArrayOutput `pulumi:"idcsPreventedOperations"`
	// (Updatable) A DateTime that specifies the date and time when the current database password was set.
	//
	// **SCIM++ Properties:**
	// * type: dateTime
	// * mutability: readOnly
	// * returned: default
	LastSetDate pulumi.StringOutput `pulumi:"lastSetDate"`
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas DomainsMyUserDbCredentialMetaArrayOutput `pulumi:"metas"`
	// (Updatable) The user's database password with mixed salt.
	//
	// **SCIM++ Properties:**
	// * type: string
	// * mutability: readOnly
	// * returned: default
	// * required: false
	MixedDbPassword pulumi.StringOutput `pulumi:"mixedDbPassword"`
	// (Updatable) The mixed salt of the password.
	//
	// **SCIM++ Properties:**
	// * type: string
	// * mutability: readOnly
	// * returned: default
	// * required: false
	MixedSalt pulumi.StringOutput `pulumi:"mixedSalt"`
	// (Updatable) The username.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Name pulumi.StringOutput `pulumi:"name"`
	// The user's OCID.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: always
	// * type: string
	// * uniqueness: none
	Ocid pulumi.StringOutput `pulumi:"ocid"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrOutput `pulumi:"resourceTypeSchemaVersion"`
	// (Updatable) The salt of the password.
	//
	// **SCIM++ Properties:**
	// * type: string
	// * mutability: readOnly
	// * returned: default
	// * required: false
	Salt pulumi.StringOutput `pulumi:"salt"`
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayOutput `pulumi:"schemas"`
	// User credential status
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: never
	// * type: string
	// * uniqueness: none
	Status pulumi.StringOutput `pulumi:"status"`
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsMyUserDbCredentialTagArrayOutput `pulumi:"tags"`
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	TenancyOcid pulumi.StringOutput `pulumi:"tenancyOcid"`
	// The user linked to the database credential.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCompositeKey: [value]
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	User DomainsMyUserDbCredentialUserOutput `pulumi:"user"`
}

// NewDomainsMyUserDbCredential registers a new resource with the given unique name, arguments, and options.
func NewDomainsMyUserDbCredential(ctx *pulumi.Context,
	name string, args *DomainsMyUserDbCredentialArgs, opts ...pulumi.ResourceOption) (*DomainsMyUserDbCredential, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DbPassword == nil {
		return nil, errors.New("invalid value for required argument 'DbPassword'")
	}
	if args.IdcsEndpoint == nil {
		return nil, errors.New("invalid value for required argument 'IdcsEndpoint'")
	}
	if args.Schemas == nil {
		return nil, errors.New("invalid value for required argument 'Schemas'")
	}
	if args.DbPassword != nil {
		args.DbPassword = pulumi.ToSecret(args.DbPassword).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"dbPassword",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DomainsMyUserDbCredential
	err := ctx.RegisterResource("oci:Identity/domainsMyUserDbCredential:DomainsMyUserDbCredential", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomainsMyUserDbCredential gets an existing DomainsMyUserDbCredential resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainsMyUserDbCredential(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainsMyUserDbCredentialState, opts ...pulumi.ResourceOption) (*DomainsMyUserDbCredential, error) {
	var resource DomainsMyUserDbCredential
	err := ctx.ReadResource("oci:Identity/domainsMyUserDbCredential:DomainsMyUserDbCredential", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DomainsMyUserDbCredential resources.
type domainsMyUserDbCredentialState struct {
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid *string `pulumi:"compartmentOcid"`
	// The user's database password.
	//
	// **SCIM++ Properties:**
	// * type: string
	// * mutability: immutable
	// * returned: default
	// * required: true
	DbPassword *string `pulumi:"dbPassword"`
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress *bool `pulumi:"deleteInProgress"`
	// Description
	//
	// **Added In:** 2109020413
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * type: string
	// * mutability: readWrite
	// * required: false
	// * returned: default
	Description *string `pulumi:"description"`
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid *string `pulumi:"domainOcid"`
	// (Updatable) Indicates that the database password has expired.
	//
	// **SCIM++ Properties:**
	// * type: boolean
	// * mutability: readOnly
	// * returned: default
	Expired *bool `pulumi:"expired"`
	// When the user credential expires.
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: dateTime
	// * uniqueness: none
	ExpiresOn *string `pulumi:"expiresOn"`
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies []DomainsMyUserDbCredentialIdcsCreatedBy `pulumi:"idcsCreatedBies"`
	// The basic endpoint for the identity domain
	IdcsEndpoint *string `pulumi:"idcsEndpoint"`
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies []DomainsMyUserDbCredentialIdcsLastModifiedBy `pulumi:"idcsLastModifiedBies"`
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease *string `pulumi:"idcsLastUpgradedInRelease"`
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations []string `pulumi:"idcsPreventedOperations"`
	// (Updatable) A DateTime that specifies the date and time when the current database password was set.
	//
	// **SCIM++ Properties:**
	// * type: dateTime
	// * mutability: readOnly
	// * returned: default
	LastSetDate *string `pulumi:"lastSetDate"`
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas []DomainsMyUserDbCredentialMeta `pulumi:"metas"`
	// (Updatable) The user's database password with mixed salt.
	//
	// **SCIM++ Properties:**
	// * type: string
	// * mutability: readOnly
	// * returned: default
	// * required: false
	MixedDbPassword *string `pulumi:"mixedDbPassword"`
	// (Updatable) The mixed salt of the password.
	//
	// **SCIM++ Properties:**
	// * type: string
	// * mutability: readOnly
	// * returned: default
	// * required: false
	MixedSalt *string `pulumi:"mixedSalt"`
	// (Updatable) The username.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Name *string `pulumi:"name"`
	// The user's OCID.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: always
	// * type: string
	// * uniqueness: none
	Ocid *string `pulumi:"ocid"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// (Updatable) The salt of the password.
	//
	// **SCIM++ Properties:**
	// * type: string
	// * mutability: readOnly
	// * returned: default
	// * required: false
	Salt *string `pulumi:"salt"`
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas []string `pulumi:"schemas"`
	// User credential status
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: never
	// * type: string
	// * uniqueness: none
	Status *string `pulumi:"status"`
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags []DomainsMyUserDbCredentialTag `pulumi:"tags"`
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	TenancyOcid *string `pulumi:"tenancyOcid"`
	// The user linked to the database credential.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCompositeKey: [value]
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	User *DomainsMyUserDbCredentialUser `pulumi:"user"`
}

type DomainsMyUserDbCredentialState struct {
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid pulumi.StringPtrInput
	// The user's database password.
	//
	// **SCIM++ Properties:**
	// * type: string
	// * mutability: immutable
	// * returned: default
	// * required: true
	DbPassword pulumi.StringPtrInput
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress pulumi.BoolPtrInput
	// Description
	//
	// **Added In:** 2109020413
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * type: string
	// * mutability: readWrite
	// * required: false
	// * returned: default
	Description pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid pulumi.StringPtrInput
	// (Updatable) Indicates that the database password has expired.
	//
	// **SCIM++ Properties:**
	// * type: boolean
	// * mutability: readOnly
	// * returned: default
	Expired pulumi.BoolPtrInput
	// When the user credential expires.
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: dateTime
	// * uniqueness: none
	ExpiresOn pulumi.StringPtrInput
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies DomainsMyUserDbCredentialIdcsCreatedByArrayInput
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringPtrInput
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies DomainsMyUserDbCredentialIdcsLastModifiedByArrayInput
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease pulumi.StringPtrInput
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations pulumi.StringArrayInput
	// (Updatable) A DateTime that specifies the date and time when the current database password was set.
	//
	// **SCIM++ Properties:**
	// * type: dateTime
	// * mutability: readOnly
	// * returned: default
	LastSetDate pulumi.StringPtrInput
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas DomainsMyUserDbCredentialMetaArrayInput
	// (Updatable) The user's database password with mixed salt.
	//
	// **SCIM++ Properties:**
	// * type: string
	// * mutability: readOnly
	// * returned: default
	// * required: false
	MixedDbPassword pulumi.StringPtrInput
	// (Updatable) The mixed salt of the password.
	//
	// **SCIM++ Properties:**
	// * type: string
	// * mutability: readOnly
	// * returned: default
	// * required: false
	MixedSalt pulumi.StringPtrInput
	// (Updatable) The username.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Name pulumi.StringPtrInput
	// The user's OCID.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: always
	// * type: string
	// * uniqueness: none
	Ocid pulumi.StringPtrInput
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput
	// (Updatable) The salt of the password.
	//
	// **SCIM++ Properties:**
	// * type: string
	// * mutability: readOnly
	// * returned: default
	// * required: false
	Salt pulumi.StringPtrInput
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayInput
	// User credential status
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: never
	// * type: string
	// * uniqueness: none
	Status pulumi.StringPtrInput
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsMyUserDbCredentialTagArrayInput
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	TenancyOcid pulumi.StringPtrInput
	// The user linked to the database credential.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCompositeKey: [value]
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	User DomainsMyUserDbCredentialUserPtrInput
}

func (DomainsMyUserDbCredentialState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainsMyUserDbCredentialState)(nil)).Elem()
}

type domainsMyUserDbCredentialArgs struct {
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// The user's database password.
	//
	// **SCIM++ Properties:**
	// * type: string
	// * mutability: immutable
	// * returned: default
	// * required: true
	DbPassword string `pulumi:"dbPassword"`
	// Description
	//
	// **Added In:** 2109020413
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * type: string
	// * mutability: readWrite
	// * required: false
	// * returned: default
	Description *string `pulumi:"description"`
	// When the user credential expires.
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: dateTime
	// * uniqueness: none
	ExpiresOn *string `pulumi:"expiresOn"`
	// The basic endpoint for the identity domain
	IdcsEndpoint string `pulumi:"idcsEndpoint"`
	// The user's OCID.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: always
	// * type: string
	// * uniqueness: none
	Ocid *string `pulumi:"ocid"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas []string `pulumi:"schemas"`
	// User credential status
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: never
	// * type: string
	// * uniqueness: none
	Status *string `pulumi:"status"`
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags []DomainsMyUserDbCredentialTag `pulumi:"tags"`
	// The user linked to the database credential.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCompositeKey: [value]
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	User *DomainsMyUserDbCredentialUser `pulumi:"user"`
}

// The set of arguments for constructing a DomainsMyUserDbCredential resource.
type DomainsMyUserDbCredentialArgs struct {
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput
	// The user's database password.
	//
	// **SCIM++ Properties:**
	// * type: string
	// * mutability: immutable
	// * returned: default
	// * required: true
	DbPassword pulumi.StringInput
	// Description
	//
	// **Added In:** 2109020413
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * type: string
	// * mutability: readWrite
	// * required: false
	// * returned: default
	Description pulumi.StringPtrInput
	// When the user credential expires.
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: dateTime
	// * uniqueness: none
	ExpiresOn pulumi.StringPtrInput
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringInput
	// The user's OCID.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: always
	// * type: string
	// * uniqueness: none
	Ocid pulumi.StringPtrInput
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayInput
	// User credential status
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: never
	// * type: string
	// * uniqueness: none
	Status pulumi.StringPtrInput
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsMyUserDbCredentialTagArrayInput
	// The user linked to the database credential.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCompositeKey: [value]
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	User DomainsMyUserDbCredentialUserPtrInput
}

func (DomainsMyUserDbCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainsMyUserDbCredentialArgs)(nil)).Elem()
}

type DomainsMyUserDbCredentialInput interface {
	pulumi.Input

	ToDomainsMyUserDbCredentialOutput() DomainsMyUserDbCredentialOutput
	ToDomainsMyUserDbCredentialOutputWithContext(ctx context.Context) DomainsMyUserDbCredentialOutput
}

func (*DomainsMyUserDbCredential) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainsMyUserDbCredential)(nil)).Elem()
}

func (i *DomainsMyUserDbCredential) ToDomainsMyUserDbCredentialOutput() DomainsMyUserDbCredentialOutput {
	return i.ToDomainsMyUserDbCredentialOutputWithContext(context.Background())
}

func (i *DomainsMyUserDbCredential) ToDomainsMyUserDbCredentialOutputWithContext(ctx context.Context) DomainsMyUserDbCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsMyUserDbCredentialOutput)
}

func (i *DomainsMyUserDbCredential) ToOutput(ctx context.Context) pulumix.Output[*DomainsMyUserDbCredential] {
	return pulumix.Output[*DomainsMyUserDbCredential]{
		OutputState: i.ToDomainsMyUserDbCredentialOutputWithContext(ctx).OutputState,
	}
}

// DomainsMyUserDbCredentialArrayInput is an input type that accepts DomainsMyUserDbCredentialArray and DomainsMyUserDbCredentialArrayOutput values.
// You can construct a concrete instance of `DomainsMyUserDbCredentialArrayInput` via:
//
//	DomainsMyUserDbCredentialArray{ DomainsMyUserDbCredentialArgs{...} }
type DomainsMyUserDbCredentialArrayInput interface {
	pulumi.Input

	ToDomainsMyUserDbCredentialArrayOutput() DomainsMyUserDbCredentialArrayOutput
	ToDomainsMyUserDbCredentialArrayOutputWithContext(context.Context) DomainsMyUserDbCredentialArrayOutput
}

type DomainsMyUserDbCredentialArray []DomainsMyUserDbCredentialInput

func (DomainsMyUserDbCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainsMyUserDbCredential)(nil)).Elem()
}

func (i DomainsMyUserDbCredentialArray) ToDomainsMyUserDbCredentialArrayOutput() DomainsMyUserDbCredentialArrayOutput {
	return i.ToDomainsMyUserDbCredentialArrayOutputWithContext(context.Background())
}

func (i DomainsMyUserDbCredentialArray) ToDomainsMyUserDbCredentialArrayOutputWithContext(ctx context.Context) DomainsMyUserDbCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsMyUserDbCredentialArrayOutput)
}

func (i DomainsMyUserDbCredentialArray) ToOutput(ctx context.Context) pulumix.Output[[]*DomainsMyUserDbCredential] {
	return pulumix.Output[[]*DomainsMyUserDbCredential]{
		OutputState: i.ToDomainsMyUserDbCredentialArrayOutputWithContext(ctx).OutputState,
	}
}

// DomainsMyUserDbCredentialMapInput is an input type that accepts DomainsMyUserDbCredentialMap and DomainsMyUserDbCredentialMapOutput values.
// You can construct a concrete instance of `DomainsMyUserDbCredentialMapInput` via:
//
//	DomainsMyUserDbCredentialMap{ "key": DomainsMyUserDbCredentialArgs{...} }
type DomainsMyUserDbCredentialMapInput interface {
	pulumi.Input

	ToDomainsMyUserDbCredentialMapOutput() DomainsMyUserDbCredentialMapOutput
	ToDomainsMyUserDbCredentialMapOutputWithContext(context.Context) DomainsMyUserDbCredentialMapOutput
}

type DomainsMyUserDbCredentialMap map[string]DomainsMyUserDbCredentialInput

func (DomainsMyUserDbCredentialMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainsMyUserDbCredential)(nil)).Elem()
}

func (i DomainsMyUserDbCredentialMap) ToDomainsMyUserDbCredentialMapOutput() DomainsMyUserDbCredentialMapOutput {
	return i.ToDomainsMyUserDbCredentialMapOutputWithContext(context.Background())
}

func (i DomainsMyUserDbCredentialMap) ToDomainsMyUserDbCredentialMapOutputWithContext(ctx context.Context) DomainsMyUserDbCredentialMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsMyUserDbCredentialMapOutput)
}

func (i DomainsMyUserDbCredentialMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*DomainsMyUserDbCredential] {
	return pulumix.Output[map[string]*DomainsMyUserDbCredential]{
		OutputState: i.ToDomainsMyUserDbCredentialMapOutputWithContext(ctx).OutputState,
	}
}

type DomainsMyUserDbCredentialOutput struct{ *pulumi.OutputState }

func (DomainsMyUserDbCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainsMyUserDbCredential)(nil)).Elem()
}

func (o DomainsMyUserDbCredentialOutput) ToDomainsMyUserDbCredentialOutput() DomainsMyUserDbCredentialOutput {
	return o
}

func (o DomainsMyUserDbCredentialOutput) ToDomainsMyUserDbCredentialOutputWithContext(ctx context.Context) DomainsMyUserDbCredentialOutput {
	return o
}

func (o DomainsMyUserDbCredentialOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainsMyUserDbCredential] {
	return pulumix.Output[*DomainsMyUserDbCredential]{
		OutputState: o.OutputState,
	}
}

// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
func (o DomainsMyUserDbCredentialOutput) Authorization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsMyUserDbCredential) pulumi.StringPtrOutput { return v.Authorization }).(pulumi.StringPtrOutput)
}

// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsMyUserDbCredentialOutput) CompartmentOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsMyUserDbCredential) pulumi.StringOutput { return v.CompartmentOcid }).(pulumi.StringOutput)
}

// The user's database password.
//
// **SCIM++ Properties:**
// * type: string
// * mutability: immutable
// * returned: default
// * required: true
func (o DomainsMyUserDbCredentialOutput) DbPassword() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsMyUserDbCredential) pulumi.StringOutput { return v.DbPassword }).(pulumi.StringOutput)
}

// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: boolean
// * uniqueness: none
func (o DomainsMyUserDbCredentialOutput) DeleteInProgress() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsMyUserDbCredential) pulumi.BoolOutput { return v.DeleteInProgress }).(pulumi.BoolOutput)
}

// Description
//
// **Added In:** 2109020413
//
// **SCIM++ Properties:**
// * caseExact: false
// * type: string
// * mutability: readWrite
// * required: false
// * returned: default
func (o DomainsMyUserDbCredentialOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsMyUserDbCredential) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsMyUserDbCredentialOutput) DomainOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsMyUserDbCredential) pulumi.StringOutput { return v.DomainOcid }).(pulumi.StringOutput)
}

// (Updatable) Indicates that the database password has expired.
//
// **SCIM++ Properties:**
// * type: boolean
// * mutability: readOnly
// * returned: default
func (o DomainsMyUserDbCredentialOutput) Expired() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsMyUserDbCredential) pulumi.BoolOutput { return v.Expired }).(pulumi.BoolOutput)
}

// When the user credential expires.
//
// **Added In:** 2109090424
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: immutable
// * required: false
// * returned: default
// * type: dateTime
// * uniqueness: none
func (o DomainsMyUserDbCredentialOutput) ExpiresOn() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsMyUserDbCredential) pulumi.StringOutput { return v.ExpiresOn }).(pulumi.StringOutput)
}

// (Updatable) The User or App who created the Resource
//
// **SCIM++ Properties:**
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: true
// * returned: default
// * type: complex
func (o DomainsMyUserDbCredentialOutput) IdcsCreatedBies() DomainsMyUserDbCredentialIdcsCreatedByArrayOutput {
	return o.ApplyT(func(v *DomainsMyUserDbCredential) DomainsMyUserDbCredentialIdcsCreatedByArrayOutput {
		return v.IdcsCreatedBies
	}).(DomainsMyUserDbCredentialIdcsCreatedByArrayOutput)
}

// The basic endpoint for the identity domain
func (o DomainsMyUserDbCredentialOutput) IdcsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsMyUserDbCredential) pulumi.StringOutput { return v.IdcsEndpoint }).(pulumi.StringOutput)
}

// (Updatable) The User or App who modified the Resource
//
// **SCIM++ Properties:**
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: complex
func (o DomainsMyUserDbCredentialOutput) IdcsLastModifiedBies() DomainsMyUserDbCredentialIdcsLastModifiedByArrayOutput {
	return o.ApplyT(func(v *DomainsMyUserDbCredential) DomainsMyUserDbCredentialIdcsLastModifiedByArrayOutput {
		return v.IdcsLastModifiedBies
	}).(DomainsMyUserDbCredentialIdcsLastModifiedByArrayOutput)
}

// (Updatable) The release number when the resource was upgraded.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: request
// * type: string
// * uniqueness: none
func (o DomainsMyUserDbCredentialOutput) IdcsLastUpgradedInRelease() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsMyUserDbCredential) pulumi.StringOutput { return v.IdcsLastUpgradedInRelease }).(pulumi.StringOutput)
}

// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
//
// **SCIM++ Properties:**
// * idcsSearchable: false
// * multiValued: true
// * mutability: readOnly
// * required: false
// * returned: request
// * type: string
// * uniqueness: none
func (o DomainsMyUserDbCredentialOutput) IdcsPreventedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsMyUserDbCredential) pulumi.StringArrayOutput { return v.IdcsPreventedOperations }).(pulumi.StringArrayOutput)
}

// (Updatable) A DateTime that specifies the date and time when the current database password was set.
//
// **SCIM++ Properties:**
// * type: dateTime
// * mutability: readOnly
// * returned: default
func (o DomainsMyUserDbCredentialOutput) LastSetDate() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsMyUserDbCredential) pulumi.StringOutput { return v.LastSetDate }).(pulumi.StringOutput)
}

// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
// * type: complex
func (o DomainsMyUserDbCredentialOutput) Metas() DomainsMyUserDbCredentialMetaArrayOutput {
	return o.ApplyT(func(v *DomainsMyUserDbCredential) DomainsMyUserDbCredentialMetaArrayOutput { return v.Metas }).(DomainsMyUserDbCredentialMetaArrayOutput)
}

// (Updatable) The user's database password with mixed salt.
//
// **SCIM++ Properties:**
// * type: string
// * mutability: readOnly
// * returned: default
// * required: false
func (o DomainsMyUserDbCredentialOutput) MixedDbPassword() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsMyUserDbCredential) pulumi.StringOutput { return v.MixedDbPassword }).(pulumi.StringOutput)
}

// (Updatable) The mixed salt of the password.
//
// **SCIM++ Properties:**
// * type: string
// * mutability: readOnly
// * returned: default
// * required: false
func (o DomainsMyUserDbCredentialOutput) MixedSalt() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsMyUserDbCredential) pulumi.StringOutput { return v.MixedSalt }).(pulumi.StringOutput)
}

// (Updatable) The username.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsMyUserDbCredentialOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsMyUserDbCredential) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The user's OCID.
//
// **SCIM++ Properties:**
// * caseExact: true
// * idcsSearchable: true
// * multiValued: false
// * mutability: immutable
// * required: false
// * returned: always
// * type: string
// * uniqueness: none
func (o DomainsMyUserDbCredentialOutput) Ocid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsMyUserDbCredential) pulumi.StringOutput { return v.Ocid }).(pulumi.StringOutput)
}

// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
func (o DomainsMyUserDbCredentialOutput) ResourceTypeSchemaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsMyUserDbCredential) pulumi.StringPtrOutput { return v.ResourceTypeSchemaVersion }).(pulumi.StringPtrOutput)
}

// (Updatable) The salt of the password.
//
// **SCIM++ Properties:**
// * type: string
// * mutability: readOnly
// * returned: default
// * required: false
func (o DomainsMyUserDbCredentialOutput) Salt() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsMyUserDbCredential) pulumi.StringOutput { return v.Salt }).(pulumi.StringOutput)
}

// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: true
// * mutability: readWrite
// * required: true
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsMyUserDbCredentialOutput) Schemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsMyUserDbCredential) pulumi.StringArrayOutput { return v.Schemas }).(pulumi.StringArrayOutput)
}

// User credential status
//
// **Added In:** 2109090424
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readWrite
// * required: false
// * returned: never
// * type: string
// * uniqueness: none
func (o DomainsMyUserDbCredentialOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsMyUserDbCredential) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// A list of tags on this resource.
//
// **SCIM++ Properties:**
// * idcsCompositeKey: [key, value]
// * idcsSearchable: true
// * multiValued: true
// * mutability: readWrite
// * required: false
// * returned: request
// * type: complex
// * uniqueness: none
func (o DomainsMyUserDbCredentialOutput) Tags() DomainsMyUserDbCredentialTagArrayOutput {
	return o.ApplyT(func(v *DomainsMyUserDbCredential) DomainsMyUserDbCredentialTagArrayOutput { return v.Tags }).(DomainsMyUserDbCredentialTagArrayOutput)
}

// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsMyUserDbCredentialOutput) TenancyOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsMyUserDbCredential) pulumi.StringOutput { return v.TenancyOcid }).(pulumi.StringOutput)
}

// The user linked to the database credential.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsCompositeKey: [value]
// * idcsSearchable: true
// * multiValued: false
// * mutability: immutable
// * required: false
// * returned: default
// * type: complex
// * uniqueness: none
func (o DomainsMyUserDbCredentialOutput) User() DomainsMyUserDbCredentialUserOutput {
	return o.ApplyT(func(v *DomainsMyUserDbCredential) DomainsMyUserDbCredentialUserOutput { return v.User }).(DomainsMyUserDbCredentialUserOutput)
}

type DomainsMyUserDbCredentialArrayOutput struct{ *pulumi.OutputState }

func (DomainsMyUserDbCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainsMyUserDbCredential)(nil)).Elem()
}

func (o DomainsMyUserDbCredentialArrayOutput) ToDomainsMyUserDbCredentialArrayOutput() DomainsMyUserDbCredentialArrayOutput {
	return o
}

func (o DomainsMyUserDbCredentialArrayOutput) ToDomainsMyUserDbCredentialArrayOutputWithContext(ctx context.Context) DomainsMyUserDbCredentialArrayOutput {
	return o
}

func (o DomainsMyUserDbCredentialArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*DomainsMyUserDbCredential] {
	return pulumix.Output[[]*DomainsMyUserDbCredential]{
		OutputState: o.OutputState,
	}
}

func (o DomainsMyUserDbCredentialArrayOutput) Index(i pulumi.IntInput) DomainsMyUserDbCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DomainsMyUserDbCredential {
		return vs[0].([]*DomainsMyUserDbCredential)[vs[1].(int)]
	}).(DomainsMyUserDbCredentialOutput)
}

type DomainsMyUserDbCredentialMapOutput struct{ *pulumi.OutputState }

func (DomainsMyUserDbCredentialMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainsMyUserDbCredential)(nil)).Elem()
}

func (o DomainsMyUserDbCredentialMapOutput) ToDomainsMyUserDbCredentialMapOutput() DomainsMyUserDbCredentialMapOutput {
	return o
}

func (o DomainsMyUserDbCredentialMapOutput) ToDomainsMyUserDbCredentialMapOutputWithContext(ctx context.Context) DomainsMyUserDbCredentialMapOutput {
	return o
}

func (o DomainsMyUserDbCredentialMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*DomainsMyUserDbCredential] {
	return pulumix.Output[map[string]*DomainsMyUserDbCredential]{
		OutputState: o.OutputState,
	}
}

func (o DomainsMyUserDbCredentialMapOutput) MapIndex(k pulumi.StringInput) DomainsMyUserDbCredentialOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DomainsMyUserDbCredential {
		return vs[0].(map[string]*DomainsMyUserDbCredential)[vs[1].(string)]
	}).(DomainsMyUserDbCredentialOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsMyUserDbCredentialInput)(nil)).Elem(), &DomainsMyUserDbCredential{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsMyUserDbCredentialArrayInput)(nil)).Elem(), DomainsMyUserDbCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsMyUserDbCredentialMapInput)(nil)).Elem(), DomainsMyUserDbCredentialMap{})
	pulumi.RegisterOutputType(DomainsMyUserDbCredentialOutput{})
	pulumi.RegisterOutputType(DomainsMyUserDbCredentialArrayOutput{})
	pulumi.RegisterOutputType(DomainsMyUserDbCredentialMapOutput{})
}
