// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Notification Setting resource in Oracle Cloud Infrastructure Identity Domains service.
//
// # Replace Notification Settings
//
// ## Import
//
// NotificationSettings can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Identity/domainsNotificationSetting:DomainsNotificationSetting test_notification_setting "idcsEndpoint/{idcsEndpoint}/notificationSettings/{notificationSettingId}"
// ```
type DomainsNotificationSetting struct {
	pulumi.CustomResourceState

	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayOutput `pulumi:"attributeSets"`
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrOutput `pulumi:"attributes"`
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrOutput `pulumi:"authorization"`
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid pulumi.StringOutput `pulumi:"compartmentOcid"`
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress pulumi.BoolOutput `pulumi:"deleteInProgress"`
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid pulumi.StringOutput `pulumi:"domainOcid"`
	// (Updatable) Event settings
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCompositeKey: [eventId]
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: complex
	// * uniqueness: none
	EventSettings DomainsNotificationSettingEventSettingArrayOutput `pulumi:"eventSettings"`
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	ExternalId pulumi.StringOutput `pulumi:"externalId"`
	// (Updatable) From email address to be used in the notification emails
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: always
	// * type: complex
	// * uniqueness: none
	FromEmailAddress DomainsNotificationSettingFromEmailAddressOutput `pulumi:"fromEmailAddress"`
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies DomainsNotificationSettingIdcsCreatedByArrayOutput `pulumi:"idcsCreatedBies"`
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringOutput `pulumi:"idcsEndpoint"`
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies DomainsNotificationSettingIdcsLastModifiedByArrayOutput `pulumi:"idcsLastModifiedBies"`
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease pulumi.StringOutput `pulumi:"idcsLastUpgradedInRelease"`
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations pulumi.StringArrayOutput `pulumi:"idcsPreventedOperations"`
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas DomainsNotificationSettingMetaArrayOutput `pulumi:"metas"`
	// (Updatable) Tenant level settings for the notification service
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	NotificationEnabled pulumi.BoolOutput `pulumi:"notificationEnabled"`
	// ID of the resource
	NotificationSettingId pulumi.StringOutput `pulumi:"notificationSettingId"`
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid pulumi.StringOutput `pulumi:"ocid"`
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrOutput `pulumi:"resourceTypeSchemaVersion"`
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayOutput `pulumi:"schemas"`
	// (Updatable) If true and admin changed user's primary email, send user's profile changed email to old and new primary email address.
	//
	// **Added In:** 20.1.3
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	SendNotificationToOldAndNewPrimaryEmailsWhenAdminChangesPrimaryEmail pulumi.BoolOutput `pulumi:"sendNotificationToOldAndNewPrimaryEmailsWhenAdminChangesPrimaryEmail"`
	// (Updatable) Indicates whether to allow notifications on a secondary email.
	//
	// **Deprecated Since: 19.2.1**
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	SendNotificationsToSecondaryEmail pulumi.BoolOutput `pulumi:"sendNotificationsToSecondaryEmail"`
	// (Updatable) A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsNotificationSettingTagArrayOutput `pulumi:"tags"`
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	TenancyOcid pulumi.StringOutput `pulumi:"tenancyOcid"`
	// (Updatable) Specify if the notification service is in test mode
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	TestModeEnabled pulumi.BoolOutput `pulumi:"testModeEnabled"`
	// (Updatable) List of the test recipient email addresses
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TestRecipients pulumi.StringArrayOutput `pulumi:"testRecipients"`
}

// NewDomainsNotificationSetting registers a new resource with the given unique name, arguments, and options.
func NewDomainsNotificationSetting(ctx *pulumi.Context,
	name string, args *DomainsNotificationSettingArgs, opts ...pulumi.ResourceOption) (*DomainsNotificationSetting, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EventSettings == nil {
		return nil, errors.New("invalid value for required argument 'EventSettings'")
	}
	if args.FromEmailAddress == nil {
		return nil, errors.New("invalid value for required argument 'FromEmailAddress'")
	}
	if args.IdcsEndpoint == nil {
		return nil, errors.New("invalid value for required argument 'IdcsEndpoint'")
	}
	if args.NotificationEnabled == nil {
		return nil, errors.New("invalid value for required argument 'NotificationEnabled'")
	}
	if args.NotificationSettingId == nil {
		return nil, errors.New("invalid value for required argument 'NotificationSettingId'")
	}
	if args.Schemas == nil {
		return nil, errors.New("invalid value for required argument 'Schemas'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DomainsNotificationSetting
	err := ctx.RegisterResource("oci:Identity/domainsNotificationSetting:DomainsNotificationSetting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomainsNotificationSetting gets an existing DomainsNotificationSetting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainsNotificationSetting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainsNotificationSettingState, opts ...pulumi.ResourceOption) (*DomainsNotificationSetting, error) {
	var resource DomainsNotificationSetting
	err := ctx.ReadResource("oci:Identity/domainsNotificationSetting:DomainsNotificationSetting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DomainsNotificationSetting resources.
type domainsNotificationSettingState struct {
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets []string `pulumi:"attributeSets"`
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes *string `pulumi:"attributes"`
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid *string `pulumi:"compartmentOcid"`
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress *bool `pulumi:"deleteInProgress"`
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid *string `pulumi:"domainOcid"`
	// (Updatable) Event settings
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCompositeKey: [eventId]
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: complex
	// * uniqueness: none
	EventSettings []DomainsNotificationSettingEventSetting `pulumi:"eventSettings"`
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	ExternalId *string `pulumi:"externalId"`
	// (Updatable) From email address to be used in the notification emails
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: always
	// * type: complex
	// * uniqueness: none
	FromEmailAddress *DomainsNotificationSettingFromEmailAddress `pulumi:"fromEmailAddress"`
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies []DomainsNotificationSettingIdcsCreatedBy `pulumi:"idcsCreatedBies"`
	// The basic endpoint for the identity domain
	IdcsEndpoint *string `pulumi:"idcsEndpoint"`
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies []DomainsNotificationSettingIdcsLastModifiedBy `pulumi:"idcsLastModifiedBies"`
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease *string `pulumi:"idcsLastUpgradedInRelease"`
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations []string `pulumi:"idcsPreventedOperations"`
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas []DomainsNotificationSettingMeta `pulumi:"metas"`
	// (Updatable) Tenant level settings for the notification service
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	NotificationEnabled *bool `pulumi:"notificationEnabled"`
	// ID of the resource
	NotificationSettingId *string `pulumi:"notificationSettingId"`
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid *string `pulumi:"ocid"`
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas []string `pulumi:"schemas"`
	// (Updatable) If true and admin changed user's primary email, send user's profile changed email to old and new primary email address.
	//
	// **Added In:** 20.1.3
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	SendNotificationToOldAndNewPrimaryEmailsWhenAdminChangesPrimaryEmail *bool `pulumi:"sendNotificationToOldAndNewPrimaryEmailsWhenAdminChangesPrimaryEmail"`
	// (Updatable) Indicates whether to allow notifications on a secondary email.
	//
	// **Deprecated Since: 19.2.1**
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	SendNotificationsToSecondaryEmail *bool `pulumi:"sendNotificationsToSecondaryEmail"`
	// (Updatable) A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags []DomainsNotificationSettingTag `pulumi:"tags"`
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	TenancyOcid *string `pulumi:"tenancyOcid"`
	// (Updatable) Specify if the notification service is in test mode
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	TestModeEnabled *bool `pulumi:"testModeEnabled"`
	// (Updatable) List of the test recipient email addresses
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TestRecipients []string `pulumi:"testRecipients"`
}

type DomainsNotificationSettingState struct {
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayInput
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrInput
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid pulumi.StringPtrInput
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress pulumi.BoolPtrInput
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid pulumi.StringPtrInput
	// (Updatable) Event settings
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCompositeKey: [eventId]
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: complex
	// * uniqueness: none
	EventSettings DomainsNotificationSettingEventSettingArrayInput
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	ExternalId pulumi.StringPtrInput
	// (Updatable) From email address to be used in the notification emails
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: always
	// * type: complex
	// * uniqueness: none
	FromEmailAddress DomainsNotificationSettingFromEmailAddressPtrInput
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies DomainsNotificationSettingIdcsCreatedByArrayInput
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringPtrInput
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies DomainsNotificationSettingIdcsLastModifiedByArrayInput
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease pulumi.StringPtrInput
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations pulumi.StringArrayInput
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas DomainsNotificationSettingMetaArrayInput
	// (Updatable) Tenant level settings for the notification service
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	NotificationEnabled pulumi.BoolPtrInput
	// ID of the resource
	NotificationSettingId pulumi.StringPtrInput
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid pulumi.StringPtrInput
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayInput
	// (Updatable) If true and admin changed user's primary email, send user's profile changed email to old and new primary email address.
	//
	// **Added In:** 20.1.3
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	SendNotificationToOldAndNewPrimaryEmailsWhenAdminChangesPrimaryEmail pulumi.BoolPtrInput
	// (Updatable) Indicates whether to allow notifications on a secondary email.
	//
	// **Deprecated Since: 19.2.1**
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	SendNotificationsToSecondaryEmail pulumi.BoolPtrInput
	// (Updatable) A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsNotificationSettingTagArrayInput
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	TenancyOcid pulumi.StringPtrInput
	// (Updatable) Specify if the notification service is in test mode
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	TestModeEnabled pulumi.BoolPtrInput
	// (Updatable) List of the test recipient email addresses
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TestRecipients pulumi.StringArrayInput
}

func (DomainsNotificationSettingState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainsNotificationSettingState)(nil)).Elem()
}

type domainsNotificationSettingArgs struct {
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets []string `pulumi:"attributeSets"`
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes *string `pulumi:"attributes"`
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// (Updatable) Event settings
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCompositeKey: [eventId]
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: complex
	// * uniqueness: none
	EventSettings []DomainsNotificationSettingEventSetting `pulumi:"eventSettings"`
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	ExternalId *string `pulumi:"externalId"`
	// (Updatable) From email address to be used in the notification emails
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: always
	// * type: complex
	// * uniqueness: none
	FromEmailAddress DomainsNotificationSettingFromEmailAddress `pulumi:"fromEmailAddress"`
	// The basic endpoint for the identity domain
	IdcsEndpoint string `pulumi:"idcsEndpoint"`
	// (Updatable) Tenant level settings for the notification service
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	NotificationEnabled bool `pulumi:"notificationEnabled"`
	// ID of the resource
	NotificationSettingId string `pulumi:"notificationSettingId"`
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid *string `pulumi:"ocid"`
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas []string `pulumi:"schemas"`
	// (Updatable) If true and admin changed user's primary email, send user's profile changed email to old and new primary email address.
	//
	// **Added In:** 20.1.3
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	SendNotificationToOldAndNewPrimaryEmailsWhenAdminChangesPrimaryEmail *bool `pulumi:"sendNotificationToOldAndNewPrimaryEmailsWhenAdminChangesPrimaryEmail"`
	// (Updatable) Indicates whether to allow notifications on a secondary email.
	//
	// **Deprecated Since: 19.2.1**
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	SendNotificationsToSecondaryEmail *bool `pulumi:"sendNotificationsToSecondaryEmail"`
	// (Updatable) A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags []DomainsNotificationSettingTag `pulumi:"tags"`
	// (Updatable) Specify if the notification service is in test mode
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	TestModeEnabled *bool `pulumi:"testModeEnabled"`
	// (Updatable) List of the test recipient email addresses
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TestRecipients []string `pulumi:"testRecipients"`
}

// The set of arguments for constructing a DomainsNotificationSetting resource.
type DomainsNotificationSettingArgs struct {
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayInput
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrInput
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput
	// (Updatable) Event settings
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCompositeKey: [eventId]
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: complex
	// * uniqueness: none
	EventSettings DomainsNotificationSettingEventSettingArrayInput
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	ExternalId pulumi.StringPtrInput
	// (Updatable) From email address to be used in the notification emails
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: always
	// * type: complex
	// * uniqueness: none
	FromEmailAddress DomainsNotificationSettingFromEmailAddressInput
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringInput
	// (Updatable) Tenant level settings for the notification service
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	NotificationEnabled pulumi.BoolInput
	// ID of the resource
	NotificationSettingId pulumi.StringInput
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid pulumi.StringPtrInput
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayInput
	// (Updatable) If true and admin changed user's primary email, send user's profile changed email to old and new primary email address.
	//
	// **Added In:** 20.1.3
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	SendNotificationToOldAndNewPrimaryEmailsWhenAdminChangesPrimaryEmail pulumi.BoolPtrInput
	// (Updatable) Indicates whether to allow notifications on a secondary email.
	//
	// **Deprecated Since: 19.2.1**
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	SendNotificationsToSecondaryEmail pulumi.BoolPtrInput
	// (Updatable) A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsNotificationSettingTagArrayInput
	// (Updatable) Specify if the notification service is in test mode
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	TestModeEnabled pulumi.BoolPtrInput
	// (Updatable) List of the test recipient email addresses
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TestRecipients pulumi.StringArrayInput
}

func (DomainsNotificationSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainsNotificationSettingArgs)(nil)).Elem()
}

type DomainsNotificationSettingInput interface {
	pulumi.Input

	ToDomainsNotificationSettingOutput() DomainsNotificationSettingOutput
	ToDomainsNotificationSettingOutputWithContext(ctx context.Context) DomainsNotificationSettingOutput
}

func (*DomainsNotificationSetting) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainsNotificationSetting)(nil)).Elem()
}

func (i *DomainsNotificationSetting) ToDomainsNotificationSettingOutput() DomainsNotificationSettingOutput {
	return i.ToDomainsNotificationSettingOutputWithContext(context.Background())
}

func (i *DomainsNotificationSetting) ToDomainsNotificationSettingOutputWithContext(ctx context.Context) DomainsNotificationSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsNotificationSettingOutput)
}

// DomainsNotificationSettingArrayInput is an input type that accepts DomainsNotificationSettingArray and DomainsNotificationSettingArrayOutput values.
// You can construct a concrete instance of `DomainsNotificationSettingArrayInput` via:
//
//	DomainsNotificationSettingArray{ DomainsNotificationSettingArgs{...} }
type DomainsNotificationSettingArrayInput interface {
	pulumi.Input

	ToDomainsNotificationSettingArrayOutput() DomainsNotificationSettingArrayOutput
	ToDomainsNotificationSettingArrayOutputWithContext(context.Context) DomainsNotificationSettingArrayOutput
}

type DomainsNotificationSettingArray []DomainsNotificationSettingInput

func (DomainsNotificationSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainsNotificationSetting)(nil)).Elem()
}

func (i DomainsNotificationSettingArray) ToDomainsNotificationSettingArrayOutput() DomainsNotificationSettingArrayOutput {
	return i.ToDomainsNotificationSettingArrayOutputWithContext(context.Background())
}

func (i DomainsNotificationSettingArray) ToDomainsNotificationSettingArrayOutputWithContext(ctx context.Context) DomainsNotificationSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsNotificationSettingArrayOutput)
}

// DomainsNotificationSettingMapInput is an input type that accepts DomainsNotificationSettingMap and DomainsNotificationSettingMapOutput values.
// You can construct a concrete instance of `DomainsNotificationSettingMapInput` via:
//
//	DomainsNotificationSettingMap{ "key": DomainsNotificationSettingArgs{...} }
type DomainsNotificationSettingMapInput interface {
	pulumi.Input

	ToDomainsNotificationSettingMapOutput() DomainsNotificationSettingMapOutput
	ToDomainsNotificationSettingMapOutputWithContext(context.Context) DomainsNotificationSettingMapOutput
}

type DomainsNotificationSettingMap map[string]DomainsNotificationSettingInput

func (DomainsNotificationSettingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainsNotificationSetting)(nil)).Elem()
}

func (i DomainsNotificationSettingMap) ToDomainsNotificationSettingMapOutput() DomainsNotificationSettingMapOutput {
	return i.ToDomainsNotificationSettingMapOutputWithContext(context.Background())
}

func (i DomainsNotificationSettingMap) ToDomainsNotificationSettingMapOutputWithContext(ctx context.Context) DomainsNotificationSettingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsNotificationSettingMapOutput)
}

type DomainsNotificationSettingOutput struct{ *pulumi.OutputState }

func (DomainsNotificationSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainsNotificationSetting)(nil)).Elem()
}

func (o DomainsNotificationSettingOutput) ToDomainsNotificationSettingOutput() DomainsNotificationSettingOutput {
	return o
}

func (o DomainsNotificationSettingOutput) ToDomainsNotificationSettingOutputWithContext(ctx context.Context) DomainsNotificationSettingOutput {
	return o
}

// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
func (o DomainsNotificationSettingOutput) AttributeSets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsNotificationSetting) pulumi.StringArrayOutput { return v.AttributeSets }).(pulumi.StringArrayOutput)
}

// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
func (o DomainsNotificationSettingOutput) Attributes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsNotificationSetting) pulumi.StringPtrOutput { return v.Attributes }).(pulumi.StringPtrOutput)
}

// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
func (o DomainsNotificationSettingOutput) Authorization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsNotificationSetting) pulumi.StringPtrOutput { return v.Authorization }).(pulumi.StringPtrOutput)
}

// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsNotificationSettingOutput) CompartmentOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsNotificationSetting) pulumi.StringOutput { return v.CompartmentOcid }).(pulumi.StringOutput)
}

// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: boolean
// * uniqueness: none
func (o DomainsNotificationSettingOutput) DeleteInProgress() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsNotificationSetting) pulumi.BoolOutput { return v.DeleteInProgress }).(pulumi.BoolOutput)
}

// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsNotificationSettingOutput) DomainOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsNotificationSetting) pulumi.StringOutput { return v.DomainOcid }).(pulumi.StringOutput)
}

// (Updatable) Event settings
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsCompositeKey: [eventId]
// * idcsSearchable: false
// * multiValued: true
// * mutability: readWrite
// * required: true
// * returned: default
// * type: complex
// * uniqueness: none
func (o DomainsNotificationSettingOutput) EventSettings() DomainsNotificationSettingEventSettingArrayOutput {
	return o.ApplyT(func(v *DomainsNotificationSetting) DomainsNotificationSettingEventSettingArrayOutput {
		return v.EventSettings
	}).(DomainsNotificationSettingEventSettingArrayOutput)
}

// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
//
// **SCIM++ Properties:**
// * caseExact: false
// * multiValued: false
// * mutability: readWrite
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsNotificationSettingOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsNotificationSetting) pulumi.StringOutput { return v.ExternalId }).(pulumi.StringOutput)
}

// (Updatable) From email address to be used in the notification emails
//
// **SCIM++ Properties:**
// * caseExact: false
// * multiValued: false
// * mutability: readWrite
// * required: true
// * returned: always
// * type: complex
// * uniqueness: none
func (o DomainsNotificationSettingOutput) FromEmailAddress() DomainsNotificationSettingFromEmailAddressOutput {
	return o.ApplyT(func(v *DomainsNotificationSetting) DomainsNotificationSettingFromEmailAddressOutput {
		return v.FromEmailAddress
	}).(DomainsNotificationSettingFromEmailAddressOutput)
}

// (Updatable) The User or App who created the Resource
//
// **SCIM++ Properties:**
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: true
// * returned: default
// * type: complex
func (o DomainsNotificationSettingOutput) IdcsCreatedBies() DomainsNotificationSettingIdcsCreatedByArrayOutput {
	return o.ApplyT(func(v *DomainsNotificationSetting) DomainsNotificationSettingIdcsCreatedByArrayOutput {
		return v.IdcsCreatedBies
	}).(DomainsNotificationSettingIdcsCreatedByArrayOutput)
}

// The basic endpoint for the identity domain
func (o DomainsNotificationSettingOutput) IdcsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsNotificationSetting) pulumi.StringOutput { return v.IdcsEndpoint }).(pulumi.StringOutput)
}

// (Updatable) The User or App who modified the Resource
//
// **SCIM++ Properties:**
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: complex
func (o DomainsNotificationSettingOutput) IdcsLastModifiedBies() DomainsNotificationSettingIdcsLastModifiedByArrayOutput {
	return o.ApplyT(func(v *DomainsNotificationSetting) DomainsNotificationSettingIdcsLastModifiedByArrayOutput {
		return v.IdcsLastModifiedBies
	}).(DomainsNotificationSettingIdcsLastModifiedByArrayOutput)
}

// (Updatable) The release number when the resource was upgraded.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: request
// * type: string
// * uniqueness: none
func (o DomainsNotificationSettingOutput) IdcsLastUpgradedInRelease() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsNotificationSetting) pulumi.StringOutput { return v.IdcsLastUpgradedInRelease }).(pulumi.StringOutput)
}

// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
//
// **SCIM++ Properties:**
// * idcsSearchable: false
// * multiValued: true
// * mutability: readOnly
// * required: false
// * returned: request
// * type: string
// * uniqueness: none
func (o DomainsNotificationSettingOutput) IdcsPreventedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsNotificationSetting) pulumi.StringArrayOutput { return v.IdcsPreventedOperations }).(pulumi.StringArrayOutput)
}

// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
// * type: complex
func (o DomainsNotificationSettingOutput) Metas() DomainsNotificationSettingMetaArrayOutput {
	return o.ApplyT(func(v *DomainsNotificationSetting) DomainsNotificationSettingMetaArrayOutput { return v.Metas }).(DomainsNotificationSettingMetaArrayOutput)
}

// (Updatable) Tenant level settings for the notification service
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readWrite
// * required: true
// * returned: default
// * type: boolean
// * uniqueness: none
func (o DomainsNotificationSettingOutput) NotificationEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsNotificationSetting) pulumi.BoolOutput { return v.NotificationEnabled }).(pulumi.BoolOutput)
}

// ID of the resource
func (o DomainsNotificationSettingOutput) NotificationSettingId() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsNotificationSetting) pulumi.StringOutput { return v.NotificationSettingId }).(pulumi.StringOutput)
}

// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
//
// **SCIM++ Properties:**
// * caseExact: true
// * idcsSearchable: true
// * multiValued: false
// * mutability: immutable
// * required: false
// * returned: default
// * type: string
// * uniqueness: global
func (o DomainsNotificationSettingOutput) Ocid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsNotificationSetting) pulumi.StringOutput { return v.Ocid }).(pulumi.StringOutput)
}

// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
func (o DomainsNotificationSettingOutput) ResourceTypeSchemaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsNotificationSetting) pulumi.StringPtrOutput { return v.ResourceTypeSchemaVersion }).(pulumi.StringPtrOutput)
}

// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: true
// * mutability: readWrite
// * required: true
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsNotificationSettingOutput) Schemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsNotificationSetting) pulumi.StringArrayOutput { return v.Schemas }).(pulumi.StringArrayOutput)
}

// (Updatable) If true and admin changed user's primary email, send user's profile changed email to old and new primary email address.
//
// **Added In:** 20.1.3
//
// **SCIM++ Properties:**
// * caseExact: false
// * multiValued: false
// * mutability: readWrite
// * required: false
// * returned: default
// * type: boolean
// * uniqueness: none
func (o DomainsNotificationSettingOutput) SendNotificationToOldAndNewPrimaryEmailsWhenAdminChangesPrimaryEmail() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsNotificationSetting) pulumi.BoolOutput {
		return v.SendNotificationToOldAndNewPrimaryEmailsWhenAdminChangesPrimaryEmail
	}).(pulumi.BoolOutput)
}

// (Updatable) Indicates whether to allow notifications on a secondary email.
//
// **Deprecated Since: 19.2.1**
//
// **SCIM++ Properties:**
// * caseExact: false
// * multiValued: false
// * mutability: readWrite
// * required: false
// * returned: default
// * type: boolean
// * uniqueness: none
func (o DomainsNotificationSettingOutput) SendNotificationsToSecondaryEmail() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsNotificationSetting) pulumi.BoolOutput { return v.SendNotificationsToSecondaryEmail }).(pulumi.BoolOutput)
}

// (Updatable) A list of tags on this resource.
//
// **SCIM++ Properties:**
// * idcsCompositeKey: [key, value]
// * idcsSearchable: true
// * multiValued: true
// * mutability: readWrite
// * required: false
// * returned: request
// * type: complex
// * uniqueness: none
func (o DomainsNotificationSettingOutput) Tags() DomainsNotificationSettingTagArrayOutput {
	return o.ApplyT(func(v *DomainsNotificationSetting) DomainsNotificationSettingTagArrayOutput { return v.Tags }).(DomainsNotificationSettingTagArrayOutput)
}

// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsNotificationSettingOutput) TenancyOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsNotificationSetting) pulumi.StringOutput { return v.TenancyOcid }).(pulumi.StringOutput)
}

// (Updatable) Specify if the notification service is in test mode
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readWrite
// * required: false
// * returned: default
// * type: boolean
// * uniqueness: none
func (o DomainsNotificationSettingOutput) TestModeEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsNotificationSetting) pulumi.BoolOutput { return v.TestModeEnabled }).(pulumi.BoolOutput)
}

// (Updatable) List of the test recipient email addresses
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: true
// * mutability: readWrite
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o DomainsNotificationSettingOutput) TestRecipients() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsNotificationSetting) pulumi.StringArrayOutput { return v.TestRecipients }).(pulumi.StringArrayOutput)
}

type DomainsNotificationSettingArrayOutput struct{ *pulumi.OutputState }

func (DomainsNotificationSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainsNotificationSetting)(nil)).Elem()
}

func (o DomainsNotificationSettingArrayOutput) ToDomainsNotificationSettingArrayOutput() DomainsNotificationSettingArrayOutput {
	return o
}

func (o DomainsNotificationSettingArrayOutput) ToDomainsNotificationSettingArrayOutputWithContext(ctx context.Context) DomainsNotificationSettingArrayOutput {
	return o
}

func (o DomainsNotificationSettingArrayOutput) Index(i pulumi.IntInput) DomainsNotificationSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DomainsNotificationSetting {
		return vs[0].([]*DomainsNotificationSetting)[vs[1].(int)]
	}).(DomainsNotificationSettingOutput)
}

type DomainsNotificationSettingMapOutput struct{ *pulumi.OutputState }

func (DomainsNotificationSettingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainsNotificationSetting)(nil)).Elem()
}

func (o DomainsNotificationSettingMapOutput) ToDomainsNotificationSettingMapOutput() DomainsNotificationSettingMapOutput {
	return o
}

func (o DomainsNotificationSettingMapOutput) ToDomainsNotificationSettingMapOutputWithContext(ctx context.Context) DomainsNotificationSettingMapOutput {
	return o
}

func (o DomainsNotificationSettingMapOutput) MapIndex(k pulumi.StringInput) DomainsNotificationSettingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DomainsNotificationSetting {
		return vs[0].(map[string]*DomainsNotificationSetting)[vs[1].(string)]
	}).(DomainsNotificationSettingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsNotificationSettingInput)(nil)).Elem(), &DomainsNotificationSetting{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsNotificationSettingArrayInput)(nil)).Elem(), DomainsNotificationSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsNotificationSettingMapInput)(nil)).Elem(), DomainsNotificationSettingMap{})
	pulumi.RegisterOutputType(DomainsNotificationSettingOutput{})
	pulumi.RegisterOutputType(DomainsNotificationSettingArrayOutput{})
	pulumi.RegisterOutputType(DomainsNotificationSettingMapOutput{})
}
