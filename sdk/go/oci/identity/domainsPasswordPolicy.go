// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Password Policy resource in Oracle Cloud Infrastructure Identity Domains service.
//
// # Create a Password Policy
//
// ## Import
//
// PasswordPolicies can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:Identity/domainsPasswordPolicy:DomainsPasswordPolicy test_password_policy "idcsEndpoint/{idcsEndpoint}/passwordPolicies/{passwordPolicyId}"
//
// ```
type DomainsPasswordPolicy struct {
	pulumi.CustomResourceState

	// (Updatable) A String value whose contents indicate a set of characters that can appear, in any sequence, in a password value
	AllowedChars pulumi.StringOutput `pulumi:"allowedChars"`
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayOutput `pulumi:"attributeSets"`
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrOutput `pulumi:"attributes"`
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrOutput `pulumi:"authorization"`
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	CompartmentOcid pulumi.StringOutput `pulumi:"compartmentOcid"`
	// (Updatable) List of password policy rules that have values set. This map of stringKey:stringValue pairs can be used to aid users while setting/resetting password
	ConfiguredPasswordPolicyRules DomainsPasswordPolicyConfiguredPasswordPolicyRuleArrayOutput `pulumi:"configuredPasswordPolicyRules"`
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	DeleteInProgress pulumi.BoolOutput `pulumi:"deleteInProgress"`
	// (Updatable) A String that describes the password policy
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) A delimiter used to separate characters in the dictionary file
	DictionaryDelimiter pulumi.StringOutput `pulumi:"dictionaryDelimiter"`
	// (Updatable) A Reference value that contains the URI of a dictionary of words not allowed to appear within a password value
	DictionaryLocation pulumi.StringOutput `pulumi:"dictionaryLocation"`
	// (Updatable) Indicates whether the password can match a dictionary word
	DictionaryWordDisallowed pulumi.BoolOutput `pulumi:"dictionaryWordDisallowed"`
	// (Updatable) A String value whose contents indicate a set of characters that cannot appear, in any sequence, in a password value
	DisallowedChars pulumi.StringOutput `pulumi:"disallowedChars"`
	// (Updatable) A String value whose contents indicate a set of substrings that cannot appear, in any sequence, in a password value
	DisallowedSubstrings pulumi.StringArrayOutput `pulumi:"disallowedSubstrings"`
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	DomainOcid pulumi.StringOutput `pulumi:"domainOcid"`
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	ExternalId pulumi.StringOutput `pulumi:"externalId"`
	// (Updatable) Indicates a sequence of characters that match the user's first name of given name cannot be the password. Password validation against policy will be ignored if length of first name is less than or equal to 3 characters.
	FirstNameDisallowed pulumi.BoolOutput `pulumi:"firstNameDisallowed"`
	// (Updatable) Indicates whether all of the users should be forced to reset their password on the next login (to comply with new password policy changes)
	ForcePasswordReset pulumi.BoolOutput `pulumi:"forcePasswordReset"`
	// (Updatable) A list of groups that the password policy belongs to.
	Groups DomainsPasswordPolicyGroupArrayOutput `pulumi:"groups"`
	// (Updatable) The User or App who created the Resource
	IdcsCreatedBies DomainsPasswordPolicyIdcsCreatedByArrayOutput `pulumi:"idcsCreatedBies"`
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringOutput `pulumi:"idcsEndpoint"`
	// (Updatable) The User or App who modified the Resource
	IdcsLastModifiedBies DomainsPasswordPolicyIdcsLastModifiedByArrayOutput `pulumi:"idcsLastModifiedBies"`
	// (Updatable) The release number when the resource was upgraded.
	IdcsLastUpgradedInRelease pulumi.StringOutput `pulumi:"idcsLastUpgradedInRelease"`
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	IdcsPreventedOperations pulumi.StringArrayOutput `pulumi:"idcsPreventedOperations"`
	// (Updatable) Indicates a sequence of characters that match the user's last name of given name cannot be the password. Password validation against policy will be ignored if length of last name is less than or equal to 3 characters.
	LastNameDisallowed pulumi.BoolOutput `pulumi:"lastNameDisallowed"`
	// (Updatable) The time period in minutes to lock out a user account when the threshold of invalid login attempts is reached. The available range is from 5 through 1440 minutes (24 hours).
	LockoutDuration pulumi.IntOutput `pulumi:"lockoutDuration"`
	// (Updatable) An integer that represents the maximum number of failed logins before an account is locked
	MaxIncorrectAttempts pulumi.IntOutput `pulumi:"maxIncorrectAttempts"`
	// (Updatable) The maximum password length (in characters). A value of 0 or no value indicates no maximum length restriction.
	MaxLength pulumi.IntOutput `pulumi:"maxLength"`
	// (Updatable) The maximum number of repeated characters allowed in a password.  A value of 0 or no value indicates no such restriction.
	MaxRepeatedChars pulumi.IntOutput `pulumi:"maxRepeatedChars"`
	// (Updatable) The maximum number of special characters in a password.  A value of 0 or no value indicates no maximum special characters restriction.
	MaxSpecialChars pulumi.IntOutput `pulumi:"maxSpecialChars"`
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	Metas DomainsPasswordPolicyMetaArrayOutput `pulumi:"metas"`
	// (Updatable) The minimum number of a combination of alphabetic and numeric characters in a password.  A value of 0 or no value indicates no minimum alphanumeric character restriction.
	MinAlphaNumerals pulumi.IntOutput `pulumi:"minAlphaNumerals"`
	// (Updatable) The minimum number of alphabetic characters in a password.  A value of 0 or no value indicates no minimum alphas restriction.
	MinAlphas pulumi.IntOutput `pulumi:"minAlphas"`
	// (Updatable) The minimum password length (in characters). A value of 0 or no value indicates no minimum length restriction.
	MinLength pulumi.IntOutput `pulumi:"minLength"`
	// (Updatable) The minimum number of lowercase alphabetic characters in a password.  A value of 0 or no value indicates no minimum lowercase restriction.
	MinLowerCase pulumi.IntOutput `pulumi:"minLowerCase"`
	// (Updatable) The minimum number of numeric characters in a password.  A value of 0 or no value indicates no minimum numeric character restriction.
	MinNumerals pulumi.IntOutput `pulumi:"minNumerals"`
	// (Updatable) Minimum time after which the user can resubmit the reset password request
	MinPasswordAge pulumi.IntOutput `pulumi:"minPasswordAge"`
	// (Updatable) The minimum number of special characters in a password. A value of 0 or no value indicates no minimum special characters restriction.
	MinSpecialChars pulumi.IntOutput `pulumi:"minSpecialChars"`
	// (Updatable) The minimum number of unique characters in a password.  A value of 0 or no value indicates no minimum unique characters restriction.
	MinUniqueChars pulumi.IntOutput `pulumi:"minUniqueChars"`
	// (Updatable) The minimum number of uppercase alphabetic characters in a password. A value of 0 or no value indicates no minimum uppercase restriction.
	MinUpperCase pulumi.IntOutput `pulumi:"minUpperCase"`
	// (Updatable) A String that is the name of the policy to display to the user. This is the only mandatory attribute for a password policy.
	Name pulumi.StringOutput `pulumi:"name"`
	// (Updatable) The number of passwords that will be kept in history that may not be used as a password
	NumPasswordsInHistory pulumi.IntOutput `pulumi:"numPasswordsInHistory"`
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	Ocid pulumi.StringOutput `pulumi:"ocid"`
	// (Updatable) An integer indicating the number of days before which the user should be warned about password expiry.
	PasswordExpireWarning pulumi.IntOutput `pulumi:"passwordExpireWarning"`
	// (Updatable) The number of days after which the password expires automatically
	PasswordExpiresAfter pulumi.IntOutput `pulumi:"passwordExpiresAfter"`
	// (Updatable) Indicates whether the password policy is configured as Simple, Standard, or Custom.
	PasswordStrength pulumi.StringOutput `pulumi:"passwordStrength"`
	// (Updatable) Password policy priority
	Priority pulumi.IntOutput `pulumi:"priority"`
	// (Updatable) A String value whose contents indicate a set of characters that must appear, in any sequence, in a password value
	RequiredChars pulumi.StringOutput `pulumi:"requiredChars"`
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrOutput `pulumi:"resourceTypeSchemaVersion"`
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	Schemas pulumi.StringArrayOutput `pulumi:"schemas"`
	// (Updatable) Indicates that the password must begin with an alphabetic character
	StartsWithAlphabet pulumi.BoolOutput `pulumi:"startsWithAlphabet"`
	// (Updatable) A list of tags on this resource.
	Tags DomainsPasswordPolicyTagArrayOutput `pulumi:"tags"`
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	TenancyOcid pulumi.StringOutput `pulumi:"tenancyOcid"`
	// (Updatable) Indicates a sequence of characters that match the username cannot be the password. Password validation against policy will be ignored if length of user name is less than or equal to 3 characters.
	UserNameDisallowed pulumi.BoolOutput `pulumi:"userNameDisallowed"`
}

// NewDomainsPasswordPolicy registers a new resource with the given unique name, arguments, and options.
func NewDomainsPasswordPolicy(ctx *pulumi.Context,
	name string, args *DomainsPasswordPolicyArgs, opts ...pulumi.ResourceOption) (*DomainsPasswordPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IdcsEndpoint == nil {
		return nil, errors.New("invalid value for required argument 'IdcsEndpoint'")
	}
	if args.Schemas == nil {
		return nil, errors.New("invalid value for required argument 'Schemas'")
	}
	if args.PasswordStrength != nil {
		args.PasswordStrength = pulumi.ToSecret(args.PasswordStrength).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"passwordStrength",
	})
	opts = append(opts, secrets)
	var resource DomainsPasswordPolicy
	err := ctx.RegisterResource("oci:Identity/domainsPasswordPolicy:DomainsPasswordPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomainsPasswordPolicy gets an existing DomainsPasswordPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainsPasswordPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainsPasswordPolicyState, opts ...pulumi.ResourceOption) (*DomainsPasswordPolicy, error) {
	var resource DomainsPasswordPolicy
	err := ctx.ReadResource("oci:Identity/domainsPasswordPolicy:DomainsPasswordPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DomainsPasswordPolicy resources.
type domainsPasswordPolicyState struct {
	// (Updatable) A String value whose contents indicate a set of characters that can appear, in any sequence, in a password value
	AllowedChars *string `pulumi:"allowedChars"`
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets []string `pulumi:"attributeSets"`
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes *string `pulumi:"attributes"`
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	CompartmentOcid *string `pulumi:"compartmentOcid"`
	// (Updatable) List of password policy rules that have values set. This map of stringKey:stringValue pairs can be used to aid users while setting/resetting password
	ConfiguredPasswordPolicyRules []DomainsPasswordPolicyConfiguredPasswordPolicyRule `pulumi:"configuredPasswordPolicyRules"`
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	DeleteInProgress *bool `pulumi:"deleteInProgress"`
	// (Updatable) A String that describes the password policy
	Description *string `pulumi:"description"`
	// (Updatable) A delimiter used to separate characters in the dictionary file
	DictionaryDelimiter *string `pulumi:"dictionaryDelimiter"`
	// (Updatable) A Reference value that contains the URI of a dictionary of words not allowed to appear within a password value
	DictionaryLocation *string `pulumi:"dictionaryLocation"`
	// (Updatable) Indicates whether the password can match a dictionary word
	DictionaryWordDisallowed *bool `pulumi:"dictionaryWordDisallowed"`
	// (Updatable) A String value whose contents indicate a set of characters that cannot appear, in any sequence, in a password value
	DisallowedChars *string `pulumi:"disallowedChars"`
	// (Updatable) A String value whose contents indicate a set of substrings that cannot appear, in any sequence, in a password value
	DisallowedSubstrings []string `pulumi:"disallowedSubstrings"`
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	DomainOcid *string `pulumi:"domainOcid"`
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	ExternalId *string `pulumi:"externalId"`
	// (Updatable) Indicates a sequence of characters that match the user's first name of given name cannot be the password. Password validation against policy will be ignored if length of first name is less than or equal to 3 characters.
	FirstNameDisallowed *bool `pulumi:"firstNameDisallowed"`
	// (Updatable) Indicates whether all of the users should be forced to reset their password on the next login (to comply with new password policy changes)
	ForcePasswordReset *bool `pulumi:"forcePasswordReset"`
	// (Updatable) A list of groups that the password policy belongs to.
	Groups []DomainsPasswordPolicyGroup `pulumi:"groups"`
	// (Updatable) The User or App who created the Resource
	IdcsCreatedBies []DomainsPasswordPolicyIdcsCreatedBy `pulumi:"idcsCreatedBies"`
	// The basic endpoint for the identity domain
	IdcsEndpoint *string `pulumi:"idcsEndpoint"`
	// (Updatable) The User or App who modified the Resource
	IdcsLastModifiedBies []DomainsPasswordPolicyIdcsLastModifiedBy `pulumi:"idcsLastModifiedBies"`
	// (Updatable) The release number when the resource was upgraded.
	IdcsLastUpgradedInRelease *string `pulumi:"idcsLastUpgradedInRelease"`
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	IdcsPreventedOperations []string `pulumi:"idcsPreventedOperations"`
	// (Updatable) Indicates a sequence of characters that match the user's last name of given name cannot be the password. Password validation against policy will be ignored if length of last name is less than or equal to 3 characters.
	LastNameDisallowed *bool `pulumi:"lastNameDisallowed"`
	// (Updatable) The time period in minutes to lock out a user account when the threshold of invalid login attempts is reached. The available range is from 5 through 1440 minutes (24 hours).
	LockoutDuration *int `pulumi:"lockoutDuration"`
	// (Updatable) An integer that represents the maximum number of failed logins before an account is locked
	MaxIncorrectAttempts *int `pulumi:"maxIncorrectAttempts"`
	// (Updatable) The maximum password length (in characters). A value of 0 or no value indicates no maximum length restriction.
	MaxLength *int `pulumi:"maxLength"`
	// (Updatable) The maximum number of repeated characters allowed in a password.  A value of 0 or no value indicates no such restriction.
	MaxRepeatedChars *int `pulumi:"maxRepeatedChars"`
	// (Updatable) The maximum number of special characters in a password.  A value of 0 or no value indicates no maximum special characters restriction.
	MaxSpecialChars *int `pulumi:"maxSpecialChars"`
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	Metas []DomainsPasswordPolicyMeta `pulumi:"metas"`
	// (Updatable) The minimum number of a combination of alphabetic and numeric characters in a password.  A value of 0 or no value indicates no minimum alphanumeric character restriction.
	MinAlphaNumerals *int `pulumi:"minAlphaNumerals"`
	// (Updatable) The minimum number of alphabetic characters in a password.  A value of 0 or no value indicates no minimum alphas restriction.
	MinAlphas *int `pulumi:"minAlphas"`
	// (Updatable) The minimum password length (in characters). A value of 0 or no value indicates no minimum length restriction.
	MinLength *int `pulumi:"minLength"`
	// (Updatable) The minimum number of lowercase alphabetic characters in a password.  A value of 0 or no value indicates no minimum lowercase restriction.
	MinLowerCase *int `pulumi:"minLowerCase"`
	// (Updatable) The minimum number of numeric characters in a password.  A value of 0 or no value indicates no minimum numeric character restriction.
	MinNumerals *int `pulumi:"minNumerals"`
	// (Updatable) Minimum time after which the user can resubmit the reset password request
	MinPasswordAge *int `pulumi:"minPasswordAge"`
	// (Updatable) The minimum number of special characters in a password. A value of 0 or no value indicates no minimum special characters restriction.
	MinSpecialChars *int `pulumi:"minSpecialChars"`
	// (Updatable) The minimum number of unique characters in a password.  A value of 0 or no value indicates no minimum unique characters restriction.
	MinUniqueChars *int `pulumi:"minUniqueChars"`
	// (Updatable) The minimum number of uppercase alphabetic characters in a password. A value of 0 or no value indicates no minimum uppercase restriction.
	MinUpperCase *int `pulumi:"minUpperCase"`
	// (Updatable) A String that is the name of the policy to display to the user. This is the only mandatory attribute for a password policy.
	Name *string `pulumi:"name"`
	// (Updatable) The number of passwords that will be kept in history that may not be used as a password
	NumPasswordsInHistory *int `pulumi:"numPasswordsInHistory"`
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	Ocid *string `pulumi:"ocid"`
	// (Updatable) An integer indicating the number of days before which the user should be warned about password expiry.
	PasswordExpireWarning *int `pulumi:"passwordExpireWarning"`
	// (Updatable) The number of days after which the password expires automatically
	PasswordExpiresAfter *int `pulumi:"passwordExpiresAfter"`
	// (Updatable) Indicates whether the password policy is configured as Simple, Standard, or Custom.
	PasswordStrength *string `pulumi:"passwordStrength"`
	// (Updatable) Password policy priority
	Priority *int `pulumi:"priority"`
	// (Updatable) A String value whose contents indicate a set of characters that must appear, in any sequence, in a password value
	RequiredChars *string `pulumi:"requiredChars"`
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	Schemas []string `pulumi:"schemas"`
	// (Updatable) Indicates that the password must begin with an alphabetic character
	StartsWithAlphabet *bool `pulumi:"startsWithAlphabet"`
	// (Updatable) A list of tags on this resource.
	Tags []DomainsPasswordPolicyTag `pulumi:"tags"`
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	TenancyOcid *string `pulumi:"tenancyOcid"`
	// (Updatable) Indicates a sequence of characters that match the username cannot be the password. Password validation against policy will be ignored if length of user name is less than or equal to 3 characters.
	UserNameDisallowed *bool `pulumi:"userNameDisallowed"`
}

type DomainsPasswordPolicyState struct {
	// (Updatable) A String value whose contents indicate a set of characters that can appear, in any sequence, in a password value
	AllowedChars pulumi.StringPtrInput
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayInput
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrInput
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	CompartmentOcid pulumi.StringPtrInput
	// (Updatable) List of password policy rules that have values set. This map of stringKey:stringValue pairs can be used to aid users while setting/resetting password
	ConfiguredPasswordPolicyRules DomainsPasswordPolicyConfiguredPasswordPolicyRuleArrayInput
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	DeleteInProgress pulumi.BoolPtrInput
	// (Updatable) A String that describes the password policy
	Description pulumi.StringPtrInput
	// (Updatable) A delimiter used to separate characters in the dictionary file
	DictionaryDelimiter pulumi.StringPtrInput
	// (Updatable) A Reference value that contains the URI of a dictionary of words not allowed to appear within a password value
	DictionaryLocation pulumi.StringPtrInput
	// (Updatable) Indicates whether the password can match a dictionary word
	DictionaryWordDisallowed pulumi.BoolPtrInput
	// (Updatable) A String value whose contents indicate a set of characters that cannot appear, in any sequence, in a password value
	DisallowedChars pulumi.StringPtrInput
	// (Updatable) A String value whose contents indicate a set of substrings that cannot appear, in any sequence, in a password value
	DisallowedSubstrings pulumi.StringArrayInput
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	DomainOcid pulumi.StringPtrInput
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	ExternalId pulumi.StringPtrInput
	// (Updatable) Indicates a sequence of characters that match the user's first name of given name cannot be the password. Password validation against policy will be ignored if length of first name is less than or equal to 3 characters.
	FirstNameDisallowed pulumi.BoolPtrInput
	// (Updatable) Indicates whether all of the users should be forced to reset their password on the next login (to comply with new password policy changes)
	ForcePasswordReset pulumi.BoolPtrInput
	// (Updatable) A list of groups that the password policy belongs to.
	Groups DomainsPasswordPolicyGroupArrayInput
	// (Updatable) The User or App who created the Resource
	IdcsCreatedBies DomainsPasswordPolicyIdcsCreatedByArrayInput
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringPtrInput
	// (Updatable) The User or App who modified the Resource
	IdcsLastModifiedBies DomainsPasswordPolicyIdcsLastModifiedByArrayInput
	// (Updatable) The release number when the resource was upgraded.
	IdcsLastUpgradedInRelease pulumi.StringPtrInput
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	IdcsPreventedOperations pulumi.StringArrayInput
	// (Updatable) Indicates a sequence of characters that match the user's last name of given name cannot be the password. Password validation against policy will be ignored if length of last name is less than or equal to 3 characters.
	LastNameDisallowed pulumi.BoolPtrInput
	// (Updatable) The time period in minutes to lock out a user account when the threshold of invalid login attempts is reached. The available range is from 5 through 1440 minutes (24 hours).
	LockoutDuration pulumi.IntPtrInput
	// (Updatable) An integer that represents the maximum number of failed logins before an account is locked
	MaxIncorrectAttempts pulumi.IntPtrInput
	// (Updatable) The maximum password length (in characters). A value of 0 or no value indicates no maximum length restriction.
	MaxLength pulumi.IntPtrInput
	// (Updatable) The maximum number of repeated characters allowed in a password.  A value of 0 or no value indicates no such restriction.
	MaxRepeatedChars pulumi.IntPtrInput
	// (Updatable) The maximum number of special characters in a password.  A value of 0 or no value indicates no maximum special characters restriction.
	MaxSpecialChars pulumi.IntPtrInput
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	Metas DomainsPasswordPolicyMetaArrayInput
	// (Updatable) The minimum number of a combination of alphabetic and numeric characters in a password.  A value of 0 or no value indicates no minimum alphanumeric character restriction.
	MinAlphaNumerals pulumi.IntPtrInput
	// (Updatable) The minimum number of alphabetic characters in a password.  A value of 0 or no value indicates no minimum alphas restriction.
	MinAlphas pulumi.IntPtrInput
	// (Updatable) The minimum password length (in characters). A value of 0 or no value indicates no minimum length restriction.
	MinLength pulumi.IntPtrInput
	// (Updatable) The minimum number of lowercase alphabetic characters in a password.  A value of 0 or no value indicates no minimum lowercase restriction.
	MinLowerCase pulumi.IntPtrInput
	// (Updatable) The minimum number of numeric characters in a password.  A value of 0 or no value indicates no minimum numeric character restriction.
	MinNumerals pulumi.IntPtrInput
	// (Updatable) Minimum time after which the user can resubmit the reset password request
	MinPasswordAge pulumi.IntPtrInput
	// (Updatable) The minimum number of special characters in a password. A value of 0 or no value indicates no minimum special characters restriction.
	MinSpecialChars pulumi.IntPtrInput
	// (Updatable) The minimum number of unique characters in a password.  A value of 0 or no value indicates no minimum unique characters restriction.
	MinUniqueChars pulumi.IntPtrInput
	// (Updatable) The minimum number of uppercase alphabetic characters in a password. A value of 0 or no value indicates no minimum uppercase restriction.
	MinUpperCase pulumi.IntPtrInput
	// (Updatable) A String that is the name of the policy to display to the user. This is the only mandatory attribute for a password policy.
	Name pulumi.StringPtrInput
	// (Updatable) The number of passwords that will be kept in history that may not be used as a password
	NumPasswordsInHistory pulumi.IntPtrInput
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	Ocid pulumi.StringPtrInput
	// (Updatable) An integer indicating the number of days before which the user should be warned about password expiry.
	PasswordExpireWarning pulumi.IntPtrInput
	// (Updatable) The number of days after which the password expires automatically
	PasswordExpiresAfter pulumi.IntPtrInput
	// (Updatable) Indicates whether the password policy is configured as Simple, Standard, or Custom.
	PasswordStrength pulumi.StringPtrInput
	// (Updatable) Password policy priority
	Priority pulumi.IntPtrInput
	// (Updatable) A String value whose contents indicate a set of characters that must appear, in any sequence, in a password value
	RequiredChars pulumi.StringPtrInput
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	Schemas pulumi.StringArrayInput
	// (Updatable) Indicates that the password must begin with an alphabetic character
	StartsWithAlphabet pulumi.BoolPtrInput
	// (Updatable) A list of tags on this resource.
	Tags DomainsPasswordPolicyTagArrayInput
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	TenancyOcid pulumi.StringPtrInput
	// (Updatable) Indicates a sequence of characters that match the username cannot be the password. Password validation against policy will be ignored if length of user name is less than or equal to 3 characters.
	UserNameDisallowed pulumi.BoolPtrInput
}

func (DomainsPasswordPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainsPasswordPolicyState)(nil)).Elem()
}

type domainsPasswordPolicyArgs struct {
	// (Updatable) A String value whose contents indicate a set of characters that can appear, in any sequence, in a password value
	AllowedChars *string `pulumi:"allowedChars"`
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets []string `pulumi:"attributeSets"`
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes *string `pulumi:"attributes"`
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// (Updatable) A String that describes the password policy
	Description *string `pulumi:"description"`
	// (Updatable) A delimiter used to separate characters in the dictionary file
	DictionaryDelimiter *string `pulumi:"dictionaryDelimiter"`
	// (Updatable) A Reference value that contains the URI of a dictionary of words not allowed to appear within a password value
	DictionaryLocation *string `pulumi:"dictionaryLocation"`
	// (Updatable) Indicates whether the password can match a dictionary word
	DictionaryWordDisallowed *bool `pulumi:"dictionaryWordDisallowed"`
	// (Updatable) A String value whose contents indicate a set of characters that cannot appear, in any sequence, in a password value
	DisallowedChars *string `pulumi:"disallowedChars"`
	// (Updatable) A String value whose contents indicate a set of substrings that cannot appear, in any sequence, in a password value
	DisallowedSubstrings []string `pulumi:"disallowedSubstrings"`
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	ExternalId *string `pulumi:"externalId"`
	// (Updatable) Indicates a sequence of characters that match the user's first name of given name cannot be the password. Password validation against policy will be ignored if length of first name is less than or equal to 3 characters.
	FirstNameDisallowed *bool `pulumi:"firstNameDisallowed"`
	// (Updatable) Indicates whether all of the users should be forced to reset their password on the next login (to comply with new password policy changes)
	ForcePasswordReset *bool `pulumi:"forcePasswordReset"`
	// (Updatable) A list of groups that the password policy belongs to.
	Groups []DomainsPasswordPolicyGroup `pulumi:"groups"`
	// The basic endpoint for the identity domain
	IdcsEndpoint string `pulumi:"idcsEndpoint"`
	// (Updatable) Indicates a sequence of characters that match the user's last name of given name cannot be the password. Password validation against policy will be ignored if length of last name is less than or equal to 3 characters.
	LastNameDisallowed *bool `pulumi:"lastNameDisallowed"`
	// (Updatable) The time period in minutes to lock out a user account when the threshold of invalid login attempts is reached. The available range is from 5 through 1440 minutes (24 hours).
	LockoutDuration *int `pulumi:"lockoutDuration"`
	// (Updatable) An integer that represents the maximum number of failed logins before an account is locked
	MaxIncorrectAttempts *int `pulumi:"maxIncorrectAttempts"`
	// (Updatable) The maximum password length (in characters). A value of 0 or no value indicates no maximum length restriction.
	MaxLength *int `pulumi:"maxLength"`
	// (Updatable) The maximum number of repeated characters allowed in a password.  A value of 0 or no value indicates no such restriction.
	MaxRepeatedChars *int `pulumi:"maxRepeatedChars"`
	// (Updatable) The maximum number of special characters in a password.  A value of 0 or no value indicates no maximum special characters restriction.
	MaxSpecialChars *int `pulumi:"maxSpecialChars"`
	// (Updatable) The minimum number of a combination of alphabetic and numeric characters in a password.  A value of 0 or no value indicates no minimum alphanumeric character restriction.
	MinAlphaNumerals *int `pulumi:"minAlphaNumerals"`
	// (Updatable) The minimum number of alphabetic characters in a password.  A value of 0 or no value indicates no minimum alphas restriction.
	MinAlphas *int `pulumi:"minAlphas"`
	// (Updatable) The minimum password length (in characters). A value of 0 or no value indicates no minimum length restriction.
	MinLength *int `pulumi:"minLength"`
	// (Updatable) The minimum number of lowercase alphabetic characters in a password.  A value of 0 or no value indicates no minimum lowercase restriction.
	MinLowerCase *int `pulumi:"minLowerCase"`
	// (Updatable) The minimum number of numeric characters in a password.  A value of 0 or no value indicates no minimum numeric character restriction.
	MinNumerals *int `pulumi:"minNumerals"`
	// (Updatable) Minimum time after which the user can resubmit the reset password request
	MinPasswordAge *int `pulumi:"minPasswordAge"`
	// (Updatable) The minimum number of special characters in a password. A value of 0 or no value indicates no minimum special characters restriction.
	MinSpecialChars *int `pulumi:"minSpecialChars"`
	// (Updatable) The minimum number of unique characters in a password.  A value of 0 or no value indicates no minimum unique characters restriction.
	MinUniqueChars *int `pulumi:"minUniqueChars"`
	// (Updatable) The minimum number of uppercase alphabetic characters in a password. A value of 0 or no value indicates no minimum uppercase restriction.
	MinUpperCase *int `pulumi:"minUpperCase"`
	// (Updatable) A String that is the name of the policy to display to the user. This is the only mandatory attribute for a password policy.
	Name *string `pulumi:"name"`
	// (Updatable) The number of passwords that will be kept in history that may not be used as a password
	NumPasswordsInHistory *int `pulumi:"numPasswordsInHistory"`
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	Ocid *string `pulumi:"ocid"`
	// (Updatable) An integer indicating the number of days before which the user should be warned about password expiry.
	PasswordExpireWarning *int `pulumi:"passwordExpireWarning"`
	// (Updatable) The number of days after which the password expires automatically
	PasswordExpiresAfter *int `pulumi:"passwordExpiresAfter"`
	// (Updatable) Indicates whether the password policy is configured as Simple, Standard, or Custom.
	PasswordStrength *string `pulumi:"passwordStrength"`
	// (Updatable) Password policy priority
	Priority *int `pulumi:"priority"`
	// (Updatable) A String value whose contents indicate a set of characters that must appear, in any sequence, in a password value
	RequiredChars *string `pulumi:"requiredChars"`
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	Schemas []string `pulumi:"schemas"`
	// (Updatable) Indicates that the password must begin with an alphabetic character
	StartsWithAlphabet *bool `pulumi:"startsWithAlphabet"`
	// (Updatable) A list of tags on this resource.
	Tags []DomainsPasswordPolicyTag `pulumi:"tags"`
	// (Updatable) Indicates a sequence of characters that match the username cannot be the password. Password validation against policy will be ignored if length of user name is less than or equal to 3 characters.
	UserNameDisallowed *bool `pulumi:"userNameDisallowed"`
}

// The set of arguments for constructing a DomainsPasswordPolicy resource.
type DomainsPasswordPolicyArgs struct {
	// (Updatable) A String value whose contents indicate a set of characters that can appear, in any sequence, in a password value
	AllowedChars pulumi.StringPtrInput
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayInput
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrInput
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput
	// (Updatable) A String that describes the password policy
	Description pulumi.StringPtrInput
	// (Updatable) A delimiter used to separate characters in the dictionary file
	DictionaryDelimiter pulumi.StringPtrInput
	// (Updatable) A Reference value that contains the URI of a dictionary of words not allowed to appear within a password value
	DictionaryLocation pulumi.StringPtrInput
	// (Updatable) Indicates whether the password can match a dictionary word
	DictionaryWordDisallowed pulumi.BoolPtrInput
	// (Updatable) A String value whose contents indicate a set of characters that cannot appear, in any sequence, in a password value
	DisallowedChars pulumi.StringPtrInput
	// (Updatable) A String value whose contents indicate a set of substrings that cannot appear, in any sequence, in a password value
	DisallowedSubstrings pulumi.StringArrayInput
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	ExternalId pulumi.StringPtrInput
	// (Updatable) Indicates a sequence of characters that match the user's first name of given name cannot be the password. Password validation against policy will be ignored if length of first name is less than or equal to 3 characters.
	FirstNameDisallowed pulumi.BoolPtrInput
	// (Updatable) Indicates whether all of the users should be forced to reset their password on the next login (to comply with new password policy changes)
	ForcePasswordReset pulumi.BoolPtrInput
	// (Updatable) A list of groups that the password policy belongs to.
	Groups DomainsPasswordPolicyGroupArrayInput
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringInput
	// (Updatable) Indicates a sequence of characters that match the user's last name of given name cannot be the password. Password validation against policy will be ignored if length of last name is less than or equal to 3 characters.
	LastNameDisallowed pulumi.BoolPtrInput
	// (Updatable) The time period in minutes to lock out a user account when the threshold of invalid login attempts is reached. The available range is from 5 through 1440 minutes (24 hours).
	LockoutDuration pulumi.IntPtrInput
	// (Updatable) An integer that represents the maximum number of failed logins before an account is locked
	MaxIncorrectAttempts pulumi.IntPtrInput
	// (Updatable) The maximum password length (in characters). A value of 0 or no value indicates no maximum length restriction.
	MaxLength pulumi.IntPtrInput
	// (Updatable) The maximum number of repeated characters allowed in a password.  A value of 0 or no value indicates no such restriction.
	MaxRepeatedChars pulumi.IntPtrInput
	// (Updatable) The maximum number of special characters in a password.  A value of 0 or no value indicates no maximum special characters restriction.
	MaxSpecialChars pulumi.IntPtrInput
	// (Updatable) The minimum number of a combination of alphabetic and numeric characters in a password.  A value of 0 or no value indicates no minimum alphanumeric character restriction.
	MinAlphaNumerals pulumi.IntPtrInput
	// (Updatable) The minimum number of alphabetic characters in a password.  A value of 0 or no value indicates no minimum alphas restriction.
	MinAlphas pulumi.IntPtrInput
	// (Updatable) The minimum password length (in characters). A value of 0 or no value indicates no minimum length restriction.
	MinLength pulumi.IntPtrInput
	// (Updatable) The minimum number of lowercase alphabetic characters in a password.  A value of 0 or no value indicates no minimum lowercase restriction.
	MinLowerCase pulumi.IntPtrInput
	// (Updatable) The minimum number of numeric characters in a password.  A value of 0 or no value indicates no minimum numeric character restriction.
	MinNumerals pulumi.IntPtrInput
	// (Updatable) Minimum time after which the user can resubmit the reset password request
	MinPasswordAge pulumi.IntPtrInput
	// (Updatable) The minimum number of special characters in a password. A value of 0 or no value indicates no minimum special characters restriction.
	MinSpecialChars pulumi.IntPtrInput
	// (Updatable) The minimum number of unique characters in a password.  A value of 0 or no value indicates no minimum unique characters restriction.
	MinUniqueChars pulumi.IntPtrInput
	// (Updatable) The minimum number of uppercase alphabetic characters in a password. A value of 0 or no value indicates no minimum uppercase restriction.
	MinUpperCase pulumi.IntPtrInput
	// (Updatable) A String that is the name of the policy to display to the user. This is the only mandatory attribute for a password policy.
	Name pulumi.StringPtrInput
	// (Updatable) The number of passwords that will be kept in history that may not be used as a password
	NumPasswordsInHistory pulumi.IntPtrInput
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	Ocid pulumi.StringPtrInput
	// (Updatable) An integer indicating the number of days before which the user should be warned about password expiry.
	PasswordExpireWarning pulumi.IntPtrInput
	// (Updatable) The number of days after which the password expires automatically
	PasswordExpiresAfter pulumi.IntPtrInput
	// (Updatable) Indicates whether the password policy is configured as Simple, Standard, or Custom.
	PasswordStrength pulumi.StringPtrInput
	// (Updatable) Password policy priority
	Priority pulumi.IntPtrInput
	// (Updatable) A String value whose contents indicate a set of characters that must appear, in any sequence, in a password value
	RequiredChars pulumi.StringPtrInput
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	Schemas pulumi.StringArrayInput
	// (Updatable) Indicates that the password must begin with an alphabetic character
	StartsWithAlphabet pulumi.BoolPtrInput
	// (Updatable) A list of tags on this resource.
	Tags DomainsPasswordPolicyTagArrayInput
	// (Updatable) Indicates a sequence of characters that match the username cannot be the password. Password validation against policy will be ignored if length of user name is less than or equal to 3 characters.
	UserNameDisallowed pulumi.BoolPtrInput
}

func (DomainsPasswordPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainsPasswordPolicyArgs)(nil)).Elem()
}

type DomainsPasswordPolicyInput interface {
	pulumi.Input

	ToDomainsPasswordPolicyOutput() DomainsPasswordPolicyOutput
	ToDomainsPasswordPolicyOutputWithContext(ctx context.Context) DomainsPasswordPolicyOutput
}

func (*DomainsPasswordPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainsPasswordPolicy)(nil)).Elem()
}

func (i *DomainsPasswordPolicy) ToDomainsPasswordPolicyOutput() DomainsPasswordPolicyOutput {
	return i.ToDomainsPasswordPolicyOutputWithContext(context.Background())
}

func (i *DomainsPasswordPolicy) ToDomainsPasswordPolicyOutputWithContext(ctx context.Context) DomainsPasswordPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsPasswordPolicyOutput)
}

// DomainsPasswordPolicyArrayInput is an input type that accepts DomainsPasswordPolicyArray and DomainsPasswordPolicyArrayOutput values.
// You can construct a concrete instance of `DomainsPasswordPolicyArrayInput` via:
//
//	DomainsPasswordPolicyArray{ DomainsPasswordPolicyArgs{...} }
type DomainsPasswordPolicyArrayInput interface {
	pulumi.Input

	ToDomainsPasswordPolicyArrayOutput() DomainsPasswordPolicyArrayOutput
	ToDomainsPasswordPolicyArrayOutputWithContext(context.Context) DomainsPasswordPolicyArrayOutput
}

type DomainsPasswordPolicyArray []DomainsPasswordPolicyInput

func (DomainsPasswordPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainsPasswordPolicy)(nil)).Elem()
}

func (i DomainsPasswordPolicyArray) ToDomainsPasswordPolicyArrayOutput() DomainsPasswordPolicyArrayOutput {
	return i.ToDomainsPasswordPolicyArrayOutputWithContext(context.Background())
}

func (i DomainsPasswordPolicyArray) ToDomainsPasswordPolicyArrayOutputWithContext(ctx context.Context) DomainsPasswordPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsPasswordPolicyArrayOutput)
}

// DomainsPasswordPolicyMapInput is an input type that accepts DomainsPasswordPolicyMap and DomainsPasswordPolicyMapOutput values.
// You can construct a concrete instance of `DomainsPasswordPolicyMapInput` via:
//
//	DomainsPasswordPolicyMap{ "key": DomainsPasswordPolicyArgs{...} }
type DomainsPasswordPolicyMapInput interface {
	pulumi.Input

	ToDomainsPasswordPolicyMapOutput() DomainsPasswordPolicyMapOutput
	ToDomainsPasswordPolicyMapOutputWithContext(context.Context) DomainsPasswordPolicyMapOutput
}

type DomainsPasswordPolicyMap map[string]DomainsPasswordPolicyInput

func (DomainsPasswordPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainsPasswordPolicy)(nil)).Elem()
}

func (i DomainsPasswordPolicyMap) ToDomainsPasswordPolicyMapOutput() DomainsPasswordPolicyMapOutput {
	return i.ToDomainsPasswordPolicyMapOutputWithContext(context.Background())
}

func (i DomainsPasswordPolicyMap) ToDomainsPasswordPolicyMapOutputWithContext(ctx context.Context) DomainsPasswordPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsPasswordPolicyMapOutput)
}

type DomainsPasswordPolicyOutput struct{ *pulumi.OutputState }

func (DomainsPasswordPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainsPasswordPolicy)(nil)).Elem()
}

func (o DomainsPasswordPolicyOutput) ToDomainsPasswordPolicyOutput() DomainsPasswordPolicyOutput {
	return o
}

func (o DomainsPasswordPolicyOutput) ToDomainsPasswordPolicyOutputWithContext(ctx context.Context) DomainsPasswordPolicyOutput {
	return o
}

// (Updatable) A String value whose contents indicate a set of characters that can appear, in any sequence, in a password value
func (o DomainsPasswordPolicyOutput) AllowedChars() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.StringOutput { return v.AllowedChars }).(pulumi.StringOutput)
}

// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
func (o DomainsPasswordPolicyOutput) AttributeSets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.StringArrayOutput { return v.AttributeSets }).(pulumi.StringArrayOutput)
}

// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
func (o DomainsPasswordPolicyOutput) Attributes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.StringPtrOutput { return v.Attributes }).(pulumi.StringPtrOutput)
}

// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
func (o DomainsPasswordPolicyOutput) Authorization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.StringPtrOutput { return v.Authorization }).(pulumi.StringPtrOutput)
}

// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
func (o DomainsPasswordPolicyOutput) CompartmentOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.StringOutput { return v.CompartmentOcid }).(pulumi.StringOutput)
}

// (Updatable) List of password policy rules that have values set. This map of stringKey:stringValue pairs can be used to aid users while setting/resetting password
func (o DomainsPasswordPolicyOutput) ConfiguredPasswordPolicyRules() DomainsPasswordPolicyConfiguredPasswordPolicyRuleArrayOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) DomainsPasswordPolicyConfiguredPasswordPolicyRuleArrayOutput {
		return v.ConfiguredPasswordPolicyRules
	}).(DomainsPasswordPolicyConfiguredPasswordPolicyRuleArrayOutput)
}

// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
func (o DomainsPasswordPolicyOutput) DeleteInProgress() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.BoolOutput { return v.DeleteInProgress }).(pulumi.BoolOutput)
}

// (Updatable) A String that describes the password policy
func (o DomainsPasswordPolicyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) A delimiter used to separate characters in the dictionary file
func (o DomainsPasswordPolicyOutput) DictionaryDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.StringOutput { return v.DictionaryDelimiter }).(pulumi.StringOutput)
}

// (Updatable) A Reference value that contains the URI of a dictionary of words not allowed to appear within a password value
func (o DomainsPasswordPolicyOutput) DictionaryLocation() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.StringOutput { return v.DictionaryLocation }).(pulumi.StringOutput)
}

// (Updatable) Indicates whether the password can match a dictionary word
func (o DomainsPasswordPolicyOutput) DictionaryWordDisallowed() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.BoolOutput { return v.DictionaryWordDisallowed }).(pulumi.BoolOutput)
}

// (Updatable) A String value whose contents indicate a set of characters that cannot appear, in any sequence, in a password value
func (o DomainsPasswordPolicyOutput) DisallowedChars() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.StringOutput { return v.DisallowedChars }).(pulumi.StringOutput)
}

// (Updatable) A String value whose contents indicate a set of substrings that cannot appear, in any sequence, in a password value
func (o DomainsPasswordPolicyOutput) DisallowedSubstrings() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.StringArrayOutput { return v.DisallowedSubstrings }).(pulumi.StringArrayOutput)
}

// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
func (o DomainsPasswordPolicyOutput) DomainOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.StringOutput { return v.DomainOcid }).(pulumi.StringOutput)
}

// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
func (o DomainsPasswordPolicyOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.StringOutput { return v.ExternalId }).(pulumi.StringOutput)
}

// (Updatable) Indicates a sequence of characters that match the user's first name of given name cannot be the password. Password validation against policy will be ignored if length of first name is less than or equal to 3 characters.
func (o DomainsPasswordPolicyOutput) FirstNameDisallowed() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.BoolOutput { return v.FirstNameDisallowed }).(pulumi.BoolOutput)
}

// (Updatable) Indicates whether all of the users should be forced to reset their password on the next login (to comply with new password policy changes)
func (o DomainsPasswordPolicyOutput) ForcePasswordReset() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.BoolOutput { return v.ForcePasswordReset }).(pulumi.BoolOutput)
}

// (Updatable) A list of groups that the password policy belongs to.
func (o DomainsPasswordPolicyOutput) Groups() DomainsPasswordPolicyGroupArrayOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) DomainsPasswordPolicyGroupArrayOutput { return v.Groups }).(DomainsPasswordPolicyGroupArrayOutput)
}

// (Updatable) The User or App who created the Resource
func (o DomainsPasswordPolicyOutput) IdcsCreatedBies() DomainsPasswordPolicyIdcsCreatedByArrayOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) DomainsPasswordPolicyIdcsCreatedByArrayOutput { return v.IdcsCreatedBies }).(DomainsPasswordPolicyIdcsCreatedByArrayOutput)
}

// The basic endpoint for the identity domain
func (o DomainsPasswordPolicyOutput) IdcsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.StringOutput { return v.IdcsEndpoint }).(pulumi.StringOutput)
}

// (Updatable) The User or App who modified the Resource
func (o DomainsPasswordPolicyOutput) IdcsLastModifiedBies() DomainsPasswordPolicyIdcsLastModifiedByArrayOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) DomainsPasswordPolicyIdcsLastModifiedByArrayOutput {
		return v.IdcsLastModifiedBies
	}).(DomainsPasswordPolicyIdcsLastModifiedByArrayOutput)
}

// (Updatable) The release number when the resource was upgraded.
func (o DomainsPasswordPolicyOutput) IdcsLastUpgradedInRelease() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.StringOutput { return v.IdcsLastUpgradedInRelease }).(pulumi.StringOutput)
}

// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
func (o DomainsPasswordPolicyOutput) IdcsPreventedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.StringArrayOutput { return v.IdcsPreventedOperations }).(pulumi.StringArrayOutput)
}

// (Updatable) Indicates a sequence of characters that match the user's last name of given name cannot be the password. Password validation against policy will be ignored if length of last name is less than or equal to 3 characters.
func (o DomainsPasswordPolicyOutput) LastNameDisallowed() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.BoolOutput { return v.LastNameDisallowed }).(pulumi.BoolOutput)
}

// (Updatable) The time period in minutes to lock out a user account when the threshold of invalid login attempts is reached. The available range is from 5 through 1440 minutes (24 hours).
func (o DomainsPasswordPolicyOutput) LockoutDuration() pulumi.IntOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.IntOutput { return v.LockoutDuration }).(pulumi.IntOutput)
}

// (Updatable) An integer that represents the maximum number of failed logins before an account is locked
func (o DomainsPasswordPolicyOutput) MaxIncorrectAttempts() pulumi.IntOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.IntOutput { return v.MaxIncorrectAttempts }).(pulumi.IntOutput)
}

// (Updatable) The maximum password length (in characters). A value of 0 or no value indicates no maximum length restriction.
func (o DomainsPasswordPolicyOutput) MaxLength() pulumi.IntOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.IntOutput { return v.MaxLength }).(pulumi.IntOutput)
}

// (Updatable) The maximum number of repeated characters allowed in a password.  A value of 0 or no value indicates no such restriction.
func (o DomainsPasswordPolicyOutput) MaxRepeatedChars() pulumi.IntOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.IntOutput { return v.MaxRepeatedChars }).(pulumi.IntOutput)
}

// (Updatable) The maximum number of special characters in a password.  A value of 0 or no value indicates no maximum special characters restriction.
func (o DomainsPasswordPolicyOutput) MaxSpecialChars() pulumi.IntOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.IntOutput { return v.MaxSpecialChars }).(pulumi.IntOutput)
}

// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
func (o DomainsPasswordPolicyOutput) Metas() DomainsPasswordPolicyMetaArrayOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) DomainsPasswordPolicyMetaArrayOutput { return v.Metas }).(DomainsPasswordPolicyMetaArrayOutput)
}

// (Updatable) The minimum number of a combination of alphabetic and numeric characters in a password.  A value of 0 or no value indicates no minimum alphanumeric character restriction.
func (o DomainsPasswordPolicyOutput) MinAlphaNumerals() pulumi.IntOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.IntOutput { return v.MinAlphaNumerals }).(pulumi.IntOutput)
}

// (Updatable) The minimum number of alphabetic characters in a password.  A value of 0 or no value indicates no minimum alphas restriction.
func (o DomainsPasswordPolicyOutput) MinAlphas() pulumi.IntOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.IntOutput { return v.MinAlphas }).(pulumi.IntOutput)
}

// (Updatable) The minimum password length (in characters). A value of 0 or no value indicates no minimum length restriction.
func (o DomainsPasswordPolicyOutput) MinLength() pulumi.IntOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.IntOutput { return v.MinLength }).(pulumi.IntOutput)
}

// (Updatable) The minimum number of lowercase alphabetic characters in a password.  A value of 0 or no value indicates no minimum lowercase restriction.
func (o DomainsPasswordPolicyOutput) MinLowerCase() pulumi.IntOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.IntOutput { return v.MinLowerCase }).(pulumi.IntOutput)
}

// (Updatable) The minimum number of numeric characters in a password.  A value of 0 or no value indicates no minimum numeric character restriction.
func (o DomainsPasswordPolicyOutput) MinNumerals() pulumi.IntOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.IntOutput { return v.MinNumerals }).(pulumi.IntOutput)
}

// (Updatable) Minimum time after which the user can resubmit the reset password request
func (o DomainsPasswordPolicyOutput) MinPasswordAge() pulumi.IntOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.IntOutput { return v.MinPasswordAge }).(pulumi.IntOutput)
}

// (Updatable) The minimum number of special characters in a password. A value of 0 or no value indicates no minimum special characters restriction.
func (o DomainsPasswordPolicyOutput) MinSpecialChars() pulumi.IntOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.IntOutput { return v.MinSpecialChars }).(pulumi.IntOutput)
}

// (Updatable) The minimum number of unique characters in a password.  A value of 0 or no value indicates no minimum unique characters restriction.
func (o DomainsPasswordPolicyOutput) MinUniqueChars() pulumi.IntOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.IntOutput { return v.MinUniqueChars }).(pulumi.IntOutput)
}

// (Updatable) The minimum number of uppercase alphabetic characters in a password. A value of 0 or no value indicates no minimum uppercase restriction.
func (o DomainsPasswordPolicyOutput) MinUpperCase() pulumi.IntOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.IntOutput { return v.MinUpperCase }).(pulumi.IntOutput)
}

// (Updatable) A String that is the name of the policy to display to the user. This is the only mandatory attribute for a password policy.
func (o DomainsPasswordPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// (Updatable) The number of passwords that will be kept in history that may not be used as a password
func (o DomainsPasswordPolicyOutput) NumPasswordsInHistory() pulumi.IntOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.IntOutput { return v.NumPasswordsInHistory }).(pulumi.IntOutput)
}

// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
func (o DomainsPasswordPolicyOutput) Ocid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.StringOutput { return v.Ocid }).(pulumi.StringOutput)
}

// (Updatable) An integer indicating the number of days before which the user should be warned about password expiry.
func (o DomainsPasswordPolicyOutput) PasswordExpireWarning() pulumi.IntOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.IntOutput { return v.PasswordExpireWarning }).(pulumi.IntOutput)
}

// (Updatable) The number of days after which the password expires automatically
func (o DomainsPasswordPolicyOutput) PasswordExpiresAfter() pulumi.IntOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.IntOutput { return v.PasswordExpiresAfter }).(pulumi.IntOutput)
}

// (Updatable) Indicates whether the password policy is configured as Simple, Standard, or Custom.
func (o DomainsPasswordPolicyOutput) PasswordStrength() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.StringOutput { return v.PasswordStrength }).(pulumi.StringOutput)
}

// (Updatable) Password policy priority
func (o DomainsPasswordPolicyOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.IntOutput { return v.Priority }).(pulumi.IntOutput)
}

// (Updatable) A String value whose contents indicate a set of characters that must appear, in any sequence, in a password value
func (o DomainsPasswordPolicyOutput) RequiredChars() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.StringOutput { return v.RequiredChars }).(pulumi.StringOutput)
}

// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
func (o DomainsPasswordPolicyOutput) ResourceTypeSchemaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.StringPtrOutput { return v.ResourceTypeSchemaVersion }).(pulumi.StringPtrOutput)
}

// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
func (o DomainsPasswordPolicyOutput) Schemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.StringArrayOutput { return v.Schemas }).(pulumi.StringArrayOutput)
}

// (Updatable) Indicates that the password must begin with an alphabetic character
func (o DomainsPasswordPolicyOutput) StartsWithAlphabet() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.BoolOutput { return v.StartsWithAlphabet }).(pulumi.BoolOutput)
}

// (Updatable) A list of tags on this resource.
func (o DomainsPasswordPolicyOutput) Tags() DomainsPasswordPolicyTagArrayOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) DomainsPasswordPolicyTagArrayOutput { return v.Tags }).(DomainsPasswordPolicyTagArrayOutput)
}

// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
func (o DomainsPasswordPolicyOutput) TenancyOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.StringOutput { return v.TenancyOcid }).(pulumi.StringOutput)
}

// (Updatable) Indicates a sequence of characters that match the username cannot be the password. Password validation against policy will be ignored if length of user name is less than or equal to 3 characters.
func (o DomainsPasswordPolicyOutput) UserNameDisallowed() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsPasswordPolicy) pulumi.BoolOutput { return v.UserNameDisallowed }).(pulumi.BoolOutput)
}

type DomainsPasswordPolicyArrayOutput struct{ *pulumi.OutputState }

func (DomainsPasswordPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainsPasswordPolicy)(nil)).Elem()
}

func (o DomainsPasswordPolicyArrayOutput) ToDomainsPasswordPolicyArrayOutput() DomainsPasswordPolicyArrayOutput {
	return o
}

func (o DomainsPasswordPolicyArrayOutput) ToDomainsPasswordPolicyArrayOutputWithContext(ctx context.Context) DomainsPasswordPolicyArrayOutput {
	return o
}

func (o DomainsPasswordPolicyArrayOutput) Index(i pulumi.IntInput) DomainsPasswordPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DomainsPasswordPolicy {
		return vs[0].([]*DomainsPasswordPolicy)[vs[1].(int)]
	}).(DomainsPasswordPolicyOutput)
}

type DomainsPasswordPolicyMapOutput struct{ *pulumi.OutputState }

func (DomainsPasswordPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainsPasswordPolicy)(nil)).Elem()
}

func (o DomainsPasswordPolicyMapOutput) ToDomainsPasswordPolicyMapOutput() DomainsPasswordPolicyMapOutput {
	return o
}

func (o DomainsPasswordPolicyMapOutput) ToDomainsPasswordPolicyMapOutputWithContext(ctx context.Context) DomainsPasswordPolicyMapOutput {
	return o
}

func (o DomainsPasswordPolicyMapOutput) MapIndex(k pulumi.StringInput) DomainsPasswordPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DomainsPasswordPolicy {
		return vs[0].(map[string]*DomainsPasswordPolicy)[vs[1].(string)]
	}).(DomainsPasswordPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsPasswordPolicyInput)(nil)).Elem(), &DomainsPasswordPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsPasswordPolicyArrayInput)(nil)).Elem(), DomainsPasswordPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsPasswordPolicyMapInput)(nil)).Elem(), DomainsPasswordPolicyMap{})
	pulumi.RegisterOutputType(DomainsPasswordPolicyOutput{})
	pulumi.RegisterOutputType(DomainsPasswordPolicyArrayOutput{})
	pulumi.RegisterOutputType(DomainsPasswordPolicyMapOutput{})
}
