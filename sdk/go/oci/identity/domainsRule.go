// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Rule resource in Oracle Cloud Infrastructure Identity Domains service.
//
// # Create a Rule
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Identity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Identity.NewDomainsRule(ctx, "test_rule", &Identity.DomainsRuleArgs{
//				Condition:    pulumi.Any(ruleCondition),
//				IdcsEndpoint: pulumi.Any(testDomain.Url),
//				Name:         pulumi.Any(ruleName),
//				PolicyType: &identity.DomainsRulePolicyTypeArgs{
//					Value: pulumi.String("SignOn"),
//				},
//				Returns: identity.DomainsRuleReturnArray{
//					&identity.DomainsRuleReturnArgs{
//						Name:         pulumi.Any(ruleReturnName),
//						Value:        pulumi.Any(ruleReturnValue),
//						ReturnGroovy: pulumi.Any(ruleReturnReturnGroovy),
//					},
//				},
//				Schemas: pulumi.StringArray{
//					pulumi.String("urn:ietf:params:scim:schemas:oracle:idcs:Rule"),
//				},
//				Active: pulumi.Any(ruleActive),
//				AttributeSets: pulumi.StringArray{
//					pulumi.String("all"),
//				},
//				Attributes:    pulumi.String(""),
//				Authorization: pulumi.Any(ruleAuthorization),
//				ConditionGroup: &identity.DomainsRuleConditionGroupArgs{
//					Type:  pulumi.String("Condition"),
//					Value: pulumi.Any(ruleConditionGroupValue),
//				},
//				Description:               pulumi.Any(ruleDescription),
//				ExternalId:                pulumi.String("externalId"),
//				Locked:                    pulumi.Any(ruleLocked),
//				Ocid:                      pulumi.Any(ruleOcid),
//				ResourceTypeSchemaVersion: pulumi.Any(ruleResourceTypeSchemaVersion),
//				RuleGroovy:                pulumi.Any(ruleRuleGroovy),
//				Tags: identity.DomainsRuleTagArray{
//					&identity.DomainsRuleTagArgs{
//						Key:   pulumi.Any(ruleTagsKey),
//						Value: pulumi.Any(ruleTagsValue),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Rules can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Identity/domainsRule:DomainsRule test_rule "idcsEndpoint/{idcsEndpoint}/rules/{ruleId}"
// ```
type DomainsRule struct {
	pulumi.CustomResourceState

	// (Updatable) If true, rule is active
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	Active pulumi.BoolOutput `pulumi:"active"`
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayOutput `pulumi:"attributeSets"`
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrOutput `pulumi:"attributes"`
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrOutput `pulumi:"authorization"`
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid pulumi.StringOutput `pulumi:"compartmentOcid"`
	// (Updatable) SCIM filters
	//
	// **Deprecated Since: 17.3.4**
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Condition pulumi.StringOutput `pulumi:"condition"`
	// (Updatable) Condition or ConditionGroup assigned to the rule
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	ConditionGroup DomainsRuleConditionGroupOutput `pulumi:"conditionGroup"`
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress pulumi.BoolOutput `pulumi:"deleteInProgress"`
	// (Updatable) Rule Description
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid pulumi.StringOutput `pulumi:"domainOcid"`
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value.  The value of the externalId attribute is always issued be the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	ExternalId pulumi.StringOutput `pulumi:"externalId"`
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies DomainsRuleIdcsCreatedByArrayOutput `pulumi:"idcsCreatedBies"`
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringOutput `pulumi:"idcsEndpoint"`
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies DomainsRuleIdcsLastModifiedByArrayOutput `pulumi:"idcsLastModifiedBies"`
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease pulumi.StringOutput `pulumi:"idcsLastUpgradedInRelease"`
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations pulumi.StringArrayOutput `pulumi:"idcsPreventedOperations"`
	// (Updatable) Shows if the rule is locked
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	Locked pulumi.BoolOutput `pulumi:"locked"`
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas DomainsRuleMetaArrayOutput `pulumi:"metas"`
	// (Updatable) Rule name
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: always
	// * type: string
	// * uniqueness: none
	Name pulumi.StringOutput `pulumi:"name"`
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid pulumi.StringOutput `pulumi:"ocid"`
	// (Updatable) PolicyType on which the policy is based
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: true
	// * returned: default
	// * type: complex
	// * uniqueness: none
	PolicyType DomainsRulePolicyTypeOutput `pulumi:"policyType"`
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrOutput `pulumi:"resourceTypeSchemaVersion"`
	// (Updatable) The return values are the then portion of a Rule
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [name]
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Returns DomainsRuleReturnArrayOutput `pulumi:"returns"`
	// (Updatable) The Groovy script that is run instead of the rule, if policy type allows the rule to be a Groovy script.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	RuleGroovy pulumi.StringOutput `pulumi:"ruleGroovy"`
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayOutput `pulumi:"schemas"`
	// (Updatable) A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsRuleTagArrayOutput `pulumi:"tags"`
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TenancyOcid pulumi.StringOutput `pulumi:"tenancyOcid"`
}

// NewDomainsRule registers a new resource with the given unique name, arguments, and options.
func NewDomainsRule(ctx *pulumi.Context,
	name string, args *DomainsRuleArgs, opts ...pulumi.ResourceOption) (*DomainsRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Condition == nil {
		return nil, errors.New("invalid value for required argument 'Condition'")
	}
	if args.IdcsEndpoint == nil {
		return nil, errors.New("invalid value for required argument 'IdcsEndpoint'")
	}
	if args.PolicyType == nil {
		return nil, errors.New("invalid value for required argument 'PolicyType'")
	}
	if args.Returns == nil {
		return nil, errors.New("invalid value for required argument 'Returns'")
	}
	if args.Schemas == nil {
		return nil, errors.New("invalid value for required argument 'Schemas'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DomainsRule
	err := ctx.RegisterResource("oci:Identity/domainsRule:DomainsRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomainsRule gets an existing DomainsRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainsRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainsRuleState, opts ...pulumi.ResourceOption) (*DomainsRule, error) {
	var resource DomainsRule
	err := ctx.ReadResource("oci:Identity/domainsRule:DomainsRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DomainsRule resources.
type domainsRuleState struct {
	// (Updatable) If true, rule is active
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	Active *bool `pulumi:"active"`
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets []string `pulumi:"attributeSets"`
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes *string `pulumi:"attributes"`
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid *string `pulumi:"compartmentOcid"`
	// (Updatable) SCIM filters
	//
	// **Deprecated Since: 17.3.4**
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Condition *string `pulumi:"condition"`
	// (Updatable) Condition or ConditionGroup assigned to the rule
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	ConditionGroup *DomainsRuleConditionGroup `pulumi:"conditionGroup"`
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress *bool `pulumi:"deleteInProgress"`
	// (Updatable) Rule Description
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Description *string `pulumi:"description"`
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid *string `pulumi:"domainOcid"`
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value.  The value of the externalId attribute is always issued be the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	ExternalId *string `pulumi:"externalId"`
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies []DomainsRuleIdcsCreatedBy `pulumi:"idcsCreatedBies"`
	// The basic endpoint for the identity domain
	IdcsEndpoint *string `pulumi:"idcsEndpoint"`
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies []DomainsRuleIdcsLastModifiedBy `pulumi:"idcsLastModifiedBies"`
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease *string `pulumi:"idcsLastUpgradedInRelease"`
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations []string `pulumi:"idcsPreventedOperations"`
	// (Updatable) Shows if the rule is locked
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	Locked *bool `pulumi:"locked"`
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas []DomainsRuleMeta `pulumi:"metas"`
	// (Updatable) Rule name
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: always
	// * type: string
	// * uniqueness: none
	Name *string `pulumi:"name"`
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid *string `pulumi:"ocid"`
	// (Updatable) PolicyType on which the policy is based
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: true
	// * returned: default
	// * type: complex
	// * uniqueness: none
	PolicyType *DomainsRulePolicyType `pulumi:"policyType"`
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// (Updatable) The return values are the then portion of a Rule
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [name]
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Returns []DomainsRuleReturn `pulumi:"returns"`
	// (Updatable) The Groovy script that is run instead of the rule, if policy type allows the rule to be a Groovy script.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	RuleGroovy *string `pulumi:"ruleGroovy"`
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas []string `pulumi:"schemas"`
	// (Updatable) A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags []DomainsRuleTag `pulumi:"tags"`
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TenancyOcid *string `pulumi:"tenancyOcid"`
}

type DomainsRuleState struct {
	// (Updatable) If true, rule is active
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	Active pulumi.BoolPtrInput
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayInput
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrInput
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid pulumi.StringPtrInput
	// (Updatable) SCIM filters
	//
	// **Deprecated Since: 17.3.4**
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Condition pulumi.StringPtrInput
	// (Updatable) Condition or ConditionGroup assigned to the rule
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	ConditionGroup DomainsRuleConditionGroupPtrInput
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress pulumi.BoolPtrInput
	// (Updatable) Rule Description
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Description pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid pulumi.StringPtrInput
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value.  The value of the externalId attribute is always issued be the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	ExternalId pulumi.StringPtrInput
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies DomainsRuleIdcsCreatedByArrayInput
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringPtrInput
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies DomainsRuleIdcsLastModifiedByArrayInput
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease pulumi.StringPtrInput
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations pulumi.StringArrayInput
	// (Updatable) Shows if the rule is locked
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	Locked pulumi.BoolPtrInput
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas DomainsRuleMetaArrayInput
	// (Updatable) Rule name
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: always
	// * type: string
	// * uniqueness: none
	Name pulumi.StringPtrInput
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid pulumi.StringPtrInput
	// (Updatable) PolicyType on which the policy is based
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: true
	// * returned: default
	// * type: complex
	// * uniqueness: none
	PolicyType DomainsRulePolicyTypePtrInput
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput
	// (Updatable) The return values are the then portion of a Rule
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [name]
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Returns DomainsRuleReturnArrayInput
	// (Updatable) The Groovy script that is run instead of the rule, if policy type allows the rule to be a Groovy script.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	RuleGroovy pulumi.StringPtrInput
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayInput
	// (Updatable) A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsRuleTagArrayInput
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TenancyOcid pulumi.StringPtrInput
}

func (DomainsRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainsRuleState)(nil)).Elem()
}

type domainsRuleArgs struct {
	// (Updatable) If true, rule is active
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	Active *bool `pulumi:"active"`
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets []string `pulumi:"attributeSets"`
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes *string `pulumi:"attributes"`
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// (Updatable) SCIM filters
	//
	// **Deprecated Since: 17.3.4**
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Condition string `pulumi:"condition"`
	// (Updatable) Condition or ConditionGroup assigned to the rule
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	ConditionGroup *DomainsRuleConditionGroup `pulumi:"conditionGroup"`
	// (Updatable) Rule Description
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Description *string `pulumi:"description"`
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value.  The value of the externalId attribute is always issued be the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	ExternalId *string `pulumi:"externalId"`
	// The basic endpoint for the identity domain
	IdcsEndpoint string `pulumi:"idcsEndpoint"`
	// (Updatable) Shows if the rule is locked
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	Locked *bool `pulumi:"locked"`
	// (Updatable) Rule name
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: always
	// * type: string
	// * uniqueness: none
	Name *string `pulumi:"name"`
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid *string `pulumi:"ocid"`
	// (Updatable) PolicyType on which the policy is based
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: true
	// * returned: default
	// * type: complex
	// * uniqueness: none
	PolicyType DomainsRulePolicyType `pulumi:"policyType"`
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// (Updatable) The return values are the then portion of a Rule
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [name]
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Returns []DomainsRuleReturn `pulumi:"returns"`
	// (Updatable) The Groovy script that is run instead of the rule, if policy type allows the rule to be a Groovy script.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	RuleGroovy *string `pulumi:"ruleGroovy"`
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas []string `pulumi:"schemas"`
	// (Updatable) A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags []DomainsRuleTag `pulumi:"tags"`
}

// The set of arguments for constructing a DomainsRule resource.
type DomainsRuleArgs struct {
	// (Updatable) If true, rule is active
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	Active pulumi.BoolPtrInput
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayInput
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrInput
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput
	// (Updatable) SCIM filters
	//
	// **Deprecated Since: 17.3.4**
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Condition pulumi.StringInput
	// (Updatable) Condition or ConditionGroup assigned to the rule
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	ConditionGroup DomainsRuleConditionGroupPtrInput
	// (Updatable) Rule Description
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Description pulumi.StringPtrInput
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value.  The value of the externalId attribute is always issued be the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	ExternalId pulumi.StringPtrInput
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringInput
	// (Updatable) Shows if the rule is locked
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	Locked pulumi.BoolPtrInput
	// (Updatable) Rule name
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: always
	// * type: string
	// * uniqueness: none
	Name pulumi.StringPtrInput
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid pulumi.StringPtrInput
	// (Updatable) PolicyType on which the policy is based
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: true
	// * returned: default
	// * type: complex
	// * uniqueness: none
	PolicyType DomainsRulePolicyTypeInput
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput
	// (Updatable) The return values are the then portion of a Rule
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [name]
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Returns DomainsRuleReturnArrayInput
	// (Updatable) The Groovy script that is run instead of the rule, if policy type allows the rule to be a Groovy script.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	RuleGroovy pulumi.StringPtrInput
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayInput
	// (Updatable) A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsRuleTagArrayInput
}

func (DomainsRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainsRuleArgs)(nil)).Elem()
}

type DomainsRuleInput interface {
	pulumi.Input

	ToDomainsRuleOutput() DomainsRuleOutput
	ToDomainsRuleOutputWithContext(ctx context.Context) DomainsRuleOutput
}

func (*DomainsRule) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainsRule)(nil)).Elem()
}

func (i *DomainsRule) ToDomainsRuleOutput() DomainsRuleOutput {
	return i.ToDomainsRuleOutputWithContext(context.Background())
}

func (i *DomainsRule) ToDomainsRuleOutputWithContext(ctx context.Context) DomainsRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsRuleOutput)
}

// DomainsRuleArrayInput is an input type that accepts DomainsRuleArray and DomainsRuleArrayOutput values.
// You can construct a concrete instance of `DomainsRuleArrayInput` via:
//
//	DomainsRuleArray{ DomainsRuleArgs{...} }
type DomainsRuleArrayInput interface {
	pulumi.Input

	ToDomainsRuleArrayOutput() DomainsRuleArrayOutput
	ToDomainsRuleArrayOutputWithContext(context.Context) DomainsRuleArrayOutput
}

type DomainsRuleArray []DomainsRuleInput

func (DomainsRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainsRule)(nil)).Elem()
}

func (i DomainsRuleArray) ToDomainsRuleArrayOutput() DomainsRuleArrayOutput {
	return i.ToDomainsRuleArrayOutputWithContext(context.Background())
}

func (i DomainsRuleArray) ToDomainsRuleArrayOutputWithContext(ctx context.Context) DomainsRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsRuleArrayOutput)
}

// DomainsRuleMapInput is an input type that accepts DomainsRuleMap and DomainsRuleMapOutput values.
// You can construct a concrete instance of `DomainsRuleMapInput` via:
//
//	DomainsRuleMap{ "key": DomainsRuleArgs{...} }
type DomainsRuleMapInput interface {
	pulumi.Input

	ToDomainsRuleMapOutput() DomainsRuleMapOutput
	ToDomainsRuleMapOutputWithContext(context.Context) DomainsRuleMapOutput
}

type DomainsRuleMap map[string]DomainsRuleInput

func (DomainsRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainsRule)(nil)).Elem()
}

func (i DomainsRuleMap) ToDomainsRuleMapOutput() DomainsRuleMapOutput {
	return i.ToDomainsRuleMapOutputWithContext(context.Background())
}

func (i DomainsRuleMap) ToDomainsRuleMapOutputWithContext(ctx context.Context) DomainsRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsRuleMapOutput)
}

type DomainsRuleOutput struct{ *pulumi.OutputState }

func (DomainsRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainsRule)(nil)).Elem()
}

func (o DomainsRuleOutput) ToDomainsRuleOutput() DomainsRuleOutput {
	return o
}

func (o DomainsRuleOutput) ToDomainsRuleOutputWithContext(ctx context.Context) DomainsRuleOutput {
	return o
}

// (Updatable) If true, rule is active
//
// **SCIM++ Properties:**
// * idcsSearchable: true
// * multiValued: false
// * mutability: readWrite
// * required: false
// * returned: default
// * type: boolean
// * uniqueness: none
func (o DomainsRuleOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsRule) pulumi.BoolOutput { return v.Active }).(pulumi.BoolOutput)
}

// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
func (o DomainsRuleOutput) AttributeSets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsRule) pulumi.StringArrayOutput { return v.AttributeSets }).(pulumi.StringArrayOutput)
}

// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
func (o DomainsRuleOutput) Attributes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsRule) pulumi.StringPtrOutput { return v.Attributes }).(pulumi.StringPtrOutput)
}

// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
func (o DomainsRuleOutput) Authorization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsRule) pulumi.StringPtrOutput { return v.Authorization }).(pulumi.StringPtrOutput)
}

// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsRuleOutput) CompartmentOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsRule) pulumi.StringOutput { return v.CompartmentOcid }).(pulumi.StringOutput)
}

// (Updatable) SCIM filters
//
// **Deprecated Since: 17.3.4**
//
// **SCIM++ Properties:**
// * caseExact: true
// * idcsSearchable: false
// * multiValued: false
// * mutability: readWrite
// * required: true
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsRuleOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsRule) pulumi.StringOutput { return v.Condition }).(pulumi.StringOutput)
}

// (Updatable) Condition or ConditionGroup assigned to the rule
//
// **SCIM++ Properties:**
// * idcsSearchable: true
// * multiValued: false
// * mutability: readWrite
// * required: false
// * returned: default
// * type: complex
// * uniqueness: none
func (o DomainsRuleOutput) ConditionGroup() DomainsRuleConditionGroupOutput {
	return o.ApplyT(func(v *DomainsRule) DomainsRuleConditionGroupOutput { return v.ConditionGroup }).(DomainsRuleConditionGroupOutput)
}

// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: boolean
// * uniqueness: none
func (o DomainsRuleOutput) DeleteInProgress() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsRule) pulumi.BoolOutput { return v.DeleteInProgress }).(pulumi.BoolOutput)
}

// (Updatable) Rule Description
//
// **SCIM++ Properties:**
// * idcsSearchable: false
// * multiValued: false
// * mutability: readWrite
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsRule) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsRuleOutput) DomainOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsRule) pulumi.StringOutput { return v.DomainOcid }).(pulumi.StringOutput)
}

// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value.  The value of the externalId attribute is always issued be the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: true
// * multiValued: false
// * mutability: readWrite
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsRuleOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsRule) pulumi.StringOutput { return v.ExternalId }).(pulumi.StringOutput)
}

// (Updatable) The User or App who created the Resource
//
// **SCIM++ Properties:**
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: true
// * returned: default
// * type: complex
func (o DomainsRuleOutput) IdcsCreatedBies() DomainsRuleIdcsCreatedByArrayOutput {
	return o.ApplyT(func(v *DomainsRule) DomainsRuleIdcsCreatedByArrayOutput { return v.IdcsCreatedBies }).(DomainsRuleIdcsCreatedByArrayOutput)
}

// The basic endpoint for the identity domain
func (o DomainsRuleOutput) IdcsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsRule) pulumi.StringOutput { return v.IdcsEndpoint }).(pulumi.StringOutput)
}

// (Updatable) The User or App who modified the Resource
//
// **SCIM++ Properties:**
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: complex
func (o DomainsRuleOutput) IdcsLastModifiedBies() DomainsRuleIdcsLastModifiedByArrayOutput {
	return o.ApplyT(func(v *DomainsRule) DomainsRuleIdcsLastModifiedByArrayOutput { return v.IdcsLastModifiedBies }).(DomainsRuleIdcsLastModifiedByArrayOutput)
}

// (Updatable) The release number when the resource was upgraded.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: request
// * type: string
// * uniqueness: none
func (o DomainsRuleOutput) IdcsLastUpgradedInRelease() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsRule) pulumi.StringOutput { return v.IdcsLastUpgradedInRelease }).(pulumi.StringOutput)
}

// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
//
// **SCIM++ Properties:**
// * idcsSearchable: false
// * multiValued: true
// * mutability: readOnly
// * required: false
// * returned: request
// * type: string
// * uniqueness: none
func (o DomainsRuleOutput) IdcsPreventedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsRule) pulumi.StringArrayOutput { return v.IdcsPreventedOperations }).(pulumi.StringArrayOutput)
}

// (Updatable) Shows if the rule is locked
//
// **SCIM++ Properties:**
// * idcsSearchable: true
// * multiValued: false
// * mutability: readWrite
// * required: false
// * returned: default
// * type: boolean
// * uniqueness: none
func (o DomainsRuleOutput) Locked() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsRule) pulumi.BoolOutput { return v.Locked }).(pulumi.BoolOutput)
}

// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
// * type: complex
func (o DomainsRuleOutput) Metas() DomainsRuleMetaArrayOutput {
	return o.ApplyT(func(v *DomainsRule) DomainsRuleMetaArrayOutput { return v.Metas }).(DomainsRuleMetaArrayOutput)
}

// (Updatable) Rule name
//
// **SCIM++ Properties:**
// * caseExact: true
// * idcsSearchable: true
// * multiValued: false
// * mutability: readWrite
// * required: true
// * returned: always
// * type: string
// * uniqueness: none
func (o DomainsRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
//
// **SCIM++ Properties:**
// * caseExact: true
// * idcsSearchable: true
// * multiValued: false
// * mutability: immutable
// * required: false
// * returned: default
// * type: string
// * uniqueness: global
func (o DomainsRuleOutput) Ocid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsRule) pulumi.StringOutput { return v.Ocid }).(pulumi.StringOutput)
}

// (Updatable) PolicyType on which the policy is based
//
// **SCIM++ Properties:**
// * idcsSearchable: true
// * multiValued: false
// * mutability: immutable
// * required: true
// * returned: default
// * type: complex
// * uniqueness: none
func (o DomainsRuleOutput) PolicyType() DomainsRulePolicyTypeOutput {
	return o.ApplyT(func(v *DomainsRule) DomainsRulePolicyTypeOutput { return v.PolicyType }).(DomainsRulePolicyTypeOutput)
}

// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
func (o DomainsRuleOutput) ResourceTypeSchemaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsRule) pulumi.StringPtrOutput { return v.ResourceTypeSchemaVersion }).(pulumi.StringPtrOutput)
}

// (Updatable) The return values are the then portion of a Rule
//
// **SCIM++ Properties:**
// * idcsCompositeKey: [name]
// * idcsSearchable: false
// * multiValued: true
// * mutability: readWrite
// * required: true
// * returned: default
// * type: complex
// * uniqueness: none
func (o DomainsRuleOutput) Returns() DomainsRuleReturnArrayOutput {
	return o.ApplyT(func(v *DomainsRule) DomainsRuleReturnArrayOutput { return v.Returns }).(DomainsRuleReturnArrayOutput)
}

// (Updatable) The Groovy script that is run instead of the rule, if policy type allows the rule to be a Groovy script.
//
// **SCIM++ Properties:**
// * caseExact: true
// * idcsSearchable: false
// * multiValued: false
// * mutability: readWrite
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsRuleOutput) RuleGroovy() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsRule) pulumi.StringOutput { return v.RuleGroovy }).(pulumi.StringOutput)
}

// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: true
// * mutability: readWrite
// * required: true
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsRuleOutput) Schemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsRule) pulumi.StringArrayOutput { return v.Schemas }).(pulumi.StringArrayOutput)
}

// (Updatable) A list of tags on this resource.
//
// **SCIM++ Properties:**
// * idcsCompositeKey: [key, value]
// * idcsSearchable: true
// * multiValued: true
// * mutability: readWrite
// * required: false
// * returned: request
// * type: complex
// * uniqueness: none
func (o DomainsRuleOutput) Tags() DomainsRuleTagArrayOutput {
	return o.ApplyT(func(v *DomainsRule) DomainsRuleTagArrayOutput { return v.Tags }).(DomainsRuleTagArrayOutput)
}

// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o DomainsRuleOutput) TenancyOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsRule) pulumi.StringOutput { return v.TenancyOcid }).(pulumi.StringOutput)
}

type DomainsRuleArrayOutput struct{ *pulumi.OutputState }

func (DomainsRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainsRule)(nil)).Elem()
}

func (o DomainsRuleArrayOutput) ToDomainsRuleArrayOutput() DomainsRuleArrayOutput {
	return o
}

func (o DomainsRuleArrayOutput) ToDomainsRuleArrayOutputWithContext(ctx context.Context) DomainsRuleArrayOutput {
	return o
}

func (o DomainsRuleArrayOutput) Index(i pulumi.IntInput) DomainsRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DomainsRule {
		return vs[0].([]*DomainsRule)[vs[1].(int)]
	}).(DomainsRuleOutput)
}

type DomainsRuleMapOutput struct{ *pulumi.OutputState }

func (DomainsRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainsRule)(nil)).Elem()
}

func (o DomainsRuleMapOutput) ToDomainsRuleMapOutput() DomainsRuleMapOutput {
	return o
}

func (o DomainsRuleMapOutput) ToDomainsRuleMapOutputWithContext(ctx context.Context) DomainsRuleMapOutput {
	return o
}

func (o DomainsRuleMapOutput) MapIndex(k pulumi.StringInput) DomainsRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DomainsRule {
		return vs[0].(map[string]*DomainsRule)[vs[1].(string)]
	}).(DomainsRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsRuleInput)(nil)).Elem(), &DomainsRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsRuleArrayInput)(nil)).Elem(), DomainsRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsRuleMapInput)(nil)).Elem(), DomainsRuleMap{})
	pulumi.RegisterOutputType(DomainsRuleOutput{})
	pulumi.RegisterOutputType(DomainsRuleArrayOutput{})
	pulumi.RegisterOutputType(DomainsRuleMapOutput{})
}
