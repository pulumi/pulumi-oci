// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Smtp Credential resource in Oracle Cloud Infrastructure Identity Domains service.
//
// # Add a user's smtp credenials
//
// ## Import
//
// SmtpCredentials can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:Identity/domainsSmtpCredential:DomainsSmtpCredential test_smtp_credential "idcsEndpoint/{idcsEndpoint}/smtpCredentials/{smtpCredentialId}"
//
// ```
type DomainsSmtpCredential struct {
	pulumi.CustomResourceState

	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayOutput `pulumi:"attributeSets"`
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrOutput `pulumi:"attributes"`
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrOutput `pulumi:"authorization"`
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	CompartmentOcid pulumi.StringOutput `pulumi:"compartmentOcid"`
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	DeleteInProgress pulumi.BoolOutput `pulumi:"deleteInProgress"`
	// Description
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	DomainOcid pulumi.StringOutput `pulumi:"domainOcid"`
	// User credential expires on
	ExpiresOn pulumi.StringOutput `pulumi:"expiresOn"`
	// (Updatable) The User or App who created the Resource
	IdcsCreatedBies DomainsSmtpCredentialIdcsCreatedByArrayOutput `pulumi:"idcsCreatedBies"`
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringOutput `pulumi:"idcsEndpoint"`
	// (Updatable) The User or App who modified the Resource
	IdcsLastModifiedBies DomainsSmtpCredentialIdcsLastModifiedByArrayOutput `pulumi:"idcsLastModifiedBies"`
	// (Updatable) The release number when the resource was upgraded.
	IdcsLastUpgradedInRelease pulumi.StringOutput `pulumi:"idcsLastUpgradedInRelease"`
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	IdcsPreventedOperations pulumi.StringArrayOutput `pulumi:"idcsPreventedOperations"`
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	Metas DomainsSmtpCredentialMetaArrayOutput `pulumi:"metas"`
	// User's ocid
	Ocid pulumi.StringOutput `pulumi:"ocid"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrOutput `pulumi:"resourceTypeSchemaVersion"`
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	Schemas pulumi.StringArrayOutput `pulumi:"schemas"`
	// User credential status
	Status pulumi.StringOutput `pulumi:"status"`
	// A list of tags on this resource.
	Tags DomainsSmtpCredentialTagArrayOutput `pulumi:"tags"`
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	TenancyOcid pulumi.StringOutput `pulumi:"tenancyOcid"`
	// Controls whether a user can update themselves or not via User related APIs
	UrnietfparamsscimschemasoracleidcsextensionselfChangeUser DomainsSmtpCredentialUrnietfparamsscimschemasoracleidcsextensionselfChangeUserOutput `pulumi:"urnietfparamsscimschemasoracleidcsextensionselfChangeUser"`
	// User linked to smtp credential
	User DomainsSmtpCredentialUserOutput `pulumi:"user"`
	// (Updatable) User name
	UserName pulumi.StringOutput `pulumi:"userName"`
}

// NewDomainsSmtpCredential registers a new resource with the given unique name, arguments, and options.
func NewDomainsSmtpCredential(ctx *pulumi.Context,
	name string, args *DomainsSmtpCredentialArgs, opts ...pulumi.ResourceOption) (*DomainsSmtpCredential, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IdcsEndpoint == nil {
		return nil, errors.New("invalid value for required argument 'IdcsEndpoint'")
	}
	if args.Schemas == nil {
		return nil, errors.New("invalid value for required argument 'Schemas'")
	}
	var resource DomainsSmtpCredential
	err := ctx.RegisterResource("oci:Identity/domainsSmtpCredential:DomainsSmtpCredential", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomainsSmtpCredential gets an existing DomainsSmtpCredential resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainsSmtpCredential(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainsSmtpCredentialState, opts ...pulumi.ResourceOption) (*DomainsSmtpCredential, error) {
	var resource DomainsSmtpCredential
	err := ctx.ReadResource("oci:Identity/domainsSmtpCredential:DomainsSmtpCredential", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DomainsSmtpCredential resources.
type domainsSmtpCredentialState struct {
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets []string `pulumi:"attributeSets"`
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes *string `pulumi:"attributes"`
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	CompartmentOcid *string `pulumi:"compartmentOcid"`
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	DeleteInProgress *bool `pulumi:"deleteInProgress"`
	// Description
	Description *string `pulumi:"description"`
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	DomainOcid *string `pulumi:"domainOcid"`
	// User credential expires on
	ExpiresOn *string `pulumi:"expiresOn"`
	// (Updatable) The User or App who created the Resource
	IdcsCreatedBies []DomainsSmtpCredentialIdcsCreatedBy `pulumi:"idcsCreatedBies"`
	// The basic endpoint for the identity domain
	IdcsEndpoint *string `pulumi:"idcsEndpoint"`
	// (Updatable) The User or App who modified the Resource
	IdcsLastModifiedBies []DomainsSmtpCredentialIdcsLastModifiedBy `pulumi:"idcsLastModifiedBies"`
	// (Updatable) The release number when the resource was upgraded.
	IdcsLastUpgradedInRelease *string `pulumi:"idcsLastUpgradedInRelease"`
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	IdcsPreventedOperations []string `pulumi:"idcsPreventedOperations"`
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	Metas []DomainsSmtpCredentialMeta `pulumi:"metas"`
	// User's ocid
	Ocid *string `pulumi:"ocid"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	Schemas []string `pulumi:"schemas"`
	// User credential status
	Status *string `pulumi:"status"`
	// A list of tags on this resource.
	Tags []DomainsSmtpCredentialTag `pulumi:"tags"`
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	TenancyOcid *string `pulumi:"tenancyOcid"`
	// Controls whether a user can update themselves or not via User related APIs
	UrnietfparamsscimschemasoracleidcsextensionselfChangeUser *DomainsSmtpCredentialUrnietfparamsscimschemasoracleidcsextensionselfChangeUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionselfChangeUser"`
	// User linked to smtp credential
	User *DomainsSmtpCredentialUser `pulumi:"user"`
	// (Updatable) User name
	UserName *string `pulumi:"userName"`
}

type DomainsSmtpCredentialState struct {
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayInput
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrInput
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	CompartmentOcid pulumi.StringPtrInput
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	DeleteInProgress pulumi.BoolPtrInput
	// Description
	Description pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	DomainOcid pulumi.StringPtrInput
	// User credential expires on
	ExpiresOn pulumi.StringPtrInput
	// (Updatable) The User or App who created the Resource
	IdcsCreatedBies DomainsSmtpCredentialIdcsCreatedByArrayInput
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringPtrInput
	// (Updatable) The User or App who modified the Resource
	IdcsLastModifiedBies DomainsSmtpCredentialIdcsLastModifiedByArrayInput
	// (Updatable) The release number when the resource was upgraded.
	IdcsLastUpgradedInRelease pulumi.StringPtrInput
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	IdcsPreventedOperations pulumi.StringArrayInput
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	Metas DomainsSmtpCredentialMetaArrayInput
	// User's ocid
	Ocid pulumi.StringPtrInput
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	Schemas pulumi.StringArrayInput
	// User credential status
	Status pulumi.StringPtrInput
	// A list of tags on this resource.
	Tags DomainsSmtpCredentialTagArrayInput
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	TenancyOcid pulumi.StringPtrInput
	// Controls whether a user can update themselves or not via User related APIs
	UrnietfparamsscimschemasoracleidcsextensionselfChangeUser DomainsSmtpCredentialUrnietfparamsscimschemasoracleidcsextensionselfChangeUserPtrInput
	// User linked to smtp credential
	User DomainsSmtpCredentialUserPtrInput
	// (Updatable) User name
	UserName pulumi.StringPtrInput
}

func (DomainsSmtpCredentialState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainsSmtpCredentialState)(nil)).Elem()
}

type domainsSmtpCredentialArgs struct {
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets []string `pulumi:"attributeSets"`
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes *string `pulumi:"attributes"`
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// Description
	Description *string `pulumi:"description"`
	// User credential expires on
	ExpiresOn *string `pulumi:"expiresOn"`
	// The basic endpoint for the identity domain
	IdcsEndpoint string `pulumi:"idcsEndpoint"`
	// User's ocid
	Ocid *string `pulumi:"ocid"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	Schemas []string `pulumi:"schemas"`
	// User credential status
	Status *string `pulumi:"status"`
	// A list of tags on this resource.
	Tags []DomainsSmtpCredentialTag `pulumi:"tags"`
	// Controls whether a user can update themselves or not via User related APIs
	UrnietfparamsscimschemasoracleidcsextensionselfChangeUser *DomainsSmtpCredentialUrnietfparamsscimschemasoracleidcsextensionselfChangeUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionselfChangeUser"`
	// User linked to smtp credential
	User *DomainsSmtpCredentialUser `pulumi:"user"`
}

// The set of arguments for constructing a DomainsSmtpCredential resource.
type DomainsSmtpCredentialArgs struct {
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayInput
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrInput
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput
	// Description
	Description pulumi.StringPtrInput
	// User credential expires on
	ExpiresOn pulumi.StringPtrInput
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringInput
	// User's ocid
	Ocid pulumi.StringPtrInput
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	Schemas pulumi.StringArrayInput
	// User credential status
	Status pulumi.StringPtrInput
	// A list of tags on this resource.
	Tags DomainsSmtpCredentialTagArrayInput
	// Controls whether a user can update themselves or not via User related APIs
	UrnietfparamsscimschemasoracleidcsextensionselfChangeUser DomainsSmtpCredentialUrnietfparamsscimschemasoracleidcsextensionselfChangeUserPtrInput
	// User linked to smtp credential
	User DomainsSmtpCredentialUserPtrInput
}

func (DomainsSmtpCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainsSmtpCredentialArgs)(nil)).Elem()
}

type DomainsSmtpCredentialInput interface {
	pulumi.Input

	ToDomainsSmtpCredentialOutput() DomainsSmtpCredentialOutput
	ToDomainsSmtpCredentialOutputWithContext(ctx context.Context) DomainsSmtpCredentialOutput
}

func (*DomainsSmtpCredential) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainsSmtpCredential)(nil)).Elem()
}

func (i *DomainsSmtpCredential) ToDomainsSmtpCredentialOutput() DomainsSmtpCredentialOutput {
	return i.ToDomainsSmtpCredentialOutputWithContext(context.Background())
}

func (i *DomainsSmtpCredential) ToDomainsSmtpCredentialOutputWithContext(ctx context.Context) DomainsSmtpCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsSmtpCredentialOutput)
}

// DomainsSmtpCredentialArrayInput is an input type that accepts DomainsSmtpCredentialArray and DomainsSmtpCredentialArrayOutput values.
// You can construct a concrete instance of `DomainsSmtpCredentialArrayInput` via:
//
//	DomainsSmtpCredentialArray{ DomainsSmtpCredentialArgs{...} }
type DomainsSmtpCredentialArrayInput interface {
	pulumi.Input

	ToDomainsSmtpCredentialArrayOutput() DomainsSmtpCredentialArrayOutput
	ToDomainsSmtpCredentialArrayOutputWithContext(context.Context) DomainsSmtpCredentialArrayOutput
}

type DomainsSmtpCredentialArray []DomainsSmtpCredentialInput

func (DomainsSmtpCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainsSmtpCredential)(nil)).Elem()
}

func (i DomainsSmtpCredentialArray) ToDomainsSmtpCredentialArrayOutput() DomainsSmtpCredentialArrayOutput {
	return i.ToDomainsSmtpCredentialArrayOutputWithContext(context.Background())
}

func (i DomainsSmtpCredentialArray) ToDomainsSmtpCredentialArrayOutputWithContext(ctx context.Context) DomainsSmtpCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsSmtpCredentialArrayOutput)
}

// DomainsSmtpCredentialMapInput is an input type that accepts DomainsSmtpCredentialMap and DomainsSmtpCredentialMapOutput values.
// You can construct a concrete instance of `DomainsSmtpCredentialMapInput` via:
//
//	DomainsSmtpCredentialMap{ "key": DomainsSmtpCredentialArgs{...} }
type DomainsSmtpCredentialMapInput interface {
	pulumi.Input

	ToDomainsSmtpCredentialMapOutput() DomainsSmtpCredentialMapOutput
	ToDomainsSmtpCredentialMapOutputWithContext(context.Context) DomainsSmtpCredentialMapOutput
}

type DomainsSmtpCredentialMap map[string]DomainsSmtpCredentialInput

func (DomainsSmtpCredentialMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainsSmtpCredential)(nil)).Elem()
}

func (i DomainsSmtpCredentialMap) ToDomainsSmtpCredentialMapOutput() DomainsSmtpCredentialMapOutput {
	return i.ToDomainsSmtpCredentialMapOutputWithContext(context.Background())
}

func (i DomainsSmtpCredentialMap) ToDomainsSmtpCredentialMapOutputWithContext(ctx context.Context) DomainsSmtpCredentialMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsSmtpCredentialMapOutput)
}

type DomainsSmtpCredentialOutput struct{ *pulumi.OutputState }

func (DomainsSmtpCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainsSmtpCredential)(nil)).Elem()
}

func (o DomainsSmtpCredentialOutput) ToDomainsSmtpCredentialOutput() DomainsSmtpCredentialOutput {
	return o
}

func (o DomainsSmtpCredentialOutput) ToDomainsSmtpCredentialOutputWithContext(ctx context.Context) DomainsSmtpCredentialOutput {
	return o
}

// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
func (o DomainsSmtpCredentialOutput) AttributeSets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsSmtpCredential) pulumi.StringArrayOutput { return v.AttributeSets }).(pulumi.StringArrayOutput)
}

// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
func (o DomainsSmtpCredentialOutput) Attributes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsSmtpCredential) pulumi.StringPtrOutput { return v.Attributes }).(pulumi.StringPtrOutput)
}

// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
func (o DomainsSmtpCredentialOutput) Authorization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsSmtpCredential) pulumi.StringPtrOutput { return v.Authorization }).(pulumi.StringPtrOutput)
}

// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
func (o DomainsSmtpCredentialOutput) CompartmentOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsSmtpCredential) pulumi.StringOutput { return v.CompartmentOcid }).(pulumi.StringOutput)
}

// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
func (o DomainsSmtpCredentialOutput) DeleteInProgress() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsSmtpCredential) pulumi.BoolOutput { return v.DeleteInProgress }).(pulumi.BoolOutput)
}

// Description
func (o DomainsSmtpCredentialOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsSmtpCredential) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
func (o DomainsSmtpCredentialOutput) DomainOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsSmtpCredential) pulumi.StringOutput { return v.DomainOcid }).(pulumi.StringOutput)
}

// User credential expires on
func (o DomainsSmtpCredentialOutput) ExpiresOn() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsSmtpCredential) pulumi.StringOutput { return v.ExpiresOn }).(pulumi.StringOutput)
}

// (Updatable) The User or App who created the Resource
func (o DomainsSmtpCredentialOutput) IdcsCreatedBies() DomainsSmtpCredentialIdcsCreatedByArrayOutput {
	return o.ApplyT(func(v *DomainsSmtpCredential) DomainsSmtpCredentialIdcsCreatedByArrayOutput { return v.IdcsCreatedBies }).(DomainsSmtpCredentialIdcsCreatedByArrayOutput)
}

// The basic endpoint for the identity domain
func (o DomainsSmtpCredentialOutput) IdcsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsSmtpCredential) pulumi.StringOutput { return v.IdcsEndpoint }).(pulumi.StringOutput)
}

// (Updatable) The User or App who modified the Resource
func (o DomainsSmtpCredentialOutput) IdcsLastModifiedBies() DomainsSmtpCredentialIdcsLastModifiedByArrayOutput {
	return o.ApplyT(func(v *DomainsSmtpCredential) DomainsSmtpCredentialIdcsLastModifiedByArrayOutput {
		return v.IdcsLastModifiedBies
	}).(DomainsSmtpCredentialIdcsLastModifiedByArrayOutput)
}

// (Updatable) The release number when the resource was upgraded.
func (o DomainsSmtpCredentialOutput) IdcsLastUpgradedInRelease() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsSmtpCredential) pulumi.StringOutput { return v.IdcsLastUpgradedInRelease }).(pulumi.StringOutput)
}

// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
func (o DomainsSmtpCredentialOutput) IdcsPreventedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsSmtpCredential) pulumi.StringArrayOutput { return v.IdcsPreventedOperations }).(pulumi.StringArrayOutput)
}

// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
func (o DomainsSmtpCredentialOutput) Metas() DomainsSmtpCredentialMetaArrayOutput {
	return o.ApplyT(func(v *DomainsSmtpCredential) DomainsSmtpCredentialMetaArrayOutput { return v.Metas }).(DomainsSmtpCredentialMetaArrayOutput)
}

// User's ocid
func (o DomainsSmtpCredentialOutput) Ocid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsSmtpCredential) pulumi.StringOutput { return v.Ocid }).(pulumi.StringOutput)
}

// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
func (o DomainsSmtpCredentialOutput) ResourceTypeSchemaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsSmtpCredential) pulumi.StringPtrOutput { return v.ResourceTypeSchemaVersion }).(pulumi.StringPtrOutput)
}

// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
func (o DomainsSmtpCredentialOutput) Schemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsSmtpCredential) pulumi.StringArrayOutput { return v.Schemas }).(pulumi.StringArrayOutput)
}

// User credential status
func (o DomainsSmtpCredentialOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsSmtpCredential) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// A list of tags on this resource.
func (o DomainsSmtpCredentialOutput) Tags() DomainsSmtpCredentialTagArrayOutput {
	return o.ApplyT(func(v *DomainsSmtpCredential) DomainsSmtpCredentialTagArrayOutput { return v.Tags }).(DomainsSmtpCredentialTagArrayOutput)
}

// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
func (o DomainsSmtpCredentialOutput) TenancyOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsSmtpCredential) pulumi.StringOutput { return v.TenancyOcid }).(pulumi.StringOutput)
}

// Controls whether a user can update themselves or not via User related APIs
func (o DomainsSmtpCredentialOutput) UrnietfparamsscimschemasoracleidcsextensionselfChangeUser() DomainsSmtpCredentialUrnietfparamsscimschemasoracleidcsextensionselfChangeUserOutput {
	return o.ApplyT(func(v *DomainsSmtpCredential) DomainsSmtpCredentialUrnietfparamsscimschemasoracleidcsextensionselfChangeUserOutput {
		return v.UrnietfparamsscimschemasoracleidcsextensionselfChangeUser
	}).(DomainsSmtpCredentialUrnietfparamsscimschemasoracleidcsextensionselfChangeUserOutput)
}

// User linked to smtp credential
func (o DomainsSmtpCredentialOutput) User() DomainsSmtpCredentialUserOutput {
	return o.ApplyT(func(v *DomainsSmtpCredential) DomainsSmtpCredentialUserOutput { return v.User }).(DomainsSmtpCredentialUserOutput)
}

// (Updatable) User name
func (o DomainsSmtpCredentialOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsSmtpCredential) pulumi.StringOutput { return v.UserName }).(pulumi.StringOutput)
}

type DomainsSmtpCredentialArrayOutput struct{ *pulumi.OutputState }

func (DomainsSmtpCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainsSmtpCredential)(nil)).Elem()
}

func (o DomainsSmtpCredentialArrayOutput) ToDomainsSmtpCredentialArrayOutput() DomainsSmtpCredentialArrayOutput {
	return o
}

func (o DomainsSmtpCredentialArrayOutput) ToDomainsSmtpCredentialArrayOutputWithContext(ctx context.Context) DomainsSmtpCredentialArrayOutput {
	return o
}

func (o DomainsSmtpCredentialArrayOutput) Index(i pulumi.IntInput) DomainsSmtpCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DomainsSmtpCredential {
		return vs[0].([]*DomainsSmtpCredential)[vs[1].(int)]
	}).(DomainsSmtpCredentialOutput)
}

type DomainsSmtpCredentialMapOutput struct{ *pulumi.OutputState }

func (DomainsSmtpCredentialMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainsSmtpCredential)(nil)).Elem()
}

func (o DomainsSmtpCredentialMapOutput) ToDomainsSmtpCredentialMapOutput() DomainsSmtpCredentialMapOutput {
	return o
}

func (o DomainsSmtpCredentialMapOutput) ToDomainsSmtpCredentialMapOutputWithContext(ctx context.Context) DomainsSmtpCredentialMapOutput {
	return o
}

func (o DomainsSmtpCredentialMapOutput) MapIndex(k pulumi.StringInput) DomainsSmtpCredentialOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DomainsSmtpCredential {
		return vs[0].(map[string]*DomainsSmtpCredential)[vs[1].(string)]
	}).(DomainsSmtpCredentialOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsSmtpCredentialInput)(nil)).Elem(), &DomainsSmtpCredential{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsSmtpCredentialArrayInput)(nil)).Elem(), DomainsSmtpCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsSmtpCredentialMapInput)(nil)).Elem(), DomainsSmtpCredentialMap{})
	pulumi.RegisterOutputType(DomainsSmtpCredentialOutput{})
	pulumi.RegisterOutputType(DomainsSmtpCredentialArrayOutput{})
	pulumi.RegisterOutputType(DomainsSmtpCredentialMapOutput{})
}
