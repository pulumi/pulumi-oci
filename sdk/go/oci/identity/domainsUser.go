// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the User resource in Oracle Cloud Infrastructure Identity Domains service.
//
// Create a user.
//
// ## Import
//
// Users can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Identity/domainsUser:DomainsUser test_user "idcsEndpoint/{idcsEndpoint}/users/{userId}"
// ```
type DomainsUser struct {
	pulumi.CustomResourceState

	// (Updatable) User status
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: Active
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Active]]
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	Active pulumi.BoolOutput `pulumi:"active"`
	// (Updatable) A physical mailing address for this User, as described in (address Element). Canonical Type Values of work, home, and other. The value attribute is a complex type with the following sub-attributes.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [type]
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Work Address Street, deprecatedColumnHeaderName:Work Street Address, mapsTo:addresses[work].streetAddress], [columnHeaderName:Work Address Locality, deprecatedColumnHeaderName:Work City, mapsTo:addresses[work].locality], [columnHeaderName:Work Address Region, deprecatedColumnHeaderName:Work State, mapsTo:addresses[work].region], [columnHeaderName:Work Address Postal Code, deprecatedColumnHeaderName:Work Postal Code, mapsTo:addresses[work].postalCode], [columnHeaderName:Work Address Country, deprecatedColumnHeaderName:Work Country, mapsTo:addresses[work].country], [columnHeaderName:Work Address Formatted, mapsTo:addresses[work].formatted], [columnHeaderName:Home Address Formatted, mapsTo:addresses[home].formatted], [columnHeaderName:Other Address Formatted, mapsTo:addresses[other].formatted], [columnHeaderName:Home Address Street, mapsTo:addresses[home].streetAddress], [columnHeaderName:Other Address Street, mapsTo:addresses[other].streetAddress], [columnHeaderName:Home Address Locality, mapsTo:addresses[home].locality], [columnHeaderName:Other Address Locality, mapsTo:addresses[other].locality], [columnHeaderName:Home Address Region, mapsTo:addresses[home].region], [columnHeaderName:Other Address Region, mapsTo:addresses[other].region], [columnHeaderName:Home Address Country, mapsTo:addresses[home].country], [columnHeaderName:Other Address Country, mapsTo:addresses[other].country], [columnHeaderName:Home Address Postal Code, mapsTo:addresses[home].postalCode], [columnHeaderName:Other Address Postal Code, mapsTo:addresses[other].postalCode], [columnHeaderName:Primary Address Type, mapsTo:addresses[$(type)].primary]]
	// * idcsPii: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Addresses DomainsUserAddressArrayOutput `pulumi:"addresses"`
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayOutput `pulumi:"attributeSets"`
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrOutput `pulumi:"attributes"`
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrOutput `pulumi:"authorization"`
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid pulumi.StringOutput `pulumi:"compartmentOcid"`
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress pulumi.BoolOutput `pulumi:"deleteInProgress"`
	// (Updatable) Description of the user
	//
	// **Added In:** 2012271618
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsPii: true
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Display name
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: Display Name
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Display Name]]
	// * idcsPii: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid pulumi.StringOutput `pulumi:"domainOcid"`
	// (Updatable) A complex attribute representing emails
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value, type]
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Work Email, mapsTo:emails[work].value], [columnHeaderName:Home Email, mapsTo:emails[home].value], [columnHeaderName:Primary Email Type, mapsTo:emails[$(type)].primary], [columnHeaderName:Other Email, mapsTo:emails[other].value], [columnHeaderName:Recovery Email, mapsTo:emails[recovery].value], [columnHeaderName:Work Email Verified, mapsTo:emails[work].verified], [columnHeaderName:Home Email Verified, mapsTo:emails[home].verified], [columnHeaderName:Other Email Verified, mapsTo:emails[other].verified], [columnHeaderName:Recovery Email Verified, mapsTo:emails[recovery].verified]]
	// * idcsPii: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Emails DomainsUserEmailArrayOutput `pulumi:"emails"`
	// (Updatable) A list of entitlements for the User that represent a thing the User has.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value, type]
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Entitlements DomainsUserEntitlementArrayOutput `pulumi:"entitlements"`
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:External Id]]
	// * idcsPii: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	ExternalId  pulumi.StringOutput  `pulumi:"externalId"`
	ForceDelete pulumi.BoolPtrOutput `pulumi:"forceDelete"`
	// (Updatable) A list of groups that the user belongs to, either thorough direct membership, nested groups, or dynamically calculated
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Groups DomainsUserGroupArrayOutput `pulumi:"groups"`
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies DomainsUserIdcsCreatedByArrayOutput `pulumi:"idcsCreatedBies"`
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringOutput `pulumi:"idcsEndpoint"`
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies DomainsUserIdcsLastModifiedByArrayOutput `pulumi:"idcsLastModifiedBies"`
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease pulumi.StringOutput `pulumi:"idcsLastUpgradedInRelease"`
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations pulumi.StringArrayOutput `pulumi:"idcsPreventedOperations"`
	// (Updatable) User's instant messaging addresses
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value, type]
	// * idcsPii: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Ims DomainsUserImArrayOutput `pulumi:"ims"`
	// (Updatable) Used to indicate the User's default location for purposes of localizing items such as currency, date and time format, numerical representations, and so on.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: Locale
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Locale]]
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Locale pulumi.StringOutput `pulumi:"locale"`
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas DomainsUserMetaArrayOutput `pulumi:"metas"`
	// (Updatable) A complex attribute that contains attributes representing the name
	//
	// **SCIM++ Properties:**
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Formatted Name, mapsTo:name.formatted], [columnHeaderName:Honorific Prefix, mapsTo:name.honorificPrefix], [columnHeaderName:First Name, mapsTo:name.givenName], [columnHeaderName:Middle Name, mapsTo:name.middleName], [columnHeaderName:Last Name, mapsTo:name.familyName], [columnHeaderName:Honorific Suffix, mapsTo:name.honorificSuffix]]
	// * idcsPii: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Name DomainsUserNameOutput `pulumi:"name"`
	// (Updatable) Nick name
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: Nick Name
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Nick Name]]
	// * idcsPii: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	NickName pulumi.StringOutput `pulumi:"nickName"`
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid pulumi.StringOutput `pulumi:"ocid"`
	// (Updatable) Password attribute. Max length for password is controlled via Password Policy.
	//
	// **SCIM++ Properties:**
	// * idcsCsvAttributeName: Password
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Password]]
	// * idcsPii: true
	// * idcsSearchable: false
	// * idcsSensitive: hash
	// * multiValued: false
	// * mutability: writeOnly
	// * required: false
	// * returned: never
	// * type: string
	// * uniqueness: none
	Password pulumi.StringOutput `pulumi:"password"`
	// (Updatable) Phone numbers
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value, type]
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Work Phone, mapsTo:phoneNumbers[work].value], [columnHeaderName:Mobile No, mapsTo:phoneNumbers[mobile].value], [columnHeaderName:Home Phone, mapsTo:phoneNumbers[home].value], [columnHeaderName:Fax, mapsTo:phoneNumbers[fax].value], [columnHeaderName:Pager, mapsTo:phoneNumbers[pager].value], [columnHeaderName:Other Phone, mapsTo:phoneNumbers[other].value], [columnHeaderName:Recovery Phone, mapsTo:phoneNumbers[recovery].value], [columnHeaderName:Primary Phone Type, mapsTo:phoneNumbers[$(type)].primary]]
	// * idcsPii: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	PhoneNumbers DomainsUserPhoneNumberArrayOutput `pulumi:"phoneNumbers"`
	// (Updatable) URLs of photos for the User
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value, type]
	// * idcsPii: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Photos DomainsUserPhotoArrayOutput `pulumi:"photos"`
	// (Updatable) User's preferred written or spoken language used for localized user interfaces
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: Preferred Language
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Preferred Language]]
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	PreferredLanguage pulumi.StringOutput `pulumi:"preferredLanguage"`
	// (Updatable) A fully-qualified URL to a page representing the User's online profile
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: Profile URL
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Profile Url]]
	// * idcsPii: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: reference
	// * uniqueness: none
	ProfileUrl pulumi.StringOutput `pulumi:"profileUrl"`
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrOutput `pulumi:"resourceTypeSchemaVersion"`
	// (Updatable) A list of roles for the User that collectively represent who the User is; e.g., 'Student', 'Faculty'.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value, type]
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Roles DomainsUserRoleArrayOutput `pulumi:"roles"`
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayOutput `pulumi:"schemas"`
	// (Updatable) A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsUserTagArrayOutput `pulumi:"tags"`
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	TenancyOcid pulumi.StringOutput `pulumi:"tenancyOcid"`
	// (Updatable) User's timezone
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCanonicalValueSourceFilter: attrName eq "timezones" and attrValues.value eq "$(timezone)"
	// * idcsCanonicalValueSourceResourceType: AllowedValue
	// * idcsCsvAttributeName: TimeZone
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Time Zone, deprecatedColumnHeaderName:TimeZone]]
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Timezone pulumi.StringOutput `pulumi:"timezone"`
	// (Updatable) Title
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: Title
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Title]]
	// * idcsPii: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Title pulumi.StringOutput `pulumi:"title"`
	// (Updatable) Enterprise User
	Urnietfparamsscimschemasextensionenterprise20user DomainsUserUrnietfparamsscimschemasextensionenterprise20userOutput `pulumi:"urnietfparamsscimschemasextensionenterprise20user"`
	// (Updatable) Oracle Cloud Infrastructure Tags.
	UrnietfparamsscimschemasoracleidcsextensionOciTags DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagsOutput `pulumi:"urnietfparamsscimschemasoracleidcsextensionOciTags"`
	// (Updatable) This extension defines attributes to manage user's risk score.
	UrnietfparamsscimschemasoracleidcsextensionadaptiveUser DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserOutput `pulumi:"urnietfparamsscimschemasoracleidcsextensionadaptiveUser"`
	// (Updatable) User's Capabilities
	UrnietfparamsscimschemasoracleidcsextensioncapabilitiesUser DomainsUserUrnietfparamsscimschemasoracleidcsextensioncapabilitiesUserOutput `pulumi:"urnietfparamsscimschemasoracleidcsextensioncapabilitiesUser"`
	// (Updatable) The database credentials user extension.
	UrnietfparamsscimschemasoracleidcsextensiondbCredentialsUser DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUserOutput `pulumi:"urnietfparamsscimschemasoracleidcsextensiondbCredentialsUser"`
	// (Updatable) DB User extension
	UrnietfparamsscimschemasoracleidcsextensiondbUserUsers DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserArrayOutput `pulumi:"urnietfparamsscimschemasoracleidcsextensiondbUserUsers"`
	// (Updatable) Kerberos User extension
	UrnietfparamsscimschemasoracleidcsextensionkerberosUserUser DomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUserOutput `pulumi:"urnietfparamsscimschemasoracleidcsextensionkerberosUserUser"`
	// (Updatable) This extension defines attributes used to manage Multi-Factor Authentication within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use MFA.
	UrnietfparamsscimschemasoracleidcsextensionmfaUser DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserOutput `pulumi:"urnietfparamsscimschemasoracleidcsextensionmfaUser"`
	// (Updatable) This extension defines attributes used to manage account passwords within a Service Provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use passwords.
	UrnietfparamsscimschemasoracleidcsextensionpasswordStateUsers DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordStateUserArrayOutput `pulumi:"urnietfparamsscimschemasoracleidcsextensionpasswordStateUsers"`
	// (Updatable) This extension defines attributes used to manage Passwordless-Factor Authentication within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use MFA.
	UrnietfparamsscimschemasoracleidcsextensionpasswordlessUser DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUserOutput `pulumi:"urnietfparamsscimschemasoracleidcsextensionpasswordlessUser"`
	// (Updatable) POSIX User extension
	UrnietfparamsscimschemasoracleidcsextensionposixUser DomainsUserUrnietfparamsscimschemasoracleidcsextensionposixUserOutput `pulumi:"urnietfparamsscimschemasoracleidcsextensionposixUser"`
	// (Updatable) This extension defines the attributes used to store the security questions of a user.
	UrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUser DomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUserOutput `pulumi:"urnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUser"`
	// (Updatable) Controls whether a user can update themselves or not via User related APIs
	UrnietfparamsscimschemasoracleidcsextensionselfChangeUser DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfChangeUserOutput `pulumi:"urnietfparamsscimschemasoracleidcsextensionselfChangeUser"`
	// (Updatable) This extension defines attributes used to manage self registration profile linked to the user.
	UrnietfparamsscimschemasoracleidcsextensionselfRegistrationUser DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserOutput `pulumi:"urnietfparamsscimschemasoracleidcsextensionselfRegistrationUser"`
	// (Updatable) SFF Auth Keys User extension
	UrnietfparamsscimschemasoracleidcsextensionsffUser DomainsUserUrnietfparamsscimschemasoracleidcsextensionsffUserOutput `pulumi:"urnietfparamsscimschemasoracleidcsextensionsffUser"`
	// (Updatable) Social User extension
	UrnietfparamsscimschemasoracleidcsextensionsocialAccountUser DomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUserOutput `pulumi:"urnietfparamsscimschemasoracleidcsextensionsocialAccountUser"`
	// (Updatable) Terms Of Use extension
	UrnietfparamsscimschemasoracleidcsextensiontermsOfUseUser DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserOutput `pulumi:"urnietfparamsscimschemasoracleidcsextensiontermsOfUseUser"`
	// (Updatable) User's credentials
	UrnietfparamsscimschemasoracleidcsextensionuserCredentialsUsers DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserArrayOutput `pulumi:"urnietfparamsscimschemasoracleidcsextensionuserCredentialsUsers"`
	// (Updatable) This extension defines the attributes used to manage account passwords within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use passwords.
	UrnietfparamsscimschemasoracleidcsextensionuserStateUser DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserOutput `pulumi:"urnietfparamsscimschemasoracleidcsextensionuserStateUser"`
	// (Updatable) Oracle Identity Cloud Service User
	UrnietfparamsscimschemasoracleidcsextensionuserUser DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserOutput `pulumi:"urnietfparamsscimschemasoracleidcsextensionuserUser"`
	// (Updatable) User name
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: User ID
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:User Name, deprecatedColumnHeaderName:User ID]]
	// * idcsPii: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: always
	// * type: string
	// * uniqueness: global
	UserName pulumi.StringOutput `pulumi:"userName"`
	// (Updatable) Used to identify the organization-to-user relationship
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: User Type
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:User Type]]
	// * idcsPii: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	UserType pulumi.StringOutput `pulumi:"userType"`
	// (Updatable) A list of certificates issued to the User.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value]
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	X509certificates DomainsUserX509certificateArrayOutput `pulumi:"x509certificates"`
}

// NewDomainsUser registers a new resource with the given unique name, arguments, and options.
func NewDomainsUser(ctx *pulumi.Context,
	name string, args *DomainsUserArgs, opts ...pulumi.ResourceOption) (*DomainsUser, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IdcsEndpoint == nil {
		return nil, errors.New("invalid value for required argument 'IdcsEndpoint'")
	}
	if args.Schemas == nil {
		return nil, errors.New("invalid value for required argument 'Schemas'")
	}
	if args.UserName == nil {
		return nil, errors.New("invalid value for required argument 'UserName'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DomainsUser
	err := ctx.RegisterResource("oci:Identity/domainsUser:DomainsUser", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomainsUser gets an existing DomainsUser resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainsUser(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainsUserState, opts ...pulumi.ResourceOption) (*DomainsUser, error) {
	var resource DomainsUser
	err := ctx.ReadResource("oci:Identity/domainsUser:DomainsUser", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DomainsUser resources.
type domainsUserState struct {
	// (Updatable) User status
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: Active
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Active]]
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	Active *bool `pulumi:"active"`
	// (Updatable) A physical mailing address for this User, as described in (address Element). Canonical Type Values of work, home, and other. The value attribute is a complex type with the following sub-attributes.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [type]
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Work Address Street, deprecatedColumnHeaderName:Work Street Address, mapsTo:addresses[work].streetAddress], [columnHeaderName:Work Address Locality, deprecatedColumnHeaderName:Work City, mapsTo:addresses[work].locality], [columnHeaderName:Work Address Region, deprecatedColumnHeaderName:Work State, mapsTo:addresses[work].region], [columnHeaderName:Work Address Postal Code, deprecatedColumnHeaderName:Work Postal Code, mapsTo:addresses[work].postalCode], [columnHeaderName:Work Address Country, deprecatedColumnHeaderName:Work Country, mapsTo:addresses[work].country], [columnHeaderName:Work Address Formatted, mapsTo:addresses[work].formatted], [columnHeaderName:Home Address Formatted, mapsTo:addresses[home].formatted], [columnHeaderName:Other Address Formatted, mapsTo:addresses[other].formatted], [columnHeaderName:Home Address Street, mapsTo:addresses[home].streetAddress], [columnHeaderName:Other Address Street, mapsTo:addresses[other].streetAddress], [columnHeaderName:Home Address Locality, mapsTo:addresses[home].locality], [columnHeaderName:Other Address Locality, mapsTo:addresses[other].locality], [columnHeaderName:Home Address Region, mapsTo:addresses[home].region], [columnHeaderName:Other Address Region, mapsTo:addresses[other].region], [columnHeaderName:Home Address Country, mapsTo:addresses[home].country], [columnHeaderName:Other Address Country, mapsTo:addresses[other].country], [columnHeaderName:Home Address Postal Code, mapsTo:addresses[home].postalCode], [columnHeaderName:Other Address Postal Code, mapsTo:addresses[other].postalCode], [columnHeaderName:Primary Address Type, mapsTo:addresses[$(type)].primary]]
	// * idcsPii: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Addresses []DomainsUserAddress `pulumi:"addresses"`
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets []string `pulumi:"attributeSets"`
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes *string `pulumi:"attributes"`
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid *string `pulumi:"compartmentOcid"`
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress *bool `pulumi:"deleteInProgress"`
	// (Updatable) Description of the user
	//
	// **Added In:** 2012271618
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsPii: true
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Description *string `pulumi:"description"`
	// (Updatable) Display name
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: Display Name
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Display Name]]
	// * idcsPii: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid *string `pulumi:"domainOcid"`
	// (Updatable) A complex attribute representing emails
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value, type]
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Work Email, mapsTo:emails[work].value], [columnHeaderName:Home Email, mapsTo:emails[home].value], [columnHeaderName:Primary Email Type, mapsTo:emails[$(type)].primary], [columnHeaderName:Other Email, mapsTo:emails[other].value], [columnHeaderName:Recovery Email, mapsTo:emails[recovery].value], [columnHeaderName:Work Email Verified, mapsTo:emails[work].verified], [columnHeaderName:Home Email Verified, mapsTo:emails[home].verified], [columnHeaderName:Other Email Verified, mapsTo:emails[other].verified], [columnHeaderName:Recovery Email Verified, mapsTo:emails[recovery].verified]]
	// * idcsPii: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Emails []DomainsUserEmail `pulumi:"emails"`
	// (Updatable) A list of entitlements for the User that represent a thing the User has.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value, type]
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Entitlements []DomainsUserEntitlement `pulumi:"entitlements"`
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:External Id]]
	// * idcsPii: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	ExternalId  *string `pulumi:"externalId"`
	ForceDelete *bool   `pulumi:"forceDelete"`
	// (Updatable) A list of groups that the user belongs to, either thorough direct membership, nested groups, or dynamically calculated
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Groups []DomainsUserGroup `pulumi:"groups"`
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies []DomainsUserIdcsCreatedBy `pulumi:"idcsCreatedBies"`
	// The basic endpoint for the identity domain
	IdcsEndpoint *string `pulumi:"idcsEndpoint"`
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies []DomainsUserIdcsLastModifiedBy `pulumi:"idcsLastModifiedBies"`
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease *string `pulumi:"idcsLastUpgradedInRelease"`
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations []string `pulumi:"idcsPreventedOperations"`
	// (Updatable) User's instant messaging addresses
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value, type]
	// * idcsPii: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Ims []DomainsUserIm `pulumi:"ims"`
	// (Updatable) Used to indicate the User's default location for purposes of localizing items such as currency, date and time format, numerical representations, and so on.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: Locale
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Locale]]
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Locale *string `pulumi:"locale"`
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas []DomainsUserMeta `pulumi:"metas"`
	// (Updatable) A complex attribute that contains attributes representing the name
	//
	// **SCIM++ Properties:**
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Formatted Name, mapsTo:name.formatted], [columnHeaderName:Honorific Prefix, mapsTo:name.honorificPrefix], [columnHeaderName:First Name, mapsTo:name.givenName], [columnHeaderName:Middle Name, mapsTo:name.middleName], [columnHeaderName:Last Name, mapsTo:name.familyName], [columnHeaderName:Honorific Suffix, mapsTo:name.honorificSuffix]]
	// * idcsPii: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Name *DomainsUserName `pulumi:"name"`
	// (Updatable) Nick name
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: Nick Name
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Nick Name]]
	// * idcsPii: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	NickName *string `pulumi:"nickName"`
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid *string `pulumi:"ocid"`
	// (Updatable) Password attribute. Max length for password is controlled via Password Policy.
	//
	// **SCIM++ Properties:**
	// * idcsCsvAttributeName: Password
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Password]]
	// * idcsPii: true
	// * idcsSearchable: false
	// * idcsSensitive: hash
	// * multiValued: false
	// * mutability: writeOnly
	// * required: false
	// * returned: never
	// * type: string
	// * uniqueness: none
	Password *string `pulumi:"password"`
	// (Updatable) Phone numbers
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value, type]
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Work Phone, mapsTo:phoneNumbers[work].value], [columnHeaderName:Mobile No, mapsTo:phoneNumbers[mobile].value], [columnHeaderName:Home Phone, mapsTo:phoneNumbers[home].value], [columnHeaderName:Fax, mapsTo:phoneNumbers[fax].value], [columnHeaderName:Pager, mapsTo:phoneNumbers[pager].value], [columnHeaderName:Other Phone, mapsTo:phoneNumbers[other].value], [columnHeaderName:Recovery Phone, mapsTo:phoneNumbers[recovery].value], [columnHeaderName:Primary Phone Type, mapsTo:phoneNumbers[$(type)].primary]]
	// * idcsPii: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	PhoneNumbers []DomainsUserPhoneNumber `pulumi:"phoneNumbers"`
	// (Updatable) URLs of photos for the User
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value, type]
	// * idcsPii: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Photos []DomainsUserPhoto `pulumi:"photos"`
	// (Updatable) User's preferred written or spoken language used for localized user interfaces
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: Preferred Language
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Preferred Language]]
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	PreferredLanguage *string `pulumi:"preferredLanguage"`
	// (Updatable) A fully-qualified URL to a page representing the User's online profile
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: Profile URL
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Profile Url]]
	// * idcsPii: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: reference
	// * uniqueness: none
	ProfileUrl *string `pulumi:"profileUrl"`
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// (Updatable) A list of roles for the User that collectively represent who the User is; e.g., 'Student', 'Faculty'.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value, type]
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Roles []DomainsUserRole `pulumi:"roles"`
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas []string `pulumi:"schemas"`
	// (Updatable) A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags []DomainsUserTag `pulumi:"tags"`
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	TenancyOcid *string `pulumi:"tenancyOcid"`
	// (Updatable) User's timezone
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCanonicalValueSourceFilter: attrName eq "timezones" and attrValues.value eq "$(timezone)"
	// * idcsCanonicalValueSourceResourceType: AllowedValue
	// * idcsCsvAttributeName: TimeZone
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Time Zone, deprecatedColumnHeaderName:TimeZone]]
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Timezone *string `pulumi:"timezone"`
	// (Updatable) Title
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: Title
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Title]]
	// * idcsPii: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Title *string `pulumi:"title"`
	// (Updatable) Enterprise User
	Urnietfparamsscimschemasextensionenterprise20user *DomainsUserUrnietfparamsscimschemasextensionenterprise20user `pulumi:"urnietfparamsscimschemasextensionenterprise20user"`
	// (Updatable) Oracle Cloud Infrastructure Tags.
	UrnietfparamsscimschemasoracleidcsextensionOciTags *DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTags `pulumi:"urnietfparamsscimschemasoracleidcsextensionOciTags"`
	// (Updatable) This extension defines attributes to manage user's risk score.
	UrnietfparamsscimschemasoracleidcsextensionadaptiveUser *DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionadaptiveUser"`
	// (Updatable) User's Capabilities
	UrnietfparamsscimschemasoracleidcsextensioncapabilitiesUser *DomainsUserUrnietfparamsscimschemasoracleidcsextensioncapabilitiesUser `pulumi:"urnietfparamsscimschemasoracleidcsextensioncapabilitiesUser"`
	// (Updatable) The database credentials user extension.
	UrnietfparamsscimschemasoracleidcsextensiondbCredentialsUser *DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUser `pulumi:"urnietfparamsscimschemasoracleidcsextensiondbCredentialsUser"`
	// (Updatable) DB User extension
	UrnietfparamsscimschemasoracleidcsextensiondbUserUsers []DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUser `pulumi:"urnietfparamsscimschemasoracleidcsextensiondbUserUsers"`
	// (Updatable) Kerberos User extension
	UrnietfparamsscimschemasoracleidcsextensionkerberosUserUser *DomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionkerberosUserUser"`
	// (Updatable) This extension defines attributes used to manage Multi-Factor Authentication within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use MFA.
	UrnietfparamsscimschemasoracleidcsextensionmfaUser *DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionmfaUser"`
	// (Updatable) This extension defines attributes used to manage account passwords within a Service Provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use passwords.
	UrnietfparamsscimschemasoracleidcsextensionpasswordStateUsers []DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordStateUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionpasswordStateUsers"`
	// (Updatable) This extension defines attributes used to manage Passwordless-Factor Authentication within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use MFA.
	UrnietfparamsscimschemasoracleidcsextensionpasswordlessUser *DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionpasswordlessUser"`
	// (Updatable) POSIX User extension
	UrnietfparamsscimschemasoracleidcsextensionposixUser *DomainsUserUrnietfparamsscimschemasoracleidcsextensionposixUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionposixUser"`
	// (Updatable) This extension defines the attributes used to store the security questions of a user.
	UrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUser *DomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUser"`
	// (Updatable) Controls whether a user can update themselves or not via User related APIs
	UrnietfparamsscimschemasoracleidcsextensionselfChangeUser *DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfChangeUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionselfChangeUser"`
	// (Updatable) This extension defines attributes used to manage self registration profile linked to the user.
	UrnietfparamsscimschemasoracleidcsextensionselfRegistrationUser *DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionselfRegistrationUser"`
	// (Updatable) SFF Auth Keys User extension
	UrnietfparamsscimschemasoracleidcsextensionsffUser *DomainsUserUrnietfparamsscimschemasoracleidcsextensionsffUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionsffUser"`
	// (Updatable) Social User extension
	UrnietfparamsscimschemasoracleidcsextensionsocialAccountUser *DomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionsocialAccountUser"`
	// (Updatable) Terms Of Use extension
	UrnietfparamsscimschemasoracleidcsextensiontermsOfUseUser *DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUser `pulumi:"urnietfparamsscimschemasoracleidcsextensiontermsOfUseUser"`
	// (Updatable) User's credentials
	UrnietfparamsscimschemasoracleidcsextensionuserCredentialsUsers []DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionuserCredentialsUsers"`
	// (Updatable) This extension defines the attributes used to manage account passwords within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use passwords.
	UrnietfparamsscimschemasoracleidcsextensionuserStateUser *DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionuserStateUser"`
	// (Updatable) Oracle Identity Cloud Service User
	UrnietfparamsscimschemasoracleidcsextensionuserUser *DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionuserUser"`
	// (Updatable) User name
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: User ID
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:User Name, deprecatedColumnHeaderName:User ID]]
	// * idcsPii: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: always
	// * type: string
	// * uniqueness: global
	UserName *string `pulumi:"userName"`
	// (Updatable) Used to identify the organization-to-user relationship
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: User Type
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:User Type]]
	// * idcsPii: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	UserType *string `pulumi:"userType"`
	// (Updatable) A list of certificates issued to the User.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value]
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	X509certificates []DomainsUserX509certificate `pulumi:"x509certificates"`
}

type DomainsUserState struct {
	// (Updatable) User status
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: Active
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Active]]
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	Active pulumi.BoolPtrInput
	// (Updatable) A physical mailing address for this User, as described in (address Element). Canonical Type Values of work, home, and other. The value attribute is a complex type with the following sub-attributes.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [type]
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Work Address Street, deprecatedColumnHeaderName:Work Street Address, mapsTo:addresses[work].streetAddress], [columnHeaderName:Work Address Locality, deprecatedColumnHeaderName:Work City, mapsTo:addresses[work].locality], [columnHeaderName:Work Address Region, deprecatedColumnHeaderName:Work State, mapsTo:addresses[work].region], [columnHeaderName:Work Address Postal Code, deprecatedColumnHeaderName:Work Postal Code, mapsTo:addresses[work].postalCode], [columnHeaderName:Work Address Country, deprecatedColumnHeaderName:Work Country, mapsTo:addresses[work].country], [columnHeaderName:Work Address Formatted, mapsTo:addresses[work].formatted], [columnHeaderName:Home Address Formatted, mapsTo:addresses[home].formatted], [columnHeaderName:Other Address Formatted, mapsTo:addresses[other].formatted], [columnHeaderName:Home Address Street, mapsTo:addresses[home].streetAddress], [columnHeaderName:Other Address Street, mapsTo:addresses[other].streetAddress], [columnHeaderName:Home Address Locality, mapsTo:addresses[home].locality], [columnHeaderName:Other Address Locality, mapsTo:addresses[other].locality], [columnHeaderName:Home Address Region, mapsTo:addresses[home].region], [columnHeaderName:Other Address Region, mapsTo:addresses[other].region], [columnHeaderName:Home Address Country, mapsTo:addresses[home].country], [columnHeaderName:Other Address Country, mapsTo:addresses[other].country], [columnHeaderName:Home Address Postal Code, mapsTo:addresses[home].postalCode], [columnHeaderName:Other Address Postal Code, mapsTo:addresses[other].postalCode], [columnHeaderName:Primary Address Type, mapsTo:addresses[$(type)].primary]]
	// * idcsPii: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Addresses DomainsUserAddressArrayInput
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayInput
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrInput
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid pulumi.StringPtrInput
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress pulumi.BoolPtrInput
	// (Updatable) Description of the user
	//
	// **Added In:** 2012271618
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsPii: true
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Description pulumi.StringPtrInput
	// (Updatable) Display name
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: Display Name
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Display Name]]
	// * idcsPii: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DisplayName pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid pulumi.StringPtrInput
	// (Updatable) A complex attribute representing emails
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value, type]
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Work Email, mapsTo:emails[work].value], [columnHeaderName:Home Email, mapsTo:emails[home].value], [columnHeaderName:Primary Email Type, mapsTo:emails[$(type)].primary], [columnHeaderName:Other Email, mapsTo:emails[other].value], [columnHeaderName:Recovery Email, mapsTo:emails[recovery].value], [columnHeaderName:Work Email Verified, mapsTo:emails[work].verified], [columnHeaderName:Home Email Verified, mapsTo:emails[home].verified], [columnHeaderName:Other Email Verified, mapsTo:emails[other].verified], [columnHeaderName:Recovery Email Verified, mapsTo:emails[recovery].verified]]
	// * idcsPii: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Emails DomainsUserEmailArrayInput
	// (Updatable) A list of entitlements for the User that represent a thing the User has.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value, type]
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Entitlements DomainsUserEntitlementArrayInput
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:External Id]]
	// * idcsPii: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	ExternalId  pulumi.StringPtrInput
	ForceDelete pulumi.BoolPtrInput
	// (Updatable) A list of groups that the user belongs to, either thorough direct membership, nested groups, or dynamically calculated
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Groups DomainsUserGroupArrayInput
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies DomainsUserIdcsCreatedByArrayInput
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringPtrInput
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies DomainsUserIdcsLastModifiedByArrayInput
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease pulumi.StringPtrInput
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations pulumi.StringArrayInput
	// (Updatable) User's instant messaging addresses
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value, type]
	// * idcsPii: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Ims DomainsUserImArrayInput
	// (Updatable) Used to indicate the User's default location for purposes of localizing items such as currency, date and time format, numerical representations, and so on.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: Locale
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Locale]]
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Locale pulumi.StringPtrInput
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas DomainsUserMetaArrayInput
	// (Updatable) A complex attribute that contains attributes representing the name
	//
	// **SCIM++ Properties:**
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Formatted Name, mapsTo:name.formatted], [columnHeaderName:Honorific Prefix, mapsTo:name.honorificPrefix], [columnHeaderName:First Name, mapsTo:name.givenName], [columnHeaderName:Middle Name, mapsTo:name.middleName], [columnHeaderName:Last Name, mapsTo:name.familyName], [columnHeaderName:Honorific Suffix, mapsTo:name.honorificSuffix]]
	// * idcsPii: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Name DomainsUserNamePtrInput
	// (Updatable) Nick name
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: Nick Name
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Nick Name]]
	// * idcsPii: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	NickName pulumi.StringPtrInput
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid pulumi.StringPtrInput
	// (Updatable) Password attribute. Max length for password is controlled via Password Policy.
	//
	// **SCIM++ Properties:**
	// * idcsCsvAttributeName: Password
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Password]]
	// * idcsPii: true
	// * idcsSearchable: false
	// * idcsSensitive: hash
	// * multiValued: false
	// * mutability: writeOnly
	// * required: false
	// * returned: never
	// * type: string
	// * uniqueness: none
	Password pulumi.StringPtrInput
	// (Updatable) Phone numbers
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value, type]
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Work Phone, mapsTo:phoneNumbers[work].value], [columnHeaderName:Mobile No, mapsTo:phoneNumbers[mobile].value], [columnHeaderName:Home Phone, mapsTo:phoneNumbers[home].value], [columnHeaderName:Fax, mapsTo:phoneNumbers[fax].value], [columnHeaderName:Pager, mapsTo:phoneNumbers[pager].value], [columnHeaderName:Other Phone, mapsTo:phoneNumbers[other].value], [columnHeaderName:Recovery Phone, mapsTo:phoneNumbers[recovery].value], [columnHeaderName:Primary Phone Type, mapsTo:phoneNumbers[$(type)].primary]]
	// * idcsPii: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	PhoneNumbers DomainsUserPhoneNumberArrayInput
	// (Updatable) URLs of photos for the User
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value, type]
	// * idcsPii: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Photos DomainsUserPhotoArrayInput
	// (Updatable) User's preferred written or spoken language used for localized user interfaces
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: Preferred Language
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Preferred Language]]
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	PreferredLanguage pulumi.StringPtrInput
	// (Updatable) A fully-qualified URL to a page representing the User's online profile
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: Profile URL
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Profile Url]]
	// * idcsPii: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: reference
	// * uniqueness: none
	ProfileUrl pulumi.StringPtrInput
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput
	// (Updatable) A list of roles for the User that collectively represent who the User is; e.g., 'Student', 'Faculty'.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value, type]
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Roles DomainsUserRoleArrayInput
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayInput
	// (Updatable) A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsUserTagArrayInput
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	TenancyOcid pulumi.StringPtrInput
	// (Updatable) User's timezone
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCanonicalValueSourceFilter: attrName eq "timezones" and attrValues.value eq "$(timezone)"
	// * idcsCanonicalValueSourceResourceType: AllowedValue
	// * idcsCsvAttributeName: TimeZone
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Time Zone, deprecatedColumnHeaderName:TimeZone]]
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Timezone pulumi.StringPtrInput
	// (Updatable) Title
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: Title
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Title]]
	// * idcsPii: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Title pulumi.StringPtrInput
	// (Updatable) Enterprise User
	Urnietfparamsscimschemasextensionenterprise20user DomainsUserUrnietfparamsscimschemasextensionenterprise20userPtrInput
	// (Updatable) Oracle Cloud Infrastructure Tags.
	UrnietfparamsscimschemasoracleidcsextensionOciTags DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagsPtrInput
	// (Updatable) This extension defines attributes to manage user's risk score.
	UrnietfparamsscimschemasoracleidcsextensionadaptiveUser DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserPtrInput
	// (Updatable) User's Capabilities
	UrnietfparamsscimschemasoracleidcsextensioncapabilitiesUser DomainsUserUrnietfparamsscimschemasoracleidcsextensioncapabilitiesUserPtrInput
	// (Updatable) The database credentials user extension.
	UrnietfparamsscimschemasoracleidcsextensiondbCredentialsUser DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUserPtrInput
	// (Updatable) DB User extension
	UrnietfparamsscimschemasoracleidcsextensiondbUserUsers DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserArrayInput
	// (Updatable) Kerberos User extension
	UrnietfparamsscimschemasoracleidcsextensionkerberosUserUser DomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUserPtrInput
	// (Updatable) This extension defines attributes used to manage Multi-Factor Authentication within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use MFA.
	UrnietfparamsscimschemasoracleidcsextensionmfaUser DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserPtrInput
	// (Updatable) This extension defines attributes used to manage account passwords within a Service Provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use passwords.
	UrnietfparamsscimschemasoracleidcsextensionpasswordStateUsers DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordStateUserArrayInput
	// (Updatable) This extension defines attributes used to manage Passwordless-Factor Authentication within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use MFA.
	UrnietfparamsscimschemasoracleidcsextensionpasswordlessUser DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUserPtrInput
	// (Updatable) POSIX User extension
	UrnietfparamsscimschemasoracleidcsextensionposixUser DomainsUserUrnietfparamsscimschemasoracleidcsextensionposixUserPtrInput
	// (Updatable) This extension defines the attributes used to store the security questions of a user.
	UrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUser DomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUserPtrInput
	// (Updatable) Controls whether a user can update themselves or not via User related APIs
	UrnietfparamsscimschemasoracleidcsextensionselfChangeUser DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfChangeUserPtrInput
	// (Updatable) This extension defines attributes used to manage self registration profile linked to the user.
	UrnietfparamsscimschemasoracleidcsextensionselfRegistrationUser DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserPtrInput
	// (Updatable) SFF Auth Keys User extension
	UrnietfparamsscimschemasoracleidcsextensionsffUser DomainsUserUrnietfparamsscimschemasoracleidcsextensionsffUserPtrInput
	// (Updatable) Social User extension
	UrnietfparamsscimschemasoracleidcsextensionsocialAccountUser DomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUserPtrInput
	// (Updatable) Terms Of Use extension
	UrnietfparamsscimschemasoracleidcsextensiontermsOfUseUser DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserPtrInput
	// (Updatable) User's credentials
	UrnietfparamsscimschemasoracleidcsextensionuserCredentialsUsers DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserArrayInput
	// (Updatable) This extension defines the attributes used to manage account passwords within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use passwords.
	UrnietfparamsscimschemasoracleidcsextensionuserStateUser DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserPtrInput
	// (Updatable) Oracle Identity Cloud Service User
	UrnietfparamsscimschemasoracleidcsextensionuserUser DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserPtrInput
	// (Updatable) User name
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: User ID
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:User Name, deprecatedColumnHeaderName:User ID]]
	// * idcsPii: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: always
	// * type: string
	// * uniqueness: global
	UserName pulumi.StringPtrInput
	// (Updatable) Used to identify the organization-to-user relationship
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: User Type
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:User Type]]
	// * idcsPii: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	UserType pulumi.StringPtrInput
	// (Updatable) A list of certificates issued to the User.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value]
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	X509certificates DomainsUserX509certificateArrayInput
}

func (DomainsUserState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainsUserState)(nil)).Elem()
}

type domainsUserArgs struct {
	// (Updatable) User status
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: Active
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Active]]
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	Active *bool `pulumi:"active"`
	// (Updatable) A physical mailing address for this User, as described in (address Element). Canonical Type Values of work, home, and other. The value attribute is a complex type with the following sub-attributes.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [type]
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Work Address Street, deprecatedColumnHeaderName:Work Street Address, mapsTo:addresses[work].streetAddress], [columnHeaderName:Work Address Locality, deprecatedColumnHeaderName:Work City, mapsTo:addresses[work].locality], [columnHeaderName:Work Address Region, deprecatedColumnHeaderName:Work State, mapsTo:addresses[work].region], [columnHeaderName:Work Address Postal Code, deprecatedColumnHeaderName:Work Postal Code, mapsTo:addresses[work].postalCode], [columnHeaderName:Work Address Country, deprecatedColumnHeaderName:Work Country, mapsTo:addresses[work].country], [columnHeaderName:Work Address Formatted, mapsTo:addresses[work].formatted], [columnHeaderName:Home Address Formatted, mapsTo:addresses[home].formatted], [columnHeaderName:Other Address Formatted, mapsTo:addresses[other].formatted], [columnHeaderName:Home Address Street, mapsTo:addresses[home].streetAddress], [columnHeaderName:Other Address Street, mapsTo:addresses[other].streetAddress], [columnHeaderName:Home Address Locality, mapsTo:addresses[home].locality], [columnHeaderName:Other Address Locality, mapsTo:addresses[other].locality], [columnHeaderName:Home Address Region, mapsTo:addresses[home].region], [columnHeaderName:Other Address Region, mapsTo:addresses[other].region], [columnHeaderName:Home Address Country, mapsTo:addresses[home].country], [columnHeaderName:Other Address Country, mapsTo:addresses[other].country], [columnHeaderName:Home Address Postal Code, mapsTo:addresses[home].postalCode], [columnHeaderName:Other Address Postal Code, mapsTo:addresses[other].postalCode], [columnHeaderName:Primary Address Type, mapsTo:addresses[$(type)].primary]]
	// * idcsPii: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Addresses []DomainsUserAddress `pulumi:"addresses"`
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets []string `pulumi:"attributeSets"`
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes *string `pulumi:"attributes"`
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// (Updatable) Description of the user
	//
	// **Added In:** 2012271618
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsPii: true
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Description *string `pulumi:"description"`
	// (Updatable) Display name
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: Display Name
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Display Name]]
	// * idcsPii: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) A complex attribute representing emails
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value, type]
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Work Email, mapsTo:emails[work].value], [columnHeaderName:Home Email, mapsTo:emails[home].value], [columnHeaderName:Primary Email Type, mapsTo:emails[$(type)].primary], [columnHeaderName:Other Email, mapsTo:emails[other].value], [columnHeaderName:Recovery Email, mapsTo:emails[recovery].value], [columnHeaderName:Work Email Verified, mapsTo:emails[work].verified], [columnHeaderName:Home Email Verified, mapsTo:emails[home].verified], [columnHeaderName:Other Email Verified, mapsTo:emails[other].verified], [columnHeaderName:Recovery Email Verified, mapsTo:emails[recovery].verified]]
	// * idcsPii: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Emails []DomainsUserEmail `pulumi:"emails"`
	// (Updatable) A list of entitlements for the User that represent a thing the User has.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value, type]
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Entitlements []DomainsUserEntitlement `pulumi:"entitlements"`
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:External Id]]
	// * idcsPii: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	ExternalId  *string `pulumi:"externalId"`
	ForceDelete *bool   `pulumi:"forceDelete"`
	// The basic endpoint for the identity domain
	IdcsEndpoint string `pulumi:"idcsEndpoint"`
	// (Updatable) User's instant messaging addresses
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value, type]
	// * idcsPii: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Ims []DomainsUserIm `pulumi:"ims"`
	// (Updatable) Used to indicate the User's default location for purposes of localizing items such as currency, date and time format, numerical representations, and so on.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: Locale
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Locale]]
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Locale *string `pulumi:"locale"`
	// (Updatable) A complex attribute that contains attributes representing the name
	//
	// **SCIM++ Properties:**
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Formatted Name, mapsTo:name.formatted], [columnHeaderName:Honorific Prefix, mapsTo:name.honorificPrefix], [columnHeaderName:First Name, mapsTo:name.givenName], [columnHeaderName:Middle Name, mapsTo:name.middleName], [columnHeaderName:Last Name, mapsTo:name.familyName], [columnHeaderName:Honorific Suffix, mapsTo:name.honorificSuffix]]
	// * idcsPii: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Name *DomainsUserName `pulumi:"name"`
	// (Updatable) Nick name
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: Nick Name
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Nick Name]]
	// * idcsPii: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	NickName *string `pulumi:"nickName"`
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid *string `pulumi:"ocid"`
	// (Updatable) Password attribute. Max length for password is controlled via Password Policy.
	//
	// **SCIM++ Properties:**
	// * idcsCsvAttributeName: Password
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Password]]
	// * idcsPii: true
	// * idcsSearchable: false
	// * idcsSensitive: hash
	// * multiValued: false
	// * mutability: writeOnly
	// * required: false
	// * returned: never
	// * type: string
	// * uniqueness: none
	Password *string `pulumi:"password"`
	// (Updatable) Phone numbers
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value, type]
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Work Phone, mapsTo:phoneNumbers[work].value], [columnHeaderName:Mobile No, mapsTo:phoneNumbers[mobile].value], [columnHeaderName:Home Phone, mapsTo:phoneNumbers[home].value], [columnHeaderName:Fax, mapsTo:phoneNumbers[fax].value], [columnHeaderName:Pager, mapsTo:phoneNumbers[pager].value], [columnHeaderName:Other Phone, mapsTo:phoneNumbers[other].value], [columnHeaderName:Recovery Phone, mapsTo:phoneNumbers[recovery].value], [columnHeaderName:Primary Phone Type, mapsTo:phoneNumbers[$(type)].primary]]
	// * idcsPii: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	PhoneNumbers []DomainsUserPhoneNumber `pulumi:"phoneNumbers"`
	// (Updatable) URLs of photos for the User
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value, type]
	// * idcsPii: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Photos []DomainsUserPhoto `pulumi:"photos"`
	// (Updatable) User's preferred written or spoken language used for localized user interfaces
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: Preferred Language
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Preferred Language]]
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	PreferredLanguage *string `pulumi:"preferredLanguage"`
	// (Updatable) A fully-qualified URL to a page representing the User's online profile
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: Profile URL
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Profile Url]]
	// * idcsPii: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: reference
	// * uniqueness: none
	ProfileUrl *string `pulumi:"profileUrl"`
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// (Updatable) A list of roles for the User that collectively represent who the User is; e.g., 'Student', 'Faculty'.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value, type]
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Roles []DomainsUserRole `pulumi:"roles"`
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas []string `pulumi:"schemas"`
	// (Updatable) A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags []DomainsUserTag `pulumi:"tags"`
	// (Updatable) User's timezone
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCanonicalValueSourceFilter: attrName eq "timezones" and attrValues.value eq "$(timezone)"
	// * idcsCanonicalValueSourceResourceType: AllowedValue
	// * idcsCsvAttributeName: TimeZone
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Time Zone, deprecatedColumnHeaderName:TimeZone]]
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Timezone *string `pulumi:"timezone"`
	// (Updatable) Title
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: Title
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Title]]
	// * idcsPii: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Title *string `pulumi:"title"`
	// (Updatable) Enterprise User
	Urnietfparamsscimschemasextensionenterprise20user *DomainsUserUrnietfparamsscimschemasextensionenterprise20user `pulumi:"urnietfparamsscimschemasextensionenterprise20user"`
	// (Updatable) Oracle Cloud Infrastructure Tags.
	UrnietfparamsscimschemasoracleidcsextensionOciTags *DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTags `pulumi:"urnietfparamsscimschemasoracleidcsextensionOciTags"`
	// (Updatable) This extension defines attributes to manage user's risk score.
	UrnietfparamsscimschemasoracleidcsextensionadaptiveUser *DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionadaptiveUser"`
	// (Updatable) User's Capabilities
	UrnietfparamsscimschemasoracleidcsextensioncapabilitiesUser *DomainsUserUrnietfparamsscimschemasoracleidcsextensioncapabilitiesUser `pulumi:"urnietfparamsscimschemasoracleidcsextensioncapabilitiesUser"`
	// (Updatable) The database credentials user extension.
	UrnietfparamsscimschemasoracleidcsextensiondbCredentialsUser *DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUser `pulumi:"urnietfparamsscimschemasoracleidcsextensiondbCredentialsUser"`
	// (Updatable) Kerberos User extension
	UrnietfparamsscimschemasoracleidcsextensionkerberosUserUser *DomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionkerberosUserUser"`
	// (Updatable) This extension defines attributes used to manage Multi-Factor Authentication within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use MFA.
	UrnietfparamsscimschemasoracleidcsextensionmfaUser *DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionmfaUser"`
	// (Updatable) This extension defines attributes used to manage Passwordless-Factor Authentication within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use MFA.
	UrnietfparamsscimschemasoracleidcsextensionpasswordlessUser *DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionpasswordlessUser"`
	// (Updatable) POSIX User extension
	UrnietfparamsscimschemasoracleidcsextensionposixUser *DomainsUserUrnietfparamsscimschemasoracleidcsextensionposixUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionposixUser"`
	// (Updatable) This extension defines the attributes used to store the security questions of a user.
	UrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUser *DomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUser"`
	// (Updatable) Controls whether a user can update themselves or not via User related APIs
	UrnietfparamsscimschemasoracleidcsextensionselfChangeUser *DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfChangeUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionselfChangeUser"`
	// (Updatable) This extension defines attributes used to manage self registration profile linked to the user.
	UrnietfparamsscimschemasoracleidcsextensionselfRegistrationUser *DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionselfRegistrationUser"`
	// (Updatable) SFF Auth Keys User extension
	UrnietfparamsscimschemasoracleidcsextensionsffUser *DomainsUserUrnietfparamsscimschemasoracleidcsextensionsffUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionsffUser"`
	// (Updatable) Social User extension
	UrnietfparamsscimschemasoracleidcsextensionsocialAccountUser *DomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionsocialAccountUser"`
	// (Updatable) Terms Of Use extension
	UrnietfparamsscimschemasoracleidcsextensiontermsOfUseUser *DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUser `pulumi:"urnietfparamsscimschemasoracleidcsextensiontermsOfUseUser"`
	// (Updatable) This extension defines the attributes used to manage account passwords within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use passwords.
	UrnietfparamsscimschemasoracleidcsextensionuserStateUser *DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionuserStateUser"`
	// (Updatable) Oracle Identity Cloud Service User
	UrnietfparamsscimschemasoracleidcsextensionuserUser *DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionuserUser"`
	// (Updatable) User name
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: User ID
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:User Name, deprecatedColumnHeaderName:User ID]]
	// * idcsPii: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: always
	// * type: string
	// * uniqueness: global
	UserName string `pulumi:"userName"`
	// (Updatable) Used to identify the organization-to-user relationship
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: User Type
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:User Type]]
	// * idcsPii: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	UserType *string `pulumi:"userType"`
	// (Updatable) A list of certificates issued to the User.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value]
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	X509certificates []DomainsUserX509certificate `pulumi:"x509certificates"`
}

// The set of arguments for constructing a DomainsUser resource.
type DomainsUserArgs struct {
	// (Updatable) User status
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: Active
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Active]]
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	Active pulumi.BoolPtrInput
	// (Updatable) A physical mailing address for this User, as described in (address Element). Canonical Type Values of work, home, and other. The value attribute is a complex type with the following sub-attributes.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [type]
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Work Address Street, deprecatedColumnHeaderName:Work Street Address, mapsTo:addresses[work].streetAddress], [columnHeaderName:Work Address Locality, deprecatedColumnHeaderName:Work City, mapsTo:addresses[work].locality], [columnHeaderName:Work Address Region, deprecatedColumnHeaderName:Work State, mapsTo:addresses[work].region], [columnHeaderName:Work Address Postal Code, deprecatedColumnHeaderName:Work Postal Code, mapsTo:addresses[work].postalCode], [columnHeaderName:Work Address Country, deprecatedColumnHeaderName:Work Country, mapsTo:addresses[work].country], [columnHeaderName:Work Address Formatted, mapsTo:addresses[work].formatted], [columnHeaderName:Home Address Formatted, mapsTo:addresses[home].formatted], [columnHeaderName:Other Address Formatted, mapsTo:addresses[other].formatted], [columnHeaderName:Home Address Street, mapsTo:addresses[home].streetAddress], [columnHeaderName:Other Address Street, mapsTo:addresses[other].streetAddress], [columnHeaderName:Home Address Locality, mapsTo:addresses[home].locality], [columnHeaderName:Other Address Locality, mapsTo:addresses[other].locality], [columnHeaderName:Home Address Region, mapsTo:addresses[home].region], [columnHeaderName:Other Address Region, mapsTo:addresses[other].region], [columnHeaderName:Home Address Country, mapsTo:addresses[home].country], [columnHeaderName:Other Address Country, mapsTo:addresses[other].country], [columnHeaderName:Home Address Postal Code, mapsTo:addresses[home].postalCode], [columnHeaderName:Other Address Postal Code, mapsTo:addresses[other].postalCode], [columnHeaderName:Primary Address Type, mapsTo:addresses[$(type)].primary]]
	// * idcsPii: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Addresses DomainsUserAddressArrayInput
	// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayInput
	// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrInput
	// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput
	// (Updatable) Description of the user
	//
	// **Added In:** 2012271618
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsPii: true
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Description pulumi.StringPtrInput
	// (Updatable) Display name
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: Display Name
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Display Name]]
	// * idcsPii: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DisplayName pulumi.StringPtrInput
	// (Updatable) A complex attribute representing emails
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value, type]
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Work Email, mapsTo:emails[work].value], [columnHeaderName:Home Email, mapsTo:emails[home].value], [columnHeaderName:Primary Email Type, mapsTo:emails[$(type)].primary], [columnHeaderName:Other Email, mapsTo:emails[other].value], [columnHeaderName:Recovery Email, mapsTo:emails[recovery].value], [columnHeaderName:Work Email Verified, mapsTo:emails[work].verified], [columnHeaderName:Home Email Verified, mapsTo:emails[home].verified], [columnHeaderName:Other Email Verified, mapsTo:emails[other].verified], [columnHeaderName:Recovery Email Verified, mapsTo:emails[recovery].verified]]
	// * idcsPii: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Emails DomainsUserEmailArrayInput
	// (Updatable) A list of entitlements for the User that represent a thing the User has.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value, type]
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Entitlements DomainsUserEntitlementArrayInput
	// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:External Id]]
	// * idcsPii: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	ExternalId  pulumi.StringPtrInput
	ForceDelete pulumi.BoolPtrInput
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringInput
	// (Updatable) User's instant messaging addresses
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value, type]
	// * idcsPii: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Ims DomainsUserImArrayInput
	// (Updatable) Used to indicate the User's default location for purposes of localizing items such as currency, date and time format, numerical representations, and so on.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: Locale
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Locale]]
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Locale pulumi.StringPtrInput
	// (Updatable) A complex attribute that contains attributes representing the name
	//
	// **SCIM++ Properties:**
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Formatted Name, mapsTo:name.formatted], [columnHeaderName:Honorific Prefix, mapsTo:name.honorificPrefix], [columnHeaderName:First Name, mapsTo:name.givenName], [columnHeaderName:Middle Name, mapsTo:name.middleName], [columnHeaderName:Last Name, mapsTo:name.familyName], [columnHeaderName:Honorific Suffix, mapsTo:name.honorificSuffix]]
	// * idcsPii: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Name DomainsUserNamePtrInput
	// (Updatable) Nick name
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: Nick Name
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Nick Name]]
	// * idcsPii: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	NickName pulumi.StringPtrInput
	// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: global
	Ocid pulumi.StringPtrInput
	// (Updatable) Password attribute. Max length for password is controlled via Password Policy.
	//
	// **SCIM++ Properties:**
	// * idcsCsvAttributeName: Password
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Password]]
	// * idcsPii: true
	// * idcsSearchable: false
	// * idcsSensitive: hash
	// * multiValued: false
	// * mutability: writeOnly
	// * required: false
	// * returned: never
	// * type: string
	// * uniqueness: none
	Password pulumi.StringPtrInput
	// (Updatable) Phone numbers
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value, type]
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Work Phone, mapsTo:phoneNumbers[work].value], [columnHeaderName:Mobile No, mapsTo:phoneNumbers[mobile].value], [columnHeaderName:Home Phone, mapsTo:phoneNumbers[home].value], [columnHeaderName:Fax, mapsTo:phoneNumbers[fax].value], [columnHeaderName:Pager, mapsTo:phoneNumbers[pager].value], [columnHeaderName:Other Phone, mapsTo:phoneNumbers[other].value], [columnHeaderName:Recovery Phone, mapsTo:phoneNumbers[recovery].value], [columnHeaderName:Primary Phone Type, mapsTo:phoneNumbers[$(type)].primary]]
	// * idcsPii: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	PhoneNumbers DomainsUserPhoneNumberArrayInput
	// (Updatable) URLs of photos for the User
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value, type]
	// * idcsPii: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Photos DomainsUserPhotoArrayInput
	// (Updatable) User's preferred written or spoken language used for localized user interfaces
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: Preferred Language
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Preferred Language]]
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	PreferredLanguage pulumi.StringPtrInput
	// (Updatable) A fully-qualified URL to a page representing the User's online profile
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: Profile URL
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Profile Url]]
	// * idcsPii: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: reference
	// * uniqueness: none
	ProfileUrl pulumi.StringPtrInput
	// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput
	// (Updatable) A list of roles for the User that collectively represent who the User is; e.g., 'Student', 'Faculty'.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value, type]
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	Roles DomainsUserRoleArrayInput
	// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayInput
	// (Updatable) A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsUserTagArrayInput
	// (Updatable) User's timezone
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCanonicalValueSourceFilter: attrName eq "timezones" and attrValues.value eq "$(timezone)"
	// * idcsCanonicalValueSourceResourceType: AllowedValue
	// * idcsCsvAttributeName: TimeZone
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Time Zone, deprecatedColumnHeaderName:TimeZone]]
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Timezone pulumi.StringPtrInput
	// (Updatable) Title
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: Title
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Title]]
	// * idcsPii: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Title pulumi.StringPtrInput
	// (Updatable) Enterprise User
	Urnietfparamsscimschemasextensionenterprise20user DomainsUserUrnietfparamsscimschemasextensionenterprise20userPtrInput
	// (Updatable) Oracle Cloud Infrastructure Tags.
	UrnietfparamsscimschemasoracleidcsextensionOciTags DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagsPtrInput
	// (Updatable) This extension defines attributes to manage user's risk score.
	UrnietfparamsscimschemasoracleidcsextensionadaptiveUser DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserPtrInput
	// (Updatable) User's Capabilities
	UrnietfparamsscimschemasoracleidcsextensioncapabilitiesUser DomainsUserUrnietfparamsscimschemasoracleidcsextensioncapabilitiesUserPtrInput
	// (Updatable) The database credentials user extension.
	UrnietfparamsscimschemasoracleidcsextensiondbCredentialsUser DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUserPtrInput
	// (Updatable) Kerberos User extension
	UrnietfparamsscimschemasoracleidcsextensionkerberosUserUser DomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUserPtrInput
	// (Updatable) This extension defines attributes used to manage Multi-Factor Authentication within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use MFA.
	UrnietfparamsscimschemasoracleidcsextensionmfaUser DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserPtrInput
	// (Updatable) This extension defines attributes used to manage Passwordless-Factor Authentication within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use MFA.
	UrnietfparamsscimschemasoracleidcsextensionpasswordlessUser DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUserPtrInput
	// (Updatable) POSIX User extension
	UrnietfparamsscimschemasoracleidcsextensionposixUser DomainsUserUrnietfparamsscimschemasoracleidcsextensionposixUserPtrInput
	// (Updatable) This extension defines the attributes used to store the security questions of a user.
	UrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUser DomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUserPtrInput
	// (Updatable) Controls whether a user can update themselves or not via User related APIs
	UrnietfparamsscimschemasoracleidcsextensionselfChangeUser DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfChangeUserPtrInput
	// (Updatable) This extension defines attributes used to manage self registration profile linked to the user.
	UrnietfparamsscimschemasoracleidcsextensionselfRegistrationUser DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserPtrInput
	// (Updatable) SFF Auth Keys User extension
	UrnietfparamsscimschemasoracleidcsextensionsffUser DomainsUserUrnietfparamsscimschemasoracleidcsextensionsffUserPtrInput
	// (Updatable) Social User extension
	UrnietfparamsscimschemasoracleidcsextensionsocialAccountUser DomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUserPtrInput
	// (Updatable) Terms Of Use extension
	UrnietfparamsscimschemasoracleidcsextensiontermsOfUseUser DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserPtrInput
	// (Updatable) This extension defines the attributes used to manage account passwords within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use passwords.
	UrnietfparamsscimschemasoracleidcsextensionuserStateUser DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserPtrInput
	// (Updatable) Oracle Identity Cloud Service User
	UrnietfparamsscimschemasoracleidcsextensionuserUser DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserPtrInput
	// (Updatable) User name
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: User ID
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:User Name, deprecatedColumnHeaderName:User ID]]
	// * idcsPii: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: true
	// * returned: always
	// * type: string
	// * uniqueness: global
	UserName pulumi.StringInput
	// (Updatable) Used to identify the organization-to-user relationship
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCsvAttributeName: User Type
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:User Type]]
	// * idcsPii: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	UserType pulumi.StringPtrInput
	// (Updatable) A list of certificates issued to the User.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [value]
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	X509certificates DomainsUserX509certificateArrayInput
}

func (DomainsUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainsUserArgs)(nil)).Elem()
}

type DomainsUserInput interface {
	pulumi.Input

	ToDomainsUserOutput() DomainsUserOutput
	ToDomainsUserOutputWithContext(ctx context.Context) DomainsUserOutput
}

func (*DomainsUser) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainsUser)(nil)).Elem()
}

func (i *DomainsUser) ToDomainsUserOutput() DomainsUserOutput {
	return i.ToDomainsUserOutputWithContext(context.Background())
}

func (i *DomainsUser) ToDomainsUserOutputWithContext(ctx context.Context) DomainsUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsUserOutput)
}

// DomainsUserArrayInput is an input type that accepts DomainsUserArray and DomainsUserArrayOutput values.
// You can construct a concrete instance of `DomainsUserArrayInput` via:
//
//	DomainsUserArray{ DomainsUserArgs{...} }
type DomainsUserArrayInput interface {
	pulumi.Input

	ToDomainsUserArrayOutput() DomainsUserArrayOutput
	ToDomainsUserArrayOutputWithContext(context.Context) DomainsUserArrayOutput
}

type DomainsUserArray []DomainsUserInput

func (DomainsUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainsUser)(nil)).Elem()
}

func (i DomainsUserArray) ToDomainsUserArrayOutput() DomainsUserArrayOutput {
	return i.ToDomainsUserArrayOutputWithContext(context.Background())
}

func (i DomainsUserArray) ToDomainsUserArrayOutputWithContext(ctx context.Context) DomainsUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsUserArrayOutput)
}

// DomainsUserMapInput is an input type that accepts DomainsUserMap and DomainsUserMapOutput values.
// You can construct a concrete instance of `DomainsUserMapInput` via:
//
//	DomainsUserMap{ "key": DomainsUserArgs{...} }
type DomainsUserMapInput interface {
	pulumi.Input

	ToDomainsUserMapOutput() DomainsUserMapOutput
	ToDomainsUserMapOutputWithContext(context.Context) DomainsUserMapOutput
}

type DomainsUserMap map[string]DomainsUserInput

func (DomainsUserMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainsUser)(nil)).Elem()
}

func (i DomainsUserMap) ToDomainsUserMapOutput() DomainsUserMapOutput {
	return i.ToDomainsUserMapOutputWithContext(context.Background())
}

func (i DomainsUserMap) ToDomainsUserMapOutputWithContext(ctx context.Context) DomainsUserMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsUserMapOutput)
}

type DomainsUserOutput struct{ *pulumi.OutputState }

func (DomainsUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainsUser)(nil)).Elem()
}

func (o DomainsUserOutput) ToDomainsUserOutput() DomainsUserOutput {
	return o
}

func (o DomainsUserOutput) ToDomainsUserOutputWithContext(ctx context.Context) DomainsUserOutput {
	return o
}

// (Updatable) User status
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsCsvAttributeName: Active
// * idcsCsvAttributeNameMappings: [[columnHeaderName:Active]]
// * idcsSearchable: true
// * multiValued: false
// * mutability: readWrite
// * required: false
// * returned: default
// * type: boolean
// * uniqueness: none
func (o DomainsUserOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsUser) pulumi.BoolOutput { return v.Active }).(pulumi.BoolOutput)
}

// (Updatable) A physical mailing address for this User, as described in (address Element). Canonical Type Values of work, home, and other. The value attribute is a complex type with the following sub-attributes.
//
// **SCIM++ Properties:**
// * idcsCompositeKey: [type]
// * idcsCsvAttributeNameMappings: [[columnHeaderName:Work Address Street, deprecatedColumnHeaderName:Work Street Address, mapsTo:addresses[work].streetAddress], [columnHeaderName:Work Address Locality, deprecatedColumnHeaderName:Work City, mapsTo:addresses[work].locality], [columnHeaderName:Work Address Region, deprecatedColumnHeaderName:Work State, mapsTo:addresses[work].region], [columnHeaderName:Work Address Postal Code, deprecatedColumnHeaderName:Work Postal Code, mapsTo:addresses[work].postalCode], [columnHeaderName:Work Address Country, deprecatedColumnHeaderName:Work Country, mapsTo:addresses[work].country], [columnHeaderName:Work Address Formatted, mapsTo:addresses[work].formatted], [columnHeaderName:Home Address Formatted, mapsTo:addresses[home].formatted], [columnHeaderName:Other Address Formatted, mapsTo:addresses[other].formatted], [columnHeaderName:Home Address Street, mapsTo:addresses[home].streetAddress], [columnHeaderName:Other Address Street, mapsTo:addresses[other].streetAddress], [columnHeaderName:Home Address Locality, mapsTo:addresses[home].locality], [columnHeaderName:Other Address Locality, mapsTo:addresses[other].locality], [columnHeaderName:Home Address Region, mapsTo:addresses[home].region], [columnHeaderName:Other Address Region, mapsTo:addresses[other].region], [columnHeaderName:Home Address Country, mapsTo:addresses[home].country], [columnHeaderName:Other Address Country, mapsTo:addresses[other].country], [columnHeaderName:Home Address Postal Code, mapsTo:addresses[home].postalCode], [columnHeaderName:Other Address Postal Code, mapsTo:addresses[other].postalCode], [columnHeaderName:Primary Address Type, mapsTo:addresses[$(type)].primary]]
// * idcsPii: true
// * multiValued: true
// * mutability: readWrite
// * required: false
// * returned: default
// * type: complex
// * uniqueness: none
func (o DomainsUserOutput) Addresses() DomainsUserAddressArrayOutput {
	return o.ApplyT(func(v *DomainsUser) DomainsUserAddressArrayOutput { return v.Addresses }).(DomainsUserAddressArrayOutput)
}

// (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
func (o DomainsUserOutput) AttributeSets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsUser) pulumi.StringArrayOutput { return v.AttributeSets }).(pulumi.StringArrayOutput)
}

// (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
func (o DomainsUserOutput) Attributes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsUser) pulumi.StringPtrOutput { return v.Attributes }).(pulumi.StringPtrOutput)
}

// (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
func (o DomainsUserOutput) Authorization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsUser) pulumi.StringPtrOutput { return v.Authorization }).(pulumi.StringPtrOutput)
}

// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsUserOutput) CompartmentOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsUser) pulumi.StringOutput { return v.CompartmentOcid }).(pulumi.StringOutput)
}

// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: boolean
// * uniqueness: none
func (o DomainsUserOutput) DeleteInProgress() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsUser) pulumi.BoolOutput { return v.DeleteInProgress }).(pulumi.BoolOutput)
}

// (Updatable) Description of the user
//
// **Added In:** 2012271618
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsPii: true
// * idcsSearchable: false
// * multiValued: false
// * mutability: readWrite
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsUserOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsUser) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) Display name
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsCsvAttributeName: Display Name
// * idcsCsvAttributeNameMappings: [[columnHeaderName:Display Name]]
// * idcsPii: true
// * idcsSearchable: true
// * multiValued: false
// * mutability: readWrite
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsUserOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsUser) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsUserOutput) DomainOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsUser) pulumi.StringOutput { return v.DomainOcid }).(pulumi.StringOutput)
}

// (Updatable) A complex attribute representing emails
//
// **SCIM++ Properties:**
// * idcsCompositeKey: [value, type]
// * idcsCsvAttributeNameMappings: [[columnHeaderName:Work Email, mapsTo:emails[work].value], [columnHeaderName:Home Email, mapsTo:emails[home].value], [columnHeaderName:Primary Email Type, mapsTo:emails[$(type)].primary], [columnHeaderName:Other Email, mapsTo:emails[other].value], [columnHeaderName:Recovery Email, mapsTo:emails[recovery].value], [columnHeaderName:Work Email Verified, mapsTo:emails[work].verified], [columnHeaderName:Home Email Verified, mapsTo:emails[home].verified], [columnHeaderName:Other Email Verified, mapsTo:emails[other].verified], [columnHeaderName:Recovery Email Verified, mapsTo:emails[recovery].verified]]
// * idcsPii: true
// * multiValued: true
// * mutability: readWrite
// * required: false
// * returned: default
// * type: complex
// * uniqueness: none
func (o DomainsUserOutput) Emails() DomainsUserEmailArrayOutput {
	return o.ApplyT(func(v *DomainsUser) DomainsUserEmailArrayOutput { return v.Emails }).(DomainsUserEmailArrayOutput)
}

// (Updatable) A list of entitlements for the User that represent a thing the User has.
//
// **SCIM++ Properties:**
// * idcsCompositeKey: [value, type]
// * multiValued: true
// * mutability: readWrite
// * required: false
// * returned: default
// * type: complex
// * uniqueness: none
func (o DomainsUserOutput) Entitlements() DomainsUserEntitlementArrayOutput {
	return o.ApplyT(func(v *DomainsUser) DomainsUserEntitlementArrayOutput { return v.Entitlements }).(DomainsUserEntitlementArrayOutput)
}

// (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsCsvAttributeNameMappings: [[columnHeaderName:External Id]]
// * idcsPii: true
// * idcsSearchable: true
// * multiValued: false
// * mutability: readWrite
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsUserOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsUser) pulumi.StringOutput { return v.ExternalId }).(pulumi.StringOutput)
}

func (o DomainsUserOutput) ForceDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainsUser) pulumi.BoolPtrOutput { return v.ForceDelete }).(pulumi.BoolPtrOutput)
}

// (Updatable) A list of groups that the user belongs to, either thorough direct membership, nested groups, or dynamically calculated
//
// **SCIM++ Properties:**
// * idcsCompositeKey: [value]
// * idcsSearchable: true
// * multiValued: true
// * mutability: readOnly
// * required: false
// * returned: request
// * type: complex
// * uniqueness: none
func (o DomainsUserOutput) Groups() DomainsUserGroupArrayOutput {
	return o.ApplyT(func(v *DomainsUser) DomainsUserGroupArrayOutput { return v.Groups }).(DomainsUserGroupArrayOutput)
}

// (Updatable) The User or App who created the Resource
//
// **SCIM++ Properties:**
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: true
// * returned: default
// * type: complex
func (o DomainsUserOutput) IdcsCreatedBies() DomainsUserIdcsCreatedByArrayOutput {
	return o.ApplyT(func(v *DomainsUser) DomainsUserIdcsCreatedByArrayOutput { return v.IdcsCreatedBies }).(DomainsUserIdcsCreatedByArrayOutput)
}

// The basic endpoint for the identity domain
func (o DomainsUserOutput) IdcsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsUser) pulumi.StringOutput { return v.IdcsEndpoint }).(pulumi.StringOutput)
}

// (Updatable) The User or App who modified the Resource
//
// **SCIM++ Properties:**
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: complex
func (o DomainsUserOutput) IdcsLastModifiedBies() DomainsUserIdcsLastModifiedByArrayOutput {
	return o.ApplyT(func(v *DomainsUser) DomainsUserIdcsLastModifiedByArrayOutput { return v.IdcsLastModifiedBies }).(DomainsUserIdcsLastModifiedByArrayOutput)
}

// (Updatable) The release number when the resource was upgraded.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: request
// * type: string
// * uniqueness: none
func (o DomainsUserOutput) IdcsLastUpgradedInRelease() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsUser) pulumi.StringOutput { return v.IdcsLastUpgradedInRelease }).(pulumi.StringOutput)
}

// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
//
// **SCIM++ Properties:**
// * idcsSearchable: false
// * multiValued: true
// * mutability: readOnly
// * required: false
// * returned: request
// * type: string
// * uniqueness: none
func (o DomainsUserOutput) IdcsPreventedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsUser) pulumi.StringArrayOutput { return v.IdcsPreventedOperations }).(pulumi.StringArrayOutput)
}

// (Updatable) User's instant messaging addresses
//
// **SCIM++ Properties:**
// * idcsCompositeKey: [value, type]
// * idcsPii: true
// * multiValued: true
// * mutability: readWrite
// * required: false
// * returned: default
// * type: complex
// * uniqueness: none
func (o DomainsUserOutput) Ims() DomainsUserImArrayOutput {
	return o.ApplyT(func(v *DomainsUser) DomainsUserImArrayOutput { return v.Ims }).(DomainsUserImArrayOutput)
}

// (Updatable) Used to indicate the User's default location for purposes of localizing items such as currency, date and time format, numerical representations, and so on.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsCsvAttributeName: Locale
// * idcsCsvAttributeNameMappings: [[columnHeaderName:Locale]]
// * idcsSearchable: true
// * multiValued: false
// * mutability: readWrite
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsUserOutput) Locale() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsUser) pulumi.StringOutput { return v.Locale }).(pulumi.StringOutput)
}

// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
// * type: complex
func (o DomainsUserOutput) Metas() DomainsUserMetaArrayOutput {
	return o.ApplyT(func(v *DomainsUser) DomainsUserMetaArrayOutput { return v.Metas }).(DomainsUserMetaArrayOutput)
}

// (Updatable) A complex attribute that contains attributes representing the name
//
// **SCIM++ Properties:**
// * idcsCsvAttributeNameMappings: [[columnHeaderName:Formatted Name, mapsTo:name.formatted], [columnHeaderName:Honorific Prefix, mapsTo:name.honorificPrefix], [columnHeaderName:First Name, mapsTo:name.givenName], [columnHeaderName:Middle Name, mapsTo:name.middleName], [columnHeaderName:Last Name, mapsTo:name.familyName], [columnHeaderName:Honorific Suffix, mapsTo:name.honorificSuffix]]
// * idcsPii: true
// * multiValued: false
// * mutability: readWrite
// * required: false
// * returned: default
// * type: complex
// * uniqueness: none
func (o DomainsUserOutput) Name() DomainsUserNameOutput {
	return o.ApplyT(func(v *DomainsUser) DomainsUserNameOutput { return v.Name }).(DomainsUserNameOutput)
}

// (Updatable) Nick name
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsCsvAttributeName: Nick Name
// * idcsCsvAttributeNameMappings: [[columnHeaderName:Nick Name]]
// * idcsPii: true
// * idcsSearchable: true
// * multiValued: false
// * mutability: readWrite
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsUserOutput) NickName() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsUser) pulumi.StringOutput { return v.NickName }).(pulumi.StringOutput)
}

// (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
//
// **SCIM++ Properties:**
// * caseExact: true
// * idcsSearchable: true
// * multiValued: false
// * mutability: immutable
// * required: false
// * returned: default
// * type: string
// * uniqueness: global
func (o DomainsUserOutput) Ocid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsUser) pulumi.StringOutput { return v.Ocid }).(pulumi.StringOutput)
}

// (Updatable) Password attribute. Max length for password is controlled via Password Policy.
//
// **SCIM++ Properties:**
// * idcsCsvAttributeName: Password
// * idcsCsvAttributeNameMappings: [[columnHeaderName:Password]]
// * idcsPii: true
// * idcsSearchable: false
// * idcsSensitive: hash
// * multiValued: false
// * mutability: writeOnly
// * required: false
// * returned: never
// * type: string
// * uniqueness: none
func (o DomainsUserOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsUser) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// (Updatable) Phone numbers
//
// **SCIM++ Properties:**
// * idcsCompositeKey: [value, type]
// * idcsCsvAttributeNameMappings: [[columnHeaderName:Work Phone, mapsTo:phoneNumbers[work].value], [columnHeaderName:Mobile No, mapsTo:phoneNumbers[mobile].value], [columnHeaderName:Home Phone, mapsTo:phoneNumbers[home].value], [columnHeaderName:Fax, mapsTo:phoneNumbers[fax].value], [columnHeaderName:Pager, mapsTo:phoneNumbers[pager].value], [columnHeaderName:Other Phone, mapsTo:phoneNumbers[other].value], [columnHeaderName:Recovery Phone, mapsTo:phoneNumbers[recovery].value], [columnHeaderName:Primary Phone Type, mapsTo:phoneNumbers[$(type)].primary]]
// * idcsPii: true
// * multiValued: true
// * mutability: readWrite
// * required: false
// * returned: default
// * type: complex
// * uniqueness: none
func (o DomainsUserOutput) PhoneNumbers() DomainsUserPhoneNumberArrayOutput {
	return o.ApplyT(func(v *DomainsUser) DomainsUserPhoneNumberArrayOutput { return v.PhoneNumbers }).(DomainsUserPhoneNumberArrayOutput)
}

// (Updatable) URLs of photos for the User
//
// **SCIM++ Properties:**
// * idcsCompositeKey: [value, type]
// * idcsPii: true
// * multiValued: true
// * mutability: readWrite
// * required: false
// * returned: default
// * type: complex
// * uniqueness: none
func (o DomainsUserOutput) Photos() DomainsUserPhotoArrayOutput {
	return o.ApplyT(func(v *DomainsUser) DomainsUserPhotoArrayOutput { return v.Photos }).(DomainsUserPhotoArrayOutput)
}

// (Updatable) User's preferred written or spoken language used for localized user interfaces
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsCsvAttributeName: Preferred Language
// * idcsCsvAttributeNameMappings: [[columnHeaderName:Preferred Language]]
// * idcsSearchable: true
// * multiValued: false
// * mutability: readWrite
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsUserOutput) PreferredLanguage() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsUser) pulumi.StringOutput { return v.PreferredLanguage }).(pulumi.StringOutput)
}

// (Updatable) A fully-qualified URL to a page representing the User's online profile
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsCsvAttributeName: Profile URL
// * idcsCsvAttributeNameMappings: [[columnHeaderName:Profile Url]]
// * idcsPii: true
// * idcsSearchable: true
// * multiValued: false
// * mutability: readWrite
// * required: false
// * returned: default
// * type: reference
// * uniqueness: none
func (o DomainsUserOutput) ProfileUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsUser) pulumi.StringOutput { return v.ProfileUrl }).(pulumi.StringOutput)
}

// (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
func (o DomainsUserOutput) ResourceTypeSchemaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsUser) pulumi.StringPtrOutput { return v.ResourceTypeSchemaVersion }).(pulumi.StringPtrOutput)
}

// (Updatable) A list of roles for the User that collectively represent who the User is; e.g., 'Student', 'Faculty'.
//
// **SCIM++ Properties:**
// * idcsCompositeKey: [value, type]
// * multiValued: true
// * mutability: readWrite
// * required: false
// * returned: default
// * type: complex
// * uniqueness: none
func (o DomainsUserOutput) Roles() DomainsUserRoleArrayOutput {
	return o.ApplyT(func(v *DomainsUser) DomainsUserRoleArrayOutput { return v.Roles }).(DomainsUserRoleArrayOutput)
}

// (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: true
// * mutability: readWrite
// * required: true
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsUserOutput) Schemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsUser) pulumi.StringArrayOutput { return v.Schemas }).(pulumi.StringArrayOutput)
}

// (Updatable) A list of tags on this resource.
//
// **SCIM++ Properties:**
// * idcsCompositeKey: [key, value]
// * idcsSearchable: true
// * multiValued: true
// * mutability: readWrite
// * required: false
// * returned: request
// * type: complex
// * uniqueness: none
func (o DomainsUserOutput) Tags() DomainsUserTagArrayOutput {
	return o.ApplyT(func(v *DomainsUser) DomainsUserTagArrayOutput { return v.Tags }).(DomainsUserTagArrayOutput)
}

// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsUserOutput) TenancyOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsUser) pulumi.StringOutput { return v.TenancyOcid }).(pulumi.StringOutput)
}

// (Updatable) User's timezone
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsCanonicalValueSourceFilter: attrName eq "timezones" and attrValues.value eq "$(timezone)"
// * idcsCanonicalValueSourceResourceType: AllowedValue
// * idcsCsvAttributeName: TimeZone
// * idcsCsvAttributeNameMappings: [[columnHeaderName:Time Zone, deprecatedColumnHeaderName:TimeZone]]
// * idcsSearchable: true
// * multiValued: false
// * mutability: readWrite
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsUserOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsUser) pulumi.StringOutput { return v.Timezone }).(pulumi.StringOutput)
}

// (Updatable) Title
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsCsvAttributeName: Title
// * idcsCsvAttributeNameMappings: [[columnHeaderName:Title]]
// * idcsPii: true
// * idcsSearchable: true
// * multiValued: false
// * mutability: readWrite
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsUserOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsUser) pulumi.StringOutput { return v.Title }).(pulumi.StringOutput)
}

// (Updatable) Enterprise User
func (o DomainsUserOutput) Urnietfparamsscimschemasextensionenterprise20user() DomainsUserUrnietfparamsscimschemasextensionenterprise20userOutput {
	return o.ApplyT(func(v *DomainsUser) DomainsUserUrnietfparamsscimschemasextensionenterprise20userOutput {
		return v.Urnietfparamsscimschemasextensionenterprise20user
	}).(DomainsUserUrnietfparamsscimschemasextensionenterprise20userOutput)
}

// (Updatable) Oracle Cloud Infrastructure Tags.
func (o DomainsUserOutput) UrnietfparamsscimschemasoracleidcsextensionOciTags() DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagsOutput {
	return o.ApplyT(func(v *DomainsUser) DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagsOutput {
		return v.UrnietfparamsscimschemasoracleidcsextensionOciTags
	}).(DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagsOutput)
}

// (Updatable) This extension defines attributes to manage user's risk score.
func (o DomainsUserOutput) UrnietfparamsscimschemasoracleidcsextensionadaptiveUser() DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserOutput {
	return o.ApplyT(func(v *DomainsUser) DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserOutput {
		return v.UrnietfparamsscimschemasoracleidcsextensionadaptiveUser
	}).(DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserOutput)
}

// (Updatable) User's Capabilities
func (o DomainsUserOutput) UrnietfparamsscimschemasoracleidcsextensioncapabilitiesUser() DomainsUserUrnietfparamsscimschemasoracleidcsextensioncapabilitiesUserOutput {
	return o.ApplyT(func(v *DomainsUser) DomainsUserUrnietfparamsscimschemasoracleidcsextensioncapabilitiesUserOutput {
		return v.UrnietfparamsscimschemasoracleidcsextensioncapabilitiesUser
	}).(DomainsUserUrnietfparamsscimschemasoracleidcsextensioncapabilitiesUserOutput)
}

// (Updatable) The database credentials user extension.
func (o DomainsUserOutput) UrnietfparamsscimschemasoracleidcsextensiondbCredentialsUser() DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUserOutput {
	return o.ApplyT(func(v *DomainsUser) DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUserOutput {
		return v.UrnietfparamsscimschemasoracleidcsextensiondbCredentialsUser
	}).(DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUserOutput)
}

// (Updatable) DB User extension
func (o DomainsUserOutput) UrnietfparamsscimschemasoracleidcsextensiondbUserUsers() DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserArrayOutput {
	return o.ApplyT(func(v *DomainsUser) DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserArrayOutput {
		return v.UrnietfparamsscimschemasoracleidcsextensiondbUserUsers
	}).(DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserArrayOutput)
}

// (Updatable) Kerberos User extension
func (o DomainsUserOutput) UrnietfparamsscimschemasoracleidcsextensionkerberosUserUser() DomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUserOutput {
	return o.ApplyT(func(v *DomainsUser) DomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUserOutput {
		return v.UrnietfparamsscimschemasoracleidcsextensionkerberosUserUser
	}).(DomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUserOutput)
}

// (Updatable) This extension defines attributes used to manage Multi-Factor Authentication within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use MFA.
func (o DomainsUserOutput) UrnietfparamsscimschemasoracleidcsextensionmfaUser() DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserOutput {
	return o.ApplyT(func(v *DomainsUser) DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserOutput {
		return v.UrnietfparamsscimschemasoracleidcsextensionmfaUser
	}).(DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserOutput)
}

// (Updatable) This extension defines attributes used to manage account passwords within a Service Provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use passwords.
func (o DomainsUserOutput) UrnietfparamsscimschemasoracleidcsextensionpasswordStateUsers() DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordStateUserArrayOutput {
	return o.ApplyT(func(v *DomainsUser) DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordStateUserArrayOutput {
		return v.UrnietfparamsscimschemasoracleidcsextensionpasswordStateUsers
	}).(DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordStateUserArrayOutput)
}

// (Updatable) This extension defines attributes used to manage Passwordless-Factor Authentication within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use MFA.
func (o DomainsUserOutput) UrnietfparamsscimschemasoracleidcsextensionpasswordlessUser() DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUserOutput {
	return o.ApplyT(func(v *DomainsUser) DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUserOutput {
		return v.UrnietfparamsscimschemasoracleidcsextensionpasswordlessUser
	}).(DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUserOutput)
}

// (Updatable) POSIX User extension
func (o DomainsUserOutput) UrnietfparamsscimschemasoracleidcsextensionposixUser() DomainsUserUrnietfparamsscimschemasoracleidcsextensionposixUserOutput {
	return o.ApplyT(func(v *DomainsUser) DomainsUserUrnietfparamsscimschemasoracleidcsextensionposixUserOutput {
		return v.UrnietfparamsscimschemasoracleidcsextensionposixUser
	}).(DomainsUserUrnietfparamsscimschemasoracleidcsextensionposixUserOutput)
}

// (Updatable) This extension defines the attributes used to store the security questions of a user.
func (o DomainsUserOutput) UrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUser() DomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUserOutput {
	return o.ApplyT(func(v *DomainsUser) DomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUserOutput {
		return v.UrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUser
	}).(DomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUserOutput)
}

// (Updatable) Controls whether a user can update themselves or not via User related APIs
func (o DomainsUserOutput) UrnietfparamsscimschemasoracleidcsextensionselfChangeUser() DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfChangeUserOutput {
	return o.ApplyT(func(v *DomainsUser) DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfChangeUserOutput {
		return v.UrnietfparamsscimschemasoracleidcsextensionselfChangeUser
	}).(DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfChangeUserOutput)
}

// (Updatable) This extension defines attributes used to manage self registration profile linked to the user.
func (o DomainsUserOutput) UrnietfparamsscimschemasoracleidcsextensionselfRegistrationUser() DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserOutput {
	return o.ApplyT(func(v *DomainsUser) DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserOutput {
		return v.UrnietfparamsscimschemasoracleidcsextensionselfRegistrationUser
	}).(DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserOutput)
}

// (Updatable) SFF Auth Keys User extension
func (o DomainsUserOutput) UrnietfparamsscimschemasoracleidcsextensionsffUser() DomainsUserUrnietfparamsscimschemasoracleidcsextensionsffUserOutput {
	return o.ApplyT(func(v *DomainsUser) DomainsUserUrnietfparamsscimschemasoracleidcsextensionsffUserOutput {
		return v.UrnietfparamsscimschemasoracleidcsextensionsffUser
	}).(DomainsUserUrnietfparamsscimschemasoracleidcsextensionsffUserOutput)
}

// (Updatable) Social User extension
func (o DomainsUserOutput) UrnietfparamsscimschemasoracleidcsextensionsocialAccountUser() DomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUserOutput {
	return o.ApplyT(func(v *DomainsUser) DomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUserOutput {
		return v.UrnietfparamsscimschemasoracleidcsextensionsocialAccountUser
	}).(DomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUserOutput)
}

// (Updatable) Terms Of Use extension
func (o DomainsUserOutput) UrnietfparamsscimschemasoracleidcsextensiontermsOfUseUser() DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserOutput {
	return o.ApplyT(func(v *DomainsUser) DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserOutput {
		return v.UrnietfparamsscimschemasoracleidcsextensiontermsOfUseUser
	}).(DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserOutput)
}

// (Updatable) User's credentials
func (o DomainsUserOutput) UrnietfparamsscimschemasoracleidcsextensionuserCredentialsUsers() DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserArrayOutput {
	return o.ApplyT(func(v *DomainsUser) DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserArrayOutput {
		return v.UrnietfparamsscimschemasoracleidcsextensionuserCredentialsUsers
	}).(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserArrayOutput)
}

// (Updatable) This extension defines the attributes used to manage account passwords within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use passwords.
func (o DomainsUserOutput) UrnietfparamsscimschemasoracleidcsextensionuserStateUser() DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserOutput {
	return o.ApplyT(func(v *DomainsUser) DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserOutput {
		return v.UrnietfparamsscimschemasoracleidcsextensionuserStateUser
	}).(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserOutput)
}

// (Updatable) Oracle Identity Cloud Service User
func (o DomainsUserOutput) UrnietfparamsscimschemasoracleidcsextensionuserUser() DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserOutput {
	return o.ApplyT(func(v *DomainsUser) DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserOutput {
		return v.UrnietfparamsscimschemasoracleidcsextensionuserUser
	}).(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserOutput)
}

// (Updatable) User name
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsCsvAttributeName: User ID
// * idcsCsvAttributeNameMappings: [[columnHeaderName:User Name, deprecatedColumnHeaderName:User ID]]
// * idcsPii: true
// * idcsSearchable: true
// * multiValued: false
// * mutability: readWrite
// * required: true
// * returned: always
// * type: string
// * uniqueness: global
func (o DomainsUserOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsUser) pulumi.StringOutput { return v.UserName }).(pulumi.StringOutput)
}

// (Updatable) Used to identify the organization-to-user relationship
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsCsvAttributeName: User Type
// * idcsCsvAttributeNameMappings: [[columnHeaderName:User Type]]
// * idcsPii: true
// * idcsSearchable: true
// * multiValued: false
// * mutability: readWrite
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsUserOutput) UserType() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsUser) pulumi.StringOutput { return v.UserType }).(pulumi.StringOutput)
}

// (Updatable) A list of certificates issued to the User.
//
// **SCIM++ Properties:**
// * idcsCompositeKey: [value]
// * multiValued: true
// * mutability: readWrite
// * required: false
// * returned: default
// * type: complex
// * uniqueness: none
func (o DomainsUserOutput) X509certificates() DomainsUserX509certificateArrayOutput {
	return o.ApplyT(func(v *DomainsUser) DomainsUserX509certificateArrayOutput { return v.X509certificates }).(DomainsUserX509certificateArrayOutput)
}

type DomainsUserArrayOutput struct{ *pulumi.OutputState }

func (DomainsUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainsUser)(nil)).Elem()
}

func (o DomainsUserArrayOutput) ToDomainsUserArrayOutput() DomainsUserArrayOutput {
	return o
}

func (o DomainsUserArrayOutput) ToDomainsUserArrayOutputWithContext(ctx context.Context) DomainsUserArrayOutput {
	return o
}

func (o DomainsUserArrayOutput) Index(i pulumi.IntInput) DomainsUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DomainsUser {
		return vs[0].([]*DomainsUser)[vs[1].(int)]
	}).(DomainsUserOutput)
}

type DomainsUserMapOutput struct{ *pulumi.OutputState }

func (DomainsUserMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainsUser)(nil)).Elem()
}

func (o DomainsUserMapOutput) ToDomainsUserMapOutput() DomainsUserMapOutput {
	return o
}

func (o DomainsUserMapOutput) ToDomainsUserMapOutputWithContext(ctx context.Context) DomainsUserMapOutput {
	return o
}

func (o DomainsUserMapOutput) MapIndex(k pulumi.StringInput) DomainsUserOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DomainsUser {
		return vs[0].(map[string]*DomainsUser)[vs[1].(string)]
	}).(DomainsUserOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsUserInput)(nil)).Elem(), &DomainsUser{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsUserArrayInput)(nil)).Elem(), DomainsUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsUserMapInput)(nil)).Elem(), DomainsUserMap{})
	pulumi.RegisterOutputType(DomainsUserOutput{})
	pulumi.RegisterOutputType(DomainsUserArrayOutput{})
	pulumi.RegisterOutputType(DomainsUserMapOutput{})
}
