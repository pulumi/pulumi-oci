// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the User Db Credential resource in Oracle Cloud Infrastructure Identity Domains service.
//
// # Set a User's DbCredential
//
// ## Import
//
// UserDbCredentials can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:Identity/domainsUserDbCredential:DomainsUserDbCredential test_user_db_credential "idcsEndpoint/{idcsEndpoint}/userDbCredentials/{userDbCredentialId}"
//
// ```
type DomainsUserDbCredential struct {
	pulumi.CustomResourceState

	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayOutput `pulumi:"attributeSets"`
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrOutput `pulumi:"attributes"`
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrOutput `pulumi:"authorization"`
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid pulumi.StringOutput `pulumi:"compartmentOcid"`
	// The db password of the user
	//
	// **SCIM++ Properties:**
	// * type: string
	// * mutability: immutable
	// * returned: default
	// * required: true
	DbPassword pulumi.StringOutput `pulumi:"dbPassword"`
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress pulumi.BoolOutput `pulumi:"deleteInProgress"`
	// Description
	//
	// **Added In:** 2109020413
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * type: string
	// * mutability: readWrite
	// * required: false
	// * returned: default
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid pulumi.StringOutput `pulumi:"domainOcid"`
	// (Updatable) Indicates that the db password has expired
	//
	// **SCIM++ Properties:**
	// * type: boolean
	// * mutability: readOnly
	// * returned: default
	Expired pulumi.BoolOutput `pulumi:"expired"`
	// User credential expires on
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: dateTime
	// * uniqueness: none
	ExpiresOn pulumi.StringOutput `pulumi:"expiresOn"`
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies DomainsUserDbCredentialIdcsCreatedByArrayOutput `pulumi:"idcsCreatedBies"`
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringOutput `pulumi:"idcsEndpoint"`
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies DomainsUserDbCredentialIdcsLastModifiedByArrayOutput `pulumi:"idcsLastModifiedBies"`
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease pulumi.StringOutput `pulumi:"idcsLastUpgradedInRelease"`
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations pulumi.StringArrayOutput `pulumi:"idcsPreventedOperations"`
	// (Updatable) A DateTime that specifies the date and time when the current db password was set
	//
	// **SCIM++ Properties:**
	// * type: dateTime
	// * mutability: readOnly
	// * returned: default
	LastSetDate pulumi.StringOutput `pulumi:"lastSetDate"`
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas DomainsUserDbCredentialMetaArrayOutput `pulumi:"metas"`
	// (Updatable) The db password of the user with mixed salt
	//
	// **SCIM++ Properties:**
	// * type: string
	// * mutability: readOnly
	// * returned: default
	// * required: false
	MixedDbPassword pulumi.StringOutput `pulumi:"mixedDbPassword"`
	// (Updatable) The mixed salt of the password
	//
	// **SCIM++ Properties:**
	// * type: string
	// * mutability: readOnly
	// * returned: default
	// * required: false
	MixedSalt pulumi.StringOutput `pulumi:"mixedSalt"`
	// (Updatable) User name
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Name pulumi.StringOutput `pulumi:"name"`
	// User's ocid
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: always
	// * type: string
	// * uniqueness: none
	Ocid pulumi.StringOutput `pulumi:"ocid"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrOutput `pulumi:"resourceTypeSchemaVersion"`
	// (Updatable) The salt of the password
	//
	// **SCIM++ Properties:**
	// * type: string
	// * mutability: readOnly
	// * returned: default
	// * required: false
	Salt pulumi.StringOutput `pulumi:"salt"`
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayOutput `pulumi:"schemas"`
	// User credential status
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: never
	// * type: string
	// * uniqueness: none
	Status pulumi.StringOutput `pulumi:"status"`
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsUserDbCredentialTagArrayOutput `pulumi:"tags"`
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	TenancyOcid pulumi.StringOutput `pulumi:"tenancyOcid"`
	// Controls whether a user can update themselves or not via User related APIs
	UrnietfparamsscimschemasoracleidcsextensionselfChangeUser DomainsUserDbCredentialUrnietfparamsscimschemasoracleidcsextensionselfChangeUserOutput `pulumi:"urnietfparamsscimschemasoracleidcsextensionselfChangeUser"`
	// User linked to db credential
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCompositeKey: [value]
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	User DomainsUserDbCredentialUserOutput `pulumi:"user"`
}

// NewDomainsUserDbCredential registers a new resource with the given unique name, arguments, and options.
func NewDomainsUserDbCredential(ctx *pulumi.Context,
	name string, args *DomainsUserDbCredentialArgs, opts ...pulumi.ResourceOption) (*DomainsUserDbCredential, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DbPassword == nil {
		return nil, errors.New("invalid value for required argument 'DbPassword'")
	}
	if args.IdcsEndpoint == nil {
		return nil, errors.New("invalid value for required argument 'IdcsEndpoint'")
	}
	if args.Schemas == nil {
		return nil, errors.New("invalid value for required argument 'Schemas'")
	}
	if args.DbPassword != nil {
		args.DbPassword = pulumi.ToSecret(args.DbPassword).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"dbPassword",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DomainsUserDbCredential
	err := ctx.RegisterResource("oci:Identity/domainsUserDbCredential:DomainsUserDbCredential", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomainsUserDbCredential gets an existing DomainsUserDbCredential resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainsUserDbCredential(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainsUserDbCredentialState, opts ...pulumi.ResourceOption) (*DomainsUserDbCredential, error) {
	var resource DomainsUserDbCredential
	err := ctx.ReadResource("oci:Identity/domainsUserDbCredential:DomainsUserDbCredential", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DomainsUserDbCredential resources.
type domainsUserDbCredentialState struct {
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets []string `pulumi:"attributeSets"`
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes *string `pulumi:"attributes"`
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid *string `pulumi:"compartmentOcid"`
	// The db password of the user
	//
	// **SCIM++ Properties:**
	// * type: string
	// * mutability: immutable
	// * returned: default
	// * required: true
	DbPassword *string `pulumi:"dbPassword"`
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress *bool `pulumi:"deleteInProgress"`
	// Description
	//
	// **Added In:** 2109020413
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * type: string
	// * mutability: readWrite
	// * required: false
	// * returned: default
	Description *string `pulumi:"description"`
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid *string `pulumi:"domainOcid"`
	// (Updatable) Indicates that the db password has expired
	//
	// **SCIM++ Properties:**
	// * type: boolean
	// * mutability: readOnly
	// * returned: default
	Expired *bool `pulumi:"expired"`
	// User credential expires on
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: dateTime
	// * uniqueness: none
	ExpiresOn *string `pulumi:"expiresOn"`
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies []DomainsUserDbCredentialIdcsCreatedBy `pulumi:"idcsCreatedBies"`
	// The basic endpoint for the identity domain
	IdcsEndpoint *string `pulumi:"idcsEndpoint"`
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies []DomainsUserDbCredentialIdcsLastModifiedBy `pulumi:"idcsLastModifiedBies"`
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease *string `pulumi:"idcsLastUpgradedInRelease"`
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations []string `pulumi:"idcsPreventedOperations"`
	// (Updatable) A DateTime that specifies the date and time when the current db password was set
	//
	// **SCIM++ Properties:**
	// * type: dateTime
	// * mutability: readOnly
	// * returned: default
	LastSetDate *string `pulumi:"lastSetDate"`
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas []DomainsUserDbCredentialMeta `pulumi:"metas"`
	// (Updatable) The db password of the user with mixed salt
	//
	// **SCIM++ Properties:**
	// * type: string
	// * mutability: readOnly
	// * returned: default
	// * required: false
	MixedDbPassword *string `pulumi:"mixedDbPassword"`
	// (Updatable) The mixed salt of the password
	//
	// **SCIM++ Properties:**
	// * type: string
	// * mutability: readOnly
	// * returned: default
	// * required: false
	MixedSalt *string `pulumi:"mixedSalt"`
	// (Updatable) User name
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Name *string `pulumi:"name"`
	// User's ocid
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: always
	// * type: string
	// * uniqueness: none
	Ocid *string `pulumi:"ocid"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// (Updatable) The salt of the password
	//
	// **SCIM++ Properties:**
	// * type: string
	// * mutability: readOnly
	// * returned: default
	// * required: false
	Salt *string `pulumi:"salt"`
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas []string `pulumi:"schemas"`
	// User credential status
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: never
	// * type: string
	// * uniqueness: none
	Status *string `pulumi:"status"`
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags []DomainsUserDbCredentialTag `pulumi:"tags"`
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	TenancyOcid *string `pulumi:"tenancyOcid"`
	// Controls whether a user can update themselves or not via User related APIs
	UrnietfparamsscimschemasoracleidcsextensionselfChangeUser *DomainsUserDbCredentialUrnietfparamsscimschemasoracleidcsextensionselfChangeUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionselfChangeUser"`
	// User linked to db credential
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCompositeKey: [value]
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	User *DomainsUserDbCredentialUser `pulumi:"user"`
}

type DomainsUserDbCredentialState struct {
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayInput
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrInput
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	CompartmentOcid pulumi.StringPtrInput
	// The db password of the user
	//
	// **SCIM++ Properties:**
	// * type: string
	// * mutability: immutable
	// * returned: default
	// * required: true
	DbPassword pulumi.StringPtrInput
	// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: boolean
	// * uniqueness: none
	DeleteInProgress pulumi.BoolPtrInput
	// Description
	//
	// **Added In:** 2109020413
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * type: string
	// * mutability: readWrite
	// * required: false
	// * returned: default
	Description pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	DomainOcid pulumi.StringPtrInput
	// (Updatable) Indicates that the db password has expired
	//
	// **SCIM++ Properties:**
	// * type: boolean
	// * mutability: readOnly
	// * returned: default
	Expired pulumi.BoolPtrInput
	// User credential expires on
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: dateTime
	// * uniqueness: none
	ExpiresOn pulumi.StringPtrInput
	// (Updatable) The User or App who created the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: true
	// * returned: default
	// * type: complex
	IdcsCreatedBies DomainsUserDbCredentialIdcsCreatedByArrayInput
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringPtrInput
	// (Updatable) The User or App who modified the Resource
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: complex
	IdcsLastModifiedBies DomainsUserDbCredentialIdcsLastModifiedByArrayInput
	// (Updatable) The release number when the resource was upgraded.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsLastUpgradedInRelease pulumi.StringPtrInput
	// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	//
	// **SCIM++ Properties:**
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readOnly
	// * required: false
	// * returned: request
	// * type: string
	// * uniqueness: none
	IdcsPreventedOperations pulumi.StringArrayInput
	// (Updatable) A DateTime that specifies the date and time when the current db password was set
	//
	// **SCIM++ Properties:**
	// * type: dateTime
	// * mutability: readOnly
	// * returned: default
	LastSetDate pulumi.StringPtrInput
	// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
	// * type: complex
	Metas DomainsUserDbCredentialMetaArrayInput
	// (Updatable) The db password of the user with mixed salt
	//
	// **SCIM++ Properties:**
	// * type: string
	// * mutability: readOnly
	// * returned: default
	// * required: false
	MixedDbPassword pulumi.StringPtrInput
	// (Updatable) The mixed salt of the password
	//
	// **SCIM++ Properties:**
	// * type: string
	// * mutability: readOnly
	// * returned: default
	// * required: false
	MixedSalt pulumi.StringPtrInput
	// (Updatable) User name
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	Name pulumi.StringPtrInput
	// User's ocid
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: always
	// * type: string
	// * uniqueness: none
	Ocid pulumi.StringPtrInput
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput
	// (Updatable) The salt of the password
	//
	// **SCIM++ Properties:**
	// * type: string
	// * mutability: readOnly
	// * returned: default
	// * required: false
	Salt pulumi.StringPtrInput
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayInput
	// User credential status
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: never
	// * type: string
	// * uniqueness: none
	Status pulumi.StringPtrInput
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsUserDbCredentialTagArrayInput
	// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readOnly
	// * required: false
	// * returned: default
	// * type: string
	// * uniqueness: none
	TenancyOcid pulumi.StringPtrInput
	// Controls whether a user can update themselves or not via User related APIs
	UrnietfparamsscimschemasoracleidcsextensionselfChangeUser DomainsUserDbCredentialUrnietfparamsscimschemasoracleidcsextensionselfChangeUserPtrInput
	// User linked to db credential
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCompositeKey: [value]
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	User DomainsUserDbCredentialUserPtrInput
}

func (DomainsUserDbCredentialState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainsUserDbCredentialState)(nil)).Elem()
}

type domainsUserDbCredentialArgs struct {
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets []string `pulumi:"attributeSets"`
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes *string `pulumi:"attributes"`
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// The db password of the user
	//
	// **SCIM++ Properties:**
	// * type: string
	// * mutability: immutable
	// * returned: default
	// * required: true
	DbPassword string `pulumi:"dbPassword"`
	// Description
	//
	// **Added In:** 2109020413
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * type: string
	// * mutability: readWrite
	// * required: false
	// * returned: default
	Description *string `pulumi:"description"`
	// User credential expires on
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: dateTime
	// * uniqueness: none
	ExpiresOn *string `pulumi:"expiresOn"`
	// The basic endpoint for the identity domain
	IdcsEndpoint string `pulumi:"idcsEndpoint"`
	// User's ocid
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: always
	// * type: string
	// * uniqueness: none
	Ocid *string `pulumi:"ocid"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas []string `pulumi:"schemas"`
	// User credential status
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: never
	// * type: string
	// * uniqueness: none
	Status *string `pulumi:"status"`
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags []DomainsUserDbCredentialTag `pulumi:"tags"`
	// Controls whether a user can update themselves or not via User related APIs
	UrnietfparamsscimschemasoracleidcsextensionselfChangeUser *DomainsUserDbCredentialUrnietfparamsscimschemasoracleidcsextensionselfChangeUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionselfChangeUser"`
	// User linked to db credential
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCompositeKey: [value]
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	User *DomainsUserDbCredentialUser `pulumi:"user"`
}

// The set of arguments for constructing a DomainsUserDbCredential resource.
type DomainsUserDbCredentialArgs struct {
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayInput
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrInput
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput
	// The db password of the user
	//
	// **SCIM++ Properties:**
	// * type: string
	// * mutability: immutable
	// * returned: default
	// * required: true
	DbPassword pulumi.StringInput
	// Description
	//
	// **Added In:** 2109020413
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * type: string
	// * mutability: readWrite
	// * required: false
	// * returned: default
	Description pulumi.StringPtrInput
	// User credential expires on
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: dateTime
	// * uniqueness: none
	ExpiresOn pulumi.StringPtrInput
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringInput
	// User's ocid
	//
	// **SCIM++ Properties:**
	// * caseExact: true
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: always
	// * type: string
	// * uniqueness: none
	Ocid pulumi.StringPtrInput
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: true
	// * mutability: readWrite
	// * required: true
	// * returned: default
	// * type: string
	// * uniqueness: none
	Schemas pulumi.StringArrayInput
	// User credential status
	//
	// **Added In:** 2109090424
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsSearchable: false
	// * multiValued: false
	// * mutability: readWrite
	// * required: false
	// * returned: never
	// * type: string
	// * uniqueness: none
	Status pulumi.StringPtrInput
	// A list of tags on this resource.
	//
	// **SCIM++ Properties:**
	// * idcsCompositeKey: [key, value]
	// * idcsSearchable: true
	// * multiValued: true
	// * mutability: readWrite
	// * required: false
	// * returned: request
	// * type: complex
	// * uniqueness: none
	Tags DomainsUserDbCredentialTagArrayInput
	// Controls whether a user can update themselves or not via User related APIs
	UrnietfparamsscimschemasoracleidcsextensionselfChangeUser DomainsUserDbCredentialUrnietfparamsscimschemasoracleidcsextensionselfChangeUserPtrInput
	// User linked to db credential
	//
	// **SCIM++ Properties:**
	// * caseExact: false
	// * idcsCompositeKey: [value]
	// * idcsSearchable: true
	// * multiValued: false
	// * mutability: immutable
	// * required: false
	// * returned: default
	// * type: complex
	// * uniqueness: none
	User DomainsUserDbCredentialUserPtrInput
}

func (DomainsUserDbCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainsUserDbCredentialArgs)(nil)).Elem()
}

type DomainsUserDbCredentialInput interface {
	pulumi.Input

	ToDomainsUserDbCredentialOutput() DomainsUserDbCredentialOutput
	ToDomainsUserDbCredentialOutputWithContext(ctx context.Context) DomainsUserDbCredentialOutput
}

func (*DomainsUserDbCredential) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainsUserDbCredential)(nil)).Elem()
}

func (i *DomainsUserDbCredential) ToDomainsUserDbCredentialOutput() DomainsUserDbCredentialOutput {
	return i.ToDomainsUserDbCredentialOutputWithContext(context.Background())
}

func (i *DomainsUserDbCredential) ToDomainsUserDbCredentialOutputWithContext(ctx context.Context) DomainsUserDbCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsUserDbCredentialOutput)
}

// DomainsUserDbCredentialArrayInput is an input type that accepts DomainsUserDbCredentialArray and DomainsUserDbCredentialArrayOutput values.
// You can construct a concrete instance of `DomainsUserDbCredentialArrayInput` via:
//
//	DomainsUserDbCredentialArray{ DomainsUserDbCredentialArgs{...} }
type DomainsUserDbCredentialArrayInput interface {
	pulumi.Input

	ToDomainsUserDbCredentialArrayOutput() DomainsUserDbCredentialArrayOutput
	ToDomainsUserDbCredentialArrayOutputWithContext(context.Context) DomainsUserDbCredentialArrayOutput
}

type DomainsUserDbCredentialArray []DomainsUserDbCredentialInput

func (DomainsUserDbCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainsUserDbCredential)(nil)).Elem()
}

func (i DomainsUserDbCredentialArray) ToDomainsUserDbCredentialArrayOutput() DomainsUserDbCredentialArrayOutput {
	return i.ToDomainsUserDbCredentialArrayOutputWithContext(context.Background())
}

func (i DomainsUserDbCredentialArray) ToDomainsUserDbCredentialArrayOutputWithContext(ctx context.Context) DomainsUserDbCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsUserDbCredentialArrayOutput)
}

// DomainsUserDbCredentialMapInput is an input type that accepts DomainsUserDbCredentialMap and DomainsUserDbCredentialMapOutput values.
// You can construct a concrete instance of `DomainsUserDbCredentialMapInput` via:
//
//	DomainsUserDbCredentialMap{ "key": DomainsUserDbCredentialArgs{...} }
type DomainsUserDbCredentialMapInput interface {
	pulumi.Input

	ToDomainsUserDbCredentialMapOutput() DomainsUserDbCredentialMapOutput
	ToDomainsUserDbCredentialMapOutputWithContext(context.Context) DomainsUserDbCredentialMapOutput
}

type DomainsUserDbCredentialMap map[string]DomainsUserDbCredentialInput

func (DomainsUserDbCredentialMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainsUserDbCredential)(nil)).Elem()
}

func (i DomainsUserDbCredentialMap) ToDomainsUserDbCredentialMapOutput() DomainsUserDbCredentialMapOutput {
	return i.ToDomainsUserDbCredentialMapOutputWithContext(context.Background())
}

func (i DomainsUserDbCredentialMap) ToDomainsUserDbCredentialMapOutputWithContext(ctx context.Context) DomainsUserDbCredentialMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainsUserDbCredentialMapOutput)
}

type DomainsUserDbCredentialOutput struct{ *pulumi.OutputState }

func (DomainsUserDbCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainsUserDbCredential)(nil)).Elem()
}

func (o DomainsUserDbCredentialOutput) ToDomainsUserDbCredentialOutput() DomainsUserDbCredentialOutput {
	return o
}

func (o DomainsUserDbCredentialOutput) ToDomainsUserDbCredentialOutputWithContext(ctx context.Context) DomainsUserDbCredentialOutput {
	return o
}

// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
func (o DomainsUserDbCredentialOutput) AttributeSets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsUserDbCredential) pulumi.StringArrayOutput { return v.AttributeSets }).(pulumi.StringArrayOutput)
}

// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
func (o DomainsUserDbCredentialOutput) Attributes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsUserDbCredential) pulumi.StringPtrOutput { return v.Attributes }).(pulumi.StringPtrOutput)
}

// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
func (o DomainsUserDbCredentialOutput) Authorization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsUserDbCredential) pulumi.StringPtrOutput { return v.Authorization }).(pulumi.StringPtrOutput)
}

// (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsUserDbCredentialOutput) CompartmentOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsUserDbCredential) pulumi.StringOutput { return v.CompartmentOcid }).(pulumi.StringOutput)
}

// The db password of the user
//
// **SCIM++ Properties:**
// * type: string
// * mutability: immutable
// * returned: default
// * required: true
func (o DomainsUserDbCredentialOutput) DbPassword() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsUserDbCredential) pulumi.StringOutput { return v.DbPassword }).(pulumi.StringOutput)
}

// (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: boolean
// * uniqueness: none
func (o DomainsUserDbCredentialOutput) DeleteInProgress() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsUserDbCredential) pulumi.BoolOutput { return v.DeleteInProgress }).(pulumi.BoolOutput)
}

// Description
//
// **Added In:** 2109020413
//
// **SCIM++ Properties:**
// * caseExact: false
// * type: string
// * mutability: readWrite
// * required: false
// * returned: default
func (o DomainsUserDbCredentialOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsUserDbCredential) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsUserDbCredentialOutput) DomainOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsUserDbCredential) pulumi.StringOutput { return v.DomainOcid }).(pulumi.StringOutput)
}

// (Updatable) Indicates that the db password has expired
//
// **SCIM++ Properties:**
// * type: boolean
// * mutability: readOnly
// * returned: default
func (o DomainsUserDbCredentialOutput) Expired() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainsUserDbCredential) pulumi.BoolOutput { return v.Expired }).(pulumi.BoolOutput)
}

// User credential expires on
//
// **Added In:** 2109090424
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: immutable
// * required: false
// * returned: default
// * type: dateTime
// * uniqueness: none
func (o DomainsUserDbCredentialOutput) ExpiresOn() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsUserDbCredential) pulumi.StringOutput { return v.ExpiresOn }).(pulumi.StringOutput)
}

// (Updatable) The User or App who created the Resource
//
// **SCIM++ Properties:**
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: true
// * returned: default
// * type: complex
func (o DomainsUserDbCredentialOutput) IdcsCreatedBies() DomainsUserDbCredentialIdcsCreatedByArrayOutput {
	return o.ApplyT(func(v *DomainsUserDbCredential) DomainsUserDbCredentialIdcsCreatedByArrayOutput {
		return v.IdcsCreatedBies
	}).(DomainsUserDbCredentialIdcsCreatedByArrayOutput)
}

// The basic endpoint for the identity domain
func (o DomainsUserDbCredentialOutput) IdcsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsUserDbCredential) pulumi.StringOutput { return v.IdcsEndpoint }).(pulumi.StringOutput)
}

// (Updatable) The User or App who modified the Resource
//
// **SCIM++ Properties:**
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: complex
func (o DomainsUserDbCredentialOutput) IdcsLastModifiedBies() DomainsUserDbCredentialIdcsLastModifiedByArrayOutput {
	return o.ApplyT(func(v *DomainsUserDbCredential) DomainsUserDbCredentialIdcsLastModifiedByArrayOutput {
		return v.IdcsLastModifiedBies
	}).(DomainsUserDbCredentialIdcsLastModifiedByArrayOutput)
}

// (Updatable) The release number when the resource was upgraded.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: request
// * type: string
// * uniqueness: none
func (o DomainsUserDbCredentialOutput) IdcsLastUpgradedInRelease() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsUserDbCredential) pulumi.StringOutput { return v.IdcsLastUpgradedInRelease }).(pulumi.StringOutput)
}

// (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
//
// **SCIM++ Properties:**
// * idcsSearchable: false
// * multiValued: true
// * mutability: readOnly
// * required: false
// * returned: request
// * type: string
// * uniqueness: none
func (o DomainsUserDbCredentialOutput) IdcsPreventedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsUserDbCredential) pulumi.StringArrayOutput { return v.IdcsPreventedOperations }).(pulumi.StringArrayOutput)
}

// (Updatable) A DateTime that specifies the date and time when the current db password was set
//
// **SCIM++ Properties:**
// * type: dateTime
// * mutability: readOnly
// * returned: default
func (o DomainsUserDbCredentialOutput) LastSetDate() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsUserDbCredential) pulumi.StringOutput { return v.LastSetDate }).(pulumi.StringOutput)
}

// (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: true
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
// * type: complex
func (o DomainsUserDbCredentialOutput) Metas() DomainsUserDbCredentialMetaArrayOutput {
	return o.ApplyT(func(v *DomainsUserDbCredential) DomainsUserDbCredentialMetaArrayOutput { return v.Metas }).(DomainsUserDbCredentialMetaArrayOutput)
}

// (Updatable) The db password of the user with mixed salt
//
// **SCIM++ Properties:**
// * type: string
// * mutability: readOnly
// * returned: default
// * required: false
func (o DomainsUserDbCredentialOutput) MixedDbPassword() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsUserDbCredential) pulumi.StringOutput { return v.MixedDbPassword }).(pulumi.StringOutput)
}

// (Updatable) The mixed salt of the password
//
// **SCIM++ Properties:**
// * type: string
// * mutability: readOnly
// * returned: default
// * required: false
func (o DomainsUserDbCredentialOutput) MixedSalt() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsUserDbCredential) pulumi.StringOutput { return v.MixedSalt }).(pulumi.StringOutput)
}

// (Updatable) User name
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsUserDbCredentialOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsUserDbCredential) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// User's ocid
//
// **SCIM++ Properties:**
// * caseExact: true
// * idcsSearchable: true
// * multiValued: false
// * mutability: immutable
// * required: false
// * returned: always
// * type: string
// * uniqueness: none
func (o DomainsUserDbCredentialOutput) Ocid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsUserDbCredential) pulumi.StringOutput { return v.Ocid }).(pulumi.StringOutput)
}

// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
func (o DomainsUserDbCredentialOutput) ResourceTypeSchemaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainsUserDbCredential) pulumi.StringPtrOutput { return v.ResourceTypeSchemaVersion }).(pulumi.StringPtrOutput)
}

// (Updatable) The salt of the password
//
// **SCIM++ Properties:**
// * type: string
// * mutability: readOnly
// * returned: default
// * required: false
func (o DomainsUserDbCredentialOutput) Salt() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsUserDbCredential) pulumi.StringOutput { return v.Salt }).(pulumi.StringOutput)
}

// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: true
// * mutability: readWrite
// * required: true
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsUserDbCredentialOutput) Schemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainsUserDbCredential) pulumi.StringArrayOutput { return v.Schemas }).(pulumi.StringArrayOutput)
}

// User credential status
//
// **Added In:** 2109090424
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readWrite
// * required: false
// * returned: never
// * type: string
// * uniqueness: none
func (o DomainsUserDbCredentialOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsUserDbCredential) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// A list of tags on this resource.
//
// **SCIM++ Properties:**
// * idcsCompositeKey: [key, value]
// * idcsSearchable: true
// * multiValued: true
// * mutability: readWrite
// * required: false
// * returned: request
// * type: complex
// * uniqueness: none
func (o DomainsUserDbCredentialOutput) Tags() DomainsUserDbCredentialTagArrayOutput {
	return o.ApplyT(func(v *DomainsUserDbCredential) DomainsUserDbCredentialTagArrayOutput { return v.Tags }).(DomainsUserDbCredentialTagArrayOutput)
}

// (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsSearchable: false
// * multiValued: false
// * mutability: readOnly
// * required: false
// * returned: default
// * type: string
// * uniqueness: none
func (o DomainsUserDbCredentialOutput) TenancyOcid() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainsUserDbCredential) pulumi.StringOutput { return v.TenancyOcid }).(pulumi.StringOutput)
}

// Controls whether a user can update themselves or not via User related APIs
func (o DomainsUserDbCredentialOutput) UrnietfparamsscimschemasoracleidcsextensionselfChangeUser() DomainsUserDbCredentialUrnietfparamsscimschemasoracleidcsextensionselfChangeUserOutput {
	return o.ApplyT(func(v *DomainsUserDbCredential) DomainsUserDbCredentialUrnietfparamsscimschemasoracleidcsextensionselfChangeUserOutput {
		return v.UrnietfparamsscimschemasoracleidcsextensionselfChangeUser
	}).(DomainsUserDbCredentialUrnietfparamsscimschemasoracleidcsextensionselfChangeUserOutput)
}

// User linked to db credential
//
// **SCIM++ Properties:**
// * caseExact: false
// * idcsCompositeKey: [value]
// * idcsSearchable: true
// * multiValued: false
// * mutability: immutable
// * required: false
// * returned: default
// * type: complex
// * uniqueness: none
func (o DomainsUserDbCredentialOutput) User() DomainsUserDbCredentialUserOutput {
	return o.ApplyT(func(v *DomainsUserDbCredential) DomainsUserDbCredentialUserOutput { return v.User }).(DomainsUserDbCredentialUserOutput)
}

type DomainsUserDbCredentialArrayOutput struct{ *pulumi.OutputState }

func (DomainsUserDbCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainsUserDbCredential)(nil)).Elem()
}

func (o DomainsUserDbCredentialArrayOutput) ToDomainsUserDbCredentialArrayOutput() DomainsUserDbCredentialArrayOutput {
	return o
}

func (o DomainsUserDbCredentialArrayOutput) ToDomainsUserDbCredentialArrayOutputWithContext(ctx context.Context) DomainsUserDbCredentialArrayOutput {
	return o
}

func (o DomainsUserDbCredentialArrayOutput) Index(i pulumi.IntInput) DomainsUserDbCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DomainsUserDbCredential {
		return vs[0].([]*DomainsUserDbCredential)[vs[1].(int)]
	}).(DomainsUserDbCredentialOutput)
}

type DomainsUserDbCredentialMapOutput struct{ *pulumi.OutputState }

func (DomainsUserDbCredentialMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainsUserDbCredential)(nil)).Elem()
}

func (o DomainsUserDbCredentialMapOutput) ToDomainsUserDbCredentialMapOutput() DomainsUserDbCredentialMapOutput {
	return o
}

func (o DomainsUserDbCredentialMapOutput) ToDomainsUserDbCredentialMapOutputWithContext(ctx context.Context) DomainsUserDbCredentialMapOutput {
	return o
}

func (o DomainsUserDbCredentialMapOutput) MapIndex(k pulumi.StringInput) DomainsUserDbCredentialOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DomainsUserDbCredential {
		return vs[0].(map[string]*DomainsUserDbCredential)[vs[1].(string)]
	}).(DomainsUserDbCredentialOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsUserDbCredentialInput)(nil)).Elem(), &DomainsUserDbCredential{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsUserDbCredentialArrayInput)(nil)).Elem(), DomainsUserDbCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainsUserDbCredentialMapInput)(nil)).Elem(), DomainsUserDbCredentialMap{})
	pulumi.RegisterOutputType(DomainsUserDbCredentialOutput{})
	pulumi.RegisterOutputType(DomainsUserDbCredentialArrayOutput{})
	pulumi.RegisterOutputType(DomainsUserDbCredentialMapOutput{})
}
