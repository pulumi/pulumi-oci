// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Allowed Domain License Types in Oracle Cloud Infrastructure Identity service.
//
// List the allowed domain license types supported by Oracle Cloud Infrastructure If {@code currentLicenseTypeName} provided, returns allowed license types a domain with the specified license type name can migrate to.
// If {@code name} is provided, it filters and returns resources that match the given license type name.
// Otherwise, returns all valid license types that are currently supported.
//
// - If license type details are retrieved sucessfully, return 202 ACCEPTED.
// - If any internal error occurs, return 500 INTERNAL SERVER ERROR.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/Identity"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := Identity.GetAllowedDomainLicenseTypes(ctx, &identity.GetAllowedDomainLicenseTypesArgs{
// 			CurrentLicenseTypeName: pulumi.StringRef(_var.Allowed_domain_license_type_current_license_type_name),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetAllowedDomainLicenseTypes(ctx *pulumi.Context, args *GetAllowedDomainLicenseTypesArgs, opts ...pulumi.InvokeOption) (*GetAllowedDomainLicenseTypesResult, error) {
	var rv GetAllowedDomainLicenseTypesResult
	err := ctx.Invoke("oci:Identity/getAllowedDomainLicenseTypes:getAllowedDomainLicenseTypes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAllowedDomainLicenseTypes.
type GetAllowedDomainLicenseTypesArgs struct {
	// The domain license type
	CurrentLicenseTypeName *string                              `pulumi:"currentLicenseTypeName"`
	Filters                []GetAllowedDomainLicenseTypesFilter `pulumi:"filters"`
}

// A collection of values returned by getAllowedDomainLicenseTypes.
type GetAllowedDomainLicenseTypesResult struct {
	// The list of allowed_domain_license_types.
	AllowedDomainLicenseTypes []GetAllowedDomainLicenseTypesAllowedDomainLicenseType `pulumi:"allowedDomainLicenseTypes"`
	CurrentLicenseTypeName    *string                                                `pulumi:"currentLicenseTypeName"`
	Filters                   []GetAllowedDomainLicenseTypesFilter                   `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func GetAllowedDomainLicenseTypesOutput(ctx *pulumi.Context, args GetAllowedDomainLicenseTypesOutputArgs, opts ...pulumi.InvokeOption) GetAllowedDomainLicenseTypesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAllowedDomainLicenseTypesResult, error) {
			args := v.(GetAllowedDomainLicenseTypesArgs)
			r, err := GetAllowedDomainLicenseTypes(ctx, &args, opts...)
			var s GetAllowedDomainLicenseTypesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAllowedDomainLicenseTypesResultOutput)
}

// A collection of arguments for invoking getAllowedDomainLicenseTypes.
type GetAllowedDomainLicenseTypesOutputArgs struct {
	// The domain license type
	CurrentLicenseTypeName pulumi.StringPtrInput                        `pulumi:"currentLicenseTypeName"`
	Filters                GetAllowedDomainLicenseTypesFilterArrayInput `pulumi:"filters"`
}

func (GetAllowedDomainLicenseTypesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAllowedDomainLicenseTypesArgs)(nil)).Elem()
}

// A collection of values returned by getAllowedDomainLicenseTypes.
type GetAllowedDomainLicenseTypesResultOutput struct{ *pulumi.OutputState }

func (GetAllowedDomainLicenseTypesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAllowedDomainLicenseTypesResult)(nil)).Elem()
}

func (o GetAllowedDomainLicenseTypesResultOutput) ToGetAllowedDomainLicenseTypesResultOutput() GetAllowedDomainLicenseTypesResultOutput {
	return o
}

func (o GetAllowedDomainLicenseTypesResultOutput) ToGetAllowedDomainLicenseTypesResultOutputWithContext(ctx context.Context) GetAllowedDomainLicenseTypesResultOutput {
	return o
}

// The list of allowed_domain_license_types.
func (o GetAllowedDomainLicenseTypesResultOutput) AllowedDomainLicenseTypes() GetAllowedDomainLicenseTypesAllowedDomainLicenseTypeArrayOutput {
	return o.ApplyT(func(v GetAllowedDomainLicenseTypesResult) []GetAllowedDomainLicenseTypesAllowedDomainLicenseType {
		return v.AllowedDomainLicenseTypes
	}).(GetAllowedDomainLicenseTypesAllowedDomainLicenseTypeArrayOutput)
}

func (o GetAllowedDomainLicenseTypesResultOutput) CurrentLicenseTypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAllowedDomainLicenseTypesResult) *string { return v.CurrentLicenseTypeName }).(pulumi.StringPtrOutput)
}

func (o GetAllowedDomainLicenseTypesResultOutput) Filters() GetAllowedDomainLicenseTypesFilterArrayOutput {
	return o.ApplyT(func(v GetAllowedDomainLicenseTypesResult) []GetAllowedDomainLicenseTypesFilter { return v.Filters }).(GetAllowedDomainLicenseTypesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAllowedDomainLicenseTypesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAllowedDomainLicenseTypesResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAllowedDomainLicenseTypesResultOutput{})
}
