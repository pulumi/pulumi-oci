// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Auth Tokens in Oracle Cloud Infrastructure Identity service.
//
// Lists the auth tokens for the specified user. The returned object contains the token's OCID, but not
// the token itself. The actual token is returned only upon creation.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/identity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := identity.GetAuthTokens(ctx, &identity.GetAuthTokensArgs{
//				UserId: testUser.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAuthTokens(ctx *pulumi.Context, args *GetAuthTokensArgs, opts ...pulumi.InvokeOption) (*GetAuthTokensResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAuthTokensResult
	err := ctx.Invoke("oci:Identity/getAuthTokens:getAuthTokens", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAuthTokens.
type GetAuthTokensArgs struct {
	Filters []GetAuthTokensFilter `pulumi:"filters"`
	// The OCID of the user.
	UserId string `pulumi:"userId"`
}

// A collection of values returned by getAuthTokens.
type GetAuthTokensResult struct {
	Filters []GetAuthTokensFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of tokens.
	Tokens []GetAuthTokensToken `pulumi:"tokens"`
	// The OCID of the user the auth token belongs to.
	UserId string `pulumi:"userId"`
}

func GetAuthTokensOutput(ctx *pulumi.Context, args GetAuthTokensOutputArgs, opts ...pulumi.InvokeOption) GetAuthTokensResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetAuthTokensResultOutput, error) {
			args := v.(GetAuthTokensArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Identity/getAuthTokens:getAuthTokens", args, GetAuthTokensResultOutput{}, options).(GetAuthTokensResultOutput), nil
		}).(GetAuthTokensResultOutput)
}

// A collection of arguments for invoking getAuthTokens.
type GetAuthTokensOutputArgs struct {
	Filters GetAuthTokensFilterArrayInput `pulumi:"filters"`
	// The OCID of the user.
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetAuthTokensOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthTokensArgs)(nil)).Elem()
}

// A collection of values returned by getAuthTokens.
type GetAuthTokensResultOutput struct{ *pulumi.OutputState }

func (GetAuthTokensResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthTokensResult)(nil)).Elem()
}

func (o GetAuthTokensResultOutput) ToGetAuthTokensResultOutput() GetAuthTokensResultOutput {
	return o
}

func (o GetAuthTokensResultOutput) ToGetAuthTokensResultOutputWithContext(ctx context.Context) GetAuthTokensResultOutput {
	return o
}

func (o GetAuthTokensResultOutput) Filters() GetAuthTokensFilterArrayOutput {
	return o.ApplyT(func(v GetAuthTokensResult) []GetAuthTokensFilter { return v.Filters }).(GetAuthTokensFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAuthTokensResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthTokensResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of tokens.
func (o GetAuthTokensResultOutput) Tokens() GetAuthTokensTokenArrayOutput {
	return o.ApplyT(func(v GetAuthTokensResult) []GetAuthTokensToken { return v.Tokens }).(GetAuthTokensTokenArrayOutput)
}

// The OCID of the user the auth token belongs to.
func (o GetAuthTokensResultOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthTokensResult) string { return v.UserId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAuthTokensResultOutput{})
}
