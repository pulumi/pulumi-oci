// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific App Role resource in Oracle Cloud Infrastructure Identity Domains service.
//
// # Get an AppRole
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Identity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Identity.GetDomainsAppRole(ctx, &identity.GetDomainsAppRoleArgs{
//				AppRoleId:    testAppRoleOciIdentityDomainsAppRole.Id,
//				IdcsEndpoint: testDomain.Url,
//				AttributeSets: []string{
//					"all",
//				},
//				Attributes:                pulumi.StringRef(""),
//				Authorization:             pulumi.StringRef(appRoleAuthorization),
//				ResourceTypeSchemaVersion: pulumi.StringRef(appRoleResourceTypeSchemaVersion),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDomainsAppRole(ctx *pulumi.Context, args *LookupDomainsAppRoleArgs, opts ...pulumi.InvokeOption) (*LookupDomainsAppRoleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDomainsAppRoleResult
	err := ctx.Invoke("oci:Identity/getDomainsAppRole:getDomainsAppRole", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDomainsAppRole.
type LookupDomainsAppRoleArgs struct {
	// ID of the resource
	AppRoleId string `pulumi:"appRoleId"`
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets []string `pulumi:"attributeSets"`
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes *string `pulumi:"attributes"`
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// The basic endpoint for the identity domain
	IdcsEndpoint string `pulumi:"idcsEndpoint"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
}

// A collection of values returned by getDomainsAppRole.
type LookupDomainsAppRoleResult struct {
	// If true, the role provides administrative access privileges.
	AdminRole bool   `pulumi:"adminRole"`
	AppRoleId string `pulumi:"appRoleId"`
	// A unique identifier for the application that references this role.
	Apps          []GetDomainsAppRoleApp `pulumi:"apps"`
	AttributeSets []string               `pulumi:"attributeSets"`
	Attributes    *string                `pulumi:"attributes"`
	Authorization *string                `pulumi:"authorization"`
	// If true, this AppRole can be granted to Apps.
	AvailableToClients bool `pulumi:"availableToClients"`
	// If true, this AppRole can be granted to Groups.
	AvailableToGroups bool `pulumi:"availableToGroups"`
	// If true, this AppRole can be granted to Users.
	AvailableToUsers bool `pulumi:"availableToUsers"`
	// Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	CompartmentOcid string `pulumi:"compartmentOcid"`
	// A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	DeleteInProgress bool `pulumi:"deleteInProgress"`
	// AppRole description
	Description string `pulumi:"description"`
	// AppRole name
	DisplayName string `pulumi:"displayName"`
	// Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	DomainOcid string `pulumi:"domainOcid"`
	// Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
	Id string `pulumi:"id"`
	// The User or App who created the Resource
	IdcsCreatedBies []GetDomainsAppRoleIdcsCreatedBy `pulumi:"idcsCreatedBies"`
	IdcsEndpoint    string                           `pulumi:"idcsEndpoint"`
	// The User or App who modified the Resource
	IdcsLastModifiedBies []GetDomainsAppRoleIdcsLastModifiedBy `pulumi:"idcsLastModifiedBies"`
	// The release number when the resource was upgraded.
	IdcsLastUpgradedInRelease string `pulumi:"idcsLastUpgradedInRelease"`
	// Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	IdcsPreventedOperations []string `pulumi:"idcsPreventedOperations"`
	// The name of the legacy group associated with this AppRole.
	LegacyGroupName string `pulumi:"legacyGroupName"`
	// If true, indicates that this Oracle Identity Cloud Service AppRole can be granted to a delegated administrator whose scope is limited to users that are members of one or more groups.
	LimitedToOneOrMoreGroups bool `pulumi:"limitedToOneOrMoreGroups"`
	// AppRole localization name
	LocalizedDisplayName string `pulumi:"localizedDisplayName"`
	// AppRole members - when requesting members attribute, it is recommended to use startIndex and count to return members in pages instead of in a single response, eg : #attributes=members[startIndex=1%26count=10]
	Members []GetDomainsAppRoleMember `pulumi:"members"`
	// A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	Metas []GetDomainsAppRoleMeta `pulumi:"metas"`
	// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	Ocid string `pulumi:"ocid"`
	// If true, this AppRole is available automatically to every Oracle Identity Cloud Service User in this tenancy. There is no need to grant it to individual Users or Groups.
	Public                    bool    `pulumi:"public"`
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	Schemas []string `pulumi:"schemas"`
	// A list of tags on this resource.
	Tags []GetDomainsAppRoleTag `pulumi:"tags"`
	// Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	TenancyOcid string `pulumi:"tenancyOcid"`
	// AppRole unique name
	UniqueName string `pulumi:"uniqueName"`
}

func LookupDomainsAppRoleOutput(ctx *pulumi.Context, args LookupDomainsAppRoleOutputArgs, opts ...pulumi.InvokeOption) LookupDomainsAppRoleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDomainsAppRoleResultOutput, error) {
			args := v.(LookupDomainsAppRoleArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupDomainsAppRoleResult
			secret, err := ctx.InvokePackageRaw("oci:Identity/getDomainsAppRole:getDomainsAppRole", args, &rv, "", opts...)
			if err != nil {
				return LookupDomainsAppRoleResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupDomainsAppRoleResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupDomainsAppRoleResultOutput), nil
			}
			return output, nil
		}).(LookupDomainsAppRoleResultOutput)
}

// A collection of arguments for invoking getDomainsAppRole.
type LookupDomainsAppRoleOutputArgs struct {
	// ID of the resource
	AppRoleId pulumi.StringInput `pulumi:"appRoleId"`
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayInput `pulumi:"attributeSets"`
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrInput `pulumi:"attributes"`
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput `pulumi:"authorization"`
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringInput `pulumi:"idcsEndpoint"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput `pulumi:"resourceTypeSchemaVersion"`
}

func (LookupDomainsAppRoleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainsAppRoleArgs)(nil)).Elem()
}

// A collection of values returned by getDomainsAppRole.
type LookupDomainsAppRoleResultOutput struct{ *pulumi.OutputState }

func (LookupDomainsAppRoleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainsAppRoleResult)(nil)).Elem()
}

func (o LookupDomainsAppRoleResultOutput) ToLookupDomainsAppRoleResultOutput() LookupDomainsAppRoleResultOutput {
	return o
}

func (o LookupDomainsAppRoleResultOutput) ToLookupDomainsAppRoleResultOutputWithContext(ctx context.Context) LookupDomainsAppRoleResultOutput {
	return o
}

// If true, the role provides administrative access privileges.
func (o LookupDomainsAppRoleResultOutput) AdminRole() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDomainsAppRoleResult) bool { return v.AdminRole }).(pulumi.BoolOutput)
}

func (o LookupDomainsAppRoleResultOutput) AppRoleId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsAppRoleResult) string { return v.AppRoleId }).(pulumi.StringOutput)
}

// A unique identifier for the application that references this role.
func (o LookupDomainsAppRoleResultOutput) Apps() GetDomainsAppRoleAppArrayOutput {
	return o.ApplyT(func(v LookupDomainsAppRoleResult) []GetDomainsAppRoleApp { return v.Apps }).(GetDomainsAppRoleAppArrayOutput)
}

func (o LookupDomainsAppRoleResultOutput) AttributeSets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDomainsAppRoleResult) []string { return v.AttributeSets }).(pulumi.StringArrayOutput)
}

func (o LookupDomainsAppRoleResultOutput) Attributes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainsAppRoleResult) *string { return v.Attributes }).(pulumi.StringPtrOutput)
}

func (o LookupDomainsAppRoleResultOutput) Authorization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainsAppRoleResult) *string { return v.Authorization }).(pulumi.StringPtrOutput)
}

// If true, this AppRole can be granted to Apps.
func (o LookupDomainsAppRoleResultOutput) AvailableToClients() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDomainsAppRoleResult) bool { return v.AvailableToClients }).(pulumi.BoolOutput)
}

// If true, this AppRole can be granted to Groups.
func (o LookupDomainsAppRoleResultOutput) AvailableToGroups() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDomainsAppRoleResult) bool { return v.AvailableToGroups }).(pulumi.BoolOutput)
}

// If true, this AppRole can be granted to Users.
func (o LookupDomainsAppRoleResultOutput) AvailableToUsers() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDomainsAppRoleResult) bool { return v.AvailableToUsers }).(pulumi.BoolOutput)
}

// Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
func (o LookupDomainsAppRoleResultOutput) CompartmentOcid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsAppRoleResult) string { return v.CompartmentOcid }).(pulumi.StringOutput)
}

// A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
func (o LookupDomainsAppRoleResultOutput) DeleteInProgress() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDomainsAppRoleResult) bool { return v.DeleteInProgress }).(pulumi.BoolOutput)
}

// AppRole description
func (o LookupDomainsAppRoleResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsAppRoleResult) string { return v.Description }).(pulumi.StringOutput)
}

// AppRole name
func (o LookupDomainsAppRoleResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsAppRoleResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
func (o LookupDomainsAppRoleResultOutput) DomainOcid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsAppRoleResult) string { return v.DomainOcid }).(pulumi.StringOutput)
}

// Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
func (o LookupDomainsAppRoleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsAppRoleResult) string { return v.Id }).(pulumi.StringOutput)
}

// The User or App who created the Resource
func (o LookupDomainsAppRoleResultOutput) IdcsCreatedBies() GetDomainsAppRoleIdcsCreatedByArrayOutput {
	return o.ApplyT(func(v LookupDomainsAppRoleResult) []GetDomainsAppRoleIdcsCreatedBy { return v.IdcsCreatedBies }).(GetDomainsAppRoleIdcsCreatedByArrayOutput)
}

func (o LookupDomainsAppRoleResultOutput) IdcsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsAppRoleResult) string { return v.IdcsEndpoint }).(pulumi.StringOutput)
}

// The User or App who modified the Resource
func (o LookupDomainsAppRoleResultOutput) IdcsLastModifiedBies() GetDomainsAppRoleIdcsLastModifiedByArrayOutput {
	return o.ApplyT(func(v LookupDomainsAppRoleResult) []GetDomainsAppRoleIdcsLastModifiedBy {
		return v.IdcsLastModifiedBies
	}).(GetDomainsAppRoleIdcsLastModifiedByArrayOutput)
}

// The release number when the resource was upgraded.
func (o LookupDomainsAppRoleResultOutput) IdcsLastUpgradedInRelease() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsAppRoleResult) string { return v.IdcsLastUpgradedInRelease }).(pulumi.StringOutput)
}

// Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
func (o LookupDomainsAppRoleResultOutput) IdcsPreventedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDomainsAppRoleResult) []string { return v.IdcsPreventedOperations }).(pulumi.StringArrayOutput)
}

// The name of the legacy group associated with this AppRole.
func (o LookupDomainsAppRoleResultOutput) LegacyGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsAppRoleResult) string { return v.LegacyGroupName }).(pulumi.StringOutput)
}

// If true, indicates that this Oracle Identity Cloud Service AppRole can be granted to a delegated administrator whose scope is limited to users that are members of one or more groups.
func (o LookupDomainsAppRoleResultOutput) LimitedToOneOrMoreGroups() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDomainsAppRoleResult) bool { return v.LimitedToOneOrMoreGroups }).(pulumi.BoolOutput)
}

// AppRole localization name
func (o LookupDomainsAppRoleResultOutput) LocalizedDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsAppRoleResult) string { return v.LocalizedDisplayName }).(pulumi.StringOutput)
}

// AppRole members - when requesting members attribute, it is recommended to use startIndex and count to return members in pages instead of in a single response, eg : #attributes=members[startIndex=1%26count=10]
func (o LookupDomainsAppRoleResultOutput) Members() GetDomainsAppRoleMemberArrayOutput {
	return o.ApplyT(func(v LookupDomainsAppRoleResult) []GetDomainsAppRoleMember { return v.Members }).(GetDomainsAppRoleMemberArrayOutput)
}

// A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
func (o LookupDomainsAppRoleResultOutput) Metas() GetDomainsAppRoleMetaArrayOutput {
	return o.ApplyT(func(v LookupDomainsAppRoleResult) []GetDomainsAppRoleMeta { return v.Metas }).(GetDomainsAppRoleMetaArrayOutput)
}

// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
func (o LookupDomainsAppRoleResultOutput) Ocid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsAppRoleResult) string { return v.Ocid }).(pulumi.StringOutput)
}

// If true, this AppRole is available automatically to every Oracle Identity Cloud Service User in this tenancy. There is no need to grant it to individual Users or Groups.
func (o LookupDomainsAppRoleResultOutput) Public() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDomainsAppRoleResult) bool { return v.Public }).(pulumi.BoolOutput)
}

func (o LookupDomainsAppRoleResultOutput) ResourceTypeSchemaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainsAppRoleResult) *string { return v.ResourceTypeSchemaVersion }).(pulumi.StringPtrOutput)
}

// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
func (o LookupDomainsAppRoleResultOutput) Schemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDomainsAppRoleResult) []string { return v.Schemas }).(pulumi.StringArrayOutput)
}

// A list of tags on this resource.
func (o LookupDomainsAppRoleResultOutput) Tags() GetDomainsAppRoleTagArrayOutput {
	return o.ApplyT(func(v LookupDomainsAppRoleResult) []GetDomainsAppRoleTag { return v.Tags }).(GetDomainsAppRoleTagArrayOutput)
}

// Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
func (o LookupDomainsAppRoleResultOutput) TenancyOcid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsAppRoleResult) string { return v.TenancyOcid }).(pulumi.StringOutput)
}

// AppRole unique name
func (o LookupDomainsAppRoleResultOutput) UniqueName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsAppRoleResult) string { return v.UniqueName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDomainsAppRoleResultOutput{})
}
