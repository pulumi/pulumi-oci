// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Conditions in Oracle Cloud Infrastructure Identity Domains service.
//
// # Search Conditions
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Identity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Identity.GetDomainsConditions(ctx, &identity.GetDomainsConditionsArgs{
//				IdcsEndpoint:    testDomain.Url,
//				ConditionCount:  pulumi.IntRef(conditionConditionCount),
//				ConditionFilter: pulumi.StringRef(conditionConditionFilter),
//				AttributeSets: []string{
//					"all",
//				},
//				Attributes:                pulumi.StringRef(""),
//				Authorization:             pulumi.StringRef(conditionAuthorization),
//				ResourceTypeSchemaVersion: pulumi.StringRef(conditionResourceTypeSchemaVersion),
//				StartIndex:                pulumi.IntRef(conditionStartIndex),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDomainsConditions(ctx *pulumi.Context, args *GetDomainsConditionsArgs, opts ...pulumi.InvokeOption) (*GetDomainsConditionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDomainsConditionsResult
	err := ctx.Invoke("oci:Identity/getDomainsConditions:getDomainsConditions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDomainsConditions.
type GetDomainsConditionsArgs struct {
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets []string `pulumi:"attributeSets"`
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes *string `pulumi:"attributes"`
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	CompartmentId *string `pulumi:"compartmentId"`
	// OPTIONAL. An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. (Section 3.4.2.4).
	ConditionCount *int `pulumi:"conditionCount"`
	// OPTIONAL. The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See the Filtering section of the SCIM specification for more information (Section 3.4.2.2). The string should contain at least one condition that each item must match in order to be returned in the search results. Each condition specifies an attribute, an operator, and a value. Conditions within a filter can be connected by logical operators (such as AND and OR). Sets of conditions can be grouped together using parentheses.
	ConditionFilter *string `pulumi:"conditionFilter"`
	// The basic endpoint for the identity domain
	IdcsEndpoint string `pulumi:"idcsEndpoint"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	SortBy                    *string `pulumi:"sortBy"`
	SortOrder                 *string `pulumi:"sortOrder"`
	// OPTIONAL. An integer that indicates the 1-based index of the first query result. See the Pagination section of the SCIM specification for more information. (Section 3.4.2.4). The number of results pages to return. The first page is 1. Specify 2 to access the second page of results, and so on.
	StartIndex *int `pulumi:"startIndex"`
}

// A collection of values returned by getDomainsConditions.
type GetDomainsConditionsResult struct {
	AttributeSets   []string `pulumi:"attributeSets"`
	Attributes      *string  `pulumi:"attributes"`
	Authorization   *string  `pulumi:"authorization"`
	CompartmentId   *string  `pulumi:"compartmentId"`
	ConditionCount  *int     `pulumi:"conditionCount"`
	ConditionFilter *string  `pulumi:"conditionFilter"`
	// The list of conditions.
	Conditions []GetDomainsConditionsCondition `pulumi:"conditions"`
	// The provider-assigned unique ID for this managed resource.
	Id                        string  `pulumi:"id"`
	IdcsEndpoint              string  `pulumi:"idcsEndpoint"`
	ItemsPerPage              int     `pulumi:"itemsPerPage"`
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	Schemas      []string `pulumi:"schemas"`
	SortBy       *string  `pulumi:"sortBy"`
	SortOrder    *string  `pulumi:"sortOrder"`
	StartIndex   *int     `pulumi:"startIndex"`
	TotalResults int      `pulumi:"totalResults"`
}

func GetDomainsConditionsOutput(ctx *pulumi.Context, args GetDomainsConditionsOutputArgs, opts ...pulumi.InvokeOption) GetDomainsConditionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDomainsConditionsResultOutput, error) {
			args := v.(GetDomainsConditionsArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetDomainsConditionsResult
			secret, err := ctx.InvokePackageRaw("oci:Identity/getDomainsConditions:getDomainsConditions", args, &rv, "", opts...)
			if err != nil {
				return GetDomainsConditionsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetDomainsConditionsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetDomainsConditionsResultOutput), nil
			}
			return output, nil
		}).(GetDomainsConditionsResultOutput)
}

// A collection of arguments for invoking getDomainsConditions.
type GetDomainsConditionsOutputArgs struct {
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayInput `pulumi:"attributeSets"`
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrInput `pulumi:"attributes"`
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput `pulumi:"authorization"`
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// OPTIONAL. An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. (Section 3.4.2.4).
	ConditionCount pulumi.IntPtrInput `pulumi:"conditionCount"`
	// OPTIONAL. The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See the Filtering section of the SCIM specification for more information (Section 3.4.2.2). The string should contain at least one condition that each item must match in order to be returned in the search results. Each condition specifies an attribute, an operator, and a value. Conditions within a filter can be connected by logical operators (such as AND and OR). Sets of conditions can be grouped together using parentheses.
	ConditionFilter pulumi.StringPtrInput `pulumi:"conditionFilter"`
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringInput `pulumi:"idcsEndpoint"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput `pulumi:"resourceTypeSchemaVersion"`
	SortBy                    pulumi.StringPtrInput `pulumi:"sortBy"`
	SortOrder                 pulumi.StringPtrInput `pulumi:"sortOrder"`
	// OPTIONAL. An integer that indicates the 1-based index of the first query result. See the Pagination section of the SCIM specification for more information. (Section 3.4.2.4). The number of results pages to return. The first page is 1. Specify 2 to access the second page of results, and so on.
	StartIndex pulumi.IntPtrInput `pulumi:"startIndex"`
}

func (GetDomainsConditionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsConditionsArgs)(nil)).Elem()
}

// A collection of values returned by getDomainsConditions.
type GetDomainsConditionsResultOutput struct{ *pulumi.OutputState }

func (GetDomainsConditionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsConditionsResult)(nil)).Elem()
}

func (o GetDomainsConditionsResultOutput) ToGetDomainsConditionsResultOutput() GetDomainsConditionsResultOutput {
	return o
}

func (o GetDomainsConditionsResultOutput) ToGetDomainsConditionsResultOutputWithContext(ctx context.Context) GetDomainsConditionsResultOutput {
	return o
}

func (o GetDomainsConditionsResultOutput) AttributeSets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDomainsConditionsResult) []string { return v.AttributeSets }).(pulumi.StringArrayOutput)
}

func (o GetDomainsConditionsResultOutput) Attributes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainsConditionsResult) *string { return v.Attributes }).(pulumi.StringPtrOutput)
}

func (o GetDomainsConditionsResultOutput) Authorization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainsConditionsResult) *string { return v.Authorization }).(pulumi.StringPtrOutput)
}

func (o GetDomainsConditionsResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainsConditionsResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

func (o GetDomainsConditionsResultOutput) ConditionCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetDomainsConditionsResult) *int { return v.ConditionCount }).(pulumi.IntPtrOutput)
}

func (o GetDomainsConditionsResultOutput) ConditionFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainsConditionsResult) *string { return v.ConditionFilter }).(pulumi.StringPtrOutput)
}

// The list of conditions.
func (o GetDomainsConditionsResultOutput) Conditions() GetDomainsConditionsConditionArrayOutput {
	return o.ApplyT(func(v GetDomainsConditionsResult) []GetDomainsConditionsCondition { return v.Conditions }).(GetDomainsConditionsConditionArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDomainsConditionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsConditionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDomainsConditionsResultOutput) IdcsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsConditionsResult) string { return v.IdcsEndpoint }).(pulumi.StringOutput)
}

func (o GetDomainsConditionsResultOutput) ItemsPerPage() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainsConditionsResult) int { return v.ItemsPerPage }).(pulumi.IntOutput)
}

func (o GetDomainsConditionsResultOutput) ResourceTypeSchemaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainsConditionsResult) *string { return v.ResourceTypeSchemaVersion }).(pulumi.StringPtrOutput)
}

// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
func (o GetDomainsConditionsResultOutput) Schemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDomainsConditionsResult) []string { return v.Schemas }).(pulumi.StringArrayOutput)
}

func (o GetDomainsConditionsResultOutput) SortBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainsConditionsResult) *string { return v.SortBy }).(pulumi.StringPtrOutput)
}

func (o GetDomainsConditionsResultOutput) SortOrder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainsConditionsResult) *string { return v.SortOrder }).(pulumi.StringPtrOutput)
}

func (o GetDomainsConditionsResultOutput) StartIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetDomainsConditionsResult) *int { return v.StartIndex }).(pulumi.IntPtrOutput)
}

func (o GetDomainsConditionsResultOutput) TotalResults() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainsConditionsResult) int { return v.TotalResults }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDomainsConditionsResultOutput{})
}
