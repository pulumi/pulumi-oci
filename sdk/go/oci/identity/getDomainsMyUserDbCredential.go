// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific My User Db Credential resource in Oracle Cloud Infrastructure Identity Domains service.
//
// # Get a User's DbCredentials
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Identity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Identity.GetDomainsMyUserDbCredential(ctx, &identity.GetDomainsMyUserDbCredentialArgs{
//				IdcsEndpoint:              data.Oci_identity_domain.Test_domain.Url,
//				MyUserDbCredentialId:      oci_identity_db_credential.Test_db_credential.Id,
//				Authorization:             pulumi.StringRef(_var.My_user_db_credential_authorization),
//				ResourceTypeSchemaVersion: pulumi.StringRef(_var.My_user_db_credential_resource_type_schema_version),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDomainsMyUserDbCredential(ctx *pulumi.Context, args *LookupDomainsMyUserDbCredentialArgs, opts ...pulumi.InvokeOption) (*LookupDomainsMyUserDbCredentialResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDomainsMyUserDbCredentialResult
	err := ctx.Invoke("oci:Identity/getDomainsMyUserDbCredential:getDomainsMyUserDbCredential", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDomainsMyUserDbCredential.
type LookupDomainsMyUserDbCredentialArgs struct {
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// The basic endpoint for the identity domain
	IdcsEndpoint string `pulumi:"idcsEndpoint"`
	// ID of the resource
	MyUserDbCredentialId string `pulumi:"myUserDbCredentialId"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
}

// A collection of values returned by getDomainsMyUserDbCredential.
type LookupDomainsMyUserDbCredentialResult struct {
	Authorization *string `pulumi:"authorization"`
	// Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	CompartmentOcid string `pulumi:"compartmentOcid"`
	// The db password of the user
	DbPassword string `pulumi:"dbPassword"`
	// A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	DeleteInProgress bool `pulumi:"deleteInProgress"`
	// Description
	Description string `pulumi:"description"`
	// Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	DomainOcid string `pulumi:"domainOcid"`
	// Indicates that the db password has expired
	Expired bool `pulumi:"expired"`
	// User credential expires on
	ExpiresOn string `pulumi:"expiresOn"`
	// Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
	Id string `pulumi:"id"`
	// The User or App who created the Resource
	IdcsCreatedBies []GetDomainsMyUserDbCredentialIdcsCreatedBy `pulumi:"idcsCreatedBies"`
	IdcsEndpoint    string                                      `pulumi:"idcsEndpoint"`
	// The User or App who modified the Resource
	IdcsLastModifiedBies []GetDomainsMyUserDbCredentialIdcsLastModifiedBy `pulumi:"idcsLastModifiedBies"`
	// The release number when the resource was upgraded.
	IdcsLastUpgradedInRelease string `pulumi:"idcsLastUpgradedInRelease"`
	// Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	IdcsPreventedOperations []string `pulumi:"idcsPreventedOperations"`
	// A DateTime that specifies the date and time when the current db password was set
	LastSetDate string `pulumi:"lastSetDate"`
	// A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	Metas []GetDomainsMyUserDbCredentialMeta `pulumi:"metas"`
	// The db password of the user with mixed salt
	MixedDbPassword string `pulumi:"mixedDbPassword"`
	// The mixed salt of the password
	MixedSalt            string `pulumi:"mixedSalt"`
	MyUserDbCredentialId string `pulumi:"myUserDbCredentialId"`
	// User name
	Name string `pulumi:"name"`
	// User's ocid
	Ocid                      string  `pulumi:"ocid"`
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// The salt of the password
	Salt string `pulumi:"salt"`
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	Schemas []string `pulumi:"schemas"`
	// User credential status
	Status string `pulumi:"status"`
	// A list of tags on this resource.
	Tags []GetDomainsMyUserDbCredentialTag `pulumi:"tags"`
	// Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	TenancyOcid string `pulumi:"tenancyOcid"`
	// User linked to db credential
	Users []GetDomainsMyUserDbCredentialUser `pulumi:"users"`
}

func LookupDomainsMyUserDbCredentialOutput(ctx *pulumi.Context, args LookupDomainsMyUserDbCredentialOutputArgs, opts ...pulumi.InvokeOption) LookupDomainsMyUserDbCredentialResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDomainsMyUserDbCredentialResult, error) {
			args := v.(LookupDomainsMyUserDbCredentialArgs)
			r, err := LookupDomainsMyUserDbCredential(ctx, &args, opts...)
			var s LookupDomainsMyUserDbCredentialResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDomainsMyUserDbCredentialResultOutput)
}

// A collection of arguments for invoking getDomainsMyUserDbCredential.
type LookupDomainsMyUserDbCredentialOutputArgs struct {
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput `pulumi:"authorization"`
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringInput `pulumi:"idcsEndpoint"`
	// ID of the resource
	MyUserDbCredentialId pulumi.StringInput `pulumi:"myUserDbCredentialId"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput `pulumi:"resourceTypeSchemaVersion"`
}

func (LookupDomainsMyUserDbCredentialOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainsMyUserDbCredentialArgs)(nil)).Elem()
}

// A collection of values returned by getDomainsMyUserDbCredential.
type LookupDomainsMyUserDbCredentialResultOutput struct{ *pulumi.OutputState }

func (LookupDomainsMyUserDbCredentialResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainsMyUserDbCredentialResult)(nil)).Elem()
}

func (o LookupDomainsMyUserDbCredentialResultOutput) ToLookupDomainsMyUserDbCredentialResultOutput() LookupDomainsMyUserDbCredentialResultOutput {
	return o
}

func (o LookupDomainsMyUserDbCredentialResultOutput) ToLookupDomainsMyUserDbCredentialResultOutputWithContext(ctx context.Context) LookupDomainsMyUserDbCredentialResultOutput {
	return o
}

func (o LookupDomainsMyUserDbCredentialResultOutput) Authorization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainsMyUserDbCredentialResult) *string { return v.Authorization }).(pulumi.StringPtrOutput)
}

// Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
func (o LookupDomainsMyUserDbCredentialResultOutput) CompartmentOcid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsMyUserDbCredentialResult) string { return v.CompartmentOcid }).(pulumi.StringOutput)
}

// The db password of the user
func (o LookupDomainsMyUserDbCredentialResultOutput) DbPassword() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsMyUserDbCredentialResult) string { return v.DbPassword }).(pulumi.StringOutput)
}

// A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
func (o LookupDomainsMyUserDbCredentialResultOutput) DeleteInProgress() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDomainsMyUserDbCredentialResult) bool { return v.DeleteInProgress }).(pulumi.BoolOutput)
}

// Description
func (o LookupDomainsMyUserDbCredentialResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsMyUserDbCredentialResult) string { return v.Description }).(pulumi.StringOutput)
}

// Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
func (o LookupDomainsMyUserDbCredentialResultOutput) DomainOcid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsMyUserDbCredentialResult) string { return v.DomainOcid }).(pulumi.StringOutput)
}

// Indicates that the db password has expired
func (o LookupDomainsMyUserDbCredentialResultOutput) Expired() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDomainsMyUserDbCredentialResult) bool { return v.Expired }).(pulumi.BoolOutput)
}

// User credential expires on
func (o LookupDomainsMyUserDbCredentialResultOutput) ExpiresOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsMyUserDbCredentialResult) string { return v.ExpiresOn }).(pulumi.StringOutput)
}

// Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
func (o LookupDomainsMyUserDbCredentialResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsMyUserDbCredentialResult) string { return v.Id }).(pulumi.StringOutput)
}

// The User or App who created the Resource
func (o LookupDomainsMyUserDbCredentialResultOutput) IdcsCreatedBies() GetDomainsMyUserDbCredentialIdcsCreatedByArrayOutput {
	return o.ApplyT(func(v LookupDomainsMyUserDbCredentialResult) []GetDomainsMyUserDbCredentialIdcsCreatedBy {
		return v.IdcsCreatedBies
	}).(GetDomainsMyUserDbCredentialIdcsCreatedByArrayOutput)
}

func (o LookupDomainsMyUserDbCredentialResultOutput) IdcsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsMyUserDbCredentialResult) string { return v.IdcsEndpoint }).(pulumi.StringOutput)
}

// The User or App who modified the Resource
func (o LookupDomainsMyUserDbCredentialResultOutput) IdcsLastModifiedBies() GetDomainsMyUserDbCredentialIdcsLastModifiedByArrayOutput {
	return o.ApplyT(func(v LookupDomainsMyUserDbCredentialResult) []GetDomainsMyUserDbCredentialIdcsLastModifiedBy {
		return v.IdcsLastModifiedBies
	}).(GetDomainsMyUserDbCredentialIdcsLastModifiedByArrayOutput)
}

// The release number when the resource was upgraded.
func (o LookupDomainsMyUserDbCredentialResultOutput) IdcsLastUpgradedInRelease() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsMyUserDbCredentialResult) string { return v.IdcsLastUpgradedInRelease }).(pulumi.StringOutput)
}

// Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
func (o LookupDomainsMyUserDbCredentialResultOutput) IdcsPreventedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDomainsMyUserDbCredentialResult) []string { return v.IdcsPreventedOperations }).(pulumi.StringArrayOutput)
}

// A DateTime that specifies the date and time when the current db password was set
func (o LookupDomainsMyUserDbCredentialResultOutput) LastSetDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsMyUserDbCredentialResult) string { return v.LastSetDate }).(pulumi.StringOutput)
}

// A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
func (o LookupDomainsMyUserDbCredentialResultOutput) Metas() GetDomainsMyUserDbCredentialMetaArrayOutput {
	return o.ApplyT(func(v LookupDomainsMyUserDbCredentialResult) []GetDomainsMyUserDbCredentialMeta { return v.Metas }).(GetDomainsMyUserDbCredentialMetaArrayOutput)
}

// The db password of the user with mixed salt
func (o LookupDomainsMyUserDbCredentialResultOutput) MixedDbPassword() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsMyUserDbCredentialResult) string { return v.MixedDbPassword }).(pulumi.StringOutput)
}

// The mixed salt of the password
func (o LookupDomainsMyUserDbCredentialResultOutput) MixedSalt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsMyUserDbCredentialResult) string { return v.MixedSalt }).(pulumi.StringOutput)
}

func (o LookupDomainsMyUserDbCredentialResultOutput) MyUserDbCredentialId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsMyUserDbCredentialResult) string { return v.MyUserDbCredentialId }).(pulumi.StringOutput)
}

// User name
func (o LookupDomainsMyUserDbCredentialResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsMyUserDbCredentialResult) string { return v.Name }).(pulumi.StringOutput)
}

// User's ocid
func (o LookupDomainsMyUserDbCredentialResultOutput) Ocid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsMyUserDbCredentialResult) string { return v.Ocid }).(pulumi.StringOutput)
}

func (o LookupDomainsMyUserDbCredentialResultOutput) ResourceTypeSchemaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainsMyUserDbCredentialResult) *string { return v.ResourceTypeSchemaVersion }).(pulumi.StringPtrOutput)
}

// The salt of the password
func (o LookupDomainsMyUserDbCredentialResultOutput) Salt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsMyUserDbCredentialResult) string { return v.Salt }).(pulumi.StringOutput)
}

// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
func (o LookupDomainsMyUserDbCredentialResultOutput) Schemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDomainsMyUserDbCredentialResult) []string { return v.Schemas }).(pulumi.StringArrayOutput)
}

// User credential status
func (o LookupDomainsMyUserDbCredentialResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsMyUserDbCredentialResult) string { return v.Status }).(pulumi.StringOutput)
}

// A list of tags on this resource.
func (o LookupDomainsMyUserDbCredentialResultOutput) Tags() GetDomainsMyUserDbCredentialTagArrayOutput {
	return o.ApplyT(func(v LookupDomainsMyUserDbCredentialResult) []GetDomainsMyUserDbCredentialTag { return v.Tags }).(GetDomainsMyUserDbCredentialTagArrayOutput)
}

// Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
func (o LookupDomainsMyUserDbCredentialResultOutput) TenancyOcid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsMyUserDbCredentialResult) string { return v.TenancyOcid }).(pulumi.StringOutput)
}

// User linked to db credential
func (o LookupDomainsMyUserDbCredentialResultOutput) Users() GetDomainsMyUserDbCredentialUserArrayOutput {
	return o.ApplyT(func(v LookupDomainsMyUserDbCredentialResult) []GetDomainsMyUserDbCredentialUser { return v.Users }).(GetDomainsMyUserDbCredentialUserArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDomainsMyUserDbCredentialResultOutput{})
}
