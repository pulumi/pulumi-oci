// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific O Auth Partner Certificate resource in Oracle Cloud Infrastructure Identity Domains service.
//
// # Get an OAuth Partner Certificate
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Identity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Identity.GetDomainsOauthPartnerCertificate(ctx, &identity.GetDomainsOauthPartnerCertificateArgs{
//				IdcsEndpoint:              testDomain.Url,
//				OAuthPartnerCertificateId: testOauthPartnerCertificateOciIdentityDomainsOauthPartnerCertificate.Id,
//				Authorization:             pulumi.StringRef(oauthPartnerCertificateAuthorization),
//				ResourceTypeSchemaVersion: pulumi.StringRef(oauthPartnerCertificateResourceTypeSchemaVersion),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDomainsOauthPartnerCertificate(ctx *pulumi.Context, args *LookupDomainsOauthPartnerCertificateArgs, opts ...pulumi.InvokeOption) (*LookupDomainsOauthPartnerCertificateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDomainsOauthPartnerCertificateResult
	err := ctx.Invoke("oci:Identity/getDomainsOauthPartnerCertificate:getDomainsOauthPartnerCertificate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDomainsOauthPartnerCertificate.
type LookupDomainsOauthPartnerCertificateArgs struct {
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// The basic endpoint for the identity domain
	IdcsEndpoint string `pulumi:"idcsEndpoint"`
	// ID of the resource
	OAuthPartnerCertificateId string `pulumi:"oAuthPartnerCertificateId"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
}

// A collection of values returned by getDomainsOauthPartnerCertificate.
type LookupDomainsOauthPartnerCertificateResult struct {
	Authorization *string `pulumi:"authorization"`
	// Certificate end date
	CertEndDate string `pulumi:"certEndDate"`
	// Certificate start date
	CertStartDate string `pulumi:"certStartDate"`
	// Certificate alias
	CertificateAlias string `pulumi:"certificateAlias"`
	// Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	CompartmentOcid string `pulumi:"compartmentOcid"`
	// A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	DeleteInProgress bool `pulumi:"deleteInProgress"`
	// Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	DomainOcid string `pulumi:"domainOcid"`
	// An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
	ExternalId string `pulumi:"externalId"`
	// Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
	Id string `pulumi:"id"`
	// The User or App who created the Resource
	IdcsCreatedBies []GetDomainsOauthPartnerCertificateIdcsCreatedBy `pulumi:"idcsCreatedBies"`
	IdcsEndpoint    string                                           `pulumi:"idcsEndpoint"`
	// The User or App who modified the Resource
	IdcsLastModifiedBies []GetDomainsOauthPartnerCertificateIdcsLastModifiedBy `pulumi:"idcsLastModifiedBies"`
	// The release number when the resource was upgraded.
	IdcsLastUpgradedInRelease string `pulumi:"idcsLastUpgradedInRelease"`
	// Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	IdcsPreventedOperations []string `pulumi:"idcsPreventedOperations"`
	// Key store ID
	KeyStoreId string `pulumi:"keyStoreId"`
	// Key store name
	KeyStoreName string `pulumi:"keyStoreName"`
	// Key store password
	KeyStorePassword string `pulumi:"keyStorePassword"`
	// Map
	Map string `pulumi:"map"`
	// A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	Metas                     []GetDomainsOauthPartnerCertificateMeta `pulumi:"metas"`
	OAuthPartnerCertificateId string                                  `pulumi:"oAuthPartnerCertificateId"`
	// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
	Ocid                      string  `pulumi:"ocid"`
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	Schemas []string `pulumi:"schemas"`
	// SHA-1 Thumbprint
	Sha1thumbprint string `pulumi:"sha1thumbprint"`
	// SHA-256 Thumbprint
	Sha256thumbprint string `pulumi:"sha256thumbprint"`
	// A list of tags on this resource.
	Tags []GetDomainsOauthPartnerCertificateTag `pulumi:"tags"`
	// Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	TenancyOcid string `pulumi:"tenancyOcid"`
	// Base 64Key data attribute
	X509base64certificate string `pulumi:"x509base64certificate"`
}

func LookupDomainsOauthPartnerCertificateOutput(ctx *pulumi.Context, args LookupDomainsOauthPartnerCertificateOutputArgs, opts ...pulumi.InvokeOption) LookupDomainsOauthPartnerCertificateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDomainsOauthPartnerCertificateResultOutput, error) {
			args := v.(LookupDomainsOauthPartnerCertificateArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupDomainsOauthPartnerCertificateResult
			secret, err := ctx.InvokePackageRaw("oci:Identity/getDomainsOauthPartnerCertificate:getDomainsOauthPartnerCertificate", args, &rv, "", opts...)
			if err != nil {
				return LookupDomainsOauthPartnerCertificateResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupDomainsOauthPartnerCertificateResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupDomainsOauthPartnerCertificateResultOutput), nil
			}
			return output, nil
		}).(LookupDomainsOauthPartnerCertificateResultOutput)
}

// A collection of arguments for invoking getDomainsOauthPartnerCertificate.
type LookupDomainsOauthPartnerCertificateOutputArgs struct {
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput `pulumi:"authorization"`
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringInput `pulumi:"idcsEndpoint"`
	// ID of the resource
	OAuthPartnerCertificateId pulumi.StringInput `pulumi:"oAuthPartnerCertificateId"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput `pulumi:"resourceTypeSchemaVersion"`
}

func (LookupDomainsOauthPartnerCertificateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainsOauthPartnerCertificateArgs)(nil)).Elem()
}

// A collection of values returned by getDomainsOauthPartnerCertificate.
type LookupDomainsOauthPartnerCertificateResultOutput struct{ *pulumi.OutputState }

func (LookupDomainsOauthPartnerCertificateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainsOauthPartnerCertificateResult)(nil)).Elem()
}

func (o LookupDomainsOauthPartnerCertificateResultOutput) ToLookupDomainsOauthPartnerCertificateResultOutput() LookupDomainsOauthPartnerCertificateResultOutput {
	return o
}

func (o LookupDomainsOauthPartnerCertificateResultOutput) ToLookupDomainsOauthPartnerCertificateResultOutputWithContext(ctx context.Context) LookupDomainsOauthPartnerCertificateResultOutput {
	return o
}

func (o LookupDomainsOauthPartnerCertificateResultOutput) Authorization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainsOauthPartnerCertificateResult) *string { return v.Authorization }).(pulumi.StringPtrOutput)
}

// Certificate end date
func (o LookupDomainsOauthPartnerCertificateResultOutput) CertEndDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsOauthPartnerCertificateResult) string { return v.CertEndDate }).(pulumi.StringOutput)
}

// Certificate start date
func (o LookupDomainsOauthPartnerCertificateResultOutput) CertStartDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsOauthPartnerCertificateResult) string { return v.CertStartDate }).(pulumi.StringOutput)
}

// Certificate alias
func (o LookupDomainsOauthPartnerCertificateResultOutput) CertificateAlias() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsOauthPartnerCertificateResult) string { return v.CertificateAlias }).(pulumi.StringOutput)
}

// Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
func (o LookupDomainsOauthPartnerCertificateResultOutput) CompartmentOcid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsOauthPartnerCertificateResult) string { return v.CompartmentOcid }).(pulumi.StringOutput)
}

// A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
func (o LookupDomainsOauthPartnerCertificateResultOutput) DeleteInProgress() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDomainsOauthPartnerCertificateResult) bool { return v.DeleteInProgress }).(pulumi.BoolOutput)
}

// Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
func (o LookupDomainsOauthPartnerCertificateResultOutput) DomainOcid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsOauthPartnerCertificateResult) string { return v.DomainOcid }).(pulumi.StringOutput)
}

// An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
func (o LookupDomainsOauthPartnerCertificateResultOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsOauthPartnerCertificateResult) string { return v.ExternalId }).(pulumi.StringOutput)
}

// Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
func (o LookupDomainsOauthPartnerCertificateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsOauthPartnerCertificateResult) string { return v.Id }).(pulumi.StringOutput)
}

// The User or App who created the Resource
func (o LookupDomainsOauthPartnerCertificateResultOutput) IdcsCreatedBies() GetDomainsOauthPartnerCertificateIdcsCreatedByArrayOutput {
	return o.ApplyT(func(v LookupDomainsOauthPartnerCertificateResult) []GetDomainsOauthPartnerCertificateIdcsCreatedBy {
		return v.IdcsCreatedBies
	}).(GetDomainsOauthPartnerCertificateIdcsCreatedByArrayOutput)
}

func (o LookupDomainsOauthPartnerCertificateResultOutput) IdcsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsOauthPartnerCertificateResult) string { return v.IdcsEndpoint }).(pulumi.StringOutput)
}

// The User or App who modified the Resource
func (o LookupDomainsOauthPartnerCertificateResultOutput) IdcsLastModifiedBies() GetDomainsOauthPartnerCertificateIdcsLastModifiedByArrayOutput {
	return o.ApplyT(func(v LookupDomainsOauthPartnerCertificateResult) []GetDomainsOauthPartnerCertificateIdcsLastModifiedBy {
		return v.IdcsLastModifiedBies
	}).(GetDomainsOauthPartnerCertificateIdcsLastModifiedByArrayOutput)
}

// The release number when the resource was upgraded.
func (o LookupDomainsOauthPartnerCertificateResultOutput) IdcsLastUpgradedInRelease() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsOauthPartnerCertificateResult) string { return v.IdcsLastUpgradedInRelease }).(pulumi.StringOutput)
}

// Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
func (o LookupDomainsOauthPartnerCertificateResultOutput) IdcsPreventedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDomainsOauthPartnerCertificateResult) []string { return v.IdcsPreventedOperations }).(pulumi.StringArrayOutput)
}

// Key store ID
func (o LookupDomainsOauthPartnerCertificateResultOutput) KeyStoreId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsOauthPartnerCertificateResult) string { return v.KeyStoreId }).(pulumi.StringOutput)
}

// Key store name
func (o LookupDomainsOauthPartnerCertificateResultOutput) KeyStoreName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsOauthPartnerCertificateResult) string { return v.KeyStoreName }).(pulumi.StringOutput)
}

// Key store password
func (o LookupDomainsOauthPartnerCertificateResultOutput) KeyStorePassword() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsOauthPartnerCertificateResult) string { return v.KeyStorePassword }).(pulumi.StringOutput)
}

// Map
func (o LookupDomainsOauthPartnerCertificateResultOutput) Map() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsOauthPartnerCertificateResult) string { return v.Map }).(pulumi.StringOutput)
}

// A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
func (o LookupDomainsOauthPartnerCertificateResultOutput) Metas() GetDomainsOauthPartnerCertificateMetaArrayOutput {
	return o.ApplyT(func(v LookupDomainsOauthPartnerCertificateResult) []GetDomainsOauthPartnerCertificateMeta {
		return v.Metas
	}).(GetDomainsOauthPartnerCertificateMetaArrayOutput)
}

func (o LookupDomainsOauthPartnerCertificateResultOutput) OAuthPartnerCertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsOauthPartnerCertificateResult) string { return v.OAuthPartnerCertificateId }).(pulumi.StringOutput)
}

// Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
func (o LookupDomainsOauthPartnerCertificateResultOutput) Ocid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsOauthPartnerCertificateResult) string { return v.Ocid }).(pulumi.StringOutput)
}

func (o LookupDomainsOauthPartnerCertificateResultOutput) ResourceTypeSchemaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainsOauthPartnerCertificateResult) *string { return v.ResourceTypeSchemaVersion }).(pulumi.StringPtrOutput)
}

// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
func (o LookupDomainsOauthPartnerCertificateResultOutput) Schemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDomainsOauthPartnerCertificateResult) []string { return v.Schemas }).(pulumi.StringArrayOutput)
}

// SHA-1 Thumbprint
func (o LookupDomainsOauthPartnerCertificateResultOutput) Sha1thumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsOauthPartnerCertificateResult) string { return v.Sha1thumbprint }).(pulumi.StringOutput)
}

// SHA-256 Thumbprint
func (o LookupDomainsOauthPartnerCertificateResultOutput) Sha256thumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsOauthPartnerCertificateResult) string { return v.Sha256thumbprint }).(pulumi.StringOutput)
}

// A list of tags on this resource.
func (o LookupDomainsOauthPartnerCertificateResultOutput) Tags() GetDomainsOauthPartnerCertificateTagArrayOutput {
	return o.ApplyT(func(v LookupDomainsOauthPartnerCertificateResult) []GetDomainsOauthPartnerCertificateTag {
		return v.Tags
	}).(GetDomainsOauthPartnerCertificateTagArrayOutput)
}

// Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
func (o LookupDomainsOauthPartnerCertificateResultOutput) TenancyOcid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsOauthPartnerCertificateResult) string { return v.TenancyOcid }).(pulumi.StringOutput)
}

// Base 64Key data attribute
func (o LookupDomainsOauthPartnerCertificateResultOutput) X509base64certificate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsOauthPartnerCertificateResult) string { return v.X509base64certificate }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDomainsOauthPartnerCertificateResultOutput{})
}
