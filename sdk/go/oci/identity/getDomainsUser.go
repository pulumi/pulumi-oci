// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific User resource in Oracle Cloud Infrastructure Identity Domains service.
//
// Get a user.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Identity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Identity.GetDomainsUser(ctx, &identity.GetDomainsUserArgs{
//				IdcsEndpoint:              data.Oci_identity_domain.Test_domain.Url,
//				UserId:                    oci_identity_user.Test_user.Id,
//				AttributeSets:             []interface{}{},
//				Attributes:                pulumi.StringRef(""),
//				Authorization:             pulumi.StringRef(_var.User_authorization),
//				ResourceTypeSchemaVersion: pulumi.StringRef(_var.User_resource_type_schema_version),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDomainsUser(ctx *pulumi.Context, args *LookupDomainsUserArgs, opts ...pulumi.InvokeOption) (*LookupDomainsUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDomainsUserResult
	err := ctx.Invoke("oci:Identity/getDomainsUser:getDomainsUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDomainsUser.
type LookupDomainsUserArgs struct {
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets []string `pulumi:"attributeSets"`
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes *string `pulumi:"attributes"`
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization *string `pulumi:"authorization"`
	// The basic endpoint for the identity domain
	IdcsEndpoint string `pulumi:"idcsEndpoint"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// ID of the resource
	UserId string `pulumi:"userId"`
}

// A collection of values returned by getDomainsUser.
type LookupDomainsUserResult struct {
	// Status of the account
	Active bool `pulumi:"active"`
	// A physical mailing address for this User, as described in (address Element). Canonical Type Values of work, home, and other. The value attribute is a complex type with the following sub-attributes.
	Addresses     []GetDomainsUserAddress `pulumi:"addresses"`
	AttributeSets []string                `pulumi:"attributeSets"`
	Attributes    *string                 `pulumi:"attributes"`
	Authorization *string                 `pulumi:"authorization"`
	// Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
	CompartmentOcid string `pulumi:"compartmentOcid"`
	// A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
	DeleteInProgress bool `pulumi:"deleteInProgress"`
	// Description of the user
	Description string `pulumi:"description"`
	// The displayName of the User's manager. OPTIONAL and READ-ONLY.
	DisplayName string `pulumi:"displayName"`
	// Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
	DomainOcid string `pulumi:"domainOcid"`
	// A complex attribute representing emails
	Emails []GetDomainsUserEmail `pulumi:"emails"`
	// A list of entitlements for the User that represent a thing the User has.
	Entitlements []GetDomainsUserEntitlement `pulumi:"entitlements"`
	// An identifier for the Resource as defined by the Service Consumer. READ-ONLY.
	ExternalId string `pulumi:"externalId"`
	// A list of groups that the user belongs to, either thorough direct membership, nested groups, or dynamically calculated
	Groups []GetDomainsUserGroup `pulumi:"groups"`
	// Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
	Id string `pulumi:"id"`
	// The User or App who created the Resource
	IdcsCreatedBies []GetDomainsUserIdcsCreatedBy `pulumi:"idcsCreatedBies"`
	IdcsEndpoint    string                        `pulumi:"idcsEndpoint"`
	// The User or App who modified the Resource
	IdcsLastModifiedBies []GetDomainsUserIdcsLastModifiedBy `pulumi:"idcsLastModifiedBies"`
	// The release number when the resource was upgraded.
	IdcsLastUpgradedInRelease string `pulumi:"idcsLastUpgradedInRelease"`
	// Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
	IdcsPreventedOperations []string `pulumi:"idcsPreventedOperations"`
	// User's instant messaging addresses
	Ims []GetDomainsUserIm `pulumi:"ims"`
	// Used to indicate the User's default location for purposes of localizing items such as currency, date and time format, numerical representations, and so on.
	Locale string `pulumi:"locale"`
	// A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
	Metas []GetDomainsUserMeta `pulumi:"metas"`
	// Name of the account assigned to the User.
	Names []GetDomainsUserName `pulumi:"names"`
	// Nick name
	NickName string `pulumi:"nickName"`
	// The OCID of the user's support account.
	Ocid string `pulumi:"ocid"`
	// Password attribute. Max length for password is controlled via Password Policy.
	Password string `pulumi:"password"`
	// Phone numbers
	PhoneNumbers []GetDomainsUserPhoneNumber `pulumi:"phoneNumbers"`
	// URLs of photos for the User
	Photos []GetDomainsUserPhoto `pulumi:"photos"`
	// User's preferred written or spoken language used for localized user interfaces
	PreferredLanguage string `pulumi:"preferredLanguage"`
	// A fully-qualified URL to a page representing the User's online profile
	ProfileUrl                string  `pulumi:"profileUrl"`
	ResourceTypeSchemaVersion *string `pulumi:"resourceTypeSchemaVersion"`
	// A list of roles for the User that collectively represent who the User is; e.g., 'Student', 'Faculty'.
	Roles []GetDomainsUserRole `pulumi:"roles"`
	// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
	Schemas []string `pulumi:"schemas"`
	// A list of tags on this resource.
	Tags []GetDomainsUserTag `pulumi:"tags"`
	// Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
	TenancyOcid string `pulumi:"tenancyOcid"`
	// User's timezone
	Timezone string `pulumi:"timezone"`
	// Title
	Title string `pulumi:"title"`
	// Enterprise User
	Urnietfparamsscimschemasextensionenterprise20users []GetDomainsUserUrnietfparamsscimschemasextensionenterprise20user `pulumi:"urnietfparamsscimschemasextensionenterprise20users"`
	// Oracle Cloud Infrastructure Tags.
	UrnietfparamsscimschemasoracleidcsextensionOciTags []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTag `pulumi:"urnietfparamsscimschemasoracleidcsextensionOciTags"`
	// This extension defines attributes to manage user's risk score.
	UrnietfparamsscimschemasoracleidcsextensionadaptiveUsers []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionadaptiveUsers"`
	// User's Capabilities
	UrnietfparamsscimschemasoracleidcsextensioncapabilitiesUsers []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensioncapabilitiesUser `pulumi:"urnietfparamsscimschemasoracleidcsextensioncapabilitiesUsers"`
	// The database credentials user extension.
	UrnietfparamsscimschemasoracleidcsextensiondbCredentialsUsers []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUser `pulumi:"urnietfparamsscimschemasoracleidcsextensiondbCredentialsUsers"`
	// DB User extension
	UrnietfparamsscimschemasoracleidcsextensiondbUserUsers []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUser `pulumi:"urnietfparamsscimschemasoracleidcsextensiondbUserUsers"`
	// Kerberos User extension
	UrnietfparamsscimschemasoracleidcsextensionkerberosUserUsers []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionkerberosUserUsers"`
	// This extension defines attributes used to manage Multi-Factor Authentication within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use MFA.
	UrnietfparamsscimschemasoracleidcsextensionmfaUsers []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionmfaUsers"`
	// This extension defines attributes used to manage account passwords within a Service Provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use passwords.
	UrnietfparamsscimschemasoracleidcsextensionpasswordStateUsers []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordStateUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionpasswordStateUsers"`
	// This extension defines attributes used to manage Passwordless-Factor Authentication within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use MFA.
	UrnietfparamsscimschemasoracleidcsextensionpasswordlessUsers []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionpasswordlessUsers"`
	// POSIX User extension
	UrnietfparamsscimschemasoracleidcsextensionposixUsers []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionposixUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionposixUsers"`
	// This extension defines the attributes used to store the security questions of a user.
	UrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUsers []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUsers"`
	// Controls whether a user can update themselves or not via User related APIs
	UrnietfparamsscimschemasoracleidcsextensionselfChangeUsers []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionselfChangeUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionselfChangeUsers"`
	// This extension defines attributes used to manage self registration profile linked to the user.
	UrnietfparamsscimschemasoracleidcsextensionselfRegistrationUsers []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionselfRegistrationUsers"`
	// SFF Auth Keys User extension
	UrnietfparamsscimschemasoracleidcsextensionsffUsers []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionsffUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionsffUsers"`
	// Social User extension
	UrnietfparamsscimschemasoracleidcsextensionsocialAccountUsers []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionsocialAccountUsers"`
	// Terms Of Use extension
	UrnietfparamsscimschemasoracleidcsextensiontermsOfUseUsers []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUser `pulumi:"urnietfparamsscimschemasoracleidcsextensiontermsOfUseUsers"`
	// User's credentials
	UrnietfparamsscimschemasoracleidcsextensionuserCredentialsUsers []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionuserCredentialsUsers"`
	// This extension defines the attributes used to manage account passwords within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use passwords.
	UrnietfparamsscimschemasoracleidcsextensionuserStateUsers []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionuserStateUsers"`
	// Oracle Identity Cloud Service User
	UrnietfparamsscimschemasoracleidcsextensionuserUsers []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUser `pulumi:"urnietfparamsscimschemasoracleidcsextensionuserUsers"`
	// User Support User Id
	UserId string `pulumi:"userId"`
	// User name
	UserName string `pulumi:"userName"`
	// Used to identify the organization-to-user relationship
	UserType string `pulumi:"userType"`
	// A list of certificates issued to the User.
	X509certificates []GetDomainsUserX509certificate `pulumi:"x509certificates"`
}

func LookupDomainsUserOutput(ctx *pulumi.Context, args LookupDomainsUserOutputArgs, opts ...pulumi.InvokeOption) LookupDomainsUserResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDomainsUserResult, error) {
			args := v.(LookupDomainsUserArgs)
			r, err := LookupDomainsUser(ctx, &args, opts...)
			var s LookupDomainsUserResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDomainsUserResultOutput)
}

// A collection of arguments for invoking getDomainsUser.
type LookupDomainsUserOutputArgs struct {
	// A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
	AttributeSets pulumi.StringArrayInput `pulumi:"attributeSets"`
	// A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
	Attributes pulumi.StringPtrInput `pulumi:"attributes"`
	// The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
	Authorization pulumi.StringPtrInput `pulumi:"authorization"`
	// The basic endpoint for the identity domain
	IdcsEndpoint pulumi.StringInput `pulumi:"idcsEndpoint"`
	// An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
	ResourceTypeSchemaVersion pulumi.StringPtrInput `pulumi:"resourceTypeSchemaVersion"`
	// ID of the resource
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (LookupDomainsUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainsUserArgs)(nil)).Elem()
}

// A collection of values returned by getDomainsUser.
type LookupDomainsUserResultOutput struct{ *pulumi.OutputState }

func (LookupDomainsUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainsUserResult)(nil)).Elem()
}

func (o LookupDomainsUserResultOutput) ToLookupDomainsUserResultOutput() LookupDomainsUserResultOutput {
	return o
}

func (o LookupDomainsUserResultOutput) ToLookupDomainsUserResultOutputWithContext(ctx context.Context) LookupDomainsUserResultOutput {
	return o
}

// Status of the account
func (o LookupDomainsUserResultOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) bool { return v.Active }).(pulumi.BoolOutput)
}

// A physical mailing address for this User, as described in (address Element). Canonical Type Values of work, home, and other. The value attribute is a complex type with the following sub-attributes.
func (o LookupDomainsUserResultOutput) Addresses() GetDomainsUserAddressArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []GetDomainsUserAddress { return v.Addresses }).(GetDomainsUserAddressArrayOutput)
}

func (o LookupDomainsUserResultOutput) AttributeSets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []string { return v.AttributeSets }).(pulumi.StringArrayOutput)
}

func (o LookupDomainsUserResultOutput) Attributes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) *string { return v.Attributes }).(pulumi.StringPtrOutput)
}

func (o LookupDomainsUserResultOutput) Authorization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) *string { return v.Authorization }).(pulumi.StringPtrOutput)
}

// Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
func (o LookupDomainsUserResultOutput) CompartmentOcid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) string { return v.CompartmentOcid }).(pulumi.StringOutput)
}

// A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
func (o LookupDomainsUserResultOutput) DeleteInProgress() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) bool { return v.DeleteInProgress }).(pulumi.BoolOutput)
}

// Description of the user
func (o LookupDomainsUserResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) string { return v.Description }).(pulumi.StringOutput)
}

// The displayName of the User's manager. OPTIONAL and READ-ONLY.
func (o LookupDomainsUserResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
func (o LookupDomainsUserResultOutput) DomainOcid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) string { return v.DomainOcid }).(pulumi.StringOutput)
}

// A complex attribute representing emails
func (o LookupDomainsUserResultOutput) Emails() GetDomainsUserEmailArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []GetDomainsUserEmail { return v.Emails }).(GetDomainsUserEmailArrayOutput)
}

// A list of entitlements for the User that represent a thing the User has.
func (o LookupDomainsUserResultOutput) Entitlements() GetDomainsUserEntitlementArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []GetDomainsUserEntitlement { return v.Entitlements }).(GetDomainsUserEntitlementArrayOutput)
}

// An identifier for the Resource as defined by the Service Consumer. READ-ONLY.
func (o LookupDomainsUserResultOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) string { return v.ExternalId }).(pulumi.StringOutput)
}

// A list of groups that the user belongs to, either thorough direct membership, nested groups, or dynamically calculated
func (o LookupDomainsUserResultOutput) Groups() GetDomainsUserGroupArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []GetDomainsUserGroup { return v.Groups }).(GetDomainsUserGroupArrayOutput)
}

// Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
func (o LookupDomainsUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) string { return v.Id }).(pulumi.StringOutput)
}

// The User or App who created the Resource
func (o LookupDomainsUserResultOutput) IdcsCreatedBies() GetDomainsUserIdcsCreatedByArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []GetDomainsUserIdcsCreatedBy { return v.IdcsCreatedBies }).(GetDomainsUserIdcsCreatedByArrayOutput)
}

func (o LookupDomainsUserResultOutput) IdcsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) string { return v.IdcsEndpoint }).(pulumi.StringOutput)
}

// The User or App who modified the Resource
func (o LookupDomainsUserResultOutput) IdcsLastModifiedBies() GetDomainsUserIdcsLastModifiedByArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []GetDomainsUserIdcsLastModifiedBy { return v.IdcsLastModifiedBies }).(GetDomainsUserIdcsLastModifiedByArrayOutput)
}

// The release number when the resource was upgraded.
func (o LookupDomainsUserResultOutput) IdcsLastUpgradedInRelease() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) string { return v.IdcsLastUpgradedInRelease }).(pulumi.StringOutput)
}

// Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
func (o LookupDomainsUserResultOutput) IdcsPreventedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []string { return v.IdcsPreventedOperations }).(pulumi.StringArrayOutput)
}

// User's instant messaging addresses
func (o LookupDomainsUserResultOutput) Ims() GetDomainsUserImArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []GetDomainsUserIm { return v.Ims }).(GetDomainsUserImArrayOutput)
}

// Used to indicate the User's default location for purposes of localizing items such as currency, date and time format, numerical representations, and so on.
func (o LookupDomainsUserResultOutput) Locale() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) string { return v.Locale }).(pulumi.StringOutput)
}

// A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
func (o LookupDomainsUserResultOutput) Metas() GetDomainsUserMetaArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []GetDomainsUserMeta { return v.Metas }).(GetDomainsUserMetaArrayOutput)
}

// Name of the account assigned to the User.
func (o LookupDomainsUserResultOutput) Names() GetDomainsUserNameArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []GetDomainsUserName { return v.Names }).(GetDomainsUserNameArrayOutput)
}

// Nick name
func (o LookupDomainsUserResultOutput) NickName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) string { return v.NickName }).(pulumi.StringOutput)
}

// The OCID of the user's support account.
func (o LookupDomainsUserResultOutput) Ocid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) string { return v.Ocid }).(pulumi.StringOutput)
}

// Password attribute. Max length for password is controlled via Password Policy.
func (o LookupDomainsUserResultOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) string { return v.Password }).(pulumi.StringOutput)
}

// Phone numbers
func (o LookupDomainsUserResultOutput) PhoneNumbers() GetDomainsUserPhoneNumberArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []GetDomainsUserPhoneNumber { return v.PhoneNumbers }).(GetDomainsUserPhoneNumberArrayOutput)
}

// URLs of photos for the User
func (o LookupDomainsUserResultOutput) Photos() GetDomainsUserPhotoArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []GetDomainsUserPhoto { return v.Photos }).(GetDomainsUserPhotoArrayOutput)
}

// User's preferred written or spoken language used for localized user interfaces
func (o LookupDomainsUserResultOutput) PreferredLanguage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) string { return v.PreferredLanguage }).(pulumi.StringOutput)
}

// A fully-qualified URL to a page representing the User's online profile
func (o LookupDomainsUserResultOutput) ProfileUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) string { return v.ProfileUrl }).(pulumi.StringOutput)
}

func (o LookupDomainsUserResultOutput) ResourceTypeSchemaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) *string { return v.ResourceTypeSchemaVersion }).(pulumi.StringPtrOutput)
}

// A list of roles for the User that collectively represent who the User is; e.g., 'Student', 'Faculty'.
func (o LookupDomainsUserResultOutput) Roles() GetDomainsUserRoleArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []GetDomainsUserRole { return v.Roles }).(GetDomainsUserRoleArrayOutput)
}

// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
func (o LookupDomainsUserResultOutput) Schemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []string { return v.Schemas }).(pulumi.StringArrayOutput)
}

// A list of tags on this resource.
func (o LookupDomainsUserResultOutput) Tags() GetDomainsUserTagArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []GetDomainsUserTag { return v.Tags }).(GetDomainsUserTagArrayOutput)
}

// Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
func (o LookupDomainsUserResultOutput) TenancyOcid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) string { return v.TenancyOcid }).(pulumi.StringOutput)
}

// User's timezone
func (o LookupDomainsUserResultOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) string { return v.Timezone }).(pulumi.StringOutput)
}

// Title
func (o LookupDomainsUserResultOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) string { return v.Title }).(pulumi.StringOutput)
}

// Enterprise User
func (o LookupDomainsUserResultOutput) Urnietfparamsscimschemasextensionenterprise20users() GetDomainsUserUrnietfparamsscimschemasextensionenterprise20userArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []GetDomainsUserUrnietfparamsscimschemasextensionenterprise20user {
		return v.Urnietfparamsscimschemasextensionenterprise20users
	}).(GetDomainsUserUrnietfparamsscimschemasextensionenterprise20userArrayOutput)
}

// Oracle Cloud Infrastructure Tags.
func (o LookupDomainsUserResultOutput) UrnietfparamsscimschemasoracleidcsextensionOciTags() GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTag {
		return v.UrnietfparamsscimschemasoracleidcsextensionOciTags
	}).(GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagArrayOutput)
}

// This extension defines attributes to manage user's risk score.
func (o LookupDomainsUserResultOutput) UrnietfparamsscimschemasoracleidcsextensionadaptiveUsers() GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUser {
		return v.UrnietfparamsscimschemasoracleidcsextensionadaptiveUsers
	}).(GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserArrayOutput)
}

// User's Capabilities
func (o LookupDomainsUserResultOutput) UrnietfparamsscimschemasoracleidcsextensioncapabilitiesUsers() GetDomainsUserUrnietfparamsscimschemasoracleidcsextensioncapabilitiesUserArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensioncapabilitiesUser {
		return v.UrnietfparamsscimschemasoracleidcsextensioncapabilitiesUsers
	}).(GetDomainsUserUrnietfparamsscimschemasoracleidcsextensioncapabilitiesUserArrayOutput)
}

// The database credentials user extension.
func (o LookupDomainsUserResultOutput) UrnietfparamsscimschemasoracleidcsextensiondbCredentialsUsers() GetDomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUserArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUser {
		return v.UrnietfparamsscimschemasoracleidcsextensiondbCredentialsUsers
	}).(GetDomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUserArrayOutput)
}

// DB User extension
func (o LookupDomainsUserResultOutput) UrnietfparamsscimschemasoracleidcsextensiondbUserUsers() GetDomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUser {
		return v.UrnietfparamsscimschemasoracleidcsextensiondbUserUsers
	}).(GetDomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserArrayOutput)
}

// Kerberos User extension
func (o LookupDomainsUserResultOutput) UrnietfparamsscimschemasoracleidcsextensionkerberosUserUsers() GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUserArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUser {
		return v.UrnietfparamsscimschemasoracleidcsextensionkerberosUserUsers
	}).(GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUserArrayOutput)
}

// This extension defines attributes used to manage Multi-Factor Authentication within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use MFA.
func (o LookupDomainsUserResultOutput) UrnietfparamsscimschemasoracleidcsextensionmfaUsers() GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUser {
		return v.UrnietfparamsscimschemasoracleidcsextensionmfaUsers
	}).(GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserArrayOutput)
}

// This extension defines attributes used to manage account passwords within a Service Provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use passwords.
func (o LookupDomainsUserResultOutput) UrnietfparamsscimschemasoracleidcsextensionpasswordStateUsers() GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordStateUserArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordStateUser {
		return v.UrnietfparamsscimschemasoracleidcsextensionpasswordStateUsers
	}).(GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordStateUserArrayOutput)
}

// This extension defines attributes used to manage Passwordless-Factor Authentication within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use MFA.
func (o LookupDomainsUserResultOutput) UrnietfparamsscimschemasoracleidcsextensionpasswordlessUsers() GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUserArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUser {
		return v.UrnietfparamsscimschemasoracleidcsextensionpasswordlessUsers
	}).(GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUserArrayOutput)
}

// POSIX User extension
func (o LookupDomainsUserResultOutput) UrnietfparamsscimschemasoracleidcsextensionposixUsers() GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionposixUserArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionposixUser {
		return v.UrnietfparamsscimschemasoracleidcsextensionposixUsers
	}).(GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionposixUserArrayOutput)
}

// This extension defines the attributes used to store the security questions of a user.
func (o LookupDomainsUserResultOutput) UrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUsers() GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUserArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUser {
		return v.UrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUsers
	}).(GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUserArrayOutput)
}

// Controls whether a user can update themselves or not via User related APIs
func (o LookupDomainsUserResultOutput) UrnietfparamsscimschemasoracleidcsextensionselfChangeUsers() GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionselfChangeUserArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionselfChangeUser {
		return v.UrnietfparamsscimschemasoracleidcsextensionselfChangeUsers
	}).(GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionselfChangeUserArrayOutput)
}

// This extension defines attributes used to manage self registration profile linked to the user.
func (o LookupDomainsUserResultOutput) UrnietfparamsscimschemasoracleidcsextensionselfRegistrationUsers() GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUser {
		return v.UrnietfparamsscimschemasoracleidcsextensionselfRegistrationUsers
	}).(GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserArrayOutput)
}

// SFF Auth Keys User extension
func (o LookupDomainsUserResultOutput) UrnietfparamsscimschemasoracleidcsextensionsffUsers() GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionsffUserArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionsffUser {
		return v.UrnietfparamsscimschemasoracleidcsextensionsffUsers
	}).(GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionsffUserArrayOutput)
}

// Social User extension
func (o LookupDomainsUserResultOutput) UrnietfparamsscimschemasoracleidcsextensionsocialAccountUsers() GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUserArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUser {
		return v.UrnietfparamsscimschemasoracleidcsextensionsocialAccountUsers
	}).(GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUserArrayOutput)
}

// Terms Of Use extension
func (o LookupDomainsUserResultOutput) UrnietfparamsscimschemasoracleidcsextensiontermsOfUseUsers() GetDomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUser {
		return v.UrnietfparamsscimschemasoracleidcsextensiontermsOfUseUsers
	}).(GetDomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserArrayOutput)
}

// User's credentials
func (o LookupDomainsUserResultOutput) UrnietfparamsscimschemasoracleidcsextensionuserCredentialsUsers() GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUser {
		return v.UrnietfparamsscimschemasoracleidcsextensionuserCredentialsUsers
	}).(GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserArrayOutput)
}

// This extension defines the attributes used to manage account passwords within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use passwords.
func (o LookupDomainsUserResultOutput) UrnietfparamsscimschemasoracleidcsextensionuserStateUsers() GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUser {
		return v.UrnietfparamsscimschemasoracleidcsextensionuserStateUsers
	}).(GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserArrayOutput)
}

// Oracle Identity Cloud Service User
func (o LookupDomainsUserResultOutput) UrnietfparamsscimschemasoracleidcsextensionuserUsers() GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUser {
		return v.UrnietfparamsscimschemasoracleidcsextensionuserUsers
	}).(GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserArrayOutput)
}

// User Support User Id
func (o LookupDomainsUserResultOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) string { return v.UserId }).(pulumi.StringOutput)
}

// User name
func (o LookupDomainsUserResultOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) string { return v.UserName }).(pulumi.StringOutput)
}

// Used to identify the organization-to-user relationship
func (o LookupDomainsUserResultOutput) UserType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) string { return v.UserType }).(pulumi.StringOutput)
}

// A list of certificates issued to the User.
func (o LookupDomainsUserResultOutput) X509certificates() GetDomainsUserX509certificateArrayOutput {
	return o.ApplyT(func(v LookupDomainsUserResult) []GetDomainsUserX509certificate { return v.X509certificates }).(GetDomainsUserX509certificateArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDomainsUserResultOutput{})
}
