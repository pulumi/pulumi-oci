// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Identity Provider Groups in Oracle Cloud Infrastructure Identity service.
//
// **Deprecated.** For more information, see [Deprecated IAM Service APIs](https://docs.cloud.oracle.com/iaas/Content/Identity/Reference/deprecatediamapis.htm).
//
// Lists the identity provider groups.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Identity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Identity.GetIdentityProviderGroups(ctx, &identity.GetIdentityProviderGroupsArgs{
//				IdentityProviderId: testIdentityProvider.Id,
//				Name:               pulumi.StringRef(identityProviderGroupName),
//				State:              pulumi.StringRef(identityProviderGroupState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetIdentityProviderGroups(ctx *pulumi.Context, args *GetIdentityProviderGroupsArgs, opts ...pulumi.InvokeOption) (*GetIdentityProviderGroupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetIdentityProviderGroupsResult
	err := ctx.Invoke("oci:Identity/getIdentityProviderGroups:getIdentityProviderGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIdentityProviderGroups.
type GetIdentityProviderGroupsArgs struct {
	Filters []GetIdentityProviderGroupsFilter `pulumi:"filters"`
	// The OCID of the identity provider.
	IdentityProviderId string `pulumi:"identityProviderId"`
	// A filter to only return resources that match the given name exactly.
	Name *string `pulumi:"name"`
	// A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
	State *string `pulumi:"state"`
}

// A collection of values returned by getIdentityProviderGroups.
type GetIdentityProviderGroupsResult struct {
	Filters []GetIdentityProviderGroupsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of identity_provider_groups.
	IdentityProviderGroups []GetIdentityProviderGroupsIdentityProviderGroup `pulumi:"identityProviderGroups"`
	// The OCID of the `IdentityProvider` this group belongs to.
	IdentityProviderId string `pulumi:"identityProviderId"`
	// Display name of the group
	Name  *string `pulumi:"name"`
	State *string `pulumi:"state"`
}

func GetIdentityProviderGroupsOutput(ctx *pulumi.Context, args GetIdentityProviderGroupsOutputArgs, opts ...pulumi.InvokeOption) GetIdentityProviderGroupsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetIdentityProviderGroupsResultOutput, error) {
			args := v.(GetIdentityProviderGroupsArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetIdentityProviderGroupsResult
			secret, err := ctx.InvokePackageRaw("oci:Identity/getIdentityProviderGroups:getIdentityProviderGroups", args, &rv, "", opts...)
			if err != nil {
				return GetIdentityProviderGroupsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetIdentityProviderGroupsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetIdentityProviderGroupsResultOutput), nil
			}
			return output, nil
		}).(GetIdentityProviderGroupsResultOutput)
}

// A collection of arguments for invoking getIdentityProviderGroups.
type GetIdentityProviderGroupsOutputArgs struct {
	Filters GetIdentityProviderGroupsFilterArrayInput `pulumi:"filters"`
	// The OCID of the identity provider.
	IdentityProviderId pulumi.StringInput `pulumi:"identityProviderId"`
	// A filter to only return resources that match the given name exactly.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetIdentityProviderGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIdentityProviderGroupsArgs)(nil)).Elem()
}

// A collection of values returned by getIdentityProviderGroups.
type GetIdentityProviderGroupsResultOutput struct{ *pulumi.OutputState }

func (GetIdentityProviderGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIdentityProviderGroupsResult)(nil)).Elem()
}

func (o GetIdentityProviderGroupsResultOutput) ToGetIdentityProviderGroupsResultOutput() GetIdentityProviderGroupsResultOutput {
	return o
}

func (o GetIdentityProviderGroupsResultOutput) ToGetIdentityProviderGroupsResultOutputWithContext(ctx context.Context) GetIdentityProviderGroupsResultOutput {
	return o
}

func (o GetIdentityProviderGroupsResultOutput) Filters() GetIdentityProviderGroupsFilterArrayOutput {
	return o.ApplyT(func(v GetIdentityProviderGroupsResult) []GetIdentityProviderGroupsFilter { return v.Filters }).(GetIdentityProviderGroupsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetIdentityProviderGroupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdentityProviderGroupsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of identity_provider_groups.
func (o GetIdentityProviderGroupsResultOutput) IdentityProviderGroups() GetIdentityProviderGroupsIdentityProviderGroupArrayOutput {
	return o.ApplyT(func(v GetIdentityProviderGroupsResult) []GetIdentityProviderGroupsIdentityProviderGroup {
		return v.IdentityProviderGroups
	}).(GetIdentityProviderGroupsIdentityProviderGroupArrayOutput)
}

// The OCID of the `IdentityProvider` this group belongs to.
func (o GetIdentityProviderGroupsResultOutput) IdentityProviderId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdentityProviderGroupsResult) string { return v.IdentityProviderId }).(pulumi.StringOutput)
}

// Display name of the group
func (o GetIdentityProviderGroupsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIdentityProviderGroupsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetIdentityProviderGroupsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIdentityProviderGroupsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIdentityProviderGroupsResultOutput{})
}
