// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Network Source resource in Oracle Cloud Infrastructure Identity service.
//
// Gets the specified network source's information.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Identity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Identity.GetNetworkSource(ctx, &identity.GetNetworkSourceArgs{
//				NetworkSourceId: testNetworkSourceOciIdentityNetworkSource.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupNetworkSource(ctx *pulumi.Context, args *LookupNetworkSourceArgs, opts ...pulumi.InvokeOption) (*LookupNetworkSourceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNetworkSourceResult
	err := ctx.Invoke("oci:Identity/getNetworkSource:getNetworkSource", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetworkSource.
type LookupNetworkSourceArgs struct {
	// The OCID of the network source.
	NetworkSourceId string `pulumi:"networkSourceId"`
}

// A collection of values returned by getNetworkSource.
type LookupNetworkSourceResult struct {
	// The OCID of the tenancy containing the network source. The tenancy is the root compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// The description you assign to the network source. Does not have to be unique, and it's changeable.
	Description string `pulumi:"description"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The OCID of the network source.
	Id string `pulumi:"id"`
	// The detailed status of INACTIVE lifecycleState.
	InactiveState string `pulumi:"inactiveState"`
	// The name you assign to the network source during creation. The name must be unique across the tenancy and cannot be changed.
	Name            string `pulumi:"name"`
	NetworkSourceId string `pulumi:"networkSourceId"`
	// A list of allowed public IP addresses and CIDR ranges.
	PublicSourceLists []string `pulumi:"publicSourceLists"`
	// A list of services allowed to make on-behalf-of requests. These requests can have different source IPs than those specified in the network source. Currently, only `all` and `none` are supported. The default is `all`.
	Services []string `pulumi:"services"`
	// The network source object's current state. After creating a network source, make sure its `lifecycleState` changes from CREATING to ACTIVE before using it.
	State string `pulumi:"state"`
	// Date and time the group was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// A list of allowed VCN OCID and IP range pairs. Example:`"vcnId": "ocid1.vcn.oc1.iad.aaaaaaaaexampleuniqueID", "ipRanges": [ "129.213.39.0/24" ]`
	VirtualSourceLists []GetNetworkSourceVirtualSourceList `pulumi:"virtualSourceLists"`
}

func LookupNetworkSourceOutput(ctx *pulumi.Context, args LookupNetworkSourceOutputArgs, opts ...pulumi.InvokeOption) LookupNetworkSourceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNetworkSourceResultOutput, error) {
			args := v.(LookupNetworkSourceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Identity/getNetworkSource:getNetworkSource", args, LookupNetworkSourceResultOutput{}, options).(LookupNetworkSourceResultOutput), nil
		}).(LookupNetworkSourceResultOutput)
}

// A collection of arguments for invoking getNetworkSource.
type LookupNetworkSourceOutputArgs struct {
	// The OCID of the network source.
	NetworkSourceId pulumi.StringInput `pulumi:"networkSourceId"`
}

func (LookupNetworkSourceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkSourceArgs)(nil)).Elem()
}

// A collection of values returned by getNetworkSource.
type LookupNetworkSourceResultOutput struct{ *pulumi.OutputState }

func (LookupNetworkSourceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkSourceResult)(nil)).Elem()
}

func (o LookupNetworkSourceResultOutput) ToLookupNetworkSourceResultOutput() LookupNetworkSourceResultOutput {
	return o
}

func (o LookupNetworkSourceResultOutput) ToLookupNetworkSourceResultOutputWithContext(ctx context.Context) LookupNetworkSourceResultOutput {
	return o
}

// The OCID of the tenancy containing the network source. The tenancy is the root compartment.
func (o LookupNetworkSourceResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkSourceResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o LookupNetworkSourceResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupNetworkSourceResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// The description you assign to the network source. Does not have to be unique, and it's changeable.
func (o LookupNetworkSourceResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkSourceResult) string { return v.Description }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o LookupNetworkSourceResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupNetworkSourceResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The OCID of the network source.
func (o LookupNetworkSourceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkSourceResult) string { return v.Id }).(pulumi.StringOutput)
}

// The detailed status of INACTIVE lifecycleState.
func (o LookupNetworkSourceResultOutput) InactiveState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkSourceResult) string { return v.InactiveState }).(pulumi.StringOutput)
}

// The name you assign to the network source during creation. The name must be unique across the tenancy and cannot be changed.
func (o LookupNetworkSourceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkSourceResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupNetworkSourceResultOutput) NetworkSourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkSourceResult) string { return v.NetworkSourceId }).(pulumi.StringOutput)
}

// A list of allowed public IP addresses and CIDR ranges.
func (o LookupNetworkSourceResultOutput) PublicSourceLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupNetworkSourceResult) []string { return v.PublicSourceLists }).(pulumi.StringArrayOutput)
}

// A list of services allowed to make on-behalf-of requests. These requests can have different source IPs than those specified in the network source. Currently, only `all` and `none` are supported. The default is `all`.
func (o LookupNetworkSourceResultOutput) Services() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupNetworkSourceResult) []string { return v.Services }).(pulumi.StringArrayOutput)
}

// The network source object's current state. After creating a network source, make sure its `lifecycleState` changes from CREATING to ACTIVE before using it.
func (o LookupNetworkSourceResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkSourceResult) string { return v.State }).(pulumi.StringOutput)
}

// Date and time the group was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
func (o LookupNetworkSourceResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkSourceResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// A list of allowed VCN OCID and IP range pairs. Example:`"vcnId": "ocid1.vcn.oc1.iad.aaaaaaaaexampleuniqueID", "ipRanges": [ "129.213.39.0/24" ]`
func (o LookupNetworkSourceResultOutput) VirtualSourceLists() GetNetworkSourceVirtualSourceListArrayOutput {
	return o.ApplyT(func(v LookupNetworkSourceResult) []GetNetworkSourceVirtualSourceList { return v.VirtualSourceLists }).(GetNetworkSourceVirtualSourceListArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNetworkSourceResultOutput{})
}
