// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Region Subscriptions in Oracle Cloud Infrastructure Identity service.
//
// Lists the region subscriptions for the specified tenancy.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Identity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Identity.GetRegionSubscriptions(ctx, &identity.GetRegionSubscriptionsArgs{
//				TenancyId: oci_identity_tenancy.Test_tenancy.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetRegionSubscriptions(ctx *pulumi.Context, args *GetRegionSubscriptionsArgs, opts ...pulumi.InvokeOption) (*GetRegionSubscriptionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRegionSubscriptionsResult
	err := ctx.Invoke("oci:Identity/getRegionSubscriptions:getRegionSubscriptions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRegionSubscriptions.
type GetRegionSubscriptionsArgs struct {
	Filters []GetRegionSubscriptionsFilter `pulumi:"filters"`
	// The OCID of the tenancy.
	TenancyId string `pulumi:"tenancyId"`
}

// A collection of values returned by getRegionSubscriptions.
type GetRegionSubscriptionsResult struct {
	Filters []GetRegionSubscriptionsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of region_subscriptions.
	RegionSubscriptions []GetRegionSubscriptionsRegionSubscription `pulumi:"regionSubscriptions"`
	TenancyId           string                                     `pulumi:"tenancyId"`
}

func GetRegionSubscriptionsOutput(ctx *pulumi.Context, args GetRegionSubscriptionsOutputArgs, opts ...pulumi.InvokeOption) GetRegionSubscriptionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRegionSubscriptionsResult, error) {
			args := v.(GetRegionSubscriptionsArgs)
			r, err := GetRegionSubscriptions(ctx, &args, opts...)
			var s GetRegionSubscriptionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRegionSubscriptionsResultOutput)
}

// A collection of arguments for invoking getRegionSubscriptions.
type GetRegionSubscriptionsOutputArgs struct {
	Filters GetRegionSubscriptionsFilterArrayInput `pulumi:"filters"`
	// The OCID of the tenancy.
	TenancyId pulumi.StringInput `pulumi:"tenancyId"`
}

func (GetRegionSubscriptionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionSubscriptionsArgs)(nil)).Elem()
}

// A collection of values returned by getRegionSubscriptions.
type GetRegionSubscriptionsResultOutput struct{ *pulumi.OutputState }

func (GetRegionSubscriptionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionSubscriptionsResult)(nil)).Elem()
}

func (o GetRegionSubscriptionsResultOutput) ToGetRegionSubscriptionsResultOutput() GetRegionSubscriptionsResultOutput {
	return o
}

func (o GetRegionSubscriptionsResultOutput) ToGetRegionSubscriptionsResultOutputWithContext(ctx context.Context) GetRegionSubscriptionsResultOutput {
	return o
}

func (o GetRegionSubscriptionsResultOutput) Filters() GetRegionSubscriptionsFilterArrayOutput {
	return o.ApplyT(func(v GetRegionSubscriptionsResult) []GetRegionSubscriptionsFilter { return v.Filters }).(GetRegionSubscriptionsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRegionSubscriptionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionSubscriptionsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of region_subscriptions.
func (o GetRegionSubscriptionsResultOutput) RegionSubscriptions() GetRegionSubscriptionsRegionSubscriptionArrayOutput {
	return o.ApplyT(func(v GetRegionSubscriptionsResult) []GetRegionSubscriptionsRegionSubscription {
		return v.RegionSubscriptions
	}).(GetRegionSubscriptionsRegionSubscriptionArrayOutput)
}

func (o GetRegionSubscriptionsResultOutput) TenancyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionSubscriptionsResult) string { return v.TenancyId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRegionSubscriptionsResultOutput{})
}
