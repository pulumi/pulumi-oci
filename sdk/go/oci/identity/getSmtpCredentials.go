// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Smtp Credentials in Oracle Cloud Infrastructure Identity service.
//
// Lists the SMTP credentials for the specified user. The returned object contains the credential's OCID,
// the SMTP user name but not the SMTP password. The SMTP password is returned only upon creation.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/Identity"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := Identity.GetSmtpCredentials(ctx, &identity.GetSmtpCredentialsArgs{
// 			UserId: oci_identity_user.Test_user.Id,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetSmtpCredentials(ctx *pulumi.Context, args *GetSmtpCredentialsArgs, opts ...pulumi.InvokeOption) (*GetSmtpCredentialsResult, error) {
	var rv GetSmtpCredentialsResult
	err := ctx.Invoke("oci:Identity/getSmtpCredentials:getSmtpCredentials", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSmtpCredentials.
type GetSmtpCredentialsArgs struct {
	Filters []GetSmtpCredentialsFilter `pulumi:"filters"`
	// The OCID of the user.
	UserId string `pulumi:"userId"`
}

// A collection of values returned by getSmtpCredentials.
type GetSmtpCredentialsResult struct {
	Filters []GetSmtpCredentialsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of smtp_credentials.
	SmtpCredentials []GetSmtpCredentialsSmtpCredential `pulumi:"smtpCredentials"`
	// The OCID of the user the SMTP credential belongs to.
	UserId string `pulumi:"userId"`
}

func GetSmtpCredentialsOutput(ctx *pulumi.Context, args GetSmtpCredentialsOutputArgs, opts ...pulumi.InvokeOption) GetSmtpCredentialsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSmtpCredentialsResult, error) {
			args := v.(GetSmtpCredentialsArgs)
			r, err := GetSmtpCredentials(ctx, &args, opts...)
			var s GetSmtpCredentialsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSmtpCredentialsResultOutput)
}

// A collection of arguments for invoking getSmtpCredentials.
type GetSmtpCredentialsOutputArgs struct {
	Filters GetSmtpCredentialsFilterArrayInput `pulumi:"filters"`
	// The OCID of the user.
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetSmtpCredentialsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSmtpCredentialsArgs)(nil)).Elem()
}

// A collection of values returned by getSmtpCredentials.
type GetSmtpCredentialsResultOutput struct{ *pulumi.OutputState }

func (GetSmtpCredentialsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSmtpCredentialsResult)(nil)).Elem()
}

func (o GetSmtpCredentialsResultOutput) ToGetSmtpCredentialsResultOutput() GetSmtpCredentialsResultOutput {
	return o
}

func (o GetSmtpCredentialsResultOutput) ToGetSmtpCredentialsResultOutputWithContext(ctx context.Context) GetSmtpCredentialsResultOutput {
	return o
}

func (o GetSmtpCredentialsResultOutput) Filters() GetSmtpCredentialsFilterArrayOutput {
	return o.ApplyT(func(v GetSmtpCredentialsResult) []GetSmtpCredentialsFilter { return v.Filters }).(GetSmtpCredentialsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSmtpCredentialsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSmtpCredentialsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of smtp_credentials.
func (o GetSmtpCredentialsResultOutput) SmtpCredentials() GetSmtpCredentialsSmtpCredentialArrayOutput {
	return o.ApplyT(func(v GetSmtpCredentialsResult) []GetSmtpCredentialsSmtpCredential { return v.SmtpCredentials }).(GetSmtpCredentialsSmtpCredentialArrayOutput)
}

// The OCID of the user the SMTP credential belongs to.
func (o GetSmtpCredentialsResultOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSmtpCredentialsResult) string { return v.UserId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSmtpCredentialsResultOutput{})
}
