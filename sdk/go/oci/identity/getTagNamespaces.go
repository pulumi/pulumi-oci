// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Tag Namespaces in Oracle Cloud Infrastructure Identity service.
//
// Lists the tag namespaces in the specified compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/identity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := identity.GetTagNamespaces(ctx, &identity.GetTagNamespacesArgs{
//				CompartmentId:          compartmentId,
//				IncludeSubcompartments: pulumi.BoolRef(tagNamespaceIncludeSubcompartments),
//				State:                  pulumi.StringRef(tagNamespaceState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetTagNamespaces(ctx *pulumi.Context, args *GetTagNamespacesArgs, opts ...pulumi.InvokeOption) (*GetTagNamespacesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTagNamespacesResult
	err := ctx.Invoke("oci:Identity/getTagNamespaces:getTagNamespaces", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTagNamespaces.
type GetTagNamespacesArgs struct {
	// The OCID of the compartment (remember that the tenancy is simply the root compartment).
	CompartmentId string                   `pulumi:"compartmentId"`
	Filters       []GetTagNamespacesFilter `pulumi:"filters"`
	// An optional boolean parameter indicating whether to retrieve all tag namespaces in subcompartments. If this parameter is not specified, only the tag namespaces defined in the specified compartment are retrieved.
	IncludeSubcompartments *bool `pulumi:"includeSubcompartments"`
	// A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
	State *string `pulumi:"state"`
}

// A collection of values returned by getTagNamespaces.
type GetTagNamespacesResult struct {
	// The OCID of the compartment that contains the tag namespace.
	CompartmentId string                   `pulumi:"compartmentId"`
	Filters       []GetTagNamespacesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                     string `pulumi:"id"`
	IncludeSubcompartments *bool  `pulumi:"includeSubcompartments"`
	// The tagnamespace's current state. After creating a tagnamespace, make sure its `lifecycleState` is ACTIVE before using it. After retiring a tagnamespace, make sure its `lifecycleState` is INACTIVE before using it.
	State *string `pulumi:"state"`
	// The list of tag_namespaces.
	TagNamespaces []GetTagNamespacesTagNamespace `pulumi:"tagNamespaces"`
}

func GetTagNamespacesOutput(ctx *pulumi.Context, args GetTagNamespacesOutputArgs, opts ...pulumi.InvokeOption) GetTagNamespacesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetTagNamespacesResultOutput, error) {
			args := v.(GetTagNamespacesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Identity/getTagNamespaces:getTagNamespaces", args, GetTagNamespacesResultOutput{}, options).(GetTagNamespacesResultOutput), nil
		}).(GetTagNamespacesResultOutput)
}

// A collection of arguments for invoking getTagNamespaces.
type GetTagNamespacesOutputArgs struct {
	// The OCID of the compartment (remember that the tenancy is simply the root compartment).
	CompartmentId pulumi.StringInput               `pulumi:"compartmentId"`
	Filters       GetTagNamespacesFilterArrayInput `pulumi:"filters"`
	// An optional boolean parameter indicating whether to retrieve all tag namespaces in subcompartments. If this parameter is not specified, only the tag namespaces defined in the specified compartment are retrieved.
	IncludeSubcompartments pulumi.BoolPtrInput `pulumi:"includeSubcompartments"`
	// A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetTagNamespacesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagNamespacesArgs)(nil)).Elem()
}

// A collection of values returned by getTagNamespaces.
type GetTagNamespacesResultOutput struct{ *pulumi.OutputState }

func (GetTagNamespacesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagNamespacesResult)(nil)).Elem()
}

func (o GetTagNamespacesResultOutput) ToGetTagNamespacesResultOutput() GetTagNamespacesResultOutput {
	return o
}

func (o GetTagNamespacesResultOutput) ToGetTagNamespacesResultOutputWithContext(ctx context.Context) GetTagNamespacesResultOutput {
	return o
}

// The OCID of the compartment that contains the tag namespace.
func (o GetTagNamespacesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagNamespacesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetTagNamespacesResultOutput) Filters() GetTagNamespacesFilterArrayOutput {
	return o.ApplyT(func(v GetTagNamespacesResult) []GetTagNamespacesFilter { return v.Filters }).(GetTagNamespacesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetTagNamespacesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagNamespacesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTagNamespacesResultOutput) IncludeSubcompartments() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetTagNamespacesResult) *bool { return v.IncludeSubcompartments }).(pulumi.BoolPtrOutput)
}

// The tagnamespace's current state. After creating a tagnamespace, make sure its `lifecycleState` is ACTIVE before using it. After retiring a tagnamespace, make sure its `lifecycleState` is INACTIVE before using it.
func (o GetTagNamespacesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTagNamespacesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The list of tag_namespaces.
func (o GetTagNamespacesResultOutput) TagNamespaces() GetTagNamespacesTagNamespaceArrayOutput {
	return o.ApplyT(func(v GetTagNamespacesResult) []GetTagNamespacesTagNamespace { return v.TagNamespaces }).(GetTagNamespacesTagNamespaceArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTagNamespacesResultOutput{})
}
