// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Tags in Oracle Cloud Infrastructure Identity service.
//
// Lists the tag definitions in the specified tag namespace.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Identity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Identity.GetTags(ctx, &identity.GetTagsArgs{
//				TagNamespaceId: testTagNamespace.Id,
//				State:          pulumi.StringRef(tagState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetTags(ctx *pulumi.Context, args *GetTagsArgs, opts ...pulumi.InvokeOption) (*GetTagsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTagsResult
	err := ctx.Invoke("oci:Identity/getTags:getTags", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTags.
type GetTagsArgs struct {
	Filters []GetTagsFilter `pulumi:"filters"`
	// A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
	State *string `pulumi:"state"`
	// The OCID of the tag namespace.
	TagNamespaceId string `pulumi:"tagNamespaceId"`
}

// A collection of values returned by getTags.
type GetTagsResult struct {
	Filters []GetTagsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The tag's current state. After creating a tag, make sure its `lifecycleState` is ACTIVE before using it. After retiring a tag, make sure its `lifecycleState` is INACTIVE before using it. If you delete a tag, you cannot delete another tag until the deleted tag's `lifecycleState` changes from DELETING to DELETED.
	State *string `pulumi:"state"`
	// The OCID of the namespace that contains the tag definition.
	TagNamespaceId string `pulumi:"tagNamespaceId"`
	// The list of tags.
	Tags []GetTagsTag `pulumi:"tags"`
}

func GetTagsOutput(ctx *pulumi.Context, args GetTagsOutputArgs, opts ...pulumi.InvokeOption) GetTagsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetTagsResultOutput, error) {
			args := v.(GetTagsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Identity/getTags:getTags", args, GetTagsResultOutput{}, options).(GetTagsResultOutput), nil
		}).(GetTagsResultOutput)
}

// A collection of arguments for invoking getTags.
type GetTagsOutputArgs struct {
	Filters GetTagsFilterArrayInput `pulumi:"filters"`
	// A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The OCID of the tag namespace.
	TagNamespaceId pulumi.StringInput `pulumi:"tagNamespaceId"`
}

func (GetTagsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagsArgs)(nil)).Elem()
}

// A collection of values returned by getTags.
type GetTagsResultOutput struct{ *pulumi.OutputState }

func (GetTagsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagsResult)(nil)).Elem()
}

func (o GetTagsResultOutput) ToGetTagsResultOutput() GetTagsResultOutput {
	return o
}

func (o GetTagsResultOutput) ToGetTagsResultOutputWithContext(ctx context.Context) GetTagsResultOutput {
	return o
}

func (o GetTagsResultOutput) Filters() GetTagsFilterArrayOutput {
	return o.ApplyT(func(v GetTagsResult) []GetTagsFilter { return v.Filters }).(GetTagsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetTagsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The tag's current state. After creating a tag, make sure its `lifecycleState` is ACTIVE before using it. After retiring a tag, make sure its `lifecycleState` is INACTIVE before using it. If you delete a tag, you cannot delete another tag until the deleted tag's `lifecycleState` changes from DELETING to DELETED.
func (o GetTagsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTagsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The OCID of the namespace that contains the tag definition.
func (o GetTagsResultOutput) TagNamespaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagsResult) string { return v.TagNamespaceId }).(pulumi.StringOutput)
}

// The list of tags.
func (o GetTagsResultOutput) Tags() GetTagsTagArrayOutput {
	return o.ApplyT(func(v GetTagsResult) []GetTagsTag { return v.Tags }).(GetTagsTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTagsResultOutput{})
}
