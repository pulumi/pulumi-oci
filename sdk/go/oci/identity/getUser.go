// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific User resource in Oracle Cloud Infrastructure Identity service.
//
// Gets the specified user's information.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Identity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Identity.GetUser(ctx, &identity.GetUserArgs{
//				UserId: testUserOciIdentityUser.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupUser(ctx *pulumi.Context, args *LookupUserArgs, opts ...pulumi.InvokeOption) (*LookupUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupUserResult
	err := ctx.Invoke("oci:Identity/getUser:getUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUser.
type LookupUserArgs struct {
	// The OCID of the user.
	UserId string `pulumi:"userId"`
}

// A collection of values returned by getUser.
type LookupUserResult struct {
	// Properties indicating how the user is allowed to authenticate.
	Capabilities []GetUserCapability `pulumi:"capabilities"`
	// The OCID of the tenancy containing the user.
	CompartmentId string `pulumi:"compartmentId"`
	// DB username of the DB credential. Has to be unique across the tenancy.
	DbUserName string `pulumi:"dbUserName"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// The description you assign to the user. Does not have to be unique, and it's changeable.
	Description string `pulumi:"description"`
	// The email address you assign to the user. The email address must be unique across all users in the tenancy.
	Email string `pulumi:"email"`
	// Whether the email address has been validated.
	EmailVerified bool `pulumi:"emailVerified"`
	// Identifier of the user in the identity provider
	ExternalIdentifier string `pulumi:"externalIdentifier"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The OCID of the user.
	Id string `pulumi:"id"`
	// The OCID of the `IdentityProvider` this user belongs to.
	IdentityProviderId string `pulumi:"identityProviderId"`
	// Returned only if the user's `lifecycleState` is INACTIVE. A 16-bit value showing the reason why the user is inactive:
	// * bit 0: SUSPENDED (reserved for future use)
	// * bit 1: DISABLED (reserved for future use)
	// * bit 2: BLOCKED (the user has exceeded the maximum number of failed login attempts for the Console)
	InactiveState string `pulumi:"inactiveState"`
	// The date and time of when the user most recently logged in the format defined by RFC3339 (ex. `2016-08-25T21:10:29.600Z`). If there is no login history, this field is null.
	LastSuccessfulLoginTime string `pulumi:"lastSuccessfulLoginTime"`
	// The name you assign to the user during creation. This is the user's login for the Console. The name must be unique across all users in the tenancy and cannot be changed.
	Name string `pulumi:"name"`
	// The date and time of when the user most recently logged in the format defined by RFC3339 (ex. `2016-08-25T21:10:29.600Z`). If there is no login history, this field is null.
	PreviousSuccessfulLoginTime string `pulumi:"previousSuccessfulLoginTime"`
	// The user's current state.
	State string `pulumi:"state"`
	// Date and time the user was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	UserId      string `pulumi:"userId"`
}

func LookupUserOutput(ctx *pulumi.Context, args LookupUserOutputArgs, opts ...pulumi.InvokeOption) LookupUserResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupUserResult, error) {
			args := v.(LookupUserArgs)
			r, err := LookupUser(ctx, &args, opts...)
			var s LookupUserResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupUserResultOutput)
}

// A collection of arguments for invoking getUser.
type LookupUserOutputArgs struct {
	// The OCID of the user.
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (LookupUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserArgs)(nil)).Elem()
}

// A collection of values returned by getUser.
type LookupUserResultOutput struct{ *pulumi.OutputState }

func (LookupUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserResult)(nil)).Elem()
}

func (o LookupUserResultOutput) ToLookupUserResultOutput() LookupUserResultOutput {
	return o
}

func (o LookupUserResultOutput) ToLookupUserResultOutputWithContext(ctx context.Context) LookupUserResultOutput {
	return o
}

// Properties indicating how the user is allowed to authenticate.
func (o LookupUserResultOutput) Capabilities() GetUserCapabilityArrayOutput {
	return o.ApplyT(func(v LookupUserResult) []GetUserCapability { return v.Capabilities }).(GetUserCapabilityArrayOutput)
}

// The OCID of the tenancy containing the user.
func (o LookupUserResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// DB username of the DB credential. Has to be unique across the tenancy.
func (o LookupUserResultOutput) DbUserName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.DbUserName }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o LookupUserResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupUserResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// The description you assign to the user. Does not have to be unique, and it's changeable.
func (o LookupUserResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.Description }).(pulumi.StringOutput)
}

// The email address you assign to the user. The email address must be unique across all users in the tenancy.
func (o LookupUserResultOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.Email }).(pulumi.StringOutput)
}

// Whether the email address has been validated.
func (o LookupUserResultOutput) EmailVerified() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupUserResult) bool { return v.EmailVerified }).(pulumi.BoolOutput)
}

// Identifier of the user in the identity provider
func (o LookupUserResultOutput) ExternalIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.ExternalIdentifier }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o LookupUserResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupUserResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The OCID of the user.
func (o LookupUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.Id }).(pulumi.StringOutput)
}

// The OCID of the `IdentityProvider` this user belongs to.
func (o LookupUserResultOutput) IdentityProviderId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.IdentityProviderId }).(pulumi.StringOutput)
}

// Returned only if the user's `lifecycleState` is INACTIVE. A 16-bit value showing the reason why the user is inactive:
// * bit 0: SUSPENDED (reserved for future use)
// * bit 1: DISABLED (reserved for future use)
// * bit 2: BLOCKED (the user has exceeded the maximum number of failed login attempts for the Console)
func (o LookupUserResultOutput) InactiveState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.InactiveState }).(pulumi.StringOutput)
}

// The date and time of when the user most recently logged in the format defined by RFC3339 (ex. `2016-08-25T21:10:29.600Z`). If there is no login history, this field is null.
func (o LookupUserResultOutput) LastSuccessfulLoginTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.LastSuccessfulLoginTime }).(pulumi.StringOutput)
}

// The name you assign to the user during creation. This is the user's login for the Console. The name must be unique across all users in the tenancy and cannot be changed.
func (o LookupUserResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.Name }).(pulumi.StringOutput)
}

// The date and time of when the user most recently logged in the format defined by RFC3339 (ex. `2016-08-25T21:10:29.600Z`). If there is no login history, this field is null.
func (o LookupUserResultOutput) PreviousSuccessfulLoginTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.PreviousSuccessfulLoginTime }).(pulumi.StringOutput)
}

// The user's current state.
func (o LookupUserResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.State }).(pulumi.StringOutput)
}

// Date and time the user was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
func (o LookupUserResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

func (o LookupUserResultOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.UserId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupUserResultOutput{})
}
