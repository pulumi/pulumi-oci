// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of User Group Memberships in Oracle Cloud Infrastructure Identity service.
//
// Lists the `UserGroupMembership` objects in your tenancy. You must specify your tenancy's OCID
// as the value for the compartment ID
// (see [Where to Get the Tenancy's OCID and User's OCID](https://docs.cloud.oracle.com/iaas/Content/API/Concepts/apisigningkey.htm#five)).
// You must also then filter the list in one of these ways:
//
//   - You can limit the results to just the memberships for a given user by specifying a `userId`.
//   - Similarly, you can limit the results to just the memberships for a given group by specifying a `groupId`.
//   - You can set both the `userId` and `groupId` to determine if the specified user is in the specified group.
//     If the answer is no, the response is an empty list.
//   - Although`userId` and `groupId` are not individually required, you must set one of them.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Identity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Identity.GetUserGroupMemberships(ctx, &identity.GetUserGroupMembershipsArgs{
//				CompartmentId: tenancyOcid,
//				GroupId:       pulumi.StringRef(testGroup.Id),
//				UserId:        pulumi.StringRef(testUser.Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetUserGroupMemberships(ctx *pulumi.Context, args *GetUserGroupMembershipsArgs, opts ...pulumi.InvokeOption) (*GetUserGroupMembershipsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetUserGroupMembershipsResult
	err := ctx.Invoke("oci:Identity/getUserGroupMemberships:getUserGroupMemberships", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUserGroupMemberships.
type GetUserGroupMembershipsArgs struct {
	// The OCID of the compartment (remember that the tenancy is simply the root compartment).
	CompartmentId string                          `pulumi:"compartmentId"`
	Filters       []GetUserGroupMembershipsFilter `pulumi:"filters"`
	// The OCID of the group.
	GroupId *string `pulumi:"groupId"`
	// The OCID of the user.
	UserId *string `pulumi:"userId"`
}

// A collection of values returned by getUserGroupMemberships.
type GetUserGroupMembershipsResult struct {
	// The OCID of the tenancy containing the user, group, and membership object.
	CompartmentId string                          `pulumi:"compartmentId"`
	Filters       []GetUserGroupMembershipsFilter `pulumi:"filters"`
	// The OCID of the group.
	GroupId *string `pulumi:"groupId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of memberships.
	Memberships []GetUserGroupMembershipsMembership `pulumi:"memberships"`
	// The OCID of the user.
	UserId *string `pulumi:"userId"`
}

func GetUserGroupMembershipsOutput(ctx *pulumi.Context, args GetUserGroupMembershipsOutputArgs, opts ...pulumi.InvokeOption) GetUserGroupMembershipsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetUserGroupMembershipsResultOutput, error) {
			args := v.(GetUserGroupMembershipsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Identity/getUserGroupMemberships:getUserGroupMemberships", args, GetUserGroupMembershipsResultOutput{}, options).(GetUserGroupMembershipsResultOutput), nil
		}).(GetUserGroupMembershipsResultOutput)
}

// A collection of arguments for invoking getUserGroupMemberships.
type GetUserGroupMembershipsOutputArgs struct {
	// The OCID of the compartment (remember that the tenancy is simply the root compartment).
	CompartmentId pulumi.StringInput                      `pulumi:"compartmentId"`
	Filters       GetUserGroupMembershipsFilterArrayInput `pulumi:"filters"`
	// The OCID of the group.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// The OCID of the user.
	UserId pulumi.StringPtrInput `pulumi:"userId"`
}

func (GetUserGroupMembershipsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserGroupMembershipsArgs)(nil)).Elem()
}

// A collection of values returned by getUserGroupMemberships.
type GetUserGroupMembershipsResultOutput struct{ *pulumi.OutputState }

func (GetUserGroupMembershipsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserGroupMembershipsResult)(nil)).Elem()
}

func (o GetUserGroupMembershipsResultOutput) ToGetUserGroupMembershipsResultOutput() GetUserGroupMembershipsResultOutput {
	return o
}

func (o GetUserGroupMembershipsResultOutput) ToGetUserGroupMembershipsResultOutputWithContext(ctx context.Context) GetUserGroupMembershipsResultOutput {
	return o
}

// The OCID of the tenancy containing the user, group, and membership object.
func (o GetUserGroupMembershipsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupMembershipsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetUserGroupMembershipsResultOutput) Filters() GetUserGroupMembershipsFilterArrayOutput {
	return o.ApplyT(func(v GetUserGroupMembershipsResult) []GetUserGroupMembershipsFilter { return v.Filters }).(GetUserGroupMembershipsFilterArrayOutput)
}

// The OCID of the group.
func (o GetUserGroupMembershipsResultOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserGroupMembershipsResult) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetUserGroupMembershipsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupMembershipsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of memberships.
func (o GetUserGroupMembershipsResultOutput) Memberships() GetUserGroupMembershipsMembershipArrayOutput {
	return o.ApplyT(func(v GetUserGroupMembershipsResult) []GetUserGroupMembershipsMembership { return v.Memberships }).(GetUserGroupMembershipsMembershipArrayOutput)
}

// The OCID of the user.
func (o GetUserGroupMembershipsResultOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserGroupMembershipsResult) *string { return v.UserId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetUserGroupMembershipsResultOutput{})
}
