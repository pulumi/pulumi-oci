// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Idp Group Mapping resource in Oracle Cloud Infrastructure Identity service.
//
// **Deprecated.** For more information, see [Deprecated IAM Service APIs](https://docs.cloud.oracle.com/iaas/Content/Identity/Reference/deprecatediamapis.htm).
//
// Creates a single mapping between an IdP group and an IAM Service
// [group](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/Group/).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Identity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Identity.NewIdpGroupMapping(ctx, "testIdpGroupMapping", &Identity.IdpGroupMappingArgs{
//				GroupId:            pulumi.Any(oci_identity_group.Test_group.Id),
//				IdentityProviderId: pulumi.Any(oci_identity_identity_provider.Test_identity_provider.Id),
//				IdpGroupName:       pulumi.Any(_var.Idp_group_mapping_idp_group_name),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// IdpGroupMappings can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:Identity/idpGroupMapping:IdpGroupMapping test_idp_group_mapping "identityProviders/{identityProviderId}/groupMappings/{mappingId}"
//
// ```
type IdpGroupMapping struct {
	pulumi.CustomResourceState

	// The OCID of the tenancy containing the `IdentityProvider`.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) The OCID of the IAM Service [group](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/Group/) you want to map to the IdP group.
	GroupId pulumi.StringOutput `pulumi:"groupId"`
	// The OCID of the identity provider.
	IdentityProviderId pulumi.StringOutput `pulumi:"identityProviderId"`
	// (Updatable) The name of the IdP group you want to map.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	IdpGroupName pulumi.StringOutput `pulumi:"idpGroupName"`
	// The detailed status of INACTIVE lifecycleState.
	InactiveState pulumi.StringOutput `pulumi:"inactiveState"`
	// The mapping's current state.
	State pulumi.StringOutput `pulumi:"state"`
	// Date and time the mapping was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewIdpGroupMapping registers a new resource with the given unique name, arguments, and options.
func NewIdpGroupMapping(ctx *pulumi.Context,
	name string, args *IdpGroupMappingArgs, opts ...pulumi.ResourceOption) (*IdpGroupMapping, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GroupId == nil {
		return nil, errors.New("invalid value for required argument 'GroupId'")
	}
	if args.IdentityProviderId == nil {
		return nil, errors.New("invalid value for required argument 'IdentityProviderId'")
	}
	if args.IdpGroupName == nil {
		return nil, errors.New("invalid value for required argument 'IdpGroupName'")
	}
	var resource IdpGroupMapping
	err := ctx.RegisterResource("oci:Identity/idpGroupMapping:IdpGroupMapping", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdpGroupMapping gets an existing IdpGroupMapping resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdpGroupMapping(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdpGroupMappingState, opts ...pulumi.ResourceOption) (*IdpGroupMapping, error) {
	var resource IdpGroupMapping
	err := ctx.ReadResource("oci:Identity/idpGroupMapping:IdpGroupMapping", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IdpGroupMapping resources.
type idpGroupMappingState struct {
	// The OCID of the tenancy containing the `IdentityProvider`.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) The OCID of the IAM Service [group](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/Group/) you want to map to the IdP group.
	GroupId *string `pulumi:"groupId"`
	// The OCID of the identity provider.
	IdentityProviderId *string `pulumi:"identityProviderId"`
	// (Updatable) The name of the IdP group you want to map.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	IdpGroupName *string `pulumi:"idpGroupName"`
	// The detailed status of INACTIVE lifecycleState.
	InactiveState *string `pulumi:"inactiveState"`
	// The mapping's current state.
	State *string `pulumi:"state"`
	// Date and time the mapping was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
}

type IdpGroupMappingState struct {
	// The OCID of the tenancy containing the `IdentityProvider`.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) The OCID of the IAM Service [group](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/Group/) you want to map to the IdP group.
	GroupId pulumi.StringPtrInput
	// The OCID of the identity provider.
	IdentityProviderId pulumi.StringPtrInput
	// (Updatable) The name of the IdP group you want to map.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	IdpGroupName pulumi.StringPtrInput
	// The detailed status of INACTIVE lifecycleState.
	InactiveState pulumi.StringPtrInput
	// The mapping's current state.
	State pulumi.StringPtrInput
	// Date and time the mapping was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
}

func (IdpGroupMappingState) ElementType() reflect.Type {
	return reflect.TypeOf((*idpGroupMappingState)(nil)).Elem()
}

type idpGroupMappingArgs struct {
	// (Updatable) The OCID of the IAM Service [group](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/Group/) you want to map to the IdP group.
	GroupId string `pulumi:"groupId"`
	// The OCID of the identity provider.
	IdentityProviderId string `pulumi:"identityProviderId"`
	// (Updatable) The name of the IdP group you want to map.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	IdpGroupName string `pulumi:"idpGroupName"`
}

// The set of arguments for constructing a IdpGroupMapping resource.
type IdpGroupMappingArgs struct {
	// (Updatable) The OCID of the IAM Service [group](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/Group/) you want to map to the IdP group.
	GroupId pulumi.StringInput
	// The OCID of the identity provider.
	IdentityProviderId pulumi.StringInput
	// (Updatable) The name of the IdP group you want to map.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	IdpGroupName pulumi.StringInput
}

func (IdpGroupMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*idpGroupMappingArgs)(nil)).Elem()
}

type IdpGroupMappingInput interface {
	pulumi.Input

	ToIdpGroupMappingOutput() IdpGroupMappingOutput
	ToIdpGroupMappingOutputWithContext(ctx context.Context) IdpGroupMappingOutput
}

func (*IdpGroupMapping) ElementType() reflect.Type {
	return reflect.TypeOf((**IdpGroupMapping)(nil)).Elem()
}

func (i *IdpGroupMapping) ToIdpGroupMappingOutput() IdpGroupMappingOutput {
	return i.ToIdpGroupMappingOutputWithContext(context.Background())
}

func (i *IdpGroupMapping) ToIdpGroupMappingOutputWithContext(ctx context.Context) IdpGroupMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdpGroupMappingOutput)
}

// IdpGroupMappingArrayInput is an input type that accepts IdpGroupMappingArray and IdpGroupMappingArrayOutput values.
// You can construct a concrete instance of `IdpGroupMappingArrayInput` via:
//
//	IdpGroupMappingArray{ IdpGroupMappingArgs{...} }
type IdpGroupMappingArrayInput interface {
	pulumi.Input

	ToIdpGroupMappingArrayOutput() IdpGroupMappingArrayOutput
	ToIdpGroupMappingArrayOutputWithContext(context.Context) IdpGroupMappingArrayOutput
}

type IdpGroupMappingArray []IdpGroupMappingInput

func (IdpGroupMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IdpGroupMapping)(nil)).Elem()
}

func (i IdpGroupMappingArray) ToIdpGroupMappingArrayOutput() IdpGroupMappingArrayOutput {
	return i.ToIdpGroupMappingArrayOutputWithContext(context.Background())
}

func (i IdpGroupMappingArray) ToIdpGroupMappingArrayOutputWithContext(ctx context.Context) IdpGroupMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdpGroupMappingArrayOutput)
}

// IdpGroupMappingMapInput is an input type that accepts IdpGroupMappingMap and IdpGroupMappingMapOutput values.
// You can construct a concrete instance of `IdpGroupMappingMapInput` via:
//
//	IdpGroupMappingMap{ "key": IdpGroupMappingArgs{...} }
type IdpGroupMappingMapInput interface {
	pulumi.Input

	ToIdpGroupMappingMapOutput() IdpGroupMappingMapOutput
	ToIdpGroupMappingMapOutputWithContext(context.Context) IdpGroupMappingMapOutput
}

type IdpGroupMappingMap map[string]IdpGroupMappingInput

func (IdpGroupMappingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IdpGroupMapping)(nil)).Elem()
}

func (i IdpGroupMappingMap) ToIdpGroupMappingMapOutput() IdpGroupMappingMapOutput {
	return i.ToIdpGroupMappingMapOutputWithContext(context.Background())
}

func (i IdpGroupMappingMap) ToIdpGroupMappingMapOutputWithContext(ctx context.Context) IdpGroupMappingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdpGroupMappingMapOutput)
}

type IdpGroupMappingOutput struct{ *pulumi.OutputState }

func (IdpGroupMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdpGroupMapping)(nil)).Elem()
}

func (o IdpGroupMappingOutput) ToIdpGroupMappingOutput() IdpGroupMappingOutput {
	return o
}

func (o IdpGroupMappingOutput) ToIdpGroupMappingOutputWithContext(ctx context.Context) IdpGroupMappingOutput {
	return o
}

// The OCID of the tenancy containing the `IdentityProvider`.
func (o IdpGroupMappingOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *IdpGroupMapping) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) The OCID of the IAM Service [group](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/Group/) you want to map to the IdP group.
func (o IdpGroupMappingOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *IdpGroupMapping) pulumi.StringOutput { return v.GroupId }).(pulumi.StringOutput)
}

// The OCID of the identity provider.
func (o IdpGroupMappingOutput) IdentityProviderId() pulumi.StringOutput {
	return o.ApplyT(func(v *IdpGroupMapping) pulumi.StringOutput { return v.IdentityProviderId }).(pulumi.StringOutput)
}

// (Updatable) The name of the IdP group you want to map.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o IdpGroupMappingOutput) IdpGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *IdpGroupMapping) pulumi.StringOutput { return v.IdpGroupName }).(pulumi.StringOutput)
}

// The detailed status of INACTIVE lifecycleState.
func (o IdpGroupMappingOutput) InactiveState() pulumi.StringOutput {
	return o.ApplyT(func(v *IdpGroupMapping) pulumi.StringOutput { return v.InactiveState }).(pulumi.StringOutput)
}

// The mapping's current state.
func (o IdpGroupMappingOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *IdpGroupMapping) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Date and time the mapping was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
func (o IdpGroupMappingOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *IdpGroupMapping) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

type IdpGroupMappingArrayOutput struct{ *pulumi.OutputState }

func (IdpGroupMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IdpGroupMapping)(nil)).Elem()
}

func (o IdpGroupMappingArrayOutput) ToIdpGroupMappingArrayOutput() IdpGroupMappingArrayOutput {
	return o
}

func (o IdpGroupMappingArrayOutput) ToIdpGroupMappingArrayOutputWithContext(ctx context.Context) IdpGroupMappingArrayOutput {
	return o
}

func (o IdpGroupMappingArrayOutput) Index(i pulumi.IntInput) IdpGroupMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IdpGroupMapping {
		return vs[0].([]*IdpGroupMapping)[vs[1].(int)]
	}).(IdpGroupMappingOutput)
}

type IdpGroupMappingMapOutput struct{ *pulumi.OutputState }

func (IdpGroupMappingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IdpGroupMapping)(nil)).Elem()
}

func (o IdpGroupMappingMapOutput) ToIdpGroupMappingMapOutput() IdpGroupMappingMapOutput {
	return o
}

func (o IdpGroupMappingMapOutput) ToIdpGroupMappingMapOutputWithContext(ctx context.Context) IdpGroupMappingMapOutput {
	return o
}

func (o IdpGroupMappingMapOutput) MapIndex(k pulumi.StringInput) IdpGroupMappingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IdpGroupMapping {
		return vs[0].(map[string]*IdpGroupMapping)[vs[1].(string)]
	}).(IdpGroupMappingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IdpGroupMappingInput)(nil)).Elem(), &IdpGroupMapping{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdpGroupMappingArrayInput)(nil)).Elem(), IdpGroupMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdpGroupMappingMapInput)(nil)).Elem(), IdpGroupMappingMap{})
	pulumi.RegisterOutputType(IdpGroupMappingOutput{})
	pulumi.RegisterOutputType(IdpGroupMappingArrayOutput{})
	pulumi.RegisterOutputType(IdpGroupMappingMapOutput{})
}
