// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Import Standard Tags Management resource in Oracle Cloud Infrastructure Identity service.
//
// OCI will release Tag Namespaces that our customers can import.
// These Tag Namespaces will provide Tags for our customers and Partners to provide consistency and enable data reporting.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Identity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Identity.NewImportStandardTagsManagement(ctx, "testImportStandardTagsManagement", &Identity.ImportStandardTagsManagementArgs{
//				CompartmentId:            pulumi.Any(_var.Compartment_id),
//				StandardTagNamespaceName: pulumi.Any(oci_identity_tag_namespace.Test_tag_namespace.Name),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ImportStandardTagsManagement can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:Identity/importStandardTagsManagement:ImportStandardTagsManagement test_import_standard_tags_management "id"
//
// ```
type ImportStandardTagsManagement struct {
	pulumi.CustomResourceState

	// The OCID of the compartment where the bulk create request is submitted and where the tag namespaces will be created.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// The name of standard tag namespace that will be imported in bulk
	StandardTagNamespaceName pulumi.StringOutput `pulumi:"standardTagNamespaceName"`
	WorkRequestId            pulumi.StringOutput `pulumi:"workRequestId"`
}

// NewImportStandardTagsManagement registers a new resource with the given unique name, arguments, and options.
func NewImportStandardTagsManagement(ctx *pulumi.Context,
	name string, args *ImportStandardTagsManagementArgs, opts ...pulumi.ResourceOption) (*ImportStandardTagsManagement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.StandardTagNamespaceName == nil {
		return nil, errors.New("invalid value for required argument 'StandardTagNamespaceName'")
	}
	var resource ImportStandardTagsManagement
	err := ctx.RegisterResource("oci:Identity/importStandardTagsManagement:ImportStandardTagsManagement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetImportStandardTagsManagement gets an existing ImportStandardTagsManagement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetImportStandardTagsManagement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ImportStandardTagsManagementState, opts ...pulumi.ResourceOption) (*ImportStandardTagsManagement, error) {
	var resource ImportStandardTagsManagement
	err := ctx.ReadResource("oci:Identity/importStandardTagsManagement:ImportStandardTagsManagement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ImportStandardTagsManagement resources.
type importStandardTagsManagementState struct {
	// The OCID of the compartment where the bulk create request is submitted and where the tag namespaces will be created.
	CompartmentId *string `pulumi:"compartmentId"`
	// The name of standard tag namespace that will be imported in bulk
	StandardTagNamespaceName *string `pulumi:"standardTagNamespaceName"`
	WorkRequestId            *string `pulumi:"workRequestId"`
}

type ImportStandardTagsManagementState struct {
	// The OCID of the compartment where the bulk create request is submitted and where the tag namespaces will be created.
	CompartmentId pulumi.StringPtrInput
	// The name of standard tag namespace that will be imported in bulk
	StandardTagNamespaceName pulumi.StringPtrInput
	WorkRequestId            pulumi.StringPtrInput
}

func (ImportStandardTagsManagementState) ElementType() reflect.Type {
	return reflect.TypeOf((*importStandardTagsManagementState)(nil)).Elem()
}

type importStandardTagsManagementArgs struct {
	// The OCID of the compartment where the bulk create request is submitted and where the tag namespaces will be created.
	CompartmentId string `pulumi:"compartmentId"`
	// The name of standard tag namespace that will be imported in bulk
	StandardTagNamespaceName string `pulumi:"standardTagNamespaceName"`
}

// The set of arguments for constructing a ImportStandardTagsManagement resource.
type ImportStandardTagsManagementArgs struct {
	// The OCID of the compartment where the bulk create request is submitted and where the tag namespaces will be created.
	CompartmentId pulumi.StringInput
	// The name of standard tag namespace that will be imported in bulk
	StandardTagNamespaceName pulumi.StringInput
}

func (ImportStandardTagsManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*importStandardTagsManagementArgs)(nil)).Elem()
}

type ImportStandardTagsManagementInput interface {
	pulumi.Input

	ToImportStandardTagsManagementOutput() ImportStandardTagsManagementOutput
	ToImportStandardTagsManagementOutputWithContext(ctx context.Context) ImportStandardTagsManagementOutput
}

func (*ImportStandardTagsManagement) ElementType() reflect.Type {
	return reflect.TypeOf((**ImportStandardTagsManagement)(nil)).Elem()
}

func (i *ImportStandardTagsManagement) ToImportStandardTagsManagementOutput() ImportStandardTagsManagementOutput {
	return i.ToImportStandardTagsManagementOutputWithContext(context.Background())
}

func (i *ImportStandardTagsManagement) ToImportStandardTagsManagementOutputWithContext(ctx context.Context) ImportStandardTagsManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImportStandardTagsManagementOutput)
}

// ImportStandardTagsManagementArrayInput is an input type that accepts ImportStandardTagsManagementArray and ImportStandardTagsManagementArrayOutput values.
// You can construct a concrete instance of `ImportStandardTagsManagementArrayInput` via:
//
//	ImportStandardTagsManagementArray{ ImportStandardTagsManagementArgs{...} }
type ImportStandardTagsManagementArrayInput interface {
	pulumi.Input

	ToImportStandardTagsManagementArrayOutput() ImportStandardTagsManagementArrayOutput
	ToImportStandardTagsManagementArrayOutputWithContext(context.Context) ImportStandardTagsManagementArrayOutput
}

type ImportStandardTagsManagementArray []ImportStandardTagsManagementInput

func (ImportStandardTagsManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ImportStandardTagsManagement)(nil)).Elem()
}

func (i ImportStandardTagsManagementArray) ToImportStandardTagsManagementArrayOutput() ImportStandardTagsManagementArrayOutput {
	return i.ToImportStandardTagsManagementArrayOutputWithContext(context.Background())
}

func (i ImportStandardTagsManagementArray) ToImportStandardTagsManagementArrayOutputWithContext(ctx context.Context) ImportStandardTagsManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImportStandardTagsManagementArrayOutput)
}

// ImportStandardTagsManagementMapInput is an input type that accepts ImportStandardTagsManagementMap and ImportStandardTagsManagementMapOutput values.
// You can construct a concrete instance of `ImportStandardTagsManagementMapInput` via:
//
//	ImportStandardTagsManagementMap{ "key": ImportStandardTagsManagementArgs{...} }
type ImportStandardTagsManagementMapInput interface {
	pulumi.Input

	ToImportStandardTagsManagementMapOutput() ImportStandardTagsManagementMapOutput
	ToImportStandardTagsManagementMapOutputWithContext(context.Context) ImportStandardTagsManagementMapOutput
}

type ImportStandardTagsManagementMap map[string]ImportStandardTagsManagementInput

func (ImportStandardTagsManagementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ImportStandardTagsManagement)(nil)).Elem()
}

func (i ImportStandardTagsManagementMap) ToImportStandardTagsManagementMapOutput() ImportStandardTagsManagementMapOutput {
	return i.ToImportStandardTagsManagementMapOutputWithContext(context.Background())
}

func (i ImportStandardTagsManagementMap) ToImportStandardTagsManagementMapOutputWithContext(ctx context.Context) ImportStandardTagsManagementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImportStandardTagsManagementMapOutput)
}

type ImportStandardTagsManagementOutput struct{ *pulumi.OutputState }

func (ImportStandardTagsManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImportStandardTagsManagement)(nil)).Elem()
}

func (o ImportStandardTagsManagementOutput) ToImportStandardTagsManagementOutput() ImportStandardTagsManagementOutput {
	return o
}

func (o ImportStandardTagsManagementOutput) ToImportStandardTagsManagementOutputWithContext(ctx context.Context) ImportStandardTagsManagementOutput {
	return o
}

type ImportStandardTagsManagementArrayOutput struct{ *pulumi.OutputState }

func (ImportStandardTagsManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ImportStandardTagsManagement)(nil)).Elem()
}

func (o ImportStandardTagsManagementArrayOutput) ToImportStandardTagsManagementArrayOutput() ImportStandardTagsManagementArrayOutput {
	return o
}

func (o ImportStandardTagsManagementArrayOutput) ToImportStandardTagsManagementArrayOutputWithContext(ctx context.Context) ImportStandardTagsManagementArrayOutput {
	return o
}

func (o ImportStandardTagsManagementArrayOutput) Index(i pulumi.IntInput) ImportStandardTagsManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ImportStandardTagsManagement {
		return vs[0].([]*ImportStandardTagsManagement)[vs[1].(int)]
	}).(ImportStandardTagsManagementOutput)
}

type ImportStandardTagsManagementMapOutput struct{ *pulumi.OutputState }

func (ImportStandardTagsManagementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ImportStandardTagsManagement)(nil)).Elem()
}

func (o ImportStandardTagsManagementMapOutput) ToImportStandardTagsManagementMapOutput() ImportStandardTagsManagementMapOutput {
	return o
}

func (o ImportStandardTagsManagementMapOutput) ToImportStandardTagsManagementMapOutputWithContext(ctx context.Context) ImportStandardTagsManagementMapOutput {
	return o
}

func (o ImportStandardTagsManagementMapOutput) MapIndex(k pulumi.StringInput) ImportStandardTagsManagementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ImportStandardTagsManagement {
		return vs[0].(map[string]*ImportStandardTagsManagement)[vs[1].(string)]
	}).(ImportStandardTagsManagementOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ImportStandardTagsManagementInput)(nil)).Elem(), &ImportStandardTagsManagement{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImportStandardTagsManagementArrayInput)(nil)).Elem(), ImportStandardTagsManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImportStandardTagsManagementMapInput)(nil)).Elem(), ImportStandardTagsManagementMap{})
	pulumi.RegisterOutputType(ImportStandardTagsManagementOutput{})
	pulumi.RegisterOutputType(ImportStandardTagsManagementArrayOutput{})
	pulumi.RegisterOutputType(ImportStandardTagsManagementMapOutput{})
}
