// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Network Source resource in Oracle Cloud Infrastructure Identity service.
//
// Creates a new network source in your tenancy.
//
// You must specify your tenancy's OCID as the compartment ID in the request object (remember that the tenancy
// is simply the root compartment). Notice that IAM resources (users, groups, compartments, and some policies)
// reside within the tenancy itself, unlike cloud resources such as compute instances, which typically
// reside within compartments inside the tenancy. For information about OCIDs, see
// [Resource Identifiers](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
//
// You must also specify a *name* for the network source, which must be unique across all network sources in your
// tenancy, and cannot be changed.
// You can use this name or the OCID when writing policies that apply to the network source. For more information
// about policies, see [How Policies Work](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/policies.htm).
//
// You must also specify a *description* for the network source (although it can be an empty string). It does not
// have to be unique, and you can change it anytime with [UpdateNetworkSource](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/NetworkSource/UpdateNetworkSource).
// After your network resource is created, you can use it in policy to restrict access to only requests made from an allowed
// IP address specified in your network source. For more information, see [Managing Network Sources](https://docs.cloud.oracle.com/iaas/Content/Identity/Tasks/managingnetworksources.htm).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Identity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Identity.NewNetworkSource(ctx, "testNetworkSource", &Identity.NetworkSourceArgs{
//				CompartmentId: pulumi.Any(_var.Tenancy_ocid),
//				Description:   pulumi.Any(_var.Network_source_description),
//				DefinedTags: pulumi.AnyMap{
//					"Operations.CostCenter": pulumi.Any("42"),
//				},
//				FreeformTags: pulumi.AnyMap{
//					"Department": pulumi.Any("Finance"),
//				},
//				PublicSourceLists:  pulumi.Any(_var.Network_source_public_source_list),
//				Services:           pulumi.Any(_var.Network_source_services),
//				VirtualSourceLists: pulumi.Any(_var.Network_source_virtual_source_list),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// NetworkSources can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:Identity/networkSource:NetworkSource test_network_source "id"
//
// ```
type NetworkSource struct {
	pulumi.CustomResourceState

	// The OCID of the tenancy (root compartment) containing the network source object.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) The description you assign to the network source during creation. Does not have to be unique, and it's changeable.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The detailed status of INACTIVE lifecycleState.
	InactiveState pulumi.StringOutput `pulumi:"inactiveState"`
	// The name you assign to the network source during creation. The name must be unique across all groups in the tenancy and cannot be changed.
	Name pulumi.StringOutput `pulumi:"name"`
	// (Updatable) A list of allowed public IP addresses and CIDR ranges.
	PublicSourceLists pulumi.StringArrayOutput `pulumi:"publicSourceLists"`
	// (Updatable) A list of services allowed to make on-behalf-of requests. These requests can have different source IP addresses than those listed in the network source. Currently, only `all` and `none` are supported. The default is `all`.
	Services pulumi.StringArrayOutput `pulumi:"services"`
	// The network source object's current state. After creating a network source, make sure its `lifecycleState` changes from CREATING to ACTIVE before using it.
	State pulumi.StringOutput `pulumi:"state"`
	// Date and time the group was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// (Updatable) A list of allowed VCN OCID and IP range pairs. Example:`"vcnId": "ocid1.vcn.oc1.iad.aaaaaaaaexampleuniqueID", "ipRanges": [ "129.213.39.0/24" ]`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VirtualSourceLists NetworkSourceVirtualSourceListArrayOutput `pulumi:"virtualSourceLists"`
}

// NewNetworkSource registers a new resource with the given unique name, arguments, and options.
func NewNetworkSource(ctx *pulumi.Context,
	name string, args *NetworkSourceArgs, opts ...pulumi.ResourceOption) (*NetworkSource, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	var resource NetworkSource
	err := ctx.RegisterResource("oci:Identity/networkSource:NetworkSource", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkSource gets an existing NetworkSource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkSource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkSourceState, opts ...pulumi.ResourceOption) (*NetworkSource, error) {
	var resource NetworkSource
	err := ctx.ReadResource("oci:Identity/networkSource:NetworkSource", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkSource resources.
type networkSourceState struct {
	// The OCID of the tenancy (root compartment) containing the network source object.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The description you assign to the network source during creation. Does not have to be unique, and it's changeable.
	Description *string `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The detailed status of INACTIVE lifecycleState.
	InactiveState *string `pulumi:"inactiveState"`
	// The name you assign to the network source during creation. The name must be unique across all groups in the tenancy and cannot be changed.
	Name *string `pulumi:"name"`
	// (Updatable) A list of allowed public IP addresses and CIDR ranges.
	PublicSourceLists []string `pulumi:"publicSourceLists"`
	// (Updatable) A list of services allowed to make on-behalf-of requests. These requests can have different source IP addresses than those listed in the network source. Currently, only `all` and `none` are supported. The default is `all`.
	Services []string `pulumi:"services"`
	// The network source object's current state. After creating a network source, make sure its `lifecycleState` changes from CREATING to ACTIVE before using it.
	State *string `pulumi:"state"`
	// Date and time the group was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
	// (Updatable) A list of allowed VCN OCID and IP range pairs. Example:`"vcnId": "ocid1.vcn.oc1.iad.aaaaaaaaexampleuniqueID", "ipRanges": [ "129.213.39.0/24" ]`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VirtualSourceLists []NetworkSourceVirtualSourceList `pulumi:"virtualSourceLists"`
}

type NetworkSourceState struct {
	// The OCID of the tenancy (root compartment) containing the network source object.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The description you assign to the network source during creation. Does not have to be unique, and it's changeable.
	Description pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The detailed status of INACTIVE lifecycleState.
	InactiveState pulumi.StringPtrInput
	// The name you assign to the network source during creation. The name must be unique across all groups in the tenancy and cannot be changed.
	Name pulumi.StringPtrInput
	// (Updatable) A list of allowed public IP addresses and CIDR ranges.
	PublicSourceLists pulumi.StringArrayInput
	// (Updatable) A list of services allowed to make on-behalf-of requests. These requests can have different source IP addresses than those listed in the network source. Currently, only `all` and `none` are supported. The default is `all`.
	Services pulumi.StringArrayInput
	// The network source object's current state. After creating a network source, make sure its `lifecycleState` changes from CREATING to ACTIVE before using it.
	State pulumi.StringPtrInput
	// Date and time the group was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
	// (Updatable) A list of allowed VCN OCID and IP range pairs. Example:`"vcnId": "ocid1.vcn.oc1.iad.aaaaaaaaexampleuniqueID", "ipRanges": [ "129.213.39.0/24" ]`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VirtualSourceLists NetworkSourceVirtualSourceListArrayInput
}

func (NetworkSourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkSourceState)(nil)).Elem()
}

type networkSourceArgs struct {
	// The OCID of the tenancy (root compartment) containing the network source object.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The description you assign to the network source during creation. Does not have to be unique, and it's changeable.
	Description string `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The name you assign to the network source during creation. The name must be unique across all groups in the tenancy and cannot be changed.
	Name *string `pulumi:"name"`
	// (Updatable) A list of allowed public IP addresses and CIDR ranges.
	PublicSourceLists []string `pulumi:"publicSourceLists"`
	// (Updatable) A list of services allowed to make on-behalf-of requests. These requests can have different source IP addresses than those listed in the network source. Currently, only `all` and `none` are supported. The default is `all`.
	Services []string `pulumi:"services"`
	// (Updatable) A list of allowed VCN OCID and IP range pairs. Example:`"vcnId": "ocid1.vcn.oc1.iad.aaaaaaaaexampleuniqueID", "ipRanges": [ "129.213.39.0/24" ]`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VirtualSourceLists []NetworkSourceVirtualSourceList `pulumi:"virtualSourceLists"`
}

// The set of arguments for constructing a NetworkSource resource.
type NetworkSourceArgs struct {
	// The OCID of the tenancy (root compartment) containing the network source object.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The description you assign to the network source during creation. Does not have to be unique, and it's changeable.
	Description pulumi.StringInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The name you assign to the network source during creation. The name must be unique across all groups in the tenancy and cannot be changed.
	Name pulumi.StringPtrInput
	// (Updatable) A list of allowed public IP addresses and CIDR ranges.
	PublicSourceLists pulumi.StringArrayInput
	// (Updatable) A list of services allowed to make on-behalf-of requests. These requests can have different source IP addresses than those listed in the network source. Currently, only `all` and `none` are supported. The default is `all`.
	Services pulumi.StringArrayInput
	// (Updatable) A list of allowed VCN OCID and IP range pairs. Example:`"vcnId": "ocid1.vcn.oc1.iad.aaaaaaaaexampleuniqueID", "ipRanges": [ "129.213.39.0/24" ]`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VirtualSourceLists NetworkSourceVirtualSourceListArrayInput
}

func (NetworkSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkSourceArgs)(nil)).Elem()
}

type NetworkSourceInput interface {
	pulumi.Input

	ToNetworkSourceOutput() NetworkSourceOutput
	ToNetworkSourceOutputWithContext(ctx context.Context) NetworkSourceOutput
}

func (*NetworkSource) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSource)(nil)).Elem()
}

func (i *NetworkSource) ToNetworkSourceOutput() NetworkSourceOutput {
	return i.ToNetworkSourceOutputWithContext(context.Background())
}

func (i *NetworkSource) ToNetworkSourceOutputWithContext(ctx context.Context) NetworkSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSourceOutput)
}

// NetworkSourceArrayInput is an input type that accepts NetworkSourceArray and NetworkSourceArrayOutput values.
// You can construct a concrete instance of `NetworkSourceArrayInput` via:
//
//	NetworkSourceArray{ NetworkSourceArgs{...} }
type NetworkSourceArrayInput interface {
	pulumi.Input

	ToNetworkSourceArrayOutput() NetworkSourceArrayOutput
	ToNetworkSourceArrayOutputWithContext(context.Context) NetworkSourceArrayOutput
}

type NetworkSourceArray []NetworkSourceInput

func (NetworkSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkSource)(nil)).Elem()
}

func (i NetworkSourceArray) ToNetworkSourceArrayOutput() NetworkSourceArrayOutput {
	return i.ToNetworkSourceArrayOutputWithContext(context.Background())
}

func (i NetworkSourceArray) ToNetworkSourceArrayOutputWithContext(ctx context.Context) NetworkSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSourceArrayOutput)
}

// NetworkSourceMapInput is an input type that accepts NetworkSourceMap and NetworkSourceMapOutput values.
// You can construct a concrete instance of `NetworkSourceMapInput` via:
//
//	NetworkSourceMap{ "key": NetworkSourceArgs{...} }
type NetworkSourceMapInput interface {
	pulumi.Input

	ToNetworkSourceMapOutput() NetworkSourceMapOutput
	ToNetworkSourceMapOutputWithContext(context.Context) NetworkSourceMapOutput
}

type NetworkSourceMap map[string]NetworkSourceInput

func (NetworkSourceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkSource)(nil)).Elem()
}

func (i NetworkSourceMap) ToNetworkSourceMapOutput() NetworkSourceMapOutput {
	return i.ToNetworkSourceMapOutputWithContext(context.Background())
}

func (i NetworkSourceMap) ToNetworkSourceMapOutputWithContext(ctx context.Context) NetworkSourceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSourceMapOutput)
}

type NetworkSourceOutput struct{ *pulumi.OutputState }

func (NetworkSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSource)(nil)).Elem()
}

func (o NetworkSourceOutput) ToNetworkSourceOutput() NetworkSourceOutput {
	return o
}

func (o NetworkSourceOutput) ToNetworkSourceOutputWithContext(ctx context.Context) NetworkSourceOutput {
	return o
}

// The OCID of the tenancy (root compartment) containing the network source object.
func (o NetworkSourceOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSource) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o NetworkSourceOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *NetworkSource) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) The description you assign to the network source during creation. Does not have to be unique, and it's changeable.
func (o NetworkSourceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSource) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o NetworkSourceOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *NetworkSource) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// The detailed status of INACTIVE lifecycleState.
func (o NetworkSourceOutput) InactiveState() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSource) pulumi.StringOutput { return v.InactiveState }).(pulumi.StringOutput)
}

// The name you assign to the network source during creation. The name must be unique across all groups in the tenancy and cannot be changed.
func (o NetworkSourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSource) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// (Updatable) A list of allowed public IP addresses and CIDR ranges.
func (o NetworkSourceOutput) PublicSourceLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkSource) pulumi.StringArrayOutput { return v.PublicSourceLists }).(pulumi.StringArrayOutput)
}

// (Updatable) A list of services allowed to make on-behalf-of requests. These requests can have different source IP addresses than those listed in the network source. Currently, only `all` and `none` are supported. The default is `all`.
func (o NetworkSourceOutput) Services() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkSource) pulumi.StringArrayOutput { return v.Services }).(pulumi.StringArrayOutput)
}

// The network source object's current state. After creating a network source, make sure its `lifecycleState` changes from CREATING to ACTIVE before using it.
func (o NetworkSourceOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSource) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Date and time the group was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
func (o NetworkSourceOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSource) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// (Updatable) A list of allowed VCN OCID and IP range pairs. Example:`"vcnId": "ocid1.vcn.oc1.iad.aaaaaaaaexampleuniqueID", "ipRanges": [ "129.213.39.0/24" ]`
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o NetworkSourceOutput) VirtualSourceLists() NetworkSourceVirtualSourceListArrayOutput {
	return o.ApplyT(func(v *NetworkSource) NetworkSourceVirtualSourceListArrayOutput { return v.VirtualSourceLists }).(NetworkSourceVirtualSourceListArrayOutput)
}

type NetworkSourceArrayOutput struct{ *pulumi.OutputState }

func (NetworkSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkSource)(nil)).Elem()
}

func (o NetworkSourceArrayOutput) ToNetworkSourceArrayOutput() NetworkSourceArrayOutput {
	return o
}

func (o NetworkSourceArrayOutput) ToNetworkSourceArrayOutputWithContext(ctx context.Context) NetworkSourceArrayOutput {
	return o
}

func (o NetworkSourceArrayOutput) Index(i pulumi.IntInput) NetworkSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkSource {
		return vs[0].([]*NetworkSource)[vs[1].(int)]
	}).(NetworkSourceOutput)
}

type NetworkSourceMapOutput struct{ *pulumi.OutputState }

func (NetworkSourceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkSource)(nil)).Elem()
}

func (o NetworkSourceMapOutput) ToNetworkSourceMapOutput() NetworkSourceMapOutput {
	return o
}

func (o NetworkSourceMapOutput) ToNetworkSourceMapOutputWithContext(ctx context.Context) NetworkSourceMapOutput {
	return o
}

func (o NetworkSourceMapOutput) MapIndex(k pulumi.StringInput) NetworkSourceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkSource {
		return vs[0].(map[string]*NetworkSource)[vs[1].(string)]
	}).(NetworkSourceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSourceInput)(nil)).Elem(), &NetworkSource{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSourceArrayInput)(nil)).Elem(), NetworkSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSourceMapInput)(nil)).Elem(), NetworkSourceMap{})
	pulumi.RegisterOutputType(NetworkSourceOutput{})
	pulumi.RegisterOutputType(NetworkSourceArrayOutput{})
	pulumi.RegisterOutputType(NetworkSourceMapOutput{})
}
