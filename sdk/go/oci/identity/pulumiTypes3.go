// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GetTagStandardTagNamespaceTemplateTagDefinitionTemplate struct {
	// The default description of the tag namespace that users can use to create the tag definition
	Description string `pulumi:"description"`
	// The mutability of the possible values list for enum tags. This will default to IMMUTABLE for string value tags
	EnumMutability string `pulumi:"enumMutability"`
	// Is the tag a cost tracking tag. Default will be false as cost tracking tags have been deprecated
	IsCostTracking bool `pulumi:"isCostTracking"`
	// List of possible values. An optional parameter that will be present if the type of definition is enum.
	PossibleValues []string `pulumi:"possibleValues"`
	// The name of this standard tag definition
	TagDefinitionName string `pulumi:"tagDefinitionName"`
	// The type of tag definition. Enum or string.
	Type string `pulumi:"type"`
}

// GetTagStandardTagNamespaceTemplateTagDefinitionTemplateInput is an input type that accepts GetTagStandardTagNamespaceTemplateTagDefinitionTemplateArgs and GetTagStandardTagNamespaceTemplateTagDefinitionTemplateOutput values.
// You can construct a concrete instance of `GetTagStandardTagNamespaceTemplateTagDefinitionTemplateInput` via:
//
//	GetTagStandardTagNamespaceTemplateTagDefinitionTemplateArgs{...}
type GetTagStandardTagNamespaceTemplateTagDefinitionTemplateInput interface {
	pulumi.Input

	ToGetTagStandardTagNamespaceTemplateTagDefinitionTemplateOutput() GetTagStandardTagNamespaceTemplateTagDefinitionTemplateOutput
	ToGetTagStandardTagNamespaceTemplateTagDefinitionTemplateOutputWithContext(context.Context) GetTagStandardTagNamespaceTemplateTagDefinitionTemplateOutput
}

type GetTagStandardTagNamespaceTemplateTagDefinitionTemplateArgs struct {
	// The default description of the tag namespace that users can use to create the tag definition
	Description pulumi.StringInput `pulumi:"description"`
	// The mutability of the possible values list for enum tags. This will default to IMMUTABLE for string value tags
	EnumMutability pulumi.StringInput `pulumi:"enumMutability"`
	// Is the tag a cost tracking tag. Default will be false as cost tracking tags have been deprecated
	IsCostTracking pulumi.BoolInput `pulumi:"isCostTracking"`
	// List of possible values. An optional parameter that will be present if the type of definition is enum.
	PossibleValues pulumi.StringArrayInput `pulumi:"possibleValues"`
	// The name of this standard tag definition
	TagDefinitionName pulumi.StringInput `pulumi:"tagDefinitionName"`
	// The type of tag definition. Enum or string.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetTagStandardTagNamespaceTemplateTagDefinitionTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagStandardTagNamespaceTemplateTagDefinitionTemplate)(nil)).Elem()
}

func (i GetTagStandardTagNamespaceTemplateTagDefinitionTemplateArgs) ToGetTagStandardTagNamespaceTemplateTagDefinitionTemplateOutput() GetTagStandardTagNamespaceTemplateTagDefinitionTemplateOutput {
	return i.ToGetTagStandardTagNamespaceTemplateTagDefinitionTemplateOutputWithContext(context.Background())
}

func (i GetTagStandardTagNamespaceTemplateTagDefinitionTemplateArgs) ToGetTagStandardTagNamespaceTemplateTagDefinitionTemplateOutputWithContext(ctx context.Context) GetTagStandardTagNamespaceTemplateTagDefinitionTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagStandardTagNamespaceTemplateTagDefinitionTemplateOutput)
}

// GetTagStandardTagNamespaceTemplateTagDefinitionTemplateArrayInput is an input type that accepts GetTagStandardTagNamespaceTemplateTagDefinitionTemplateArray and GetTagStandardTagNamespaceTemplateTagDefinitionTemplateArrayOutput values.
// You can construct a concrete instance of `GetTagStandardTagNamespaceTemplateTagDefinitionTemplateArrayInput` via:
//
//	GetTagStandardTagNamespaceTemplateTagDefinitionTemplateArray{ GetTagStandardTagNamespaceTemplateTagDefinitionTemplateArgs{...} }
type GetTagStandardTagNamespaceTemplateTagDefinitionTemplateArrayInput interface {
	pulumi.Input

	ToGetTagStandardTagNamespaceTemplateTagDefinitionTemplateArrayOutput() GetTagStandardTagNamespaceTemplateTagDefinitionTemplateArrayOutput
	ToGetTagStandardTagNamespaceTemplateTagDefinitionTemplateArrayOutputWithContext(context.Context) GetTagStandardTagNamespaceTemplateTagDefinitionTemplateArrayOutput
}

type GetTagStandardTagNamespaceTemplateTagDefinitionTemplateArray []GetTagStandardTagNamespaceTemplateTagDefinitionTemplateInput

func (GetTagStandardTagNamespaceTemplateTagDefinitionTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagStandardTagNamespaceTemplateTagDefinitionTemplate)(nil)).Elem()
}

func (i GetTagStandardTagNamespaceTemplateTagDefinitionTemplateArray) ToGetTagStandardTagNamespaceTemplateTagDefinitionTemplateArrayOutput() GetTagStandardTagNamespaceTemplateTagDefinitionTemplateArrayOutput {
	return i.ToGetTagStandardTagNamespaceTemplateTagDefinitionTemplateArrayOutputWithContext(context.Background())
}

func (i GetTagStandardTagNamespaceTemplateTagDefinitionTemplateArray) ToGetTagStandardTagNamespaceTemplateTagDefinitionTemplateArrayOutputWithContext(ctx context.Context) GetTagStandardTagNamespaceTemplateTagDefinitionTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagStandardTagNamespaceTemplateTagDefinitionTemplateArrayOutput)
}

type GetTagStandardTagNamespaceTemplateTagDefinitionTemplateOutput struct{ *pulumi.OutputState }

func (GetTagStandardTagNamespaceTemplateTagDefinitionTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagStandardTagNamespaceTemplateTagDefinitionTemplate)(nil)).Elem()
}

func (o GetTagStandardTagNamespaceTemplateTagDefinitionTemplateOutput) ToGetTagStandardTagNamespaceTemplateTagDefinitionTemplateOutput() GetTagStandardTagNamespaceTemplateTagDefinitionTemplateOutput {
	return o
}

func (o GetTagStandardTagNamespaceTemplateTagDefinitionTemplateOutput) ToGetTagStandardTagNamespaceTemplateTagDefinitionTemplateOutputWithContext(ctx context.Context) GetTagStandardTagNamespaceTemplateTagDefinitionTemplateOutput {
	return o
}

// The default description of the tag namespace that users can use to create the tag definition
func (o GetTagStandardTagNamespaceTemplateTagDefinitionTemplateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagStandardTagNamespaceTemplateTagDefinitionTemplate) string { return v.Description }).(pulumi.StringOutput)
}

// The mutability of the possible values list for enum tags. This will default to IMMUTABLE for string value tags
func (o GetTagStandardTagNamespaceTemplateTagDefinitionTemplateOutput) EnumMutability() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagStandardTagNamespaceTemplateTagDefinitionTemplate) string { return v.EnumMutability }).(pulumi.StringOutput)
}

// Is the tag a cost tracking tag. Default will be false as cost tracking tags have been deprecated
func (o GetTagStandardTagNamespaceTemplateTagDefinitionTemplateOutput) IsCostTracking() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTagStandardTagNamespaceTemplateTagDefinitionTemplate) bool { return v.IsCostTracking }).(pulumi.BoolOutput)
}

// List of possible values. An optional parameter that will be present if the type of definition is enum.
func (o GetTagStandardTagNamespaceTemplateTagDefinitionTemplateOutput) PossibleValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTagStandardTagNamespaceTemplateTagDefinitionTemplate) []string { return v.PossibleValues }).(pulumi.StringArrayOutput)
}

// The name of this standard tag definition
func (o GetTagStandardTagNamespaceTemplateTagDefinitionTemplateOutput) TagDefinitionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagStandardTagNamespaceTemplateTagDefinitionTemplate) string { return v.TagDefinitionName }).(pulumi.StringOutput)
}

// The type of tag definition. Enum or string.
func (o GetTagStandardTagNamespaceTemplateTagDefinitionTemplateOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagStandardTagNamespaceTemplateTagDefinitionTemplate) string { return v.Type }).(pulumi.StringOutput)
}

type GetTagStandardTagNamespaceTemplateTagDefinitionTemplateArrayOutput struct{ *pulumi.OutputState }

func (GetTagStandardTagNamespaceTemplateTagDefinitionTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagStandardTagNamespaceTemplateTagDefinitionTemplate)(nil)).Elem()
}

func (o GetTagStandardTagNamespaceTemplateTagDefinitionTemplateArrayOutput) ToGetTagStandardTagNamespaceTemplateTagDefinitionTemplateArrayOutput() GetTagStandardTagNamespaceTemplateTagDefinitionTemplateArrayOutput {
	return o
}

func (o GetTagStandardTagNamespaceTemplateTagDefinitionTemplateArrayOutput) ToGetTagStandardTagNamespaceTemplateTagDefinitionTemplateArrayOutputWithContext(ctx context.Context) GetTagStandardTagNamespaceTemplateTagDefinitionTemplateArrayOutput {
	return o
}

func (o GetTagStandardTagNamespaceTemplateTagDefinitionTemplateArrayOutput) Index(i pulumi.IntInput) GetTagStandardTagNamespaceTemplateTagDefinitionTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTagStandardTagNamespaceTemplateTagDefinitionTemplate {
		return vs[0].([]GetTagStandardTagNamespaceTemplateTagDefinitionTemplate)[vs[1].(int)]
	}).(GetTagStandardTagNamespaceTemplateTagDefinitionTemplateOutput)
}

type GetTagStandardTagNamespaceTemplatesFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetTagStandardTagNamespaceTemplatesFilterInput is an input type that accepts GetTagStandardTagNamespaceTemplatesFilterArgs and GetTagStandardTagNamespaceTemplatesFilterOutput values.
// You can construct a concrete instance of `GetTagStandardTagNamespaceTemplatesFilterInput` via:
//
//	GetTagStandardTagNamespaceTemplatesFilterArgs{...}
type GetTagStandardTagNamespaceTemplatesFilterInput interface {
	pulumi.Input

	ToGetTagStandardTagNamespaceTemplatesFilterOutput() GetTagStandardTagNamespaceTemplatesFilterOutput
	ToGetTagStandardTagNamespaceTemplatesFilterOutputWithContext(context.Context) GetTagStandardTagNamespaceTemplatesFilterOutput
}

type GetTagStandardTagNamespaceTemplatesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetTagStandardTagNamespaceTemplatesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagStandardTagNamespaceTemplatesFilter)(nil)).Elem()
}

func (i GetTagStandardTagNamespaceTemplatesFilterArgs) ToGetTagStandardTagNamespaceTemplatesFilterOutput() GetTagStandardTagNamespaceTemplatesFilterOutput {
	return i.ToGetTagStandardTagNamespaceTemplatesFilterOutputWithContext(context.Background())
}

func (i GetTagStandardTagNamespaceTemplatesFilterArgs) ToGetTagStandardTagNamespaceTemplatesFilterOutputWithContext(ctx context.Context) GetTagStandardTagNamespaceTemplatesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagStandardTagNamespaceTemplatesFilterOutput)
}

// GetTagStandardTagNamespaceTemplatesFilterArrayInput is an input type that accepts GetTagStandardTagNamespaceTemplatesFilterArray and GetTagStandardTagNamespaceTemplatesFilterArrayOutput values.
// You can construct a concrete instance of `GetTagStandardTagNamespaceTemplatesFilterArrayInput` via:
//
//	GetTagStandardTagNamespaceTemplatesFilterArray{ GetTagStandardTagNamespaceTemplatesFilterArgs{...} }
type GetTagStandardTagNamespaceTemplatesFilterArrayInput interface {
	pulumi.Input

	ToGetTagStandardTagNamespaceTemplatesFilterArrayOutput() GetTagStandardTagNamespaceTemplatesFilterArrayOutput
	ToGetTagStandardTagNamespaceTemplatesFilterArrayOutputWithContext(context.Context) GetTagStandardTagNamespaceTemplatesFilterArrayOutput
}

type GetTagStandardTagNamespaceTemplatesFilterArray []GetTagStandardTagNamespaceTemplatesFilterInput

func (GetTagStandardTagNamespaceTemplatesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagStandardTagNamespaceTemplatesFilter)(nil)).Elem()
}

func (i GetTagStandardTagNamespaceTemplatesFilterArray) ToGetTagStandardTagNamespaceTemplatesFilterArrayOutput() GetTagStandardTagNamespaceTemplatesFilterArrayOutput {
	return i.ToGetTagStandardTagNamespaceTemplatesFilterArrayOutputWithContext(context.Background())
}

func (i GetTagStandardTagNamespaceTemplatesFilterArray) ToGetTagStandardTagNamespaceTemplatesFilterArrayOutputWithContext(ctx context.Context) GetTagStandardTagNamespaceTemplatesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagStandardTagNamespaceTemplatesFilterArrayOutput)
}

type GetTagStandardTagNamespaceTemplatesFilterOutput struct{ *pulumi.OutputState }

func (GetTagStandardTagNamespaceTemplatesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagStandardTagNamespaceTemplatesFilter)(nil)).Elem()
}

func (o GetTagStandardTagNamespaceTemplatesFilterOutput) ToGetTagStandardTagNamespaceTemplatesFilterOutput() GetTagStandardTagNamespaceTemplatesFilterOutput {
	return o
}

func (o GetTagStandardTagNamespaceTemplatesFilterOutput) ToGetTagStandardTagNamespaceTemplatesFilterOutputWithContext(ctx context.Context) GetTagStandardTagNamespaceTemplatesFilterOutput {
	return o
}

func (o GetTagStandardTagNamespaceTemplatesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagStandardTagNamespaceTemplatesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetTagStandardTagNamespaceTemplatesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetTagStandardTagNamespaceTemplatesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetTagStandardTagNamespaceTemplatesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTagStandardTagNamespaceTemplatesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetTagStandardTagNamespaceTemplatesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetTagStandardTagNamespaceTemplatesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagStandardTagNamespaceTemplatesFilter)(nil)).Elem()
}

func (o GetTagStandardTagNamespaceTemplatesFilterArrayOutput) ToGetTagStandardTagNamespaceTemplatesFilterArrayOutput() GetTagStandardTagNamespaceTemplatesFilterArrayOutput {
	return o
}

func (o GetTagStandardTagNamespaceTemplatesFilterArrayOutput) ToGetTagStandardTagNamespaceTemplatesFilterArrayOutputWithContext(ctx context.Context) GetTagStandardTagNamespaceTemplatesFilterArrayOutput {
	return o
}

func (o GetTagStandardTagNamespaceTemplatesFilterArrayOutput) Index(i pulumi.IntInput) GetTagStandardTagNamespaceTemplatesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTagStandardTagNamespaceTemplatesFilter {
		return vs[0].([]GetTagStandardTagNamespaceTemplatesFilter)[vs[1].(int)]
	}).(GetTagStandardTagNamespaceTemplatesFilterOutput)
}

type GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplate struct {
	// The default description of the tag namespace that users can use to create the tag namespace
	Description string `pulumi:"description"`
	// The reserved name of this standard tag namespace
	StandardTagNamespaceName string `pulumi:"standardTagNamespaceName"`
	// The status of the standard tag namespace
	Status string `pulumi:"status"`
}

// GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateInput is an input type that accepts GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArgs and GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateOutput values.
// You can construct a concrete instance of `GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateInput` via:
//
//	GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArgs{...}
type GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateInput interface {
	pulumi.Input

	ToGetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateOutput() GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateOutput
	ToGetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateOutputWithContext(context.Context) GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateOutput
}

type GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArgs struct {
	// The default description of the tag namespace that users can use to create the tag namespace
	Description pulumi.StringInput `pulumi:"description"`
	// The reserved name of this standard tag namespace
	StandardTagNamespaceName pulumi.StringInput `pulumi:"standardTagNamespaceName"`
	// The status of the standard tag namespace
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplate)(nil)).Elem()
}

func (i GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArgs) ToGetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateOutput() GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateOutput {
	return i.ToGetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateOutputWithContext(context.Background())
}

func (i GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArgs) ToGetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateOutputWithContext(ctx context.Context) GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateOutput)
}

// GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArrayInput is an input type that accepts GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArray and GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArrayOutput values.
// You can construct a concrete instance of `GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArrayInput` via:
//
//	GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArray{ GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArgs{...} }
type GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArrayInput interface {
	pulumi.Input

	ToGetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArrayOutput() GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArrayOutput
	ToGetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArrayOutputWithContext(context.Context) GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArrayOutput
}

type GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArray []GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateInput

func (GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplate)(nil)).Elem()
}

func (i GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArray) ToGetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArrayOutput() GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArrayOutput {
	return i.ToGetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArrayOutputWithContext(context.Background())
}

func (i GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArray) ToGetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArrayOutputWithContext(ctx context.Context) GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArrayOutput)
}

type GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateOutput struct{ *pulumi.OutputState }

func (GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplate)(nil)).Elem()
}

func (o GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateOutput) ToGetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateOutput() GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateOutput {
	return o
}

func (o GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateOutput) ToGetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateOutputWithContext(ctx context.Context) GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateOutput {
	return o
}

// The default description of the tag namespace that users can use to create the tag namespace
func (o GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplate) string { return v.Description }).(pulumi.StringOutput)
}

// The reserved name of this standard tag namespace
func (o GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateOutput) StandardTagNamespaceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplate) string {
		return v.StandardTagNamespaceName
	}).(pulumi.StringOutput)
}

// The status of the standard tag namespace
func (o GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplate) string { return v.Status }).(pulumi.StringOutput)
}

type GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArrayOutput struct{ *pulumi.OutputState }

func (GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplate)(nil)).Elem()
}

func (o GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArrayOutput) ToGetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArrayOutput() GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArrayOutput {
	return o
}

func (o GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArrayOutput) ToGetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArrayOutputWithContext(ctx context.Context) GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArrayOutput {
	return o
}

func (o GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArrayOutput) Index(i pulumi.IntInput) GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplate {
		return vs[0].([]GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplate)[vs[1].(int)]
	}).(GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateOutput)
}

type GetTagValidator struct {
	// Specifies the type of validation: a static value (no validation) or a list.
	ValidatorType string `pulumi:"validatorType"`
	// The list of allowed values for a definedTag value.
	Values []string `pulumi:"values"`
}

// GetTagValidatorInput is an input type that accepts GetTagValidatorArgs and GetTagValidatorOutput values.
// You can construct a concrete instance of `GetTagValidatorInput` via:
//
//	GetTagValidatorArgs{...}
type GetTagValidatorInput interface {
	pulumi.Input

	ToGetTagValidatorOutput() GetTagValidatorOutput
	ToGetTagValidatorOutputWithContext(context.Context) GetTagValidatorOutput
}

type GetTagValidatorArgs struct {
	// Specifies the type of validation: a static value (no validation) or a list.
	ValidatorType pulumi.StringInput `pulumi:"validatorType"`
	// The list of allowed values for a definedTag value.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetTagValidatorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagValidator)(nil)).Elem()
}

func (i GetTagValidatorArgs) ToGetTagValidatorOutput() GetTagValidatorOutput {
	return i.ToGetTagValidatorOutputWithContext(context.Background())
}

func (i GetTagValidatorArgs) ToGetTagValidatorOutputWithContext(ctx context.Context) GetTagValidatorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagValidatorOutput)
}

// GetTagValidatorArrayInput is an input type that accepts GetTagValidatorArray and GetTagValidatorArrayOutput values.
// You can construct a concrete instance of `GetTagValidatorArrayInput` via:
//
//	GetTagValidatorArray{ GetTagValidatorArgs{...} }
type GetTagValidatorArrayInput interface {
	pulumi.Input

	ToGetTagValidatorArrayOutput() GetTagValidatorArrayOutput
	ToGetTagValidatorArrayOutputWithContext(context.Context) GetTagValidatorArrayOutput
}

type GetTagValidatorArray []GetTagValidatorInput

func (GetTagValidatorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagValidator)(nil)).Elem()
}

func (i GetTagValidatorArray) ToGetTagValidatorArrayOutput() GetTagValidatorArrayOutput {
	return i.ToGetTagValidatorArrayOutputWithContext(context.Background())
}

func (i GetTagValidatorArray) ToGetTagValidatorArrayOutputWithContext(ctx context.Context) GetTagValidatorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagValidatorArrayOutput)
}

type GetTagValidatorOutput struct{ *pulumi.OutputState }

func (GetTagValidatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagValidator)(nil)).Elem()
}

func (o GetTagValidatorOutput) ToGetTagValidatorOutput() GetTagValidatorOutput {
	return o
}

func (o GetTagValidatorOutput) ToGetTagValidatorOutputWithContext(ctx context.Context) GetTagValidatorOutput {
	return o
}

// Specifies the type of validation: a static value (no validation) or a list.
func (o GetTagValidatorOutput) ValidatorType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagValidator) string { return v.ValidatorType }).(pulumi.StringOutput)
}

// The list of allowed values for a definedTag value.
func (o GetTagValidatorOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTagValidator) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetTagValidatorArrayOutput struct{ *pulumi.OutputState }

func (GetTagValidatorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagValidator)(nil)).Elem()
}

func (o GetTagValidatorArrayOutput) ToGetTagValidatorArrayOutput() GetTagValidatorArrayOutput {
	return o
}

func (o GetTagValidatorArrayOutput) ToGetTagValidatorArrayOutputWithContext(ctx context.Context) GetTagValidatorArrayOutput {
	return o
}

func (o GetTagValidatorArrayOutput) Index(i pulumi.IntInput) GetTagValidatorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTagValidator {
		return vs[0].([]GetTagValidator)[vs[1].(int)]
	}).(GetTagValidatorOutput)
}

type GetTagsFilter struct {
	// The name assigned to the tag during creation. This is the tag key definition. The name must be unique within the tag namespace and cannot be changed.
	Name  string `pulumi:"name"`
	Regex *bool  `pulumi:"regex"`
	// The list of allowed values for a definedTag value.
	Values []string `pulumi:"values"`
}

// GetTagsFilterInput is an input type that accepts GetTagsFilterArgs and GetTagsFilterOutput values.
// You can construct a concrete instance of `GetTagsFilterInput` via:
//
//	GetTagsFilterArgs{...}
type GetTagsFilterInput interface {
	pulumi.Input

	ToGetTagsFilterOutput() GetTagsFilterOutput
	ToGetTagsFilterOutputWithContext(context.Context) GetTagsFilterOutput
}

type GetTagsFilterArgs struct {
	// The name assigned to the tag during creation. This is the tag key definition. The name must be unique within the tag namespace and cannot be changed.
	Name  pulumi.StringInput  `pulumi:"name"`
	Regex pulumi.BoolPtrInput `pulumi:"regex"`
	// The list of allowed values for a definedTag value.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetTagsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagsFilter)(nil)).Elem()
}

func (i GetTagsFilterArgs) ToGetTagsFilterOutput() GetTagsFilterOutput {
	return i.ToGetTagsFilterOutputWithContext(context.Background())
}

func (i GetTagsFilterArgs) ToGetTagsFilterOutputWithContext(ctx context.Context) GetTagsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagsFilterOutput)
}

// GetTagsFilterArrayInput is an input type that accepts GetTagsFilterArray and GetTagsFilterArrayOutput values.
// You can construct a concrete instance of `GetTagsFilterArrayInput` via:
//
//	GetTagsFilterArray{ GetTagsFilterArgs{...} }
type GetTagsFilterArrayInput interface {
	pulumi.Input

	ToGetTagsFilterArrayOutput() GetTagsFilterArrayOutput
	ToGetTagsFilterArrayOutputWithContext(context.Context) GetTagsFilterArrayOutput
}

type GetTagsFilterArray []GetTagsFilterInput

func (GetTagsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagsFilter)(nil)).Elem()
}

func (i GetTagsFilterArray) ToGetTagsFilterArrayOutput() GetTagsFilterArrayOutput {
	return i.ToGetTagsFilterArrayOutputWithContext(context.Background())
}

func (i GetTagsFilterArray) ToGetTagsFilterArrayOutputWithContext(ctx context.Context) GetTagsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagsFilterArrayOutput)
}

type GetTagsFilterOutput struct{ *pulumi.OutputState }

func (GetTagsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagsFilter)(nil)).Elem()
}

func (o GetTagsFilterOutput) ToGetTagsFilterOutput() GetTagsFilterOutput {
	return o
}

func (o GetTagsFilterOutput) ToGetTagsFilterOutputWithContext(ctx context.Context) GetTagsFilterOutput {
	return o
}

// The name assigned to the tag during creation. This is the tag key definition. The name must be unique within the tag namespace and cannot be changed.
func (o GetTagsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetTagsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetTagsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

// The list of allowed values for a definedTag value.
func (o GetTagsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTagsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetTagsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetTagsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagsFilter)(nil)).Elem()
}

func (o GetTagsFilterArrayOutput) ToGetTagsFilterArrayOutput() GetTagsFilterArrayOutput {
	return o
}

func (o GetTagsFilterArrayOutput) ToGetTagsFilterArrayOutputWithContext(ctx context.Context) GetTagsFilterArrayOutput {
	return o
}

func (o GetTagsFilterArrayOutput) Index(i pulumi.IntInput) GetTagsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTagsFilter {
		return vs[0].([]GetTagsFilter)[vs[1].(int)]
	}).(GetTagsFilterOutput)
}

type GetTagsTag struct {
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The description you assign to the tag.
	Description string `pulumi:"description"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the tag definition.
	Id string `pulumi:"id"`
	// Indicates whether the tag is enabled for cost tracking.
	IsCostTracking bool `pulumi:"isCostTracking"`
	// Indicates whether the tag is retired. See [Retiring Key Definitions and Namespace Definitions](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/taggingoverview.htm#Retiring).
	IsRetired bool `pulumi:"isRetired"`
	// The name assigned to the tag during creation. This is the tag key definition. The name must be unique within the tag namespace and cannot be changed.
	Name string `pulumi:"name"`
	// A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
	State string `pulumi:"state"`
	// The OCID of the tag namespace.
	TagNamespaceId string `pulumi:"tagNamespaceId"`
	// Date and time the tag was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// Validates a definedTag value. Each validator performs validation steps in addition to the standard validation for definedTag values. For more information, see [Limits on Tags](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/taggingoverview.htm#Limits).
	Validators []GetTagsTagValidator `pulumi:"validators"`
}

// GetTagsTagInput is an input type that accepts GetTagsTagArgs and GetTagsTagOutput values.
// You can construct a concrete instance of `GetTagsTagInput` via:
//
//	GetTagsTagArgs{...}
type GetTagsTagInput interface {
	pulumi.Input

	ToGetTagsTagOutput() GetTagsTagOutput
	ToGetTagsTagOutputWithContext(context.Context) GetTagsTagOutput
}

type GetTagsTagArgs struct {
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// The description you assign to the tag.
	Description pulumi.StringInput `pulumi:"description"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The OCID of the tag definition.
	Id pulumi.StringInput `pulumi:"id"`
	// Indicates whether the tag is enabled for cost tracking.
	IsCostTracking pulumi.BoolInput `pulumi:"isCostTracking"`
	// Indicates whether the tag is retired. See [Retiring Key Definitions and Namespace Definitions](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/taggingoverview.htm#Retiring).
	IsRetired pulumi.BoolInput `pulumi:"isRetired"`
	// The name assigned to the tag during creation. This is the tag key definition. The name must be unique within the tag namespace and cannot be changed.
	Name pulumi.StringInput `pulumi:"name"`
	// A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
	State pulumi.StringInput `pulumi:"state"`
	// The OCID of the tag namespace.
	TagNamespaceId pulumi.StringInput `pulumi:"tagNamespaceId"`
	// Date and time the tag was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// Validates a definedTag value. Each validator performs validation steps in addition to the standard validation for definedTag values. For more information, see [Limits on Tags](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/taggingoverview.htm#Limits).
	Validators GetTagsTagValidatorArrayInput `pulumi:"validators"`
}

func (GetTagsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagsTag)(nil)).Elem()
}

func (i GetTagsTagArgs) ToGetTagsTagOutput() GetTagsTagOutput {
	return i.ToGetTagsTagOutputWithContext(context.Background())
}

func (i GetTagsTagArgs) ToGetTagsTagOutputWithContext(ctx context.Context) GetTagsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagsTagOutput)
}

// GetTagsTagArrayInput is an input type that accepts GetTagsTagArray and GetTagsTagArrayOutput values.
// You can construct a concrete instance of `GetTagsTagArrayInput` via:
//
//	GetTagsTagArray{ GetTagsTagArgs{...} }
type GetTagsTagArrayInput interface {
	pulumi.Input

	ToGetTagsTagArrayOutput() GetTagsTagArrayOutput
	ToGetTagsTagArrayOutputWithContext(context.Context) GetTagsTagArrayOutput
}

type GetTagsTagArray []GetTagsTagInput

func (GetTagsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagsTag)(nil)).Elem()
}

func (i GetTagsTagArray) ToGetTagsTagArrayOutput() GetTagsTagArrayOutput {
	return i.ToGetTagsTagArrayOutputWithContext(context.Background())
}

func (i GetTagsTagArray) ToGetTagsTagArrayOutputWithContext(ctx context.Context) GetTagsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagsTagArrayOutput)
}

type GetTagsTagOutput struct{ *pulumi.OutputState }

func (GetTagsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagsTag)(nil)).Elem()
}

func (o GetTagsTagOutput) ToGetTagsTagOutput() GetTagsTagOutput {
	return o
}

func (o GetTagsTagOutput) ToGetTagsTagOutputWithContext(ctx context.Context) GetTagsTagOutput {
	return o
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o GetTagsTagOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetTagsTag) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// The description you assign to the tag.
func (o GetTagsTagOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagsTag) string { return v.Description }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o GetTagsTagOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetTagsTag) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The OCID of the tag definition.
func (o GetTagsTagOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagsTag) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates whether the tag is enabled for cost tracking.
func (o GetTagsTagOutput) IsCostTracking() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTagsTag) bool { return v.IsCostTracking }).(pulumi.BoolOutput)
}

// Indicates whether the tag is retired. See [Retiring Key Definitions and Namespace Definitions](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/taggingoverview.htm#Retiring).
func (o GetTagsTagOutput) IsRetired() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTagsTag) bool { return v.IsRetired }).(pulumi.BoolOutput)
}

// The name assigned to the tag during creation. This is the tag key definition. The name must be unique within the tag namespace and cannot be changed.
func (o GetTagsTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagsTag) string { return v.Name }).(pulumi.StringOutput)
}

// A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
func (o GetTagsTagOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagsTag) string { return v.State }).(pulumi.StringOutput)
}

// The OCID of the tag namespace.
func (o GetTagsTagOutput) TagNamespaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagsTag) string { return v.TagNamespaceId }).(pulumi.StringOutput)
}

// Date and time the tag was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
func (o GetTagsTagOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagsTag) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Validates a definedTag value. Each validator performs validation steps in addition to the standard validation for definedTag values. For more information, see [Limits on Tags](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/taggingoverview.htm#Limits).
func (o GetTagsTagOutput) Validators() GetTagsTagValidatorArrayOutput {
	return o.ApplyT(func(v GetTagsTag) []GetTagsTagValidator { return v.Validators }).(GetTagsTagValidatorArrayOutput)
}

type GetTagsTagArrayOutput struct{ *pulumi.OutputState }

func (GetTagsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagsTag)(nil)).Elem()
}

func (o GetTagsTagArrayOutput) ToGetTagsTagArrayOutput() GetTagsTagArrayOutput {
	return o
}

func (o GetTagsTagArrayOutput) ToGetTagsTagArrayOutputWithContext(ctx context.Context) GetTagsTagArrayOutput {
	return o
}

func (o GetTagsTagArrayOutput) Index(i pulumi.IntInput) GetTagsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTagsTag {
		return vs[0].([]GetTagsTag)[vs[1].(int)]
	}).(GetTagsTagOutput)
}

type GetTagsTagValidator struct {
	// Specifies the type of validation: a static value (no validation) or a list.
	ValidatorType string `pulumi:"validatorType"`
	// The list of allowed values for a definedTag value.
	Values []string `pulumi:"values"`
}

// GetTagsTagValidatorInput is an input type that accepts GetTagsTagValidatorArgs and GetTagsTagValidatorOutput values.
// You can construct a concrete instance of `GetTagsTagValidatorInput` via:
//
//	GetTagsTagValidatorArgs{...}
type GetTagsTagValidatorInput interface {
	pulumi.Input

	ToGetTagsTagValidatorOutput() GetTagsTagValidatorOutput
	ToGetTagsTagValidatorOutputWithContext(context.Context) GetTagsTagValidatorOutput
}

type GetTagsTagValidatorArgs struct {
	// Specifies the type of validation: a static value (no validation) or a list.
	ValidatorType pulumi.StringInput `pulumi:"validatorType"`
	// The list of allowed values for a definedTag value.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetTagsTagValidatorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagsTagValidator)(nil)).Elem()
}

func (i GetTagsTagValidatorArgs) ToGetTagsTagValidatorOutput() GetTagsTagValidatorOutput {
	return i.ToGetTagsTagValidatorOutputWithContext(context.Background())
}

func (i GetTagsTagValidatorArgs) ToGetTagsTagValidatorOutputWithContext(ctx context.Context) GetTagsTagValidatorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagsTagValidatorOutput)
}

// GetTagsTagValidatorArrayInput is an input type that accepts GetTagsTagValidatorArray and GetTagsTagValidatorArrayOutput values.
// You can construct a concrete instance of `GetTagsTagValidatorArrayInput` via:
//
//	GetTagsTagValidatorArray{ GetTagsTagValidatorArgs{...} }
type GetTagsTagValidatorArrayInput interface {
	pulumi.Input

	ToGetTagsTagValidatorArrayOutput() GetTagsTagValidatorArrayOutput
	ToGetTagsTagValidatorArrayOutputWithContext(context.Context) GetTagsTagValidatorArrayOutput
}

type GetTagsTagValidatorArray []GetTagsTagValidatorInput

func (GetTagsTagValidatorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagsTagValidator)(nil)).Elem()
}

func (i GetTagsTagValidatorArray) ToGetTagsTagValidatorArrayOutput() GetTagsTagValidatorArrayOutput {
	return i.ToGetTagsTagValidatorArrayOutputWithContext(context.Background())
}

func (i GetTagsTagValidatorArray) ToGetTagsTagValidatorArrayOutputWithContext(ctx context.Context) GetTagsTagValidatorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagsTagValidatorArrayOutput)
}

type GetTagsTagValidatorOutput struct{ *pulumi.OutputState }

func (GetTagsTagValidatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagsTagValidator)(nil)).Elem()
}

func (o GetTagsTagValidatorOutput) ToGetTagsTagValidatorOutput() GetTagsTagValidatorOutput {
	return o
}

func (o GetTagsTagValidatorOutput) ToGetTagsTagValidatorOutputWithContext(ctx context.Context) GetTagsTagValidatorOutput {
	return o
}

// Specifies the type of validation: a static value (no validation) or a list.
func (o GetTagsTagValidatorOutput) ValidatorType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagsTagValidator) string { return v.ValidatorType }).(pulumi.StringOutput)
}

// The list of allowed values for a definedTag value.
func (o GetTagsTagValidatorOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTagsTagValidator) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetTagsTagValidatorArrayOutput struct{ *pulumi.OutputState }

func (GetTagsTagValidatorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagsTagValidator)(nil)).Elem()
}

func (o GetTagsTagValidatorArrayOutput) ToGetTagsTagValidatorArrayOutput() GetTagsTagValidatorArrayOutput {
	return o
}

func (o GetTagsTagValidatorArrayOutput) ToGetTagsTagValidatorArrayOutputWithContext(ctx context.Context) GetTagsTagValidatorArrayOutput {
	return o
}

func (o GetTagsTagValidatorArrayOutput) Index(i pulumi.IntInput) GetTagsTagValidatorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTagsTagValidator {
		return vs[0].([]GetTagsTagValidator)[vs[1].(int)]
	}).(GetTagsTagValidatorOutput)
}

type GetUserCapability struct {
	// Indicates if the user can use API keys.
	CanUseApiKeys bool `pulumi:"canUseApiKeys"`
	// Indicates if the user can use SWIFT passwords / auth tokens.
	CanUseAuthTokens bool `pulumi:"canUseAuthTokens"`
	// Indicates if the user can log in to the console.
	CanUseConsolePassword bool `pulumi:"canUseConsolePassword"`
	// Indicates if the user can use SigV4 symmetric keys.
	CanUseCustomerSecretKeys bool `pulumi:"canUseCustomerSecretKeys"`
	// Indicates if the user can use DB passwords.
	CanUseDbCredentials bool `pulumi:"canUseDbCredentials"`
	// Indicates if the user can use OAuth2 credentials and tokens.
	CanUseOauth2clientCredentials bool `pulumi:"canUseOauth2clientCredentials"`
	// Indicates if the user can use SMTP passwords.
	CanUseSmtpCredentials bool `pulumi:"canUseSmtpCredentials"`
}

// GetUserCapabilityInput is an input type that accepts GetUserCapabilityArgs and GetUserCapabilityOutput values.
// You can construct a concrete instance of `GetUserCapabilityInput` via:
//
//	GetUserCapabilityArgs{...}
type GetUserCapabilityInput interface {
	pulumi.Input

	ToGetUserCapabilityOutput() GetUserCapabilityOutput
	ToGetUserCapabilityOutputWithContext(context.Context) GetUserCapabilityOutput
}

type GetUserCapabilityArgs struct {
	// Indicates if the user can use API keys.
	CanUseApiKeys pulumi.BoolInput `pulumi:"canUseApiKeys"`
	// Indicates if the user can use SWIFT passwords / auth tokens.
	CanUseAuthTokens pulumi.BoolInput `pulumi:"canUseAuthTokens"`
	// Indicates if the user can log in to the console.
	CanUseConsolePassword pulumi.BoolInput `pulumi:"canUseConsolePassword"`
	// Indicates if the user can use SigV4 symmetric keys.
	CanUseCustomerSecretKeys pulumi.BoolInput `pulumi:"canUseCustomerSecretKeys"`
	// Indicates if the user can use DB passwords.
	CanUseDbCredentials pulumi.BoolInput `pulumi:"canUseDbCredentials"`
	// Indicates if the user can use OAuth2 credentials and tokens.
	CanUseOauth2clientCredentials pulumi.BoolInput `pulumi:"canUseOauth2clientCredentials"`
	// Indicates if the user can use SMTP passwords.
	CanUseSmtpCredentials pulumi.BoolInput `pulumi:"canUseSmtpCredentials"`
}

func (GetUserCapabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserCapability)(nil)).Elem()
}

func (i GetUserCapabilityArgs) ToGetUserCapabilityOutput() GetUserCapabilityOutput {
	return i.ToGetUserCapabilityOutputWithContext(context.Background())
}

func (i GetUserCapabilityArgs) ToGetUserCapabilityOutputWithContext(ctx context.Context) GetUserCapabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserCapabilityOutput)
}

// GetUserCapabilityArrayInput is an input type that accepts GetUserCapabilityArray and GetUserCapabilityArrayOutput values.
// You can construct a concrete instance of `GetUserCapabilityArrayInput` via:
//
//	GetUserCapabilityArray{ GetUserCapabilityArgs{...} }
type GetUserCapabilityArrayInput interface {
	pulumi.Input

	ToGetUserCapabilityArrayOutput() GetUserCapabilityArrayOutput
	ToGetUserCapabilityArrayOutputWithContext(context.Context) GetUserCapabilityArrayOutput
}

type GetUserCapabilityArray []GetUserCapabilityInput

func (GetUserCapabilityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserCapability)(nil)).Elem()
}

func (i GetUserCapabilityArray) ToGetUserCapabilityArrayOutput() GetUserCapabilityArrayOutput {
	return i.ToGetUserCapabilityArrayOutputWithContext(context.Background())
}

func (i GetUserCapabilityArray) ToGetUserCapabilityArrayOutputWithContext(ctx context.Context) GetUserCapabilityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserCapabilityArrayOutput)
}

type GetUserCapabilityOutput struct{ *pulumi.OutputState }

func (GetUserCapabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserCapability)(nil)).Elem()
}

func (o GetUserCapabilityOutput) ToGetUserCapabilityOutput() GetUserCapabilityOutput {
	return o
}

func (o GetUserCapabilityOutput) ToGetUserCapabilityOutputWithContext(ctx context.Context) GetUserCapabilityOutput {
	return o
}

// Indicates if the user can use API keys.
func (o GetUserCapabilityOutput) CanUseApiKeys() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUserCapability) bool { return v.CanUseApiKeys }).(pulumi.BoolOutput)
}

// Indicates if the user can use SWIFT passwords / auth tokens.
func (o GetUserCapabilityOutput) CanUseAuthTokens() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUserCapability) bool { return v.CanUseAuthTokens }).(pulumi.BoolOutput)
}

// Indicates if the user can log in to the console.
func (o GetUserCapabilityOutput) CanUseConsolePassword() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUserCapability) bool { return v.CanUseConsolePassword }).(pulumi.BoolOutput)
}

// Indicates if the user can use SigV4 symmetric keys.
func (o GetUserCapabilityOutput) CanUseCustomerSecretKeys() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUserCapability) bool { return v.CanUseCustomerSecretKeys }).(pulumi.BoolOutput)
}

// Indicates if the user can use DB passwords.
func (o GetUserCapabilityOutput) CanUseDbCredentials() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUserCapability) bool { return v.CanUseDbCredentials }).(pulumi.BoolOutput)
}

// Indicates if the user can use OAuth2 credentials and tokens.
func (o GetUserCapabilityOutput) CanUseOauth2clientCredentials() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUserCapability) bool { return v.CanUseOauth2clientCredentials }).(pulumi.BoolOutput)
}

// Indicates if the user can use SMTP passwords.
func (o GetUserCapabilityOutput) CanUseSmtpCredentials() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUserCapability) bool { return v.CanUseSmtpCredentials }).(pulumi.BoolOutput)
}

type GetUserCapabilityArrayOutput struct{ *pulumi.OutputState }

func (GetUserCapabilityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserCapability)(nil)).Elem()
}

func (o GetUserCapabilityArrayOutput) ToGetUserCapabilityArrayOutput() GetUserCapabilityArrayOutput {
	return o
}

func (o GetUserCapabilityArrayOutput) ToGetUserCapabilityArrayOutputWithContext(ctx context.Context) GetUserCapabilityArrayOutput {
	return o
}

func (o GetUserCapabilityArrayOutput) Index(i pulumi.IntInput) GetUserCapabilityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserCapability {
		return vs[0].([]GetUserCapability)[vs[1].(int)]
	}).(GetUserCapabilityOutput)
}

type GetUserGroupMembershipsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetUserGroupMembershipsFilterInput is an input type that accepts GetUserGroupMembershipsFilterArgs and GetUserGroupMembershipsFilterOutput values.
// You can construct a concrete instance of `GetUserGroupMembershipsFilterInput` via:
//
//	GetUserGroupMembershipsFilterArgs{...}
type GetUserGroupMembershipsFilterInput interface {
	pulumi.Input

	ToGetUserGroupMembershipsFilterOutput() GetUserGroupMembershipsFilterOutput
	ToGetUserGroupMembershipsFilterOutputWithContext(context.Context) GetUserGroupMembershipsFilterOutput
}

type GetUserGroupMembershipsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetUserGroupMembershipsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserGroupMembershipsFilter)(nil)).Elem()
}

func (i GetUserGroupMembershipsFilterArgs) ToGetUserGroupMembershipsFilterOutput() GetUserGroupMembershipsFilterOutput {
	return i.ToGetUserGroupMembershipsFilterOutputWithContext(context.Background())
}

func (i GetUserGroupMembershipsFilterArgs) ToGetUserGroupMembershipsFilterOutputWithContext(ctx context.Context) GetUserGroupMembershipsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserGroupMembershipsFilterOutput)
}

// GetUserGroupMembershipsFilterArrayInput is an input type that accepts GetUserGroupMembershipsFilterArray and GetUserGroupMembershipsFilterArrayOutput values.
// You can construct a concrete instance of `GetUserGroupMembershipsFilterArrayInput` via:
//
//	GetUserGroupMembershipsFilterArray{ GetUserGroupMembershipsFilterArgs{...} }
type GetUserGroupMembershipsFilterArrayInput interface {
	pulumi.Input

	ToGetUserGroupMembershipsFilterArrayOutput() GetUserGroupMembershipsFilterArrayOutput
	ToGetUserGroupMembershipsFilterArrayOutputWithContext(context.Context) GetUserGroupMembershipsFilterArrayOutput
}

type GetUserGroupMembershipsFilterArray []GetUserGroupMembershipsFilterInput

func (GetUserGroupMembershipsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserGroupMembershipsFilter)(nil)).Elem()
}

func (i GetUserGroupMembershipsFilterArray) ToGetUserGroupMembershipsFilterArrayOutput() GetUserGroupMembershipsFilterArrayOutput {
	return i.ToGetUserGroupMembershipsFilterArrayOutputWithContext(context.Background())
}

func (i GetUserGroupMembershipsFilterArray) ToGetUserGroupMembershipsFilterArrayOutputWithContext(ctx context.Context) GetUserGroupMembershipsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserGroupMembershipsFilterArrayOutput)
}

type GetUserGroupMembershipsFilterOutput struct{ *pulumi.OutputState }

func (GetUserGroupMembershipsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserGroupMembershipsFilter)(nil)).Elem()
}

func (o GetUserGroupMembershipsFilterOutput) ToGetUserGroupMembershipsFilterOutput() GetUserGroupMembershipsFilterOutput {
	return o
}

func (o GetUserGroupMembershipsFilterOutput) ToGetUserGroupMembershipsFilterOutputWithContext(ctx context.Context) GetUserGroupMembershipsFilterOutput {
	return o
}

func (o GetUserGroupMembershipsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupMembershipsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetUserGroupMembershipsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetUserGroupMembershipsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetUserGroupMembershipsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserGroupMembershipsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetUserGroupMembershipsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetUserGroupMembershipsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserGroupMembershipsFilter)(nil)).Elem()
}

func (o GetUserGroupMembershipsFilterArrayOutput) ToGetUserGroupMembershipsFilterArrayOutput() GetUserGroupMembershipsFilterArrayOutput {
	return o
}

func (o GetUserGroupMembershipsFilterArrayOutput) ToGetUserGroupMembershipsFilterArrayOutputWithContext(ctx context.Context) GetUserGroupMembershipsFilterArrayOutput {
	return o
}

func (o GetUserGroupMembershipsFilterArrayOutput) Index(i pulumi.IntInput) GetUserGroupMembershipsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserGroupMembershipsFilter {
		return vs[0].([]GetUserGroupMembershipsFilter)[vs[1].(int)]
	}).(GetUserGroupMembershipsFilterOutput)
}

type GetUserGroupMembershipsMembership struct {
	// The OCID of the compartment (remember that the tenancy is simply the root compartment).
	CompartmentId string `pulumi:"compartmentId"`
	// The OCID of the group.
	GroupId string `pulumi:"groupId"`
	// The OCID of the membership.
	Id string `pulumi:"id"`
	// The detailed status of INACTIVE lifecycleState.
	InactiveState string `pulumi:"inactiveState"`
	// The membership's current state.
	State string `pulumi:"state"`
	// Date and time the membership was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The OCID of the user.
	UserId string `pulumi:"userId"`
}

// GetUserGroupMembershipsMembershipInput is an input type that accepts GetUserGroupMembershipsMembershipArgs and GetUserGroupMembershipsMembershipOutput values.
// You can construct a concrete instance of `GetUserGroupMembershipsMembershipInput` via:
//
//	GetUserGroupMembershipsMembershipArgs{...}
type GetUserGroupMembershipsMembershipInput interface {
	pulumi.Input

	ToGetUserGroupMembershipsMembershipOutput() GetUserGroupMembershipsMembershipOutput
	ToGetUserGroupMembershipsMembershipOutputWithContext(context.Context) GetUserGroupMembershipsMembershipOutput
}

type GetUserGroupMembershipsMembershipArgs struct {
	// The OCID of the compartment (remember that the tenancy is simply the root compartment).
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The OCID of the group.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// The OCID of the membership.
	Id pulumi.StringInput `pulumi:"id"`
	// The detailed status of INACTIVE lifecycleState.
	InactiveState pulumi.StringInput `pulumi:"inactiveState"`
	// The membership's current state.
	State pulumi.StringInput `pulumi:"state"`
	// Date and time the membership was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The OCID of the user.
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetUserGroupMembershipsMembershipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserGroupMembershipsMembership)(nil)).Elem()
}

func (i GetUserGroupMembershipsMembershipArgs) ToGetUserGroupMembershipsMembershipOutput() GetUserGroupMembershipsMembershipOutput {
	return i.ToGetUserGroupMembershipsMembershipOutputWithContext(context.Background())
}

func (i GetUserGroupMembershipsMembershipArgs) ToGetUserGroupMembershipsMembershipOutputWithContext(ctx context.Context) GetUserGroupMembershipsMembershipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserGroupMembershipsMembershipOutput)
}

// GetUserGroupMembershipsMembershipArrayInput is an input type that accepts GetUserGroupMembershipsMembershipArray and GetUserGroupMembershipsMembershipArrayOutput values.
// You can construct a concrete instance of `GetUserGroupMembershipsMembershipArrayInput` via:
//
//	GetUserGroupMembershipsMembershipArray{ GetUserGroupMembershipsMembershipArgs{...} }
type GetUserGroupMembershipsMembershipArrayInput interface {
	pulumi.Input

	ToGetUserGroupMembershipsMembershipArrayOutput() GetUserGroupMembershipsMembershipArrayOutput
	ToGetUserGroupMembershipsMembershipArrayOutputWithContext(context.Context) GetUserGroupMembershipsMembershipArrayOutput
}

type GetUserGroupMembershipsMembershipArray []GetUserGroupMembershipsMembershipInput

func (GetUserGroupMembershipsMembershipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserGroupMembershipsMembership)(nil)).Elem()
}

func (i GetUserGroupMembershipsMembershipArray) ToGetUserGroupMembershipsMembershipArrayOutput() GetUserGroupMembershipsMembershipArrayOutput {
	return i.ToGetUserGroupMembershipsMembershipArrayOutputWithContext(context.Background())
}

func (i GetUserGroupMembershipsMembershipArray) ToGetUserGroupMembershipsMembershipArrayOutputWithContext(ctx context.Context) GetUserGroupMembershipsMembershipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserGroupMembershipsMembershipArrayOutput)
}

type GetUserGroupMembershipsMembershipOutput struct{ *pulumi.OutputState }

func (GetUserGroupMembershipsMembershipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserGroupMembershipsMembership)(nil)).Elem()
}

func (o GetUserGroupMembershipsMembershipOutput) ToGetUserGroupMembershipsMembershipOutput() GetUserGroupMembershipsMembershipOutput {
	return o
}

func (o GetUserGroupMembershipsMembershipOutput) ToGetUserGroupMembershipsMembershipOutputWithContext(ctx context.Context) GetUserGroupMembershipsMembershipOutput {
	return o
}

// The OCID of the compartment (remember that the tenancy is simply the root compartment).
func (o GetUserGroupMembershipsMembershipOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupMembershipsMembership) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The OCID of the group.
func (o GetUserGroupMembershipsMembershipOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupMembershipsMembership) string { return v.GroupId }).(pulumi.StringOutput)
}

// The OCID of the membership.
func (o GetUserGroupMembershipsMembershipOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupMembershipsMembership) string { return v.Id }).(pulumi.StringOutput)
}

// The detailed status of INACTIVE lifecycleState.
func (o GetUserGroupMembershipsMembershipOutput) InactiveState() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupMembershipsMembership) string { return v.InactiveState }).(pulumi.StringOutput)
}

// The membership's current state.
func (o GetUserGroupMembershipsMembershipOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupMembershipsMembership) string { return v.State }).(pulumi.StringOutput)
}

// Date and time the membership was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
func (o GetUserGroupMembershipsMembershipOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupMembershipsMembership) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The OCID of the user.
func (o GetUserGroupMembershipsMembershipOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupMembershipsMembership) string { return v.UserId }).(pulumi.StringOutput)
}

type GetUserGroupMembershipsMembershipArrayOutput struct{ *pulumi.OutputState }

func (GetUserGroupMembershipsMembershipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserGroupMembershipsMembership)(nil)).Elem()
}

func (o GetUserGroupMembershipsMembershipArrayOutput) ToGetUserGroupMembershipsMembershipArrayOutput() GetUserGroupMembershipsMembershipArrayOutput {
	return o
}

func (o GetUserGroupMembershipsMembershipArrayOutput) ToGetUserGroupMembershipsMembershipArrayOutputWithContext(ctx context.Context) GetUserGroupMembershipsMembershipArrayOutput {
	return o
}

func (o GetUserGroupMembershipsMembershipArrayOutput) Index(i pulumi.IntInput) GetUserGroupMembershipsMembershipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserGroupMembershipsMembership {
		return vs[0].([]GetUserGroupMembershipsMembership)[vs[1].(int)]
	}).(GetUserGroupMembershipsMembershipOutput)
}

type GetUsersFilter struct {
	// A filter to only return resources that match the given name exactly.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetUsersFilterInput is an input type that accepts GetUsersFilterArgs and GetUsersFilterOutput values.
// You can construct a concrete instance of `GetUsersFilterInput` via:
//
//	GetUsersFilterArgs{...}
type GetUsersFilterInput interface {
	pulumi.Input

	ToGetUsersFilterOutput() GetUsersFilterOutput
	ToGetUsersFilterOutputWithContext(context.Context) GetUsersFilterOutput
}

type GetUsersFilterArgs struct {
	// A filter to only return resources that match the given name exactly.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetUsersFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersFilter)(nil)).Elem()
}

func (i GetUsersFilterArgs) ToGetUsersFilterOutput() GetUsersFilterOutput {
	return i.ToGetUsersFilterOutputWithContext(context.Background())
}

func (i GetUsersFilterArgs) ToGetUsersFilterOutputWithContext(ctx context.Context) GetUsersFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersFilterOutput)
}

// GetUsersFilterArrayInput is an input type that accepts GetUsersFilterArray and GetUsersFilterArrayOutput values.
// You can construct a concrete instance of `GetUsersFilterArrayInput` via:
//
//	GetUsersFilterArray{ GetUsersFilterArgs{...} }
type GetUsersFilterArrayInput interface {
	pulumi.Input

	ToGetUsersFilterArrayOutput() GetUsersFilterArrayOutput
	ToGetUsersFilterArrayOutputWithContext(context.Context) GetUsersFilterArrayOutput
}

type GetUsersFilterArray []GetUsersFilterInput

func (GetUsersFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersFilter)(nil)).Elem()
}

func (i GetUsersFilterArray) ToGetUsersFilterArrayOutput() GetUsersFilterArrayOutput {
	return i.ToGetUsersFilterArrayOutputWithContext(context.Background())
}

func (i GetUsersFilterArray) ToGetUsersFilterArrayOutputWithContext(ctx context.Context) GetUsersFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersFilterArrayOutput)
}

type GetUsersFilterOutput struct{ *pulumi.OutputState }

func (GetUsersFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersFilter)(nil)).Elem()
}

func (o GetUsersFilterOutput) ToGetUsersFilterOutput() GetUsersFilterOutput {
	return o
}

func (o GetUsersFilterOutput) ToGetUsersFilterOutputWithContext(ctx context.Context) GetUsersFilterOutput {
	return o
}

// A filter to only return resources that match the given name exactly.
func (o GetUsersFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetUsersFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetUsersFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetUsersFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUsersFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetUsersFilterArrayOutput struct{ *pulumi.OutputState }

func (GetUsersFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersFilter)(nil)).Elem()
}

func (o GetUsersFilterArrayOutput) ToGetUsersFilterArrayOutput() GetUsersFilterArrayOutput {
	return o
}

func (o GetUsersFilterArrayOutput) ToGetUsersFilterArrayOutputWithContext(ctx context.Context) GetUsersFilterArrayOutput {
	return o
}

func (o GetUsersFilterArrayOutput) Index(i pulumi.IntInput) GetUsersFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsersFilter {
		return vs[0].([]GetUsersFilter)[vs[1].(int)]
	}).(GetUsersFilterOutput)
}

type GetUsersUser struct {
	// Properties indicating how the user is allowed to authenticate.
	Capabilities []GetUsersUserCapability `pulumi:"capabilities"`
	// The OCID of the compartment (remember that the tenancy is simply the root compartment).
	CompartmentId string `pulumi:"compartmentId"`
	// DB username of the DB credential. Has to be unique across the tenancy.
	DbUserName string `pulumi:"dbUserName"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The description you assign to the user. Does not have to be unique, and it's changeable.
	Description string `pulumi:"description"`
	// The email address you assign to the user. The email address must be unique across all users in the tenancy.
	Email string `pulumi:"email"`
	// Whether the email address has been validated.
	EmailVerified bool `pulumi:"emailVerified"`
	// The id of a user in the identity provider.
	ExternalIdentifier string `pulumi:"externalIdentifier"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the user.
	Id string `pulumi:"id"`
	// The id of the identity provider.
	IdentityProviderId string `pulumi:"identityProviderId"`
	// Returned only if the user's `lifecycleState` is INACTIVE. A 16-bit value showing the reason why the user is inactive:
	// * bit 0: SUSPENDED (reserved for future use)
	// * bit 1: DISABLED (reserved for future use)
	// * bit 2: BLOCKED (the user has exceeded the maximum number of failed login attempts for the Console)
	InactiveState string `pulumi:"inactiveState"`
	// The date and time of when the user most recently logged in the format defined by RFC3339 (ex. `2016-08-25T21:10:29.600Z`). If there is no login history, this field is null.
	LastSuccessfulLoginTime string `pulumi:"lastSuccessfulLoginTime"`
	// A filter to only return resources that match the given name exactly.
	Name string `pulumi:"name"`
	// The date and time of when the user most recently logged in the format defined by RFC3339 (ex. `2016-08-25T21:10:29.600Z`). If there is no login history, this field is null.
	PreviousSuccessfulLoginTime string `pulumi:"previousSuccessfulLoginTime"`
	// A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
	State string `pulumi:"state"`
	// Date and time the user was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
}

// GetUsersUserInput is an input type that accepts GetUsersUserArgs and GetUsersUserOutput values.
// You can construct a concrete instance of `GetUsersUserInput` via:
//
//	GetUsersUserArgs{...}
type GetUsersUserInput interface {
	pulumi.Input

	ToGetUsersUserOutput() GetUsersUserOutput
	ToGetUsersUserOutputWithContext(context.Context) GetUsersUserOutput
}

type GetUsersUserArgs struct {
	// Properties indicating how the user is allowed to authenticate.
	Capabilities GetUsersUserCapabilityArrayInput `pulumi:"capabilities"`
	// The OCID of the compartment (remember that the tenancy is simply the root compartment).
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// DB username of the DB credential. Has to be unique across the tenancy.
	DbUserName pulumi.StringInput `pulumi:"dbUserName"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// The description you assign to the user. Does not have to be unique, and it's changeable.
	Description pulumi.StringInput `pulumi:"description"`
	// The email address you assign to the user. The email address must be unique across all users in the tenancy.
	Email pulumi.StringInput `pulumi:"email"`
	// Whether the email address has been validated.
	EmailVerified pulumi.BoolInput `pulumi:"emailVerified"`
	// The id of a user in the identity provider.
	ExternalIdentifier pulumi.StringInput `pulumi:"externalIdentifier"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The OCID of the user.
	Id pulumi.StringInput `pulumi:"id"`
	// The id of the identity provider.
	IdentityProviderId pulumi.StringInput `pulumi:"identityProviderId"`
	// Returned only if the user's `lifecycleState` is INACTIVE. A 16-bit value showing the reason why the user is inactive:
	// * bit 0: SUSPENDED (reserved for future use)
	// * bit 1: DISABLED (reserved for future use)
	// * bit 2: BLOCKED (the user has exceeded the maximum number of failed login attempts for the Console)
	InactiveState pulumi.StringInput `pulumi:"inactiveState"`
	// The date and time of when the user most recently logged in the format defined by RFC3339 (ex. `2016-08-25T21:10:29.600Z`). If there is no login history, this field is null.
	LastSuccessfulLoginTime pulumi.StringInput `pulumi:"lastSuccessfulLoginTime"`
	// A filter to only return resources that match the given name exactly.
	Name pulumi.StringInput `pulumi:"name"`
	// The date and time of when the user most recently logged in the format defined by RFC3339 (ex. `2016-08-25T21:10:29.600Z`). If there is no login history, this field is null.
	PreviousSuccessfulLoginTime pulumi.StringInput `pulumi:"previousSuccessfulLoginTime"`
	// A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
	State pulumi.StringInput `pulumi:"state"`
	// Date and time the user was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
}

func (GetUsersUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUser)(nil)).Elem()
}

func (i GetUsersUserArgs) ToGetUsersUserOutput() GetUsersUserOutput {
	return i.ToGetUsersUserOutputWithContext(context.Background())
}

func (i GetUsersUserArgs) ToGetUsersUserOutputWithContext(ctx context.Context) GetUsersUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserOutput)
}

// GetUsersUserArrayInput is an input type that accepts GetUsersUserArray and GetUsersUserArrayOutput values.
// You can construct a concrete instance of `GetUsersUserArrayInput` via:
//
//	GetUsersUserArray{ GetUsersUserArgs{...} }
type GetUsersUserArrayInput interface {
	pulumi.Input

	ToGetUsersUserArrayOutput() GetUsersUserArrayOutput
	ToGetUsersUserArrayOutputWithContext(context.Context) GetUsersUserArrayOutput
}

type GetUsersUserArray []GetUsersUserInput

func (GetUsersUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUser)(nil)).Elem()
}

func (i GetUsersUserArray) ToGetUsersUserArrayOutput() GetUsersUserArrayOutput {
	return i.ToGetUsersUserArrayOutputWithContext(context.Background())
}

func (i GetUsersUserArray) ToGetUsersUserArrayOutputWithContext(ctx context.Context) GetUsersUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserArrayOutput)
}

type GetUsersUserOutput struct{ *pulumi.OutputState }

func (GetUsersUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUser)(nil)).Elem()
}

func (o GetUsersUserOutput) ToGetUsersUserOutput() GetUsersUserOutput {
	return o
}

func (o GetUsersUserOutput) ToGetUsersUserOutputWithContext(ctx context.Context) GetUsersUserOutput {
	return o
}

// Properties indicating how the user is allowed to authenticate.
func (o GetUsersUserOutput) Capabilities() GetUsersUserCapabilityArrayOutput {
	return o.ApplyT(func(v GetUsersUser) []GetUsersUserCapability { return v.Capabilities }).(GetUsersUserCapabilityArrayOutput)
}

// The OCID of the compartment (remember that the tenancy is simply the root compartment).
func (o GetUsersUserOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// DB username of the DB credential. Has to be unique across the tenancy.
func (o GetUsersUserOutput) DbUserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.DbUserName }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o GetUsersUserOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetUsersUser) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// The description you assign to the user. Does not have to be unique, and it's changeable.
func (o GetUsersUserOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Description }).(pulumi.StringOutput)
}

// The email address you assign to the user. The email address must be unique across all users in the tenancy.
func (o GetUsersUserOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Email }).(pulumi.StringOutput)
}

// Whether the email address has been validated.
func (o GetUsersUserOutput) EmailVerified() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUsersUser) bool { return v.EmailVerified }).(pulumi.BoolOutput)
}

// The id of a user in the identity provider.
func (o GetUsersUserOutput) ExternalIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.ExternalIdentifier }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o GetUsersUserOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetUsersUser) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The OCID of the user.
func (o GetUsersUserOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Id }).(pulumi.StringOutput)
}

// The id of the identity provider.
func (o GetUsersUserOutput) IdentityProviderId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.IdentityProviderId }).(pulumi.StringOutput)
}

// Returned only if the user's `lifecycleState` is INACTIVE. A 16-bit value showing the reason why the user is inactive:
// * bit 0: SUSPENDED (reserved for future use)
// * bit 1: DISABLED (reserved for future use)
// * bit 2: BLOCKED (the user has exceeded the maximum number of failed login attempts for the Console)
func (o GetUsersUserOutput) InactiveState() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.InactiveState }).(pulumi.StringOutput)
}

// The date and time of when the user most recently logged in the format defined by RFC3339 (ex. `2016-08-25T21:10:29.600Z`). If there is no login history, this field is null.
func (o GetUsersUserOutput) LastSuccessfulLoginTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.LastSuccessfulLoginTime }).(pulumi.StringOutput)
}

// A filter to only return resources that match the given name exactly.
func (o GetUsersUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Name }).(pulumi.StringOutput)
}

// The date and time of when the user most recently logged in the format defined by RFC3339 (ex. `2016-08-25T21:10:29.600Z`). If there is no login history, this field is null.
func (o GetUsersUserOutput) PreviousSuccessfulLoginTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.PreviousSuccessfulLoginTime }).(pulumi.StringOutput)
}

// A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
func (o GetUsersUserOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.State }).(pulumi.StringOutput)
}

// Date and time the user was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
func (o GetUsersUserOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.TimeCreated }).(pulumi.StringOutput)
}

type GetUsersUserArrayOutput struct{ *pulumi.OutputState }

func (GetUsersUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUser)(nil)).Elem()
}

func (o GetUsersUserArrayOutput) ToGetUsersUserArrayOutput() GetUsersUserArrayOutput {
	return o
}

func (o GetUsersUserArrayOutput) ToGetUsersUserArrayOutputWithContext(ctx context.Context) GetUsersUserArrayOutput {
	return o
}

func (o GetUsersUserArrayOutput) Index(i pulumi.IntInput) GetUsersUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsersUser {
		return vs[0].([]GetUsersUser)[vs[1].(int)]
	}).(GetUsersUserOutput)
}

type GetUsersUserCapability struct {
	// Indicates if the user can use API keys.
	CanUseApiKeys bool `pulumi:"canUseApiKeys"`
	// Indicates if the user can use SWIFT passwords / auth tokens.
	CanUseAuthTokens bool `pulumi:"canUseAuthTokens"`
	// Indicates if the user can log in to the console.
	CanUseConsolePassword bool `pulumi:"canUseConsolePassword"`
	// Indicates if the user can use SigV4 symmetric keys.
	CanUseCustomerSecretKeys bool `pulumi:"canUseCustomerSecretKeys"`
	// Indicates if the user can use DB passwords.
	CanUseDbCredentials bool `pulumi:"canUseDbCredentials"`
	// Indicates if the user can use OAuth2 credentials and tokens.
	CanUseOauth2clientCredentials bool `pulumi:"canUseOauth2clientCredentials"`
	// Indicates if the user can use SMTP passwords.
	CanUseSmtpCredentials bool `pulumi:"canUseSmtpCredentials"`
}

// GetUsersUserCapabilityInput is an input type that accepts GetUsersUserCapabilityArgs and GetUsersUserCapabilityOutput values.
// You can construct a concrete instance of `GetUsersUserCapabilityInput` via:
//
//	GetUsersUserCapabilityArgs{...}
type GetUsersUserCapabilityInput interface {
	pulumi.Input

	ToGetUsersUserCapabilityOutput() GetUsersUserCapabilityOutput
	ToGetUsersUserCapabilityOutputWithContext(context.Context) GetUsersUserCapabilityOutput
}

type GetUsersUserCapabilityArgs struct {
	// Indicates if the user can use API keys.
	CanUseApiKeys pulumi.BoolInput `pulumi:"canUseApiKeys"`
	// Indicates if the user can use SWIFT passwords / auth tokens.
	CanUseAuthTokens pulumi.BoolInput `pulumi:"canUseAuthTokens"`
	// Indicates if the user can log in to the console.
	CanUseConsolePassword pulumi.BoolInput `pulumi:"canUseConsolePassword"`
	// Indicates if the user can use SigV4 symmetric keys.
	CanUseCustomerSecretKeys pulumi.BoolInput `pulumi:"canUseCustomerSecretKeys"`
	// Indicates if the user can use DB passwords.
	CanUseDbCredentials pulumi.BoolInput `pulumi:"canUseDbCredentials"`
	// Indicates if the user can use OAuth2 credentials and tokens.
	CanUseOauth2clientCredentials pulumi.BoolInput `pulumi:"canUseOauth2clientCredentials"`
	// Indicates if the user can use SMTP passwords.
	CanUseSmtpCredentials pulumi.BoolInput `pulumi:"canUseSmtpCredentials"`
}

func (GetUsersUserCapabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUserCapability)(nil)).Elem()
}

func (i GetUsersUserCapabilityArgs) ToGetUsersUserCapabilityOutput() GetUsersUserCapabilityOutput {
	return i.ToGetUsersUserCapabilityOutputWithContext(context.Background())
}

func (i GetUsersUserCapabilityArgs) ToGetUsersUserCapabilityOutputWithContext(ctx context.Context) GetUsersUserCapabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserCapabilityOutput)
}

// GetUsersUserCapabilityArrayInput is an input type that accepts GetUsersUserCapabilityArray and GetUsersUserCapabilityArrayOutput values.
// You can construct a concrete instance of `GetUsersUserCapabilityArrayInput` via:
//
//	GetUsersUserCapabilityArray{ GetUsersUserCapabilityArgs{...} }
type GetUsersUserCapabilityArrayInput interface {
	pulumi.Input

	ToGetUsersUserCapabilityArrayOutput() GetUsersUserCapabilityArrayOutput
	ToGetUsersUserCapabilityArrayOutputWithContext(context.Context) GetUsersUserCapabilityArrayOutput
}

type GetUsersUserCapabilityArray []GetUsersUserCapabilityInput

func (GetUsersUserCapabilityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUserCapability)(nil)).Elem()
}

func (i GetUsersUserCapabilityArray) ToGetUsersUserCapabilityArrayOutput() GetUsersUserCapabilityArrayOutput {
	return i.ToGetUsersUserCapabilityArrayOutputWithContext(context.Background())
}

func (i GetUsersUserCapabilityArray) ToGetUsersUserCapabilityArrayOutputWithContext(ctx context.Context) GetUsersUserCapabilityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserCapabilityArrayOutput)
}

type GetUsersUserCapabilityOutput struct{ *pulumi.OutputState }

func (GetUsersUserCapabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUserCapability)(nil)).Elem()
}

func (o GetUsersUserCapabilityOutput) ToGetUsersUserCapabilityOutput() GetUsersUserCapabilityOutput {
	return o
}

func (o GetUsersUserCapabilityOutput) ToGetUsersUserCapabilityOutputWithContext(ctx context.Context) GetUsersUserCapabilityOutput {
	return o
}

// Indicates if the user can use API keys.
func (o GetUsersUserCapabilityOutput) CanUseApiKeys() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUsersUserCapability) bool { return v.CanUseApiKeys }).(pulumi.BoolOutput)
}

// Indicates if the user can use SWIFT passwords / auth tokens.
func (o GetUsersUserCapabilityOutput) CanUseAuthTokens() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUsersUserCapability) bool { return v.CanUseAuthTokens }).(pulumi.BoolOutput)
}

// Indicates if the user can log in to the console.
func (o GetUsersUserCapabilityOutput) CanUseConsolePassword() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUsersUserCapability) bool { return v.CanUseConsolePassword }).(pulumi.BoolOutput)
}

// Indicates if the user can use SigV4 symmetric keys.
func (o GetUsersUserCapabilityOutput) CanUseCustomerSecretKeys() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUsersUserCapability) bool { return v.CanUseCustomerSecretKeys }).(pulumi.BoolOutput)
}

// Indicates if the user can use DB passwords.
func (o GetUsersUserCapabilityOutput) CanUseDbCredentials() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUsersUserCapability) bool { return v.CanUseDbCredentials }).(pulumi.BoolOutput)
}

// Indicates if the user can use OAuth2 credentials and tokens.
func (o GetUsersUserCapabilityOutput) CanUseOauth2clientCredentials() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUsersUserCapability) bool { return v.CanUseOauth2clientCredentials }).(pulumi.BoolOutput)
}

// Indicates if the user can use SMTP passwords.
func (o GetUsersUserCapabilityOutput) CanUseSmtpCredentials() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUsersUserCapability) bool { return v.CanUseSmtpCredentials }).(pulumi.BoolOutput)
}

type GetUsersUserCapabilityArrayOutput struct{ *pulumi.OutputState }

func (GetUsersUserCapabilityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUserCapability)(nil)).Elem()
}

func (o GetUsersUserCapabilityArrayOutput) ToGetUsersUserCapabilityArrayOutput() GetUsersUserCapabilityArrayOutput {
	return o
}

func (o GetUsersUserCapabilityArrayOutput) ToGetUsersUserCapabilityArrayOutputWithContext(ctx context.Context) GetUsersUserCapabilityArrayOutput {
	return o
}

func (o GetUsersUserCapabilityArrayOutput) Index(i pulumi.IntInput) GetUsersUserCapabilityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsersUserCapability {
		return vs[0].([]GetUsersUserCapability)[vs[1].(int)]
	}).(GetUsersUserCapabilityOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagStandardTagNamespaceTemplateTagDefinitionTemplateInput)(nil)).Elem(), GetTagStandardTagNamespaceTemplateTagDefinitionTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagStandardTagNamespaceTemplateTagDefinitionTemplateArrayInput)(nil)).Elem(), GetTagStandardTagNamespaceTemplateTagDefinitionTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagStandardTagNamespaceTemplatesFilterInput)(nil)).Elem(), GetTagStandardTagNamespaceTemplatesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagStandardTagNamespaceTemplatesFilterArrayInput)(nil)).Elem(), GetTagStandardTagNamespaceTemplatesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateInput)(nil)).Elem(), GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArrayInput)(nil)).Elem(), GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagValidatorInput)(nil)).Elem(), GetTagValidatorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagValidatorArrayInput)(nil)).Elem(), GetTagValidatorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagsFilterInput)(nil)).Elem(), GetTagsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagsFilterArrayInput)(nil)).Elem(), GetTagsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagsTagInput)(nil)).Elem(), GetTagsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagsTagArrayInput)(nil)).Elem(), GetTagsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagsTagValidatorInput)(nil)).Elem(), GetTagsTagValidatorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagsTagValidatorArrayInput)(nil)).Elem(), GetTagsTagValidatorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserCapabilityInput)(nil)).Elem(), GetUserCapabilityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserCapabilityArrayInput)(nil)).Elem(), GetUserCapabilityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserGroupMembershipsFilterInput)(nil)).Elem(), GetUserGroupMembershipsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserGroupMembershipsFilterArrayInput)(nil)).Elem(), GetUserGroupMembershipsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserGroupMembershipsMembershipInput)(nil)).Elem(), GetUserGroupMembershipsMembershipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserGroupMembershipsMembershipArrayInput)(nil)).Elem(), GetUserGroupMembershipsMembershipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersFilterInput)(nil)).Elem(), GetUsersFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersFilterArrayInput)(nil)).Elem(), GetUsersFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserInput)(nil)).Elem(), GetUsersUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserArrayInput)(nil)).Elem(), GetUsersUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserCapabilityInput)(nil)).Elem(), GetUsersUserCapabilityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserCapabilityArrayInput)(nil)).Elem(), GetUsersUserCapabilityArray{})
	pulumi.RegisterOutputType(GetTagStandardTagNamespaceTemplateTagDefinitionTemplateOutput{})
	pulumi.RegisterOutputType(GetTagStandardTagNamespaceTemplateTagDefinitionTemplateArrayOutput{})
	pulumi.RegisterOutputType(GetTagStandardTagNamespaceTemplatesFilterOutput{})
	pulumi.RegisterOutputType(GetTagStandardTagNamespaceTemplatesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateOutput{})
	pulumi.RegisterOutputType(GetTagStandardTagNamespaceTemplatesStandardTagNamespaceTemplateArrayOutput{})
	pulumi.RegisterOutputType(GetTagValidatorOutput{})
	pulumi.RegisterOutputType(GetTagValidatorArrayOutput{})
	pulumi.RegisterOutputType(GetTagsFilterOutput{})
	pulumi.RegisterOutputType(GetTagsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetTagsTagOutput{})
	pulumi.RegisterOutputType(GetTagsTagArrayOutput{})
	pulumi.RegisterOutputType(GetTagsTagValidatorOutput{})
	pulumi.RegisterOutputType(GetTagsTagValidatorArrayOutput{})
	pulumi.RegisterOutputType(GetUserCapabilityOutput{})
	pulumi.RegisterOutputType(GetUserCapabilityArrayOutput{})
	pulumi.RegisterOutputType(GetUserGroupMembershipsFilterOutput{})
	pulumi.RegisterOutputType(GetUserGroupMembershipsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetUserGroupMembershipsMembershipOutput{})
	pulumi.RegisterOutputType(GetUserGroupMembershipsMembershipArrayOutput{})
	pulumi.RegisterOutputType(GetUsersFilterOutput{})
	pulumi.RegisterOutputType(GetUsersFilterArrayOutput{})
	pulumi.RegisterOutputType(GetUsersUserOutput{})
	pulumi.RegisterOutputType(GetUsersUserArrayOutput{})
	pulumi.RegisterOutputType(GetUsersUserCapabilityOutput{})
	pulumi.RegisterOutputType(GetUsersUserCapabilityArrayOutput{})
}
