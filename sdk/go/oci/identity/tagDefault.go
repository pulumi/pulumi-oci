// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Tag Default resource in Oracle Cloud Infrastructure Identity service.
//
// Creates a new tag default in the specified compartment for the specified tag definition.
//
// If you specify that a value is required, a value is set during resource creation (either by
// the user creating the resource or another tag defualt). If no value is set, resource creation
// is blocked.
//
// * If the `isRequired` flag is set to "true", the value is set during resource creation.
// * If the `isRequired` flag is set to "false", the value you enter is set during resource creation.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Identity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Identity.NewTagDefault(ctx, "testTagDefault", &Identity.TagDefaultArgs{
//				CompartmentId:   pulumi.Any(_var.Compartment_id),
//				TagDefinitionId: pulumi.Any(oci_identity_tag_definition.Test_tag_definition.Id),
//				Value:           pulumi.Any(_var.Tag_default_value),
//				IsRequired:      pulumi.Any(_var.Tag_default_is_required),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// TagDefaults can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:Identity/tagDefault:TagDefault test_tag_default "id"
//
// ```
type TagDefault struct {
	pulumi.CustomResourceState

	// The OCID of the compartment. The tag default will be applied to all new resources created in this compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) If you specify that a value is required, a value is set during resource creation (either by the user creating the resource or another tag defualt). If no value is set, resource creation is blocked.
	// * If the `isRequired` flag is set to "true", the value is set during resource creation.
	// * If the `isRequired` flag is set to "false", the value you enter is set during resource creation.
	IsRequired pulumi.BoolOutput `pulumi:"isRequired"`
	// The tag default's current state. After creating a `TagDefault`, make sure its `lifecycleState` is ACTIVE before using it.
	State pulumi.StringOutput `pulumi:"state"`
	// The OCID of the tag definition. The tag default will always assign a default value for this tag definition.
	TagDefinitionId pulumi.StringOutput `pulumi:"tagDefinitionId"`
	// The name used in the tag definition. This field is informational in the context of the tag default.
	TagDefinitionName pulumi.StringOutput `pulumi:"tagDefinitionName"`
	// The OCID of the tag namespace that contains the tag definition.
	TagNamespaceId pulumi.StringOutput `pulumi:"tagNamespaceId"`
	// Date and time the `TagDefault` object was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// (Updatable) The default value for the tag definition. This will be applied to all new resources created in the compartment.
	Value pulumi.StringOutput `pulumi:"value"`
}

// NewTagDefault registers a new resource with the given unique name, arguments, and options.
func NewTagDefault(ctx *pulumi.Context,
	name string, args *TagDefaultArgs, opts ...pulumi.ResourceOption) (*TagDefault, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.TagDefinitionId == nil {
		return nil, errors.New("invalid value for required argument 'TagDefinitionId'")
	}
	if args.Value == nil {
		return nil, errors.New("invalid value for required argument 'Value'")
	}
	var resource TagDefault
	err := ctx.RegisterResource("oci:Identity/tagDefault:TagDefault", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTagDefault gets an existing TagDefault resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTagDefault(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TagDefaultState, opts ...pulumi.ResourceOption) (*TagDefault, error) {
	var resource TagDefault
	err := ctx.ReadResource("oci:Identity/tagDefault:TagDefault", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TagDefault resources.
type tagDefaultState struct {
	// The OCID of the compartment. The tag default will be applied to all new resources created in this compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) If you specify that a value is required, a value is set during resource creation (either by the user creating the resource or another tag defualt). If no value is set, resource creation is blocked.
	// * If the `isRequired` flag is set to "true", the value is set during resource creation.
	// * If the `isRequired` flag is set to "false", the value you enter is set during resource creation.
	IsRequired *bool `pulumi:"isRequired"`
	// The tag default's current state. After creating a `TagDefault`, make sure its `lifecycleState` is ACTIVE before using it.
	State *string `pulumi:"state"`
	// The OCID of the tag definition. The tag default will always assign a default value for this tag definition.
	TagDefinitionId *string `pulumi:"tagDefinitionId"`
	// The name used in the tag definition. This field is informational in the context of the tag default.
	TagDefinitionName *string `pulumi:"tagDefinitionName"`
	// The OCID of the tag namespace that contains the tag definition.
	TagNamespaceId *string `pulumi:"tagNamespaceId"`
	// Date and time the `TagDefault` object was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
	// (Updatable) The default value for the tag definition. This will be applied to all new resources created in the compartment.
	Value *string `pulumi:"value"`
}

type TagDefaultState struct {
	// The OCID of the compartment. The tag default will be applied to all new resources created in this compartment.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) If you specify that a value is required, a value is set during resource creation (either by the user creating the resource or another tag defualt). If no value is set, resource creation is blocked.
	// * If the `isRequired` flag is set to "true", the value is set during resource creation.
	// * If the `isRequired` flag is set to "false", the value you enter is set during resource creation.
	IsRequired pulumi.BoolPtrInput
	// The tag default's current state. After creating a `TagDefault`, make sure its `lifecycleState` is ACTIVE before using it.
	State pulumi.StringPtrInput
	// The OCID of the tag definition. The tag default will always assign a default value for this tag definition.
	TagDefinitionId pulumi.StringPtrInput
	// The name used in the tag definition. This field is informational in the context of the tag default.
	TagDefinitionName pulumi.StringPtrInput
	// The OCID of the tag namespace that contains the tag definition.
	TagNamespaceId pulumi.StringPtrInput
	// Date and time the `TagDefault` object was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
	// (Updatable) The default value for the tag definition. This will be applied to all new resources created in the compartment.
	Value pulumi.StringPtrInput
}

func (TagDefaultState) ElementType() reflect.Type {
	return reflect.TypeOf((*tagDefaultState)(nil)).Elem()
}

type tagDefaultArgs struct {
	// The OCID of the compartment. The tag default will be applied to all new resources created in this compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) If you specify that a value is required, a value is set during resource creation (either by the user creating the resource or another tag defualt). If no value is set, resource creation is blocked.
	// * If the `isRequired` flag is set to "true", the value is set during resource creation.
	// * If the `isRequired` flag is set to "false", the value you enter is set during resource creation.
	IsRequired *bool `pulumi:"isRequired"`
	// The OCID of the tag definition. The tag default will always assign a default value for this tag definition.
	TagDefinitionId string `pulumi:"tagDefinitionId"`
	// (Updatable) The default value for the tag definition. This will be applied to all new resources created in the compartment.
	Value string `pulumi:"value"`
}

// The set of arguments for constructing a TagDefault resource.
type TagDefaultArgs struct {
	// The OCID of the compartment. The tag default will be applied to all new resources created in this compartment.
	CompartmentId pulumi.StringInput
	// (Updatable) If you specify that a value is required, a value is set during resource creation (either by the user creating the resource or another tag defualt). If no value is set, resource creation is blocked.
	// * If the `isRequired` flag is set to "true", the value is set during resource creation.
	// * If the `isRequired` flag is set to "false", the value you enter is set during resource creation.
	IsRequired pulumi.BoolPtrInput
	// The OCID of the tag definition. The tag default will always assign a default value for this tag definition.
	TagDefinitionId pulumi.StringInput
	// (Updatable) The default value for the tag definition. This will be applied to all new resources created in the compartment.
	Value pulumi.StringInput
}

func (TagDefaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tagDefaultArgs)(nil)).Elem()
}

type TagDefaultInput interface {
	pulumi.Input

	ToTagDefaultOutput() TagDefaultOutput
	ToTagDefaultOutputWithContext(ctx context.Context) TagDefaultOutput
}

func (*TagDefault) ElementType() reflect.Type {
	return reflect.TypeOf((**TagDefault)(nil)).Elem()
}

func (i *TagDefault) ToTagDefaultOutput() TagDefaultOutput {
	return i.ToTagDefaultOutputWithContext(context.Background())
}

func (i *TagDefault) ToTagDefaultOutputWithContext(ctx context.Context) TagDefaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagDefaultOutput)
}

// TagDefaultArrayInput is an input type that accepts TagDefaultArray and TagDefaultArrayOutput values.
// You can construct a concrete instance of `TagDefaultArrayInput` via:
//
//	TagDefaultArray{ TagDefaultArgs{...} }
type TagDefaultArrayInput interface {
	pulumi.Input

	ToTagDefaultArrayOutput() TagDefaultArrayOutput
	ToTagDefaultArrayOutputWithContext(context.Context) TagDefaultArrayOutput
}

type TagDefaultArray []TagDefaultInput

func (TagDefaultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TagDefault)(nil)).Elem()
}

func (i TagDefaultArray) ToTagDefaultArrayOutput() TagDefaultArrayOutput {
	return i.ToTagDefaultArrayOutputWithContext(context.Background())
}

func (i TagDefaultArray) ToTagDefaultArrayOutputWithContext(ctx context.Context) TagDefaultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagDefaultArrayOutput)
}

// TagDefaultMapInput is an input type that accepts TagDefaultMap and TagDefaultMapOutput values.
// You can construct a concrete instance of `TagDefaultMapInput` via:
//
//	TagDefaultMap{ "key": TagDefaultArgs{...} }
type TagDefaultMapInput interface {
	pulumi.Input

	ToTagDefaultMapOutput() TagDefaultMapOutput
	ToTagDefaultMapOutputWithContext(context.Context) TagDefaultMapOutput
}

type TagDefaultMap map[string]TagDefaultInput

func (TagDefaultMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TagDefault)(nil)).Elem()
}

func (i TagDefaultMap) ToTagDefaultMapOutput() TagDefaultMapOutput {
	return i.ToTagDefaultMapOutputWithContext(context.Background())
}

func (i TagDefaultMap) ToTagDefaultMapOutputWithContext(ctx context.Context) TagDefaultMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagDefaultMapOutput)
}

type TagDefaultOutput struct{ *pulumi.OutputState }

func (TagDefaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TagDefault)(nil)).Elem()
}

func (o TagDefaultOutput) ToTagDefaultOutput() TagDefaultOutput {
	return o
}

func (o TagDefaultOutput) ToTagDefaultOutputWithContext(ctx context.Context) TagDefaultOutput {
	return o
}

// The OCID of the compartment. The tag default will be applied to all new resources created in this compartment.
func (o TagDefaultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *TagDefault) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) If you specify that a value is required, a value is set during resource creation (either by the user creating the resource or another tag defualt). If no value is set, resource creation is blocked.
// * If the `isRequired` flag is set to "true", the value is set during resource creation.
// * If the `isRequired` flag is set to "false", the value you enter is set during resource creation.
func (o TagDefaultOutput) IsRequired() pulumi.BoolOutput {
	return o.ApplyT(func(v *TagDefault) pulumi.BoolOutput { return v.IsRequired }).(pulumi.BoolOutput)
}

// The tag default's current state. After creating a `TagDefault`, make sure its `lifecycleState` is ACTIVE before using it.
func (o TagDefaultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *TagDefault) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The OCID of the tag definition. The tag default will always assign a default value for this tag definition.
func (o TagDefaultOutput) TagDefinitionId() pulumi.StringOutput {
	return o.ApplyT(func(v *TagDefault) pulumi.StringOutput { return v.TagDefinitionId }).(pulumi.StringOutput)
}

// The name used in the tag definition. This field is informational in the context of the tag default.
func (o TagDefaultOutput) TagDefinitionName() pulumi.StringOutput {
	return o.ApplyT(func(v *TagDefault) pulumi.StringOutput { return v.TagDefinitionName }).(pulumi.StringOutput)
}

// The OCID of the tag namespace that contains the tag definition.
func (o TagDefaultOutput) TagNamespaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *TagDefault) pulumi.StringOutput { return v.TagNamespaceId }).(pulumi.StringOutput)
}

// Date and time the `TagDefault` object was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
func (o TagDefaultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *TagDefault) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// (Updatable) The default value for the tag definition. This will be applied to all new resources created in the compartment.
func (o TagDefaultOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v *TagDefault) pulumi.StringOutput { return v.Value }).(pulumi.StringOutput)
}

type TagDefaultArrayOutput struct{ *pulumi.OutputState }

func (TagDefaultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TagDefault)(nil)).Elem()
}

func (o TagDefaultArrayOutput) ToTagDefaultArrayOutput() TagDefaultArrayOutput {
	return o
}

func (o TagDefaultArrayOutput) ToTagDefaultArrayOutputWithContext(ctx context.Context) TagDefaultArrayOutput {
	return o
}

func (o TagDefaultArrayOutput) Index(i pulumi.IntInput) TagDefaultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TagDefault {
		return vs[0].([]*TagDefault)[vs[1].(int)]
	}).(TagDefaultOutput)
}

type TagDefaultMapOutput struct{ *pulumi.OutputState }

func (TagDefaultMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TagDefault)(nil)).Elem()
}

func (o TagDefaultMapOutput) ToTagDefaultMapOutput() TagDefaultMapOutput {
	return o
}

func (o TagDefaultMapOutput) ToTagDefaultMapOutputWithContext(ctx context.Context) TagDefaultMapOutput {
	return o
}

func (o TagDefaultMapOutput) MapIndex(k pulumi.StringInput) TagDefaultOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TagDefault {
		return vs[0].(map[string]*TagDefault)[vs[1].(string)]
	}).(TagDefaultOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TagDefaultInput)(nil)).Elem(), &TagDefault{})
	pulumi.RegisterInputType(reflect.TypeOf((*TagDefaultArrayInput)(nil)).Elem(), TagDefaultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TagDefaultMapInput)(nil)).Elem(), TagDefaultMap{})
	pulumi.RegisterOutputType(TagDefaultOutput{})
	pulumi.RegisterOutputType(TagDefaultArrayOutput{})
	pulumi.RegisterOutputType(TagDefaultMapOutput{})
}
