// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This resource provides the Tag Namespace resource in Oracle Cloud Infrastructure Identity service.
//
// Creates a new tag namespace in the specified compartment.
//
// You must specify the compartment ID in the request object (remember that the tenancy is simply the root
// compartment).
//
// You must also specify a *name* for the namespace, which must be unique across all namespaces in your tenancy
// and cannot be changed. The name can contain any ASCII character except the space (_) or period (.).
// Names are case insensitive. That means, for example, "myNamespace" and "mynamespace" are not allowed
// in the same tenancy. Once you created a namespace, you cannot change the name.
// If you specify a name that's already in use in the tenancy, a 409 error is returned.
//
// You must also specify a *description* for the namespace.
// It does not have to be unique, and you can change it with
// [UpdateTagNamespace](https://docs.cloud.oracle.com/iaas/api/#/en/identity/latest/TagNamespace/UpdateTagNamespace).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Identity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Identity.NewTagNamespace(ctx, "testTagNamespace", &Identity.TagNamespaceArgs{
//				CompartmentId: pulumi.Any(_var.Compartment_id),
//				Description:   pulumi.Any(_var.Tag_namespace_description),
//				DefinedTags: pulumi.AnyMap{
//					"Operations.CostCenter": pulumi.Any("42"),
//				},
//				FreeformTags: pulumi.AnyMap{
//					"Department": pulumi.Any("Finance"),
//				},
//				IsRetired: pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// TagNamespaces can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:Identity/tagNamespace:TagNamespace test_tag_namespace "id"
//
// ```
type TagNamespace struct {
	pulumi.CustomResourceState

	// (Updatable) The OCID of the tenancy containing the tag namespace.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) The description you assign to the tag namespace during creation.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// (Updatable) Whether the tag namespace is retired. For more information, see [Retiring Key Definitions and Namespace Definitions](https://docs.us-phoenix-1.oraclecloud.com/Content/Identity/Concepts/taggingoverview.htm#Retiring).
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	IsRetired pulumi.BoolOutput `pulumi:"isRetired"`
	// The name you assign to the tag namespace during creation. It must be unique across all tag namespaces in the tenancy and cannot be changed.
	Name pulumi.StringOutput `pulumi:"name"`
	// The tagnamespace's current state. After creating a tagnamespace, make sure its `lifecycleState` is ACTIVE before using it. After retiring a tagnamespace, make sure its `lifecycleState` is INACTIVE before using it.
	State pulumi.StringOutput `pulumi:"state"`
	// Date and time the tag namespace was created, in the format defined by RFC3339. Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewTagNamespace registers a new resource with the given unique name, arguments, and options.
func NewTagNamespace(ctx *pulumi.Context,
	name string, args *TagNamespaceArgs, opts ...pulumi.ResourceOption) (*TagNamespace, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TagNamespace
	err := ctx.RegisterResource("oci:Identity/tagNamespace:TagNamespace", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTagNamespace gets an existing TagNamespace resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTagNamespace(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TagNamespaceState, opts ...pulumi.ResourceOption) (*TagNamespace, error) {
	var resource TagNamespace
	err := ctx.ReadResource("oci:Identity/tagNamespace:TagNamespace", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TagNamespace resources.
type tagNamespaceState struct {
	// (Updatable) The OCID of the tenancy containing the tag namespace.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The description you assign to the tag namespace during creation.
	Description *string `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Whether the tag namespace is retired. For more information, see [Retiring Key Definitions and Namespace Definitions](https://docs.us-phoenix-1.oraclecloud.com/Content/Identity/Concepts/taggingoverview.htm#Retiring).
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	IsRetired *bool `pulumi:"isRetired"`
	// The name you assign to the tag namespace during creation. It must be unique across all tag namespaces in the tenancy and cannot be changed.
	Name *string `pulumi:"name"`
	// The tagnamespace's current state. After creating a tagnamespace, make sure its `lifecycleState` is ACTIVE before using it. After retiring a tagnamespace, make sure its `lifecycleState` is INACTIVE before using it.
	State *string `pulumi:"state"`
	// Date and time the tag namespace was created, in the format defined by RFC3339. Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
}

type TagNamespaceState struct {
	// (Updatable) The OCID of the tenancy containing the tag namespace.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The description you assign to the tag namespace during creation.
	Description pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) Whether the tag namespace is retired. For more information, see [Retiring Key Definitions and Namespace Definitions](https://docs.us-phoenix-1.oraclecloud.com/Content/Identity/Concepts/taggingoverview.htm#Retiring).
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	IsRetired pulumi.BoolPtrInput
	// The name you assign to the tag namespace during creation. It must be unique across all tag namespaces in the tenancy and cannot be changed.
	Name pulumi.StringPtrInput
	// The tagnamespace's current state. After creating a tagnamespace, make sure its `lifecycleState` is ACTIVE before using it. After retiring a tagnamespace, make sure its `lifecycleState` is INACTIVE before using it.
	State pulumi.StringPtrInput
	// Date and time the tag namespace was created, in the format defined by RFC3339. Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
}

func (TagNamespaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*tagNamespaceState)(nil)).Elem()
}

type tagNamespaceArgs struct {
	// (Updatable) The OCID of the tenancy containing the tag namespace.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The description you assign to the tag namespace during creation.
	Description string `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Whether the tag namespace is retired. For more information, see [Retiring Key Definitions and Namespace Definitions](https://docs.us-phoenix-1.oraclecloud.com/Content/Identity/Concepts/taggingoverview.htm#Retiring).
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	IsRetired *bool `pulumi:"isRetired"`
	// The name you assign to the tag namespace during creation. It must be unique across all tag namespaces in the tenancy and cannot be changed.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a TagNamespace resource.
type TagNamespaceArgs struct {
	// (Updatable) The OCID of the tenancy containing the tag namespace.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The description you assign to the tag namespace during creation.
	Description pulumi.StringInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) Whether the tag namespace is retired. For more information, see [Retiring Key Definitions and Namespace Definitions](https://docs.us-phoenix-1.oraclecloud.com/Content/Identity/Concepts/taggingoverview.htm#Retiring).
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	IsRetired pulumi.BoolPtrInput
	// The name you assign to the tag namespace during creation. It must be unique across all tag namespaces in the tenancy and cannot be changed.
	Name pulumi.StringPtrInput
}

func (TagNamespaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tagNamespaceArgs)(nil)).Elem()
}

type TagNamespaceInput interface {
	pulumi.Input

	ToTagNamespaceOutput() TagNamespaceOutput
	ToTagNamespaceOutputWithContext(ctx context.Context) TagNamespaceOutput
}

func (*TagNamespace) ElementType() reflect.Type {
	return reflect.TypeOf((**TagNamespace)(nil)).Elem()
}

func (i *TagNamespace) ToTagNamespaceOutput() TagNamespaceOutput {
	return i.ToTagNamespaceOutputWithContext(context.Background())
}

func (i *TagNamespace) ToTagNamespaceOutputWithContext(ctx context.Context) TagNamespaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagNamespaceOutput)
}

func (i *TagNamespace) ToOutput(ctx context.Context) pulumix.Output[*TagNamespace] {
	return pulumix.Output[*TagNamespace]{
		OutputState: i.ToTagNamespaceOutputWithContext(ctx).OutputState,
	}
}

// TagNamespaceArrayInput is an input type that accepts TagNamespaceArray and TagNamespaceArrayOutput values.
// You can construct a concrete instance of `TagNamespaceArrayInput` via:
//
//	TagNamespaceArray{ TagNamespaceArgs{...} }
type TagNamespaceArrayInput interface {
	pulumi.Input

	ToTagNamespaceArrayOutput() TagNamespaceArrayOutput
	ToTagNamespaceArrayOutputWithContext(context.Context) TagNamespaceArrayOutput
}

type TagNamespaceArray []TagNamespaceInput

func (TagNamespaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TagNamespace)(nil)).Elem()
}

func (i TagNamespaceArray) ToTagNamespaceArrayOutput() TagNamespaceArrayOutput {
	return i.ToTagNamespaceArrayOutputWithContext(context.Background())
}

func (i TagNamespaceArray) ToTagNamespaceArrayOutputWithContext(ctx context.Context) TagNamespaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagNamespaceArrayOutput)
}

func (i TagNamespaceArray) ToOutput(ctx context.Context) pulumix.Output[[]*TagNamespace] {
	return pulumix.Output[[]*TagNamespace]{
		OutputState: i.ToTagNamespaceArrayOutputWithContext(ctx).OutputState,
	}
}

// TagNamespaceMapInput is an input type that accepts TagNamespaceMap and TagNamespaceMapOutput values.
// You can construct a concrete instance of `TagNamespaceMapInput` via:
//
//	TagNamespaceMap{ "key": TagNamespaceArgs{...} }
type TagNamespaceMapInput interface {
	pulumi.Input

	ToTagNamespaceMapOutput() TagNamespaceMapOutput
	ToTagNamespaceMapOutputWithContext(context.Context) TagNamespaceMapOutput
}

type TagNamespaceMap map[string]TagNamespaceInput

func (TagNamespaceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TagNamespace)(nil)).Elem()
}

func (i TagNamespaceMap) ToTagNamespaceMapOutput() TagNamespaceMapOutput {
	return i.ToTagNamespaceMapOutputWithContext(context.Background())
}

func (i TagNamespaceMap) ToTagNamespaceMapOutputWithContext(ctx context.Context) TagNamespaceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagNamespaceMapOutput)
}

func (i TagNamespaceMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*TagNamespace] {
	return pulumix.Output[map[string]*TagNamespace]{
		OutputState: i.ToTagNamespaceMapOutputWithContext(ctx).OutputState,
	}
}

type TagNamespaceOutput struct{ *pulumi.OutputState }

func (TagNamespaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TagNamespace)(nil)).Elem()
}

func (o TagNamespaceOutput) ToTagNamespaceOutput() TagNamespaceOutput {
	return o
}

func (o TagNamespaceOutput) ToTagNamespaceOutputWithContext(ctx context.Context) TagNamespaceOutput {
	return o
}

func (o TagNamespaceOutput) ToOutput(ctx context.Context) pulumix.Output[*TagNamespace] {
	return pulumix.Output[*TagNamespace]{
		OutputState: o.OutputState,
	}
}

// (Updatable) The OCID of the tenancy containing the tag namespace.
func (o TagNamespaceOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *TagNamespace) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o TagNamespaceOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *TagNamespace) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) The description you assign to the tag namespace during creation.
func (o TagNamespaceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *TagNamespace) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o TagNamespaceOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *TagNamespace) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// (Updatable) Whether the tag namespace is retired. For more information, see [Retiring Key Definitions and Namespace Definitions](https://docs.us-phoenix-1.oraclecloud.com/Content/Identity/Concepts/taggingoverview.htm#Retiring).
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o TagNamespaceOutput) IsRetired() pulumi.BoolOutput {
	return o.ApplyT(func(v *TagNamespace) pulumi.BoolOutput { return v.IsRetired }).(pulumi.BoolOutput)
}

// The name you assign to the tag namespace during creation. It must be unique across all tag namespaces in the tenancy and cannot be changed.
func (o TagNamespaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TagNamespace) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The tagnamespace's current state. After creating a tagnamespace, make sure its `lifecycleState` is ACTIVE before using it. After retiring a tagnamespace, make sure its `lifecycleState` is INACTIVE before using it.
func (o TagNamespaceOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *TagNamespace) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Date and time the tag namespace was created, in the format defined by RFC3339. Example: `2016-08-25T21:10:29.600Z`
func (o TagNamespaceOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *TagNamespace) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

type TagNamespaceArrayOutput struct{ *pulumi.OutputState }

func (TagNamespaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TagNamespace)(nil)).Elem()
}

func (o TagNamespaceArrayOutput) ToTagNamespaceArrayOutput() TagNamespaceArrayOutput {
	return o
}

func (o TagNamespaceArrayOutput) ToTagNamespaceArrayOutputWithContext(ctx context.Context) TagNamespaceArrayOutput {
	return o
}

func (o TagNamespaceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*TagNamespace] {
	return pulumix.Output[[]*TagNamespace]{
		OutputState: o.OutputState,
	}
}

func (o TagNamespaceArrayOutput) Index(i pulumi.IntInput) TagNamespaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TagNamespace {
		return vs[0].([]*TagNamespace)[vs[1].(int)]
	}).(TagNamespaceOutput)
}

type TagNamespaceMapOutput struct{ *pulumi.OutputState }

func (TagNamespaceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TagNamespace)(nil)).Elem()
}

func (o TagNamespaceMapOutput) ToTagNamespaceMapOutput() TagNamespaceMapOutput {
	return o
}

func (o TagNamespaceMapOutput) ToTagNamespaceMapOutputWithContext(ctx context.Context) TagNamespaceMapOutput {
	return o
}

func (o TagNamespaceMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*TagNamespace] {
	return pulumix.Output[map[string]*TagNamespace]{
		OutputState: o.OutputState,
	}
}

func (o TagNamespaceMapOutput) MapIndex(k pulumi.StringInput) TagNamespaceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TagNamespace {
		return vs[0].(map[string]*TagNamespace)[vs[1].(string)]
	}).(TagNamespaceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TagNamespaceInput)(nil)).Elem(), &TagNamespace{})
	pulumi.RegisterInputType(reflect.TypeOf((*TagNamespaceArrayInput)(nil)).Elem(), TagNamespaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TagNamespaceMapInput)(nil)).Elem(), TagNamespaceMap{})
	pulumi.RegisterOutputType(TagNamespaceOutput{})
	pulumi.RegisterOutputType(TagNamespaceArrayOutput{})
	pulumi.RegisterOutputType(TagNamespaceMapOutput{})
}
