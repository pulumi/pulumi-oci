// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package integration

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Integration Instance resource in Oracle Cloud Infrastructure Integration service.
//
// Creates a new Integration Instance.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Integration"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Integration.NewIntegrationInstance(ctx, "testIntegrationInstance", &Integration.IntegrationInstanceArgs{
//				CompartmentId:           pulumi.Any(_var.Compartment_id),
//				DisplayName:             pulumi.Any(_var.Integration_instance_display_name),
//				IntegrationInstanceType: pulumi.Any(_var.Integration_instance_integration_instance_type),
//				IsByol:                  pulumi.Any(_var.Integration_instance_is_byol),
//				MessagePacks:            pulumi.Any(_var.Integration_instance_message_packs),
//				AlternateCustomEndpoints: integration.IntegrationInstanceAlternateCustomEndpointArray{
//					&integration.IntegrationInstanceAlternateCustomEndpointArgs{
//						Hostname:            pulumi.Any(_var.Integration_instance_alternate_custom_endpoints_hostname),
//						CertificateSecretId: pulumi.Any(oci_vault_secret.Test_secret.Id),
//					},
//				},
//				ConsumptionModel: pulumi.Any(_var.Integration_instance_consumption_model),
//				CustomEndpoint: &integration.IntegrationInstanceCustomEndpointArgs{
//					Hostname:            pulumi.Any(_var.Integration_instance_custom_endpoint_hostname),
//					CertificateSecretId: pulumi.Any(oci_vault_secret.Test_secret.Id),
//				},
//				DefinedTags: pulumi.AnyMap{
//					"foo-namespace.bar-key": pulumi.Any("value"),
//				},
//				FreeformTags: pulumi.AnyMap{
//					"bar-key": pulumi.Any("value"),
//				},
//				IdcsAt:                 pulumi.Any(_var.Integration_instance_idcs_at),
//				IsFileServerEnabled:    pulumi.Any(_var.Integration_instance_is_file_server_enabled),
//				IsVisualBuilderEnabled: pulumi.Any(_var.Integration_instance_is_visual_builder_enabled),
//				NetworkEndpointDetails: &integration.IntegrationInstanceNetworkEndpointDetailsArgs{
//					NetworkEndpointType: pulumi.Any(_var.Integration_instance_network_endpoint_details_network_endpoint_type),
//					AllowlistedHttpIps:  pulumi.Any(_var.Integration_instance_network_endpoint_details_allowlisted_http_ips),
//					AllowlistedHttpVcns: integration.IntegrationInstanceNetworkEndpointDetailsAllowlistedHttpVcnArray{
//						&integration.IntegrationInstanceNetworkEndpointDetailsAllowlistedHttpVcnArgs{
//							Id:             pulumi.Any(_var.Integration_instance_network_endpoint_details_allowlisted_http_vcns_id),
//							AllowlistedIps: pulumi.Any(_var.Integration_instance_network_endpoint_details_allowlisted_http_vcns_allowlisted_ips),
//						},
//					},
//					IsIntegrationVcnAllowlisted: pulumi.Any(_var.Integration_instance_network_endpoint_details_is_integration_vcn_allowlisted),
//				},
//				State: pulumi.Any(_var.Integration_instance_target_state),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// IntegrationInstances can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:Integration/integrationInstance:IntegrationInstance test_integration_instance "id"
//
// ```
type IntegrationInstance struct {
	pulumi.CustomResourceState

	// (Updatable) A list of alternate custom endpoints to be used for the integration instance URL (contact Oracle for alternateCustomEndpoints availability for a specific instance).
	AlternateCustomEndpoints IntegrationInstanceAlternateCustomEndpointArrayOutput `pulumi:"alternateCustomEndpoints"`
	// A list of associated attachments to other services
	Attachments IntegrationInstanceAttachmentArrayOutput `pulumi:"attachments"`
	// (Updatable) Compartment Identifier.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// Optional parameter specifying which entitlement to use for billing purposes. Only required if the account possesses more than one entitlement.
	ConsumptionModel pulumi.StringOutput `pulumi:"consumptionModel"`
	// (Updatable) Details for a custom endpoint for the integration instance (update).
	CustomEndpoint IntegrationInstanceCustomEndpointOutput `pulumi:"customEndpoint"`
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) Integration Instance Identifier.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// (Updatable) IDCS Authentication token. This is required for all realms with IDCS. Its optional as its not required for non IDCS realms.
	IdcsAt pulumi.StringPtrOutput `pulumi:"idcsAt"`
	// Information for IDCS access
	IdcsInfos IntegrationInstanceIdcsInfoArrayOutput `pulumi:"idcsInfos"`
	// The Integration Instance URL.
	InstanceUrl pulumi.StringOutput `pulumi:"instanceUrl"`
	// (Updatable) Standard or Enterprise type
	IntegrationInstanceType pulumi.StringOutput `pulumi:"integrationInstanceType"`
	// (Updatable) Bring your own license.
	IsByol pulumi.BoolOutput `pulumi:"isByol"`
	// (Updatable) The file server is enabled or not.
	IsFileServerEnabled pulumi.BoolOutput `pulumi:"isFileServerEnabled"`
	// (Updatable) Visual Builder is enabled or not.
	IsVisualBuilderEnabled pulumi.BoolOutput `pulumi:"isVisualBuilderEnabled"`
	// (Updatable) The number of configured message packs
	MessagePacks pulumi.IntOutput `pulumi:"messagePacks"`
	// Base representation of a network endpoint.
	NetworkEndpointDetails IntegrationInstanceNetworkEndpointDetailsOutput `pulumi:"networkEndpointDetails"`
	// (Updatable) The target state for the instance. Could be set to ACTIVE or INACTIVE
	State pulumi.StringOutput `pulumi:"state"`
	// An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	StateMessage pulumi.StringOutput `pulumi:"stateMessage"`
	// The time the the Integration Instance was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time the IntegrationInstance was updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewIntegrationInstance registers a new resource with the given unique name, arguments, and options.
func NewIntegrationInstance(ctx *pulumi.Context,
	name string, args *IntegrationInstanceArgs, opts ...pulumi.ResourceOption) (*IntegrationInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.IntegrationInstanceType == nil {
		return nil, errors.New("invalid value for required argument 'IntegrationInstanceType'")
	}
	if args.IsByol == nil {
		return nil, errors.New("invalid value for required argument 'IsByol'")
	}
	if args.MessagePacks == nil {
		return nil, errors.New("invalid value for required argument 'MessagePacks'")
	}
	var resource IntegrationInstance
	err := ctx.RegisterResource("oci:Integration/integrationInstance:IntegrationInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIntegrationInstance gets an existing IntegrationInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIntegrationInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IntegrationInstanceState, opts ...pulumi.ResourceOption) (*IntegrationInstance, error) {
	var resource IntegrationInstance
	err := ctx.ReadResource("oci:Integration/integrationInstance:IntegrationInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IntegrationInstance resources.
type integrationInstanceState struct {
	// (Updatable) A list of alternate custom endpoints to be used for the integration instance URL (contact Oracle for alternateCustomEndpoints availability for a specific instance).
	AlternateCustomEndpoints []IntegrationInstanceAlternateCustomEndpoint `pulumi:"alternateCustomEndpoints"`
	// A list of associated attachments to other services
	Attachments []IntegrationInstanceAttachment `pulumi:"attachments"`
	// (Updatable) Compartment Identifier.
	CompartmentId *string `pulumi:"compartmentId"`
	// Optional parameter specifying which entitlement to use for billing purposes. Only required if the account possesses more than one entitlement.
	ConsumptionModel *string `pulumi:"consumptionModel"`
	// (Updatable) Details for a custom endpoint for the integration instance (update).
	CustomEndpoint *IntegrationInstanceCustomEndpoint `pulumi:"customEndpoint"`
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Integration Instance Identifier.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) IDCS Authentication token. This is required for all realms with IDCS. Its optional as its not required for non IDCS realms.
	IdcsAt *string `pulumi:"idcsAt"`
	// Information for IDCS access
	IdcsInfos []IntegrationInstanceIdcsInfo `pulumi:"idcsInfos"`
	// The Integration Instance URL.
	InstanceUrl *string `pulumi:"instanceUrl"`
	// (Updatable) Standard or Enterprise type
	IntegrationInstanceType *string `pulumi:"integrationInstanceType"`
	// (Updatable) Bring your own license.
	IsByol *bool `pulumi:"isByol"`
	// (Updatable) The file server is enabled or not.
	IsFileServerEnabled *bool `pulumi:"isFileServerEnabled"`
	// (Updatable) Visual Builder is enabled or not.
	IsVisualBuilderEnabled *bool `pulumi:"isVisualBuilderEnabled"`
	// (Updatable) The number of configured message packs
	MessagePacks *int `pulumi:"messagePacks"`
	// Base representation of a network endpoint.
	NetworkEndpointDetails *IntegrationInstanceNetworkEndpointDetails `pulumi:"networkEndpointDetails"`
	// (Updatable) The target state for the instance. Could be set to ACTIVE or INACTIVE
	State *string `pulumi:"state"`
	// An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	StateMessage *string `pulumi:"stateMessage"`
	// The time the the Integration Instance was created. An RFC3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the IntegrationInstance was updated. An RFC3339 formatted datetime string.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type IntegrationInstanceState struct {
	// (Updatable) A list of alternate custom endpoints to be used for the integration instance URL (contact Oracle for alternateCustomEndpoints availability for a specific instance).
	AlternateCustomEndpoints IntegrationInstanceAlternateCustomEndpointArrayInput
	// A list of associated attachments to other services
	Attachments IntegrationInstanceAttachmentArrayInput
	// (Updatable) Compartment Identifier.
	CompartmentId pulumi.StringPtrInput
	// Optional parameter specifying which entitlement to use for billing purposes. Only required if the account possesses more than one entitlement.
	ConsumptionModel pulumi.StringPtrInput
	// (Updatable) Details for a custom endpoint for the integration instance (update).
	CustomEndpoint IntegrationInstanceCustomEndpointPtrInput
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Integration Instance Identifier.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) IDCS Authentication token. This is required for all realms with IDCS. Its optional as its not required for non IDCS realms.
	IdcsAt pulumi.StringPtrInput
	// Information for IDCS access
	IdcsInfos IntegrationInstanceIdcsInfoArrayInput
	// The Integration Instance URL.
	InstanceUrl pulumi.StringPtrInput
	// (Updatable) Standard or Enterprise type
	IntegrationInstanceType pulumi.StringPtrInput
	// (Updatable) Bring your own license.
	IsByol pulumi.BoolPtrInput
	// (Updatable) The file server is enabled or not.
	IsFileServerEnabled pulumi.BoolPtrInput
	// (Updatable) Visual Builder is enabled or not.
	IsVisualBuilderEnabled pulumi.BoolPtrInput
	// (Updatable) The number of configured message packs
	MessagePacks pulumi.IntPtrInput
	// Base representation of a network endpoint.
	NetworkEndpointDetails IntegrationInstanceNetworkEndpointDetailsPtrInput
	// (Updatable) The target state for the instance. Could be set to ACTIVE or INACTIVE
	State pulumi.StringPtrInput
	// An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	StateMessage pulumi.StringPtrInput
	// The time the the Integration Instance was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput
	// The time the IntegrationInstance was updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringPtrInput
}

func (IntegrationInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationInstanceState)(nil)).Elem()
}

type integrationInstanceArgs struct {
	// (Updatable) A list of alternate custom endpoints to be used for the integration instance URL (contact Oracle for alternateCustomEndpoints availability for a specific instance).
	AlternateCustomEndpoints []IntegrationInstanceAlternateCustomEndpoint `pulumi:"alternateCustomEndpoints"`
	// (Updatable) Compartment Identifier.
	CompartmentId string `pulumi:"compartmentId"`
	// Optional parameter specifying which entitlement to use for billing purposes. Only required if the account possesses more than one entitlement.
	ConsumptionModel *string `pulumi:"consumptionModel"`
	// (Updatable) Details for a custom endpoint for the integration instance (update).
	CustomEndpoint *IntegrationInstanceCustomEndpoint `pulumi:"customEndpoint"`
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Integration Instance Identifier.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) IDCS Authentication token. This is required for all realms with IDCS. Its optional as its not required for non IDCS realms.
	IdcsAt *string `pulumi:"idcsAt"`
	// (Updatable) Standard or Enterprise type
	IntegrationInstanceType string `pulumi:"integrationInstanceType"`
	// (Updatable) Bring your own license.
	IsByol bool `pulumi:"isByol"`
	// (Updatable) The file server is enabled or not.
	IsFileServerEnabled *bool `pulumi:"isFileServerEnabled"`
	// (Updatable) Visual Builder is enabled or not.
	IsVisualBuilderEnabled *bool `pulumi:"isVisualBuilderEnabled"`
	// (Updatable) The number of configured message packs
	MessagePacks int `pulumi:"messagePacks"`
	// Base representation of a network endpoint.
	NetworkEndpointDetails *IntegrationInstanceNetworkEndpointDetails `pulumi:"networkEndpointDetails"`
	// (Updatable) The target state for the instance. Could be set to ACTIVE or INACTIVE
	State *string `pulumi:"state"`
}

// The set of arguments for constructing a IntegrationInstance resource.
type IntegrationInstanceArgs struct {
	// (Updatable) A list of alternate custom endpoints to be used for the integration instance URL (contact Oracle for alternateCustomEndpoints availability for a specific instance).
	AlternateCustomEndpoints IntegrationInstanceAlternateCustomEndpointArrayInput
	// (Updatable) Compartment Identifier.
	CompartmentId pulumi.StringInput
	// Optional parameter specifying which entitlement to use for billing purposes. Only required if the account possesses more than one entitlement.
	ConsumptionModel pulumi.StringPtrInput
	// (Updatable) Details for a custom endpoint for the integration instance (update).
	CustomEndpoint IntegrationInstanceCustomEndpointPtrInput
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Integration Instance Identifier.
	DisplayName pulumi.StringInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) IDCS Authentication token. This is required for all realms with IDCS. Its optional as its not required for non IDCS realms.
	IdcsAt pulumi.StringPtrInput
	// (Updatable) Standard or Enterprise type
	IntegrationInstanceType pulumi.StringInput
	// (Updatable) Bring your own license.
	IsByol pulumi.BoolInput
	// (Updatable) The file server is enabled or not.
	IsFileServerEnabled pulumi.BoolPtrInput
	// (Updatable) Visual Builder is enabled or not.
	IsVisualBuilderEnabled pulumi.BoolPtrInput
	// (Updatable) The number of configured message packs
	MessagePacks pulumi.IntInput
	// Base representation of a network endpoint.
	NetworkEndpointDetails IntegrationInstanceNetworkEndpointDetailsPtrInput
	// (Updatable) The target state for the instance. Could be set to ACTIVE or INACTIVE
	State pulumi.StringPtrInput
}

func (IntegrationInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationInstanceArgs)(nil)).Elem()
}

type IntegrationInstanceInput interface {
	pulumi.Input

	ToIntegrationInstanceOutput() IntegrationInstanceOutput
	ToIntegrationInstanceOutputWithContext(ctx context.Context) IntegrationInstanceOutput
}

func (*IntegrationInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationInstance)(nil)).Elem()
}

func (i *IntegrationInstance) ToIntegrationInstanceOutput() IntegrationInstanceOutput {
	return i.ToIntegrationInstanceOutputWithContext(context.Background())
}

func (i *IntegrationInstance) ToIntegrationInstanceOutputWithContext(ctx context.Context) IntegrationInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationInstanceOutput)
}

// IntegrationInstanceArrayInput is an input type that accepts IntegrationInstanceArray and IntegrationInstanceArrayOutput values.
// You can construct a concrete instance of `IntegrationInstanceArrayInput` via:
//
//	IntegrationInstanceArray{ IntegrationInstanceArgs{...} }
type IntegrationInstanceArrayInput interface {
	pulumi.Input

	ToIntegrationInstanceArrayOutput() IntegrationInstanceArrayOutput
	ToIntegrationInstanceArrayOutputWithContext(context.Context) IntegrationInstanceArrayOutput
}

type IntegrationInstanceArray []IntegrationInstanceInput

func (IntegrationInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IntegrationInstance)(nil)).Elem()
}

func (i IntegrationInstanceArray) ToIntegrationInstanceArrayOutput() IntegrationInstanceArrayOutput {
	return i.ToIntegrationInstanceArrayOutputWithContext(context.Background())
}

func (i IntegrationInstanceArray) ToIntegrationInstanceArrayOutputWithContext(ctx context.Context) IntegrationInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationInstanceArrayOutput)
}

// IntegrationInstanceMapInput is an input type that accepts IntegrationInstanceMap and IntegrationInstanceMapOutput values.
// You can construct a concrete instance of `IntegrationInstanceMapInput` via:
//
//	IntegrationInstanceMap{ "key": IntegrationInstanceArgs{...} }
type IntegrationInstanceMapInput interface {
	pulumi.Input

	ToIntegrationInstanceMapOutput() IntegrationInstanceMapOutput
	ToIntegrationInstanceMapOutputWithContext(context.Context) IntegrationInstanceMapOutput
}

type IntegrationInstanceMap map[string]IntegrationInstanceInput

func (IntegrationInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IntegrationInstance)(nil)).Elem()
}

func (i IntegrationInstanceMap) ToIntegrationInstanceMapOutput() IntegrationInstanceMapOutput {
	return i.ToIntegrationInstanceMapOutputWithContext(context.Background())
}

func (i IntegrationInstanceMap) ToIntegrationInstanceMapOutputWithContext(ctx context.Context) IntegrationInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationInstanceMapOutput)
}

type IntegrationInstanceOutput struct{ *pulumi.OutputState }

func (IntegrationInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationInstance)(nil)).Elem()
}

func (o IntegrationInstanceOutput) ToIntegrationInstanceOutput() IntegrationInstanceOutput {
	return o
}

func (o IntegrationInstanceOutput) ToIntegrationInstanceOutputWithContext(ctx context.Context) IntegrationInstanceOutput {
	return o
}

type IntegrationInstanceArrayOutput struct{ *pulumi.OutputState }

func (IntegrationInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IntegrationInstance)(nil)).Elem()
}

func (o IntegrationInstanceArrayOutput) ToIntegrationInstanceArrayOutput() IntegrationInstanceArrayOutput {
	return o
}

func (o IntegrationInstanceArrayOutput) ToIntegrationInstanceArrayOutputWithContext(ctx context.Context) IntegrationInstanceArrayOutput {
	return o
}

func (o IntegrationInstanceArrayOutput) Index(i pulumi.IntInput) IntegrationInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IntegrationInstance {
		return vs[0].([]*IntegrationInstance)[vs[1].(int)]
	}).(IntegrationInstanceOutput)
}

type IntegrationInstanceMapOutput struct{ *pulumi.OutputState }

func (IntegrationInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IntegrationInstance)(nil)).Elem()
}

func (o IntegrationInstanceMapOutput) ToIntegrationInstanceMapOutput() IntegrationInstanceMapOutput {
	return o
}

func (o IntegrationInstanceMapOutput) ToIntegrationInstanceMapOutputWithContext(ctx context.Context) IntegrationInstanceMapOutput {
	return o
}

func (o IntegrationInstanceMapOutput) MapIndex(k pulumi.StringInput) IntegrationInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IntegrationInstance {
		return vs[0].(map[string]*IntegrationInstance)[vs[1].(string)]
	}).(IntegrationInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationInstanceInput)(nil)).Elem(), &IntegrationInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationInstanceArrayInput)(nil)).Elem(), IntegrationInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationInstanceMapInput)(nil)).Elem(), IntegrationInstanceMap{})
	pulumi.RegisterOutputType(IntegrationInstanceOutput{})
	pulumi.RegisterOutputType(IntegrationInstanceArrayOutput{})
	pulumi.RegisterOutputType(IntegrationInstanceMapOutput{})
}
