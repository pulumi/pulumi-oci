// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package jms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Fleet Drs File resource in Oracle Cloud Infrastructure Jms service.
//
// Get the detail about the created DRS file in the Fleet.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Jms"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Jms.GetFleetDrsFile(ctx, &jms.GetFleetDrsFileArgs{
//				DrsFileKey: fleetDrsFileDrsFileKey,
//				FleetId:    testFleet.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetFleetDrsFile(ctx *pulumi.Context, args *GetFleetDrsFileArgs, opts ...pulumi.InvokeOption) (*GetFleetDrsFileResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetFleetDrsFileResult
	err := ctx.Invoke("oci:Jms/getFleetDrsFile:getFleetDrsFile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFleetDrsFile.
type GetFleetDrsFileArgs struct {
	// The unique identifier of the DRS File in Object Storage.
	DrsFileKey string `pulumi:"drsFileKey"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
	FleetId string `pulumi:"fleetId"`
}

// A collection of values returned by getFleetDrsFile.
type GetFleetDrsFileResult struct {
	// The Object Storage bucket name where the DRS file is located.
	Bucket string `pulumi:"bucket"`
	// The checksum type for the DRS file in Object Storage.
	ChecksumType string `pulumi:"checksumType"`
	// The checksum value for the DRS file in Object Storage.
	ChecksumValue string `pulumi:"checksumValue"`
	// The unique identifier of the DRS file in Object Storage.
	DrsFileKey string `pulumi:"drsFileKey"`
	// The name of the DRS file in Object Store.
	DrsFileName string `pulumi:"drsFileName"`
	FleetId     string `pulumi:"fleetId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// To check if the DRS file is the detfault ones.
	IsDefault bool `pulumi:"isDefault"`
	// The namespace for Object Storage.
	Namespace string `pulumi:"namespace"`
}

func GetFleetDrsFileOutput(ctx *pulumi.Context, args GetFleetDrsFileOutputArgs, opts ...pulumi.InvokeOption) GetFleetDrsFileResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetFleetDrsFileResultOutput, error) {
			args := v.(GetFleetDrsFileArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetFleetDrsFileResult
			secret, err := ctx.InvokePackageRaw("oci:Jms/getFleetDrsFile:getFleetDrsFile", args, &rv, "", opts...)
			if err != nil {
				return GetFleetDrsFileResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetFleetDrsFileResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetFleetDrsFileResultOutput), nil
			}
			return output, nil
		}).(GetFleetDrsFileResultOutput)
}

// A collection of arguments for invoking getFleetDrsFile.
type GetFleetDrsFileOutputArgs struct {
	// The unique identifier of the DRS File in Object Storage.
	DrsFileKey pulumi.StringInput `pulumi:"drsFileKey"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
	FleetId pulumi.StringInput `pulumi:"fleetId"`
}

func (GetFleetDrsFileOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFleetDrsFileArgs)(nil)).Elem()
}

// A collection of values returned by getFleetDrsFile.
type GetFleetDrsFileResultOutput struct{ *pulumi.OutputState }

func (GetFleetDrsFileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFleetDrsFileResult)(nil)).Elem()
}

func (o GetFleetDrsFileResultOutput) ToGetFleetDrsFileResultOutput() GetFleetDrsFileResultOutput {
	return o
}

func (o GetFleetDrsFileResultOutput) ToGetFleetDrsFileResultOutputWithContext(ctx context.Context) GetFleetDrsFileResultOutput {
	return o
}

// The Object Storage bucket name where the DRS file is located.
func (o GetFleetDrsFileResultOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetFleetDrsFileResult) string { return v.Bucket }).(pulumi.StringOutput)
}

// The checksum type for the DRS file in Object Storage.
func (o GetFleetDrsFileResultOutput) ChecksumType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFleetDrsFileResult) string { return v.ChecksumType }).(pulumi.StringOutput)
}

// The checksum value for the DRS file in Object Storage.
func (o GetFleetDrsFileResultOutput) ChecksumValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetFleetDrsFileResult) string { return v.ChecksumValue }).(pulumi.StringOutput)
}

// The unique identifier of the DRS file in Object Storage.
func (o GetFleetDrsFileResultOutput) DrsFileKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetFleetDrsFileResult) string { return v.DrsFileKey }).(pulumi.StringOutput)
}

// The name of the DRS file in Object Store.
func (o GetFleetDrsFileResultOutput) DrsFileName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFleetDrsFileResult) string { return v.DrsFileName }).(pulumi.StringOutput)
}

func (o GetFleetDrsFileResultOutput) FleetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFleetDrsFileResult) string { return v.FleetId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetFleetDrsFileResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFleetDrsFileResult) string { return v.Id }).(pulumi.StringOutput)
}

// To check if the DRS file is the detfault ones.
func (o GetFleetDrsFileResultOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFleetDrsFileResult) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// The namespace for Object Storage.
func (o GetFleetDrsFileResultOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetFleetDrsFileResult) string { return v.Namespace }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetFleetDrsFileResultOutput{})
}
