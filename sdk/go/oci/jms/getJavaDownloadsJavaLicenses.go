// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package jms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Java Licenses in Oracle Cloud Infrastructure Jms Java Downloads service.
//
// Return a list with details of all Java licenses.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Jms"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Jms.GetJavaDownloadsJavaLicenses(ctx, &jms.GetJavaDownloadsJavaLicensesArgs{
//				DisplayName: pulumi.StringRef(javaLicenseDisplayName),
//				LicenseType: pulumi.StringRef(javaLicenseLicenseType),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetJavaDownloadsJavaLicenses(ctx *pulumi.Context, args *GetJavaDownloadsJavaLicensesArgs, opts ...pulumi.InvokeOption) (*GetJavaDownloadsJavaLicensesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetJavaDownloadsJavaLicensesResult
	err := ctx.Invoke("oci:Jms/getJavaDownloadsJavaLicenses:getJavaDownloadsJavaLicenses", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getJavaDownloadsJavaLicenses.
type GetJavaDownloadsJavaLicensesArgs struct {
	// A filter to return only resources that match the display name.
	DisplayName *string                              `pulumi:"displayName"`
	Filters     []GetJavaDownloadsJavaLicensesFilter `pulumi:"filters"`
	// Unique Java license type.
	LicenseType *string `pulumi:"licenseType"`
}

// A collection of values returned by getJavaDownloadsJavaLicenses.
type GetJavaDownloadsJavaLicensesResult struct {
	// Commonly used name for the license type.
	DisplayName *string                              `pulumi:"displayName"`
	Filters     []GetJavaDownloadsJavaLicensesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of java_license_collection.
	JavaLicenseCollections []GetJavaDownloadsJavaLicensesJavaLicenseCollection `pulumi:"javaLicenseCollections"`
	// License Type
	LicenseType *string `pulumi:"licenseType"`
}

func GetJavaDownloadsJavaLicensesOutput(ctx *pulumi.Context, args GetJavaDownloadsJavaLicensesOutputArgs, opts ...pulumi.InvokeOption) GetJavaDownloadsJavaLicensesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetJavaDownloadsJavaLicensesResult, error) {
			args := v.(GetJavaDownloadsJavaLicensesArgs)
			r, err := GetJavaDownloadsJavaLicenses(ctx, &args, opts...)
			var s GetJavaDownloadsJavaLicensesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetJavaDownloadsJavaLicensesResultOutput)
}

// A collection of arguments for invoking getJavaDownloadsJavaLicenses.
type GetJavaDownloadsJavaLicensesOutputArgs struct {
	// A filter to return only resources that match the display name.
	DisplayName pulumi.StringPtrInput                        `pulumi:"displayName"`
	Filters     GetJavaDownloadsJavaLicensesFilterArrayInput `pulumi:"filters"`
	// Unique Java license type.
	LicenseType pulumi.StringPtrInput `pulumi:"licenseType"`
}

func (GetJavaDownloadsJavaLicensesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJavaDownloadsJavaLicensesArgs)(nil)).Elem()
}

// A collection of values returned by getJavaDownloadsJavaLicenses.
type GetJavaDownloadsJavaLicensesResultOutput struct{ *pulumi.OutputState }

func (GetJavaDownloadsJavaLicensesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJavaDownloadsJavaLicensesResult)(nil)).Elem()
}

func (o GetJavaDownloadsJavaLicensesResultOutput) ToGetJavaDownloadsJavaLicensesResultOutput() GetJavaDownloadsJavaLicensesResultOutput {
	return o
}

func (o GetJavaDownloadsJavaLicensesResultOutput) ToGetJavaDownloadsJavaLicensesResultOutputWithContext(ctx context.Context) GetJavaDownloadsJavaLicensesResultOutput {
	return o
}

// Commonly used name for the license type.
func (o GetJavaDownloadsJavaLicensesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetJavaDownloadsJavaLicensesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetJavaDownloadsJavaLicensesResultOutput) Filters() GetJavaDownloadsJavaLicensesFilterArrayOutput {
	return o.ApplyT(func(v GetJavaDownloadsJavaLicensesResult) []GetJavaDownloadsJavaLicensesFilter { return v.Filters }).(GetJavaDownloadsJavaLicensesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetJavaDownloadsJavaLicensesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetJavaDownloadsJavaLicensesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of java_license_collection.
func (o GetJavaDownloadsJavaLicensesResultOutput) JavaLicenseCollections() GetJavaDownloadsJavaLicensesJavaLicenseCollectionArrayOutput {
	return o.ApplyT(func(v GetJavaDownloadsJavaLicensesResult) []GetJavaDownloadsJavaLicensesJavaLicenseCollection {
		return v.JavaLicenseCollections
	}).(GetJavaDownloadsJavaLicensesJavaLicenseCollectionArrayOutput)
}

// License Type
func (o GetJavaDownloadsJavaLicensesResultOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetJavaDownloadsJavaLicensesResult) *string { return v.LicenseType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetJavaDownloadsJavaLicensesResultOutput{})
}
