// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package jms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Plugin Error Analytics in Oracle Cloud Infrastructure Jms service.
//
// Returns a high level summary of PluginErrors.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/jms"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := jms.GetPluginErrorAnalytics(ctx, &jms.GetPluginErrorAnalyticsArgs{
//				CompartmentId:          pulumi.StringRef(compartmentId),
//				CompartmentIdInSubtree: pulumi.BoolRef(pluginErrorAnalyticCompartmentIdInSubtree),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetPluginErrorAnalytics(ctx *pulumi.Context, args *GetPluginErrorAnalyticsArgs, opts ...pulumi.InvokeOption) (*GetPluginErrorAnalyticsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPluginErrorAnalyticsResult
	err := ctx.Invoke("oci:Jms/getPluginErrorAnalytics:getPluginErrorAnalytics", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPluginErrorAnalytics.
type GetPluginErrorAnalyticsArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
	CompartmentId *string `pulumi:"compartmentId"`
	// Flag to determine whether the info should be gathered only in the compartment or in the compartment and its subcompartments.
	CompartmentIdInSubtree *bool                           `pulumi:"compartmentIdInSubtree"`
	Filters                []GetPluginErrorAnalyticsFilter `pulumi:"filters"`
}

// A collection of values returned by getPluginErrorAnalytics.
type GetPluginErrorAnalyticsResult struct {
	CompartmentId          *string                         `pulumi:"compartmentId"`
	CompartmentIdInSubtree *bool                           `pulumi:"compartmentIdInSubtree"`
	Filters                []GetPluginErrorAnalyticsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of plugin_error_aggregation_collection.
	PluginErrorAggregationCollections []GetPluginErrorAnalyticsPluginErrorAggregationCollection `pulumi:"pluginErrorAggregationCollections"`
}

func GetPluginErrorAnalyticsOutput(ctx *pulumi.Context, args GetPluginErrorAnalyticsOutputArgs, opts ...pulumi.InvokeOption) GetPluginErrorAnalyticsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetPluginErrorAnalyticsResultOutput, error) {
			args := v.(GetPluginErrorAnalyticsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Jms/getPluginErrorAnalytics:getPluginErrorAnalytics", args, GetPluginErrorAnalyticsResultOutput{}, options).(GetPluginErrorAnalyticsResultOutput), nil
		}).(GetPluginErrorAnalyticsResultOutput)
}

// A collection of arguments for invoking getPluginErrorAnalytics.
type GetPluginErrorAnalyticsOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// Flag to determine whether the info should be gathered only in the compartment or in the compartment and its subcompartments.
	CompartmentIdInSubtree pulumi.BoolPtrInput                     `pulumi:"compartmentIdInSubtree"`
	Filters                GetPluginErrorAnalyticsFilterArrayInput `pulumi:"filters"`
}

func (GetPluginErrorAnalyticsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPluginErrorAnalyticsArgs)(nil)).Elem()
}

// A collection of values returned by getPluginErrorAnalytics.
type GetPluginErrorAnalyticsResultOutput struct{ *pulumi.OutputState }

func (GetPluginErrorAnalyticsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPluginErrorAnalyticsResult)(nil)).Elem()
}

func (o GetPluginErrorAnalyticsResultOutput) ToGetPluginErrorAnalyticsResultOutput() GetPluginErrorAnalyticsResultOutput {
	return o
}

func (o GetPluginErrorAnalyticsResultOutput) ToGetPluginErrorAnalyticsResultOutputWithContext(ctx context.Context) GetPluginErrorAnalyticsResultOutput {
	return o
}

func (o GetPluginErrorAnalyticsResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPluginErrorAnalyticsResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

func (o GetPluginErrorAnalyticsResultOutput) CompartmentIdInSubtree() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetPluginErrorAnalyticsResult) *bool { return v.CompartmentIdInSubtree }).(pulumi.BoolPtrOutput)
}

func (o GetPluginErrorAnalyticsResultOutput) Filters() GetPluginErrorAnalyticsFilterArrayOutput {
	return o.ApplyT(func(v GetPluginErrorAnalyticsResult) []GetPluginErrorAnalyticsFilter { return v.Filters }).(GetPluginErrorAnalyticsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPluginErrorAnalyticsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPluginErrorAnalyticsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of plugin_error_aggregation_collection.
func (o GetPluginErrorAnalyticsResultOutput) PluginErrorAggregationCollections() GetPluginErrorAnalyticsPluginErrorAggregationCollectionArrayOutput {
	return o.ApplyT(func(v GetPluginErrorAnalyticsResult) []GetPluginErrorAnalyticsPluginErrorAggregationCollection {
		return v.PluginErrorAggregationCollections
	}).(GetPluginErrorAnalyticsPluginErrorAggregationCollectionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPluginErrorAnalyticsResultOutput{})
}
