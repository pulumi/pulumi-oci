// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package jms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Plugin Errors in Oracle Cloud Infrastructure Jms service.
//
// Returns a list of plugin errors that describe all detected errors.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/jms"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := jms.GetPluginErrors(ctx, &jms.GetPluginErrorsArgs{
//				CompartmentId:                     pulumi.StringRef(compartmentId),
//				CompartmentIdInSubtree:            pulumi.BoolRef(pluginErrorCompartmentIdInSubtree),
//				ManagedInstanceId:                 pulumi.StringRef(testManagedInstance.Id),
//				TimeFirstSeenGreaterThanOrEqualTo: pulumi.StringRef(pluginErrorTimeFirstSeenGreaterThanOrEqualTo),
//				TimeFirstSeenLessThanOrEqualTo:    pulumi.StringRef(pluginErrorTimeFirstSeenLessThanOrEqualTo),
//				TimeLastSeenGreaterThanOrEqualTo:  pulumi.StringRef(pluginErrorTimeLastSeenGreaterThanOrEqualTo),
//				TimeLastSeenLessThanOrEqualTo:     pulumi.StringRef(pluginErrorTimeLastSeenLessThanOrEqualTo),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetPluginErrors(ctx *pulumi.Context, args *GetPluginErrorsArgs, opts ...pulumi.InvokeOption) (*GetPluginErrorsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPluginErrorsResult
	err := ctx.Invoke("oci:Jms/getPluginErrors:getPluginErrors", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPluginErrors.
type GetPluginErrorsArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
	CompartmentId *string `pulumi:"compartmentId"`
	// Flag to determine whether the info should be gathered only in the compartment or in the compartment and its subcompartments.
	CompartmentIdInSubtree *bool                   `pulumi:"compartmentIdInSubtree"`
	Filters                []GetPluginErrorsFilter `pulumi:"filters"`
	// The Fleet-unique identifier of the managed instance.
	ManagedInstanceId *string `pulumi:"managedInstanceId"`
	// If specified, only errors with a first seen time later than this parameter will be included in the search (formatted according to RFC3339).
	TimeFirstSeenGreaterThanOrEqualTo *string `pulumi:"timeFirstSeenGreaterThanOrEqualTo"`
	// If specified, only errors with a first seen time earlier than this parameter will be included in the search (formatted according to RFC3339).
	TimeFirstSeenLessThanOrEqualTo *string `pulumi:"timeFirstSeenLessThanOrEqualTo"`
	// If specified, only errors with a last seen time later than this parameter will be included in the search (formatted according to RFC3339).
	TimeLastSeenGreaterThanOrEqualTo *string `pulumi:"timeLastSeenGreaterThanOrEqualTo"`
	// If specified, only errors with a last seen time earlier than this parameter will be included in the search (formatted according to RFC3339).
	TimeLastSeenLessThanOrEqualTo *string `pulumi:"timeLastSeenLessThanOrEqualTo"`
}

// A collection of values returned by getPluginErrors.
type GetPluginErrorsResult struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
	CompartmentId          *string                 `pulumi:"compartmentId"`
	CompartmentIdInSubtree *bool                   `pulumi:"compartmentIdInSubtree"`
	Filters                []GetPluginErrorsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Instance running the plugin.
	ManagedInstanceId *string `pulumi:"managedInstanceId"`
	// The list of plugin_error_collection.
	PluginErrorCollections            []GetPluginErrorsPluginErrorCollection `pulumi:"pluginErrorCollections"`
	TimeFirstSeenGreaterThanOrEqualTo *string                                `pulumi:"timeFirstSeenGreaterThanOrEqualTo"`
	TimeFirstSeenLessThanOrEqualTo    *string                                `pulumi:"timeFirstSeenLessThanOrEqualTo"`
	TimeLastSeenGreaterThanOrEqualTo  *string                                `pulumi:"timeLastSeenGreaterThanOrEqualTo"`
	TimeLastSeenLessThanOrEqualTo     *string                                `pulumi:"timeLastSeenLessThanOrEqualTo"`
}

func GetPluginErrorsOutput(ctx *pulumi.Context, args GetPluginErrorsOutputArgs, opts ...pulumi.InvokeOption) GetPluginErrorsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetPluginErrorsResultOutput, error) {
			args := v.(GetPluginErrorsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Jms/getPluginErrors:getPluginErrors", args, GetPluginErrorsResultOutput{}, options).(GetPluginErrorsResultOutput), nil
		}).(GetPluginErrorsResultOutput)
}

// A collection of arguments for invoking getPluginErrors.
type GetPluginErrorsOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// Flag to determine whether the info should be gathered only in the compartment or in the compartment and its subcompartments.
	CompartmentIdInSubtree pulumi.BoolPtrInput             `pulumi:"compartmentIdInSubtree"`
	Filters                GetPluginErrorsFilterArrayInput `pulumi:"filters"`
	// The Fleet-unique identifier of the managed instance.
	ManagedInstanceId pulumi.StringPtrInput `pulumi:"managedInstanceId"`
	// If specified, only errors with a first seen time later than this parameter will be included in the search (formatted according to RFC3339).
	TimeFirstSeenGreaterThanOrEqualTo pulumi.StringPtrInput `pulumi:"timeFirstSeenGreaterThanOrEqualTo"`
	// If specified, only errors with a first seen time earlier than this parameter will be included in the search (formatted according to RFC3339).
	TimeFirstSeenLessThanOrEqualTo pulumi.StringPtrInput `pulumi:"timeFirstSeenLessThanOrEqualTo"`
	// If specified, only errors with a last seen time later than this parameter will be included in the search (formatted according to RFC3339).
	TimeLastSeenGreaterThanOrEqualTo pulumi.StringPtrInput `pulumi:"timeLastSeenGreaterThanOrEqualTo"`
	// If specified, only errors with a last seen time earlier than this parameter will be included in the search (formatted according to RFC3339).
	TimeLastSeenLessThanOrEqualTo pulumi.StringPtrInput `pulumi:"timeLastSeenLessThanOrEqualTo"`
}

func (GetPluginErrorsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPluginErrorsArgs)(nil)).Elem()
}

// A collection of values returned by getPluginErrors.
type GetPluginErrorsResultOutput struct{ *pulumi.OutputState }

func (GetPluginErrorsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPluginErrorsResult)(nil)).Elem()
}

func (o GetPluginErrorsResultOutput) ToGetPluginErrorsResultOutput() GetPluginErrorsResultOutput {
	return o
}

func (o GetPluginErrorsResultOutput) ToGetPluginErrorsResultOutputWithContext(ctx context.Context) GetPluginErrorsResultOutput {
	return o
}

// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
func (o GetPluginErrorsResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPluginErrorsResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

func (o GetPluginErrorsResultOutput) CompartmentIdInSubtree() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetPluginErrorsResult) *bool { return v.CompartmentIdInSubtree }).(pulumi.BoolPtrOutput)
}

func (o GetPluginErrorsResultOutput) Filters() GetPluginErrorsFilterArrayOutput {
	return o.ApplyT(func(v GetPluginErrorsResult) []GetPluginErrorsFilter { return v.Filters }).(GetPluginErrorsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPluginErrorsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPluginErrorsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Instance running the plugin.
func (o GetPluginErrorsResultOutput) ManagedInstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPluginErrorsResult) *string { return v.ManagedInstanceId }).(pulumi.StringPtrOutput)
}

// The list of plugin_error_collection.
func (o GetPluginErrorsResultOutput) PluginErrorCollections() GetPluginErrorsPluginErrorCollectionArrayOutput {
	return o.ApplyT(func(v GetPluginErrorsResult) []GetPluginErrorsPluginErrorCollection { return v.PluginErrorCollections }).(GetPluginErrorsPluginErrorCollectionArrayOutput)
}

func (o GetPluginErrorsResultOutput) TimeFirstSeenGreaterThanOrEqualTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPluginErrorsResult) *string { return v.TimeFirstSeenGreaterThanOrEqualTo }).(pulumi.StringPtrOutput)
}

func (o GetPluginErrorsResultOutput) TimeFirstSeenLessThanOrEqualTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPluginErrorsResult) *string { return v.TimeFirstSeenLessThanOrEqualTo }).(pulumi.StringPtrOutput)
}

func (o GetPluginErrorsResultOutput) TimeLastSeenGreaterThanOrEqualTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPluginErrorsResult) *string { return v.TimeLastSeenGreaterThanOrEqualTo }).(pulumi.StringPtrOutput)
}

func (o GetPluginErrorsResultOutput) TimeLastSeenLessThanOrEqualTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPluginErrorsResult) *string { return v.TimeLastSeenLessThanOrEqualTo }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPluginErrorsResultOutput{})
}
