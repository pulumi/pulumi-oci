// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package jms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Summarize Resource Inventory resource in Oracle Cloud Infrastructure Jms service.
//
// Retrieve the inventory of JMS resources in the specified compartment: a list of the number of _active_ fleets, managed instances, Java Runtimes, Java installations, and applications.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Jms"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Jms.GetSummarizeResourceInventory(ctx, &jms.GetSummarizeResourceInventoryArgs{
//				CompartmentId: pulumi.StringRef(_var.Compartment_id),
//				TimeEnd:       pulumi.StringRef(_var.Summarize_resource_inventory_time_end),
//				TimeStart:     pulumi.StringRef(_var.Summarize_resource_inventory_time_start),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSummarizeResourceInventory(ctx *pulumi.Context, args *GetSummarizeResourceInventoryArgs, opts ...pulumi.InvokeOption) (*GetSummarizeResourceInventoryResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSummarizeResourceInventoryResult
	err := ctx.Invoke("oci:Jms/getSummarizeResourceInventory:getSummarizeResourceInventory", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSummarizeResourceInventory.
type GetSummarizeResourceInventoryArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
	CompartmentId *string `pulumi:"compartmentId"`
	// The end of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
	TimeEnd *string `pulumi:"timeEnd"`
	// The start of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
	TimeStart *string `pulumi:"timeStart"`
}

// A collection of values returned by getSummarizeResourceInventory.
type GetSummarizeResourceInventoryResult struct {
	// The number of _active_ fleets.
	ActiveFleetCount *int `pulumi:"activeFleetCount"`
	// The number of applications.
	ApplicationCount *int    `pulumi:"applicationCount"`
	CompartmentId    *string `pulumi:"compartmentId"`
	// The provider-assigned unique ID for this managed resource.
	Id *string `pulumi:"id"`
	// The number of Java installations.
	InstallationCount *int `pulumi:"installationCount"`
	// The number of Java Runtimes.
	JreCount *int `pulumi:"jreCount"`
	// The number of managed instances.
	ManagedInstanceCount *int    `pulumi:"managedInstanceCount"`
	TimeEnd              *string `pulumi:"timeEnd"`
	TimeStart            *string `pulumi:"timeStart"`
}

func GetSummarizeResourceInventoryOutput(ctx *pulumi.Context, args GetSummarizeResourceInventoryOutputArgs, opts ...pulumi.InvokeOption) GetSummarizeResourceInventoryResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSummarizeResourceInventoryResult, error) {
			args := v.(GetSummarizeResourceInventoryArgs)
			r, err := GetSummarizeResourceInventory(ctx, &args, opts...)
			var s GetSummarizeResourceInventoryResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSummarizeResourceInventoryResultOutput)
}

// A collection of arguments for invoking getSummarizeResourceInventory.
type GetSummarizeResourceInventoryOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// The end of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
	TimeEnd pulumi.StringPtrInput `pulumi:"timeEnd"`
	// The start of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
	TimeStart pulumi.StringPtrInput `pulumi:"timeStart"`
}

func (GetSummarizeResourceInventoryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummarizeResourceInventoryArgs)(nil)).Elem()
}

// A collection of values returned by getSummarizeResourceInventory.
type GetSummarizeResourceInventoryResultOutput struct{ *pulumi.OutputState }

func (GetSummarizeResourceInventoryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSummarizeResourceInventoryResult)(nil)).Elem()
}

func (o GetSummarizeResourceInventoryResultOutput) ToGetSummarizeResourceInventoryResultOutput() GetSummarizeResourceInventoryResultOutput {
	return o
}

func (o GetSummarizeResourceInventoryResultOutput) ToGetSummarizeResourceInventoryResultOutputWithContext(ctx context.Context) GetSummarizeResourceInventoryResultOutput {
	return o
}

// The number of _active_ fleets.
func (o GetSummarizeResourceInventoryResultOutput) ActiveFleetCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSummarizeResourceInventoryResult) *int { return v.ActiveFleetCount }).(pulumi.IntPtrOutput)
}

// The number of applications.
func (o GetSummarizeResourceInventoryResultOutput) ApplicationCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSummarizeResourceInventoryResult) *int { return v.ApplicationCount }).(pulumi.IntPtrOutput)
}

func (o GetSummarizeResourceInventoryResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSummarizeResourceInventoryResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSummarizeResourceInventoryResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSummarizeResourceInventoryResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The number of Java installations.
func (o GetSummarizeResourceInventoryResultOutput) InstallationCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSummarizeResourceInventoryResult) *int { return v.InstallationCount }).(pulumi.IntPtrOutput)
}

// The number of Java Runtimes.
func (o GetSummarizeResourceInventoryResultOutput) JreCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSummarizeResourceInventoryResult) *int { return v.JreCount }).(pulumi.IntPtrOutput)
}

// The number of managed instances.
func (o GetSummarizeResourceInventoryResultOutput) ManagedInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSummarizeResourceInventoryResult) *int { return v.ManagedInstanceCount }).(pulumi.IntPtrOutput)
}

func (o GetSummarizeResourceInventoryResultOutput) TimeEnd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSummarizeResourceInventoryResult) *string { return v.TimeEnd }).(pulumi.StringPtrOutput)
}

func (o GetSummarizeResourceInventoryResultOutput) TimeStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSummarizeResourceInventoryResult) *string { return v.TimeStart }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSummarizeResourceInventoryResultOutput{})
}
