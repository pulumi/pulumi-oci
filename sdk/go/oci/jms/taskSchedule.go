// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package jms

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Task Schedule resource in Oracle Cloud Infrastructure Jms service.
//
// Create a task schedule using the information provided.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/jms"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := jms.NewTaskSchedule(ctx, "test_task_schedule", &jms.TaskScheduleArgs{
//				ExecutionRecurrences: pulumi.Any(taskScheduleExecutionRecurrences),
//				FleetId:              pulumi.Any(testFleet.Id),
//				TaskDetails: &jms.TaskScheduleTaskDetailsArgs{
//					TaskType: pulumi.Any(taskScheduleTaskDetailsTaskType),
//					AddInstallationSiteTaskRequest: &jms.TaskScheduleTaskDetailsAddInstallationSiteTaskRequestArgs{
//						InstallationSites: jms.TaskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSiteArray{
//							&jms.TaskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSiteArgs{
//								ArtifactContentType: pulumi.Any(taskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSitesArtifactContentType),
//								ForceInstall:        pulumi.Any(taskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSitesForceInstall),
//								HeadlessMode:        pulumi.Any(taskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSitesHeadlessMode),
//								InstallationPath:    pulumi.Any(taskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSitesInstallationPath),
//								ManagedInstanceId:   pulumi.Any(testManagedInstance.Id),
//								ReleaseVersion:      pulumi.Any(taskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSitesReleaseVersion),
//							},
//						},
//						PostInstallationActions: pulumi.Any(taskScheduleTaskDetailsAddInstallationSiteTaskRequestPostInstallationActions),
//					},
//					CryptoTaskRequest: &jms.TaskScheduleTaskDetailsCryptoTaskRequestArgs{
//						RecordingDurationInMinutes: pulumi.Any(taskScheduleTaskDetailsCryptoTaskRequestRecordingDurationInMinutes),
//						Targets: jms.TaskScheduleTaskDetailsCryptoTaskRequestTargetArray{
//							&jms.TaskScheduleTaskDetailsCryptoTaskRequestTargetArgs{
//								ApplicationInstallationKey: pulumi.Any(taskScheduleTaskDetailsCryptoTaskRequestTargetsApplicationInstallationKey),
//								ApplicationKey:             pulumi.Any(taskScheduleTaskDetailsCryptoTaskRequestTargetsApplicationKey),
//								ContainerKey:               pulumi.Any(taskScheduleTaskDetailsCryptoTaskRequestTargetsContainerKey),
//								JreKey:                     pulumi.Any(taskScheduleTaskDetailsCryptoTaskRequestTargetsJreKey),
//								ManagedInstanceId:          pulumi.Any(testManagedInstance.Id),
//							},
//						},
//						WaitingPeriodInMinutes: pulumi.Any(taskScheduleTaskDetailsCryptoTaskRequestWaitingPeriodInMinutes),
//					},
//					DeployedApplicationMigrationTaskRequest: &jms.TaskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestArgs{
//						Targets: jms.TaskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestTargetArray{
//							&jms.TaskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestTargetArgs{
//								DeployedApplicationInstallationKey: pulumi.Any(taskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestTargetsDeployedApplicationInstallationKey),
//								ExcludePackagePrefixes:             pulumi.Any(taskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestTargetsExcludePackagePrefixes),
//								IncludePackagePrefixes:             pulumi.Any(taskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestTargetsIncludePackagePrefixes),
//								ManagedInstanceId:                  pulumi.Any(testManagedInstance.Id),
//								SourceJdkVersion:                   pulumi.Any(taskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestTargetsSourceJdkVersion),
//								TargetJdkVersion:                   pulumi.Any(taskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestTargetsTargetJdkVersion),
//							},
//						},
//					},
//					JavaMigrationTaskRequest: &jms.TaskScheduleTaskDetailsJavaMigrationTaskRequestArgs{
//						Targets: jms.TaskScheduleTaskDetailsJavaMigrationTaskRequestTargetArray{
//							&jms.TaskScheduleTaskDetailsJavaMigrationTaskRequestTargetArgs{
//								ApplicationInstallationKey: pulumi.Any(taskScheduleTaskDetailsJavaMigrationTaskRequestTargetsApplicationInstallationKey),
//								ExcludePackagePrefixes:     pulumi.Any(taskScheduleTaskDetailsJavaMigrationTaskRequestTargetsExcludePackagePrefixes),
//								IncludePackagePrefixes:     pulumi.Any(taskScheduleTaskDetailsJavaMigrationTaskRequestTargetsIncludePackagePrefixes),
//								ManagedInstanceId:          pulumi.Any(testManagedInstance.Id),
//								SourceJdkVersion:           pulumi.Any(taskScheduleTaskDetailsJavaMigrationTaskRequestTargetsSourceJdkVersion),
//								TargetJdkVersion:           pulumi.Any(taskScheduleTaskDetailsJavaMigrationTaskRequestTargetsTargetJdkVersion),
//							},
//						},
//					},
//					JfrTaskRequest: &jms.TaskScheduleTaskDetailsJfrTaskRequestArgs{
//						JfcProfileName:             pulumi.Any(testProfile.Name),
//						JfcV1:                      pulumi.Any(taskScheduleTaskDetailsJfrTaskRequestJfcV1),
//						JfcV2:                      pulumi.Any(taskScheduleTaskDetailsJfrTaskRequestJfcV2),
//						RecordingDurationInMinutes: pulumi.Any(taskScheduleTaskDetailsJfrTaskRequestRecordingDurationInMinutes),
//						RecordingSizeInMb:          pulumi.Any(taskScheduleTaskDetailsJfrTaskRequestRecordingSizeInMb),
//						Targets: jms.TaskScheduleTaskDetailsJfrTaskRequestTargetArray{
//							&jms.TaskScheduleTaskDetailsJfrTaskRequestTargetArgs{
//								ApplicationInstallationKey: pulumi.Any(taskScheduleTaskDetailsJfrTaskRequestTargetsApplicationInstallationKey),
//								ApplicationKey:             pulumi.Any(taskScheduleTaskDetailsJfrTaskRequestTargetsApplicationKey),
//								ContainerKey:               pulumi.Any(taskScheduleTaskDetailsJfrTaskRequestTargetsContainerKey),
//								JreKey:                     pulumi.Any(taskScheduleTaskDetailsJfrTaskRequestTargetsJreKey),
//								ManagedInstanceId:          pulumi.Any(testManagedInstance.Id),
//							},
//						},
//						WaitingPeriodInMinutes: pulumi.Any(taskScheduleTaskDetailsJfrTaskRequestWaitingPeriodInMinutes),
//					},
//					PerformanceTuningTaskRequest: &jms.TaskScheduleTaskDetailsPerformanceTuningTaskRequestArgs{
//						RecordingDurationInMinutes: pulumi.Any(taskScheduleTaskDetailsPerformanceTuningTaskRequestRecordingDurationInMinutes),
//						Targets: jms.TaskScheduleTaskDetailsPerformanceTuningTaskRequestTargetArray{
//							&jms.TaskScheduleTaskDetailsPerformanceTuningTaskRequestTargetArgs{
//								ApplicationInstallationKey: pulumi.Any(taskScheduleTaskDetailsPerformanceTuningTaskRequestTargetsApplicationInstallationKey),
//								ApplicationKey:             pulumi.Any(taskScheduleTaskDetailsPerformanceTuningTaskRequestTargetsApplicationKey),
//								ContainerKey:               pulumi.Any(taskScheduleTaskDetailsPerformanceTuningTaskRequestTargetsContainerKey),
//								JreKey:                     pulumi.Any(taskScheduleTaskDetailsPerformanceTuningTaskRequestTargetsJreKey),
//								ManagedInstanceId:          pulumi.Any(testManagedInstance.Id),
//							},
//						},
//						WaitingPeriodInMinutes: pulumi.Any(taskScheduleTaskDetailsPerformanceTuningTaskRequestWaitingPeriodInMinutes),
//					},
//					RemoveInstallationSiteTaskRequest: &jms.TaskScheduleTaskDetailsRemoveInstallationSiteTaskRequestArgs{
//						InstallationSites: jms.TaskScheduleTaskDetailsRemoveInstallationSiteTaskRequestInstallationSiteArray{
//							&jms.TaskScheduleTaskDetailsRemoveInstallationSiteTaskRequestInstallationSiteArgs{
//								InstallationKey:   pulumi.Any(taskScheduleTaskDetailsRemoveInstallationSiteTaskRequestInstallationSitesInstallationKey),
//								ManagedInstanceId: pulumi.Any(testManagedInstance.Id),
//							},
//						},
//					},
//					ScanJavaServerTaskRequest: &jms.TaskScheduleTaskDetailsScanJavaServerTaskRequestArgs{
//						ManagedInstanceIds: pulumi.Any(taskScheduleTaskDetailsScanJavaServerTaskRequestManagedInstanceIds),
//					},
//					ScanLibraryTaskRequest: &jms.TaskScheduleTaskDetailsScanLibraryTaskRequestArgs{
//						DynamicScanDurationInMinutes: pulumi.Any(taskScheduleTaskDetailsScanLibraryTaskRequestDynamicScanDurationInMinutes),
//						IsDynamicScan:                pulumi.Any(taskScheduleTaskDetailsScanLibraryTaskRequestIsDynamicScan),
//						ManagedInstanceIds:           pulumi.Any(taskScheduleTaskDetailsScanLibraryTaskRequestManagedInstanceIds),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// TaskSchedules can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Jms/taskSchedule:TaskSchedule test_task_schedule "id"
// ```
type TaskSchedule struct {
	pulumi.CustomResourceState

	// Name of the task creator.
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	// (Updatable) Recurrence specification for the task schedule execution (formatted according to [RFC-5545](https://icalendar.org/RFC-Specifications/iCalendar-RFC-5545/)). To run daily for 10 occurrences starts on September 2, 2024 09:00 EDT, it should be 'DTSTART;TZID=America/New_York:20240902T090000 RRULE:FREQ=DAILY;COUNT=10'. To run every 3 hours from 9:00 AM to 5:00 PM on August 5, 2024 EDT, it should be 'DTSTART;TZID=America/New_York:20240805T090000 RRULE:FREQ=HOURLY;INTERVAL=3;UNTIL=20240805T170000Z'.
	ExecutionRecurrences pulumi.StringOutput `pulumi:"executionRecurrences"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
	FleetId pulumi.StringOutput `pulumi:"fleetId"`
	// The name of the task schedule.
	Name pulumi.StringOutput `pulumi:"name"`
	// All possible status of task schedule.
	State pulumi.StringOutput `pulumi:"state"`
	// (Updatable) The minimum details of a task.
	TaskDetails TaskScheduleTaskDetailsOutput `pulumi:"taskDetails"`
	// The date and time the task schedule was created (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The date and time the task schedule ran last (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
	TimeLastRun pulumi.StringOutput `pulumi:"timeLastRun"`
	// The date and time the task schedule was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
	TimeLastUpdated pulumi.StringOutput `pulumi:"timeLastUpdated"`
	// The date and time the task schedule will run next (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
	TimeNextRun pulumi.StringOutput `pulumi:"timeNextRun"`
}

// NewTaskSchedule registers a new resource with the given unique name, arguments, and options.
func NewTaskSchedule(ctx *pulumi.Context,
	name string, args *TaskScheduleArgs, opts ...pulumi.ResourceOption) (*TaskSchedule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ExecutionRecurrences == nil {
		return nil, errors.New("invalid value for required argument 'ExecutionRecurrences'")
	}
	if args.FleetId == nil {
		return nil, errors.New("invalid value for required argument 'FleetId'")
	}
	if args.TaskDetails == nil {
		return nil, errors.New("invalid value for required argument 'TaskDetails'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TaskSchedule
	err := ctx.RegisterResource("oci:Jms/taskSchedule:TaskSchedule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTaskSchedule gets an existing TaskSchedule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTaskSchedule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TaskScheduleState, opts ...pulumi.ResourceOption) (*TaskSchedule, error) {
	var resource TaskSchedule
	err := ctx.ReadResource("oci:Jms/taskSchedule:TaskSchedule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TaskSchedule resources.
type taskScheduleState struct {
	// Name of the task creator.
	CreatedBy *string `pulumi:"createdBy"`
	// (Updatable) Recurrence specification for the task schedule execution (formatted according to [RFC-5545](https://icalendar.org/RFC-Specifications/iCalendar-RFC-5545/)). To run daily for 10 occurrences starts on September 2, 2024 09:00 EDT, it should be 'DTSTART;TZID=America/New_York:20240902T090000 RRULE:FREQ=DAILY;COUNT=10'. To run every 3 hours from 9:00 AM to 5:00 PM on August 5, 2024 EDT, it should be 'DTSTART;TZID=America/New_York:20240805T090000 RRULE:FREQ=HOURLY;INTERVAL=3;UNTIL=20240805T170000Z'.
	ExecutionRecurrences *string `pulumi:"executionRecurrences"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
	FleetId *string `pulumi:"fleetId"`
	// The name of the task schedule.
	Name *string `pulumi:"name"`
	// All possible status of task schedule.
	State *string `pulumi:"state"`
	// (Updatable) The minimum details of a task.
	TaskDetails *TaskScheduleTaskDetails `pulumi:"taskDetails"`
	// The date and time the task schedule was created (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the task schedule ran last (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
	TimeLastRun *string `pulumi:"timeLastRun"`
	// The date and time the task schedule was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
	TimeLastUpdated *string `pulumi:"timeLastUpdated"`
	// The date and time the task schedule will run next (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
	TimeNextRun *string `pulumi:"timeNextRun"`
}

type TaskScheduleState struct {
	// Name of the task creator.
	CreatedBy pulumi.StringPtrInput
	// (Updatable) Recurrence specification for the task schedule execution (formatted according to [RFC-5545](https://icalendar.org/RFC-Specifications/iCalendar-RFC-5545/)). To run daily for 10 occurrences starts on September 2, 2024 09:00 EDT, it should be 'DTSTART;TZID=America/New_York:20240902T090000 RRULE:FREQ=DAILY;COUNT=10'. To run every 3 hours from 9:00 AM to 5:00 PM on August 5, 2024 EDT, it should be 'DTSTART;TZID=America/New_York:20240805T090000 RRULE:FREQ=HOURLY;INTERVAL=3;UNTIL=20240805T170000Z'.
	ExecutionRecurrences pulumi.StringPtrInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
	FleetId pulumi.StringPtrInput
	// The name of the task schedule.
	Name pulumi.StringPtrInput
	// All possible status of task schedule.
	State pulumi.StringPtrInput
	// (Updatable) The minimum details of a task.
	TaskDetails TaskScheduleTaskDetailsPtrInput
	// The date and time the task schedule was created (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
	TimeCreated pulumi.StringPtrInput
	// The date and time the task schedule ran last (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
	TimeLastRun pulumi.StringPtrInput
	// The date and time the task schedule was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
	TimeLastUpdated pulumi.StringPtrInput
	// The date and time the task schedule will run next (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
	TimeNextRun pulumi.StringPtrInput
}

func (TaskScheduleState) ElementType() reflect.Type {
	return reflect.TypeOf((*taskScheduleState)(nil)).Elem()
}

type taskScheduleArgs struct {
	// (Updatable) Recurrence specification for the task schedule execution (formatted according to [RFC-5545](https://icalendar.org/RFC-Specifications/iCalendar-RFC-5545/)). To run daily for 10 occurrences starts on September 2, 2024 09:00 EDT, it should be 'DTSTART;TZID=America/New_York:20240902T090000 RRULE:FREQ=DAILY;COUNT=10'. To run every 3 hours from 9:00 AM to 5:00 PM on August 5, 2024 EDT, it should be 'DTSTART;TZID=America/New_York:20240805T090000 RRULE:FREQ=HOURLY;INTERVAL=3;UNTIL=20240805T170000Z'.
	ExecutionRecurrences string `pulumi:"executionRecurrences"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
	FleetId string `pulumi:"fleetId"`
	// (Updatable) The minimum details of a task.
	TaskDetails TaskScheduleTaskDetails `pulumi:"taskDetails"`
}

// The set of arguments for constructing a TaskSchedule resource.
type TaskScheduleArgs struct {
	// (Updatable) Recurrence specification for the task schedule execution (formatted according to [RFC-5545](https://icalendar.org/RFC-Specifications/iCalendar-RFC-5545/)). To run daily for 10 occurrences starts on September 2, 2024 09:00 EDT, it should be 'DTSTART;TZID=America/New_York:20240902T090000 RRULE:FREQ=DAILY;COUNT=10'. To run every 3 hours from 9:00 AM to 5:00 PM on August 5, 2024 EDT, it should be 'DTSTART;TZID=America/New_York:20240805T090000 RRULE:FREQ=HOURLY;INTERVAL=3;UNTIL=20240805T170000Z'.
	ExecutionRecurrences pulumi.StringInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
	FleetId pulumi.StringInput
	// (Updatable) The minimum details of a task.
	TaskDetails TaskScheduleTaskDetailsInput
}

func (TaskScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*taskScheduleArgs)(nil)).Elem()
}

type TaskScheduleInput interface {
	pulumi.Input

	ToTaskScheduleOutput() TaskScheduleOutput
	ToTaskScheduleOutputWithContext(ctx context.Context) TaskScheduleOutput
}

func (*TaskSchedule) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskSchedule)(nil)).Elem()
}

func (i *TaskSchedule) ToTaskScheduleOutput() TaskScheduleOutput {
	return i.ToTaskScheduleOutputWithContext(context.Background())
}

func (i *TaskSchedule) ToTaskScheduleOutputWithContext(ctx context.Context) TaskScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskScheduleOutput)
}

// TaskScheduleArrayInput is an input type that accepts TaskScheduleArray and TaskScheduleArrayOutput values.
// You can construct a concrete instance of `TaskScheduleArrayInput` via:
//
//	TaskScheduleArray{ TaskScheduleArgs{...} }
type TaskScheduleArrayInput interface {
	pulumi.Input

	ToTaskScheduleArrayOutput() TaskScheduleArrayOutput
	ToTaskScheduleArrayOutputWithContext(context.Context) TaskScheduleArrayOutput
}

type TaskScheduleArray []TaskScheduleInput

func (TaskScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TaskSchedule)(nil)).Elem()
}

func (i TaskScheduleArray) ToTaskScheduleArrayOutput() TaskScheduleArrayOutput {
	return i.ToTaskScheduleArrayOutputWithContext(context.Background())
}

func (i TaskScheduleArray) ToTaskScheduleArrayOutputWithContext(ctx context.Context) TaskScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskScheduleArrayOutput)
}

// TaskScheduleMapInput is an input type that accepts TaskScheduleMap and TaskScheduleMapOutput values.
// You can construct a concrete instance of `TaskScheduleMapInput` via:
//
//	TaskScheduleMap{ "key": TaskScheduleArgs{...} }
type TaskScheduleMapInput interface {
	pulumi.Input

	ToTaskScheduleMapOutput() TaskScheduleMapOutput
	ToTaskScheduleMapOutputWithContext(context.Context) TaskScheduleMapOutput
}

type TaskScheduleMap map[string]TaskScheduleInput

func (TaskScheduleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TaskSchedule)(nil)).Elem()
}

func (i TaskScheduleMap) ToTaskScheduleMapOutput() TaskScheduleMapOutput {
	return i.ToTaskScheduleMapOutputWithContext(context.Background())
}

func (i TaskScheduleMap) ToTaskScheduleMapOutputWithContext(ctx context.Context) TaskScheduleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskScheduleMapOutput)
}

type TaskScheduleOutput struct{ *pulumi.OutputState }

func (TaskScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskSchedule)(nil)).Elem()
}

func (o TaskScheduleOutput) ToTaskScheduleOutput() TaskScheduleOutput {
	return o
}

func (o TaskScheduleOutput) ToTaskScheduleOutputWithContext(ctx context.Context) TaskScheduleOutput {
	return o
}

// Name of the task creator.
func (o TaskScheduleOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *TaskSchedule) pulumi.StringOutput { return v.CreatedBy }).(pulumi.StringOutput)
}

// (Updatable) Recurrence specification for the task schedule execution (formatted according to [RFC-5545](https://icalendar.org/RFC-Specifications/iCalendar-RFC-5545/)). To run daily for 10 occurrences starts on September 2, 2024 09:00 EDT, it should be 'DTSTART;TZID=America/New_York:20240902T090000 RRULE:FREQ=DAILY;COUNT=10'. To run every 3 hours from 9:00 AM to 5:00 PM on August 5, 2024 EDT, it should be 'DTSTART;TZID=America/New_York:20240805T090000 RRULE:FREQ=HOURLY;INTERVAL=3;UNTIL=20240805T170000Z'.
func (o TaskScheduleOutput) ExecutionRecurrences() pulumi.StringOutput {
	return o.ApplyT(func(v *TaskSchedule) pulumi.StringOutput { return v.ExecutionRecurrences }).(pulumi.StringOutput)
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
func (o TaskScheduleOutput) FleetId() pulumi.StringOutput {
	return o.ApplyT(func(v *TaskSchedule) pulumi.StringOutput { return v.FleetId }).(pulumi.StringOutput)
}

// The name of the task schedule.
func (o TaskScheduleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TaskSchedule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// All possible status of task schedule.
func (o TaskScheduleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *TaskSchedule) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// (Updatable) The minimum details of a task.
func (o TaskScheduleOutput) TaskDetails() TaskScheduleTaskDetailsOutput {
	return o.ApplyT(func(v *TaskSchedule) TaskScheduleTaskDetailsOutput { return v.TaskDetails }).(TaskScheduleTaskDetailsOutput)
}

// The date and time the task schedule was created (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
func (o TaskScheduleOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *TaskSchedule) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the task schedule ran last (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
func (o TaskScheduleOutput) TimeLastRun() pulumi.StringOutput {
	return o.ApplyT(func(v *TaskSchedule) pulumi.StringOutput { return v.TimeLastRun }).(pulumi.StringOutput)
}

// The date and time the task schedule was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
func (o TaskScheduleOutput) TimeLastUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *TaskSchedule) pulumi.StringOutput { return v.TimeLastUpdated }).(pulumi.StringOutput)
}

// The date and time the task schedule will run next (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
func (o TaskScheduleOutput) TimeNextRun() pulumi.StringOutput {
	return o.ApplyT(func(v *TaskSchedule) pulumi.StringOutput { return v.TimeNextRun }).(pulumi.StringOutput)
}

type TaskScheduleArrayOutput struct{ *pulumi.OutputState }

func (TaskScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TaskSchedule)(nil)).Elem()
}

func (o TaskScheduleArrayOutput) ToTaskScheduleArrayOutput() TaskScheduleArrayOutput {
	return o
}

func (o TaskScheduleArrayOutput) ToTaskScheduleArrayOutputWithContext(ctx context.Context) TaskScheduleArrayOutput {
	return o
}

func (o TaskScheduleArrayOutput) Index(i pulumi.IntInput) TaskScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TaskSchedule {
		return vs[0].([]*TaskSchedule)[vs[1].(int)]
	}).(TaskScheduleOutput)
}

type TaskScheduleMapOutput struct{ *pulumi.OutputState }

func (TaskScheduleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TaskSchedule)(nil)).Elem()
}

func (o TaskScheduleMapOutput) ToTaskScheduleMapOutput() TaskScheduleMapOutput {
	return o
}

func (o TaskScheduleMapOutput) ToTaskScheduleMapOutputWithContext(ctx context.Context) TaskScheduleMapOutput {
	return o
}

func (o TaskScheduleMapOutput) MapIndex(k pulumi.StringInput) TaskScheduleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TaskSchedule {
		return vs[0].(map[string]*TaskSchedule)[vs[1].(string)]
	}).(TaskScheduleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TaskScheduleInput)(nil)).Elem(), &TaskSchedule{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskScheduleArrayInput)(nil)).Elem(), TaskScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskScheduleMapInput)(nil)).Elem(), TaskScheduleMap{})
	pulumi.RegisterOutputType(TaskScheduleOutput{})
	pulumi.RegisterOutputType(TaskScheduleArrayOutput{})
	pulumi.RegisterOutputType(TaskScheduleMapOutput{})
}
