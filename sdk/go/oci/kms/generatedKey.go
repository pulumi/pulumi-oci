// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Generated Key resource in Oracle Cloud Infrastructure Kms service.
//
// Generates a key that you can use to encrypt or decrypt data.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Kms"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Kms.NewGeneratedKey(ctx, "testGeneratedKey", &Kms.GeneratedKeyArgs{
//				CryptoEndpoint:      pulumi.Any(_var.Generated_key_crypto_endpoint),
//				IncludePlaintextKey: pulumi.Any(_var.Generated_key_include_plaintext_key),
//				KeyId:               pulumi.Any(oci_kms_key.Test_key.Id),
//				KeyShape: &kms.GeneratedKeyKeyShapeArgs{
//					Algorithm: pulumi.Any(_var.Generated_key_key_shape_algorithm),
//					Length:    pulumi.Any(_var.Generated_key_key_shape_length),
//					CurveId:   pulumi.Any(oci_kms_curve.Test_curve.Id),
//				},
//				AssociatedData: pulumi.Any(_var.Generated_key_associated_data),
//				LoggingContext: pulumi.Any(_var.Generated_key_logging_context),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Import is not supported for this resource.
type GeneratedKey struct {
	pulumi.CustomResourceState

	// Information that can be used to provide an encryption context for the encrypted data. The length of the string representation of the associated data must be fewer than 4096 characters.
	AssociatedData pulumi.MapOutput `pulumi:"associatedData"`
	// The encrypted data encryption key generated from a master encryption key.
	Ciphertext pulumi.StringOutput `pulumi:"ciphertext"`
	// The service endpoint to perform cryptographic operations against. Cryptographic operations include 'Encrypt,' 'Decrypt,' and 'GenerateDataEncryptionKey' operations. see Vault Crypto endpoint.
	CryptoEndpoint pulumi.StringOutput `pulumi:"cryptoEndpoint"`
	// If true, the generated key is also returned unencrypted.
	IncludePlaintextKey pulumi.BoolOutput `pulumi:"includePlaintextKey"`
	// The OCID of the master encryption key to encrypt the generated data encryption key with.
	KeyId pulumi.StringOutput `pulumi:"keyId"`
	// The cryptographic properties of a key.
	KeyShape GeneratedKeyKeyShapeOutput `pulumi:"keyShape"`
	// Information that provides context for audit logging. You can provide this additional data by formatting it as key-value pairs to include in audit logs when audit logging is enabled.
	LoggingContext pulumi.MapOutput `pulumi:"loggingContext"`
	// The plaintext data encryption key, a base64-encoded sequence of random bytes, which is included if the [GenerateDataEncryptionKey](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/GeneratedKey/GenerateDataEncryptionKey) request includes the `includePlaintextKey` parameter and sets its value to "true".
	Plaintext pulumi.StringOutput `pulumi:"plaintext"`
	// The checksum of the plaintext data encryption key, which is included if the [GenerateDataEncryptionKey](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/GeneratedKey/GenerateDataEncryptionKey) request includes the `includePlaintextKey` parameter and sets its value to "true".
	PlaintextChecksum pulumi.StringOutput `pulumi:"plaintextChecksum"`
}

// NewGeneratedKey registers a new resource with the given unique name, arguments, and options.
func NewGeneratedKey(ctx *pulumi.Context,
	name string, args *GeneratedKeyArgs, opts ...pulumi.ResourceOption) (*GeneratedKey, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CryptoEndpoint == nil {
		return nil, errors.New("invalid value for required argument 'CryptoEndpoint'")
	}
	if args.IncludePlaintextKey == nil {
		return nil, errors.New("invalid value for required argument 'IncludePlaintextKey'")
	}
	if args.KeyId == nil {
		return nil, errors.New("invalid value for required argument 'KeyId'")
	}
	if args.KeyShape == nil {
		return nil, errors.New("invalid value for required argument 'KeyShape'")
	}
	var resource GeneratedKey
	err := ctx.RegisterResource("oci:Kms/generatedKey:GeneratedKey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGeneratedKey gets an existing GeneratedKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGeneratedKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GeneratedKeyState, opts ...pulumi.ResourceOption) (*GeneratedKey, error) {
	var resource GeneratedKey
	err := ctx.ReadResource("oci:Kms/generatedKey:GeneratedKey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GeneratedKey resources.
type generatedKeyState struct {
	// Information that can be used to provide an encryption context for the encrypted data. The length of the string representation of the associated data must be fewer than 4096 characters.
	AssociatedData map[string]interface{} `pulumi:"associatedData"`
	// The encrypted data encryption key generated from a master encryption key.
	Ciphertext *string `pulumi:"ciphertext"`
	// The service endpoint to perform cryptographic operations against. Cryptographic operations include 'Encrypt,' 'Decrypt,' and 'GenerateDataEncryptionKey' operations. see Vault Crypto endpoint.
	CryptoEndpoint *string `pulumi:"cryptoEndpoint"`
	// If true, the generated key is also returned unencrypted.
	IncludePlaintextKey *bool `pulumi:"includePlaintextKey"`
	// The OCID of the master encryption key to encrypt the generated data encryption key with.
	KeyId *string `pulumi:"keyId"`
	// The cryptographic properties of a key.
	KeyShape *GeneratedKeyKeyShape `pulumi:"keyShape"`
	// Information that provides context for audit logging. You can provide this additional data by formatting it as key-value pairs to include in audit logs when audit logging is enabled.
	LoggingContext map[string]interface{} `pulumi:"loggingContext"`
	// The plaintext data encryption key, a base64-encoded sequence of random bytes, which is included if the [GenerateDataEncryptionKey](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/GeneratedKey/GenerateDataEncryptionKey) request includes the `includePlaintextKey` parameter and sets its value to "true".
	Plaintext *string `pulumi:"plaintext"`
	// The checksum of the plaintext data encryption key, which is included if the [GenerateDataEncryptionKey](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/GeneratedKey/GenerateDataEncryptionKey) request includes the `includePlaintextKey` parameter and sets its value to "true".
	PlaintextChecksum *string `pulumi:"plaintextChecksum"`
}

type GeneratedKeyState struct {
	// Information that can be used to provide an encryption context for the encrypted data. The length of the string representation of the associated data must be fewer than 4096 characters.
	AssociatedData pulumi.MapInput
	// The encrypted data encryption key generated from a master encryption key.
	Ciphertext pulumi.StringPtrInput
	// The service endpoint to perform cryptographic operations against. Cryptographic operations include 'Encrypt,' 'Decrypt,' and 'GenerateDataEncryptionKey' operations. see Vault Crypto endpoint.
	CryptoEndpoint pulumi.StringPtrInput
	// If true, the generated key is also returned unencrypted.
	IncludePlaintextKey pulumi.BoolPtrInput
	// The OCID of the master encryption key to encrypt the generated data encryption key with.
	KeyId pulumi.StringPtrInput
	// The cryptographic properties of a key.
	KeyShape GeneratedKeyKeyShapePtrInput
	// Information that provides context for audit logging. You can provide this additional data by formatting it as key-value pairs to include in audit logs when audit logging is enabled.
	LoggingContext pulumi.MapInput
	// The plaintext data encryption key, a base64-encoded sequence of random bytes, which is included if the [GenerateDataEncryptionKey](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/GeneratedKey/GenerateDataEncryptionKey) request includes the `includePlaintextKey` parameter and sets its value to "true".
	Plaintext pulumi.StringPtrInput
	// The checksum of the plaintext data encryption key, which is included if the [GenerateDataEncryptionKey](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/GeneratedKey/GenerateDataEncryptionKey) request includes the `includePlaintextKey` parameter and sets its value to "true".
	PlaintextChecksum pulumi.StringPtrInput
}

func (GeneratedKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*generatedKeyState)(nil)).Elem()
}

type generatedKeyArgs struct {
	// Information that can be used to provide an encryption context for the encrypted data. The length of the string representation of the associated data must be fewer than 4096 characters.
	AssociatedData map[string]interface{} `pulumi:"associatedData"`
	// The service endpoint to perform cryptographic operations against. Cryptographic operations include 'Encrypt,' 'Decrypt,' and 'GenerateDataEncryptionKey' operations. see Vault Crypto endpoint.
	CryptoEndpoint string `pulumi:"cryptoEndpoint"`
	// If true, the generated key is also returned unencrypted.
	IncludePlaintextKey bool `pulumi:"includePlaintextKey"`
	// The OCID of the master encryption key to encrypt the generated data encryption key with.
	KeyId string `pulumi:"keyId"`
	// The cryptographic properties of a key.
	KeyShape GeneratedKeyKeyShape `pulumi:"keyShape"`
	// Information that provides context for audit logging. You can provide this additional data by formatting it as key-value pairs to include in audit logs when audit logging is enabled.
	LoggingContext map[string]interface{} `pulumi:"loggingContext"`
}

// The set of arguments for constructing a GeneratedKey resource.
type GeneratedKeyArgs struct {
	// Information that can be used to provide an encryption context for the encrypted data. The length of the string representation of the associated data must be fewer than 4096 characters.
	AssociatedData pulumi.MapInput
	// The service endpoint to perform cryptographic operations against. Cryptographic operations include 'Encrypt,' 'Decrypt,' and 'GenerateDataEncryptionKey' operations. see Vault Crypto endpoint.
	CryptoEndpoint pulumi.StringInput
	// If true, the generated key is also returned unencrypted.
	IncludePlaintextKey pulumi.BoolInput
	// The OCID of the master encryption key to encrypt the generated data encryption key with.
	KeyId pulumi.StringInput
	// The cryptographic properties of a key.
	KeyShape GeneratedKeyKeyShapeInput
	// Information that provides context for audit logging. You can provide this additional data by formatting it as key-value pairs to include in audit logs when audit logging is enabled.
	LoggingContext pulumi.MapInput
}

func (GeneratedKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*generatedKeyArgs)(nil)).Elem()
}

type GeneratedKeyInput interface {
	pulumi.Input

	ToGeneratedKeyOutput() GeneratedKeyOutput
	ToGeneratedKeyOutputWithContext(ctx context.Context) GeneratedKeyOutput
}

func (*GeneratedKey) ElementType() reflect.Type {
	return reflect.TypeOf((**GeneratedKey)(nil)).Elem()
}

func (i *GeneratedKey) ToGeneratedKeyOutput() GeneratedKeyOutput {
	return i.ToGeneratedKeyOutputWithContext(context.Background())
}

func (i *GeneratedKey) ToGeneratedKeyOutputWithContext(ctx context.Context) GeneratedKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeneratedKeyOutput)
}

// GeneratedKeyArrayInput is an input type that accepts GeneratedKeyArray and GeneratedKeyArrayOutput values.
// You can construct a concrete instance of `GeneratedKeyArrayInput` via:
//
//	GeneratedKeyArray{ GeneratedKeyArgs{...} }
type GeneratedKeyArrayInput interface {
	pulumi.Input

	ToGeneratedKeyArrayOutput() GeneratedKeyArrayOutput
	ToGeneratedKeyArrayOutputWithContext(context.Context) GeneratedKeyArrayOutput
}

type GeneratedKeyArray []GeneratedKeyInput

func (GeneratedKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GeneratedKey)(nil)).Elem()
}

func (i GeneratedKeyArray) ToGeneratedKeyArrayOutput() GeneratedKeyArrayOutput {
	return i.ToGeneratedKeyArrayOutputWithContext(context.Background())
}

func (i GeneratedKeyArray) ToGeneratedKeyArrayOutputWithContext(ctx context.Context) GeneratedKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeneratedKeyArrayOutput)
}

// GeneratedKeyMapInput is an input type that accepts GeneratedKeyMap and GeneratedKeyMapOutput values.
// You can construct a concrete instance of `GeneratedKeyMapInput` via:
//
//	GeneratedKeyMap{ "key": GeneratedKeyArgs{...} }
type GeneratedKeyMapInput interface {
	pulumi.Input

	ToGeneratedKeyMapOutput() GeneratedKeyMapOutput
	ToGeneratedKeyMapOutputWithContext(context.Context) GeneratedKeyMapOutput
}

type GeneratedKeyMap map[string]GeneratedKeyInput

func (GeneratedKeyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GeneratedKey)(nil)).Elem()
}

func (i GeneratedKeyMap) ToGeneratedKeyMapOutput() GeneratedKeyMapOutput {
	return i.ToGeneratedKeyMapOutputWithContext(context.Background())
}

func (i GeneratedKeyMap) ToGeneratedKeyMapOutputWithContext(ctx context.Context) GeneratedKeyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeneratedKeyMapOutput)
}

type GeneratedKeyOutput struct{ *pulumi.OutputState }

func (GeneratedKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GeneratedKey)(nil)).Elem()
}

func (o GeneratedKeyOutput) ToGeneratedKeyOutput() GeneratedKeyOutput {
	return o
}

func (o GeneratedKeyOutput) ToGeneratedKeyOutputWithContext(ctx context.Context) GeneratedKeyOutput {
	return o
}

type GeneratedKeyArrayOutput struct{ *pulumi.OutputState }

func (GeneratedKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GeneratedKey)(nil)).Elem()
}

func (o GeneratedKeyArrayOutput) ToGeneratedKeyArrayOutput() GeneratedKeyArrayOutput {
	return o
}

func (o GeneratedKeyArrayOutput) ToGeneratedKeyArrayOutputWithContext(ctx context.Context) GeneratedKeyArrayOutput {
	return o
}

func (o GeneratedKeyArrayOutput) Index(i pulumi.IntInput) GeneratedKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GeneratedKey {
		return vs[0].([]*GeneratedKey)[vs[1].(int)]
	}).(GeneratedKeyOutput)
}

type GeneratedKeyMapOutput struct{ *pulumi.OutputState }

func (GeneratedKeyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GeneratedKey)(nil)).Elem()
}

func (o GeneratedKeyMapOutput) ToGeneratedKeyMapOutput() GeneratedKeyMapOutput {
	return o
}

func (o GeneratedKeyMapOutput) ToGeneratedKeyMapOutputWithContext(ctx context.Context) GeneratedKeyMapOutput {
	return o
}

func (o GeneratedKeyMapOutput) MapIndex(k pulumi.StringInput) GeneratedKeyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GeneratedKey {
		return vs[0].(map[string]*GeneratedKey)[vs[1].(string)]
	}).(GeneratedKeyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GeneratedKeyInput)(nil)).Elem(), &GeneratedKey{})
	pulumi.RegisterInputType(reflect.TypeOf((*GeneratedKeyArrayInput)(nil)).Elem(), GeneratedKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GeneratedKeyMapInput)(nil)).Elem(), GeneratedKeyMap{})
	pulumi.RegisterOutputType(GeneratedKeyOutput{})
	pulumi.RegisterOutputType(GeneratedKeyArrayOutput{})
	pulumi.RegisterOutputType(GeneratedKeyMapOutput{})
}
