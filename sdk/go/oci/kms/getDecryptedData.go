// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The `Kms.getDecryptedData` data source provides details about a specific DecryptedData
//
// Decrypts data using the given DecryptDataDetails resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/kms"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := kms.GetDecryptedData(ctx, &kms.GetDecryptedDataArgs{
//				Ciphertext:     decryptedDataCiphertext,
//				CryptoEndpoint: decryptedDataCryptoEndpoint,
//				KeyId:          testKey.Id,
//				AssociatedData: decryptedDataAssociatedData,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDecryptedData(ctx *pulumi.Context, args *GetDecryptedDataArgs, opts ...pulumi.InvokeOption) (*GetDecryptedDataResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDecryptedDataResult
	err := ctx.Invoke("oci:Kms/getDecryptedData:getDecryptedData", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDecryptedData.
type GetDecryptedDataArgs struct {
	// Information that can be used to provide an encryption context for the  encrypted data. The length of the string representation of the associatedData must be fewer than 4096 characters.
	AssociatedData map[string]string `pulumi:"associatedData"`
	// The encrypted data to decrypt.
	Ciphertext string `pulumi:"ciphertext"`
	// The service endpoint to perform cryptographic operations against. Cryptographic operations include 'Encrypt,' 'Decrypt,' and 'GenerateDataEncryptionKey' operations. see Vault Crypto endpoint.
	CryptoEndpoint string `pulumi:"cryptoEndpoint"`
	// The OCID of the key used to encrypt the ciphertext.
	KeyId string `pulumi:"keyId"`
}

// A collection of values returned by getDecryptedData.
type GetDecryptedDataResult struct {
	AssociatedData map[string]string `pulumi:"associatedData"`
	Ciphertext     string            `pulumi:"ciphertext"`
	CryptoEndpoint string            `pulumi:"cryptoEndpoint"`
	// The provider-assigned unique ID for this managed resource.
	Id    string `pulumi:"id"`
	KeyId string `pulumi:"keyId"`
	// The decrypted data, in the form of a base64-encoded value.
	Plaintext string `pulumi:"plaintext"`
	// Checksum of the decrypted data.
	PlaintextChecksum string `pulumi:"plaintextChecksum"`
}

func GetDecryptedDataOutput(ctx *pulumi.Context, args GetDecryptedDataOutputArgs, opts ...pulumi.InvokeOption) GetDecryptedDataResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDecryptedDataResultOutput, error) {
			args := v.(GetDecryptedDataArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Kms/getDecryptedData:getDecryptedData", args, GetDecryptedDataResultOutput{}, options).(GetDecryptedDataResultOutput), nil
		}).(GetDecryptedDataResultOutput)
}

// A collection of arguments for invoking getDecryptedData.
type GetDecryptedDataOutputArgs struct {
	// Information that can be used to provide an encryption context for the  encrypted data. The length of the string representation of the associatedData must be fewer than 4096 characters.
	AssociatedData pulumi.StringMapInput `pulumi:"associatedData"`
	// The encrypted data to decrypt.
	Ciphertext pulumi.StringInput `pulumi:"ciphertext"`
	// The service endpoint to perform cryptographic operations against. Cryptographic operations include 'Encrypt,' 'Decrypt,' and 'GenerateDataEncryptionKey' operations. see Vault Crypto endpoint.
	CryptoEndpoint pulumi.StringInput `pulumi:"cryptoEndpoint"`
	// The OCID of the key used to encrypt the ciphertext.
	KeyId pulumi.StringInput `pulumi:"keyId"`
}

func (GetDecryptedDataOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDecryptedDataArgs)(nil)).Elem()
}

// A collection of values returned by getDecryptedData.
type GetDecryptedDataResultOutput struct{ *pulumi.OutputState }

func (GetDecryptedDataResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDecryptedDataResult)(nil)).Elem()
}

func (o GetDecryptedDataResultOutput) ToGetDecryptedDataResultOutput() GetDecryptedDataResultOutput {
	return o
}

func (o GetDecryptedDataResultOutput) ToGetDecryptedDataResultOutputWithContext(ctx context.Context) GetDecryptedDataResultOutput {
	return o
}

func (o GetDecryptedDataResultOutput) AssociatedData() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetDecryptedDataResult) map[string]string { return v.AssociatedData }).(pulumi.StringMapOutput)
}

func (o GetDecryptedDataResultOutput) Ciphertext() pulumi.StringOutput {
	return o.ApplyT(func(v GetDecryptedDataResult) string { return v.Ciphertext }).(pulumi.StringOutput)
}

func (o GetDecryptedDataResultOutput) CryptoEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetDecryptedDataResult) string { return v.CryptoEndpoint }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDecryptedDataResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDecryptedDataResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDecryptedDataResultOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDecryptedDataResult) string { return v.KeyId }).(pulumi.StringOutput)
}

// The decrypted data, in the form of a base64-encoded value.
func (o GetDecryptedDataResultOutput) Plaintext() pulumi.StringOutput {
	return o.ApplyT(func(v GetDecryptedDataResult) string { return v.Plaintext }).(pulumi.StringOutput)
}

// Checksum of the decrypted data.
func (o GetDecryptedDataResultOutput) PlaintextChecksum() pulumi.StringOutput {
	return o.ApplyT(func(v GetDecryptedDataResult) string { return v.PlaintextChecksum }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDecryptedDataResultOutput{})
}
