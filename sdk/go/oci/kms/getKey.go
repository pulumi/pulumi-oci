// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Key resource in Oracle Cloud Infrastructure Kms service.
//
// Gets information about the specified master encryption key.
//
// As a management operation, this call is subject to a Key Management limit that applies to the total number
// of requests across all management read operations. Key Management might throttle this call to reject an
// otherwise valid request when the total rate of management read operations exceeds 10 requests per second for
// a given tenancy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Kms"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Kms.GetKey(ctx, &kms.GetKeyArgs{
//				KeyId:              testKeyOciKmsKey.Id,
//				ManagementEndpoint: keyManagementEndpoint,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupKey(ctx *pulumi.Context, args *LookupKeyArgs, opts ...pulumi.InvokeOption) (*LookupKeyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupKeyResult
	err := ctx.Invoke("oci:Kms/getKey:getKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKey.
type LookupKeyArgs struct {
	// The OCID of the key.
	KeyId string `pulumi:"keyId"`
	// The service endpoint to perform management operations against. Management operations include 'Create,' 'Update,' 'List,' 'Get,' and 'Delete' operations. See Vault Management endpoint.
	ManagementEndpoint string `pulumi:"managementEndpoint"`
}

// A collection of values returned by getKey.
type LookupKeyResult struct {
	// The details of auto rotation schedule for the Key being create updated or imported.
	AutoKeyRotationDetails []GetKeyAutoKeyRotationDetail `pulumi:"autoKeyRotationDetails"`
	// The OCID of the compartment that contains this master encryption key.
	CompartmentId string `pulumi:"compartmentId"`
	// The OCID of the key version used in cryptographic operations. During key rotation, the service might be in a transitional state where this or a newer key version are used intermittently. The `currentKeyVersion` property is updated when the service is guaranteed to use the new key version for all subsequent encryption operations.
	CurrentKeyVersion string `pulumi:"currentKeyVersion"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags  map[string]interface{} `pulumi:"definedTags"`
	DesiredState string                 `pulumi:"desiredState"`
	// A user-friendly name for the key. It does not have to be unique, and it is changeable. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// Key reference data to be returned to the customer as a response.
	ExternalKeyReferenceDetails []GetKeyExternalKeyReferenceDetail `pulumi:"externalKeyReferenceDetails"`
	ExternalKeyReferences       []GetKeyExternalKeyReference       `pulumi:"externalKeyReferences"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the key.
	Id string `pulumi:"id"`
	// A parameter specifying whether the auto key rotation is enabled or not.
	IsAutoRotationEnabled bool `pulumi:"isAutoRotationEnabled"`
	// A Boolean value that indicates whether the Key belongs to primary Vault or replica vault.
	IsPrimary bool   `pulumi:"isPrimary"`
	KeyId     string `pulumi:"keyId"`
	// The cryptographic properties of a key.
	KeyShapes          []GetKeyKeyShape `pulumi:"keyShapes"`
	ManagementEndpoint string           `pulumi:"managementEndpoint"`
	// The key's protection mode indicates how the key persists and where cryptographic operations that use the key are performed. A protection mode of `HSM` means that the key persists on a hardware security module (HSM) and all cryptographic operations are performed inside the HSM. A protection mode of `SOFTWARE` means that the key persists on the server, protected by the vault's RSA wrapping key which persists on the HSM. All cryptographic operations that use a key with a protection mode of `SOFTWARE` are performed on the server. By default, a key's protection mode is set to `HSM`. You can't change a key's protection mode after the key is created or imported. A protection mode of `EXTERNAL` mean that the key persists on the customer's external key manager which is hosted externally outside of oracle. Oracle only hold a reference to that key. All cryptographic operations that use a key with a protection mode of `EXTERNAL` are performed by external key manager.
	ProtectionMode string `pulumi:"protectionMode"`
	// Key replica details
	ReplicaDetails []GetKeyReplicaDetail `pulumi:"replicaDetails"`
	// Details where key was backed up.
	RestoreFromFiles []GetKeyRestoreFromFile `pulumi:"restoreFromFiles"`
	// Details where key was backed up
	RestoreFromObjectStores []GetKeyRestoreFromObjectStore `pulumi:"restoreFromObjectStores"`
	// When flipped, triggers restore if restore options are provided. Values of 0 or 1 are supported.
	RestoreTrigger bool `pulumi:"restoreTrigger"`
	// The OCID of the key from which this key was restored.
	RestoredFromKeyId string `pulumi:"restoredFromKeyId"`
	// The key's current lifecycle state.  Example: `ENABLED`
	State string `pulumi:"state"`
	// The date and time the key was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-04-03T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// An optional property indicating when to delete the key, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion string `pulumi:"timeOfDeletion"`
	// The OCID of the vault that contains this key.
	VaultId string `pulumi:"vaultId"`
}

func LookupKeyOutput(ctx *pulumi.Context, args LookupKeyOutputArgs, opts ...pulumi.InvokeOption) LookupKeyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupKeyResult, error) {
			args := v.(LookupKeyArgs)
			r, err := LookupKey(ctx, &args, opts...)
			var s LookupKeyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupKeyResultOutput)
}

// A collection of arguments for invoking getKey.
type LookupKeyOutputArgs struct {
	// The OCID of the key.
	KeyId pulumi.StringInput `pulumi:"keyId"`
	// The service endpoint to perform management operations against. Management operations include 'Create,' 'Update,' 'List,' 'Get,' and 'Delete' operations. See Vault Management endpoint.
	ManagementEndpoint pulumi.StringInput `pulumi:"managementEndpoint"`
}

func (LookupKeyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKeyArgs)(nil)).Elem()
}

// A collection of values returned by getKey.
type LookupKeyResultOutput struct{ *pulumi.OutputState }

func (LookupKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKeyResult)(nil)).Elem()
}

func (o LookupKeyResultOutput) ToLookupKeyResultOutput() LookupKeyResultOutput {
	return o
}

func (o LookupKeyResultOutput) ToLookupKeyResultOutputWithContext(ctx context.Context) LookupKeyResultOutput {
	return o
}

// The details of auto rotation schedule for the Key being create updated or imported.
func (o LookupKeyResultOutput) AutoKeyRotationDetails() GetKeyAutoKeyRotationDetailArrayOutput {
	return o.ApplyT(func(v LookupKeyResult) []GetKeyAutoKeyRotationDetail { return v.AutoKeyRotationDetails }).(GetKeyAutoKeyRotationDetailArrayOutput)
}

// The OCID of the compartment that contains this master encryption key.
func (o LookupKeyResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The OCID of the key version used in cryptographic operations. During key rotation, the service might be in a transitional state where this or a newer key version are used intermittently. The `currentKeyVersion` property is updated when the service is guaranteed to use the new key version for all subsequent encryption operations.
func (o LookupKeyResultOutput) CurrentKeyVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyResult) string { return v.CurrentKeyVersion }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o LookupKeyResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupKeyResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

func (o LookupKeyResultOutput) DesiredState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyResult) string { return v.DesiredState }).(pulumi.StringOutput)
}

// A user-friendly name for the key. It does not have to be unique, and it is changeable. Avoid entering confidential information.
func (o LookupKeyResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Key reference data to be returned to the customer as a response.
func (o LookupKeyResultOutput) ExternalKeyReferenceDetails() GetKeyExternalKeyReferenceDetailArrayOutput {
	return o.ApplyT(func(v LookupKeyResult) []GetKeyExternalKeyReferenceDetail { return v.ExternalKeyReferenceDetails }).(GetKeyExternalKeyReferenceDetailArrayOutput)
}

func (o LookupKeyResultOutput) ExternalKeyReferences() GetKeyExternalKeyReferenceArrayOutput {
	return o.ApplyT(func(v LookupKeyResult) []GetKeyExternalKeyReference { return v.ExternalKeyReferences }).(GetKeyExternalKeyReferenceArrayOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o LookupKeyResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupKeyResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The OCID of the key.
func (o LookupKeyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyResult) string { return v.Id }).(pulumi.StringOutput)
}

// A parameter specifying whether the auto key rotation is enabled or not.
func (o LookupKeyResultOutput) IsAutoRotationEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupKeyResult) bool { return v.IsAutoRotationEnabled }).(pulumi.BoolOutput)
}

// A Boolean value that indicates whether the Key belongs to primary Vault or replica vault.
func (o LookupKeyResultOutput) IsPrimary() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupKeyResult) bool { return v.IsPrimary }).(pulumi.BoolOutput)
}

func (o LookupKeyResultOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyResult) string { return v.KeyId }).(pulumi.StringOutput)
}

// The cryptographic properties of a key.
func (o LookupKeyResultOutput) KeyShapes() GetKeyKeyShapeArrayOutput {
	return o.ApplyT(func(v LookupKeyResult) []GetKeyKeyShape { return v.KeyShapes }).(GetKeyKeyShapeArrayOutput)
}

func (o LookupKeyResultOutput) ManagementEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyResult) string { return v.ManagementEndpoint }).(pulumi.StringOutput)
}

// The key's protection mode indicates how the key persists and where cryptographic operations that use the key are performed. A protection mode of `HSM` means that the key persists on a hardware security module (HSM) and all cryptographic operations are performed inside the HSM. A protection mode of `SOFTWARE` means that the key persists on the server, protected by the vault's RSA wrapping key which persists on the HSM. All cryptographic operations that use a key with a protection mode of `SOFTWARE` are performed on the server. By default, a key's protection mode is set to `HSM`. You can't change a key's protection mode after the key is created or imported. A protection mode of `EXTERNAL` mean that the key persists on the customer's external key manager which is hosted externally outside of oracle. Oracle only hold a reference to that key. All cryptographic operations that use a key with a protection mode of `EXTERNAL` are performed by external key manager.
func (o LookupKeyResultOutput) ProtectionMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyResult) string { return v.ProtectionMode }).(pulumi.StringOutput)
}

// Key replica details
func (o LookupKeyResultOutput) ReplicaDetails() GetKeyReplicaDetailArrayOutput {
	return o.ApplyT(func(v LookupKeyResult) []GetKeyReplicaDetail { return v.ReplicaDetails }).(GetKeyReplicaDetailArrayOutput)
}

// Details where key was backed up.
func (o LookupKeyResultOutput) RestoreFromFiles() GetKeyRestoreFromFileArrayOutput {
	return o.ApplyT(func(v LookupKeyResult) []GetKeyRestoreFromFile { return v.RestoreFromFiles }).(GetKeyRestoreFromFileArrayOutput)
}

// Details where key was backed up
func (o LookupKeyResultOutput) RestoreFromObjectStores() GetKeyRestoreFromObjectStoreArrayOutput {
	return o.ApplyT(func(v LookupKeyResult) []GetKeyRestoreFromObjectStore { return v.RestoreFromObjectStores }).(GetKeyRestoreFromObjectStoreArrayOutput)
}

// When flipped, triggers restore if restore options are provided. Values of 0 or 1 are supported.
func (o LookupKeyResultOutput) RestoreTrigger() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupKeyResult) bool { return v.RestoreTrigger }).(pulumi.BoolOutput)
}

// The OCID of the key from which this key was restored.
func (o LookupKeyResultOutput) RestoredFromKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyResult) string { return v.RestoredFromKeyId }).(pulumi.StringOutput)
}

// The key's current lifecycle state.  Example: `ENABLED`
func (o LookupKeyResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyResult) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the key was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-04-03T21:10:29.600Z`
func (o LookupKeyResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// An optional property indicating when to delete the key, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o LookupKeyResultOutput) TimeOfDeletion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyResult) string { return v.TimeOfDeletion }).(pulumi.StringOutput)
}

// The OCID of the vault that contains this key.
func (o LookupKeyResultOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyResult) string { return v.VaultId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupKeyResultOutput{})
}
