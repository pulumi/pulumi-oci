// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Key Version resource in Oracle Cloud Infrastructure Kms service.
//
// Gets information about the specified key version.
//
// As a management operation, this call is subject to a Key Management limit that applies to the total number
// of requests across all management read operations. Key Management might throttle this call to reject an
// otherwise valid request when the total rate of management read operations exceeds 10 requests per second
// for a given tenancy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/kms"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := kms.GetKeyVersion(ctx, &kms.GetKeyVersionArgs{
//				KeyId:              testKey.Id,
//				KeyVersionId:       testKeyVersionOciKmsKeyVersion.Id,
//				ManagementEndpoint: keyVersionManagementEndpoint,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupKeyVersion(ctx *pulumi.Context, args *LookupKeyVersionArgs, opts ...pulumi.InvokeOption) (*LookupKeyVersionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupKeyVersionResult
	err := ctx.Invoke("oci:Kms/getKeyVersion:getKeyVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKeyVersion.
type LookupKeyVersionArgs struct {
	// The OCID of the key.
	KeyId string `pulumi:"keyId"`
	// The OCID of the key version.
	KeyVersionId string `pulumi:"keyVersionId"`
	// The service endpoint to perform management operations against. Management operations include 'Create,' 'Update,' 'List,' 'Get,' and 'Delete' operations. See Vault Management endpoint.
	ManagementEndpoint string `pulumi:"managementEndpoint"`
}

// A collection of values returned by getKeyVersion.
type LookupKeyVersionResult struct {
	// The OCID of the compartment that contains this key version.
	CompartmentId string `pulumi:"compartmentId"`
	// Key reference data to be returned to the customer as a response.
	ExternalKeyReferenceDetails []GetKeyVersionExternalKeyReferenceDetail `pulumi:"externalKeyReferenceDetails"`
	// Key version ID associated with the external key.
	ExternalKeyVersionId string `pulumi:"externalKeyVersionId"`
	// The OCID of the key version.
	Id string `pulumi:"id"`
	// An optional property indicating whether this keyversion is generated from auto rotatation.
	IsAutoRotated bool `pulumi:"isAutoRotated"`
	// A Boolean value that indicates whether the KeyVersion belongs to primary Vault or replica Vault.
	IsPrimary bool `pulumi:"isPrimary"`
	// The OCID of the master encryption key associated with this key version.
	KeyId string `pulumi:"keyId"`
	// The OCID of the key version.
	KeyVersionId       string `pulumi:"keyVersionId"`
	ManagementEndpoint string `pulumi:"managementEndpoint"`
	// The public key in PEM format. (This value pertains only to RSA and ECDSA keys.)
	PublicKey string `pulumi:"publicKey"`
	// KeyVersion replica details
	ReplicaDetails    []GetKeyVersionReplicaDetail `pulumi:"replicaDetails"`
	RestoredFromKeyId string                       `pulumi:"restoredFromKeyId"`
	// The OCID of the key version from which this key version was restored.
	RestoredFromKeyVersionId string `pulumi:"restoredFromKeyVersionId"`
	// The key version's current lifecycle state.  Example: `ENABLED`
	State string `pulumi:"state"`
	// The date and time this key version was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: "2018-04-03T21:10:29.600Z"
	TimeCreated string `pulumi:"timeCreated"`
	// An optional property to indicate when to delete the key version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion string `pulumi:"timeOfDeletion"`
	// The OCID of the vault that contains this key version.
	VaultId string `pulumi:"vaultId"`
}

func LookupKeyVersionOutput(ctx *pulumi.Context, args LookupKeyVersionOutputArgs, opts ...pulumi.InvokeOption) LookupKeyVersionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupKeyVersionResultOutput, error) {
			args := v.(LookupKeyVersionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Kms/getKeyVersion:getKeyVersion", args, LookupKeyVersionResultOutput{}, options).(LookupKeyVersionResultOutput), nil
		}).(LookupKeyVersionResultOutput)
}

// A collection of arguments for invoking getKeyVersion.
type LookupKeyVersionOutputArgs struct {
	// The OCID of the key.
	KeyId pulumi.StringInput `pulumi:"keyId"`
	// The OCID of the key version.
	KeyVersionId pulumi.StringInput `pulumi:"keyVersionId"`
	// The service endpoint to perform management operations against. Management operations include 'Create,' 'Update,' 'List,' 'Get,' and 'Delete' operations. See Vault Management endpoint.
	ManagementEndpoint pulumi.StringInput `pulumi:"managementEndpoint"`
}

func (LookupKeyVersionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKeyVersionArgs)(nil)).Elem()
}

// A collection of values returned by getKeyVersion.
type LookupKeyVersionResultOutput struct{ *pulumi.OutputState }

func (LookupKeyVersionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKeyVersionResult)(nil)).Elem()
}

func (o LookupKeyVersionResultOutput) ToLookupKeyVersionResultOutput() LookupKeyVersionResultOutput {
	return o
}

func (o LookupKeyVersionResultOutput) ToLookupKeyVersionResultOutputWithContext(ctx context.Context) LookupKeyVersionResultOutput {
	return o
}

// The OCID of the compartment that contains this key version.
func (o LookupKeyVersionResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyVersionResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Key reference data to be returned to the customer as a response.
func (o LookupKeyVersionResultOutput) ExternalKeyReferenceDetails() GetKeyVersionExternalKeyReferenceDetailArrayOutput {
	return o.ApplyT(func(v LookupKeyVersionResult) []GetKeyVersionExternalKeyReferenceDetail {
		return v.ExternalKeyReferenceDetails
	}).(GetKeyVersionExternalKeyReferenceDetailArrayOutput)
}

// Key version ID associated with the external key.
func (o LookupKeyVersionResultOutput) ExternalKeyVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyVersionResult) string { return v.ExternalKeyVersionId }).(pulumi.StringOutput)
}

// The OCID of the key version.
func (o LookupKeyVersionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyVersionResult) string { return v.Id }).(pulumi.StringOutput)
}

// An optional property indicating whether this keyversion is generated from auto rotatation.
func (o LookupKeyVersionResultOutput) IsAutoRotated() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupKeyVersionResult) bool { return v.IsAutoRotated }).(pulumi.BoolOutput)
}

// A Boolean value that indicates whether the KeyVersion belongs to primary Vault or replica Vault.
func (o LookupKeyVersionResultOutput) IsPrimary() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupKeyVersionResult) bool { return v.IsPrimary }).(pulumi.BoolOutput)
}

// The OCID of the master encryption key associated with this key version.
func (o LookupKeyVersionResultOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyVersionResult) string { return v.KeyId }).(pulumi.StringOutput)
}

// The OCID of the key version.
func (o LookupKeyVersionResultOutput) KeyVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyVersionResult) string { return v.KeyVersionId }).(pulumi.StringOutput)
}

func (o LookupKeyVersionResultOutput) ManagementEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyVersionResult) string { return v.ManagementEndpoint }).(pulumi.StringOutput)
}

// The public key in PEM format. (This value pertains only to RSA and ECDSA keys.)
func (o LookupKeyVersionResultOutput) PublicKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyVersionResult) string { return v.PublicKey }).(pulumi.StringOutput)
}

// KeyVersion replica details
func (o LookupKeyVersionResultOutput) ReplicaDetails() GetKeyVersionReplicaDetailArrayOutput {
	return o.ApplyT(func(v LookupKeyVersionResult) []GetKeyVersionReplicaDetail { return v.ReplicaDetails }).(GetKeyVersionReplicaDetailArrayOutput)
}

func (o LookupKeyVersionResultOutput) RestoredFromKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyVersionResult) string { return v.RestoredFromKeyId }).(pulumi.StringOutput)
}

// The OCID of the key version from which this key version was restored.
func (o LookupKeyVersionResultOutput) RestoredFromKeyVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyVersionResult) string { return v.RestoredFromKeyVersionId }).(pulumi.StringOutput)
}

// The key version's current lifecycle state.  Example: `ENABLED`
func (o LookupKeyVersionResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyVersionResult) string { return v.State }).(pulumi.StringOutput)
}

// The date and time this key version was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: "2018-04-03T21:10:29.600Z"
func (o LookupKeyVersionResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyVersionResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// An optional property to indicate when to delete the key version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o LookupKeyVersionResultOutput) TimeOfDeletion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyVersionResult) string { return v.TimeOfDeletion }).(pulumi.StringOutput)
}

// The OCID of the vault that contains this key version.
func (o LookupKeyVersionResultOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyVersionResult) string { return v.VaultId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupKeyVersionResultOutput{})
}
