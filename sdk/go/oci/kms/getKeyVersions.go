// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Key Versions in Oracle Cloud Infrastructure Kms service.
//
// Lists all [KeyVersion](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/KeyVersion/) resources for the specified
// master encryption key.
//
// As a management operation, this call is subject to a Key Management limit that applies to the total number
// of requests across all management read operations. Key Management might throttle this call to reject an
// otherwise valid request when the total rate of management read operations exceeds 10 requests per second
// for a given tenancy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Kms"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Kms.GetKeyVersions(ctx, &kms.GetKeyVersionsArgs{
//				KeyId:              oci_kms_key.Test_key.Id,
//				ManagementEndpoint: _var.Key_version_management_endpoint,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetKeyVersions(ctx *pulumi.Context, args *GetKeyVersionsArgs, opts ...pulumi.InvokeOption) (*GetKeyVersionsResult, error) {
	var rv GetKeyVersionsResult
	err := ctx.Invoke("oci:Kms/getKeyVersions:getKeyVersions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKeyVersions.
type GetKeyVersionsArgs struct {
	Filters []GetKeyVersionsFilter `pulumi:"filters"`
	// The OCID of the key.
	KeyId string `pulumi:"keyId"`
	// The service endpoint to perform management operations against. Management operations include 'Create,' 'Update,' 'List,' 'Get,' and 'Delete' operations. See Vault Management endpoint.
	ManagementEndpoint string `pulumi:"managementEndpoint"`
}

// A collection of values returned by getKeyVersions.
type GetKeyVersionsResult struct {
	Filters []GetKeyVersionsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The OCID of the master encryption key associated with this key version.
	KeyId string `pulumi:"keyId"`
	// The list of key_versions.
	KeyVersions        []GetKeyVersionsKeyVersion `pulumi:"keyVersions"`
	ManagementEndpoint string                     `pulumi:"managementEndpoint"`
}

func GetKeyVersionsOutput(ctx *pulumi.Context, args GetKeyVersionsOutputArgs, opts ...pulumi.InvokeOption) GetKeyVersionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetKeyVersionsResult, error) {
			args := v.(GetKeyVersionsArgs)
			r, err := GetKeyVersions(ctx, &args, opts...)
			var s GetKeyVersionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetKeyVersionsResultOutput)
}

// A collection of arguments for invoking getKeyVersions.
type GetKeyVersionsOutputArgs struct {
	Filters GetKeyVersionsFilterArrayInput `pulumi:"filters"`
	// The OCID of the key.
	KeyId pulumi.StringInput `pulumi:"keyId"`
	// The service endpoint to perform management operations against. Management operations include 'Create,' 'Update,' 'List,' 'Get,' and 'Delete' operations. See Vault Management endpoint.
	ManagementEndpoint pulumi.StringInput `pulumi:"managementEndpoint"`
}

func (GetKeyVersionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyVersionsArgs)(nil)).Elem()
}

// A collection of values returned by getKeyVersions.
type GetKeyVersionsResultOutput struct{ *pulumi.OutputState }

func (GetKeyVersionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyVersionsResult)(nil)).Elem()
}

func (o GetKeyVersionsResultOutput) ToGetKeyVersionsResultOutput() GetKeyVersionsResultOutput {
	return o
}

func (o GetKeyVersionsResultOutput) ToGetKeyVersionsResultOutputWithContext(ctx context.Context) GetKeyVersionsResultOutput {
	return o
}

func (o GetKeyVersionsResultOutput) Filters() GetKeyVersionsFilterArrayOutput {
	return o.ApplyT(func(v GetKeyVersionsResult) []GetKeyVersionsFilter { return v.Filters }).(GetKeyVersionsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetKeyVersionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyVersionsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The OCID of the master encryption key associated with this key version.
func (o GetKeyVersionsResultOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyVersionsResult) string { return v.KeyId }).(pulumi.StringOutput)
}

// The list of key_versions.
func (o GetKeyVersionsResultOutput) KeyVersions() GetKeyVersionsKeyVersionArrayOutput {
	return o.ApplyT(func(v GetKeyVersionsResult) []GetKeyVersionsKeyVersion { return v.KeyVersions }).(GetKeyVersionsKeyVersionArrayOutput)
}

func (o GetKeyVersionsResultOutput) ManagementEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyVersionsResult) string { return v.ManagementEndpoint }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetKeyVersionsResultOutput{})
}
