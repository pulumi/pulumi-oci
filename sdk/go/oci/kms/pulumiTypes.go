// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type GeneratedKeyKeyShape struct {
	// The algorithm used by a key's key versions to encrypt or decrypt.
	Algorithm string `pulumi:"algorithm"`
	// Supported curve IDs for ECDSA keys.
	CurveId *string `pulumi:"curveId"`
	// The length of the key in bytes, expressed as an integer. Supported values include the following:
	// * AES: 16, 24, or 32
	// * RSA: 256, 384, or 512
	// * ECDSA: 32, 48, or 66
	Length int `pulumi:"length"`
}

// GeneratedKeyKeyShapeInput is an input type that accepts GeneratedKeyKeyShapeArgs and GeneratedKeyKeyShapeOutput values.
// You can construct a concrete instance of `GeneratedKeyKeyShapeInput` via:
//
//	GeneratedKeyKeyShapeArgs{...}
type GeneratedKeyKeyShapeInput interface {
	pulumi.Input

	ToGeneratedKeyKeyShapeOutput() GeneratedKeyKeyShapeOutput
	ToGeneratedKeyKeyShapeOutputWithContext(context.Context) GeneratedKeyKeyShapeOutput
}

type GeneratedKeyKeyShapeArgs struct {
	// The algorithm used by a key's key versions to encrypt or decrypt.
	Algorithm pulumi.StringInput `pulumi:"algorithm"`
	// Supported curve IDs for ECDSA keys.
	CurveId pulumi.StringPtrInput `pulumi:"curveId"`
	// The length of the key in bytes, expressed as an integer. Supported values include the following:
	// * AES: 16, 24, or 32
	// * RSA: 256, 384, or 512
	// * ECDSA: 32, 48, or 66
	Length pulumi.IntInput `pulumi:"length"`
}

func (GeneratedKeyKeyShapeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GeneratedKeyKeyShape)(nil)).Elem()
}

func (i GeneratedKeyKeyShapeArgs) ToGeneratedKeyKeyShapeOutput() GeneratedKeyKeyShapeOutput {
	return i.ToGeneratedKeyKeyShapeOutputWithContext(context.Background())
}

func (i GeneratedKeyKeyShapeArgs) ToGeneratedKeyKeyShapeOutputWithContext(ctx context.Context) GeneratedKeyKeyShapeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeneratedKeyKeyShapeOutput)
}

func (i GeneratedKeyKeyShapeArgs) ToOutput(ctx context.Context) pulumix.Output[GeneratedKeyKeyShape] {
	return pulumix.Output[GeneratedKeyKeyShape]{
		OutputState: i.ToGeneratedKeyKeyShapeOutputWithContext(ctx).OutputState,
	}
}

func (i GeneratedKeyKeyShapeArgs) ToGeneratedKeyKeyShapePtrOutput() GeneratedKeyKeyShapePtrOutput {
	return i.ToGeneratedKeyKeyShapePtrOutputWithContext(context.Background())
}

func (i GeneratedKeyKeyShapeArgs) ToGeneratedKeyKeyShapePtrOutputWithContext(ctx context.Context) GeneratedKeyKeyShapePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeneratedKeyKeyShapeOutput).ToGeneratedKeyKeyShapePtrOutputWithContext(ctx)
}

// GeneratedKeyKeyShapePtrInput is an input type that accepts GeneratedKeyKeyShapeArgs, GeneratedKeyKeyShapePtr and GeneratedKeyKeyShapePtrOutput values.
// You can construct a concrete instance of `GeneratedKeyKeyShapePtrInput` via:
//
//	        GeneratedKeyKeyShapeArgs{...}
//
//	or:
//
//	        nil
type GeneratedKeyKeyShapePtrInput interface {
	pulumi.Input

	ToGeneratedKeyKeyShapePtrOutput() GeneratedKeyKeyShapePtrOutput
	ToGeneratedKeyKeyShapePtrOutputWithContext(context.Context) GeneratedKeyKeyShapePtrOutput
}

type generatedKeyKeyShapePtrType GeneratedKeyKeyShapeArgs

func GeneratedKeyKeyShapePtr(v *GeneratedKeyKeyShapeArgs) GeneratedKeyKeyShapePtrInput {
	return (*generatedKeyKeyShapePtrType)(v)
}

func (*generatedKeyKeyShapePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GeneratedKeyKeyShape)(nil)).Elem()
}

func (i *generatedKeyKeyShapePtrType) ToGeneratedKeyKeyShapePtrOutput() GeneratedKeyKeyShapePtrOutput {
	return i.ToGeneratedKeyKeyShapePtrOutputWithContext(context.Background())
}

func (i *generatedKeyKeyShapePtrType) ToGeneratedKeyKeyShapePtrOutputWithContext(ctx context.Context) GeneratedKeyKeyShapePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeneratedKeyKeyShapePtrOutput)
}

func (i *generatedKeyKeyShapePtrType) ToOutput(ctx context.Context) pulumix.Output[*GeneratedKeyKeyShape] {
	return pulumix.Output[*GeneratedKeyKeyShape]{
		OutputState: i.ToGeneratedKeyKeyShapePtrOutputWithContext(ctx).OutputState,
	}
}

type GeneratedKeyKeyShapeOutput struct{ *pulumi.OutputState }

func (GeneratedKeyKeyShapeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GeneratedKeyKeyShape)(nil)).Elem()
}

func (o GeneratedKeyKeyShapeOutput) ToGeneratedKeyKeyShapeOutput() GeneratedKeyKeyShapeOutput {
	return o
}

func (o GeneratedKeyKeyShapeOutput) ToGeneratedKeyKeyShapeOutputWithContext(ctx context.Context) GeneratedKeyKeyShapeOutput {
	return o
}

func (o GeneratedKeyKeyShapeOutput) ToGeneratedKeyKeyShapePtrOutput() GeneratedKeyKeyShapePtrOutput {
	return o.ToGeneratedKeyKeyShapePtrOutputWithContext(context.Background())
}

func (o GeneratedKeyKeyShapeOutput) ToGeneratedKeyKeyShapePtrOutputWithContext(ctx context.Context) GeneratedKeyKeyShapePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GeneratedKeyKeyShape) *GeneratedKeyKeyShape {
		return &v
	}).(GeneratedKeyKeyShapePtrOutput)
}

func (o GeneratedKeyKeyShapeOutput) ToOutput(ctx context.Context) pulumix.Output[GeneratedKeyKeyShape] {
	return pulumix.Output[GeneratedKeyKeyShape]{
		OutputState: o.OutputState,
	}
}

// The algorithm used by a key's key versions to encrypt or decrypt.
func (o GeneratedKeyKeyShapeOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GeneratedKeyKeyShape) string { return v.Algorithm }).(pulumi.StringOutput)
}

// Supported curve IDs for ECDSA keys.
func (o GeneratedKeyKeyShapeOutput) CurveId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GeneratedKeyKeyShape) *string { return v.CurveId }).(pulumi.StringPtrOutput)
}

// The length of the key in bytes, expressed as an integer. Supported values include the following:
// * AES: 16, 24, or 32
// * RSA: 256, 384, or 512
// * ECDSA: 32, 48, or 66
func (o GeneratedKeyKeyShapeOutput) Length() pulumi.IntOutput {
	return o.ApplyT(func(v GeneratedKeyKeyShape) int { return v.Length }).(pulumi.IntOutput)
}

type GeneratedKeyKeyShapePtrOutput struct{ *pulumi.OutputState }

func (GeneratedKeyKeyShapePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GeneratedKeyKeyShape)(nil)).Elem()
}

func (o GeneratedKeyKeyShapePtrOutput) ToGeneratedKeyKeyShapePtrOutput() GeneratedKeyKeyShapePtrOutput {
	return o
}

func (o GeneratedKeyKeyShapePtrOutput) ToGeneratedKeyKeyShapePtrOutputWithContext(ctx context.Context) GeneratedKeyKeyShapePtrOutput {
	return o
}

func (o GeneratedKeyKeyShapePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GeneratedKeyKeyShape] {
	return pulumix.Output[*GeneratedKeyKeyShape]{
		OutputState: o.OutputState,
	}
}

func (o GeneratedKeyKeyShapePtrOutput) Elem() GeneratedKeyKeyShapeOutput {
	return o.ApplyT(func(v *GeneratedKeyKeyShape) GeneratedKeyKeyShape {
		if v != nil {
			return *v
		}
		var ret GeneratedKeyKeyShape
		return ret
	}).(GeneratedKeyKeyShapeOutput)
}

// The algorithm used by a key's key versions to encrypt or decrypt.
func (o GeneratedKeyKeyShapePtrOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GeneratedKeyKeyShape) *string {
		if v == nil {
			return nil
		}
		return &v.Algorithm
	}).(pulumi.StringPtrOutput)
}

// Supported curve IDs for ECDSA keys.
func (o GeneratedKeyKeyShapePtrOutput) CurveId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GeneratedKeyKeyShape) *string {
		if v == nil {
			return nil
		}
		return v.CurveId
	}).(pulumi.StringPtrOutput)
}

// The length of the key in bytes, expressed as an integer. Supported values include the following:
// * AES: 16, 24, or 32
// * RSA: 256, 384, or 512
// * ECDSA: 32, 48, or 66
func (o GeneratedKeyKeyShapePtrOutput) Length() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GeneratedKeyKeyShape) *int {
		if v == nil {
			return nil
		}
		return &v.Length
	}).(pulumi.IntPtrOutput)
}

type KeyKeyShape struct {
	// The algorithm used by a key's key versions to encrypt or decrypt.
	Algorithm string `pulumi:"algorithm"`
	// Supported curve IDs for ECDSA keys.
	CurveId *string `pulumi:"curveId"`
	// The length of the key in bytes, expressed as an integer. Supported values include the following:
	// * AES: 16, 24, or 32
	// * RSA: 256, 384, or 512
	// * ECDSA: 32, 48, or 66
	Length int `pulumi:"length"`
}

// KeyKeyShapeInput is an input type that accepts KeyKeyShapeArgs and KeyKeyShapeOutput values.
// You can construct a concrete instance of `KeyKeyShapeInput` via:
//
//	KeyKeyShapeArgs{...}
type KeyKeyShapeInput interface {
	pulumi.Input

	ToKeyKeyShapeOutput() KeyKeyShapeOutput
	ToKeyKeyShapeOutputWithContext(context.Context) KeyKeyShapeOutput
}

type KeyKeyShapeArgs struct {
	// The algorithm used by a key's key versions to encrypt or decrypt.
	Algorithm pulumi.StringInput `pulumi:"algorithm"`
	// Supported curve IDs for ECDSA keys.
	CurveId pulumi.StringPtrInput `pulumi:"curveId"`
	// The length of the key in bytes, expressed as an integer. Supported values include the following:
	// * AES: 16, 24, or 32
	// * RSA: 256, 384, or 512
	// * ECDSA: 32, 48, or 66
	Length pulumi.IntInput `pulumi:"length"`
}

func (KeyKeyShapeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyKeyShape)(nil)).Elem()
}

func (i KeyKeyShapeArgs) ToKeyKeyShapeOutput() KeyKeyShapeOutput {
	return i.ToKeyKeyShapeOutputWithContext(context.Background())
}

func (i KeyKeyShapeArgs) ToKeyKeyShapeOutputWithContext(ctx context.Context) KeyKeyShapeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyKeyShapeOutput)
}

func (i KeyKeyShapeArgs) ToOutput(ctx context.Context) pulumix.Output[KeyKeyShape] {
	return pulumix.Output[KeyKeyShape]{
		OutputState: i.ToKeyKeyShapeOutputWithContext(ctx).OutputState,
	}
}

func (i KeyKeyShapeArgs) ToKeyKeyShapePtrOutput() KeyKeyShapePtrOutput {
	return i.ToKeyKeyShapePtrOutputWithContext(context.Background())
}

func (i KeyKeyShapeArgs) ToKeyKeyShapePtrOutputWithContext(ctx context.Context) KeyKeyShapePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyKeyShapeOutput).ToKeyKeyShapePtrOutputWithContext(ctx)
}

// KeyKeyShapePtrInput is an input type that accepts KeyKeyShapeArgs, KeyKeyShapePtr and KeyKeyShapePtrOutput values.
// You can construct a concrete instance of `KeyKeyShapePtrInput` via:
//
//	        KeyKeyShapeArgs{...}
//
//	or:
//
//	        nil
type KeyKeyShapePtrInput interface {
	pulumi.Input

	ToKeyKeyShapePtrOutput() KeyKeyShapePtrOutput
	ToKeyKeyShapePtrOutputWithContext(context.Context) KeyKeyShapePtrOutput
}

type keyKeyShapePtrType KeyKeyShapeArgs

func KeyKeyShapePtr(v *KeyKeyShapeArgs) KeyKeyShapePtrInput {
	return (*keyKeyShapePtrType)(v)
}

func (*keyKeyShapePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyKeyShape)(nil)).Elem()
}

func (i *keyKeyShapePtrType) ToKeyKeyShapePtrOutput() KeyKeyShapePtrOutput {
	return i.ToKeyKeyShapePtrOutputWithContext(context.Background())
}

func (i *keyKeyShapePtrType) ToKeyKeyShapePtrOutputWithContext(ctx context.Context) KeyKeyShapePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyKeyShapePtrOutput)
}

func (i *keyKeyShapePtrType) ToOutput(ctx context.Context) pulumix.Output[*KeyKeyShape] {
	return pulumix.Output[*KeyKeyShape]{
		OutputState: i.ToKeyKeyShapePtrOutputWithContext(ctx).OutputState,
	}
}

type KeyKeyShapeOutput struct{ *pulumi.OutputState }

func (KeyKeyShapeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyKeyShape)(nil)).Elem()
}

func (o KeyKeyShapeOutput) ToKeyKeyShapeOutput() KeyKeyShapeOutput {
	return o
}

func (o KeyKeyShapeOutput) ToKeyKeyShapeOutputWithContext(ctx context.Context) KeyKeyShapeOutput {
	return o
}

func (o KeyKeyShapeOutput) ToKeyKeyShapePtrOutput() KeyKeyShapePtrOutput {
	return o.ToKeyKeyShapePtrOutputWithContext(context.Background())
}

func (o KeyKeyShapeOutput) ToKeyKeyShapePtrOutputWithContext(ctx context.Context) KeyKeyShapePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KeyKeyShape) *KeyKeyShape {
		return &v
	}).(KeyKeyShapePtrOutput)
}

func (o KeyKeyShapeOutput) ToOutput(ctx context.Context) pulumix.Output[KeyKeyShape] {
	return pulumix.Output[KeyKeyShape]{
		OutputState: o.OutputState,
	}
}

// The algorithm used by a key's key versions to encrypt or decrypt.
func (o KeyKeyShapeOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v KeyKeyShape) string { return v.Algorithm }).(pulumi.StringOutput)
}

// Supported curve IDs for ECDSA keys.
func (o KeyKeyShapeOutput) CurveId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyKeyShape) *string { return v.CurveId }).(pulumi.StringPtrOutput)
}

// The length of the key in bytes, expressed as an integer. Supported values include the following:
// * AES: 16, 24, or 32
// * RSA: 256, 384, or 512
// * ECDSA: 32, 48, or 66
func (o KeyKeyShapeOutput) Length() pulumi.IntOutput {
	return o.ApplyT(func(v KeyKeyShape) int { return v.Length }).(pulumi.IntOutput)
}

type KeyKeyShapePtrOutput struct{ *pulumi.OutputState }

func (KeyKeyShapePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyKeyShape)(nil)).Elem()
}

func (o KeyKeyShapePtrOutput) ToKeyKeyShapePtrOutput() KeyKeyShapePtrOutput {
	return o
}

func (o KeyKeyShapePtrOutput) ToKeyKeyShapePtrOutputWithContext(ctx context.Context) KeyKeyShapePtrOutput {
	return o
}

func (o KeyKeyShapePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*KeyKeyShape] {
	return pulumix.Output[*KeyKeyShape]{
		OutputState: o.OutputState,
	}
}

func (o KeyKeyShapePtrOutput) Elem() KeyKeyShapeOutput {
	return o.ApplyT(func(v *KeyKeyShape) KeyKeyShape {
		if v != nil {
			return *v
		}
		var ret KeyKeyShape
		return ret
	}).(KeyKeyShapeOutput)
}

// The algorithm used by a key's key versions to encrypt or decrypt.
func (o KeyKeyShapePtrOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyKeyShape) *string {
		if v == nil {
			return nil
		}
		return &v.Algorithm
	}).(pulumi.StringPtrOutput)
}

// Supported curve IDs for ECDSA keys.
func (o KeyKeyShapePtrOutput) CurveId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyKeyShape) *string {
		if v == nil {
			return nil
		}
		return v.CurveId
	}).(pulumi.StringPtrOutput)
}

// The length of the key in bytes, expressed as an integer. Supported values include the following:
// * AES: 16, 24, or 32
// * RSA: 256, 384, or 512
// * ECDSA: 32, 48, or 66
func (o KeyKeyShapePtrOutput) Length() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KeyKeyShape) *int {
		if v == nil {
			return nil
		}
		return &v.Length
	}).(pulumi.IntPtrOutput)
}

type KeyReplicaDetail struct {
	// ReplicationId associated with a key operation
	ReplicationId *string `pulumi:"replicationId"`
}

// KeyReplicaDetailInput is an input type that accepts KeyReplicaDetailArgs and KeyReplicaDetailOutput values.
// You can construct a concrete instance of `KeyReplicaDetailInput` via:
//
//	KeyReplicaDetailArgs{...}
type KeyReplicaDetailInput interface {
	pulumi.Input

	ToKeyReplicaDetailOutput() KeyReplicaDetailOutput
	ToKeyReplicaDetailOutputWithContext(context.Context) KeyReplicaDetailOutput
}

type KeyReplicaDetailArgs struct {
	// ReplicationId associated with a key operation
	ReplicationId pulumi.StringPtrInput `pulumi:"replicationId"`
}

func (KeyReplicaDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyReplicaDetail)(nil)).Elem()
}

func (i KeyReplicaDetailArgs) ToKeyReplicaDetailOutput() KeyReplicaDetailOutput {
	return i.ToKeyReplicaDetailOutputWithContext(context.Background())
}

func (i KeyReplicaDetailArgs) ToKeyReplicaDetailOutputWithContext(ctx context.Context) KeyReplicaDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyReplicaDetailOutput)
}

func (i KeyReplicaDetailArgs) ToOutput(ctx context.Context) pulumix.Output[KeyReplicaDetail] {
	return pulumix.Output[KeyReplicaDetail]{
		OutputState: i.ToKeyReplicaDetailOutputWithContext(ctx).OutputState,
	}
}

// KeyReplicaDetailArrayInput is an input type that accepts KeyReplicaDetailArray and KeyReplicaDetailArrayOutput values.
// You can construct a concrete instance of `KeyReplicaDetailArrayInput` via:
//
//	KeyReplicaDetailArray{ KeyReplicaDetailArgs{...} }
type KeyReplicaDetailArrayInput interface {
	pulumi.Input

	ToKeyReplicaDetailArrayOutput() KeyReplicaDetailArrayOutput
	ToKeyReplicaDetailArrayOutputWithContext(context.Context) KeyReplicaDetailArrayOutput
}

type KeyReplicaDetailArray []KeyReplicaDetailInput

func (KeyReplicaDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeyReplicaDetail)(nil)).Elem()
}

func (i KeyReplicaDetailArray) ToKeyReplicaDetailArrayOutput() KeyReplicaDetailArrayOutput {
	return i.ToKeyReplicaDetailArrayOutputWithContext(context.Background())
}

func (i KeyReplicaDetailArray) ToKeyReplicaDetailArrayOutputWithContext(ctx context.Context) KeyReplicaDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyReplicaDetailArrayOutput)
}

func (i KeyReplicaDetailArray) ToOutput(ctx context.Context) pulumix.Output[[]KeyReplicaDetail] {
	return pulumix.Output[[]KeyReplicaDetail]{
		OutputState: i.ToKeyReplicaDetailArrayOutputWithContext(ctx).OutputState,
	}
}

type KeyReplicaDetailOutput struct{ *pulumi.OutputState }

func (KeyReplicaDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyReplicaDetail)(nil)).Elem()
}

func (o KeyReplicaDetailOutput) ToKeyReplicaDetailOutput() KeyReplicaDetailOutput {
	return o
}

func (o KeyReplicaDetailOutput) ToKeyReplicaDetailOutputWithContext(ctx context.Context) KeyReplicaDetailOutput {
	return o
}

func (o KeyReplicaDetailOutput) ToOutput(ctx context.Context) pulumix.Output[KeyReplicaDetail] {
	return pulumix.Output[KeyReplicaDetail]{
		OutputState: o.OutputState,
	}
}

// ReplicationId associated with a key operation
func (o KeyReplicaDetailOutput) ReplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyReplicaDetail) *string { return v.ReplicationId }).(pulumi.StringPtrOutput)
}

type KeyReplicaDetailArrayOutput struct{ *pulumi.OutputState }

func (KeyReplicaDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeyReplicaDetail)(nil)).Elem()
}

func (o KeyReplicaDetailArrayOutput) ToKeyReplicaDetailArrayOutput() KeyReplicaDetailArrayOutput {
	return o
}

func (o KeyReplicaDetailArrayOutput) ToKeyReplicaDetailArrayOutputWithContext(ctx context.Context) KeyReplicaDetailArrayOutput {
	return o
}

func (o KeyReplicaDetailArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]KeyReplicaDetail] {
	return pulumix.Output[[]KeyReplicaDetail]{
		OutputState: o.OutputState,
	}
}

func (o KeyReplicaDetailArrayOutput) Index(i pulumi.IntInput) KeyReplicaDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KeyReplicaDetail {
		return vs[0].([]KeyReplicaDetail)[vs[1].(int)]
	}).(KeyReplicaDetailOutput)
}

type KeyRestoreFromFile struct {
	// (Updatable) content length of key's backup binary file
	ContentLength string `pulumi:"contentLength"`
	// (Updatable) content md5 hashed value of key's backup file
	ContentMd5 *string `pulumi:"contentMd5"`
	// Key backup file content.
	RestoreKeyFromFileDetails string `pulumi:"restoreKeyFromFileDetails"`
}

// KeyRestoreFromFileInput is an input type that accepts KeyRestoreFromFileArgs and KeyRestoreFromFileOutput values.
// You can construct a concrete instance of `KeyRestoreFromFileInput` via:
//
//	KeyRestoreFromFileArgs{...}
type KeyRestoreFromFileInput interface {
	pulumi.Input

	ToKeyRestoreFromFileOutput() KeyRestoreFromFileOutput
	ToKeyRestoreFromFileOutputWithContext(context.Context) KeyRestoreFromFileOutput
}

type KeyRestoreFromFileArgs struct {
	// (Updatable) content length of key's backup binary file
	ContentLength pulumi.StringInput `pulumi:"contentLength"`
	// (Updatable) content md5 hashed value of key's backup file
	ContentMd5 pulumi.StringPtrInput `pulumi:"contentMd5"`
	// Key backup file content.
	RestoreKeyFromFileDetails pulumi.StringInput `pulumi:"restoreKeyFromFileDetails"`
}

func (KeyRestoreFromFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyRestoreFromFile)(nil)).Elem()
}

func (i KeyRestoreFromFileArgs) ToKeyRestoreFromFileOutput() KeyRestoreFromFileOutput {
	return i.ToKeyRestoreFromFileOutputWithContext(context.Background())
}

func (i KeyRestoreFromFileArgs) ToKeyRestoreFromFileOutputWithContext(ctx context.Context) KeyRestoreFromFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyRestoreFromFileOutput)
}

func (i KeyRestoreFromFileArgs) ToOutput(ctx context.Context) pulumix.Output[KeyRestoreFromFile] {
	return pulumix.Output[KeyRestoreFromFile]{
		OutputState: i.ToKeyRestoreFromFileOutputWithContext(ctx).OutputState,
	}
}

func (i KeyRestoreFromFileArgs) ToKeyRestoreFromFilePtrOutput() KeyRestoreFromFilePtrOutput {
	return i.ToKeyRestoreFromFilePtrOutputWithContext(context.Background())
}

func (i KeyRestoreFromFileArgs) ToKeyRestoreFromFilePtrOutputWithContext(ctx context.Context) KeyRestoreFromFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyRestoreFromFileOutput).ToKeyRestoreFromFilePtrOutputWithContext(ctx)
}

// KeyRestoreFromFilePtrInput is an input type that accepts KeyRestoreFromFileArgs, KeyRestoreFromFilePtr and KeyRestoreFromFilePtrOutput values.
// You can construct a concrete instance of `KeyRestoreFromFilePtrInput` via:
//
//	        KeyRestoreFromFileArgs{...}
//
//	or:
//
//	        nil
type KeyRestoreFromFilePtrInput interface {
	pulumi.Input

	ToKeyRestoreFromFilePtrOutput() KeyRestoreFromFilePtrOutput
	ToKeyRestoreFromFilePtrOutputWithContext(context.Context) KeyRestoreFromFilePtrOutput
}

type keyRestoreFromFilePtrType KeyRestoreFromFileArgs

func KeyRestoreFromFilePtr(v *KeyRestoreFromFileArgs) KeyRestoreFromFilePtrInput {
	return (*keyRestoreFromFilePtrType)(v)
}

func (*keyRestoreFromFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyRestoreFromFile)(nil)).Elem()
}

func (i *keyRestoreFromFilePtrType) ToKeyRestoreFromFilePtrOutput() KeyRestoreFromFilePtrOutput {
	return i.ToKeyRestoreFromFilePtrOutputWithContext(context.Background())
}

func (i *keyRestoreFromFilePtrType) ToKeyRestoreFromFilePtrOutputWithContext(ctx context.Context) KeyRestoreFromFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyRestoreFromFilePtrOutput)
}

func (i *keyRestoreFromFilePtrType) ToOutput(ctx context.Context) pulumix.Output[*KeyRestoreFromFile] {
	return pulumix.Output[*KeyRestoreFromFile]{
		OutputState: i.ToKeyRestoreFromFilePtrOutputWithContext(ctx).OutputState,
	}
}

type KeyRestoreFromFileOutput struct{ *pulumi.OutputState }

func (KeyRestoreFromFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyRestoreFromFile)(nil)).Elem()
}

func (o KeyRestoreFromFileOutput) ToKeyRestoreFromFileOutput() KeyRestoreFromFileOutput {
	return o
}

func (o KeyRestoreFromFileOutput) ToKeyRestoreFromFileOutputWithContext(ctx context.Context) KeyRestoreFromFileOutput {
	return o
}

func (o KeyRestoreFromFileOutput) ToKeyRestoreFromFilePtrOutput() KeyRestoreFromFilePtrOutput {
	return o.ToKeyRestoreFromFilePtrOutputWithContext(context.Background())
}

func (o KeyRestoreFromFileOutput) ToKeyRestoreFromFilePtrOutputWithContext(ctx context.Context) KeyRestoreFromFilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KeyRestoreFromFile) *KeyRestoreFromFile {
		return &v
	}).(KeyRestoreFromFilePtrOutput)
}

func (o KeyRestoreFromFileOutput) ToOutput(ctx context.Context) pulumix.Output[KeyRestoreFromFile] {
	return pulumix.Output[KeyRestoreFromFile]{
		OutputState: o.OutputState,
	}
}

// (Updatable) content length of key's backup binary file
func (o KeyRestoreFromFileOutput) ContentLength() pulumi.StringOutput {
	return o.ApplyT(func(v KeyRestoreFromFile) string { return v.ContentLength }).(pulumi.StringOutput)
}

// (Updatable) content md5 hashed value of key's backup file
func (o KeyRestoreFromFileOutput) ContentMd5() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyRestoreFromFile) *string { return v.ContentMd5 }).(pulumi.StringPtrOutput)
}

// Key backup file content.
func (o KeyRestoreFromFileOutput) RestoreKeyFromFileDetails() pulumi.StringOutput {
	return o.ApplyT(func(v KeyRestoreFromFile) string { return v.RestoreKeyFromFileDetails }).(pulumi.StringOutput)
}

type KeyRestoreFromFilePtrOutput struct{ *pulumi.OutputState }

func (KeyRestoreFromFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyRestoreFromFile)(nil)).Elem()
}

func (o KeyRestoreFromFilePtrOutput) ToKeyRestoreFromFilePtrOutput() KeyRestoreFromFilePtrOutput {
	return o
}

func (o KeyRestoreFromFilePtrOutput) ToKeyRestoreFromFilePtrOutputWithContext(ctx context.Context) KeyRestoreFromFilePtrOutput {
	return o
}

func (o KeyRestoreFromFilePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*KeyRestoreFromFile] {
	return pulumix.Output[*KeyRestoreFromFile]{
		OutputState: o.OutputState,
	}
}

func (o KeyRestoreFromFilePtrOutput) Elem() KeyRestoreFromFileOutput {
	return o.ApplyT(func(v *KeyRestoreFromFile) KeyRestoreFromFile {
		if v != nil {
			return *v
		}
		var ret KeyRestoreFromFile
		return ret
	}).(KeyRestoreFromFileOutput)
}

// (Updatable) content length of key's backup binary file
func (o KeyRestoreFromFilePtrOutput) ContentLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyRestoreFromFile) *string {
		if v == nil {
			return nil
		}
		return &v.ContentLength
	}).(pulumi.StringPtrOutput)
}

// (Updatable) content md5 hashed value of key's backup file
func (o KeyRestoreFromFilePtrOutput) ContentMd5() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyRestoreFromFile) *string {
		if v == nil {
			return nil
		}
		return v.ContentMd5
	}).(pulumi.StringPtrOutput)
}

// Key backup file content.
func (o KeyRestoreFromFilePtrOutput) RestoreKeyFromFileDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyRestoreFromFile) *string {
		if v == nil {
			return nil
		}
		return &v.RestoreKeyFromFileDetails
	}).(pulumi.StringPtrOutput)
}

type KeyRestoreFromObjectStore struct {
	// (Updatable) Name of the bucket where key was backed up
	Bucket *string `pulumi:"bucket"`
	// (Updatable) Type of backup to restore from. Values of "BUCKET", "PRE_AUTHENTICATED_REQUEST_URI" are supported
	Destination string `pulumi:"destination"`
	// (Updatable) Namespace of the bucket where key was backed up
	Namespace *string `pulumi:"namespace"`
	// (Updatable) Object containing the backup
	Object *string `pulumi:"object"`
	// (Updatable) Pre-authenticated-request-uri of the backup
	Uri *string `pulumi:"uri"`
}

// KeyRestoreFromObjectStoreInput is an input type that accepts KeyRestoreFromObjectStoreArgs and KeyRestoreFromObjectStoreOutput values.
// You can construct a concrete instance of `KeyRestoreFromObjectStoreInput` via:
//
//	KeyRestoreFromObjectStoreArgs{...}
type KeyRestoreFromObjectStoreInput interface {
	pulumi.Input

	ToKeyRestoreFromObjectStoreOutput() KeyRestoreFromObjectStoreOutput
	ToKeyRestoreFromObjectStoreOutputWithContext(context.Context) KeyRestoreFromObjectStoreOutput
}

type KeyRestoreFromObjectStoreArgs struct {
	// (Updatable) Name of the bucket where key was backed up
	Bucket pulumi.StringPtrInput `pulumi:"bucket"`
	// (Updatable) Type of backup to restore from. Values of "BUCKET", "PRE_AUTHENTICATED_REQUEST_URI" are supported
	Destination pulumi.StringInput `pulumi:"destination"`
	// (Updatable) Namespace of the bucket where key was backed up
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// (Updatable) Object containing the backup
	Object pulumi.StringPtrInput `pulumi:"object"`
	// (Updatable) Pre-authenticated-request-uri of the backup
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (KeyRestoreFromObjectStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyRestoreFromObjectStore)(nil)).Elem()
}

func (i KeyRestoreFromObjectStoreArgs) ToKeyRestoreFromObjectStoreOutput() KeyRestoreFromObjectStoreOutput {
	return i.ToKeyRestoreFromObjectStoreOutputWithContext(context.Background())
}

func (i KeyRestoreFromObjectStoreArgs) ToKeyRestoreFromObjectStoreOutputWithContext(ctx context.Context) KeyRestoreFromObjectStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyRestoreFromObjectStoreOutput)
}

func (i KeyRestoreFromObjectStoreArgs) ToOutput(ctx context.Context) pulumix.Output[KeyRestoreFromObjectStore] {
	return pulumix.Output[KeyRestoreFromObjectStore]{
		OutputState: i.ToKeyRestoreFromObjectStoreOutputWithContext(ctx).OutputState,
	}
}

func (i KeyRestoreFromObjectStoreArgs) ToKeyRestoreFromObjectStorePtrOutput() KeyRestoreFromObjectStorePtrOutput {
	return i.ToKeyRestoreFromObjectStorePtrOutputWithContext(context.Background())
}

func (i KeyRestoreFromObjectStoreArgs) ToKeyRestoreFromObjectStorePtrOutputWithContext(ctx context.Context) KeyRestoreFromObjectStorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyRestoreFromObjectStoreOutput).ToKeyRestoreFromObjectStorePtrOutputWithContext(ctx)
}

// KeyRestoreFromObjectStorePtrInput is an input type that accepts KeyRestoreFromObjectStoreArgs, KeyRestoreFromObjectStorePtr and KeyRestoreFromObjectStorePtrOutput values.
// You can construct a concrete instance of `KeyRestoreFromObjectStorePtrInput` via:
//
//	        KeyRestoreFromObjectStoreArgs{...}
//
//	or:
//
//	        nil
type KeyRestoreFromObjectStorePtrInput interface {
	pulumi.Input

	ToKeyRestoreFromObjectStorePtrOutput() KeyRestoreFromObjectStorePtrOutput
	ToKeyRestoreFromObjectStorePtrOutputWithContext(context.Context) KeyRestoreFromObjectStorePtrOutput
}

type keyRestoreFromObjectStorePtrType KeyRestoreFromObjectStoreArgs

func KeyRestoreFromObjectStorePtr(v *KeyRestoreFromObjectStoreArgs) KeyRestoreFromObjectStorePtrInput {
	return (*keyRestoreFromObjectStorePtrType)(v)
}

func (*keyRestoreFromObjectStorePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyRestoreFromObjectStore)(nil)).Elem()
}

func (i *keyRestoreFromObjectStorePtrType) ToKeyRestoreFromObjectStorePtrOutput() KeyRestoreFromObjectStorePtrOutput {
	return i.ToKeyRestoreFromObjectStorePtrOutputWithContext(context.Background())
}

func (i *keyRestoreFromObjectStorePtrType) ToKeyRestoreFromObjectStorePtrOutputWithContext(ctx context.Context) KeyRestoreFromObjectStorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyRestoreFromObjectStorePtrOutput)
}

func (i *keyRestoreFromObjectStorePtrType) ToOutput(ctx context.Context) pulumix.Output[*KeyRestoreFromObjectStore] {
	return pulumix.Output[*KeyRestoreFromObjectStore]{
		OutputState: i.ToKeyRestoreFromObjectStorePtrOutputWithContext(ctx).OutputState,
	}
}

type KeyRestoreFromObjectStoreOutput struct{ *pulumi.OutputState }

func (KeyRestoreFromObjectStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyRestoreFromObjectStore)(nil)).Elem()
}

func (o KeyRestoreFromObjectStoreOutput) ToKeyRestoreFromObjectStoreOutput() KeyRestoreFromObjectStoreOutput {
	return o
}

func (o KeyRestoreFromObjectStoreOutput) ToKeyRestoreFromObjectStoreOutputWithContext(ctx context.Context) KeyRestoreFromObjectStoreOutput {
	return o
}

func (o KeyRestoreFromObjectStoreOutput) ToKeyRestoreFromObjectStorePtrOutput() KeyRestoreFromObjectStorePtrOutput {
	return o.ToKeyRestoreFromObjectStorePtrOutputWithContext(context.Background())
}

func (o KeyRestoreFromObjectStoreOutput) ToKeyRestoreFromObjectStorePtrOutputWithContext(ctx context.Context) KeyRestoreFromObjectStorePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KeyRestoreFromObjectStore) *KeyRestoreFromObjectStore {
		return &v
	}).(KeyRestoreFromObjectStorePtrOutput)
}

func (o KeyRestoreFromObjectStoreOutput) ToOutput(ctx context.Context) pulumix.Output[KeyRestoreFromObjectStore] {
	return pulumix.Output[KeyRestoreFromObjectStore]{
		OutputState: o.OutputState,
	}
}

// (Updatable) Name of the bucket where key was backed up
func (o KeyRestoreFromObjectStoreOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyRestoreFromObjectStore) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

// (Updatable) Type of backup to restore from. Values of "BUCKET", "PRE_AUTHENTICATED_REQUEST_URI" are supported
func (o KeyRestoreFromObjectStoreOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v KeyRestoreFromObjectStore) string { return v.Destination }).(pulumi.StringOutput)
}

// (Updatable) Namespace of the bucket where key was backed up
func (o KeyRestoreFromObjectStoreOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyRestoreFromObjectStore) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// (Updatable) Object containing the backup
func (o KeyRestoreFromObjectStoreOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyRestoreFromObjectStore) *string { return v.Object }).(pulumi.StringPtrOutput)
}

// (Updatable) Pre-authenticated-request-uri of the backup
func (o KeyRestoreFromObjectStoreOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyRestoreFromObjectStore) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type KeyRestoreFromObjectStorePtrOutput struct{ *pulumi.OutputState }

func (KeyRestoreFromObjectStorePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyRestoreFromObjectStore)(nil)).Elem()
}

func (o KeyRestoreFromObjectStorePtrOutput) ToKeyRestoreFromObjectStorePtrOutput() KeyRestoreFromObjectStorePtrOutput {
	return o
}

func (o KeyRestoreFromObjectStorePtrOutput) ToKeyRestoreFromObjectStorePtrOutputWithContext(ctx context.Context) KeyRestoreFromObjectStorePtrOutput {
	return o
}

func (o KeyRestoreFromObjectStorePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*KeyRestoreFromObjectStore] {
	return pulumix.Output[*KeyRestoreFromObjectStore]{
		OutputState: o.OutputState,
	}
}

func (o KeyRestoreFromObjectStorePtrOutput) Elem() KeyRestoreFromObjectStoreOutput {
	return o.ApplyT(func(v *KeyRestoreFromObjectStore) KeyRestoreFromObjectStore {
		if v != nil {
			return *v
		}
		var ret KeyRestoreFromObjectStore
		return ret
	}).(KeyRestoreFromObjectStoreOutput)
}

// (Updatable) Name of the bucket where key was backed up
func (o KeyRestoreFromObjectStorePtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyRestoreFromObjectStore) *string {
		if v == nil {
			return nil
		}
		return v.Bucket
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Type of backup to restore from. Values of "BUCKET", "PRE_AUTHENTICATED_REQUEST_URI" are supported
func (o KeyRestoreFromObjectStorePtrOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyRestoreFromObjectStore) *string {
		if v == nil {
			return nil
		}
		return &v.Destination
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Namespace of the bucket where key was backed up
func (o KeyRestoreFromObjectStorePtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyRestoreFromObjectStore) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Object containing the backup
func (o KeyRestoreFromObjectStorePtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyRestoreFromObjectStore) *string {
		if v == nil {
			return nil
		}
		return v.Object
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Pre-authenticated-request-uri of the backup
func (o KeyRestoreFromObjectStorePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyRestoreFromObjectStore) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

type KeyVersionReplicaDetail struct {
	// ReplicationId associated with a key version operation
	ReplicationId *string `pulumi:"replicationId"`
}

// KeyVersionReplicaDetailInput is an input type that accepts KeyVersionReplicaDetailArgs and KeyVersionReplicaDetailOutput values.
// You can construct a concrete instance of `KeyVersionReplicaDetailInput` via:
//
//	KeyVersionReplicaDetailArgs{...}
type KeyVersionReplicaDetailInput interface {
	pulumi.Input

	ToKeyVersionReplicaDetailOutput() KeyVersionReplicaDetailOutput
	ToKeyVersionReplicaDetailOutputWithContext(context.Context) KeyVersionReplicaDetailOutput
}

type KeyVersionReplicaDetailArgs struct {
	// ReplicationId associated with a key version operation
	ReplicationId pulumi.StringPtrInput `pulumi:"replicationId"`
}

func (KeyVersionReplicaDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVersionReplicaDetail)(nil)).Elem()
}

func (i KeyVersionReplicaDetailArgs) ToKeyVersionReplicaDetailOutput() KeyVersionReplicaDetailOutput {
	return i.ToKeyVersionReplicaDetailOutputWithContext(context.Background())
}

func (i KeyVersionReplicaDetailArgs) ToKeyVersionReplicaDetailOutputWithContext(ctx context.Context) KeyVersionReplicaDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVersionReplicaDetailOutput)
}

func (i KeyVersionReplicaDetailArgs) ToOutput(ctx context.Context) pulumix.Output[KeyVersionReplicaDetail] {
	return pulumix.Output[KeyVersionReplicaDetail]{
		OutputState: i.ToKeyVersionReplicaDetailOutputWithContext(ctx).OutputState,
	}
}

// KeyVersionReplicaDetailArrayInput is an input type that accepts KeyVersionReplicaDetailArray and KeyVersionReplicaDetailArrayOutput values.
// You can construct a concrete instance of `KeyVersionReplicaDetailArrayInput` via:
//
//	KeyVersionReplicaDetailArray{ KeyVersionReplicaDetailArgs{...} }
type KeyVersionReplicaDetailArrayInput interface {
	pulumi.Input

	ToKeyVersionReplicaDetailArrayOutput() KeyVersionReplicaDetailArrayOutput
	ToKeyVersionReplicaDetailArrayOutputWithContext(context.Context) KeyVersionReplicaDetailArrayOutput
}

type KeyVersionReplicaDetailArray []KeyVersionReplicaDetailInput

func (KeyVersionReplicaDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeyVersionReplicaDetail)(nil)).Elem()
}

func (i KeyVersionReplicaDetailArray) ToKeyVersionReplicaDetailArrayOutput() KeyVersionReplicaDetailArrayOutput {
	return i.ToKeyVersionReplicaDetailArrayOutputWithContext(context.Background())
}

func (i KeyVersionReplicaDetailArray) ToKeyVersionReplicaDetailArrayOutputWithContext(ctx context.Context) KeyVersionReplicaDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVersionReplicaDetailArrayOutput)
}

func (i KeyVersionReplicaDetailArray) ToOutput(ctx context.Context) pulumix.Output[[]KeyVersionReplicaDetail] {
	return pulumix.Output[[]KeyVersionReplicaDetail]{
		OutputState: i.ToKeyVersionReplicaDetailArrayOutputWithContext(ctx).OutputState,
	}
}

type KeyVersionReplicaDetailOutput struct{ *pulumi.OutputState }

func (KeyVersionReplicaDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVersionReplicaDetail)(nil)).Elem()
}

func (o KeyVersionReplicaDetailOutput) ToKeyVersionReplicaDetailOutput() KeyVersionReplicaDetailOutput {
	return o
}

func (o KeyVersionReplicaDetailOutput) ToKeyVersionReplicaDetailOutputWithContext(ctx context.Context) KeyVersionReplicaDetailOutput {
	return o
}

func (o KeyVersionReplicaDetailOutput) ToOutput(ctx context.Context) pulumix.Output[KeyVersionReplicaDetail] {
	return pulumix.Output[KeyVersionReplicaDetail]{
		OutputState: o.OutputState,
	}
}

// ReplicationId associated with a key version operation
func (o KeyVersionReplicaDetailOutput) ReplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVersionReplicaDetail) *string { return v.ReplicationId }).(pulumi.StringPtrOutput)
}

type KeyVersionReplicaDetailArrayOutput struct{ *pulumi.OutputState }

func (KeyVersionReplicaDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeyVersionReplicaDetail)(nil)).Elem()
}

func (o KeyVersionReplicaDetailArrayOutput) ToKeyVersionReplicaDetailArrayOutput() KeyVersionReplicaDetailArrayOutput {
	return o
}

func (o KeyVersionReplicaDetailArrayOutput) ToKeyVersionReplicaDetailArrayOutputWithContext(ctx context.Context) KeyVersionReplicaDetailArrayOutput {
	return o
}

func (o KeyVersionReplicaDetailArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]KeyVersionReplicaDetail] {
	return pulumix.Output[[]KeyVersionReplicaDetail]{
		OutputState: o.OutputState,
	}
}

func (o KeyVersionReplicaDetailArrayOutput) Index(i pulumi.IntInput) KeyVersionReplicaDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KeyVersionReplicaDetail {
		return vs[0].([]KeyVersionReplicaDetail)[vs[1].(int)]
	}).(KeyVersionReplicaDetailOutput)
}

type VaultReplicaDetail struct {
	// ReplicationId associated with a vault operation
	ReplicationId *string `pulumi:"replicationId"`
}

// VaultReplicaDetailInput is an input type that accepts VaultReplicaDetailArgs and VaultReplicaDetailOutput values.
// You can construct a concrete instance of `VaultReplicaDetailInput` via:
//
//	VaultReplicaDetailArgs{...}
type VaultReplicaDetailInput interface {
	pulumi.Input

	ToVaultReplicaDetailOutput() VaultReplicaDetailOutput
	ToVaultReplicaDetailOutputWithContext(context.Context) VaultReplicaDetailOutput
}

type VaultReplicaDetailArgs struct {
	// ReplicationId associated with a vault operation
	ReplicationId pulumi.StringPtrInput `pulumi:"replicationId"`
}

func (VaultReplicaDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultReplicaDetail)(nil)).Elem()
}

func (i VaultReplicaDetailArgs) ToVaultReplicaDetailOutput() VaultReplicaDetailOutput {
	return i.ToVaultReplicaDetailOutputWithContext(context.Background())
}

func (i VaultReplicaDetailArgs) ToVaultReplicaDetailOutputWithContext(ctx context.Context) VaultReplicaDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultReplicaDetailOutput)
}

func (i VaultReplicaDetailArgs) ToOutput(ctx context.Context) pulumix.Output[VaultReplicaDetail] {
	return pulumix.Output[VaultReplicaDetail]{
		OutputState: i.ToVaultReplicaDetailOutputWithContext(ctx).OutputState,
	}
}

// VaultReplicaDetailArrayInput is an input type that accepts VaultReplicaDetailArray and VaultReplicaDetailArrayOutput values.
// You can construct a concrete instance of `VaultReplicaDetailArrayInput` via:
//
//	VaultReplicaDetailArray{ VaultReplicaDetailArgs{...} }
type VaultReplicaDetailArrayInput interface {
	pulumi.Input

	ToVaultReplicaDetailArrayOutput() VaultReplicaDetailArrayOutput
	ToVaultReplicaDetailArrayOutputWithContext(context.Context) VaultReplicaDetailArrayOutput
}

type VaultReplicaDetailArray []VaultReplicaDetailInput

func (VaultReplicaDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VaultReplicaDetail)(nil)).Elem()
}

func (i VaultReplicaDetailArray) ToVaultReplicaDetailArrayOutput() VaultReplicaDetailArrayOutput {
	return i.ToVaultReplicaDetailArrayOutputWithContext(context.Background())
}

func (i VaultReplicaDetailArray) ToVaultReplicaDetailArrayOutputWithContext(ctx context.Context) VaultReplicaDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultReplicaDetailArrayOutput)
}

func (i VaultReplicaDetailArray) ToOutput(ctx context.Context) pulumix.Output[[]VaultReplicaDetail] {
	return pulumix.Output[[]VaultReplicaDetail]{
		OutputState: i.ToVaultReplicaDetailArrayOutputWithContext(ctx).OutputState,
	}
}

type VaultReplicaDetailOutput struct{ *pulumi.OutputState }

func (VaultReplicaDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultReplicaDetail)(nil)).Elem()
}

func (o VaultReplicaDetailOutput) ToVaultReplicaDetailOutput() VaultReplicaDetailOutput {
	return o
}

func (o VaultReplicaDetailOutput) ToVaultReplicaDetailOutputWithContext(ctx context.Context) VaultReplicaDetailOutput {
	return o
}

func (o VaultReplicaDetailOutput) ToOutput(ctx context.Context) pulumix.Output[VaultReplicaDetail] {
	return pulumix.Output[VaultReplicaDetail]{
		OutputState: o.OutputState,
	}
}

// ReplicationId associated with a vault operation
func (o VaultReplicaDetailOutput) ReplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VaultReplicaDetail) *string { return v.ReplicationId }).(pulumi.StringPtrOutput)
}

type VaultReplicaDetailArrayOutput struct{ *pulumi.OutputState }

func (VaultReplicaDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VaultReplicaDetail)(nil)).Elem()
}

func (o VaultReplicaDetailArrayOutput) ToVaultReplicaDetailArrayOutput() VaultReplicaDetailArrayOutput {
	return o
}

func (o VaultReplicaDetailArrayOutput) ToVaultReplicaDetailArrayOutputWithContext(ctx context.Context) VaultReplicaDetailArrayOutput {
	return o
}

func (o VaultReplicaDetailArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]VaultReplicaDetail] {
	return pulumix.Output[[]VaultReplicaDetail]{
		OutputState: o.OutputState,
	}
}

func (o VaultReplicaDetailArrayOutput) Index(i pulumi.IntInput) VaultReplicaDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VaultReplicaDetail {
		return vs[0].([]VaultReplicaDetail)[vs[1].(int)]
	}).(VaultReplicaDetailOutput)
}

type VaultRestoreFromFile struct {
	// content length of vault's backup binary file
	ContentLength string `pulumi:"contentLength"`
	// (Updatable) content md5 hashed value of vault's backup file
	ContentMd5 *string `pulumi:"contentMd5"`
	// Vault backup file content
	RestoreVaultFromFileDetails string `pulumi:"restoreVaultFromFileDetails"`
}

// VaultRestoreFromFileInput is an input type that accepts VaultRestoreFromFileArgs and VaultRestoreFromFileOutput values.
// You can construct a concrete instance of `VaultRestoreFromFileInput` via:
//
//	VaultRestoreFromFileArgs{...}
type VaultRestoreFromFileInput interface {
	pulumi.Input

	ToVaultRestoreFromFileOutput() VaultRestoreFromFileOutput
	ToVaultRestoreFromFileOutputWithContext(context.Context) VaultRestoreFromFileOutput
}

type VaultRestoreFromFileArgs struct {
	// content length of vault's backup binary file
	ContentLength pulumi.StringInput `pulumi:"contentLength"`
	// (Updatable) content md5 hashed value of vault's backup file
	ContentMd5 pulumi.StringPtrInput `pulumi:"contentMd5"`
	// Vault backup file content
	RestoreVaultFromFileDetails pulumi.StringInput `pulumi:"restoreVaultFromFileDetails"`
}

func (VaultRestoreFromFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultRestoreFromFile)(nil)).Elem()
}

func (i VaultRestoreFromFileArgs) ToVaultRestoreFromFileOutput() VaultRestoreFromFileOutput {
	return i.ToVaultRestoreFromFileOutputWithContext(context.Background())
}

func (i VaultRestoreFromFileArgs) ToVaultRestoreFromFileOutputWithContext(ctx context.Context) VaultRestoreFromFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultRestoreFromFileOutput)
}

func (i VaultRestoreFromFileArgs) ToOutput(ctx context.Context) pulumix.Output[VaultRestoreFromFile] {
	return pulumix.Output[VaultRestoreFromFile]{
		OutputState: i.ToVaultRestoreFromFileOutputWithContext(ctx).OutputState,
	}
}

func (i VaultRestoreFromFileArgs) ToVaultRestoreFromFilePtrOutput() VaultRestoreFromFilePtrOutput {
	return i.ToVaultRestoreFromFilePtrOutputWithContext(context.Background())
}

func (i VaultRestoreFromFileArgs) ToVaultRestoreFromFilePtrOutputWithContext(ctx context.Context) VaultRestoreFromFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultRestoreFromFileOutput).ToVaultRestoreFromFilePtrOutputWithContext(ctx)
}

// VaultRestoreFromFilePtrInput is an input type that accepts VaultRestoreFromFileArgs, VaultRestoreFromFilePtr and VaultRestoreFromFilePtrOutput values.
// You can construct a concrete instance of `VaultRestoreFromFilePtrInput` via:
//
//	        VaultRestoreFromFileArgs{...}
//
//	or:
//
//	        nil
type VaultRestoreFromFilePtrInput interface {
	pulumi.Input

	ToVaultRestoreFromFilePtrOutput() VaultRestoreFromFilePtrOutput
	ToVaultRestoreFromFilePtrOutputWithContext(context.Context) VaultRestoreFromFilePtrOutput
}

type vaultRestoreFromFilePtrType VaultRestoreFromFileArgs

func VaultRestoreFromFilePtr(v *VaultRestoreFromFileArgs) VaultRestoreFromFilePtrInput {
	return (*vaultRestoreFromFilePtrType)(v)
}

func (*vaultRestoreFromFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultRestoreFromFile)(nil)).Elem()
}

func (i *vaultRestoreFromFilePtrType) ToVaultRestoreFromFilePtrOutput() VaultRestoreFromFilePtrOutput {
	return i.ToVaultRestoreFromFilePtrOutputWithContext(context.Background())
}

func (i *vaultRestoreFromFilePtrType) ToVaultRestoreFromFilePtrOutputWithContext(ctx context.Context) VaultRestoreFromFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultRestoreFromFilePtrOutput)
}

func (i *vaultRestoreFromFilePtrType) ToOutput(ctx context.Context) pulumix.Output[*VaultRestoreFromFile] {
	return pulumix.Output[*VaultRestoreFromFile]{
		OutputState: i.ToVaultRestoreFromFilePtrOutputWithContext(ctx).OutputState,
	}
}

type VaultRestoreFromFileOutput struct{ *pulumi.OutputState }

func (VaultRestoreFromFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultRestoreFromFile)(nil)).Elem()
}

func (o VaultRestoreFromFileOutput) ToVaultRestoreFromFileOutput() VaultRestoreFromFileOutput {
	return o
}

func (o VaultRestoreFromFileOutput) ToVaultRestoreFromFileOutputWithContext(ctx context.Context) VaultRestoreFromFileOutput {
	return o
}

func (o VaultRestoreFromFileOutput) ToVaultRestoreFromFilePtrOutput() VaultRestoreFromFilePtrOutput {
	return o.ToVaultRestoreFromFilePtrOutputWithContext(context.Background())
}

func (o VaultRestoreFromFileOutput) ToVaultRestoreFromFilePtrOutputWithContext(ctx context.Context) VaultRestoreFromFilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VaultRestoreFromFile) *VaultRestoreFromFile {
		return &v
	}).(VaultRestoreFromFilePtrOutput)
}

func (o VaultRestoreFromFileOutput) ToOutput(ctx context.Context) pulumix.Output[VaultRestoreFromFile] {
	return pulumix.Output[VaultRestoreFromFile]{
		OutputState: o.OutputState,
	}
}

// content length of vault's backup binary file
func (o VaultRestoreFromFileOutput) ContentLength() pulumi.StringOutput {
	return o.ApplyT(func(v VaultRestoreFromFile) string { return v.ContentLength }).(pulumi.StringOutput)
}

// (Updatable) content md5 hashed value of vault's backup file
func (o VaultRestoreFromFileOutput) ContentMd5() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VaultRestoreFromFile) *string { return v.ContentMd5 }).(pulumi.StringPtrOutput)
}

// Vault backup file content
func (o VaultRestoreFromFileOutput) RestoreVaultFromFileDetails() pulumi.StringOutput {
	return o.ApplyT(func(v VaultRestoreFromFile) string { return v.RestoreVaultFromFileDetails }).(pulumi.StringOutput)
}

type VaultRestoreFromFilePtrOutput struct{ *pulumi.OutputState }

func (VaultRestoreFromFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultRestoreFromFile)(nil)).Elem()
}

func (o VaultRestoreFromFilePtrOutput) ToVaultRestoreFromFilePtrOutput() VaultRestoreFromFilePtrOutput {
	return o
}

func (o VaultRestoreFromFilePtrOutput) ToVaultRestoreFromFilePtrOutputWithContext(ctx context.Context) VaultRestoreFromFilePtrOutput {
	return o
}

func (o VaultRestoreFromFilePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VaultRestoreFromFile] {
	return pulumix.Output[*VaultRestoreFromFile]{
		OutputState: o.OutputState,
	}
}

func (o VaultRestoreFromFilePtrOutput) Elem() VaultRestoreFromFileOutput {
	return o.ApplyT(func(v *VaultRestoreFromFile) VaultRestoreFromFile {
		if v != nil {
			return *v
		}
		var ret VaultRestoreFromFile
		return ret
	}).(VaultRestoreFromFileOutput)
}

// content length of vault's backup binary file
func (o VaultRestoreFromFilePtrOutput) ContentLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultRestoreFromFile) *string {
		if v == nil {
			return nil
		}
		return &v.ContentLength
	}).(pulumi.StringPtrOutput)
}

// (Updatable) content md5 hashed value of vault's backup file
func (o VaultRestoreFromFilePtrOutput) ContentMd5() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultRestoreFromFile) *string {
		if v == nil {
			return nil
		}
		return v.ContentMd5
	}).(pulumi.StringPtrOutput)
}

// Vault backup file content
func (o VaultRestoreFromFilePtrOutput) RestoreVaultFromFileDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultRestoreFromFile) *string {
		if v == nil {
			return nil
		}
		return &v.RestoreVaultFromFileDetails
	}).(pulumi.StringPtrOutput)
}

type VaultRestoreFromObjectStore struct {
	// (Updatable) Name of the bucket where vault was backed up
	Bucket *string `pulumi:"bucket"`
	// (Updatable) Type of backup to restore from. Values of "BUCKET", "PRE_AUTHENTICATED_REQUEST_URI" are supported
	Destination string `pulumi:"destination"`
	// (Updatable) Namespace of the bucket where vault was backed up
	Namespace *string `pulumi:"namespace"`
	// (Updatable) Object containing the backup
	Object *string `pulumi:"object"`
	// (Updatable) Pre-authenticated-request-uri of the backup* `restoreTrigger` - (Optional) (Updatable) An optional property when flipped triggers restore from restore option provided in config file.
	Uri *string `pulumi:"uri"`
}

// VaultRestoreFromObjectStoreInput is an input type that accepts VaultRestoreFromObjectStoreArgs and VaultRestoreFromObjectStoreOutput values.
// You can construct a concrete instance of `VaultRestoreFromObjectStoreInput` via:
//
//	VaultRestoreFromObjectStoreArgs{...}
type VaultRestoreFromObjectStoreInput interface {
	pulumi.Input

	ToVaultRestoreFromObjectStoreOutput() VaultRestoreFromObjectStoreOutput
	ToVaultRestoreFromObjectStoreOutputWithContext(context.Context) VaultRestoreFromObjectStoreOutput
}

type VaultRestoreFromObjectStoreArgs struct {
	// (Updatable) Name of the bucket where vault was backed up
	Bucket pulumi.StringPtrInput `pulumi:"bucket"`
	// (Updatable) Type of backup to restore from. Values of "BUCKET", "PRE_AUTHENTICATED_REQUEST_URI" are supported
	Destination pulumi.StringInput `pulumi:"destination"`
	// (Updatable) Namespace of the bucket where vault was backed up
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// (Updatable) Object containing the backup
	Object pulumi.StringPtrInput `pulumi:"object"`
	// (Updatable) Pre-authenticated-request-uri of the backup* `restoreTrigger` - (Optional) (Updatable) An optional property when flipped triggers restore from restore option provided in config file.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (VaultRestoreFromObjectStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultRestoreFromObjectStore)(nil)).Elem()
}

func (i VaultRestoreFromObjectStoreArgs) ToVaultRestoreFromObjectStoreOutput() VaultRestoreFromObjectStoreOutput {
	return i.ToVaultRestoreFromObjectStoreOutputWithContext(context.Background())
}

func (i VaultRestoreFromObjectStoreArgs) ToVaultRestoreFromObjectStoreOutputWithContext(ctx context.Context) VaultRestoreFromObjectStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultRestoreFromObjectStoreOutput)
}

func (i VaultRestoreFromObjectStoreArgs) ToOutput(ctx context.Context) pulumix.Output[VaultRestoreFromObjectStore] {
	return pulumix.Output[VaultRestoreFromObjectStore]{
		OutputState: i.ToVaultRestoreFromObjectStoreOutputWithContext(ctx).OutputState,
	}
}

func (i VaultRestoreFromObjectStoreArgs) ToVaultRestoreFromObjectStorePtrOutput() VaultRestoreFromObjectStorePtrOutput {
	return i.ToVaultRestoreFromObjectStorePtrOutputWithContext(context.Background())
}

func (i VaultRestoreFromObjectStoreArgs) ToVaultRestoreFromObjectStorePtrOutputWithContext(ctx context.Context) VaultRestoreFromObjectStorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultRestoreFromObjectStoreOutput).ToVaultRestoreFromObjectStorePtrOutputWithContext(ctx)
}

// VaultRestoreFromObjectStorePtrInput is an input type that accepts VaultRestoreFromObjectStoreArgs, VaultRestoreFromObjectStorePtr and VaultRestoreFromObjectStorePtrOutput values.
// You can construct a concrete instance of `VaultRestoreFromObjectStorePtrInput` via:
//
//	        VaultRestoreFromObjectStoreArgs{...}
//
//	or:
//
//	        nil
type VaultRestoreFromObjectStorePtrInput interface {
	pulumi.Input

	ToVaultRestoreFromObjectStorePtrOutput() VaultRestoreFromObjectStorePtrOutput
	ToVaultRestoreFromObjectStorePtrOutputWithContext(context.Context) VaultRestoreFromObjectStorePtrOutput
}

type vaultRestoreFromObjectStorePtrType VaultRestoreFromObjectStoreArgs

func VaultRestoreFromObjectStorePtr(v *VaultRestoreFromObjectStoreArgs) VaultRestoreFromObjectStorePtrInput {
	return (*vaultRestoreFromObjectStorePtrType)(v)
}

func (*vaultRestoreFromObjectStorePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultRestoreFromObjectStore)(nil)).Elem()
}

func (i *vaultRestoreFromObjectStorePtrType) ToVaultRestoreFromObjectStorePtrOutput() VaultRestoreFromObjectStorePtrOutput {
	return i.ToVaultRestoreFromObjectStorePtrOutputWithContext(context.Background())
}

func (i *vaultRestoreFromObjectStorePtrType) ToVaultRestoreFromObjectStorePtrOutputWithContext(ctx context.Context) VaultRestoreFromObjectStorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultRestoreFromObjectStorePtrOutput)
}

func (i *vaultRestoreFromObjectStorePtrType) ToOutput(ctx context.Context) pulumix.Output[*VaultRestoreFromObjectStore] {
	return pulumix.Output[*VaultRestoreFromObjectStore]{
		OutputState: i.ToVaultRestoreFromObjectStorePtrOutputWithContext(ctx).OutputState,
	}
}

type VaultRestoreFromObjectStoreOutput struct{ *pulumi.OutputState }

func (VaultRestoreFromObjectStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultRestoreFromObjectStore)(nil)).Elem()
}

func (o VaultRestoreFromObjectStoreOutput) ToVaultRestoreFromObjectStoreOutput() VaultRestoreFromObjectStoreOutput {
	return o
}

func (o VaultRestoreFromObjectStoreOutput) ToVaultRestoreFromObjectStoreOutputWithContext(ctx context.Context) VaultRestoreFromObjectStoreOutput {
	return o
}

func (o VaultRestoreFromObjectStoreOutput) ToVaultRestoreFromObjectStorePtrOutput() VaultRestoreFromObjectStorePtrOutput {
	return o.ToVaultRestoreFromObjectStorePtrOutputWithContext(context.Background())
}

func (o VaultRestoreFromObjectStoreOutput) ToVaultRestoreFromObjectStorePtrOutputWithContext(ctx context.Context) VaultRestoreFromObjectStorePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VaultRestoreFromObjectStore) *VaultRestoreFromObjectStore {
		return &v
	}).(VaultRestoreFromObjectStorePtrOutput)
}

func (o VaultRestoreFromObjectStoreOutput) ToOutput(ctx context.Context) pulumix.Output[VaultRestoreFromObjectStore] {
	return pulumix.Output[VaultRestoreFromObjectStore]{
		OutputState: o.OutputState,
	}
}

// (Updatable) Name of the bucket where vault was backed up
func (o VaultRestoreFromObjectStoreOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VaultRestoreFromObjectStore) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

// (Updatable) Type of backup to restore from. Values of "BUCKET", "PRE_AUTHENTICATED_REQUEST_URI" are supported
func (o VaultRestoreFromObjectStoreOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v VaultRestoreFromObjectStore) string { return v.Destination }).(pulumi.StringOutput)
}

// (Updatable) Namespace of the bucket where vault was backed up
func (o VaultRestoreFromObjectStoreOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VaultRestoreFromObjectStore) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// (Updatable) Object containing the backup
func (o VaultRestoreFromObjectStoreOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VaultRestoreFromObjectStore) *string { return v.Object }).(pulumi.StringPtrOutput)
}

// (Updatable) Pre-authenticated-request-uri of the backup* `restoreTrigger` - (Optional) (Updatable) An optional property when flipped triggers restore from restore option provided in config file.
func (o VaultRestoreFromObjectStoreOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VaultRestoreFromObjectStore) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type VaultRestoreFromObjectStorePtrOutput struct{ *pulumi.OutputState }

func (VaultRestoreFromObjectStorePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultRestoreFromObjectStore)(nil)).Elem()
}

func (o VaultRestoreFromObjectStorePtrOutput) ToVaultRestoreFromObjectStorePtrOutput() VaultRestoreFromObjectStorePtrOutput {
	return o
}

func (o VaultRestoreFromObjectStorePtrOutput) ToVaultRestoreFromObjectStorePtrOutputWithContext(ctx context.Context) VaultRestoreFromObjectStorePtrOutput {
	return o
}

func (o VaultRestoreFromObjectStorePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VaultRestoreFromObjectStore] {
	return pulumix.Output[*VaultRestoreFromObjectStore]{
		OutputState: o.OutputState,
	}
}

func (o VaultRestoreFromObjectStorePtrOutput) Elem() VaultRestoreFromObjectStoreOutput {
	return o.ApplyT(func(v *VaultRestoreFromObjectStore) VaultRestoreFromObjectStore {
		if v != nil {
			return *v
		}
		var ret VaultRestoreFromObjectStore
		return ret
	}).(VaultRestoreFromObjectStoreOutput)
}

// (Updatable) Name of the bucket where vault was backed up
func (o VaultRestoreFromObjectStorePtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultRestoreFromObjectStore) *string {
		if v == nil {
			return nil
		}
		return v.Bucket
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Type of backup to restore from. Values of "BUCKET", "PRE_AUTHENTICATED_REQUEST_URI" are supported
func (o VaultRestoreFromObjectStorePtrOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultRestoreFromObjectStore) *string {
		if v == nil {
			return nil
		}
		return &v.Destination
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Namespace of the bucket where vault was backed up
func (o VaultRestoreFromObjectStorePtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultRestoreFromObjectStore) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Object containing the backup
func (o VaultRestoreFromObjectStorePtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultRestoreFromObjectStore) *string {
		if v == nil {
			return nil
		}
		return v.Object
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Pre-authenticated-request-uri of the backup* `restoreTrigger` - (Optional) (Updatable) An optional property when flipped triggers restore from restore option provided in config file.
func (o VaultRestoreFromObjectStorePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultRestoreFromObjectStore) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

type GetKeyKeyShape struct {
	// The algorithm used by a key's key versions to encrypt or decrypt.
	Algorithm string `pulumi:"algorithm"`
	// Supported curve IDs for ECDSA keys.
	CurveId string `pulumi:"curveId"`
	// The length of the key in bytes, expressed as an integer. Supported values include the following:
	// * AES: 16, 24, or 32
	// * RSA: 256, 384, or 512
	// * ECDSA: 32, 48, or 66
	Length int `pulumi:"length"`
}

// GetKeyKeyShapeInput is an input type that accepts GetKeyKeyShapeArgs and GetKeyKeyShapeOutput values.
// You can construct a concrete instance of `GetKeyKeyShapeInput` via:
//
//	GetKeyKeyShapeArgs{...}
type GetKeyKeyShapeInput interface {
	pulumi.Input

	ToGetKeyKeyShapeOutput() GetKeyKeyShapeOutput
	ToGetKeyKeyShapeOutputWithContext(context.Context) GetKeyKeyShapeOutput
}

type GetKeyKeyShapeArgs struct {
	// The algorithm used by a key's key versions to encrypt or decrypt.
	Algorithm pulumi.StringInput `pulumi:"algorithm"`
	// Supported curve IDs for ECDSA keys.
	CurveId pulumi.StringInput `pulumi:"curveId"`
	// The length of the key in bytes, expressed as an integer. Supported values include the following:
	// * AES: 16, 24, or 32
	// * RSA: 256, 384, or 512
	// * ECDSA: 32, 48, or 66
	Length pulumi.IntInput `pulumi:"length"`
}

func (GetKeyKeyShapeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyKeyShape)(nil)).Elem()
}

func (i GetKeyKeyShapeArgs) ToGetKeyKeyShapeOutput() GetKeyKeyShapeOutput {
	return i.ToGetKeyKeyShapeOutputWithContext(context.Background())
}

func (i GetKeyKeyShapeArgs) ToGetKeyKeyShapeOutputWithContext(ctx context.Context) GetKeyKeyShapeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeyKeyShapeOutput)
}

func (i GetKeyKeyShapeArgs) ToOutput(ctx context.Context) pulumix.Output[GetKeyKeyShape] {
	return pulumix.Output[GetKeyKeyShape]{
		OutputState: i.ToGetKeyKeyShapeOutputWithContext(ctx).OutputState,
	}
}

// GetKeyKeyShapeArrayInput is an input type that accepts GetKeyKeyShapeArray and GetKeyKeyShapeArrayOutput values.
// You can construct a concrete instance of `GetKeyKeyShapeArrayInput` via:
//
//	GetKeyKeyShapeArray{ GetKeyKeyShapeArgs{...} }
type GetKeyKeyShapeArrayInput interface {
	pulumi.Input

	ToGetKeyKeyShapeArrayOutput() GetKeyKeyShapeArrayOutput
	ToGetKeyKeyShapeArrayOutputWithContext(context.Context) GetKeyKeyShapeArrayOutput
}

type GetKeyKeyShapeArray []GetKeyKeyShapeInput

func (GetKeyKeyShapeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeyKeyShape)(nil)).Elem()
}

func (i GetKeyKeyShapeArray) ToGetKeyKeyShapeArrayOutput() GetKeyKeyShapeArrayOutput {
	return i.ToGetKeyKeyShapeArrayOutputWithContext(context.Background())
}

func (i GetKeyKeyShapeArray) ToGetKeyKeyShapeArrayOutputWithContext(ctx context.Context) GetKeyKeyShapeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeyKeyShapeArrayOutput)
}

func (i GetKeyKeyShapeArray) ToOutput(ctx context.Context) pulumix.Output[[]GetKeyKeyShape] {
	return pulumix.Output[[]GetKeyKeyShape]{
		OutputState: i.ToGetKeyKeyShapeArrayOutputWithContext(ctx).OutputState,
	}
}

type GetKeyKeyShapeOutput struct{ *pulumi.OutputState }

func (GetKeyKeyShapeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyKeyShape)(nil)).Elem()
}

func (o GetKeyKeyShapeOutput) ToGetKeyKeyShapeOutput() GetKeyKeyShapeOutput {
	return o
}

func (o GetKeyKeyShapeOutput) ToGetKeyKeyShapeOutputWithContext(ctx context.Context) GetKeyKeyShapeOutput {
	return o
}

func (o GetKeyKeyShapeOutput) ToOutput(ctx context.Context) pulumix.Output[GetKeyKeyShape] {
	return pulumix.Output[GetKeyKeyShape]{
		OutputState: o.OutputState,
	}
}

// The algorithm used by a key's key versions to encrypt or decrypt.
func (o GetKeyKeyShapeOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyKeyShape) string { return v.Algorithm }).(pulumi.StringOutput)
}

// Supported curve IDs for ECDSA keys.
func (o GetKeyKeyShapeOutput) CurveId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyKeyShape) string { return v.CurveId }).(pulumi.StringOutput)
}

// The length of the key in bytes, expressed as an integer. Supported values include the following:
// * AES: 16, 24, or 32
// * RSA: 256, 384, or 512
// * ECDSA: 32, 48, or 66
func (o GetKeyKeyShapeOutput) Length() pulumi.IntOutput {
	return o.ApplyT(func(v GetKeyKeyShape) int { return v.Length }).(pulumi.IntOutput)
}

type GetKeyKeyShapeArrayOutput struct{ *pulumi.OutputState }

func (GetKeyKeyShapeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeyKeyShape)(nil)).Elem()
}

func (o GetKeyKeyShapeArrayOutput) ToGetKeyKeyShapeArrayOutput() GetKeyKeyShapeArrayOutput {
	return o
}

func (o GetKeyKeyShapeArrayOutput) ToGetKeyKeyShapeArrayOutputWithContext(ctx context.Context) GetKeyKeyShapeArrayOutput {
	return o
}

func (o GetKeyKeyShapeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetKeyKeyShape] {
	return pulumix.Output[[]GetKeyKeyShape]{
		OutputState: o.OutputState,
	}
}

func (o GetKeyKeyShapeArrayOutput) Index(i pulumi.IntInput) GetKeyKeyShapeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKeyKeyShape {
		return vs[0].([]GetKeyKeyShape)[vs[1].(int)]
	}).(GetKeyKeyShapeOutput)
}

type GetKeyReplicaDetail struct {
	// ReplicationId associated with a key operation
	ReplicationId string `pulumi:"replicationId"`
}

// GetKeyReplicaDetailInput is an input type that accepts GetKeyReplicaDetailArgs and GetKeyReplicaDetailOutput values.
// You can construct a concrete instance of `GetKeyReplicaDetailInput` via:
//
//	GetKeyReplicaDetailArgs{...}
type GetKeyReplicaDetailInput interface {
	pulumi.Input

	ToGetKeyReplicaDetailOutput() GetKeyReplicaDetailOutput
	ToGetKeyReplicaDetailOutputWithContext(context.Context) GetKeyReplicaDetailOutput
}

type GetKeyReplicaDetailArgs struct {
	// ReplicationId associated with a key operation
	ReplicationId pulumi.StringInput `pulumi:"replicationId"`
}

func (GetKeyReplicaDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyReplicaDetail)(nil)).Elem()
}

func (i GetKeyReplicaDetailArgs) ToGetKeyReplicaDetailOutput() GetKeyReplicaDetailOutput {
	return i.ToGetKeyReplicaDetailOutputWithContext(context.Background())
}

func (i GetKeyReplicaDetailArgs) ToGetKeyReplicaDetailOutputWithContext(ctx context.Context) GetKeyReplicaDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeyReplicaDetailOutput)
}

func (i GetKeyReplicaDetailArgs) ToOutput(ctx context.Context) pulumix.Output[GetKeyReplicaDetail] {
	return pulumix.Output[GetKeyReplicaDetail]{
		OutputState: i.ToGetKeyReplicaDetailOutputWithContext(ctx).OutputState,
	}
}

// GetKeyReplicaDetailArrayInput is an input type that accepts GetKeyReplicaDetailArray and GetKeyReplicaDetailArrayOutput values.
// You can construct a concrete instance of `GetKeyReplicaDetailArrayInput` via:
//
//	GetKeyReplicaDetailArray{ GetKeyReplicaDetailArgs{...} }
type GetKeyReplicaDetailArrayInput interface {
	pulumi.Input

	ToGetKeyReplicaDetailArrayOutput() GetKeyReplicaDetailArrayOutput
	ToGetKeyReplicaDetailArrayOutputWithContext(context.Context) GetKeyReplicaDetailArrayOutput
}

type GetKeyReplicaDetailArray []GetKeyReplicaDetailInput

func (GetKeyReplicaDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeyReplicaDetail)(nil)).Elem()
}

func (i GetKeyReplicaDetailArray) ToGetKeyReplicaDetailArrayOutput() GetKeyReplicaDetailArrayOutput {
	return i.ToGetKeyReplicaDetailArrayOutputWithContext(context.Background())
}

func (i GetKeyReplicaDetailArray) ToGetKeyReplicaDetailArrayOutputWithContext(ctx context.Context) GetKeyReplicaDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeyReplicaDetailArrayOutput)
}

func (i GetKeyReplicaDetailArray) ToOutput(ctx context.Context) pulumix.Output[[]GetKeyReplicaDetail] {
	return pulumix.Output[[]GetKeyReplicaDetail]{
		OutputState: i.ToGetKeyReplicaDetailArrayOutputWithContext(ctx).OutputState,
	}
}

type GetKeyReplicaDetailOutput struct{ *pulumi.OutputState }

func (GetKeyReplicaDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyReplicaDetail)(nil)).Elem()
}

func (o GetKeyReplicaDetailOutput) ToGetKeyReplicaDetailOutput() GetKeyReplicaDetailOutput {
	return o
}

func (o GetKeyReplicaDetailOutput) ToGetKeyReplicaDetailOutputWithContext(ctx context.Context) GetKeyReplicaDetailOutput {
	return o
}

func (o GetKeyReplicaDetailOutput) ToOutput(ctx context.Context) pulumix.Output[GetKeyReplicaDetail] {
	return pulumix.Output[GetKeyReplicaDetail]{
		OutputState: o.OutputState,
	}
}

// ReplicationId associated with a key operation
func (o GetKeyReplicaDetailOutput) ReplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyReplicaDetail) string { return v.ReplicationId }).(pulumi.StringOutput)
}

type GetKeyReplicaDetailArrayOutput struct{ *pulumi.OutputState }

func (GetKeyReplicaDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeyReplicaDetail)(nil)).Elem()
}

func (o GetKeyReplicaDetailArrayOutput) ToGetKeyReplicaDetailArrayOutput() GetKeyReplicaDetailArrayOutput {
	return o
}

func (o GetKeyReplicaDetailArrayOutput) ToGetKeyReplicaDetailArrayOutputWithContext(ctx context.Context) GetKeyReplicaDetailArrayOutput {
	return o
}

func (o GetKeyReplicaDetailArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetKeyReplicaDetail] {
	return pulumix.Output[[]GetKeyReplicaDetail]{
		OutputState: o.OutputState,
	}
}

func (o GetKeyReplicaDetailArrayOutput) Index(i pulumi.IntInput) GetKeyReplicaDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKeyReplicaDetail {
		return vs[0].([]GetKeyReplicaDetail)[vs[1].(int)]
	}).(GetKeyReplicaDetailOutput)
}

type GetKeyRestoreFromFile struct {
	// content length of key's backup binary file
	ContentLength string `pulumi:"contentLength"`
	// content md5 hashed value of key's backup file
	ContentMd5 string `pulumi:"contentMd5"`
	// Key backup file content
	RestoreKeyFromFileDetails string `pulumi:"restoreKeyFromFileDetails"`
}

// GetKeyRestoreFromFileInput is an input type that accepts GetKeyRestoreFromFileArgs and GetKeyRestoreFromFileOutput values.
// You can construct a concrete instance of `GetKeyRestoreFromFileInput` via:
//
//	GetKeyRestoreFromFileArgs{...}
type GetKeyRestoreFromFileInput interface {
	pulumi.Input

	ToGetKeyRestoreFromFileOutput() GetKeyRestoreFromFileOutput
	ToGetKeyRestoreFromFileOutputWithContext(context.Context) GetKeyRestoreFromFileOutput
}

type GetKeyRestoreFromFileArgs struct {
	// content length of key's backup binary file
	ContentLength pulumi.StringInput `pulumi:"contentLength"`
	// content md5 hashed value of key's backup file
	ContentMd5 pulumi.StringInput `pulumi:"contentMd5"`
	// Key backup file content
	RestoreKeyFromFileDetails pulumi.StringInput `pulumi:"restoreKeyFromFileDetails"`
}

func (GetKeyRestoreFromFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyRestoreFromFile)(nil)).Elem()
}

func (i GetKeyRestoreFromFileArgs) ToGetKeyRestoreFromFileOutput() GetKeyRestoreFromFileOutput {
	return i.ToGetKeyRestoreFromFileOutputWithContext(context.Background())
}

func (i GetKeyRestoreFromFileArgs) ToGetKeyRestoreFromFileOutputWithContext(ctx context.Context) GetKeyRestoreFromFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeyRestoreFromFileOutput)
}

func (i GetKeyRestoreFromFileArgs) ToOutput(ctx context.Context) pulumix.Output[GetKeyRestoreFromFile] {
	return pulumix.Output[GetKeyRestoreFromFile]{
		OutputState: i.ToGetKeyRestoreFromFileOutputWithContext(ctx).OutputState,
	}
}

// GetKeyRestoreFromFileArrayInput is an input type that accepts GetKeyRestoreFromFileArray and GetKeyRestoreFromFileArrayOutput values.
// You can construct a concrete instance of `GetKeyRestoreFromFileArrayInput` via:
//
//	GetKeyRestoreFromFileArray{ GetKeyRestoreFromFileArgs{...} }
type GetKeyRestoreFromFileArrayInput interface {
	pulumi.Input

	ToGetKeyRestoreFromFileArrayOutput() GetKeyRestoreFromFileArrayOutput
	ToGetKeyRestoreFromFileArrayOutputWithContext(context.Context) GetKeyRestoreFromFileArrayOutput
}

type GetKeyRestoreFromFileArray []GetKeyRestoreFromFileInput

func (GetKeyRestoreFromFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeyRestoreFromFile)(nil)).Elem()
}

func (i GetKeyRestoreFromFileArray) ToGetKeyRestoreFromFileArrayOutput() GetKeyRestoreFromFileArrayOutput {
	return i.ToGetKeyRestoreFromFileArrayOutputWithContext(context.Background())
}

func (i GetKeyRestoreFromFileArray) ToGetKeyRestoreFromFileArrayOutputWithContext(ctx context.Context) GetKeyRestoreFromFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeyRestoreFromFileArrayOutput)
}

func (i GetKeyRestoreFromFileArray) ToOutput(ctx context.Context) pulumix.Output[[]GetKeyRestoreFromFile] {
	return pulumix.Output[[]GetKeyRestoreFromFile]{
		OutputState: i.ToGetKeyRestoreFromFileArrayOutputWithContext(ctx).OutputState,
	}
}

type GetKeyRestoreFromFileOutput struct{ *pulumi.OutputState }

func (GetKeyRestoreFromFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyRestoreFromFile)(nil)).Elem()
}

func (o GetKeyRestoreFromFileOutput) ToGetKeyRestoreFromFileOutput() GetKeyRestoreFromFileOutput {
	return o
}

func (o GetKeyRestoreFromFileOutput) ToGetKeyRestoreFromFileOutputWithContext(ctx context.Context) GetKeyRestoreFromFileOutput {
	return o
}

func (o GetKeyRestoreFromFileOutput) ToOutput(ctx context.Context) pulumix.Output[GetKeyRestoreFromFile] {
	return pulumix.Output[GetKeyRestoreFromFile]{
		OutputState: o.OutputState,
	}
}

// content length of key's backup binary file
func (o GetKeyRestoreFromFileOutput) ContentLength() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyRestoreFromFile) string { return v.ContentLength }).(pulumi.StringOutput)
}

// content md5 hashed value of key's backup file
func (o GetKeyRestoreFromFileOutput) ContentMd5() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyRestoreFromFile) string { return v.ContentMd5 }).(pulumi.StringOutput)
}

// Key backup file content
func (o GetKeyRestoreFromFileOutput) RestoreKeyFromFileDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyRestoreFromFile) string { return v.RestoreKeyFromFileDetails }).(pulumi.StringOutput)
}

type GetKeyRestoreFromFileArrayOutput struct{ *pulumi.OutputState }

func (GetKeyRestoreFromFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeyRestoreFromFile)(nil)).Elem()
}

func (o GetKeyRestoreFromFileArrayOutput) ToGetKeyRestoreFromFileArrayOutput() GetKeyRestoreFromFileArrayOutput {
	return o
}

func (o GetKeyRestoreFromFileArrayOutput) ToGetKeyRestoreFromFileArrayOutputWithContext(ctx context.Context) GetKeyRestoreFromFileArrayOutput {
	return o
}

func (o GetKeyRestoreFromFileArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetKeyRestoreFromFile] {
	return pulumix.Output[[]GetKeyRestoreFromFile]{
		OutputState: o.OutputState,
	}
}

func (o GetKeyRestoreFromFileArrayOutput) Index(i pulumi.IntInput) GetKeyRestoreFromFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKeyRestoreFromFile {
		return vs[0].([]GetKeyRestoreFromFile)[vs[1].(int)]
	}).(GetKeyRestoreFromFileOutput)
}

type GetKeyRestoreFromObjectStore struct {
	// Name of the bucket where key was backed up
	Bucket string `pulumi:"bucket"`
	// Type of backup to restore from. Values of "BUCKET", "PRE_AUTHENTICATED_REQUEST_URI" are supported
	Destination string `pulumi:"destination"`
	// Namespace of the bucket where key was backed up
	Namespace string `pulumi:"namespace"`
	// Object containing the backup
	Object string `pulumi:"object"`
	// Pre-authenticated-request-uri of the backup
	Uri string `pulumi:"uri"`
}

// GetKeyRestoreFromObjectStoreInput is an input type that accepts GetKeyRestoreFromObjectStoreArgs and GetKeyRestoreFromObjectStoreOutput values.
// You can construct a concrete instance of `GetKeyRestoreFromObjectStoreInput` via:
//
//	GetKeyRestoreFromObjectStoreArgs{...}
type GetKeyRestoreFromObjectStoreInput interface {
	pulumi.Input

	ToGetKeyRestoreFromObjectStoreOutput() GetKeyRestoreFromObjectStoreOutput
	ToGetKeyRestoreFromObjectStoreOutputWithContext(context.Context) GetKeyRestoreFromObjectStoreOutput
}

type GetKeyRestoreFromObjectStoreArgs struct {
	// Name of the bucket where key was backed up
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Type of backup to restore from. Values of "BUCKET", "PRE_AUTHENTICATED_REQUEST_URI" are supported
	Destination pulumi.StringInput `pulumi:"destination"`
	// Namespace of the bucket where key was backed up
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// Object containing the backup
	Object pulumi.StringInput `pulumi:"object"`
	// Pre-authenticated-request-uri of the backup
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (GetKeyRestoreFromObjectStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyRestoreFromObjectStore)(nil)).Elem()
}

func (i GetKeyRestoreFromObjectStoreArgs) ToGetKeyRestoreFromObjectStoreOutput() GetKeyRestoreFromObjectStoreOutput {
	return i.ToGetKeyRestoreFromObjectStoreOutputWithContext(context.Background())
}

func (i GetKeyRestoreFromObjectStoreArgs) ToGetKeyRestoreFromObjectStoreOutputWithContext(ctx context.Context) GetKeyRestoreFromObjectStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeyRestoreFromObjectStoreOutput)
}

func (i GetKeyRestoreFromObjectStoreArgs) ToOutput(ctx context.Context) pulumix.Output[GetKeyRestoreFromObjectStore] {
	return pulumix.Output[GetKeyRestoreFromObjectStore]{
		OutputState: i.ToGetKeyRestoreFromObjectStoreOutputWithContext(ctx).OutputState,
	}
}

// GetKeyRestoreFromObjectStoreArrayInput is an input type that accepts GetKeyRestoreFromObjectStoreArray and GetKeyRestoreFromObjectStoreArrayOutput values.
// You can construct a concrete instance of `GetKeyRestoreFromObjectStoreArrayInput` via:
//
//	GetKeyRestoreFromObjectStoreArray{ GetKeyRestoreFromObjectStoreArgs{...} }
type GetKeyRestoreFromObjectStoreArrayInput interface {
	pulumi.Input

	ToGetKeyRestoreFromObjectStoreArrayOutput() GetKeyRestoreFromObjectStoreArrayOutput
	ToGetKeyRestoreFromObjectStoreArrayOutputWithContext(context.Context) GetKeyRestoreFromObjectStoreArrayOutput
}

type GetKeyRestoreFromObjectStoreArray []GetKeyRestoreFromObjectStoreInput

func (GetKeyRestoreFromObjectStoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeyRestoreFromObjectStore)(nil)).Elem()
}

func (i GetKeyRestoreFromObjectStoreArray) ToGetKeyRestoreFromObjectStoreArrayOutput() GetKeyRestoreFromObjectStoreArrayOutput {
	return i.ToGetKeyRestoreFromObjectStoreArrayOutputWithContext(context.Background())
}

func (i GetKeyRestoreFromObjectStoreArray) ToGetKeyRestoreFromObjectStoreArrayOutputWithContext(ctx context.Context) GetKeyRestoreFromObjectStoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeyRestoreFromObjectStoreArrayOutput)
}

func (i GetKeyRestoreFromObjectStoreArray) ToOutput(ctx context.Context) pulumix.Output[[]GetKeyRestoreFromObjectStore] {
	return pulumix.Output[[]GetKeyRestoreFromObjectStore]{
		OutputState: i.ToGetKeyRestoreFromObjectStoreArrayOutputWithContext(ctx).OutputState,
	}
}

type GetKeyRestoreFromObjectStoreOutput struct{ *pulumi.OutputState }

func (GetKeyRestoreFromObjectStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyRestoreFromObjectStore)(nil)).Elem()
}

func (o GetKeyRestoreFromObjectStoreOutput) ToGetKeyRestoreFromObjectStoreOutput() GetKeyRestoreFromObjectStoreOutput {
	return o
}

func (o GetKeyRestoreFromObjectStoreOutput) ToGetKeyRestoreFromObjectStoreOutputWithContext(ctx context.Context) GetKeyRestoreFromObjectStoreOutput {
	return o
}

func (o GetKeyRestoreFromObjectStoreOutput) ToOutput(ctx context.Context) pulumix.Output[GetKeyRestoreFromObjectStore] {
	return pulumix.Output[GetKeyRestoreFromObjectStore]{
		OutputState: o.OutputState,
	}
}

// Name of the bucket where key was backed up
func (o GetKeyRestoreFromObjectStoreOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyRestoreFromObjectStore) string { return v.Bucket }).(pulumi.StringOutput)
}

// Type of backup to restore from. Values of "BUCKET", "PRE_AUTHENTICATED_REQUEST_URI" are supported
func (o GetKeyRestoreFromObjectStoreOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyRestoreFromObjectStore) string { return v.Destination }).(pulumi.StringOutput)
}

// Namespace of the bucket where key was backed up
func (o GetKeyRestoreFromObjectStoreOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyRestoreFromObjectStore) string { return v.Namespace }).(pulumi.StringOutput)
}

// Object containing the backup
func (o GetKeyRestoreFromObjectStoreOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyRestoreFromObjectStore) string { return v.Object }).(pulumi.StringOutput)
}

// Pre-authenticated-request-uri of the backup
func (o GetKeyRestoreFromObjectStoreOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyRestoreFromObjectStore) string { return v.Uri }).(pulumi.StringOutput)
}

type GetKeyRestoreFromObjectStoreArrayOutput struct{ *pulumi.OutputState }

func (GetKeyRestoreFromObjectStoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeyRestoreFromObjectStore)(nil)).Elem()
}

func (o GetKeyRestoreFromObjectStoreArrayOutput) ToGetKeyRestoreFromObjectStoreArrayOutput() GetKeyRestoreFromObjectStoreArrayOutput {
	return o
}

func (o GetKeyRestoreFromObjectStoreArrayOutput) ToGetKeyRestoreFromObjectStoreArrayOutputWithContext(ctx context.Context) GetKeyRestoreFromObjectStoreArrayOutput {
	return o
}

func (o GetKeyRestoreFromObjectStoreArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetKeyRestoreFromObjectStore] {
	return pulumix.Output[[]GetKeyRestoreFromObjectStore]{
		OutputState: o.OutputState,
	}
}

func (o GetKeyRestoreFromObjectStoreArrayOutput) Index(i pulumi.IntInput) GetKeyRestoreFromObjectStoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKeyRestoreFromObjectStore {
		return vs[0].([]GetKeyRestoreFromObjectStore)[vs[1].(int)]
	}).(GetKeyRestoreFromObjectStoreOutput)
}

type GetKeyVersionReplicaDetail struct {
	// ReplicationId associated with a key version operation
	ReplicationId string `pulumi:"replicationId"`
}

// GetKeyVersionReplicaDetailInput is an input type that accepts GetKeyVersionReplicaDetailArgs and GetKeyVersionReplicaDetailOutput values.
// You can construct a concrete instance of `GetKeyVersionReplicaDetailInput` via:
//
//	GetKeyVersionReplicaDetailArgs{...}
type GetKeyVersionReplicaDetailInput interface {
	pulumi.Input

	ToGetKeyVersionReplicaDetailOutput() GetKeyVersionReplicaDetailOutput
	ToGetKeyVersionReplicaDetailOutputWithContext(context.Context) GetKeyVersionReplicaDetailOutput
}

type GetKeyVersionReplicaDetailArgs struct {
	// ReplicationId associated with a key version operation
	ReplicationId pulumi.StringInput `pulumi:"replicationId"`
}

func (GetKeyVersionReplicaDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyVersionReplicaDetail)(nil)).Elem()
}

func (i GetKeyVersionReplicaDetailArgs) ToGetKeyVersionReplicaDetailOutput() GetKeyVersionReplicaDetailOutput {
	return i.ToGetKeyVersionReplicaDetailOutputWithContext(context.Background())
}

func (i GetKeyVersionReplicaDetailArgs) ToGetKeyVersionReplicaDetailOutputWithContext(ctx context.Context) GetKeyVersionReplicaDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeyVersionReplicaDetailOutput)
}

func (i GetKeyVersionReplicaDetailArgs) ToOutput(ctx context.Context) pulumix.Output[GetKeyVersionReplicaDetail] {
	return pulumix.Output[GetKeyVersionReplicaDetail]{
		OutputState: i.ToGetKeyVersionReplicaDetailOutputWithContext(ctx).OutputState,
	}
}

// GetKeyVersionReplicaDetailArrayInput is an input type that accepts GetKeyVersionReplicaDetailArray and GetKeyVersionReplicaDetailArrayOutput values.
// You can construct a concrete instance of `GetKeyVersionReplicaDetailArrayInput` via:
//
//	GetKeyVersionReplicaDetailArray{ GetKeyVersionReplicaDetailArgs{...} }
type GetKeyVersionReplicaDetailArrayInput interface {
	pulumi.Input

	ToGetKeyVersionReplicaDetailArrayOutput() GetKeyVersionReplicaDetailArrayOutput
	ToGetKeyVersionReplicaDetailArrayOutputWithContext(context.Context) GetKeyVersionReplicaDetailArrayOutput
}

type GetKeyVersionReplicaDetailArray []GetKeyVersionReplicaDetailInput

func (GetKeyVersionReplicaDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeyVersionReplicaDetail)(nil)).Elem()
}

func (i GetKeyVersionReplicaDetailArray) ToGetKeyVersionReplicaDetailArrayOutput() GetKeyVersionReplicaDetailArrayOutput {
	return i.ToGetKeyVersionReplicaDetailArrayOutputWithContext(context.Background())
}

func (i GetKeyVersionReplicaDetailArray) ToGetKeyVersionReplicaDetailArrayOutputWithContext(ctx context.Context) GetKeyVersionReplicaDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeyVersionReplicaDetailArrayOutput)
}

func (i GetKeyVersionReplicaDetailArray) ToOutput(ctx context.Context) pulumix.Output[[]GetKeyVersionReplicaDetail] {
	return pulumix.Output[[]GetKeyVersionReplicaDetail]{
		OutputState: i.ToGetKeyVersionReplicaDetailArrayOutputWithContext(ctx).OutputState,
	}
}

type GetKeyVersionReplicaDetailOutput struct{ *pulumi.OutputState }

func (GetKeyVersionReplicaDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyVersionReplicaDetail)(nil)).Elem()
}

func (o GetKeyVersionReplicaDetailOutput) ToGetKeyVersionReplicaDetailOutput() GetKeyVersionReplicaDetailOutput {
	return o
}

func (o GetKeyVersionReplicaDetailOutput) ToGetKeyVersionReplicaDetailOutputWithContext(ctx context.Context) GetKeyVersionReplicaDetailOutput {
	return o
}

func (o GetKeyVersionReplicaDetailOutput) ToOutput(ctx context.Context) pulumix.Output[GetKeyVersionReplicaDetail] {
	return pulumix.Output[GetKeyVersionReplicaDetail]{
		OutputState: o.OutputState,
	}
}

// ReplicationId associated with a key version operation
func (o GetKeyVersionReplicaDetailOutput) ReplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyVersionReplicaDetail) string { return v.ReplicationId }).(pulumi.StringOutput)
}

type GetKeyVersionReplicaDetailArrayOutput struct{ *pulumi.OutputState }

func (GetKeyVersionReplicaDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeyVersionReplicaDetail)(nil)).Elem()
}

func (o GetKeyVersionReplicaDetailArrayOutput) ToGetKeyVersionReplicaDetailArrayOutput() GetKeyVersionReplicaDetailArrayOutput {
	return o
}

func (o GetKeyVersionReplicaDetailArrayOutput) ToGetKeyVersionReplicaDetailArrayOutputWithContext(ctx context.Context) GetKeyVersionReplicaDetailArrayOutput {
	return o
}

func (o GetKeyVersionReplicaDetailArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetKeyVersionReplicaDetail] {
	return pulumix.Output[[]GetKeyVersionReplicaDetail]{
		OutputState: o.OutputState,
	}
}

func (o GetKeyVersionReplicaDetailArrayOutput) Index(i pulumi.IntInput) GetKeyVersionReplicaDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKeyVersionReplicaDetail {
		return vs[0].([]GetKeyVersionReplicaDetail)[vs[1].(int)]
	}).(GetKeyVersionReplicaDetailOutput)
}

type GetKeyVersionsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetKeyVersionsFilterInput is an input type that accepts GetKeyVersionsFilterArgs and GetKeyVersionsFilterOutput values.
// You can construct a concrete instance of `GetKeyVersionsFilterInput` via:
//
//	GetKeyVersionsFilterArgs{...}
type GetKeyVersionsFilterInput interface {
	pulumi.Input

	ToGetKeyVersionsFilterOutput() GetKeyVersionsFilterOutput
	ToGetKeyVersionsFilterOutputWithContext(context.Context) GetKeyVersionsFilterOutput
}

type GetKeyVersionsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetKeyVersionsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyVersionsFilter)(nil)).Elem()
}

func (i GetKeyVersionsFilterArgs) ToGetKeyVersionsFilterOutput() GetKeyVersionsFilterOutput {
	return i.ToGetKeyVersionsFilterOutputWithContext(context.Background())
}

func (i GetKeyVersionsFilterArgs) ToGetKeyVersionsFilterOutputWithContext(ctx context.Context) GetKeyVersionsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeyVersionsFilterOutput)
}

func (i GetKeyVersionsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetKeyVersionsFilter] {
	return pulumix.Output[GetKeyVersionsFilter]{
		OutputState: i.ToGetKeyVersionsFilterOutputWithContext(ctx).OutputState,
	}
}

// GetKeyVersionsFilterArrayInput is an input type that accepts GetKeyVersionsFilterArray and GetKeyVersionsFilterArrayOutput values.
// You can construct a concrete instance of `GetKeyVersionsFilterArrayInput` via:
//
//	GetKeyVersionsFilterArray{ GetKeyVersionsFilterArgs{...} }
type GetKeyVersionsFilterArrayInput interface {
	pulumi.Input

	ToGetKeyVersionsFilterArrayOutput() GetKeyVersionsFilterArrayOutput
	ToGetKeyVersionsFilterArrayOutputWithContext(context.Context) GetKeyVersionsFilterArrayOutput
}

type GetKeyVersionsFilterArray []GetKeyVersionsFilterInput

func (GetKeyVersionsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeyVersionsFilter)(nil)).Elem()
}

func (i GetKeyVersionsFilterArray) ToGetKeyVersionsFilterArrayOutput() GetKeyVersionsFilterArrayOutput {
	return i.ToGetKeyVersionsFilterArrayOutputWithContext(context.Background())
}

func (i GetKeyVersionsFilterArray) ToGetKeyVersionsFilterArrayOutputWithContext(ctx context.Context) GetKeyVersionsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeyVersionsFilterArrayOutput)
}

func (i GetKeyVersionsFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetKeyVersionsFilter] {
	return pulumix.Output[[]GetKeyVersionsFilter]{
		OutputState: i.ToGetKeyVersionsFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetKeyVersionsFilterOutput struct{ *pulumi.OutputState }

func (GetKeyVersionsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyVersionsFilter)(nil)).Elem()
}

func (o GetKeyVersionsFilterOutput) ToGetKeyVersionsFilterOutput() GetKeyVersionsFilterOutput {
	return o
}

func (o GetKeyVersionsFilterOutput) ToGetKeyVersionsFilterOutputWithContext(ctx context.Context) GetKeyVersionsFilterOutput {
	return o
}

func (o GetKeyVersionsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetKeyVersionsFilter] {
	return pulumix.Output[GetKeyVersionsFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetKeyVersionsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyVersionsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetKeyVersionsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetKeyVersionsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetKeyVersionsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKeyVersionsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetKeyVersionsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetKeyVersionsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeyVersionsFilter)(nil)).Elem()
}

func (o GetKeyVersionsFilterArrayOutput) ToGetKeyVersionsFilterArrayOutput() GetKeyVersionsFilterArrayOutput {
	return o
}

func (o GetKeyVersionsFilterArrayOutput) ToGetKeyVersionsFilterArrayOutputWithContext(ctx context.Context) GetKeyVersionsFilterArrayOutput {
	return o
}

func (o GetKeyVersionsFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetKeyVersionsFilter] {
	return pulumix.Output[[]GetKeyVersionsFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetKeyVersionsFilterArrayOutput) Index(i pulumi.IntInput) GetKeyVersionsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKeyVersionsFilter {
		return vs[0].([]GetKeyVersionsFilter)[vs[1].(int)]
	}).(GetKeyVersionsFilterOutput)
}

type GetKeyVersionsKeyVersion struct {
	// The OCID of the compartment that contains this key version.
	CompartmentId string `pulumi:"compartmentId"`
	// The OCID of the key version.
	Id string `pulumi:"id"`
	// A boolean that will be true when key version is primary, and will be false when key version is a replica from a primary key version.
	IsPrimary bool `pulumi:"isPrimary"`
	// The OCID of the key.
	KeyId string `pulumi:"keyId"`
	// The OCID of the key version.
	KeyVersionId string `pulumi:"keyVersionId"`
	// The service endpoint to perform management operations against. Management operations include 'Create,' 'Update,' 'List,' 'Get,' and 'Delete' operations. See Vault Management endpoint.
	ManagementEndpoint string `pulumi:"managementEndpoint"`
	// The public key in PEM format. (This value pertains only to RSA and ECDSA keys.)
	PublicKey string `pulumi:"publicKey"`
	// KeyVersion replica details
	ReplicaDetails    []GetKeyVersionsKeyVersionReplicaDetail `pulumi:"replicaDetails"`
	RestoredFromKeyId string                                  `pulumi:"restoredFromKeyId"`
	// The OCID of the key version from which this key version was restored.
	RestoredFromKeyVersionId string `pulumi:"restoredFromKeyVersionId"`
	// The key version's current lifecycle state.  Example: `ENABLED`
	State string `pulumi:"state"`
	// The date and time this key version was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: "2018-04-03T21:10:29.600Z"
	TimeCreated string `pulumi:"timeCreated"`
	// An optional property to indicate when to delete the key version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion string `pulumi:"timeOfDeletion"`
	// The OCID of the vault that contains this key version.
	VaultId string `pulumi:"vaultId"`
}

// GetKeyVersionsKeyVersionInput is an input type that accepts GetKeyVersionsKeyVersionArgs and GetKeyVersionsKeyVersionOutput values.
// You can construct a concrete instance of `GetKeyVersionsKeyVersionInput` via:
//
//	GetKeyVersionsKeyVersionArgs{...}
type GetKeyVersionsKeyVersionInput interface {
	pulumi.Input

	ToGetKeyVersionsKeyVersionOutput() GetKeyVersionsKeyVersionOutput
	ToGetKeyVersionsKeyVersionOutputWithContext(context.Context) GetKeyVersionsKeyVersionOutput
}

type GetKeyVersionsKeyVersionArgs struct {
	// The OCID of the compartment that contains this key version.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The OCID of the key version.
	Id pulumi.StringInput `pulumi:"id"`
	// A boolean that will be true when key version is primary, and will be false when key version is a replica from a primary key version.
	IsPrimary pulumi.BoolInput `pulumi:"isPrimary"`
	// The OCID of the key.
	KeyId pulumi.StringInput `pulumi:"keyId"`
	// The OCID of the key version.
	KeyVersionId pulumi.StringInput `pulumi:"keyVersionId"`
	// The service endpoint to perform management operations against. Management operations include 'Create,' 'Update,' 'List,' 'Get,' and 'Delete' operations. See Vault Management endpoint.
	ManagementEndpoint pulumi.StringInput `pulumi:"managementEndpoint"`
	// The public key in PEM format. (This value pertains only to RSA and ECDSA keys.)
	PublicKey pulumi.StringInput `pulumi:"publicKey"`
	// KeyVersion replica details
	ReplicaDetails    GetKeyVersionsKeyVersionReplicaDetailArrayInput `pulumi:"replicaDetails"`
	RestoredFromKeyId pulumi.StringInput                              `pulumi:"restoredFromKeyId"`
	// The OCID of the key version from which this key version was restored.
	RestoredFromKeyVersionId pulumi.StringInput `pulumi:"restoredFromKeyVersionId"`
	// The key version's current lifecycle state.  Example: `ENABLED`
	State pulumi.StringInput `pulumi:"state"`
	// The date and time this key version was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: "2018-04-03T21:10:29.600Z"
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// An optional property to indicate when to delete the key version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion pulumi.StringInput `pulumi:"timeOfDeletion"`
	// The OCID of the vault that contains this key version.
	VaultId pulumi.StringInput `pulumi:"vaultId"`
}

func (GetKeyVersionsKeyVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyVersionsKeyVersion)(nil)).Elem()
}

func (i GetKeyVersionsKeyVersionArgs) ToGetKeyVersionsKeyVersionOutput() GetKeyVersionsKeyVersionOutput {
	return i.ToGetKeyVersionsKeyVersionOutputWithContext(context.Background())
}

func (i GetKeyVersionsKeyVersionArgs) ToGetKeyVersionsKeyVersionOutputWithContext(ctx context.Context) GetKeyVersionsKeyVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeyVersionsKeyVersionOutput)
}

func (i GetKeyVersionsKeyVersionArgs) ToOutput(ctx context.Context) pulumix.Output[GetKeyVersionsKeyVersion] {
	return pulumix.Output[GetKeyVersionsKeyVersion]{
		OutputState: i.ToGetKeyVersionsKeyVersionOutputWithContext(ctx).OutputState,
	}
}

// GetKeyVersionsKeyVersionArrayInput is an input type that accepts GetKeyVersionsKeyVersionArray and GetKeyVersionsKeyVersionArrayOutput values.
// You can construct a concrete instance of `GetKeyVersionsKeyVersionArrayInput` via:
//
//	GetKeyVersionsKeyVersionArray{ GetKeyVersionsKeyVersionArgs{...} }
type GetKeyVersionsKeyVersionArrayInput interface {
	pulumi.Input

	ToGetKeyVersionsKeyVersionArrayOutput() GetKeyVersionsKeyVersionArrayOutput
	ToGetKeyVersionsKeyVersionArrayOutputWithContext(context.Context) GetKeyVersionsKeyVersionArrayOutput
}

type GetKeyVersionsKeyVersionArray []GetKeyVersionsKeyVersionInput

func (GetKeyVersionsKeyVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeyVersionsKeyVersion)(nil)).Elem()
}

func (i GetKeyVersionsKeyVersionArray) ToGetKeyVersionsKeyVersionArrayOutput() GetKeyVersionsKeyVersionArrayOutput {
	return i.ToGetKeyVersionsKeyVersionArrayOutputWithContext(context.Background())
}

func (i GetKeyVersionsKeyVersionArray) ToGetKeyVersionsKeyVersionArrayOutputWithContext(ctx context.Context) GetKeyVersionsKeyVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeyVersionsKeyVersionArrayOutput)
}

func (i GetKeyVersionsKeyVersionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetKeyVersionsKeyVersion] {
	return pulumix.Output[[]GetKeyVersionsKeyVersion]{
		OutputState: i.ToGetKeyVersionsKeyVersionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetKeyVersionsKeyVersionOutput struct{ *pulumi.OutputState }

func (GetKeyVersionsKeyVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyVersionsKeyVersion)(nil)).Elem()
}

func (o GetKeyVersionsKeyVersionOutput) ToGetKeyVersionsKeyVersionOutput() GetKeyVersionsKeyVersionOutput {
	return o
}

func (o GetKeyVersionsKeyVersionOutput) ToGetKeyVersionsKeyVersionOutputWithContext(ctx context.Context) GetKeyVersionsKeyVersionOutput {
	return o
}

func (o GetKeyVersionsKeyVersionOutput) ToOutput(ctx context.Context) pulumix.Output[GetKeyVersionsKeyVersion] {
	return pulumix.Output[GetKeyVersionsKeyVersion]{
		OutputState: o.OutputState,
	}
}

// The OCID of the compartment that contains this key version.
func (o GetKeyVersionsKeyVersionOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyVersionsKeyVersion) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The OCID of the key version.
func (o GetKeyVersionsKeyVersionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyVersionsKeyVersion) string { return v.Id }).(pulumi.StringOutput)
}

// A boolean that will be true when key version is primary, and will be false when key version is a replica from a primary key version.
func (o GetKeyVersionsKeyVersionOutput) IsPrimary() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKeyVersionsKeyVersion) bool { return v.IsPrimary }).(pulumi.BoolOutput)
}

// The OCID of the key.
func (o GetKeyVersionsKeyVersionOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyVersionsKeyVersion) string { return v.KeyId }).(pulumi.StringOutput)
}

// The OCID of the key version.
func (o GetKeyVersionsKeyVersionOutput) KeyVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyVersionsKeyVersion) string { return v.KeyVersionId }).(pulumi.StringOutput)
}

// The service endpoint to perform management operations against. Management operations include 'Create,' 'Update,' 'List,' 'Get,' and 'Delete' operations. See Vault Management endpoint.
func (o GetKeyVersionsKeyVersionOutput) ManagementEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyVersionsKeyVersion) string { return v.ManagementEndpoint }).(pulumi.StringOutput)
}

// The public key in PEM format. (This value pertains only to RSA and ECDSA keys.)
func (o GetKeyVersionsKeyVersionOutput) PublicKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyVersionsKeyVersion) string { return v.PublicKey }).(pulumi.StringOutput)
}

// KeyVersion replica details
func (o GetKeyVersionsKeyVersionOutput) ReplicaDetails() GetKeyVersionsKeyVersionReplicaDetailArrayOutput {
	return o.ApplyT(func(v GetKeyVersionsKeyVersion) []GetKeyVersionsKeyVersionReplicaDetail { return v.ReplicaDetails }).(GetKeyVersionsKeyVersionReplicaDetailArrayOutput)
}

func (o GetKeyVersionsKeyVersionOutput) RestoredFromKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyVersionsKeyVersion) string { return v.RestoredFromKeyId }).(pulumi.StringOutput)
}

// The OCID of the key version from which this key version was restored.
func (o GetKeyVersionsKeyVersionOutput) RestoredFromKeyVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyVersionsKeyVersion) string { return v.RestoredFromKeyVersionId }).(pulumi.StringOutput)
}

// The key version's current lifecycle state.  Example: `ENABLED`
func (o GetKeyVersionsKeyVersionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyVersionsKeyVersion) string { return v.State }).(pulumi.StringOutput)
}

// The date and time this key version was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: "2018-04-03T21:10:29.600Z"
func (o GetKeyVersionsKeyVersionOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyVersionsKeyVersion) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// An optional property to indicate when to delete the key version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetKeyVersionsKeyVersionOutput) TimeOfDeletion() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyVersionsKeyVersion) string { return v.TimeOfDeletion }).(pulumi.StringOutput)
}

// The OCID of the vault that contains this key version.
func (o GetKeyVersionsKeyVersionOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyVersionsKeyVersion) string { return v.VaultId }).(pulumi.StringOutput)
}

type GetKeyVersionsKeyVersionArrayOutput struct{ *pulumi.OutputState }

func (GetKeyVersionsKeyVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeyVersionsKeyVersion)(nil)).Elem()
}

func (o GetKeyVersionsKeyVersionArrayOutput) ToGetKeyVersionsKeyVersionArrayOutput() GetKeyVersionsKeyVersionArrayOutput {
	return o
}

func (o GetKeyVersionsKeyVersionArrayOutput) ToGetKeyVersionsKeyVersionArrayOutputWithContext(ctx context.Context) GetKeyVersionsKeyVersionArrayOutput {
	return o
}

func (o GetKeyVersionsKeyVersionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetKeyVersionsKeyVersion] {
	return pulumix.Output[[]GetKeyVersionsKeyVersion]{
		OutputState: o.OutputState,
	}
}

func (o GetKeyVersionsKeyVersionArrayOutput) Index(i pulumi.IntInput) GetKeyVersionsKeyVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKeyVersionsKeyVersion {
		return vs[0].([]GetKeyVersionsKeyVersion)[vs[1].(int)]
	}).(GetKeyVersionsKeyVersionOutput)
}

type GetKeyVersionsKeyVersionReplicaDetail struct {
	// ReplicationId associated with a key version operation
	ReplicationId string `pulumi:"replicationId"`
}

// GetKeyVersionsKeyVersionReplicaDetailInput is an input type that accepts GetKeyVersionsKeyVersionReplicaDetailArgs and GetKeyVersionsKeyVersionReplicaDetailOutput values.
// You can construct a concrete instance of `GetKeyVersionsKeyVersionReplicaDetailInput` via:
//
//	GetKeyVersionsKeyVersionReplicaDetailArgs{...}
type GetKeyVersionsKeyVersionReplicaDetailInput interface {
	pulumi.Input

	ToGetKeyVersionsKeyVersionReplicaDetailOutput() GetKeyVersionsKeyVersionReplicaDetailOutput
	ToGetKeyVersionsKeyVersionReplicaDetailOutputWithContext(context.Context) GetKeyVersionsKeyVersionReplicaDetailOutput
}

type GetKeyVersionsKeyVersionReplicaDetailArgs struct {
	// ReplicationId associated with a key version operation
	ReplicationId pulumi.StringInput `pulumi:"replicationId"`
}

func (GetKeyVersionsKeyVersionReplicaDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyVersionsKeyVersionReplicaDetail)(nil)).Elem()
}

func (i GetKeyVersionsKeyVersionReplicaDetailArgs) ToGetKeyVersionsKeyVersionReplicaDetailOutput() GetKeyVersionsKeyVersionReplicaDetailOutput {
	return i.ToGetKeyVersionsKeyVersionReplicaDetailOutputWithContext(context.Background())
}

func (i GetKeyVersionsKeyVersionReplicaDetailArgs) ToGetKeyVersionsKeyVersionReplicaDetailOutputWithContext(ctx context.Context) GetKeyVersionsKeyVersionReplicaDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeyVersionsKeyVersionReplicaDetailOutput)
}

func (i GetKeyVersionsKeyVersionReplicaDetailArgs) ToOutput(ctx context.Context) pulumix.Output[GetKeyVersionsKeyVersionReplicaDetail] {
	return pulumix.Output[GetKeyVersionsKeyVersionReplicaDetail]{
		OutputState: i.ToGetKeyVersionsKeyVersionReplicaDetailOutputWithContext(ctx).OutputState,
	}
}

// GetKeyVersionsKeyVersionReplicaDetailArrayInput is an input type that accepts GetKeyVersionsKeyVersionReplicaDetailArray and GetKeyVersionsKeyVersionReplicaDetailArrayOutput values.
// You can construct a concrete instance of `GetKeyVersionsKeyVersionReplicaDetailArrayInput` via:
//
//	GetKeyVersionsKeyVersionReplicaDetailArray{ GetKeyVersionsKeyVersionReplicaDetailArgs{...} }
type GetKeyVersionsKeyVersionReplicaDetailArrayInput interface {
	pulumi.Input

	ToGetKeyVersionsKeyVersionReplicaDetailArrayOutput() GetKeyVersionsKeyVersionReplicaDetailArrayOutput
	ToGetKeyVersionsKeyVersionReplicaDetailArrayOutputWithContext(context.Context) GetKeyVersionsKeyVersionReplicaDetailArrayOutput
}

type GetKeyVersionsKeyVersionReplicaDetailArray []GetKeyVersionsKeyVersionReplicaDetailInput

func (GetKeyVersionsKeyVersionReplicaDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeyVersionsKeyVersionReplicaDetail)(nil)).Elem()
}

func (i GetKeyVersionsKeyVersionReplicaDetailArray) ToGetKeyVersionsKeyVersionReplicaDetailArrayOutput() GetKeyVersionsKeyVersionReplicaDetailArrayOutput {
	return i.ToGetKeyVersionsKeyVersionReplicaDetailArrayOutputWithContext(context.Background())
}

func (i GetKeyVersionsKeyVersionReplicaDetailArray) ToGetKeyVersionsKeyVersionReplicaDetailArrayOutputWithContext(ctx context.Context) GetKeyVersionsKeyVersionReplicaDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeyVersionsKeyVersionReplicaDetailArrayOutput)
}

func (i GetKeyVersionsKeyVersionReplicaDetailArray) ToOutput(ctx context.Context) pulumix.Output[[]GetKeyVersionsKeyVersionReplicaDetail] {
	return pulumix.Output[[]GetKeyVersionsKeyVersionReplicaDetail]{
		OutputState: i.ToGetKeyVersionsKeyVersionReplicaDetailArrayOutputWithContext(ctx).OutputState,
	}
}

type GetKeyVersionsKeyVersionReplicaDetailOutput struct{ *pulumi.OutputState }

func (GetKeyVersionsKeyVersionReplicaDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyVersionsKeyVersionReplicaDetail)(nil)).Elem()
}

func (o GetKeyVersionsKeyVersionReplicaDetailOutput) ToGetKeyVersionsKeyVersionReplicaDetailOutput() GetKeyVersionsKeyVersionReplicaDetailOutput {
	return o
}

func (o GetKeyVersionsKeyVersionReplicaDetailOutput) ToGetKeyVersionsKeyVersionReplicaDetailOutputWithContext(ctx context.Context) GetKeyVersionsKeyVersionReplicaDetailOutput {
	return o
}

func (o GetKeyVersionsKeyVersionReplicaDetailOutput) ToOutput(ctx context.Context) pulumix.Output[GetKeyVersionsKeyVersionReplicaDetail] {
	return pulumix.Output[GetKeyVersionsKeyVersionReplicaDetail]{
		OutputState: o.OutputState,
	}
}

// ReplicationId associated with a key version operation
func (o GetKeyVersionsKeyVersionReplicaDetailOutput) ReplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyVersionsKeyVersionReplicaDetail) string { return v.ReplicationId }).(pulumi.StringOutput)
}

type GetKeyVersionsKeyVersionReplicaDetailArrayOutput struct{ *pulumi.OutputState }

func (GetKeyVersionsKeyVersionReplicaDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeyVersionsKeyVersionReplicaDetail)(nil)).Elem()
}

func (o GetKeyVersionsKeyVersionReplicaDetailArrayOutput) ToGetKeyVersionsKeyVersionReplicaDetailArrayOutput() GetKeyVersionsKeyVersionReplicaDetailArrayOutput {
	return o
}

func (o GetKeyVersionsKeyVersionReplicaDetailArrayOutput) ToGetKeyVersionsKeyVersionReplicaDetailArrayOutputWithContext(ctx context.Context) GetKeyVersionsKeyVersionReplicaDetailArrayOutput {
	return o
}

func (o GetKeyVersionsKeyVersionReplicaDetailArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetKeyVersionsKeyVersionReplicaDetail] {
	return pulumix.Output[[]GetKeyVersionsKeyVersionReplicaDetail]{
		OutputState: o.OutputState,
	}
}

func (o GetKeyVersionsKeyVersionReplicaDetailArrayOutput) Index(i pulumi.IntInput) GetKeyVersionsKeyVersionReplicaDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKeyVersionsKeyVersionReplicaDetail {
		return vs[0].([]GetKeyVersionsKeyVersionReplicaDetail)[vs[1].(int)]
	}).(GetKeyVersionsKeyVersionReplicaDetailOutput)
}

type GetKeysFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetKeysFilterInput is an input type that accepts GetKeysFilterArgs and GetKeysFilterOutput values.
// You can construct a concrete instance of `GetKeysFilterInput` via:
//
//	GetKeysFilterArgs{...}
type GetKeysFilterInput interface {
	pulumi.Input

	ToGetKeysFilterOutput() GetKeysFilterOutput
	ToGetKeysFilterOutputWithContext(context.Context) GetKeysFilterOutput
}

type GetKeysFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetKeysFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeysFilter)(nil)).Elem()
}

func (i GetKeysFilterArgs) ToGetKeysFilterOutput() GetKeysFilterOutput {
	return i.ToGetKeysFilterOutputWithContext(context.Background())
}

func (i GetKeysFilterArgs) ToGetKeysFilterOutputWithContext(ctx context.Context) GetKeysFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeysFilterOutput)
}

func (i GetKeysFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetKeysFilter] {
	return pulumix.Output[GetKeysFilter]{
		OutputState: i.ToGetKeysFilterOutputWithContext(ctx).OutputState,
	}
}

// GetKeysFilterArrayInput is an input type that accepts GetKeysFilterArray and GetKeysFilterArrayOutput values.
// You can construct a concrete instance of `GetKeysFilterArrayInput` via:
//
//	GetKeysFilterArray{ GetKeysFilterArgs{...} }
type GetKeysFilterArrayInput interface {
	pulumi.Input

	ToGetKeysFilterArrayOutput() GetKeysFilterArrayOutput
	ToGetKeysFilterArrayOutputWithContext(context.Context) GetKeysFilterArrayOutput
}

type GetKeysFilterArray []GetKeysFilterInput

func (GetKeysFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeysFilter)(nil)).Elem()
}

func (i GetKeysFilterArray) ToGetKeysFilterArrayOutput() GetKeysFilterArrayOutput {
	return i.ToGetKeysFilterArrayOutputWithContext(context.Background())
}

func (i GetKeysFilterArray) ToGetKeysFilterArrayOutputWithContext(ctx context.Context) GetKeysFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeysFilterArrayOutput)
}

func (i GetKeysFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetKeysFilter] {
	return pulumix.Output[[]GetKeysFilter]{
		OutputState: i.ToGetKeysFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetKeysFilterOutput struct{ *pulumi.OutputState }

func (GetKeysFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeysFilter)(nil)).Elem()
}

func (o GetKeysFilterOutput) ToGetKeysFilterOutput() GetKeysFilterOutput {
	return o
}

func (o GetKeysFilterOutput) ToGetKeysFilterOutputWithContext(ctx context.Context) GetKeysFilterOutput {
	return o
}

func (o GetKeysFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetKeysFilter] {
	return pulumix.Output[GetKeysFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetKeysFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetKeysFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetKeysFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetKeysFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKeysFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetKeysFilterArrayOutput struct{ *pulumi.OutputState }

func (GetKeysFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeysFilter)(nil)).Elem()
}

func (o GetKeysFilterArrayOutput) ToGetKeysFilterArrayOutput() GetKeysFilterArrayOutput {
	return o
}

func (o GetKeysFilterArrayOutput) ToGetKeysFilterArrayOutputWithContext(ctx context.Context) GetKeysFilterArrayOutput {
	return o
}

func (o GetKeysFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetKeysFilter] {
	return pulumix.Output[[]GetKeysFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetKeysFilterArrayOutput) Index(i pulumi.IntInput) GetKeysFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKeysFilter {
		return vs[0].([]GetKeysFilter)[vs[1].(int)]
	}).(GetKeysFilterOutput)
}

type GetKeysKey struct {
	// The OCID of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The OCID of the key version used in cryptographic operations. During key rotation, the service might be in a transitional state where this or a newer key version are used intermittently. The `currentKeyVersion` property is updated when the service is guaranteed to use the new key version for all subsequent encryption operations.
	CurrentKeyVersion string `pulumi:"currentKeyVersion"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags  map[string]interface{} `pulumi:"definedTags"`
	DesiredState string                 `pulumi:"desiredState"`
	// A user-friendly name for the key. It does not have to be unique, and it is changeable. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the key.
	Id string `pulumi:"id"`
	// A boolean that will be true when key is primary, and will be false when key is a replica from a primary key.
	IsPrimary bool `pulumi:"isPrimary"`
	// The cryptographic properties of a key.
	KeyShapes []GetKeysKeyKeyShape `pulumi:"keyShapes"`
	// The service endpoint to perform management operations against. Management operations include 'Create,' 'Update,' 'List,' 'Get,' and 'Delete' operations. See Vault Management endpoint.
	ManagementEndpoint string `pulumi:"managementEndpoint"`
	// A key's protection mode indicates how the key persists and where cryptographic operations that use the key are performed. A  protection mode of `HSM` means that the key persists on a hardware security module (HSM) and all cryptographic operations are  performed inside the HSM. A protection mode of `SOFTWARE` means that the key persists on the server, protected by the vault's  RSA wrapping key which persists on the HSM. All cryptographic operations that use a key with a protection mode of  `SOFTWARE` are performed on the server.
	ProtectionMode string `pulumi:"protectionMode"`
	// Key replica details
	ReplicaDetails          []GetKeysKeyReplicaDetail          `pulumi:"replicaDetails"`
	RestoreFromFiles        []GetKeysKeyRestoreFromFile        `pulumi:"restoreFromFiles"`
	RestoreFromObjectStores []GetKeysKeyRestoreFromObjectStore `pulumi:"restoreFromObjectStores"`
	RestoreTrigger          bool                               `pulumi:"restoreTrigger"`
	RestoredFromKeyId       string                             `pulumi:"restoredFromKeyId"`
	// The key's current lifecycle state.  Example: `ENABLED`
	State string `pulumi:"state"`
	// The date and time the key was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-04-03T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// An optional property indicating when to delete the key, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion string `pulumi:"timeOfDeletion"`
	// The OCID of the vault that contains this key.
	VaultId string `pulumi:"vaultId"`
}

// GetKeysKeyInput is an input type that accepts GetKeysKeyArgs and GetKeysKeyOutput values.
// You can construct a concrete instance of `GetKeysKeyInput` via:
//
//	GetKeysKeyArgs{...}
type GetKeysKeyInput interface {
	pulumi.Input

	ToGetKeysKeyOutput() GetKeysKeyOutput
	ToGetKeysKeyOutputWithContext(context.Context) GetKeysKeyOutput
}

type GetKeysKeyArgs struct {
	// The OCID of the compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The OCID of the key version used in cryptographic operations. During key rotation, the service might be in a transitional state where this or a newer key version are used intermittently. The `currentKeyVersion` property is updated when the service is guaranteed to use the new key version for all subsequent encryption operations.
	CurrentKeyVersion pulumi.StringInput `pulumi:"currentKeyVersion"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags  pulumi.MapInput    `pulumi:"definedTags"`
	DesiredState pulumi.StringInput `pulumi:"desiredState"`
	// A user-friendly name for the key. It does not have to be unique, and it is changeable. Avoid entering confidential information.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The OCID of the key.
	Id pulumi.StringInput `pulumi:"id"`
	// A boolean that will be true when key is primary, and will be false when key is a replica from a primary key.
	IsPrimary pulumi.BoolInput `pulumi:"isPrimary"`
	// The cryptographic properties of a key.
	KeyShapes GetKeysKeyKeyShapeArrayInput `pulumi:"keyShapes"`
	// The service endpoint to perform management operations against. Management operations include 'Create,' 'Update,' 'List,' 'Get,' and 'Delete' operations. See Vault Management endpoint.
	ManagementEndpoint pulumi.StringInput `pulumi:"managementEndpoint"`
	// A key's protection mode indicates how the key persists and where cryptographic operations that use the key are performed. A  protection mode of `HSM` means that the key persists on a hardware security module (HSM) and all cryptographic operations are  performed inside the HSM. A protection mode of `SOFTWARE` means that the key persists on the server, protected by the vault's  RSA wrapping key which persists on the HSM. All cryptographic operations that use a key with a protection mode of  `SOFTWARE` are performed on the server.
	ProtectionMode pulumi.StringInput `pulumi:"protectionMode"`
	// Key replica details
	ReplicaDetails          GetKeysKeyReplicaDetailArrayInput          `pulumi:"replicaDetails"`
	RestoreFromFiles        GetKeysKeyRestoreFromFileArrayInput        `pulumi:"restoreFromFiles"`
	RestoreFromObjectStores GetKeysKeyRestoreFromObjectStoreArrayInput `pulumi:"restoreFromObjectStores"`
	RestoreTrigger          pulumi.BoolInput                           `pulumi:"restoreTrigger"`
	RestoredFromKeyId       pulumi.StringInput                         `pulumi:"restoredFromKeyId"`
	// The key's current lifecycle state.  Example: `ENABLED`
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the key was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-04-03T21:10:29.600Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// An optional property indicating when to delete the key, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion pulumi.StringInput `pulumi:"timeOfDeletion"`
	// The OCID of the vault that contains this key.
	VaultId pulumi.StringInput `pulumi:"vaultId"`
}

func (GetKeysKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeysKey)(nil)).Elem()
}

func (i GetKeysKeyArgs) ToGetKeysKeyOutput() GetKeysKeyOutput {
	return i.ToGetKeysKeyOutputWithContext(context.Background())
}

func (i GetKeysKeyArgs) ToGetKeysKeyOutputWithContext(ctx context.Context) GetKeysKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeysKeyOutput)
}

func (i GetKeysKeyArgs) ToOutput(ctx context.Context) pulumix.Output[GetKeysKey] {
	return pulumix.Output[GetKeysKey]{
		OutputState: i.ToGetKeysKeyOutputWithContext(ctx).OutputState,
	}
}

// GetKeysKeyArrayInput is an input type that accepts GetKeysKeyArray and GetKeysKeyArrayOutput values.
// You can construct a concrete instance of `GetKeysKeyArrayInput` via:
//
//	GetKeysKeyArray{ GetKeysKeyArgs{...} }
type GetKeysKeyArrayInput interface {
	pulumi.Input

	ToGetKeysKeyArrayOutput() GetKeysKeyArrayOutput
	ToGetKeysKeyArrayOutputWithContext(context.Context) GetKeysKeyArrayOutput
}

type GetKeysKeyArray []GetKeysKeyInput

func (GetKeysKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeysKey)(nil)).Elem()
}

func (i GetKeysKeyArray) ToGetKeysKeyArrayOutput() GetKeysKeyArrayOutput {
	return i.ToGetKeysKeyArrayOutputWithContext(context.Background())
}

func (i GetKeysKeyArray) ToGetKeysKeyArrayOutputWithContext(ctx context.Context) GetKeysKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeysKeyArrayOutput)
}

func (i GetKeysKeyArray) ToOutput(ctx context.Context) pulumix.Output[[]GetKeysKey] {
	return pulumix.Output[[]GetKeysKey]{
		OutputState: i.ToGetKeysKeyArrayOutputWithContext(ctx).OutputState,
	}
}

type GetKeysKeyOutput struct{ *pulumi.OutputState }

func (GetKeysKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeysKey)(nil)).Elem()
}

func (o GetKeysKeyOutput) ToGetKeysKeyOutput() GetKeysKeyOutput {
	return o
}

func (o GetKeysKeyOutput) ToGetKeysKeyOutputWithContext(ctx context.Context) GetKeysKeyOutput {
	return o
}

func (o GetKeysKeyOutput) ToOutput(ctx context.Context) pulumix.Output[GetKeysKey] {
	return pulumix.Output[GetKeysKey]{
		OutputState: o.OutputState,
	}
}

// The OCID of the compartment.
func (o GetKeysKeyOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKey) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The OCID of the key version used in cryptographic operations. During key rotation, the service might be in a transitional state where this or a newer key version are used intermittently. The `currentKeyVersion` property is updated when the service is guaranteed to use the new key version for all subsequent encryption operations.
func (o GetKeysKeyOutput) CurrentKeyVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKey) string { return v.CurrentKeyVersion }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o GetKeysKeyOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetKeysKey) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

func (o GetKeysKeyOutput) DesiredState() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKey) string { return v.DesiredState }).(pulumi.StringOutput)
}

// A user-friendly name for the key. It does not have to be unique, and it is changeable. Avoid entering confidential information.
func (o GetKeysKeyOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKey) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o GetKeysKeyOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetKeysKey) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The OCID of the key.
func (o GetKeysKeyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKey) string { return v.Id }).(pulumi.StringOutput)
}

// A boolean that will be true when key is primary, and will be false when key is a replica from a primary key.
func (o GetKeysKeyOutput) IsPrimary() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKeysKey) bool { return v.IsPrimary }).(pulumi.BoolOutput)
}

// The cryptographic properties of a key.
func (o GetKeysKeyOutput) KeyShapes() GetKeysKeyKeyShapeArrayOutput {
	return o.ApplyT(func(v GetKeysKey) []GetKeysKeyKeyShape { return v.KeyShapes }).(GetKeysKeyKeyShapeArrayOutput)
}

// The service endpoint to perform management operations against. Management operations include 'Create,' 'Update,' 'List,' 'Get,' and 'Delete' operations. See Vault Management endpoint.
func (o GetKeysKeyOutput) ManagementEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKey) string { return v.ManagementEndpoint }).(pulumi.StringOutput)
}

// A key's protection mode indicates how the key persists and where cryptographic operations that use the key are performed. A  protection mode of `HSM` means that the key persists on a hardware security module (HSM) and all cryptographic operations are  performed inside the HSM. A protection mode of `SOFTWARE` means that the key persists on the server, protected by the vault's  RSA wrapping key which persists on the HSM. All cryptographic operations that use a key with a protection mode of  `SOFTWARE` are performed on the server.
func (o GetKeysKeyOutput) ProtectionMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKey) string { return v.ProtectionMode }).(pulumi.StringOutput)
}

// Key replica details
func (o GetKeysKeyOutput) ReplicaDetails() GetKeysKeyReplicaDetailArrayOutput {
	return o.ApplyT(func(v GetKeysKey) []GetKeysKeyReplicaDetail { return v.ReplicaDetails }).(GetKeysKeyReplicaDetailArrayOutput)
}

func (o GetKeysKeyOutput) RestoreFromFiles() GetKeysKeyRestoreFromFileArrayOutput {
	return o.ApplyT(func(v GetKeysKey) []GetKeysKeyRestoreFromFile { return v.RestoreFromFiles }).(GetKeysKeyRestoreFromFileArrayOutput)
}

func (o GetKeysKeyOutput) RestoreFromObjectStores() GetKeysKeyRestoreFromObjectStoreArrayOutput {
	return o.ApplyT(func(v GetKeysKey) []GetKeysKeyRestoreFromObjectStore { return v.RestoreFromObjectStores }).(GetKeysKeyRestoreFromObjectStoreArrayOutput)
}

func (o GetKeysKeyOutput) RestoreTrigger() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKeysKey) bool { return v.RestoreTrigger }).(pulumi.BoolOutput)
}

func (o GetKeysKeyOutput) RestoredFromKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKey) string { return v.RestoredFromKeyId }).(pulumi.StringOutput)
}

// The key's current lifecycle state.  Example: `ENABLED`
func (o GetKeysKeyOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKey) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the key was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-04-03T21:10:29.600Z`
func (o GetKeysKeyOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKey) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// An optional property indicating when to delete the key, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetKeysKeyOutput) TimeOfDeletion() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKey) string { return v.TimeOfDeletion }).(pulumi.StringOutput)
}

// The OCID of the vault that contains this key.
func (o GetKeysKeyOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKey) string { return v.VaultId }).(pulumi.StringOutput)
}

type GetKeysKeyArrayOutput struct{ *pulumi.OutputState }

func (GetKeysKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeysKey)(nil)).Elem()
}

func (o GetKeysKeyArrayOutput) ToGetKeysKeyArrayOutput() GetKeysKeyArrayOutput {
	return o
}

func (o GetKeysKeyArrayOutput) ToGetKeysKeyArrayOutputWithContext(ctx context.Context) GetKeysKeyArrayOutput {
	return o
}

func (o GetKeysKeyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetKeysKey] {
	return pulumix.Output[[]GetKeysKey]{
		OutputState: o.OutputState,
	}
}

func (o GetKeysKeyArrayOutput) Index(i pulumi.IntInput) GetKeysKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKeysKey {
		return vs[0].([]GetKeysKey)[vs[1].(int)]
	}).(GetKeysKeyOutput)
}

type GetKeysKeyKeyShape struct {
	// The algorithm used by a key's key versions to encrypt or decrypt data. Currently, support includes AES, RSA, and ECDSA algorithms.
	Algorithm string `pulumi:"algorithm"`
	// The curve ID of the keys. (This pertains only to ECDSA keys.)
	CurveId string `pulumi:"curveId"`
	// The length of the key in bytes, expressed as an integer. Supported values include 16, 24, or 32.
	Length int `pulumi:"length"`
}

// GetKeysKeyKeyShapeInput is an input type that accepts GetKeysKeyKeyShapeArgs and GetKeysKeyKeyShapeOutput values.
// You can construct a concrete instance of `GetKeysKeyKeyShapeInput` via:
//
//	GetKeysKeyKeyShapeArgs{...}
type GetKeysKeyKeyShapeInput interface {
	pulumi.Input

	ToGetKeysKeyKeyShapeOutput() GetKeysKeyKeyShapeOutput
	ToGetKeysKeyKeyShapeOutputWithContext(context.Context) GetKeysKeyKeyShapeOutput
}

type GetKeysKeyKeyShapeArgs struct {
	// The algorithm used by a key's key versions to encrypt or decrypt data. Currently, support includes AES, RSA, and ECDSA algorithms.
	Algorithm pulumi.StringInput `pulumi:"algorithm"`
	// The curve ID of the keys. (This pertains only to ECDSA keys.)
	CurveId pulumi.StringInput `pulumi:"curveId"`
	// The length of the key in bytes, expressed as an integer. Supported values include 16, 24, or 32.
	Length pulumi.IntInput `pulumi:"length"`
}

func (GetKeysKeyKeyShapeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeysKeyKeyShape)(nil)).Elem()
}

func (i GetKeysKeyKeyShapeArgs) ToGetKeysKeyKeyShapeOutput() GetKeysKeyKeyShapeOutput {
	return i.ToGetKeysKeyKeyShapeOutputWithContext(context.Background())
}

func (i GetKeysKeyKeyShapeArgs) ToGetKeysKeyKeyShapeOutputWithContext(ctx context.Context) GetKeysKeyKeyShapeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeysKeyKeyShapeOutput)
}

func (i GetKeysKeyKeyShapeArgs) ToOutput(ctx context.Context) pulumix.Output[GetKeysKeyKeyShape] {
	return pulumix.Output[GetKeysKeyKeyShape]{
		OutputState: i.ToGetKeysKeyKeyShapeOutputWithContext(ctx).OutputState,
	}
}

// GetKeysKeyKeyShapeArrayInput is an input type that accepts GetKeysKeyKeyShapeArray and GetKeysKeyKeyShapeArrayOutput values.
// You can construct a concrete instance of `GetKeysKeyKeyShapeArrayInput` via:
//
//	GetKeysKeyKeyShapeArray{ GetKeysKeyKeyShapeArgs{...} }
type GetKeysKeyKeyShapeArrayInput interface {
	pulumi.Input

	ToGetKeysKeyKeyShapeArrayOutput() GetKeysKeyKeyShapeArrayOutput
	ToGetKeysKeyKeyShapeArrayOutputWithContext(context.Context) GetKeysKeyKeyShapeArrayOutput
}

type GetKeysKeyKeyShapeArray []GetKeysKeyKeyShapeInput

func (GetKeysKeyKeyShapeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeysKeyKeyShape)(nil)).Elem()
}

func (i GetKeysKeyKeyShapeArray) ToGetKeysKeyKeyShapeArrayOutput() GetKeysKeyKeyShapeArrayOutput {
	return i.ToGetKeysKeyKeyShapeArrayOutputWithContext(context.Background())
}

func (i GetKeysKeyKeyShapeArray) ToGetKeysKeyKeyShapeArrayOutputWithContext(ctx context.Context) GetKeysKeyKeyShapeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeysKeyKeyShapeArrayOutput)
}

func (i GetKeysKeyKeyShapeArray) ToOutput(ctx context.Context) pulumix.Output[[]GetKeysKeyKeyShape] {
	return pulumix.Output[[]GetKeysKeyKeyShape]{
		OutputState: i.ToGetKeysKeyKeyShapeArrayOutputWithContext(ctx).OutputState,
	}
}

type GetKeysKeyKeyShapeOutput struct{ *pulumi.OutputState }

func (GetKeysKeyKeyShapeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeysKeyKeyShape)(nil)).Elem()
}

func (o GetKeysKeyKeyShapeOutput) ToGetKeysKeyKeyShapeOutput() GetKeysKeyKeyShapeOutput {
	return o
}

func (o GetKeysKeyKeyShapeOutput) ToGetKeysKeyKeyShapeOutputWithContext(ctx context.Context) GetKeysKeyKeyShapeOutput {
	return o
}

func (o GetKeysKeyKeyShapeOutput) ToOutput(ctx context.Context) pulumix.Output[GetKeysKeyKeyShape] {
	return pulumix.Output[GetKeysKeyKeyShape]{
		OutputState: o.OutputState,
	}
}

// The algorithm used by a key's key versions to encrypt or decrypt data. Currently, support includes AES, RSA, and ECDSA algorithms.
func (o GetKeysKeyKeyShapeOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKeyKeyShape) string { return v.Algorithm }).(pulumi.StringOutput)
}

// The curve ID of the keys. (This pertains only to ECDSA keys.)
func (o GetKeysKeyKeyShapeOutput) CurveId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKeyKeyShape) string { return v.CurveId }).(pulumi.StringOutput)
}

// The length of the key in bytes, expressed as an integer. Supported values include 16, 24, or 32.
func (o GetKeysKeyKeyShapeOutput) Length() pulumi.IntOutput {
	return o.ApplyT(func(v GetKeysKeyKeyShape) int { return v.Length }).(pulumi.IntOutput)
}

type GetKeysKeyKeyShapeArrayOutput struct{ *pulumi.OutputState }

func (GetKeysKeyKeyShapeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeysKeyKeyShape)(nil)).Elem()
}

func (o GetKeysKeyKeyShapeArrayOutput) ToGetKeysKeyKeyShapeArrayOutput() GetKeysKeyKeyShapeArrayOutput {
	return o
}

func (o GetKeysKeyKeyShapeArrayOutput) ToGetKeysKeyKeyShapeArrayOutputWithContext(ctx context.Context) GetKeysKeyKeyShapeArrayOutput {
	return o
}

func (o GetKeysKeyKeyShapeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetKeysKeyKeyShape] {
	return pulumix.Output[[]GetKeysKeyKeyShape]{
		OutputState: o.OutputState,
	}
}

func (o GetKeysKeyKeyShapeArrayOutput) Index(i pulumi.IntInput) GetKeysKeyKeyShapeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKeysKeyKeyShape {
		return vs[0].([]GetKeysKeyKeyShape)[vs[1].(int)]
	}).(GetKeysKeyKeyShapeOutput)
}

type GetKeysKeyReplicaDetail struct {
	// ReplicationId associated with a key operation
	ReplicationId string `pulumi:"replicationId"`
}

// GetKeysKeyReplicaDetailInput is an input type that accepts GetKeysKeyReplicaDetailArgs and GetKeysKeyReplicaDetailOutput values.
// You can construct a concrete instance of `GetKeysKeyReplicaDetailInput` via:
//
//	GetKeysKeyReplicaDetailArgs{...}
type GetKeysKeyReplicaDetailInput interface {
	pulumi.Input

	ToGetKeysKeyReplicaDetailOutput() GetKeysKeyReplicaDetailOutput
	ToGetKeysKeyReplicaDetailOutputWithContext(context.Context) GetKeysKeyReplicaDetailOutput
}

type GetKeysKeyReplicaDetailArgs struct {
	// ReplicationId associated with a key operation
	ReplicationId pulumi.StringInput `pulumi:"replicationId"`
}

func (GetKeysKeyReplicaDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeysKeyReplicaDetail)(nil)).Elem()
}

func (i GetKeysKeyReplicaDetailArgs) ToGetKeysKeyReplicaDetailOutput() GetKeysKeyReplicaDetailOutput {
	return i.ToGetKeysKeyReplicaDetailOutputWithContext(context.Background())
}

func (i GetKeysKeyReplicaDetailArgs) ToGetKeysKeyReplicaDetailOutputWithContext(ctx context.Context) GetKeysKeyReplicaDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeysKeyReplicaDetailOutput)
}

func (i GetKeysKeyReplicaDetailArgs) ToOutput(ctx context.Context) pulumix.Output[GetKeysKeyReplicaDetail] {
	return pulumix.Output[GetKeysKeyReplicaDetail]{
		OutputState: i.ToGetKeysKeyReplicaDetailOutputWithContext(ctx).OutputState,
	}
}

// GetKeysKeyReplicaDetailArrayInput is an input type that accepts GetKeysKeyReplicaDetailArray and GetKeysKeyReplicaDetailArrayOutput values.
// You can construct a concrete instance of `GetKeysKeyReplicaDetailArrayInput` via:
//
//	GetKeysKeyReplicaDetailArray{ GetKeysKeyReplicaDetailArgs{...} }
type GetKeysKeyReplicaDetailArrayInput interface {
	pulumi.Input

	ToGetKeysKeyReplicaDetailArrayOutput() GetKeysKeyReplicaDetailArrayOutput
	ToGetKeysKeyReplicaDetailArrayOutputWithContext(context.Context) GetKeysKeyReplicaDetailArrayOutput
}

type GetKeysKeyReplicaDetailArray []GetKeysKeyReplicaDetailInput

func (GetKeysKeyReplicaDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeysKeyReplicaDetail)(nil)).Elem()
}

func (i GetKeysKeyReplicaDetailArray) ToGetKeysKeyReplicaDetailArrayOutput() GetKeysKeyReplicaDetailArrayOutput {
	return i.ToGetKeysKeyReplicaDetailArrayOutputWithContext(context.Background())
}

func (i GetKeysKeyReplicaDetailArray) ToGetKeysKeyReplicaDetailArrayOutputWithContext(ctx context.Context) GetKeysKeyReplicaDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeysKeyReplicaDetailArrayOutput)
}

func (i GetKeysKeyReplicaDetailArray) ToOutput(ctx context.Context) pulumix.Output[[]GetKeysKeyReplicaDetail] {
	return pulumix.Output[[]GetKeysKeyReplicaDetail]{
		OutputState: i.ToGetKeysKeyReplicaDetailArrayOutputWithContext(ctx).OutputState,
	}
}

type GetKeysKeyReplicaDetailOutput struct{ *pulumi.OutputState }

func (GetKeysKeyReplicaDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeysKeyReplicaDetail)(nil)).Elem()
}

func (o GetKeysKeyReplicaDetailOutput) ToGetKeysKeyReplicaDetailOutput() GetKeysKeyReplicaDetailOutput {
	return o
}

func (o GetKeysKeyReplicaDetailOutput) ToGetKeysKeyReplicaDetailOutputWithContext(ctx context.Context) GetKeysKeyReplicaDetailOutput {
	return o
}

func (o GetKeysKeyReplicaDetailOutput) ToOutput(ctx context.Context) pulumix.Output[GetKeysKeyReplicaDetail] {
	return pulumix.Output[GetKeysKeyReplicaDetail]{
		OutputState: o.OutputState,
	}
}

// ReplicationId associated with a key operation
func (o GetKeysKeyReplicaDetailOutput) ReplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKeyReplicaDetail) string { return v.ReplicationId }).(pulumi.StringOutput)
}

type GetKeysKeyReplicaDetailArrayOutput struct{ *pulumi.OutputState }

func (GetKeysKeyReplicaDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeysKeyReplicaDetail)(nil)).Elem()
}

func (o GetKeysKeyReplicaDetailArrayOutput) ToGetKeysKeyReplicaDetailArrayOutput() GetKeysKeyReplicaDetailArrayOutput {
	return o
}

func (o GetKeysKeyReplicaDetailArrayOutput) ToGetKeysKeyReplicaDetailArrayOutputWithContext(ctx context.Context) GetKeysKeyReplicaDetailArrayOutput {
	return o
}

func (o GetKeysKeyReplicaDetailArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetKeysKeyReplicaDetail] {
	return pulumix.Output[[]GetKeysKeyReplicaDetail]{
		OutputState: o.OutputState,
	}
}

func (o GetKeysKeyReplicaDetailArrayOutput) Index(i pulumi.IntInput) GetKeysKeyReplicaDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKeysKeyReplicaDetail {
		return vs[0].([]GetKeysKeyReplicaDetail)[vs[1].(int)]
	}).(GetKeysKeyReplicaDetailOutput)
}

type GetKeysKeyRestoreFromFile struct {
	ContentLength             string `pulumi:"contentLength"`
	ContentMd5                string `pulumi:"contentMd5"`
	RestoreKeyFromFileDetails string `pulumi:"restoreKeyFromFileDetails"`
}

// GetKeysKeyRestoreFromFileInput is an input type that accepts GetKeysKeyRestoreFromFileArgs and GetKeysKeyRestoreFromFileOutput values.
// You can construct a concrete instance of `GetKeysKeyRestoreFromFileInput` via:
//
//	GetKeysKeyRestoreFromFileArgs{...}
type GetKeysKeyRestoreFromFileInput interface {
	pulumi.Input

	ToGetKeysKeyRestoreFromFileOutput() GetKeysKeyRestoreFromFileOutput
	ToGetKeysKeyRestoreFromFileOutputWithContext(context.Context) GetKeysKeyRestoreFromFileOutput
}

type GetKeysKeyRestoreFromFileArgs struct {
	ContentLength             pulumi.StringInput `pulumi:"contentLength"`
	ContentMd5                pulumi.StringInput `pulumi:"contentMd5"`
	RestoreKeyFromFileDetails pulumi.StringInput `pulumi:"restoreKeyFromFileDetails"`
}

func (GetKeysKeyRestoreFromFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeysKeyRestoreFromFile)(nil)).Elem()
}

func (i GetKeysKeyRestoreFromFileArgs) ToGetKeysKeyRestoreFromFileOutput() GetKeysKeyRestoreFromFileOutput {
	return i.ToGetKeysKeyRestoreFromFileOutputWithContext(context.Background())
}

func (i GetKeysKeyRestoreFromFileArgs) ToGetKeysKeyRestoreFromFileOutputWithContext(ctx context.Context) GetKeysKeyRestoreFromFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeysKeyRestoreFromFileOutput)
}

func (i GetKeysKeyRestoreFromFileArgs) ToOutput(ctx context.Context) pulumix.Output[GetKeysKeyRestoreFromFile] {
	return pulumix.Output[GetKeysKeyRestoreFromFile]{
		OutputState: i.ToGetKeysKeyRestoreFromFileOutputWithContext(ctx).OutputState,
	}
}

// GetKeysKeyRestoreFromFileArrayInput is an input type that accepts GetKeysKeyRestoreFromFileArray and GetKeysKeyRestoreFromFileArrayOutput values.
// You can construct a concrete instance of `GetKeysKeyRestoreFromFileArrayInput` via:
//
//	GetKeysKeyRestoreFromFileArray{ GetKeysKeyRestoreFromFileArgs{...} }
type GetKeysKeyRestoreFromFileArrayInput interface {
	pulumi.Input

	ToGetKeysKeyRestoreFromFileArrayOutput() GetKeysKeyRestoreFromFileArrayOutput
	ToGetKeysKeyRestoreFromFileArrayOutputWithContext(context.Context) GetKeysKeyRestoreFromFileArrayOutput
}

type GetKeysKeyRestoreFromFileArray []GetKeysKeyRestoreFromFileInput

func (GetKeysKeyRestoreFromFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeysKeyRestoreFromFile)(nil)).Elem()
}

func (i GetKeysKeyRestoreFromFileArray) ToGetKeysKeyRestoreFromFileArrayOutput() GetKeysKeyRestoreFromFileArrayOutput {
	return i.ToGetKeysKeyRestoreFromFileArrayOutputWithContext(context.Background())
}

func (i GetKeysKeyRestoreFromFileArray) ToGetKeysKeyRestoreFromFileArrayOutputWithContext(ctx context.Context) GetKeysKeyRestoreFromFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeysKeyRestoreFromFileArrayOutput)
}

func (i GetKeysKeyRestoreFromFileArray) ToOutput(ctx context.Context) pulumix.Output[[]GetKeysKeyRestoreFromFile] {
	return pulumix.Output[[]GetKeysKeyRestoreFromFile]{
		OutputState: i.ToGetKeysKeyRestoreFromFileArrayOutputWithContext(ctx).OutputState,
	}
}

type GetKeysKeyRestoreFromFileOutput struct{ *pulumi.OutputState }

func (GetKeysKeyRestoreFromFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeysKeyRestoreFromFile)(nil)).Elem()
}

func (o GetKeysKeyRestoreFromFileOutput) ToGetKeysKeyRestoreFromFileOutput() GetKeysKeyRestoreFromFileOutput {
	return o
}

func (o GetKeysKeyRestoreFromFileOutput) ToGetKeysKeyRestoreFromFileOutputWithContext(ctx context.Context) GetKeysKeyRestoreFromFileOutput {
	return o
}

func (o GetKeysKeyRestoreFromFileOutput) ToOutput(ctx context.Context) pulumix.Output[GetKeysKeyRestoreFromFile] {
	return pulumix.Output[GetKeysKeyRestoreFromFile]{
		OutputState: o.OutputState,
	}
}

func (o GetKeysKeyRestoreFromFileOutput) ContentLength() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKeyRestoreFromFile) string { return v.ContentLength }).(pulumi.StringOutput)
}

func (o GetKeysKeyRestoreFromFileOutput) ContentMd5() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKeyRestoreFromFile) string { return v.ContentMd5 }).(pulumi.StringOutput)
}

func (o GetKeysKeyRestoreFromFileOutput) RestoreKeyFromFileDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKeyRestoreFromFile) string { return v.RestoreKeyFromFileDetails }).(pulumi.StringOutput)
}

type GetKeysKeyRestoreFromFileArrayOutput struct{ *pulumi.OutputState }

func (GetKeysKeyRestoreFromFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeysKeyRestoreFromFile)(nil)).Elem()
}

func (o GetKeysKeyRestoreFromFileArrayOutput) ToGetKeysKeyRestoreFromFileArrayOutput() GetKeysKeyRestoreFromFileArrayOutput {
	return o
}

func (o GetKeysKeyRestoreFromFileArrayOutput) ToGetKeysKeyRestoreFromFileArrayOutputWithContext(ctx context.Context) GetKeysKeyRestoreFromFileArrayOutput {
	return o
}

func (o GetKeysKeyRestoreFromFileArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetKeysKeyRestoreFromFile] {
	return pulumix.Output[[]GetKeysKeyRestoreFromFile]{
		OutputState: o.OutputState,
	}
}

func (o GetKeysKeyRestoreFromFileArrayOutput) Index(i pulumi.IntInput) GetKeysKeyRestoreFromFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKeysKeyRestoreFromFile {
		return vs[0].([]GetKeysKeyRestoreFromFile)[vs[1].(int)]
	}).(GetKeysKeyRestoreFromFileOutput)
}

type GetKeysKeyRestoreFromObjectStore struct {
	Bucket      string `pulumi:"bucket"`
	Destination string `pulumi:"destination"`
	Namespace   string `pulumi:"namespace"`
	Object      string `pulumi:"object"`
	Uri         string `pulumi:"uri"`
}

// GetKeysKeyRestoreFromObjectStoreInput is an input type that accepts GetKeysKeyRestoreFromObjectStoreArgs and GetKeysKeyRestoreFromObjectStoreOutput values.
// You can construct a concrete instance of `GetKeysKeyRestoreFromObjectStoreInput` via:
//
//	GetKeysKeyRestoreFromObjectStoreArgs{...}
type GetKeysKeyRestoreFromObjectStoreInput interface {
	pulumi.Input

	ToGetKeysKeyRestoreFromObjectStoreOutput() GetKeysKeyRestoreFromObjectStoreOutput
	ToGetKeysKeyRestoreFromObjectStoreOutputWithContext(context.Context) GetKeysKeyRestoreFromObjectStoreOutput
}

type GetKeysKeyRestoreFromObjectStoreArgs struct {
	Bucket      pulumi.StringInput `pulumi:"bucket"`
	Destination pulumi.StringInput `pulumi:"destination"`
	Namespace   pulumi.StringInput `pulumi:"namespace"`
	Object      pulumi.StringInput `pulumi:"object"`
	Uri         pulumi.StringInput `pulumi:"uri"`
}

func (GetKeysKeyRestoreFromObjectStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeysKeyRestoreFromObjectStore)(nil)).Elem()
}

func (i GetKeysKeyRestoreFromObjectStoreArgs) ToGetKeysKeyRestoreFromObjectStoreOutput() GetKeysKeyRestoreFromObjectStoreOutput {
	return i.ToGetKeysKeyRestoreFromObjectStoreOutputWithContext(context.Background())
}

func (i GetKeysKeyRestoreFromObjectStoreArgs) ToGetKeysKeyRestoreFromObjectStoreOutputWithContext(ctx context.Context) GetKeysKeyRestoreFromObjectStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeysKeyRestoreFromObjectStoreOutput)
}

func (i GetKeysKeyRestoreFromObjectStoreArgs) ToOutput(ctx context.Context) pulumix.Output[GetKeysKeyRestoreFromObjectStore] {
	return pulumix.Output[GetKeysKeyRestoreFromObjectStore]{
		OutputState: i.ToGetKeysKeyRestoreFromObjectStoreOutputWithContext(ctx).OutputState,
	}
}

// GetKeysKeyRestoreFromObjectStoreArrayInput is an input type that accepts GetKeysKeyRestoreFromObjectStoreArray and GetKeysKeyRestoreFromObjectStoreArrayOutput values.
// You can construct a concrete instance of `GetKeysKeyRestoreFromObjectStoreArrayInput` via:
//
//	GetKeysKeyRestoreFromObjectStoreArray{ GetKeysKeyRestoreFromObjectStoreArgs{...} }
type GetKeysKeyRestoreFromObjectStoreArrayInput interface {
	pulumi.Input

	ToGetKeysKeyRestoreFromObjectStoreArrayOutput() GetKeysKeyRestoreFromObjectStoreArrayOutput
	ToGetKeysKeyRestoreFromObjectStoreArrayOutputWithContext(context.Context) GetKeysKeyRestoreFromObjectStoreArrayOutput
}

type GetKeysKeyRestoreFromObjectStoreArray []GetKeysKeyRestoreFromObjectStoreInput

func (GetKeysKeyRestoreFromObjectStoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeysKeyRestoreFromObjectStore)(nil)).Elem()
}

func (i GetKeysKeyRestoreFromObjectStoreArray) ToGetKeysKeyRestoreFromObjectStoreArrayOutput() GetKeysKeyRestoreFromObjectStoreArrayOutput {
	return i.ToGetKeysKeyRestoreFromObjectStoreArrayOutputWithContext(context.Background())
}

func (i GetKeysKeyRestoreFromObjectStoreArray) ToGetKeysKeyRestoreFromObjectStoreArrayOutputWithContext(ctx context.Context) GetKeysKeyRestoreFromObjectStoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeysKeyRestoreFromObjectStoreArrayOutput)
}

func (i GetKeysKeyRestoreFromObjectStoreArray) ToOutput(ctx context.Context) pulumix.Output[[]GetKeysKeyRestoreFromObjectStore] {
	return pulumix.Output[[]GetKeysKeyRestoreFromObjectStore]{
		OutputState: i.ToGetKeysKeyRestoreFromObjectStoreArrayOutputWithContext(ctx).OutputState,
	}
}

type GetKeysKeyRestoreFromObjectStoreOutput struct{ *pulumi.OutputState }

func (GetKeysKeyRestoreFromObjectStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeysKeyRestoreFromObjectStore)(nil)).Elem()
}

func (o GetKeysKeyRestoreFromObjectStoreOutput) ToGetKeysKeyRestoreFromObjectStoreOutput() GetKeysKeyRestoreFromObjectStoreOutput {
	return o
}

func (o GetKeysKeyRestoreFromObjectStoreOutput) ToGetKeysKeyRestoreFromObjectStoreOutputWithContext(ctx context.Context) GetKeysKeyRestoreFromObjectStoreOutput {
	return o
}

func (o GetKeysKeyRestoreFromObjectStoreOutput) ToOutput(ctx context.Context) pulumix.Output[GetKeysKeyRestoreFromObjectStore] {
	return pulumix.Output[GetKeysKeyRestoreFromObjectStore]{
		OutputState: o.OutputState,
	}
}

func (o GetKeysKeyRestoreFromObjectStoreOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKeyRestoreFromObjectStore) string { return v.Bucket }).(pulumi.StringOutput)
}

func (o GetKeysKeyRestoreFromObjectStoreOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKeyRestoreFromObjectStore) string { return v.Destination }).(pulumi.StringOutput)
}

func (o GetKeysKeyRestoreFromObjectStoreOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKeyRestoreFromObjectStore) string { return v.Namespace }).(pulumi.StringOutput)
}

func (o GetKeysKeyRestoreFromObjectStoreOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKeyRestoreFromObjectStore) string { return v.Object }).(pulumi.StringOutput)
}

func (o GetKeysKeyRestoreFromObjectStoreOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKeyRestoreFromObjectStore) string { return v.Uri }).(pulumi.StringOutput)
}

type GetKeysKeyRestoreFromObjectStoreArrayOutput struct{ *pulumi.OutputState }

func (GetKeysKeyRestoreFromObjectStoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeysKeyRestoreFromObjectStore)(nil)).Elem()
}

func (o GetKeysKeyRestoreFromObjectStoreArrayOutput) ToGetKeysKeyRestoreFromObjectStoreArrayOutput() GetKeysKeyRestoreFromObjectStoreArrayOutput {
	return o
}

func (o GetKeysKeyRestoreFromObjectStoreArrayOutput) ToGetKeysKeyRestoreFromObjectStoreArrayOutputWithContext(ctx context.Context) GetKeysKeyRestoreFromObjectStoreArrayOutput {
	return o
}

func (o GetKeysKeyRestoreFromObjectStoreArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetKeysKeyRestoreFromObjectStore] {
	return pulumix.Output[[]GetKeysKeyRestoreFromObjectStore]{
		OutputState: o.OutputState,
	}
}

func (o GetKeysKeyRestoreFromObjectStoreArrayOutput) Index(i pulumi.IntInput) GetKeysKeyRestoreFromObjectStoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKeysKeyRestoreFromObjectStore {
		return vs[0].([]GetKeysKeyRestoreFromObjectStore)[vs[1].(int)]
	}).(GetKeysKeyRestoreFromObjectStoreOutput)
}

type GetReplicationStatusReplicaDetail struct {
	// The replica region
	Region string `pulumi:"region"`
	// Replication status associated with a replicationId
	Status string `pulumi:"status"`
}

// GetReplicationStatusReplicaDetailInput is an input type that accepts GetReplicationStatusReplicaDetailArgs and GetReplicationStatusReplicaDetailOutput values.
// You can construct a concrete instance of `GetReplicationStatusReplicaDetailInput` via:
//
//	GetReplicationStatusReplicaDetailArgs{...}
type GetReplicationStatusReplicaDetailInput interface {
	pulumi.Input

	ToGetReplicationStatusReplicaDetailOutput() GetReplicationStatusReplicaDetailOutput
	ToGetReplicationStatusReplicaDetailOutputWithContext(context.Context) GetReplicationStatusReplicaDetailOutput
}

type GetReplicationStatusReplicaDetailArgs struct {
	// The replica region
	Region pulumi.StringInput `pulumi:"region"`
	// Replication status associated with a replicationId
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetReplicationStatusReplicaDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicationStatusReplicaDetail)(nil)).Elem()
}

func (i GetReplicationStatusReplicaDetailArgs) ToGetReplicationStatusReplicaDetailOutput() GetReplicationStatusReplicaDetailOutput {
	return i.ToGetReplicationStatusReplicaDetailOutputWithContext(context.Background())
}

func (i GetReplicationStatusReplicaDetailArgs) ToGetReplicationStatusReplicaDetailOutputWithContext(ctx context.Context) GetReplicationStatusReplicaDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplicationStatusReplicaDetailOutput)
}

func (i GetReplicationStatusReplicaDetailArgs) ToOutput(ctx context.Context) pulumix.Output[GetReplicationStatusReplicaDetail] {
	return pulumix.Output[GetReplicationStatusReplicaDetail]{
		OutputState: i.ToGetReplicationStatusReplicaDetailOutputWithContext(ctx).OutputState,
	}
}

// GetReplicationStatusReplicaDetailArrayInput is an input type that accepts GetReplicationStatusReplicaDetailArray and GetReplicationStatusReplicaDetailArrayOutput values.
// You can construct a concrete instance of `GetReplicationStatusReplicaDetailArrayInput` via:
//
//	GetReplicationStatusReplicaDetailArray{ GetReplicationStatusReplicaDetailArgs{...} }
type GetReplicationStatusReplicaDetailArrayInput interface {
	pulumi.Input

	ToGetReplicationStatusReplicaDetailArrayOutput() GetReplicationStatusReplicaDetailArrayOutput
	ToGetReplicationStatusReplicaDetailArrayOutputWithContext(context.Context) GetReplicationStatusReplicaDetailArrayOutput
}

type GetReplicationStatusReplicaDetailArray []GetReplicationStatusReplicaDetailInput

func (GetReplicationStatusReplicaDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplicationStatusReplicaDetail)(nil)).Elem()
}

func (i GetReplicationStatusReplicaDetailArray) ToGetReplicationStatusReplicaDetailArrayOutput() GetReplicationStatusReplicaDetailArrayOutput {
	return i.ToGetReplicationStatusReplicaDetailArrayOutputWithContext(context.Background())
}

func (i GetReplicationStatusReplicaDetailArray) ToGetReplicationStatusReplicaDetailArrayOutputWithContext(ctx context.Context) GetReplicationStatusReplicaDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplicationStatusReplicaDetailArrayOutput)
}

func (i GetReplicationStatusReplicaDetailArray) ToOutput(ctx context.Context) pulumix.Output[[]GetReplicationStatusReplicaDetail] {
	return pulumix.Output[[]GetReplicationStatusReplicaDetail]{
		OutputState: i.ToGetReplicationStatusReplicaDetailArrayOutputWithContext(ctx).OutputState,
	}
}

type GetReplicationStatusReplicaDetailOutput struct{ *pulumi.OutputState }

func (GetReplicationStatusReplicaDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicationStatusReplicaDetail)(nil)).Elem()
}

func (o GetReplicationStatusReplicaDetailOutput) ToGetReplicationStatusReplicaDetailOutput() GetReplicationStatusReplicaDetailOutput {
	return o
}

func (o GetReplicationStatusReplicaDetailOutput) ToGetReplicationStatusReplicaDetailOutputWithContext(ctx context.Context) GetReplicationStatusReplicaDetailOutput {
	return o
}

func (o GetReplicationStatusReplicaDetailOutput) ToOutput(ctx context.Context) pulumix.Output[GetReplicationStatusReplicaDetail] {
	return pulumix.Output[GetReplicationStatusReplicaDetail]{
		OutputState: o.OutputState,
	}
}

// The replica region
func (o GetReplicationStatusReplicaDetailOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationStatusReplicaDetail) string { return v.Region }).(pulumi.StringOutput)
}

// Replication status associated with a replicationId
func (o GetReplicationStatusReplicaDetailOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationStatusReplicaDetail) string { return v.Status }).(pulumi.StringOutput)
}

type GetReplicationStatusReplicaDetailArrayOutput struct{ *pulumi.OutputState }

func (GetReplicationStatusReplicaDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplicationStatusReplicaDetail)(nil)).Elem()
}

func (o GetReplicationStatusReplicaDetailArrayOutput) ToGetReplicationStatusReplicaDetailArrayOutput() GetReplicationStatusReplicaDetailArrayOutput {
	return o
}

func (o GetReplicationStatusReplicaDetailArrayOutput) ToGetReplicationStatusReplicaDetailArrayOutputWithContext(ctx context.Context) GetReplicationStatusReplicaDetailArrayOutput {
	return o
}

func (o GetReplicationStatusReplicaDetailArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetReplicationStatusReplicaDetail] {
	return pulumix.Output[[]GetReplicationStatusReplicaDetail]{
		OutputState: o.OutputState,
	}
}

func (o GetReplicationStatusReplicaDetailArrayOutput) Index(i pulumi.IntInput) GetReplicationStatusReplicaDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReplicationStatusReplicaDetail {
		return vs[0].([]GetReplicationStatusReplicaDetail)[vs[1].(int)]
	}).(GetReplicationStatusReplicaDetailOutput)
}

type GetVaultReplicaDetail struct {
	// ReplicationId associated with a vault operation
	ReplicationId string `pulumi:"replicationId"`
}

// GetVaultReplicaDetailInput is an input type that accepts GetVaultReplicaDetailArgs and GetVaultReplicaDetailOutput values.
// You can construct a concrete instance of `GetVaultReplicaDetailInput` via:
//
//	GetVaultReplicaDetailArgs{...}
type GetVaultReplicaDetailInput interface {
	pulumi.Input

	ToGetVaultReplicaDetailOutput() GetVaultReplicaDetailOutput
	ToGetVaultReplicaDetailOutputWithContext(context.Context) GetVaultReplicaDetailOutput
}

type GetVaultReplicaDetailArgs struct {
	// ReplicationId associated with a vault operation
	ReplicationId pulumi.StringInput `pulumi:"replicationId"`
}

func (GetVaultReplicaDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVaultReplicaDetail)(nil)).Elem()
}

func (i GetVaultReplicaDetailArgs) ToGetVaultReplicaDetailOutput() GetVaultReplicaDetailOutput {
	return i.ToGetVaultReplicaDetailOutputWithContext(context.Background())
}

func (i GetVaultReplicaDetailArgs) ToGetVaultReplicaDetailOutputWithContext(ctx context.Context) GetVaultReplicaDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVaultReplicaDetailOutput)
}

func (i GetVaultReplicaDetailArgs) ToOutput(ctx context.Context) pulumix.Output[GetVaultReplicaDetail] {
	return pulumix.Output[GetVaultReplicaDetail]{
		OutputState: i.ToGetVaultReplicaDetailOutputWithContext(ctx).OutputState,
	}
}

// GetVaultReplicaDetailArrayInput is an input type that accepts GetVaultReplicaDetailArray and GetVaultReplicaDetailArrayOutput values.
// You can construct a concrete instance of `GetVaultReplicaDetailArrayInput` via:
//
//	GetVaultReplicaDetailArray{ GetVaultReplicaDetailArgs{...} }
type GetVaultReplicaDetailArrayInput interface {
	pulumi.Input

	ToGetVaultReplicaDetailArrayOutput() GetVaultReplicaDetailArrayOutput
	ToGetVaultReplicaDetailArrayOutputWithContext(context.Context) GetVaultReplicaDetailArrayOutput
}

type GetVaultReplicaDetailArray []GetVaultReplicaDetailInput

func (GetVaultReplicaDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVaultReplicaDetail)(nil)).Elem()
}

func (i GetVaultReplicaDetailArray) ToGetVaultReplicaDetailArrayOutput() GetVaultReplicaDetailArrayOutput {
	return i.ToGetVaultReplicaDetailArrayOutputWithContext(context.Background())
}

func (i GetVaultReplicaDetailArray) ToGetVaultReplicaDetailArrayOutputWithContext(ctx context.Context) GetVaultReplicaDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVaultReplicaDetailArrayOutput)
}

func (i GetVaultReplicaDetailArray) ToOutput(ctx context.Context) pulumix.Output[[]GetVaultReplicaDetail] {
	return pulumix.Output[[]GetVaultReplicaDetail]{
		OutputState: i.ToGetVaultReplicaDetailArrayOutputWithContext(ctx).OutputState,
	}
}

type GetVaultReplicaDetailOutput struct{ *pulumi.OutputState }

func (GetVaultReplicaDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVaultReplicaDetail)(nil)).Elem()
}

func (o GetVaultReplicaDetailOutput) ToGetVaultReplicaDetailOutput() GetVaultReplicaDetailOutput {
	return o
}

func (o GetVaultReplicaDetailOutput) ToGetVaultReplicaDetailOutputWithContext(ctx context.Context) GetVaultReplicaDetailOutput {
	return o
}

func (o GetVaultReplicaDetailOutput) ToOutput(ctx context.Context) pulumix.Output[GetVaultReplicaDetail] {
	return pulumix.Output[GetVaultReplicaDetail]{
		OutputState: o.OutputState,
	}
}

// ReplicationId associated with a vault operation
func (o GetVaultReplicaDetailOutput) ReplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVaultReplicaDetail) string { return v.ReplicationId }).(pulumi.StringOutput)
}

type GetVaultReplicaDetailArrayOutput struct{ *pulumi.OutputState }

func (GetVaultReplicaDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVaultReplicaDetail)(nil)).Elem()
}

func (o GetVaultReplicaDetailArrayOutput) ToGetVaultReplicaDetailArrayOutput() GetVaultReplicaDetailArrayOutput {
	return o
}

func (o GetVaultReplicaDetailArrayOutput) ToGetVaultReplicaDetailArrayOutputWithContext(ctx context.Context) GetVaultReplicaDetailArrayOutput {
	return o
}

func (o GetVaultReplicaDetailArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetVaultReplicaDetail] {
	return pulumix.Output[[]GetVaultReplicaDetail]{
		OutputState: o.OutputState,
	}
}

func (o GetVaultReplicaDetailArrayOutput) Index(i pulumi.IntInput) GetVaultReplicaDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVaultReplicaDetail {
		return vs[0].([]GetVaultReplicaDetail)[vs[1].(int)]
	}).(GetVaultReplicaDetailOutput)
}

type GetVaultReplicasFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetVaultReplicasFilterInput is an input type that accepts GetVaultReplicasFilterArgs and GetVaultReplicasFilterOutput values.
// You can construct a concrete instance of `GetVaultReplicasFilterInput` via:
//
//	GetVaultReplicasFilterArgs{...}
type GetVaultReplicasFilterInput interface {
	pulumi.Input

	ToGetVaultReplicasFilterOutput() GetVaultReplicasFilterOutput
	ToGetVaultReplicasFilterOutputWithContext(context.Context) GetVaultReplicasFilterOutput
}

type GetVaultReplicasFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVaultReplicasFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVaultReplicasFilter)(nil)).Elem()
}

func (i GetVaultReplicasFilterArgs) ToGetVaultReplicasFilterOutput() GetVaultReplicasFilterOutput {
	return i.ToGetVaultReplicasFilterOutputWithContext(context.Background())
}

func (i GetVaultReplicasFilterArgs) ToGetVaultReplicasFilterOutputWithContext(ctx context.Context) GetVaultReplicasFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVaultReplicasFilterOutput)
}

func (i GetVaultReplicasFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetVaultReplicasFilter] {
	return pulumix.Output[GetVaultReplicasFilter]{
		OutputState: i.ToGetVaultReplicasFilterOutputWithContext(ctx).OutputState,
	}
}

// GetVaultReplicasFilterArrayInput is an input type that accepts GetVaultReplicasFilterArray and GetVaultReplicasFilterArrayOutput values.
// You can construct a concrete instance of `GetVaultReplicasFilterArrayInput` via:
//
//	GetVaultReplicasFilterArray{ GetVaultReplicasFilterArgs{...} }
type GetVaultReplicasFilterArrayInput interface {
	pulumi.Input

	ToGetVaultReplicasFilterArrayOutput() GetVaultReplicasFilterArrayOutput
	ToGetVaultReplicasFilterArrayOutputWithContext(context.Context) GetVaultReplicasFilterArrayOutput
}

type GetVaultReplicasFilterArray []GetVaultReplicasFilterInput

func (GetVaultReplicasFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVaultReplicasFilter)(nil)).Elem()
}

func (i GetVaultReplicasFilterArray) ToGetVaultReplicasFilterArrayOutput() GetVaultReplicasFilterArrayOutput {
	return i.ToGetVaultReplicasFilterArrayOutputWithContext(context.Background())
}

func (i GetVaultReplicasFilterArray) ToGetVaultReplicasFilterArrayOutputWithContext(ctx context.Context) GetVaultReplicasFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVaultReplicasFilterArrayOutput)
}

func (i GetVaultReplicasFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetVaultReplicasFilter] {
	return pulumix.Output[[]GetVaultReplicasFilter]{
		OutputState: i.ToGetVaultReplicasFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetVaultReplicasFilterOutput struct{ *pulumi.OutputState }

func (GetVaultReplicasFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVaultReplicasFilter)(nil)).Elem()
}

func (o GetVaultReplicasFilterOutput) ToGetVaultReplicasFilterOutput() GetVaultReplicasFilterOutput {
	return o
}

func (o GetVaultReplicasFilterOutput) ToGetVaultReplicasFilterOutputWithContext(ctx context.Context) GetVaultReplicasFilterOutput {
	return o
}

func (o GetVaultReplicasFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetVaultReplicasFilter] {
	return pulumix.Output[GetVaultReplicasFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetVaultReplicasFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVaultReplicasFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetVaultReplicasFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetVaultReplicasFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetVaultReplicasFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVaultReplicasFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVaultReplicasFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVaultReplicasFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVaultReplicasFilter)(nil)).Elem()
}

func (o GetVaultReplicasFilterArrayOutput) ToGetVaultReplicasFilterArrayOutput() GetVaultReplicasFilterArrayOutput {
	return o
}

func (o GetVaultReplicasFilterArrayOutput) ToGetVaultReplicasFilterArrayOutputWithContext(ctx context.Context) GetVaultReplicasFilterArrayOutput {
	return o
}

func (o GetVaultReplicasFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetVaultReplicasFilter] {
	return pulumix.Output[[]GetVaultReplicasFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetVaultReplicasFilterArrayOutput) Index(i pulumi.IntInput) GetVaultReplicasFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVaultReplicasFilter {
		return vs[0].([]GetVaultReplicasFilter)[vs[1].(int)]
	}).(GetVaultReplicasFilterOutput)
}

type GetVaultReplicasVaultReplica struct {
	// The vault replica's crypto endpoint
	CryptoEndpoint string `pulumi:"cryptoEndpoint"`
	// The vault replica's management endpoint
	ManagementEndpoint string `pulumi:"managementEndpoint"`
	// Region to which vault is replicated to
	Region string `pulumi:"region"`
	// The vault replica's status
	Status string `pulumi:"status"`
}

// GetVaultReplicasVaultReplicaInput is an input type that accepts GetVaultReplicasVaultReplicaArgs and GetVaultReplicasVaultReplicaOutput values.
// You can construct a concrete instance of `GetVaultReplicasVaultReplicaInput` via:
//
//	GetVaultReplicasVaultReplicaArgs{...}
type GetVaultReplicasVaultReplicaInput interface {
	pulumi.Input

	ToGetVaultReplicasVaultReplicaOutput() GetVaultReplicasVaultReplicaOutput
	ToGetVaultReplicasVaultReplicaOutputWithContext(context.Context) GetVaultReplicasVaultReplicaOutput
}

type GetVaultReplicasVaultReplicaArgs struct {
	// The vault replica's crypto endpoint
	CryptoEndpoint pulumi.StringInput `pulumi:"cryptoEndpoint"`
	// The vault replica's management endpoint
	ManagementEndpoint pulumi.StringInput `pulumi:"managementEndpoint"`
	// Region to which vault is replicated to
	Region pulumi.StringInput `pulumi:"region"`
	// The vault replica's status
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetVaultReplicasVaultReplicaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVaultReplicasVaultReplica)(nil)).Elem()
}

func (i GetVaultReplicasVaultReplicaArgs) ToGetVaultReplicasVaultReplicaOutput() GetVaultReplicasVaultReplicaOutput {
	return i.ToGetVaultReplicasVaultReplicaOutputWithContext(context.Background())
}

func (i GetVaultReplicasVaultReplicaArgs) ToGetVaultReplicasVaultReplicaOutputWithContext(ctx context.Context) GetVaultReplicasVaultReplicaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVaultReplicasVaultReplicaOutput)
}

func (i GetVaultReplicasVaultReplicaArgs) ToOutput(ctx context.Context) pulumix.Output[GetVaultReplicasVaultReplica] {
	return pulumix.Output[GetVaultReplicasVaultReplica]{
		OutputState: i.ToGetVaultReplicasVaultReplicaOutputWithContext(ctx).OutputState,
	}
}

// GetVaultReplicasVaultReplicaArrayInput is an input type that accepts GetVaultReplicasVaultReplicaArray and GetVaultReplicasVaultReplicaArrayOutput values.
// You can construct a concrete instance of `GetVaultReplicasVaultReplicaArrayInput` via:
//
//	GetVaultReplicasVaultReplicaArray{ GetVaultReplicasVaultReplicaArgs{...} }
type GetVaultReplicasVaultReplicaArrayInput interface {
	pulumi.Input

	ToGetVaultReplicasVaultReplicaArrayOutput() GetVaultReplicasVaultReplicaArrayOutput
	ToGetVaultReplicasVaultReplicaArrayOutputWithContext(context.Context) GetVaultReplicasVaultReplicaArrayOutput
}

type GetVaultReplicasVaultReplicaArray []GetVaultReplicasVaultReplicaInput

func (GetVaultReplicasVaultReplicaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVaultReplicasVaultReplica)(nil)).Elem()
}

func (i GetVaultReplicasVaultReplicaArray) ToGetVaultReplicasVaultReplicaArrayOutput() GetVaultReplicasVaultReplicaArrayOutput {
	return i.ToGetVaultReplicasVaultReplicaArrayOutputWithContext(context.Background())
}

func (i GetVaultReplicasVaultReplicaArray) ToGetVaultReplicasVaultReplicaArrayOutputWithContext(ctx context.Context) GetVaultReplicasVaultReplicaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVaultReplicasVaultReplicaArrayOutput)
}

func (i GetVaultReplicasVaultReplicaArray) ToOutput(ctx context.Context) pulumix.Output[[]GetVaultReplicasVaultReplica] {
	return pulumix.Output[[]GetVaultReplicasVaultReplica]{
		OutputState: i.ToGetVaultReplicasVaultReplicaArrayOutputWithContext(ctx).OutputState,
	}
}

type GetVaultReplicasVaultReplicaOutput struct{ *pulumi.OutputState }

func (GetVaultReplicasVaultReplicaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVaultReplicasVaultReplica)(nil)).Elem()
}

func (o GetVaultReplicasVaultReplicaOutput) ToGetVaultReplicasVaultReplicaOutput() GetVaultReplicasVaultReplicaOutput {
	return o
}

func (o GetVaultReplicasVaultReplicaOutput) ToGetVaultReplicasVaultReplicaOutputWithContext(ctx context.Context) GetVaultReplicasVaultReplicaOutput {
	return o
}

func (o GetVaultReplicasVaultReplicaOutput) ToOutput(ctx context.Context) pulumix.Output[GetVaultReplicasVaultReplica] {
	return pulumix.Output[GetVaultReplicasVaultReplica]{
		OutputState: o.OutputState,
	}
}

// The vault replica's crypto endpoint
func (o GetVaultReplicasVaultReplicaOutput) CryptoEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetVaultReplicasVaultReplica) string { return v.CryptoEndpoint }).(pulumi.StringOutput)
}

// The vault replica's management endpoint
func (o GetVaultReplicasVaultReplicaOutput) ManagementEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetVaultReplicasVaultReplica) string { return v.ManagementEndpoint }).(pulumi.StringOutput)
}

// Region to which vault is replicated to
func (o GetVaultReplicasVaultReplicaOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetVaultReplicasVaultReplica) string { return v.Region }).(pulumi.StringOutput)
}

// The vault replica's status
func (o GetVaultReplicasVaultReplicaOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetVaultReplicasVaultReplica) string { return v.Status }).(pulumi.StringOutput)
}

type GetVaultReplicasVaultReplicaArrayOutput struct{ *pulumi.OutputState }

func (GetVaultReplicasVaultReplicaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVaultReplicasVaultReplica)(nil)).Elem()
}

func (o GetVaultReplicasVaultReplicaArrayOutput) ToGetVaultReplicasVaultReplicaArrayOutput() GetVaultReplicasVaultReplicaArrayOutput {
	return o
}

func (o GetVaultReplicasVaultReplicaArrayOutput) ToGetVaultReplicasVaultReplicaArrayOutputWithContext(ctx context.Context) GetVaultReplicasVaultReplicaArrayOutput {
	return o
}

func (o GetVaultReplicasVaultReplicaArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetVaultReplicasVaultReplica] {
	return pulumix.Output[[]GetVaultReplicasVaultReplica]{
		OutputState: o.OutputState,
	}
}

func (o GetVaultReplicasVaultReplicaArrayOutput) Index(i pulumi.IntInput) GetVaultReplicasVaultReplicaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVaultReplicasVaultReplica {
		return vs[0].([]GetVaultReplicasVaultReplica)[vs[1].(int)]
	}).(GetVaultReplicasVaultReplicaOutput)
}

type GetVaultRestoreFromFile struct {
	// content length of vault's backup binary file
	ContentLength string `pulumi:"contentLength"`
	// content md5 hashed value of vault's backup file
	ContentMd5 string `pulumi:"contentMd5"`
	// Vault backup file content
	RestoreVaultFromFileDetails string `pulumi:"restoreVaultFromFileDetails"`
}

// GetVaultRestoreFromFileInput is an input type that accepts GetVaultRestoreFromFileArgs and GetVaultRestoreFromFileOutput values.
// You can construct a concrete instance of `GetVaultRestoreFromFileInput` via:
//
//	GetVaultRestoreFromFileArgs{...}
type GetVaultRestoreFromFileInput interface {
	pulumi.Input

	ToGetVaultRestoreFromFileOutput() GetVaultRestoreFromFileOutput
	ToGetVaultRestoreFromFileOutputWithContext(context.Context) GetVaultRestoreFromFileOutput
}

type GetVaultRestoreFromFileArgs struct {
	// content length of vault's backup binary file
	ContentLength pulumi.StringInput `pulumi:"contentLength"`
	// content md5 hashed value of vault's backup file
	ContentMd5 pulumi.StringInput `pulumi:"contentMd5"`
	// Vault backup file content
	RestoreVaultFromFileDetails pulumi.StringInput `pulumi:"restoreVaultFromFileDetails"`
}

func (GetVaultRestoreFromFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVaultRestoreFromFile)(nil)).Elem()
}

func (i GetVaultRestoreFromFileArgs) ToGetVaultRestoreFromFileOutput() GetVaultRestoreFromFileOutput {
	return i.ToGetVaultRestoreFromFileOutputWithContext(context.Background())
}

func (i GetVaultRestoreFromFileArgs) ToGetVaultRestoreFromFileOutputWithContext(ctx context.Context) GetVaultRestoreFromFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVaultRestoreFromFileOutput)
}

func (i GetVaultRestoreFromFileArgs) ToOutput(ctx context.Context) pulumix.Output[GetVaultRestoreFromFile] {
	return pulumix.Output[GetVaultRestoreFromFile]{
		OutputState: i.ToGetVaultRestoreFromFileOutputWithContext(ctx).OutputState,
	}
}

// GetVaultRestoreFromFileArrayInput is an input type that accepts GetVaultRestoreFromFileArray and GetVaultRestoreFromFileArrayOutput values.
// You can construct a concrete instance of `GetVaultRestoreFromFileArrayInput` via:
//
//	GetVaultRestoreFromFileArray{ GetVaultRestoreFromFileArgs{...} }
type GetVaultRestoreFromFileArrayInput interface {
	pulumi.Input

	ToGetVaultRestoreFromFileArrayOutput() GetVaultRestoreFromFileArrayOutput
	ToGetVaultRestoreFromFileArrayOutputWithContext(context.Context) GetVaultRestoreFromFileArrayOutput
}

type GetVaultRestoreFromFileArray []GetVaultRestoreFromFileInput

func (GetVaultRestoreFromFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVaultRestoreFromFile)(nil)).Elem()
}

func (i GetVaultRestoreFromFileArray) ToGetVaultRestoreFromFileArrayOutput() GetVaultRestoreFromFileArrayOutput {
	return i.ToGetVaultRestoreFromFileArrayOutputWithContext(context.Background())
}

func (i GetVaultRestoreFromFileArray) ToGetVaultRestoreFromFileArrayOutputWithContext(ctx context.Context) GetVaultRestoreFromFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVaultRestoreFromFileArrayOutput)
}

func (i GetVaultRestoreFromFileArray) ToOutput(ctx context.Context) pulumix.Output[[]GetVaultRestoreFromFile] {
	return pulumix.Output[[]GetVaultRestoreFromFile]{
		OutputState: i.ToGetVaultRestoreFromFileArrayOutputWithContext(ctx).OutputState,
	}
}

type GetVaultRestoreFromFileOutput struct{ *pulumi.OutputState }

func (GetVaultRestoreFromFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVaultRestoreFromFile)(nil)).Elem()
}

func (o GetVaultRestoreFromFileOutput) ToGetVaultRestoreFromFileOutput() GetVaultRestoreFromFileOutput {
	return o
}

func (o GetVaultRestoreFromFileOutput) ToGetVaultRestoreFromFileOutputWithContext(ctx context.Context) GetVaultRestoreFromFileOutput {
	return o
}

func (o GetVaultRestoreFromFileOutput) ToOutput(ctx context.Context) pulumix.Output[GetVaultRestoreFromFile] {
	return pulumix.Output[GetVaultRestoreFromFile]{
		OutputState: o.OutputState,
	}
}

// content length of vault's backup binary file
func (o GetVaultRestoreFromFileOutput) ContentLength() pulumi.StringOutput {
	return o.ApplyT(func(v GetVaultRestoreFromFile) string { return v.ContentLength }).(pulumi.StringOutput)
}

// content md5 hashed value of vault's backup file
func (o GetVaultRestoreFromFileOutput) ContentMd5() pulumi.StringOutput {
	return o.ApplyT(func(v GetVaultRestoreFromFile) string { return v.ContentMd5 }).(pulumi.StringOutput)
}

// Vault backup file content
func (o GetVaultRestoreFromFileOutput) RestoreVaultFromFileDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetVaultRestoreFromFile) string { return v.RestoreVaultFromFileDetails }).(pulumi.StringOutput)
}

type GetVaultRestoreFromFileArrayOutput struct{ *pulumi.OutputState }

func (GetVaultRestoreFromFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVaultRestoreFromFile)(nil)).Elem()
}

func (o GetVaultRestoreFromFileArrayOutput) ToGetVaultRestoreFromFileArrayOutput() GetVaultRestoreFromFileArrayOutput {
	return o
}

func (o GetVaultRestoreFromFileArrayOutput) ToGetVaultRestoreFromFileArrayOutputWithContext(ctx context.Context) GetVaultRestoreFromFileArrayOutput {
	return o
}

func (o GetVaultRestoreFromFileArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetVaultRestoreFromFile] {
	return pulumix.Output[[]GetVaultRestoreFromFile]{
		OutputState: o.OutputState,
	}
}

func (o GetVaultRestoreFromFileArrayOutput) Index(i pulumi.IntInput) GetVaultRestoreFromFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVaultRestoreFromFile {
		return vs[0].([]GetVaultRestoreFromFile)[vs[1].(int)]
	}).(GetVaultRestoreFromFileOutput)
}

type GetVaultRestoreFromObjectStore struct {
	// Name of the bucket where vault was backed up
	Bucket string `pulumi:"bucket"`
	// Type of backup to restore from. Values of "BUCKET", "PRE_AUTHENTICATED_REQUEST_URI" are supported
	Destination string `pulumi:"destination"`
	// Namespace of the bucket where vault was backed up
	Namespace string `pulumi:"namespace"`
	// Object containing the backup
	Object string `pulumi:"object"`
	// Pre-authenticated-request-uri of the backup
	Uri string `pulumi:"uri"`
}

// GetVaultRestoreFromObjectStoreInput is an input type that accepts GetVaultRestoreFromObjectStoreArgs and GetVaultRestoreFromObjectStoreOutput values.
// You can construct a concrete instance of `GetVaultRestoreFromObjectStoreInput` via:
//
//	GetVaultRestoreFromObjectStoreArgs{...}
type GetVaultRestoreFromObjectStoreInput interface {
	pulumi.Input

	ToGetVaultRestoreFromObjectStoreOutput() GetVaultRestoreFromObjectStoreOutput
	ToGetVaultRestoreFromObjectStoreOutputWithContext(context.Context) GetVaultRestoreFromObjectStoreOutput
}

type GetVaultRestoreFromObjectStoreArgs struct {
	// Name of the bucket where vault was backed up
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Type of backup to restore from. Values of "BUCKET", "PRE_AUTHENTICATED_REQUEST_URI" are supported
	Destination pulumi.StringInput `pulumi:"destination"`
	// Namespace of the bucket where vault was backed up
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// Object containing the backup
	Object pulumi.StringInput `pulumi:"object"`
	// Pre-authenticated-request-uri of the backup
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (GetVaultRestoreFromObjectStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVaultRestoreFromObjectStore)(nil)).Elem()
}

func (i GetVaultRestoreFromObjectStoreArgs) ToGetVaultRestoreFromObjectStoreOutput() GetVaultRestoreFromObjectStoreOutput {
	return i.ToGetVaultRestoreFromObjectStoreOutputWithContext(context.Background())
}

func (i GetVaultRestoreFromObjectStoreArgs) ToGetVaultRestoreFromObjectStoreOutputWithContext(ctx context.Context) GetVaultRestoreFromObjectStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVaultRestoreFromObjectStoreOutput)
}

func (i GetVaultRestoreFromObjectStoreArgs) ToOutput(ctx context.Context) pulumix.Output[GetVaultRestoreFromObjectStore] {
	return pulumix.Output[GetVaultRestoreFromObjectStore]{
		OutputState: i.ToGetVaultRestoreFromObjectStoreOutputWithContext(ctx).OutputState,
	}
}

// GetVaultRestoreFromObjectStoreArrayInput is an input type that accepts GetVaultRestoreFromObjectStoreArray and GetVaultRestoreFromObjectStoreArrayOutput values.
// You can construct a concrete instance of `GetVaultRestoreFromObjectStoreArrayInput` via:
//
//	GetVaultRestoreFromObjectStoreArray{ GetVaultRestoreFromObjectStoreArgs{...} }
type GetVaultRestoreFromObjectStoreArrayInput interface {
	pulumi.Input

	ToGetVaultRestoreFromObjectStoreArrayOutput() GetVaultRestoreFromObjectStoreArrayOutput
	ToGetVaultRestoreFromObjectStoreArrayOutputWithContext(context.Context) GetVaultRestoreFromObjectStoreArrayOutput
}

type GetVaultRestoreFromObjectStoreArray []GetVaultRestoreFromObjectStoreInput

func (GetVaultRestoreFromObjectStoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVaultRestoreFromObjectStore)(nil)).Elem()
}

func (i GetVaultRestoreFromObjectStoreArray) ToGetVaultRestoreFromObjectStoreArrayOutput() GetVaultRestoreFromObjectStoreArrayOutput {
	return i.ToGetVaultRestoreFromObjectStoreArrayOutputWithContext(context.Background())
}

func (i GetVaultRestoreFromObjectStoreArray) ToGetVaultRestoreFromObjectStoreArrayOutputWithContext(ctx context.Context) GetVaultRestoreFromObjectStoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVaultRestoreFromObjectStoreArrayOutput)
}

func (i GetVaultRestoreFromObjectStoreArray) ToOutput(ctx context.Context) pulumix.Output[[]GetVaultRestoreFromObjectStore] {
	return pulumix.Output[[]GetVaultRestoreFromObjectStore]{
		OutputState: i.ToGetVaultRestoreFromObjectStoreArrayOutputWithContext(ctx).OutputState,
	}
}

type GetVaultRestoreFromObjectStoreOutput struct{ *pulumi.OutputState }

func (GetVaultRestoreFromObjectStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVaultRestoreFromObjectStore)(nil)).Elem()
}

func (o GetVaultRestoreFromObjectStoreOutput) ToGetVaultRestoreFromObjectStoreOutput() GetVaultRestoreFromObjectStoreOutput {
	return o
}

func (o GetVaultRestoreFromObjectStoreOutput) ToGetVaultRestoreFromObjectStoreOutputWithContext(ctx context.Context) GetVaultRestoreFromObjectStoreOutput {
	return o
}

func (o GetVaultRestoreFromObjectStoreOutput) ToOutput(ctx context.Context) pulumix.Output[GetVaultRestoreFromObjectStore] {
	return pulumix.Output[GetVaultRestoreFromObjectStore]{
		OutputState: o.OutputState,
	}
}

// Name of the bucket where vault was backed up
func (o GetVaultRestoreFromObjectStoreOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetVaultRestoreFromObjectStore) string { return v.Bucket }).(pulumi.StringOutput)
}

// Type of backup to restore from. Values of "BUCKET", "PRE_AUTHENTICATED_REQUEST_URI" are supported
func (o GetVaultRestoreFromObjectStoreOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v GetVaultRestoreFromObjectStore) string { return v.Destination }).(pulumi.StringOutput)
}

// Namespace of the bucket where vault was backed up
func (o GetVaultRestoreFromObjectStoreOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetVaultRestoreFromObjectStore) string { return v.Namespace }).(pulumi.StringOutput)
}

// Object containing the backup
func (o GetVaultRestoreFromObjectStoreOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v GetVaultRestoreFromObjectStore) string { return v.Object }).(pulumi.StringOutput)
}

// Pre-authenticated-request-uri of the backup
func (o GetVaultRestoreFromObjectStoreOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GetVaultRestoreFromObjectStore) string { return v.Uri }).(pulumi.StringOutput)
}

type GetVaultRestoreFromObjectStoreArrayOutput struct{ *pulumi.OutputState }

func (GetVaultRestoreFromObjectStoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVaultRestoreFromObjectStore)(nil)).Elem()
}

func (o GetVaultRestoreFromObjectStoreArrayOutput) ToGetVaultRestoreFromObjectStoreArrayOutput() GetVaultRestoreFromObjectStoreArrayOutput {
	return o
}

func (o GetVaultRestoreFromObjectStoreArrayOutput) ToGetVaultRestoreFromObjectStoreArrayOutputWithContext(ctx context.Context) GetVaultRestoreFromObjectStoreArrayOutput {
	return o
}

func (o GetVaultRestoreFromObjectStoreArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetVaultRestoreFromObjectStore] {
	return pulumix.Output[[]GetVaultRestoreFromObjectStore]{
		OutputState: o.OutputState,
	}
}

func (o GetVaultRestoreFromObjectStoreArrayOutput) Index(i pulumi.IntInput) GetVaultRestoreFromObjectStoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVaultRestoreFromObjectStore {
		return vs[0].([]GetVaultRestoreFromObjectStore)[vs[1].(int)]
	}).(GetVaultRestoreFromObjectStoreOutput)
}

type GetVaultsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetVaultsFilterInput is an input type that accepts GetVaultsFilterArgs and GetVaultsFilterOutput values.
// You can construct a concrete instance of `GetVaultsFilterInput` via:
//
//	GetVaultsFilterArgs{...}
type GetVaultsFilterInput interface {
	pulumi.Input

	ToGetVaultsFilterOutput() GetVaultsFilterOutput
	ToGetVaultsFilterOutputWithContext(context.Context) GetVaultsFilterOutput
}

type GetVaultsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVaultsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVaultsFilter)(nil)).Elem()
}

func (i GetVaultsFilterArgs) ToGetVaultsFilterOutput() GetVaultsFilterOutput {
	return i.ToGetVaultsFilterOutputWithContext(context.Background())
}

func (i GetVaultsFilterArgs) ToGetVaultsFilterOutputWithContext(ctx context.Context) GetVaultsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVaultsFilterOutput)
}

func (i GetVaultsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetVaultsFilter] {
	return pulumix.Output[GetVaultsFilter]{
		OutputState: i.ToGetVaultsFilterOutputWithContext(ctx).OutputState,
	}
}

// GetVaultsFilterArrayInput is an input type that accepts GetVaultsFilterArray and GetVaultsFilterArrayOutput values.
// You can construct a concrete instance of `GetVaultsFilterArrayInput` via:
//
//	GetVaultsFilterArray{ GetVaultsFilterArgs{...} }
type GetVaultsFilterArrayInput interface {
	pulumi.Input

	ToGetVaultsFilterArrayOutput() GetVaultsFilterArrayOutput
	ToGetVaultsFilterArrayOutputWithContext(context.Context) GetVaultsFilterArrayOutput
}

type GetVaultsFilterArray []GetVaultsFilterInput

func (GetVaultsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVaultsFilter)(nil)).Elem()
}

func (i GetVaultsFilterArray) ToGetVaultsFilterArrayOutput() GetVaultsFilterArrayOutput {
	return i.ToGetVaultsFilterArrayOutputWithContext(context.Background())
}

func (i GetVaultsFilterArray) ToGetVaultsFilterArrayOutputWithContext(ctx context.Context) GetVaultsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVaultsFilterArrayOutput)
}

func (i GetVaultsFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetVaultsFilter] {
	return pulumix.Output[[]GetVaultsFilter]{
		OutputState: i.ToGetVaultsFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetVaultsFilterOutput struct{ *pulumi.OutputState }

func (GetVaultsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVaultsFilter)(nil)).Elem()
}

func (o GetVaultsFilterOutput) ToGetVaultsFilterOutput() GetVaultsFilterOutput {
	return o
}

func (o GetVaultsFilterOutput) ToGetVaultsFilterOutputWithContext(ctx context.Context) GetVaultsFilterOutput {
	return o
}

func (o GetVaultsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetVaultsFilter] {
	return pulumix.Output[GetVaultsFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetVaultsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVaultsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetVaultsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetVaultsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetVaultsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVaultsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVaultsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVaultsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVaultsFilter)(nil)).Elem()
}

func (o GetVaultsFilterArrayOutput) ToGetVaultsFilterArrayOutput() GetVaultsFilterArrayOutput {
	return o
}

func (o GetVaultsFilterArrayOutput) ToGetVaultsFilterArrayOutputWithContext(ctx context.Context) GetVaultsFilterArrayOutput {
	return o
}

func (o GetVaultsFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetVaultsFilter] {
	return pulumix.Output[[]GetVaultsFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetVaultsFilterArrayOutput) Index(i pulumi.IntInput) GetVaultsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVaultsFilter {
		return vs[0].([]GetVaultsFilter)[vs[1].(int)]
	}).(GetVaultsFilterOutput)
}

type GetVaultsVault struct {
	// The OCID of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The service endpoint to perform cryptographic operations against. Cryptographic operations include [Encrypt](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/EncryptedData/Encrypt), [Decrypt](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/DecryptedData/Decrypt), and [GenerateDataEncryptionKey](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/GeneratedKey/GenerateDataEncryptionKey) operations.
	CryptoEndpoint string `pulumi:"cryptoEndpoint"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A user-friendly name for the vault. It does not have to be unique, and it is changeable. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the vault.
	Id string `pulumi:"id"`
	// A boolean that will be true when vault is primary, and will be false when vault is a replica from a primary vault.
	IsPrimary bool `pulumi:"isPrimary"`
	// The service endpoint to perform management operations against. Management operations include "Create," "Update," "List," "Get," and "Delete" operations.
	ManagementEndpoint string `pulumi:"managementEndpoint"`
	// Vault replica details
	ReplicaDetails          []GetVaultsVaultReplicaDetail          `pulumi:"replicaDetails"`
	RestoreFromFiles        []GetVaultsVaultRestoreFromFile        `pulumi:"restoreFromFiles"`
	RestoreFromObjectStores []GetVaultsVaultRestoreFromObjectStore `pulumi:"restoreFromObjectStores"`
	RestoreTrigger          bool                                   `pulumi:"restoreTrigger"`
	// The OCID of the vault from which this vault was restored, if it was restored from a backup file.  If you restore a vault to the same region, the vault retains the same OCID that it had when you  backed up the vault.
	RestoredFromVaultId string `pulumi:"restoredFromVaultId"`
	// The vault's current lifecycle state.  Example: `DELETED`
	State string `pulumi:"state"`
	// The date and time this vault was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-04-03T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// An optional property to indicate when to delete the vault, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
	TimeOfDeletion string `pulumi:"timeOfDeletion"`
	// The type of vault. Each type of vault stores the key with different degrees of isolation and has different options and pricing.
	VaultType string `pulumi:"vaultType"`
}

// GetVaultsVaultInput is an input type that accepts GetVaultsVaultArgs and GetVaultsVaultOutput values.
// You can construct a concrete instance of `GetVaultsVaultInput` via:
//
//	GetVaultsVaultArgs{...}
type GetVaultsVaultInput interface {
	pulumi.Input

	ToGetVaultsVaultOutput() GetVaultsVaultOutput
	ToGetVaultsVaultOutputWithContext(context.Context) GetVaultsVaultOutput
}

type GetVaultsVaultArgs struct {
	// The OCID of the compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The service endpoint to perform cryptographic operations against. Cryptographic operations include [Encrypt](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/EncryptedData/Encrypt), [Decrypt](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/DecryptedData/Decrypt), and [GenerateDataEncryptionKey](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/GeneratedKey/GenerateDataEncryptionKey) operations.
	CryptoEndpoint pulumi.StringInput `pulumi:"cryptoEndpoint"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// A user-friendly name for the vault. It does not have to be unique, and it is changeable. Avoid entering confidential information.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The OCID of the vault.
	Id pulumi.StringInput `pulumi:"id"`
	// A boolean that will be true when vault is primary, and will be false when vault is a replica from a primary vault.
	IsPrimary pulumi.BoolInput `pulumi:"isPrimary"`
	// The service endpoint to perform management operations against. Management operations include "Create," "Update," "List," "Get," and "Delete" operations.
	ManagementEndpoint pulumi.StringInput `pulumi:"managementEndpoint"`
	// Vault replica details
	ReplicaDetails          GetVaultsVaultReplicaDetailArrayInput          `pulumi:"replicaDetails"`
	RestoreFromFiles        GetVaultsVaultRestoreFromFileArrayInput        `pulumi:"restoreFromFiles"`
	RestoreFromObjectStores GetVaultsVaultRestoreFromObjectStoreArrayInput `pulumi:"restoreFromObjectStores"`
	RestoreTrigger          pulumi.BoolInput                               `pulumi:"restoreTrigger"`
	// The OCID of the vault from which this vault was restored, if it was restored from a backup file.  If you restore a vault to the same region, the vault retains the same OCID that it had when you  backed up the vault.
	RestoredFromVaultId pulumi.StringInput `pulumi:"restoredFromVaultId"`
	// The vault's current lifecycle state.  Example: `DELETED`
	State pulumi.StringInput `pulumi:"state"`
	// The date and time this vault was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-04-03T21:10:29.600Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// An optional property to indicate when to delete the vault, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
	TimeOfDeletion pulumi.StringInput `pulumi:"timeOfDeletion"`
	// The type of vault. Each type of vault stores the key with different degrees of isolation and has different options and pricing.
	VaultType pulumi.StringInput `pulumi:"vaultType"`
}

func (GetVaultsVaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVaultsVault)(nil)).Elem()
}

func (i GetVaultsVaultArgs) ToGetVaultsVaultOutput() GetVaultsVaultOutput {
	return i.ToGetVaultsVaultOutputWithContext(context.Background())
}

func (i GetVaultsVaultArgs) ToGetVaultsVaultOutputWithContext(ctx context.Context) GetVaultsVaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVaultsVaultOutput)
}

func (i GetVaultsVaultArgs) ToOutput(ctx context.Context) pulumix.Output[GetVaultsVault] {
	return pulumix.Output[GetVaultsVault]{
		OutputState: i.ToGetVaultsVaultOutputWithContext(ctx).OutputState,
	}
}

// GetVaultsVaultArrayInput is an input type that accepts GetVaultsVaultArray and GetVaultsVaultArrayOutput values.
// You can construct a concrete instance of `GetVaultsVaultArrayInput` via:
//
//	GetVaultsVaultArray{ GetVaultsVaultArgs{...} }
type GetVaultsVaultArrayInput interface {
	pulumi.Input

	ToGetVaultsVaultArrayOutput() GetVaultsVaultArrayOutput
	ToGetVaultsVaultArrayOutputWithContext(context.Context) GetVaultsVaultArrayOutput
}

type GetVaultsVaultArray []GetVaultsVaultInput

func (GetVaultsVaultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVaultsVault)(nil)).Elem()
}

func (i GetVaultsVaultArray) ToGetVaultsVaultArrayOutput() GetVaultsVaultArrayOutput {
	return i.ToGetVaultsVaultArrayOutputWithContext(context.Background())
}

func (i GetVaultsVaultArray) ToGetVaultsVaultArrayOutputWithContext(ctx context.Context) GetVaultsVaultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVaultsVaultArrayOutput)
}

func (i GetVaultsVaultArray) ToOutput(ctx context.Context) pulumix.Output[[]GetVaultsVault] {
	return pulumix.Output[[]GetVaultsVault]{
		OutputState: i.ToGetVaultsVaultArrayOutputWithContext(ctx).OutputState,
	}
}

type GetVaultsVaultOutput struct{ *pulumi.OutputState }

func (GetVaultsVaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVaultsVault)(nil)).Elem()
}

func (o GetVaultsVaultOutput) ToGetVaultsVaultOutput() GetVaultsVaultOutput {
	return o
}

func (o GetVaultsVaultOutput) ToGetVaultsVaultOutputWithContext(ctx context.Context) GetVaultsVaultOutput {
	return o
}

func (o GetVaultsVaultOutput) ToOutput(ctx context.Context) pulumix.Output[GetVaultsVault] {
	return pulumix.Output[GetVaultsVault]{
		OutputState: o.OutputState,
	}
}

// The OCID of the compartment.
func (o GetVaultsVaultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVaultsVault) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The service endpoint to perform cryptographic operations against. Cryptographic operations include [Encrypt](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/EncryptedData/Encrypt), [Decrypt](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/DecryptedData/Decrypt), and [GenerateDataEncryptionKey](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/GeneratedKey/GenerateDataEncryptionKey) operations.
func (o GetVaultsVaultOutput) CryptoEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetVaultsVault) string { return v.CryptoEndpoint }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o GetVaultsVaultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetVaultsVault) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// A user-friendly name for the vault. It does not have to be unique, and it is changeable. Avoid entering confidential information.
func (o GetVaultsVaultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVaultsVault) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o GetVaultsVaultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetVaultsVault) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The OCID of the vault.
func (o GetVaultsVaultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVaultsVault) string { return v.Id }).(pulumi.StringOutput)
}

// A boolean that will be true when vault is primary, and will be false when vault is a replica from a primary vault.
func (o GetVaultsVaultOutput) IsPrimary() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVaultsVault) bool { return v.IsPrimary }).(pulumi.BoolOutput)
}

// The service endpoint to perform management operations against. Management operations include "Create," "Update," "List," "Get," and "Delete" operations.
func (o GetVaultsVaultOutput) ManagementEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetVaultsVault) string { return v.ManagementEndpoint }).(pulumi.StringOutput)
}

// Vault replica details
func (o GetVaultsVaultOutput) ReplicaDetails() GetVaultsVaultReplicaDetailArrayOutput {
	return o.ApplyT(func(v GetVaultsVault) []GetVaultsVaultReplicaDetail { return v.ReplicaDetails }).(GetVaultsVaultReplicaDetailArrayOutput)
}

func (o GetVaultsVaultOutput) RestoreFromFiles() GetVaultsVaultRestoreFromFileArrayOutput {
	return o.ApplyT(func(v GetVaultsVault) []GetVaultsVaultRestoreFromFile { return v.RestoreFromFiles }).(GetVaultsVaultRestoreFromFileArrayOutput)
}

func (o GetVaultsVaultOutput) RestoreFromObjectStores() GetVaultsVaultRestoreFromObjectStoreArrayOutput {
	return o.ApplyT(func(v GetVaultsVault) []GetVaultsVaultRestoreFromObjectStore { return v.RestoreFromObjectStores }).(GetVaultsVaultRestoreFromObjectStoreArrayOutput)
}

func (o GetVaultsVaultOutput) RestoreTrigger() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVaultsVault) bool { return v.RestoreTrigger }).(pulumi.BoolOutput)
}

// The OCID of the vault from which this vault was restored, if it was restored from a backup file.  If you restore a vault to the same region, the vault retains the same OCID that it had when you  backed up the vault.
func (o GetVaultsVaultOutput) RestoredFromVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVaultsVault) string { return v.RestoredFromVaultId }).(pulumi.StringOutput)
}

// The vault's current lifecycle state.  Example: `DELETED`
func (o GetVaultsVaultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetVaultsVault) string { return v.State }).(pulumi.StringOutput)
}

// The date and time this vault was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-04-03T21:10:29.600Z`
func (o GetVaultsVaultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetVaultsVault) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// An optional property to indicate when to delete the vault, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
func (o GetVaultsVaultOutput) TimeOfDeletion() pulumi.StringOutput {
	return o.ApplyT(func(v GetVaultsVault) string { return v.TimeOfDeletion }).(pulumi.StringOutput)
}

// The type of vault. Each type of vault stores the key with different degrees of isolation and has different options and pricing.
func (o GetVaultsVaultOutput) VaultType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVaultsVault) string { return v.VaultType }).(pulumi.StringOutput)
}

type GetVaultsVaultArrayOutput struct{ *pulumi.OutputState }

func (GetVaultsVaultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVaultsVault)(nil)).Elem()
}

func (o GetVaultsVaultArrayOutput) ToGetVaultsVaultArrayOutput() GetVaultsVaultArrayOutput {
	return o
}

func (o GetVaultsVaultArrayOutput) ToGetVaultsVaultArrayOutputWithContext(ctx context.Context) GetVaultsVaultArrayOutput {
	return o
}

func (o GetVaultsVaultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetVaultsVault] {
	return pulumix.Output[[]GetVaultsVault]{
		OutputState: o.OutputState,
	}
}

func (o GetVaultsVaultArrayOutput) Index(i pulumi.IntInput) GetVaultsVaultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVaultsVault {
		return vs[0].([]GetVaultsVault)[vs[1].(int)]
	}).(GetVaultsVaultOutput)
}

type GetVaultsVaultReplicaDetail struct {
	// ReplicationId associated with a vault operation
	ReplicationId string `pulumi:"replicationId"`
}

// GetVaultsVaultReplicaDetailInput is an input type that accepts GetVaultsVaultReplicaDetailArgs and GetVaultsVaultReplicaDetailOutput values.
// You can construct a concrete instance of `GetVaultsVaultReplicaDetailInput` via:
//
//	GetVaultsVaultReplicaDetailArgs{...}
type GetVaultsVaultReplicaDetailInput interface {
	pulumi.Input

	ToGetVaultsVaultReplicaDetailOutput() GetVaultsVaultReplicaDetailOutput
	ToGetVaultsVaultReplicaDetailOutputWithContext(context.Context) GetVaultsVaultReplicaDetailOutput
}

type GetVaultsVaultReplicaDetailArgs struct {
	// ReplicationId associated with a vault operation
	ReplicationId pulumi.StringInput `pulumi:"replicationId"`
}

func (GetVaultsVaultReplicaDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVaultsVaultReplicaDetail)(nil)).Elem()
}

func (i GetVaultsVaultReplicaDetailArgs) ToGetVaultsVaultReplicaDetailOutput() GetVaultsVaultReplicaDetailOutput {
	return i.ToGetVaultsVaultReplicaDetailOutputWithContext(context.Background())
}

func (i GetVaultsVaultReplicaDetailArgs) ToGetVaultsVaultReplicaDetailOutputWithContext(ctx context.Context) GetVaultsVaultReplicaDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVaultsVaultReplicaDetailOutput)
}

func (i GetVaultsVaultReplicaDetailArgs) ToOutput(ctx context.Context) pulumix.Output[GetVaultsVaultReplicaDetail] {
	return pulumix.Output[GetVaultsVaultReplicaDetail]{
		OutputState: i.ToGetVaultsVaultReplicaDetailOutputWithContext(ctx).OutputState,
	}
}

// GetVaultsVaultReplicaDetailArrayInput is an input type that accepts GetVaultsVaultReplicaDetailArray and GetVaultsVaultReplicaDetailArrayOutput values.
// You can construct a concrete instance of `GetVaultsVaultReplicaDetailArrayInput` via:
//
//	GetVaultsVaultReplicaDetailArray{ GetVaultsVaultReplicaDetailArgs{...} }
type GetVaultsVaultReplicaDetailArrayInput interface {
	pulumi.Input

	ToGetVaultsVaultReplicaDetailArrayOutput() GetVaultsVaultReplicaDetailArrayOutput
	ToGetVaultsVaultReplicaDetailArrayOutputWithContext(context.Context) GetVaultsVaultReplicaDetailArrayOutput
}

type GetVaultsVaultReplicaDetailArray []GetVaultsVaultReplicaDetailInput

func (GetVaultsVaultReplicaDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVaultsVaultReplicaDetail)(nil)).Elem()
}

func (i GetVaultsVaultReplicaDetailArray) ToGetVaultsVaultReplicaDetailArrayOutput() GetVaultsVaultReplicaDetailArrayOutput {
	return i.ToGetVaultsVaultReplicaDetailArrayOutputWithContext(context.Background())
}

func (i GetVaultsVaultReplicaDetailArray) ToGetVaultsVaultReplicaDetailArrayOutputWithContext(ctx context.Context) GetVaultsVaultReplicaDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVaultsVaultReplicaDetailArrayOutput)
}

func (i GetVaultsVaultReplicaDetailArray) ToOutput(ctx context.Context) pulumix.Output[[]GetVaultsVaultReplicaDetail] {
	return pulumix.Output[[]GetVaultsVaultReplicaDetail]{
		OutputState: i.ToGetVaultsVaultReplicaDetailArrayOutputWithContext(ctx).OutputState,
	}
}

type GetVaultsVaultReplicaDetailOutput struct{ *pulumi.OutputState }

func (GetVaultsVaultReplicaDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVaultsVaultReplicaDetail)(nil)).Elem()
}

func (o GetVaultsVaultReplicaDetailOutput) ToGetVaultsVaultReplicaDetailOutput() GetVaultsVaultReplicaDetailOutput {
	return o
}

func (o GetVaultsVaultReplicaDetailOutput) ToGetVaultsVaultReplicaDetailOutputWithContext(ctx context.Context) GetVaultsVaultReplicaDetailOutput {
	return o
}

func (o GetVaultsVaultReplicaDetailOutput) ToOutput(ctx context.Context) pulumix.Output[GetVaultsVaultReplicaDetail] {
	return pulumix.Output[GetVaultsVaultReplicaDetail]{
		OutputState: o.OutputState,
	}
}

// ReplicationId associated with a vault operation
func (o GetVaultsVaultReplicaDetailOutput) ReplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVaultsVaultReplicaDetail) string { return v.ReplicationId }).(pulumi.StringOutput)
}

type GetVaultsVaultReplicaDetailArrayOutput struct{ *pulumi.OutputState }

func (GetVaultsVaultReplicaDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVaultsVaultReplicaDetail)(nil)).Elem()
}

func (o GetVaultsVaultReplicaDetailArrayOutput) ToGetVaultsVaultReplicaDetailArrayOutput() GetVaultsVaultReplicaDetailArrayOutput {
	return o
}

func (o GetVaultsVaultReplicaDetailArrayOutput) ToGetVaultsVaultReplicaDetailArrayOutputWithContext(ctx context.Context) GetVaultsVaultReplicaDetailArrayOutput {
	return o
}

func (o GetVaultsVaultReplicaDetailArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetVaultsVaultReplicaDetail] {
	return pulumix.Output[[]GetVaultsVaultReplicaDetail]{
		OutputState: o.OutputState,
	}
}

func (o GetVaultsVaultReplicaDetailArrayOutput) Index(i pulumi.IntInput) GetVaultsVaultReplicaDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVaultsVaultReplicaDetail {
		return vs[0].([]GetVaultsVaultReplicaDetail)[vs[1].(int)]
	}).(GetVaultsVaultReplicaDetailOutput)
}

type GetVaultsVaultRestoreFromFile struct {
	ContentLength               string `pulumi:"contentLength"`
	ContentMd5                  string `pulumi:"contentMd5"`
	RestoreVaultFromFileDetails string `pulumi:"restoreVaultFromFileDetails"`
}

// GetVaultsVaultRestoreFromFileInput is an input type that accepts GetVaultsVaultRestoreFromFileArgs and GetVaultsVaultRestoreFromFileOutput values.
// You can construct a concrete instance of `GetVaultsVaultRestoreFromFileInput` via:
//
//	GetVaultsVaultRestoreFromFileArgs{...}
type GetVaultsVaultRestoreFromFileInput interface {
	pulumi.Input

	ToGetVaultsVaultRestoreFromFileOutput() GetVaultsVaultRestoreFromFileOutput
	ToGetVaultsVaultRestoreFromFileOutputWithContext(context.Context) GetVaultsVaultRestoreFromFileOutput
}

type GetVaultsVaultRestoreFromFileArgs struct {
	ContentLength               pulumi.StringInput `pulumi:"contentLength"`
	ContentMd5                  pulumi.StringInput `pulumi:"contentMd5"`
	RestoreVaultFromFileDetails pulumi.StringInput `pulumi:"restoreVaultFromFileDetails"`
}

func (GetVaultsVaultRestoreFromFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVaultsVaultRestoreFromFile)(nil)).Elem()
}

func (i GetVaultsVaultRestoreFromFileArgs) ToGetVaultsVaultRestoreFromFileOutput() GetVaultsVaultRestoreFromFileOutput {
	return i.ToGetVaultsVaultRestoreFromFileOutputWithContext(context.Background())
}

func (i GetVaultsVaultRestoreFromFileArgs) ToGetVaultsVaultRestoreFromFileOutputWithContext(ctx context.Context) GetVaultsVaultRestoreFromFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVaultsVaultRestoreFromFileOutput)
}

func (i GetVaultsVaultRestoreFromFileArgs) ToOutput(ctx context.Context) pulumix.Output[GetVaultsVaultRestoreFromFile] {
	return pulumix.Output[GetVaultsVaultRestoreFromFile]{
		OutputState: i.ToGetVaultsVaultRestoreFromFileOutputWithContext(ctx).OutputState,
	}
}

// GetVaultsVaultRestoreFromFileArrayInput is an input type that accepts GetVaultsVaultRestoreFromFileArray and GetVaultsVaultRestoreFromFileArrayOutput values.
// You can construct a concrete instance of `GetVaultsVaultRestoreFromFileArrayInput` via:
//
//	GetVaultsVaultRestoreFromFileArray{ GetVaultsVaultRestoreFromFileArgs{...} }
type GetVaultsVaultRestoreFromFileArrayInput interface {
	pulumi.Input

	ToGetVaultsVaultRestoreFromFileArrayOutput() GetVaultsVaultRestoreFromFileArrayOutput
	ToGetVaultsVaultRestoreFromFileArrayOutputWithContext(context.Context) GetVaultsVaultRestoreFromFileArrayOutput
}

type GetVaultsVaultRestoreFromFileArray []GetVaultsVaultRestoreFromFileInput

func (GetVaultsVaultRestoreFromFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVaultsVaultRestoreFromFile)(nil)).Elem()
}

func (i GetVaultsVaultRestoreFromFileArray) ToGetVaultsVaultRestoreFromFileArrayOutput() GetVaultsVaultRestoreFromFileArrayOutput {
	return i.ToGetVaultsVaultRestoreFromFileArrayOutputWithContext(context.Background())
}

func (i GetVaultsVaultRestoreFromFileArray) ToGetVaultsVaultRestoreFromFileArrayOutputWithContext(ctx context.Context) GetVaultsVaultRestoreFromFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVaultsVaultRestoreFromFileArrayOutput)
}

func (i GetVaultsVaultRestoreFromFileArray) ToOutput(ctx context.Context) pulumix.Output[[]GetVaultsVaultRestoreFromFile] {
	return pulumix.Output[[]GetVaultsVaultRestoreFromFile]{
		OutputState: i.ToGetVaultsVaultRestoreFromFileArrayOutputWithContext(ctx).OutputState,
	}
}

type GetVaultsVaultRestoreFromFileOutput struct{ *pulumi.OutputState }

func (GetVaultsVaultRestoreFromFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVaultsVaultRestoreFromFile)(nil)).Elem()
}

func (o GetVaultsVaultRestoreFromFileOutput) ToGetVaultsVaultRestoreFromFileOutput() GetVaultsVaultRestoreFromFileOutput {
	return o
}

func (o GetVaultsVaultRestoreFromFileOutput) ToGetVaultsVaultRestoreFromFileOutputWithContext(ctx context.Context) GetVaultsVaultRestoreFromFileOutput {
	return o
}

func (o GetVaultsVaultRestoreFromFileOutput) ToOutput(ctx context.Context) pulumix.Output[GetVaultsVaultRestoreFromFile] {
	return pulumix.Output[GetVaultsVaultRestoreFromFile]{
		OutputState: o.OutputState,
	}
}

func (o GetVaultsVaultRestoreFromFileOutput) ContentLength() pulumi.StringOutput {
	return o.ApplyT(func(v GetVaultsVaultRestoreFromFile) string { return v.ContentLength }).(pulumi.StringOutput)
}

func (o GetVaultsVaultRestoreFromFileOutput) ContentMd5() pulumi.StringOutput {
	return o.ApplyT(func(v GetVaultsVaultRestoreFromFile) string { return v.ContentMd5 }).(pulumi.StringOutput)
}

func (o GetVaultsVaultRestoreFromFileOutput) RestoreVaultFromFileDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetVaultsVaultRestoreFromFile) string { return v.RestoreVaultFromFileDetails }).(pulumi.StringOutput)
}

type GetVaultsVaultRestoreFromFileArrayOutput struct{ *pulumi.OutputState }

func (GetVaultsVaultRestoreFromFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVaultsVaultRestoreFromFile)(nil)).Elem()
}

func (o GetVaultsVaultRestoreFromFileArrayOutput) ToGetVaultsVaultRestoreFromFileArrayOutput() GetVaultsVaultRestoreFromFileArrayOutput {
	return o
}

func (o GetVaultsVaultRestoreFromFileArrayOutput) ToGetVaultsVaultRestoreFromFileArrayOutputWithContext(ctx context.Context) GetVaultsVaultRestoreFromFileArrayOutput {
	return o
}

func (o GetVaultsVaultRestoreFromFileArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetVaultsVaultRestoreFromFile] {
	return pulumix.Output[[]GetVaultsVaultRestoreFromFile]{
		OutputState: o.OutputState,
	}
}

func (o GetVaultsVaultRestoreFromFileArrayOutput) Index(i pulumi.IntInput) GetVaultsVaultRestoreFromFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVaultsVaultRestoreFromFile {
		return vs[0].([]GetVaultsVaultRestoreFromFile)[vs[1].(int)]
	}).(GetVaultsVaultRestoreFromFileOutput)
}

type GetVaultsVaultRestoreFromObjectStore struct {
	Bucket      string `pulumi:"bucket"`
	Destination string `pulumi:"destination"`
	Namespace   string `pulumi:"namespace"`
	Object      string `pulumi:"object"`
	Uri         string `pulumi:"uri"`
}

// GetVaultsVaultRestoreFromObjectStoreInput is an input type that accepts GetVaultsVaultRestoreFromObjectStoreArgs and GetVaultsVaultRestoreFromObjectStoreOutput values.
// You can construct a concrete instance of `GetVaultsVaultRestoreFromObjectStoreInput` via:
//
//	GetVaultsVaultRestoreFromObjectStoreArgs{...}
type GetVaultsVaultRestoreFromObjectStoreInput interface {
	pulumi.Input

	ToGetVaultsVaultRestoreFromObjectStoreOutput() GetVaultsVaultRestoreFromObjectStoreOutput
	ToGetVaultsVaultRestoreFromObjectStoreOutputWithContext(context.Context) GetVaultsVaultRestoreFromObjectStoreOutput
}

type GetVaultsVaultRestoreFromObjectStoreArgs struct {
	Bucket      pulumi.StringInput `pulumi:"bucket"`
	Destination pulumi.StringInput `pulumi:"destination"`
	Namespace   pulumi.StringInput `pulumi:"namespace"`
	Object      pulumi.StringInput `pulumi:"object"`
	Uri         pulumi.StringInput `pulumi:"uri"`
}

func (GetVaultsVaultRestoreFromObjectStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVaultsVaultRestoreFromObjectStore)(nil)).Elem()
}

func (i GetVaultsVaultRestoreFromObjectStoreArgs) ToGetVaultsVaultRestoreFromObjectStoreOutput() GetVaultsVaultRestoreFromObjectStoreOutput {
	return i.ToGetVaultsVaultRestoreFromObjectStoreOutputWithContext(context.Background())
}

func (i GetVaultsVaultRestoreFromObjectStoreArgs) ToGetVaultsVaultRestoreFromObjectStoreOutputWithContext(ctx context.Context) GetVaultsVaultRestoreFromObjectStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVaultsVaultRestoreFromObjectStoreOutput)
}

func (i GetVaultsVaultRestoreFromObjectStoreArgs) ToOutput(ctx context.Context) pulumix.Output[GetVaultsVaultRestoreFromObjectStore] {
	return pulumix.Output[GetVaultsVaultRestoreFromObjectStore]{
		OutputState: i.ToGetVaultsVaultRestoreFromObjectStoreOutputWithContext(ctx).OutputState,
	}
}

// GetVaultsVaultRestoreFromObjectStoreArrayInput is an input type that accepts GetVaultsVaultRestoreFromObjectStoreArray and GetVaultsVaultRestoreFromObjectStoreArrayOutput values.
// You can construct a concrete instance of `GetVaultsVaultRestoreFromObjectStoreArrayInput` via:
//
//	GetVaultsVaultRestoreFromObjectStoreArray{ GetVaultsVaultRestoreFromObjectStoreArgs{...} }
type GetVaultsVaultRestoreFromObjectStoreArrayInput interface {
	pulumi.Input

	ToGetVaultsVaultRestoreFromObjectStoreArrayOutput() GetVaultsVaultRestoreFromObjectStoreArrayOutput
	ToGetVaultsVaultRestoreFromObjectStoreArrayOutputWithContext(context.Context) GetVaultsVaultRestoreFromObjectStoreArrayOutput
}

type GetVaultsVaultRestoreFromObjectStoreArray []GetVaultsVaultRestoreFromObjectStoreInput

func (GetVaultsVaultRestoreFromObjectStoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVaultsVaultRestoreFromObjectStore)(nil)).Elem()
}

func (i GetVaultsVaultRestoreFromObjectStoreArray) ToGetVaultsVaultRestoreFromObjectStoreArrayOutput() GetVaultsVaultRestoreFromObjectStoreArrayOutput {
	return i.ToGetVaultsVaultRestoreFromObjectStoreArrayOutputWithContext(context.Background())
}

func (i GetVaultsVaultRestoreFromObjectStoreArray) ToGetVaultsVaultRestoreFromObjectStoreArrayOutputWithContext(ctx context.Context) GetVaultsVaultRestoreFromObjectStoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVaultsVaultRestoreFromObjectStoreArrayOutput)
}

func (i GetVaultsVaultRestoreFromObjectStoreArray) ToOutput(ctx context.Context) pulumix.Output[[]GetVaultsVaultRestoreFromObjectStore] {
	return pulumix.Output[[]GetVaultsVaultRestoreFromObjectStore]{
		OutputState: i.ToGetVaultsVaultRestoreFromObjectStoreArrayOutputWithContext(ctx).OutputState,
	}
}

type GetVaultsVaultRestoreFromObjectStoreOutput struct{ *pulumi.OutputState }

func (GetVaultsVaultRestoreFromObjectStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVaultsVaultRestoreFromObjectStore)(nil)).Elem()
}

func (o GetVaultsVaultRestoreFromObjectStoreOutput) ToGetVaultsVaultRestoreFromObjectStoreOutput() GetVaultsVaultRestoreFromObjectStoreOutput {
	return o
}

func (o GetVaultsVaultRestoreFromObjectStoreOutput) ToGetVaultsVaultRestoreFromObjectStoreOutputWithContext(ctx context.Context) GetVaultsVaultRestoreFromObjectStoreOutput {
	return o
}

func (o GetVaultsVaultRestoreFromObjectStoreOutput) ToOutput(ctx context.Context) pulumix.Output[GetVaultsVaultRestoreFromObjectStore] {
	return pulumix.Output[GetVaultsVaultRestoreFromObjectStore]{
		OutputState: o.OutputState,
	}
}

func (o GetVaultsVaultRestoreFromObjectStoreOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetVaultsVaultRestoreFromObjectStore) string { return v.Bucket }).(pulumi.StringOutput)
}

func (o GetVaultsVaultRestoreFromObjectStoreOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v GetVaultsVaultRestoreFromObjectStore) string { return v.Destination }).(pulumi.StringOutput)
}

func (o GetVaultsVaultRestoreFromObjectStoreOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetVaultsVaultRestoreFromObjectStore) string { return v.Namespace }).(pulumi.StringOutput)
}

func (o GetVaultsVaultRestoreFromObjectStoreOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v GetVaultsVaultRestoreFromObjectStore) string { return v.Object }).(pulumi.StringOutput)
}

func (o GetVaultsVaultRestoreFromObjectStoreOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GetVaultsVaultRestoreFromObjectStore) string { return v.Uri }).(pulumi.StringOutput)
}

type GetVaultsVaultRestoreFromObjectStoreArrayOutput struct{ *pulumi.OutputState }

func (GetVaultsVaultRestoreFromObjectStoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVaultsVaultRestoreFromObjectStore)(nil)).Elem()
}

func (o GetVaultsVaultRestoreFromObjectStoreArrayOutput) ToGetVaultsVaultRestoreFromObjectStoreArrayOutput() GetVaultsVaultRestoreFromObjectStoreArrayOutput {
	return o
}

func (o GetVaultsVaultRestoreFromObjectStoreArrayOutput) ToGetVaultsVaultRestoreFromObjectStoreArrayOutputWithContext(ctx context.Context) GetVaultsVaultRestoreFromObjectStoreArrayOutput {
	return o
}

func (o GetVaultsVaultRestoreFromObjectStoreArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetVaultsVaultRestoreFromObjectStore] {
	return pulumix.Output[[]GetVaultsVaultRestoreFromObjectStore]{
		OutputState: o.OutputState,
	}
}

func (o GetVaultsVaultRestoreFromObjectStoreArrayOutput) Index(i pulumi.IntInput) GetVaultsVaultRestoreFromObjectStoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVaultsVaultRestoreFromObjectStore {
		return vs[0].([]GetVaultsVaultRestoreFromObjectStore)[vs[1].(int)]
	}).(GetVaultsVaultRestoreFromObjectStoreOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GeneratedKeyKeyShapeInput)(nil)).Elem(), GeneratedKeyKeyShapeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GeneratedKeyKeyShapePtrInput)(nil)).Elem(), GeneratedKeyKeyShapeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KeyKeyShapeInput)(nil)).Elem(), KeyKeyShapeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KeyKeyShapePtrInput)(nil)).Elem(), KeyKeyShapeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KeyReplicaDetailInput)(nil)).Elem(), KeyReplicaDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KeyReplicaDetailArrayInput)(nil)).Elem(), KeyReplicaDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KeyRestoreFromFileInput)(nil)).Elem(), KeyRestoreFromFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KeyRestoreFromFilePtrInput)(nil)).Elem(), KeyRestoreFromFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KeyRestoreFromObjectStoreInput)(nil)).Elem(), KeyRestoreFromObjectStoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KeyRestoreFromObjectStorePtrInput)(nil)).Elem(), KeyRestoreFromObjectStoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KeyVersionReplicaDetailInput)(nil)).Elem(), KeyVersionReplicaDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KeyVersionReplicaDetailArrayInput)(nil)).Elem(), KeyVersionReplicaDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VaultReplicaDetailInput)(nil)).Elem(), VaultReplicaDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VaultReplicaDetailArrayInput)(nil)).Elem(), VaultReplicaDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VaultRestoreFromFileInput)(nil)).Elem(), VaultRestoreFromFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VaultRestoreFromFilePtrInput)(nil)).Elem(), VaultRestoreFromFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VaultRestoreFromObjectStoreInput)(nil)).Elem(), VaultRestoreFromObjectStoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VaultRestoreFromObjectStorePtrInput)(nil)).Elem(), VaultRestoreFromObjectStoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeyKeyShapeInput)(nil)).Elem(), GetKeyKeyShapeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeyKeyShapeArrayInput)(nil)).Elem(), GetKeyKeyShapeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeyReplicaDetailInput)(nil)).Elem(), GetKeyReplicaDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeyReplicaDetailArrayInput)(nil)).Elem(), GetKeyReplicaDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeyRestoreFromFileInput)(nil)).Elem(), GetKeyRestoreFromFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeyRestoreFromFileArrayInput)(nil)).Elem(), GetKeyRestoreFromFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeyRestoreFromObjectStoreInput)(nil)).Elem(), GetKeyRestoreFromObjectStoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeyRestoreFromObjectStoreArrayInput)(nil)).Elem(), GetKeyRestoreFromObjectStoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeyVersionReplicaDetailInput)(nil)).Elem(), GetKeyVersionReplicaDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeyVersionReplicaDetailArrayInput)(nil)).Elem(), GetKeyVersionReplicaDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeyVersionsFilterInput)(nil)).Elem(), GetKeyVersionsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeyVersionsFilterArrayInput)(nil)).Elem(), GetKeyVersionsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeyVersionsKeyVersionInput)(nil)).Elem(), GetKeyVersionsKeyVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeyVersionsKeyVersionArrayInput)(nil)).Elem(), GetKeyVersionsKeyVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeyVersionsKeyVersionReplicaDetailInput)(nil)).Elem(), GetKeyVersionsKeyVersionReplicaDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeyVersionsKeyVersionReplicaDetailArrayInput)(nil)).Elem(), GetKeyVersionsKeyVersionReplicaDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeysFilterInput)(nil)).Elem(), GetKeysFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeysFilterArrayInput)(nil)).Elem(), GetKeysFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeysKeyInput)(nil)).Elem(), GetKeysKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeysKeyArrayInput)(nil)).Elem(), GetKeysKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeysKeyKeyShapeInput)(nil)).Elem(), GetKeysKeyKeyShapeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeysKeyKeyShapeArrayInput)(nil)).Elem(), GetKeysKeyKeyShapeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeysKeyReplicaDetailInput)(nil)).Elem(), GetKeysKeyReplicaDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeysKeyReplicaDetailArrayInput)(nil)).Elem(), GetKeysKeyReplicaDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeysKeyRestoreFromFileInput)(nil)).Elem(), GetKeysKeyRestoreFromFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeysKeyRestoreFromFileArrayInput)(nil)).Elem(), GetKeysKeyRestoreFromFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeysKeyRestoreFromObjectStoreInput)(nil)).Elem(), GetKeysKeyRestoreFromObjectStoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeysKeyRestoreFromObjectStoreArrayInput)(nil)).Elem(), GetKeysKeyRestoreFromObjectStoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplicationStatusReplicaDetailInput)(nil)).Elem(), GetReplicationStatusReplicaDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplicationStatusReplicaDetailArrayInput)(nil)).Elem(), GetReplicationStatusReplicaDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVaultReplicaDetailInput)(nil)).Elem(), GetVaultReplicaDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVaultReplicaDetailArrayInput)(nil)).Elem(), GetVaultReplicaDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVaultReplicasFilterInput)(nil)).Elem(), GetVaultReplicasFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVaultReplicasFilterArrayInput)(nil)).Elem(), GetVaultReplicasFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVaultReplicasVaultReplicaInput)(nil)).Elem(), GetVaultReplicasVaultReplicaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVaultReplicasVaultReplicaArrayInput)(nil)).Elem(), GetVaultReplicasVaultReplicaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVaultRestoreFromFileInput)(nil)).Elem(), GetVaultRestoreFromFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVaultRestoreFromFileArrayInput)(nil)).Elem(), GetVaultRestoreFromFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVaultRestoreFromObjectStoreInput)(nil)).Elem(), GetVaultRestoreFromObjectStoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVaultRestoreFromObjectStoreArrayInput)(nil)).Elem(), GetVaultRestoreFromObjectStoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVaultsFilterInput)(nil)).Elem(), GetVaultsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVaultsFilterArrayInput)(nil)).Elem(), GetVaultsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVaultsVaultInput)(nil)).Elem(), GetVaultsVaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVaultsVaultArrayInput)(nil)).Elem(), GetVaultsVaultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVaultsVaultReplicaDetailInput)(nil)).Elem(), GetVaultsVaultReplicaDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVaultsVaultReplicaDetailArrayInput)(nil)).Elem(), GetVaultsVaultReplicaDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVaultsVaultRestoreFromFileInput)(nil)).Elem(), GetVaultsVaultRestoreFromFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVaultsVaultRestoreFromFileArrayInput)(nil)).Elem(), GetVaultsVaultRestoreFromFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVaultsVaultRestoreFromObjectStoreInput)(nil)).Elem(), GetVaultsVaultRestoreFromObjectStoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVaultsVaultRestoreFromObjectStoreArrayInput)(nil)).Elem(), GetVaultsVaultRestoreFromObjectStoreArray{})
	pulumi.RegisterOutputType(GeneratedKeyKeyShapeOutput{})
	pulumi.RegisterOutputType(GeneratedKeyKeyShapePtrOutput{})
	pulumi.RegisterOutputType(KeyKeyShapeOutput{})
	pulumi.RegisterOutputType(KeyKeyShapePtrOutput{})
	pulumi.RegisterOutputType(KeyReplicaDetailOutput{})
	pulumi.RegisterOutputType(KeyReplicaDetailArrayOutput{})
	pulumi.RegisterOutputType(KeyRestoreFromFileOutput{})
	pulumi.RegisterOutputType(KeyRestoreFromFilePtrOutput{})
	pulumi.RegisterOutputType(KeyRestoreFromObjectStoreOutput{})
	pulumi.RegisterOutputType(KeyRestoreFromObjectStorePtrOutput{})
	pulumi.RegisterOutputType(KeyVersionReplicaDetailOutput{})
	pulumi.RegisterOutputType(KeyVersionReplicaDetailArrayOutput{})
	pulumi.RegisterOutputType(VaultReplicaDetailOutput{})
	pulumi.RegisterOutputType(VaultReplicaDetailArrayOutput{})
	pulumi.RegisterOutputType(VaultRestoreFromFileOutput{})
	pulumi.RegisterOutputType(VaultRestoreFromFilePtrOutput{})
	pulumi.RegisterOutputType(VaultRestoreFromObjectStoreOutput{})
	pulumi.RegisterOutputType(VaultRestoreFromObjectStorePtrOutput{})
	pulumi.RegisterOutputType(GetKeyKeyShapeOutput{})
	pulumi.RegisterOutputType(GetKeyKeyShapeArrayOutput{})
	pulumi.RegisterOutputType(GetKeyReplicaDetailOutput{})
	pulumi.RegisterOutputType(GetKeyReplicaDetailArrayOutput{})
	pulumi.RegisterOutputType(GetKeyRestoreFromFileOutput{})
	pulumi.RegisterOutputType(GetKeyRestoreFromFileArrayOutput{})
	pulumi.RegisterOutputType(GetKeyRestoreFromObjectStoreOutput{})
	pulumi.RegisterOutputType(GetKeyRestoreFromObjectStoreArrayOutput{})
	pulumi.RegisterOutputType(GetKeyVersionReplicaDetailOutput{})
	pulumi.RegisterOutputType(GetKeyVersionReplicaDetailArrayOutput{})
	pulumi.RegisterOutputType(GetKeyVersionsFilterOutput{})
	pulumi.RegisterOutputType(GetKeyVersionsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetKeyVersionsKeyVersionOutput{})
	pulumi.RegisterOutputType(GetKeyVersionsKeyVersionArrayOutput{})
	pulumi.RegisterOutputType(GetKeyVersionsKeyVersionReplicaDetailOutput{})
	pulumi.RegisterOutputType(GetKeyVersionsKeyVersionReplicaDetailArrayOutput{})
	pulumi.RegisterOutputType(GetKeysFilterOutput{})
	pulumi.RegisterOutputType(GetKeysFilterArrayOutput{})
	pulumi.RegisterOutputType(GetKeysKeyOutput{})
	pulumi.RegisterOutputType(GetKeysKeyArrayOutput{})
	pulumi.RegisterOutputType(GetKeysKeyKeyShapeOutput{})
	pulumi.RegisterOutputType(GetKeysKeyKeyShapeArrayOutput{})
	pulumi.RegisterOutputType(GetKeysKeyReplicaDetailOutput{})
	pulumi.RegisterOutputType(GetKeysKeyReplicaDetailArrayOutput{})
	pulumi.RegisterOutputType(GetKeysKeyRestoreFromFileOutput{})
	pulumi.RegisterOutputType(GetKeysKeyRestoreFromFileArrayOutput{})
	pulumi.RegisterOutputType(GetKeysKeyRestoreFromObjectStoreOutput{})
	pulumi.RegisterOutputType(GetKeysKeyRestoreFromObjectStoreArrayOutput{})
	pulumi.RegisterOutputType(GetReplicationStatusReplicaDetailOutput{})
	pulumi.RegisterOutputType(GetReplicationStatusReplicaDetailArrayOutput{})
	pulumi.RegisterOutputType(GetVaultReplicaDetailOutput{})
	pulumi.RegisterOutputType(GetVaultReplicaDetailArrayOutput{})
	pulumi.RegisterOutputType(GetVaultReplicasFilterOutput{})
	pulumi.RegisterOutputType(GetVaultReplicasFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVaultReplicasVaultReplicaOutput{})
	pulumi.RegisterOutputType(GetVaultReplicasVaultReplicaArrayOutput{})
	pulumi.RegisterOutputType(GetVaultRestoreFromFileOutput{})
	pulumi.RegisterOutputType(GetVaultRestoreFromFileArrayOutput{})
	pulumi.RegisterOutputType(GetVaultRestoreFromObjectStoreOutput{})
	pulumi.RegisterOutputType(GetVaultRestoreFromObjectStoreArrayOutput{})
	pulumi.RegisterOutputType(GetVaultsFilterOutput{})
	pulumi.RegisterOutputType(GetVaultsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVaultsVaultOutput{})
	pulumi.RegisterOutputType(GetVaultsVaultArrayOutput{})
	pulumi.RegisterOutputType(GetVaultsVaultReplicaDetailOutput{})
	pulumi.RegisterOutputType(GetVaultsVaultReplicaDetailArrayOutput{})
	pulumi.RegisterOutputType(GetVaultsVaultRestoreFromFileOutput{})
	pulumi.RegisterOutputType(GetVaultsVaultRestoreFromFileArrayOutput{})
	pulumi.RegisterOutputType(GetVaultsVaultRestoreFromObjectStoreOutput{})
	pulumi.RegisterOutputType(GetVaultsVaultRestoreFromObjectStoreArrayOutput{})
}
