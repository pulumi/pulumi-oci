// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package licensemanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides the list of License Records in Oracle Cloud Infrastructure License Manager service.
//
// Retrieves all license records for a given product license ID.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/LicenseManager"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := LicenseManager.GetLicenseRecords(ctx, &licensemanager.GetLicenseRecordsArgs{
//				ProductLicenseId: oci_license_manager_product_license.Test_product_license.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetLicenseRecords(ctx *pulumi.Context, args *GetLicenseRecordsArgs, opts ...pulumi.InvokeOption) (*GetLicenseRecordsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLicenseRecordsResult
	err := ctx.Invoke("oci:LicenseManager/getLicenseRecords:getLicenseRecords", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLicenseRecords.
type GetLicenseRecordsArgs struct {
	Filters []GetLicenseRecordsFilter `pulumi:"filters"`
	// Unique product license identifier.
	ProductLicenseId string `pulumi:"productLicenseId"`
}

// A collection of values returned by getLicenseRecords.
type GetLicenseRecordsResult struct {
	Filters []GetLicenseRecordsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of license_record_collection.
	LicenseRecordCollections []GetLicenseRecordsLicenseRecordCollection `pulumi:"licenseRecordCollections"`
	// The product license [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) with which the license record is associated.
	ProductLicenseId string `pulumi:"productLicenseId"`
}

func GetLicenseRecordsOutput(ctx *pulumi.Context, args GetLicenseRecordsOutputArgs, opts ...pulumi.InvokeOption) GetLicenseRecordsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetLicenseRecordsResult, error) {
			args := v.(GetLicenseRecordsArgs)
			r, err := GetLicenseRecords(ctx, &args, opts...)
			var s GetLicenseRecordsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetLicenseRecordsResultOutput)
}

// A collection of arguments for invoking getLicenseRecords.
type GetLicenseRecordsOutputArgs struct {
	Filters GetLicenseRecordsFilterArrayInput `pulumi:"filters"`
	// Unique product license identifier.
	ProductLicenseId pulumi.StringInput `pulumi:"productLicenseId"`
}

func (GetLicenseRecordsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicenseRecordsArgs)(nil)).Elem()
}

// A collection of values returned by getLicenseRecords.
type GetLicenseRecordsResultOutput struct{ *pulumi.OutputState }

func (GetLicenseRecordsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLicenseRecordsResult)(nil)).Elem()
}

func (o GetLicenseRecordsResultOutput) ToGetLicenseRecordsResultOutput() GetLicenseRecordsResultOutput {
	return o
}

func (o GetLicenseRecordsResultOutput) ToGetLicenseRecordsResultOutputWithContext(ctx context.Context) GetLicenseRecordsResultOutput {
	return o
}

func (o GetLicenseRecordsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetLicenseRecordsResult] {
	return pulumix.Output[GetLicenseRecordsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetLicenseRecordsResultOutput) Filters() GetLicenseRecordsFilterArrayOutput {
	return o.ApplyT(func(v GetLicenseRecordsResult) []GetLicenseRecordsFilter { return v.Filters }).(GetLicenseRecordsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetLicenseRecordsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicenseRecordsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of license_record_collection.
func (o GetLicenseRecordsResultOutput) LicenseRecordCollections() GetLicenseRecordsLicenseRecordCollectionArrayOutput {
	return o.ApplyT(func(v GetLicenseRecordsResult) []GetLicenseRecordsLicenseRecordCollection {
		return v.LicenseRecordCollections
	}).(GetLicenseRecordsLicenseRecordCollectionArrayOutput)
}

// The product license [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) with which the license record is associated.
func (o GetLicenseRecordsResultOutput) ProductLicenseId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLicenseRecordsResult) string { return v.ProductLicenseId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLicenseRecordsResultOutput{})
}
