// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package limits

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Limit Definitions in Oracle Cloud Infrastructure Limits service.
//
// Includes a list of resource limits that are currently supported.
// If the 'areQuotasSupported' property is true, you can create quota policies on top of this limit at the
// compartment level.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Limits"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Limits.GetLimitDefinitions(ctx, &limits.GetLimitDefinitionsArgs{
//				CompartmentId: _var.Tenancy_ocid,
//				Name:          pulumi.StringRef(_var.Limit_definition_name),
//				ServiceName:   pulumi.StringRef(oci_limits_service.Test_service.Name),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetLimitDefinitions(ctx *pulumi.Context, args *GetLimitDefinitionsArgs, opts ...pulumi.InvokeOption) (*GetLimitDefinitionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLimitDefinitionsResult
	err := ctx.Invoke("oci:Limits/getLimitDefinitions:getLimitDefinitions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLimitDefinitions.
type GetLimitDefinitionsArgs struct {
	// The OCID of the parent compartment (remember that the tenancy is simply the root compartment).
	CompartmentId string                      `pulumi:"compartmentId"`
	Filters       []GetLimitDefinitionsFilter `pulumi:"filters"`
	// Optional field, filter for a specific resource limit.
	Name *string `pulumi:"name"`
	// The target service name.
	ServiceName *string `pulumi:"serviceName"`
}

// A collection of values returned by getLimitDefinitions.
type GetLimitDefinitionsResult struct {
	CompartmentId string                      `pulumi:"compartmentId"`
	Filters       []GetLimitDefinitionsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id *string `pulumi:"id"`
	// The list of limit_definitions.
	LimitDefinitions []GetLimitDefinitionsLimitDefinition `pulumi:"limitDefinitions"`
	// The resource limit name. To be used for writing policies (in case of quotas) or other programmatic calls.
	Name *string `pulumi:"name"`
	// The service name of the limit.
	ServiceName *string `pulumi:"serviceName"`
}

func GetLimitDefinitionsOutput(ctx *pulumi.Context, args GetLimitDefinitionsOutputArgs, opts ...pulumi.InvokeOption) GetLimitDefinitionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetLimitDefinitionsResult, error) {
			args := v.(GetLimitDefinitionsArgs)
			r, err := GetLimitDefinitions(ctx, &args, opts...)
			var s GetLimitDefinitionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetLimitDefinitionsResultOutput)
}

// A collection of arguments for invoking getLimitDefinitions.
type GetLimitDefinitionsOutputArgs struct {
	// The OCID of the parent compartment (remember that the tenancy is simply the root compartment).
	CompartmentId pulumi.StringInput                  `pulumi:"compartmentId"`
	Filters       GetLimitDefinitionsFilterArrayInput `pulumi:"filters"`
	// Optional field, filter for a specific resource limit.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The target service name.
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
}

func (GetLimitDefinitionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLimitDefinitionsArgs)(nil)).Elem()
}

// A collection of values returned by getLimitDefinitions.
type GetLimitDefinitionsResultOutput struct{ *pulumi.OutputState }

func (GetLimitDefinitionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLimitDefinitionsResult)(nil)).Elem()
}

func (o GetLimitDefinitionsResultOutput) ToGetLimitDefinitionsResultOutput() GetLimitDefinitionsResultOutput {
	return o
}

func (o GetLimitDefinitionsResultOutput) ToGetLimitDefinitionsResultOutputWithContext(ctx context.Context) GetLimitDefinitionsResultOutput {
	return o
}

func (o GetLimitDefinitionsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLimitDefinitionsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetLimitDefinitionsResultOutput) Filters() GetLimitDefinitionsFilterArrayOutput {
	return o.ApplyT(func(v GetLimitDefinitionsResult) []GetLimitDefinitionsFilter { return v.Filters }).(GetLimitDefinitionsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetLimitDefinitionsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLimitDefinitionsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The list of limit_definitions.
func (o GetLimitDefinitionsResultOutput) LimitDefinitions() GetLimitDefinitionsLimitDefinitionArrayOutput {
	return o.ApplyT(func(v GetLimitDefinitionsResult) []GetLimitDefinitionsLimitDefinition { return v.LimitDefinitions }).(GetLimitDefinitionsLimitDefinitionArrayOutput)
}

// The resource limit name. To be used for writing policies (in case of quotas) or other programmatic calls.
func (o GetLimitDefinitionsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLimitDefinitionsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The service name of the limit.
func (o GetLimitDefinitionsResultOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLimitDefinitionsResult) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLimitDefinitionsResultOutput{})
}
