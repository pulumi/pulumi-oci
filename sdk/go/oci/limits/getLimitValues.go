// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package limits

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Limit Values in Oracle Cloud Infrastructure Limits service.
//
// Includes a full list of resource limits belonging to a given service. If subscription Id is provided, limit value for subscription will be returned.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/limits"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := limits.GetLimitValues(ctx, &limits.GetLimitValuesArgs{
//				CompartmentId:      tenancyOcid,
//				ServiceName:        testService.Name,
//				AvailabilityDomain: pulumi.StringRef(limitValueAvailabilityDomain),
//				Name:               pulumi.StringRef(limitValueName),
//				ScopeType:          pulumi.StringRef(limitValueScopeType),
//				SubscriptionId:     pulumi.StringRef(subscriptionOcid),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetLimitValues(ctx *pulumi.Context, args *GetLimitValuesArgs, opts ...pulumi.InvokeOption) (*GetLimitValuesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLimitValuesResult
	err := ctx.Invoke("oci:Limits/getLimitValues:getLimitValues", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLimitValues.
type GetLimitValuesArgs struct {
	// Filter entries by availability domain. This implies that only AD-specific values are returned.
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// The OCID of the parent compartment (remember that the tenancy is simply the root compartment).
	CompartmentId string                 `pulumi:"compartmentId"`
	Filters       []GetLimitValuesFilter `pulumi:"filters"`
	// Optional field, can be used to see a specific resource limit value.
	Name *string `pulumi:"name"`
	// Filter entries by scope type.
	ScopeType *string `pulumi:"scopeType"`
	// The target service name.
	ServiceName string `pulumi:"serviceName"`
	// The OCID of the subscription assigned to tenant
	SubscriptionId *string `pulumi:"subscriptionId"`
}

// A collection of values returned by getLimitValues.
type GetLimitValuesResult struct {
	// If present, the returned value is only specific to this availability domain.
	AvailabilityDomain *string                `pulumi:"availabilityDomain"`
	CompartmentId      string                 `pulumi:"compartmentId"`
	Filters            []GetLimitValuesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of limit_values.
	LimitValues []GetLimitValuesLimitValue `pulumi:"limitValues"`
	// The resource limit name. To be used for writing policies (in case of quotas) or other programmatic calls.
	Name *string `pulumi:"name"`
	// The scope type of the limit.
	ScopeType      *string `pulumi:"scopeType"`
	ServiceName    string  `pulumi:"serviceName"`
	SubscriptionId *string `pulumi:"subscriptionId"`
}

func GetLimitValuesOutput(ctx *pulumi.Context, args GetLimitValuesOutputArgs, opts ...pulumi.InvokeOption) GetLimitValuesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetLimitValuesResultOutput, error) {
			args := v.(GetLimitValuesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Limits/getLimitValues:getLimitValues", args, GetLimitValuesResultOutput{}, options).(GetLimitValuesResultOutput), nil
		}).(GetLimitValuesResultOutput)
}

// A collection of arguments for invoking getLimitValues.
type GetLimitValuesOutputArgs struct {
	// Filter entries by availability domain. This implies that only AD-specific values are returned.
	AvailabilityDomain pulumi.StringPtrInput `pulumi:"availabilityDomain"`
	// The OCID of the parent compartment (remember that the tenancy is simply the root compartment).
	CompartmentId pulumi.StringInput             `pulumi:"compartmentId"`
	Filters       GetLimitValuesFilterArrayInput `pulumi:"filters"`
	// Optional field, can be used to see a specific resource limit value.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Filter entries by scope type.
	ScopeType pulumi.StringPtrInput `pulumi:"scopeType"`
	// The target service name.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	// The OCID of the subscription assigned to tenant
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
}

func (GetLimitValuesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLimitValuesArgs)(nil)).Elem()
}

// A collection of values returned by getLimitValues.
type GetLimitValuesResultOutput struct{ *pulumi.OutputState }

func (GetLimitValuesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLimitValuesResult)(nil)).Elem()
}

func (o GetLimitValuesResultOutput) ToGetLimitValuesResultOutput() GetLimitValuesResultOutput {
	return o
}

func (o GetLimitValuesResultOutput) ToGetLimitValuesResultOutputWithContext(ctx context.Context) GetLimitValuesResultOutput {
	return o
}

// If present, the returned value is only specific to this availability domain.
func (o GetLimitValuesResultOutput) AvailabilityDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLimitValuesResult) *string { return v.AvailabilityDomain }).(pulumi.StringPtrOutput)
}

func (o GetLimitValuesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLimitValuesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetLimitValuesResultOutput) Filters() GetLimitValuesFilterArrayOutput {
	return o.ApplyT(func(v GetLimitValuesResult) []GetLimitValuesFilter { return v.Filters }).(GetLimitValuesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetLimitValuesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLimitValuesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of limit_values.
func (o GetLimitValuesResultOutput) LimitValues() GetLimitValuesLimitValueArrayOutput {
	return o.ApplyT(func(v GetLimitValuesResult) []GetLimitValuesLimitValue { return v.LimitValues }).(GetLimitValuesLimitValueArrayOutput)
}

// The resource limit name. To be used for writing policies (in case of quotas) or other programmatic calls.
func (o GetLimitValuesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLimitValuesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The scope type of the limit.
func (o GetLimitValuesResultOutput) ScopeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLimitValuesResult) *string { return v.ScopeType }).(pulumi.StringPtrOutput)
}

func (o GetLimitValuesResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLimitValuesResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o GetLimitValuesResultOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLimitValuesResult) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLimitValuesResultOutput{})
}
