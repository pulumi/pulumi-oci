// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package limits

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Quota resource in Oracle Cloud Infrastructure Limits service.
//
// Gets the quota for the OCID specified.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Limits"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Limits.GetQuota(ctx, &limits.GetQuotaArgs{
//				QuotaId: oci_limits_quota.Test_quota.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupQuota(ctx *pulumi.Context, args *LookupQuotaArgs, opts ...pulumi.InvokeOption) (*LookupQuotaResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupQuotaResult
	err := ctx.Invoke("oci:Limits/getQuota:getQuota", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getQuota.
type LookupQuotaArgs struct {
	// The OCID of the quota.
	QuotaId string `pulumi:"quotaId"`
}

// A collection of values returned by getQuota.
type LookupQuotaResult struct {
	// The OCID of the compartment containing the resource this quota applies to.
	CompartmentId *string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The description you assign to the quota.
	Description *string `pulumi:"description"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the quota.
	Id             *string `pulumi:"id"`
	IsLockOverride *bool   `pulumi:"isLockOverride"`
	// Locks associated with this resource.
	Locks []GetQuotaLock `pulumi:"locks"`
	// The name you assign to the quota during creation. The name must be unique across all quotas in the tenancy and cannot be changed.
	Name    *string `pulumi:"name"`
	QuotaId string  `pulumi:"quotaId"`
	// The quota's current state.
	State *string `pulumi:"state"`
	// An array of one or more quota statements written in the declarative quota statement language.
	Statements []string `pulumi:"statements"`
	// Date and time the quota was created, in the format defined by RFC 3339. Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
}

func LookupQuotaOutput(ctx *pulumi.Context, args LookupQuotaOutputArgs, opts ...pulumi.InvokeOption) LookupQuotaResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupQuotaResult, error) {
			args := v.(LookupQuotaArgs)
			r, err := LookupQuota(ctx, &args, opts...)
			var s LookupQuotaResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupQuotaResultOutput)
}

// A collection of arguments for invoking getQuota.
type LookupQuotaOutputArgs struct {
	// The OCID of the quota.
	QuotaId pulumi.StringInput `pulumi:"quotaId"`
}

func (LookupQuotaOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupQuotaArgs)(nil)).Elem()
}

// A collection of values returned by getQuota.
type LookupQuotaResultOutput struct{ *pulumi.OutputState }

func (LookupQuotaResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupQuotaResult)(nil)).Elem()
}

func (o LookupQuotaResultOutput) ToLookupQuotaResultOutput() LookupQuotaResultOutput {
	return o
}

func (o LookupQuotaResultOutput) ToLookupQuotaResultOutputWithContext(ctx context.Context) LookupQuotaResultOutput {
	return o
}

// The OCID of the compartment containing the resource this quota applies to.
func (o LookupQuotaResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupQuotaResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o LookupQuotaResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupQuotaResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// The description you assign to the quota.
func (o LookupQuotaResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupQuotaResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o LookupQuotaResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupQuotaResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The OCID of the quota.
func (o LookupQuotaResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupQuotaResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupQuotaResultOutput) IsLockOverride() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupQuotaResult) *bool { return v.IsLockOverride }).(pulumi.BoolPtrOutput)
}

// Locks associated with this resource.
func (o LookupQuotaResultOutput) Locks() GetQuotaLockArrayOutput {
	return o.ApplyT(func(v LookupQuotaResult) []GetQuotaLock { return v.Locks }).(GetQuotaLockArrayOutput)
}

// The name you assign to the quota during creation. The name must be unique across all quotas in the tenancy and cannot be changed.
func (o LookupQuotaResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupQuotaResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupQuotaResultOutput) QuotaId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQuotaResult) string { return v.QuotaId }).(pulumi.StringOutput)
}

// The quota's current state.
func (o LookupQuotaResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupQuotaResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// An array of one or more quota statements written in the declarative quota statement language.
func (o LookupQuotaResultOutput) Statements() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupQuotaResult) []string { return v.Statements }).(pulumi.StringArrayOutput)
}

// Date and time the quota was created, in the format defined by RFC 3339. Example: `2016-08-25T21:10:29.600Z`
func (o LookupQuotaResultOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupQuotaResult) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupQuotaResultOutput{})
}
