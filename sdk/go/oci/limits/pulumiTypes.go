// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package limits

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetLimitDefinitionsFilter struct {
	// Optional field, filter for a specific resource limit.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetLimitDefinitionsFilterInput is an input type that accepts GetLimitDefinitionsFilterArgs and GetLimitDefinitionsFilterOutput values.
// You can construct a concrete instance of `GetLimitDefinitionsFilterInput` via:
//
//          GetLimitDefinitionsFilterArgs{...}
type GetLimitDefinitionsFilterInput interface {
	pulumi.Input

	ToGetLimitDefinitionsFilterOutput() GetLimitDefinitionsFilterOutput
	ToGetLimitDefinitionsFilterOutputWithContext(context.Context) GetLimitDefinitionsFilterOutput
}

type GetLimitDefinitionsFilterArgs struct {
	// Optional field, filter for a specific resource limit.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetLimitDefinitionsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLimitDefinitionsFilter)(nil)).Elem()
}

func (i GetLimitDefinitionsFilterArgs) ToGetLimitDefinitionsFilterOutput() GetLimitDefinitionsFilterOutput {
	return i.ToGetLimitDefinitionsFilterOutputWithContext(context.Background())
}

func (i GetLimitDefinitionsFilterArgs) ToGetLimitDefinitionsFilterOutputWithContext(ctx context.Context) GetLimitDefinitionsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLimitDefinitionsFilterOutput)
}

// GetLimitDefinitionsFilterArrayInput is an input type that accepts GetLimitDefinitionsFilterArray and GetLimitDefinitionsFilterArrayOutput values.
// You can construct a concrete instance of `GetLimitDefinitionsFilterArrayInput` via:
//
//          GetLimitDefinitionsFilterArray{ GetLimitDefinitionsFilterArgs{...} }
type GetLimitDefinitionsFilterArrayInput interface {
	pulumi.Input

	ToGetLimitDefinitionsFilterArrayOutput() GetLimitDefinitionsFilterArrayOutput
	ToGetLimitDefinitionsFilterArrayOutputWithContext(context.Context) GetLimitDefinitionsFilterArrayOutput
}

type GetLimitDefinitionsFilterArray []GetLimitDefinitionsFilterInput

func (GetLimitDefinitionsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLimitDefinitionsFilter)(nil)).Elem()
}

func (i GetLimitDefinitionsFilterArray) ToGetLimitDefinitionsFilterArrayOutput() GetLimitDefinitionsFilterArrayOutput {
	return i.ToGetLimitDefinitionsFilterArrayOutputWithContext(context.Background())
}

func (i GetLimitDefinitionsFilterArray) ToGetLimitDefinitionsFilterArrayOutputWithContext(ctx context.Context) GetLimitDefinitionsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLimitDefinitionsFilterArrayOutput)
}

type GetLimitDefinitionsFilterOutput struct{ *pulumi.OutputState }

func (GetLimitDefinitionsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLimitDefinitionsFilter)(nil)).Elem()
}

func (o GetLimitDefinitionsFilterOutput) ToGetLimitDefinitionsFilterOutput() GetLimitDefinitionsFilterOutput {
	return o
}

func (o GetLimitDefinitionsFilterOutput) ToGetLimitDefinitionsFilterOutputWithContext(ctx context.Context) GetLimitDefinitionsFilterOutput {
	return o
}

// Optional field, filter for a specific resource limit.
func (o GetLimitDefinitionsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLimitDefinitionsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetLimitDefinitionsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetLimitDefinitionsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetLimitDefinitionsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLimitDefinitionsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetLimitDefinitionsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetLimitDefinitionsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLimitDefinitionsFilter)(nil)).Elem()
}

func (o GetLimitDefinitionsFilterArrayOutput) ToGetLimitDefinitionsFilterArrayOutput() GetLimitDefinitionsFilterArrayOutput {
	return o
}

func (o GetLimitDefinitionsFilterArrayOutput) ToGetLimitDefinitionsFilterArrayOutputWithContext(ctx context.Context) GetLimitDefinitionsFilterArrayOutput {
	return o
}

func (o GetLimitDefinitionsFilterArrayOutput) Index(i pulumi.IntInput) GetLimitDefinitionsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLimitDefinitionsFilter {
		return vs[0].([]GetLimitDefinitionsFilter)[vs[1].(int)]
	}).(GetLimitDefinitionsFilterOutput)
}

type GetLimitDefinitionsLimitDefinition struct {
	// If true, quota policies can be created on top of this resource limit.
	AreQuotasSupported bool `pulumi:"areQuotasSupported"`
	// The limit description.
	Description string `pulumi:"description"`
	// Indicates if the limit has been deprecated.
	IsDeprecated bool `pulumi:"isDeprecated"`
	// The limit for this resource has a dynamic value that is based on consumption across all Oracle Cloud Infrastructure services.
	IsDynamic bool `pulumi:"isDynamic"`
	// Indicates if the customer can request a limit increase for this resource.
	IsEligibleForLimitIncrease bool `pulumi:"isEligibleForLimitIncrease"`
	// Reflects whether or not the GetResourceAvailability API is supported for this limit. If not, the API returns an empty JSON response.
	IsResourceAvailabilitySupported bool `pulumi:"isResourceAvailabilitySupported"`
	// Optional field, filter for a specific resource limit.
	Name string `pulumi:"name"`
	// Reflects the scope of the resource limit, whether Global (across all regions), regional, or availability domain-specific.
	ScopeType string `pulumi:"scopeType"`
	// The target service name.
	ServiceName string `pulumi:"serviceName"`
}

// GetLimitDefinitionsLimitDefinitionInput is an input type that accepts GetLimitDefinitionsLimitDefinitionArgs and GetLimitDefinitionsLimitDefinitionOutput values.
// You can construct a concrete instance of `GetLimitDefinitionsLimitDefinitionInput` via:
//
//          GetLimitDefinitionsLimitDefinitionArgs{...}
type GetLimitDefinitionsLimitDefinitionInput interface {
	pulumi.Input

	ToGetLimitDefinitionsLimitDefinitionOutput() GetLimitDefinitionsLimitDefinitionOutput
	ToGetLimitDefinitionsLimitDefinitionOutputWithContext(context.Context) GetLimitDefinitionsLimitDefinitionOutput
}

type GetLimitDefinitionsLimitDefinitionArgs struct {
	// If true, quota policies can be created on top of this resource limit.
	AreQuotasSupported pulumi.BoolInput `pulumi:"areQuotasSupported"`
	// The limit description.
	Description pulumi.StringInput `pulumi:"description"`
	// Indicates if the limit has been deprecated.
	IsDeprecated pulumi.BoolInput `pulumi:"isDeprecated"`
	// The limit for this resource has a dynamic value that is based on consumption across all Oracle Cloud Infrastructure services.
	IsDynamic pulumi.BoolInput `pulumi:"isDynamic"`
	// Indicates if the customer can request a limit increase for this resource.
	IsEligibleForLimitIncrease pulumi.BoolInput `pulumi:"isEligibleForLimitIncrease"`
	// Reflects whether or not the GetResourceAvailability API is supported for this limit. If not, the API returns an empty JSON response.
	IsResourceAvailabilitySupported pulumi.BoolInput `pulumi:"isResourceAvailabilitySupported"`
	// Optional field, filter for a specific resource limit.
	Name pulumi.StringInput `pulumi:"name"`
	// Reflects the scope of the resource limit, whether Global (across all regions), regional, or availability domain-specific.
	ScopeType pulumi.StringInput `pulumi:"scopeType"`
	// The target service name.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (GetLimitDefinitionsLimitDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLimitDefinitionsLimitDefinition)(nil)).Elem()
}

func (i GetLimitDefinitionsLimitDefinitionArgs) ToGetLimitDefinitionsLimitDefinitionOutput() GetLimitDefinitionsLimitDefinitionOutput {
	return i.ToGetLimitDefinitionsLimitDefinitionOutputWithContext(context.Background())
}

func (i GetLimitDefinitionsLimitDefinitionArgs) ToGetLimitDefinitionsLimitDefinitionOutputWithContext(ctx context.Context) GetLimitDefinitionsLimitDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLimitDefinitionsLimitDefinitionOutput)
}

// GetLimitDefinitionsLimitDefinitionArrayInput is an input type that accepts GetLimitDefinitionsLimitDefinitionArray and GetLimitDefinitionsLimitDefinitionArrayOutput values.
// You can construct a concrete instance of `GetLimitDefinitionsLimitDefinitionArrayInput` via:
//
//          GetLimitDefinitionsLimitDefinitionArray{ GetLimitDefinitionsLimitDefinitionArgs{...} }
type GetLimitDefinitionsLimitDefinitionArrayInput interface {
	pulumi.Input

	ToGetLimitDefinitionsLimitDefinitionArrayOutput() GetLimitDefinitionsLimitDefinitionArrayOutput
	ToGetLimitDefinitionsLimitDefinitionArrayOutputWithContext(context.Context) GetLimitDefinitionsLimitDefinitionArrayOutput
}

type GetLimitDefinitionsLimitDefinitionArray []GetLimitDefinitionsLimitDefinitionInput

func (GetLimitDefinitionsLimitDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLimitDefinitionsLimitDefinition)(nil)).Elem()
}

func (i GetLimitDefinitionsLimitDefinitionArray) ToGetLimitDefinitionsLimitDefinitionArrayOutput() GetLimitDefinitionsLimitDefinitionArrayOutput {
	return i.ToGetLimitDefinitionsLimitDefinitionArrayOutputWithContext(context.Background())
}

func (i GetLimitDefinitionsLimitDefinitionArray) ToGetLimitDefinitionsLimitDefinitionArrayOutputWithContext(ctx context.Context) GetLimitDefinitionsLimitDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLimitDefinitionsLimitDefinitionArrayOutput)
}

type GetLimitDefinitionsLimitDefinitionOutput struct{ *pulumi.OutputState }

func (GetLimitDefinitionsLimitDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLimitDefinitionsLimitDefinition)(nil)).Elem()
}

func (o GetLimitDefinitionsLimitDefinitionOutput) ToGetLimitDefinitionsLimitDefinitionOutput() GetLimitDefinitionsLimitDefinitionOutput {
	return o
}

func (o GetLimitDefinitionsLimitDefinitionOutput) ToGetLimitDefinitionsLimitDefinitionOutputWithContext(ctx context.Context) GetLimitDefinitionsLimitDefinitionOutput {
	return o
}

// If true, quota policies can be created on top of this resource limit.
func (o GetLimitDefinitionsLimitDefinitionOutput) AreQuotasSupported() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLimitDefinitionsLimitDefinition) bool { return v.AreQuotasSupported }).(pulumi.BoolOutput)
}

// The limit description.
func (o GetLimitDefinitionsLimitDefinitionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetLimitDefinitionsLimitDefinition) string { return v.Description }).(pulumi.StringOutput)
}

// Indicates if the limit has been deprecated.
func (o GetLimitDefinitionsLimitDefinitionOutput) IsDeprecated() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLimitDefinitionsLimitDefinition) bool { return v.IsDeprecated }).(pulumi.BoolOutput)
}

// The limit for this resource has a dynamic value that is based on consumption across all Oracle Cloud Infrastructure services.
func (o GetLimitDefinitionsLimitDefinitionOutput) IsDynamic() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLimitDefinitionsLimitDefinition) bool { return v.IsDynamic }).(pulumi.BoolOutput)
}

// Indicates if the customer can request a limit increase for this resource.
func (o GetLimitDefinitionsLimitDefinitionOutput) IsEligibleForLimitIncrease() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLimitDefinitionsLimitDefinition) bool { return v.IsEligibleForLimitIncrease }).(pulumi.BoolOutput)
}

// Reflects whether or not the GetResourceAvailability API is supported for this limit. If not, the API returns an empty JSON response.
func (o GetLimitDefinitionsLimitDefinitionOutput) IsResourceAvailabilitySupported() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLimitDefinitionsLimitDefinition) bool { return v.IsResourceAvailabilitySupported }).(pulumi.BoolOutput)
}

// Optional field, filter for a specific resource limit.
func (o GetLimitDefinitionsLimitDefinitionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLimitDefinitionsLimitDefinition) string { return v.Name }).(pulumi.StringOutput)
}

// Reflects the scope of the resource limit, whether Global (across all regions), regional, or availability domain-specific.
func (o GetLimitDefinitionsLimitDefinitionOutput) ScopeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLimitDefinitionsLimitDefinition) string { return v.ScopeType }).(pulumi.StringOutput)
}

// The target service name.
func (o GetLimitDefinitionsLimitDefinitionOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLimitDefinitionsLimitDefinition) string { return v.ServiceName }).(pulumi.StringOutput)
}

type GetLimitDefinitionsLimitDefinitionArrayOutput struct{ *pulumi.OutputState }

func (GetLimitDefinitionsLimitDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLimitDefinitionsLimitDefinition)(nil)).Elem()
}

func (o GetLimitDefinitionsLimitDefinitionArrayOutput) ToGetLimitDefinitionsLimitDefinitionArrayOutput() GetLimitDefinitionsLimitDefinitionArrayOutput {
	return o
}

func (o GetLimitDefinitionsLimitDefinitionArrayOutput) ToGetLimitDefinitionsLimitDefinitionArrayOutputWithContext(ctx context.Context) GetLimitDefinitionsLimitDefinitionArrayOutput {
	return o
}

func (o GetLimitDefinitionsLimitDefinitionArrayOutput) Index(i pulumi.IntInput) GetLimitDefinitionsLimitDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLimitDefinitionsLimitDefinition {
		return vs[0].([]GetLimitDefinitionsLimitDefinition)[vs[1].(int)]
	}).(GetLimitDefinitionsLimitDefinitionOutput)
}

type GetLimitValuesFilter struct {
	// Optional field, can be used to see a specific resource limit value.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetLimitValuesFilterInput is an input type that accepts GetLimitValuesFilterArgs and GetLimitValuesFilterOutput values.
// You can construct a concrete instance of `GetLimitValuesFilterInput` via:
//
//          GetLimitValuesFilterArgs{...}
type GetLimitValuesFilterInput interface {
	pulumi.Input

	ToGetLimitValuesFilterOutput() GetLimitValuesFilterOutput
	ToGetLimitValuesFilterOutputWithContext(context.Context) GetLimitValuesFilterOutput
}

type GetLimitValuesFilterArgs struct {
	// Optional field, can be used to see a specific resource limit value.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetLimitValuesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLimitValuesFilter)(nil)).Elem()
}

func (i GetLimitValuesFilterArgs) ToGetLimitValuesFilterOutput() GetLimitValuesFilterOutput {
	return i.ToGetLimitValuesFilterOutputWithContext(context.Background())
}

func (i GetLimitValuesFilterArgs) ToGetLimitValuesFilterOutputWithContext(ctx context.Context) GetLimitValuesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLimitValuesFilterOutput)
}

// GetLimitValuesFilterArrayInput is an input type that accepts GetLimitValuesFilterArray and GetLimitValuesFilterArrayOutput values.
// You can construct a concrete instance of `GetLimitValuesFilterArrayInput` via:
//
//          GetLimitValuesFilterArray{ GetLimitValuesFilterArgs{...} }
type GetLimitValuesFilterArrayInput interface {
	pulumi.Input

	ToGetLimitValuesFilterArrayOutput() GetLimitValuesFilterArrayOutput
	ToGetLimitValuesFilterArrayOutputWithContext(context.Context) GetLimitValuesFilterArrayOutput
}

type GetLimitValuesFilterArray []GetLimitValuesFilterInput

func (GetLimitValuesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLimitValuesFilter)(nil)).Elem()
}

func (i GetLimitValuesFilterArray) ToGetLimitValuesFilterArrayOutput() GetLimitValuesFilterArrayOutput {
	return i.ToGetLimitValuesFilterArrayOutputWithContext(context.Background())
}

func (i GetLimitValuesFilterArray) ToGetLimitValuesFilterArrayOutputWithContext(ctx context.Context) GetLimitValuesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLimitValuesFilterArrayOutput)
}

type GetLimitValuesFilterOutput struct{ *pulumi.OutputState }

func (GetLimitValuesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLimitValuesFilter)(nil)).Elem()
}

func (o GetLimitValuesFilterOutput) ToGetLimitValuesFilterOutput() GetLimitValuesFilterOutput {
	return o
}

func (o GetLimitValuesFilterOutput) ToGetLimitValuesFilterOutputWithContext(ctx context.Context) GetLimitValuesFilterOutput {
	return o
}

// Optional field, can be used to see a specific resource limit value.
func (o GetLimitValuesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLimitValuesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetLimitValuesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetLimitValuesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetLimitValuesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLimitValuesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetLimitValuesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetLimitValuesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLimitValuesFilter)(nil)).Elem()
}

func (o GetLimitValuesFilterArrayOutput) ToGetLimitValuesFilterArrayOutput() GetLimitValuesFilterArrayOutput {
	return o
}

func (o GetLimitValuesFilterArrayOutput) ToGetLimitValuesFilterArrayOutputWithContext(ctx context.Context) GetLimitValuesFilterArrayOutput {
	return o
}

func (o GetLimitValuesFilterArrayOutput) Index(i pulumi.IntInput) GetLimitValuesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLimitValuesFilter {
		return vs[0].([]GetLimitValuesFilter)[vs[1].(int)]
	}).(GetLimitValuesFilterOutput)
}

type GetLimitValuesLimitValue struct {
	// Filter entries by availability domain. This implies that only AD-specific values are returned.
	AvailabilityDomain string `pulumi:"availabilityDomain"`
	// Optional field, can be used to see a specific resource limit value.
	Name string `pulumi:"name"`
	// Filter entries by scope type.
	ScopeType string `pulumi:"scopeType"`
	// The resource limit value.
	Value string `pulumi:"value"`
}

// GetLimitValuesLimitValueInput is an input type that accepts GetLimitValuesLimitValueArgs and GetLimitValuesLimitValueOutput values.
// You can construct a concrete instance of `GetLimitValuesLimitValueInput` via:
//
//          GetLimitValuesLimitValueArgs{...}
type GetLimitValuesLimitValueInput interface {
	pulumi.Input

	ToGetLimitValuesLimitValueOutput() GetLimitValuesLimitValueOutput
	ToGetLimitValuesLimitValueOutputWithContext(context.Context) GetLimitValuesLimitValueOutput
}

type GetLimitValuesLimitValueArgs struct {
	// Filter entries by availability domain. This implies that only AD-specific values are returned.
	AvailabilityDomain pulumi.StringInput `pulumi:"availabilityDomain"`
	// Optional field, can be used to see a specific resource limit value.
	Name pulumi.StringInput `pulumi:"name"`
	// Filter entries by scope type.
	ScopeType pulumi.StringInput `pulumi:"scopeType"`
	// The resource limit value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetLimitValuesLimitValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLimitValuesLimitValue)(nil)).Elem()
}

func (i GetLimitValuesLimitValueArgs) ToGetLimitValuesLimitValueOutput() GetLimitValuesLimitValueOutput {
	return i.ToGetLimitValuesLimitValueOutputWithContext(context.Background())
}

func (i GetLimitValuesLimitValueArgs) ToGetLimitValuesLimitValueOutputWithContext(ctx context.Context) GetLimitValuesLimitValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLimitValuesLimitValueOutput)
}

// GetLimitValuesLimitValueArrayInput is an input type that accepts GetLimitValuesLimitValueArray and GetLimitValuesLimitValueArrayOutput values.
// You can construct a concrete instance of `GetLimitValuesLimitValueArrayInput` via:
//
//          GetLimitValuesLimitValueArray{ GetLimitValuesLimitValueArgs{...} }
type GetLimitValuesLimitValueArrayInput interface {
	pulumi.Input

	ToGetLimitValuesLimitValueArrayOutput() GetLimitValuesLimitValueArrayOutput
	ToGetLimitValuesLimitValueArrayOutputWithContext(context.Context) GetLimitValuesLimitValueArrayOutput
}

type GetLimitValuesLimitValueArray []GetLimitValuesLimitValueInput

func (GetLimitValuesLimitValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLimitValuesLimitValue)(nil)).Elem()
}

func (i GetLimitValuesLimitValueArray) ToGetLimitValuesLimitValueArrayOutput() GetLimitValuesLimitValueArrayOutput {
	return i.ToGetLimitValuesLimitValueArrayOutputWithContext(context.Background())
}

func (i GetLimitValuesLimitValueArray) ToGetLimitValuesLimitValueArrayOutputWithContext(ctx context.Context) GetLimitValuesLimitValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLimitValuesLimitValueArrayOutput)
}

type GetLimitValuesLimitValueOutput struct{ *pulumi.OutputState }

func (GetLimitValuesLimitValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLimitValuesLimitValue)(nil)).Elem()
}

func (o GetLimitValuesLimitValueOutput) ToGetLimitValuesLimitValueOutput() GetLimitValuesLimitValueOutput {
	return o
}

func (o GetLimitValuesLimitValueOutput) ToGetLimitValuesLimitValueOutputWithContext(ctx context.Context) GetLimitValuesLimitValueOutput {
	return o
}

// Filter entries by availability domain. This implies that only AD-specific values are returned.
func (o GetLimitValuesLimitValueOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetLimitValuesLimitValue) string { return v.AvailabilityDomain }).(pulumi.StringOutput)
}

// Optional field, can be used to see a specific resource limit value.
func (o GetLimitValuesLimitValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLimitValuesLimitValue) string { return v.Name }).(pulumi.StringOutput)
}

// Filter entries by scope type.
func (o GetLimitValuesLimitValueOutput) ScopeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLimitValuesLimitValue) string { return v.ScopeType }).(pulumi.StringOutput)
}

// The resource limit value.
func (o GetLimitValuesLimitValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetLimitValuesLimitValue) string { return v.Value }).(pulumi.StringOutput)
}

type GetLimitValuesLimitValueArrayOutput struct{ *pulumi.OutputState }

func (GetLimitValuesLimitValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLimitValuesLimitValue)(nil)).Elem()
}

func (o GetLimitValuesLimitValueArrayOutput) ToGetLimitValuesLimitValueArrayOutput() GetLimitValuesLimitValueArrayOutput {
	return o
}

func (o GetLimitValuesLimitValueArrayOutput) ToGetLimitValuesLimitValueArrayOutputWithContext(ctx context.Context) GetLimitValuesLimitValueArrayOutput {
	return o
}

func (o GetLimitValuesLimitValueArrayOutput) Index(i pulumi.IntInput) GetLimitValuesLimitValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLimitValuesLimitValue {
		return vs[0].([]GetLimitValuesLimitValue)[vs[1].(int)]
	}).(GetLimitValuesLimitValueOutput)
}

type GetQuotasFilter struct {
	// name
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetQuotasFilterInput is an input type that accepts GetQuotasFilterArgs and GetQuotasFilterOutput values.
// You can construct a concrete instance of `GetQuotasFilterInput` via:
//
//          GetQuotasFilterArgs{...}
type GetQuotasFilterInput interface {
	pulumi.Input

	ToGetQuotasFilterOutput() GetQuotasFilterOutput
	ToGetQuotasFilterOutputWithContext(context.Context) GetQuotasFilterOutput
}

type GetQuotasFilterArgs struct {
	// name
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetQuotasFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuotasFilter)(nil)).Elem()
}

func (i GetQuotasFilterArgs) ToGetQuotasFilterOutput() GetQuotasFilterOutput {
	return i.ToGetQuotasFilterOutputWithContext(context.Background())
}

func (i GetQuotasFilterArgs) ToGetQuotasFilterOutputWithContext(ctx context.Context) GetQuotasFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuotasFilterOutput)
}

// GetQuotasFilterArrayInput is an input type that accepts GetQuotasFilterArray and GetQuotasFilterArrayOutput values.
// You can construct a concrete instance of `GetQuotasFilterArrayInput` via:
//
//          GetQuotasFilterArray{ GetQuotasFilterArgs{...} }
type GetQuotasFilterArrayInput interface {
	pulumi.Input

	ToGetQuotasFilterArrayOutput() GetQuotasFilterArrayOutput
	ToGetQuotasFilterArrayOutputWithContext(context.Context) GetQuotasFilterArrayOutput
}

type GetQuotasFilterArray []GetQuotasFilterInput

func (GetQuotasFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuotasFilter)(nil)).Elem()
}

func (i GetQuotasFilterArray) ToGetQuotasFilterArrayOutput() GetQuotasFilterArrayOutput {
	return i.ToGetQuotasFilterArrayOutputWithContext(context.Background())
}

func (i GetQuotasFilterArray) ToGetQuotasFilterArrayOutputWithContext(ctx context.Context) GetQuotasFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuotasFilterArrayOutput)
}

type GetQuotasFilterOutput struct{ *pulumi.OutputState }

func (GetQuotasFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuotasFilter)(nil)).Elem()
}

func (o GetQuotasFilterOutput) ToGetQuotasFilterOutput() GetQuotasFilterOutput {
	return o
}

func (o GetQuotasFilterOutput) ToGetQuotasFilterOutputWithContext(ctx context.Context) GetQuotasFilterOutput {
	return o
}

// name
func (o GetQuotasFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotasFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetQuotasFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetQuotasFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetQuotasFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetQuotasFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetQuotasFilterArrayOutput struct{ *pulumi.OutputState }

func (GetQuotasFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuotasFilter)(nil)).Elem()
}

func (o GetQuotasFilterArrayOutput) ToGetQuotasFilterArrayOutput() GetQuotasFilterArrayOutput {
	return o
}

func (o GetQuotasFilterArrayOutput) ToGetQuotasFilterArrayOutputWithContext(ctx context.Context) GetQuotasFilterArrayOutput {
	return o
}

func (o GetQuotasFilterArrayOutput) Index(i pulumi.IntInput) GetQuotasFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQuotasFilter {
		return vs[0].([]GetQuotasFilter)[vs[1].(int)]
	}).(GetQuotasFilterOutput)
}

type GetQuotasQuota struct {
	// The OCID of the parent compartment (remember that the tenancy is simply the root compartment).
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The description you assign to the quota.
	Description string `pulumi:"description"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the quota.
	Id string `pulumi:"id"`
	// name
	Name string `pulumi:"name"`
	// Filters returned quotas based on the given state.
	State string `pulumi:"state"`
	// An array of one or more quota statements written in the declarative quota statement language.
	Statements []string `pulumi:"statements"`
	// Date and time the quota was created, in the format defined by RFC 3339. Example: `2016-08-25T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
}

// GetQuotasQuotaInput is an input type that accepts GetQuotasQuotaArgs and GetQuotasQuotaOutput values.
// You can construct a concrete instance of `GetQuotasQuotaInput` via:
//
//          GetQuotasQuotaArgs{...}
type GetQuotasQuotaInput interface {
	pulumi.Input

	ToGetQuotasQuotaOutput() GetQuotasQuotaOutput
	ToGetQuotasQuotaOutputWithContext(context.Context) GetQuotasQuotaOutput
}

type GetQuotasQuotaArgs struct {
	// The OCID of the parent compartment (remember that the tenancy is simply the root compartment).
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// The description you assign to the quota.
	Description pulumi.StringInput `pulumi:"description"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The OCID of the quota.
	Id pulumi.StringInput `pulumi:"id"`
	// name
	Name pulumi.StringInput `pulumi:"name"`
	// Filters returned quotas based on the given state.
	State pulumi.StringInput `pulumi:"state"`
	// An array of one or more quota statements written in the declarative quota statement language.
	Statements pulumi.StringArrayInput `pulumi:"statements"`
	// Date and time the quota was created, in the format defined by RFC 3339. Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
}

func (GetQuotasQuotaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuotasQuota)(nil)).Elem()
}

func (i GetQuotasQuotaArgs) ToGetQuotasQuotaOutput() GetQuotasQuotaOutput {
	return i.ToGetQuotasQuotaOutputWithContext(context.Background())
}

func (i GetQuotasQuotaArgs) ToGetQuotasQuotaOutputWithContext(ctx context.Context) GetQuotasQuotaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuotasQuotaOutput)
}

// GetQuotasQuotaArrayInput is an input type that accepts GetQuotasQuotaArray and GetQuotasQuotaArrayOutput values.
// You can construct a concrete instance of `GetQuotasQuotaArrayInput` via:
//
//          GetQuotasQuotaArray{ GetQuotasQuotaArgs{...} }
type GetQuotasQuotaArrayInput interface {
	pulumi.Input

	ToGetQuotasQuotaArrayOutput() GetQuotasQuotaArrayOutput
	ToGetQuotasQuotaArrayOutputWithContext(context.Context) GetQuotasQuotaArrayOutput
}

type GetQuotasQuotaArray []GetQuotasQuotaInput

func (GetQuotasQuotaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuotasQuota)(nil)).Elem()
}

func (i GetQuotasQuotaArray) ToGetQuotasQuotaArrayOutput() GetQuotasQuotaArrayOutput {
	return i.ToGetQuotasQuotaArrayOutputWithContext(context.Background())
}

func (i GetQuotasQuotaArray) ToGetQuotasQuotaArrayOutputWithContext(ctx context.Context) GetQuotasQuotaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuotasQuotaArrayOutput)
}

type GetQuotasQuotaOutput struct{ *pulumi.OutputState }

func (GetQuotasQuotaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuotasQuota)(nil)).Elem()
}

func (o GetQuotasQuotaOutput) ToGetQuotasQuotaOutput() GetQuotasQuotaOutput {
	return o
}

func (o GetQuotasQuotaOutput) ToGetQuotasQuotaOutputWithContext(ctx context.Context) GetQuotasQuotaOutput {
	return o
}

// The OCID of the parent compartment (remember that the tenancy is simply the root compartment).
func (o GetQuotasQuotaOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotasQuota) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o GetQuotasQuotaOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetQuotasQuota) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// The description you assign to the quota.
func (o GetQuotasQuotaOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotasQuota) string { return v.Description }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o GetQuotasQuotaOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetQuotasQuota) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The OCID of the quota.
func (o GetQuotasQuotaOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotasQuota) string { return v.Id }).(pulumi.StringOutput)
}

// name
func (o GetQuotasQuotaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotasQuota) string { return v.Name }).(pulumi.StringOutput)
}

// Filters returned quotas based on the given state.
func (o GetQuotasQuotaOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotasQuota) string { return v.State }).(pulumi.StringOutput)
}

// An array of one or more quota statements written in the declarative quota statement language.
func (o GetQuotasQuotaOutput) Statements() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetQuotasQuota) []string { return v.Statements }).(pulumi.StringArrayOutput)
}

// Date and time the quota was created, in the format defined by RFC 3339. Example: `2016-08-25T21:10:29.600Z`
func (o GetQuotasQuotaOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotasQuota) string { return v.TimeCreated }).(pulumi.StringOutput)
}

type GetQuotasQuotaArrayOutput struct{ *pulumi.OutputState }

func (GetQuotasQuotaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuotasQuota)(nil)).Elem()
}

func (o GetQuotasQuotaArrayOutput) ToGetQuotasQuotaArrayOutput() GetQuotasQuotaArrayOutput {
	return o
}

func (o GetQuotasQuotaArrayOutput) ToGetQuotasQuotaArrayOutputWithContext(ctx context.Context) GetQuotasQuotaArrayOutput {
	return o
}

func (o GetQuotasQuotaArrayOutput) Index(i pulumi.IntInput) GetQuotasQuotaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQuotasQuota {
		return vs[0].([]GetQuotasQuota)[vs[1].(int)]
	}).(GetQuotasQuotaOutput)
}

type GetServicesFilter struct {
	// The service name. Use this when calling other APIs.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetServicesFilterInput is an input type that accepts GetServicesFilterArgs and GetServicesFilterOutput values.
// You can construct a concrete instance of `GetServicesFilterInput` via:
//
//          GetServicesFilterArgs{...}
type GetServicesFilterInput interface {
	pulumi.Input

	ToGetServicesFilterOutput() GetServicesFilterOutput
	ToGetServicesFilterOutputWithContext(context.Context) GetServicesFilterOutput
}

type GetServicesFilterArgs struct {
	// The service name. Use this when calling other APIs.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetServicesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicesFilter)(nil)).Elem()
}

func (i GetServicesFilterArgs) ToGetServicesFilterOutput() GetServicesFilterOutput {
	return i.ToGetServicesFilterOutputWithContext(context.Background())
}

func (i GetServicesFilterArgs) ToGetServicesFilterOutputWithContext(ctx context.Context) GetServicesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicesFilterOutput)
}

// GetServicesFilterArrayInput is an input type that accepts GetServicesFilterArray and GetServicesFilterArrayOutput values.
// You can construct a concrete instance of `GetServicesFilterArrayInput` via:
//
//          GetServicesFilterArray{ GetServicesFilterArgs{...} }
type GetServicesFilterArrayInput interface {
	pulumi.Input

	ToGetServicesFilterArrayOutput() GetServicesFilterArrayOutput
	ToGetServicesFilterArrayOutputWithContext(context.Context) GetServicesFilterArrayOutput
}

type GetServicesFilterArray []GetServicesFilterInput

func (GetServicesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServicesFilter)(nil)).Elem()
}

func (i GetServicesFilterArray) ToGetServicesFilterArrayOutput() GetServicesFilterArrayOutput {
	return i.ToGetServicesFilterArrayOutputWithContext(context.Background())
}

func (i GetServicesFilterArray) ToGetServicesFilterArrayOutputWithContext(ctx context.Context) GetServicesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicesFilterArrayOutput)
}

type GetServicesFilterOutput struct{ *pulumi.OutputState }

func (GetServicesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicesFilter)(nil)).Elem()
}

func (o GetServicesFilterOutput) ToGetServicesFilterOutput() GetServicesFilterOutput {
	return o
}

func (o GetServicesFilterOutput) ToGetServicesFilterOutputWithContext(ctx context.Context) GetServicesFilterOutput {
	return o
}

// The service name. Use this when calling other APIs.
func (o GetServicesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetServicesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetServicesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetServicesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServicesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetServicesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetServicesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServicesFilter)(nil)).Elem()
}

func (o GetServicesFilterArrayOutput) ToGetServicesFilterArrayOutput() GetServicesFilterArrayOutput {
	return o
}

func (o GetServicesFilterArrayOutput) ToGetServicesFilterArrayOutputWithContext(ctx context.Context) GetServicesFilterArrayOutput {
	return o
}

func (o GetServicesFilterArrayOutput) Index(i pulumi.IntInput) GetServicesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServicesFilter {
		return vs[0].([]GetServicesFilter)[vs[1].(int)]
	}).(GetServicesFilterOutput)
}

type GetServicesService struct {
	// The friendly service name.
	Description string `pulumi:"description"`
	// The service name. Use this when calling other APIs.
	Name string `pulumi:"name"`
}

// GetServicesServiceInput is an input type that accepts GetServicesServiceArgs and GetServicesServiceOutput values.
// You can construct a concrete instance of `GetServicesServiceInput` via:
//
//          GetServicesServiceArgs{...}
type GetServicesServiceInput interface {
	pulumi.Input

	ToGetServicesServiceOutput() GetServicesServiceOutput
	ToGetServicesServiceOutputWithContext(context.Context) GetServicesServiceOutput
}

type GetServicesServiceArgs struct {
	// The friendly service name.
	Description pulumi.StringInput `pulumi:"description"`
	// The service name. Use this when calling other APIs.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetServicesServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicesService)(nil)).Elem()
}

func (i GetServicesServiceArgs) ToGetServicesServiceOutput() GetServicesServiceOutput {
	return i.ToGetServicesServiceOutputWithContext(context.Background())
}

func (i GetServicesServiceArgs) ToGetServicesServiceOutputWithContext(ctx context.Context) GetServicesServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicesServiceOutput)
}

// GetServicesServiceArrayInput is an input type that accepts GetServicesServiceArray and GetServicesServiceArrayOutput values.
// You can construct a concrete instance of `GetServicesServiceArrayInput` via:
//
//          GetServicesServiceArray{ GetServicesServiceArgs{...} }
type GetServicesServiceArrayInput interface {
	pulumi.Input

	ToGetServicesServiceArrayOutput() GetServicesServiceArrayOutput
	ToGetServicesServiceArrayOutputWithContext(context.Context) GetServicesServiceArrayOutput
}

type GetServicesServiceArray []GetServicesServiceInput

func (GetServicesServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServicesService)(nil)).Elem()
}

func (i GetServicesServiceArray) ToGetServicesServiceArrayOutput() GetServicesServiceArrayOutput {
	return i.ToGetServicesServiceArrayOutputWithContext(context.Background())
}

func (i GetServicesServiceArray) ToGetServicesServiceArrayOutputWithContext(ctx context.Context) GetServicesServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicesServiceArrayOutput)
}

type GetServicesServiceOutput struct{ *pulumi.OutputState }

func (GetServicesServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicesService)(nil)).Elem()
}

func (o GetServicesServiceOutput) ToGetServicesServiceOutput() GetServicesServiceOutput {
	return o
}

func (o GetServicesServiceOutput) ToGetServicesServiceOutputWithContext(ctx context.Context) GetServicesServiceOutput {
	return o
}

// The friendly service name.
func (o GetServicesServiceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicesService) string { return v.Description }).(pulumi.StringOutput)
}

// The service name. Use this when calling other APIs.
func (o GetServicesServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicesService) string { return v.Name }).(pulumi.StringOutput)
}

type GetServicesServiceArrayOutput struct{ *pulumi.OutputState }

func (GetServicesServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServicesService)(nil)).Elem()
}

func (o GetServicesServiceArrayOutput) ToGetServicesServiceArrayOutput() GetServicesServiceArrayOutput {
	return o
}

func (o GetServicesServiceArrayOutput) ToGetServicesServiceArrayOutputWithContext(ctx context.Context) GetServicesServiceArrayOutput {
	return o
}

func (o GetServicesServiceArrayOutput) Index(i pulumi.IntInput) GetServicesServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServicesService {
		return vs[0].([]GetServicesService)[vs[1].(int)]
	}).(GetServicesServiceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetLimitDefinitionsFilterInput)(nil)).Elem(), GetLimitDefinitionsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLimitDefinitionsFilterArrayInput)(nil)).Elem(), GetLimitDefinitionsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLimitDefinitionsLimitDefinitionInput)(nil)).Elem(), GetLimitDefinitionsLimitDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLimitDefinitionsLimitDefinitionArrayInput)(nil)).Elem(), GetLimitDefinitionsLimitDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLimitValuesFilterInput)(nil)).Elem(), GetLimitValuesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLimitValuesFilterArrayInput)(nil)).Elem(), GetLimitValuesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLimitValuesLimitValueInput)(nil)).Elem(), GetLimitValuesLimitValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLimitValuesLimitValueArrayInput)(nil)).Elem(), GetLimitValuesLimitValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQuotasFilterInput)(nil)).Elem(), GetQuotasFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQuotasFilterArrayInput)(nil)).Elem(), GetQuotasFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQuotasQuotaInput)(nil)).Elem(), GetQuotasQuotaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQuotasQuotaArrayInput)(nil)).Elem(), GetQuotasQuotaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServicesFilterInput)(nil)).Elem(), GetServicesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServicesFilterArrayInput)(nil)).Elem(), GetServicesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServicesServiceInput)(nil)).Elem(), GetServicesServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServicesServiceArrayInput)(nil)).Elem(), GetServicesServiceArray{})
	pulumi.RegisterOutputType(GetLimitDefinitionsFilterOutput{})
	pulumi.RegisterOutputType(GetLimitDefinitionsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLimitDefinitionsLimitDefinitionOutput{})
	pulumi.RegisterOutputType(GetLimitDefinitionsLimitDefinitionArrayOutput{})
	pulumi.RegisterOutputType(GetLimitValuesFilterOutput{})
	pulumi.RegisterOutputType(GetLimitValuesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLimitValuesLimitValueOutput{})
	pulumi.RegisterOutputType(GetLimitValuesLimitValueArrayOutput{})
	pulumi.RegisterOutputType(GetQuotasFilterOutput{})
	pulumi.RegisterOutputType(GetQuotasFilterArrayOutput{})
	pulumi.RegisterOutputType(GetQuotasQuotaOutput{})
	pulumi.RegisterOutputType(GetQuotasQuotaArrayOutput{})
	pulumi.RegisterOutputType(GetServicesFilterOutput{})
	pulumi.RegisterOutputType(GetServicesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetServicesServiceOutput{})
	pulumi.RegisterOutputType(GetServicesServiceArrayOutput{})
}
