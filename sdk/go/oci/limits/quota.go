// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package limits

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Quota resource in Oracle Cloud Infrastructure Limits service.
//
// Creates a new quota with the details supplied.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Limits"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Limits.NewQuota(ctx, "testQuota", &Limits.QuotaArgs{
//				CompartmentId: pulumi.Any(_var.Tenancy_ocid),
//				Description:   pulumi.Any(_var.Quota_description),
//				Name:          pulumi.Any(_var.Quota_name),
//				Statements:    pulumi.Any(_var.Quota_statements),
//				DefinedTags: pulumi.AnyMap{
//					"Operations.CostCenter": pulumi.Any("42"),
//				},
//				FreeformTags: pulumi.AnyMap{
//					"Department": pulumi.Any("Finance"),
//				},
//				Locks: limits.QuotaLockArray{
//					&limits.QuotaLockArgs{
//						Type:              pulumi.Any(_var.Quota_locks_type),
//						Message:           pulumi.Any(_var.Quota_locks_message),
//						RelatedResourceId: pulumi.Any(oci_limits_related_resource.Test_related_resource.Id),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Quotas can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:Limits/quota:Quota test_quota "id"
//
// ```
type Quota struct {
	pulumi.CustomResourceState

	// The OCID of the compartment containing the resource this quota applies to.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) The description you assign to the quota.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// this is a computed field which is set to true if any lock is present`
	IsLockOverride pulumi.BoolOutput `pulumi:"isLockOverride"`
	// Locks associated with this resource.
	Locks QuotaLockArrayOutput `pulumi:"locks"`
	// The name you assign to the quota during creation. The name must be unique across all quotas in the tenancy and cannot be changed.
	Name pulumi.StringOutput `pulumi:"name"`
	// The quota's current state.
	State pulumi.StringOutput `pulumi:"state"`
	// (Updatable) An array of quota statements written in the declarative quota statement language.
	Statements pulumi.StringArrayOutput `pulumi:"statements"`
	// Date and time the quota was created, in the format defined by RFC 3339. Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewQuota registers a new resource with the given unique name, arguments, and options.
func NewQuota(ctx *pulumi.Context,
	name string, args *QuotaArgs, opts ...pulumi.ResourceOption) (*Quota, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.Statements == nil {
		return nil, errors.New("invalid value for required argument 'Statements'")
	}
	var resource Quota
	err := ctx.RegisterResource("oci:Limits/quota:Quota", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetQuota gets an existing Quota resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetQuota(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *QuotaState, opts ...pulumi.ResourceOption) (*Quota, error) {
	var resource Quota
	err := ctx.ReadResource("oci:Limits/quota:Quota", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Quota resources.
type quotaState struct {
	// The OCID of the compartment containing the resource this quota applies to.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The description you assign to the quota.
	Description *string `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// this is a computed field which is set to true if any lock is present`
	IsLockOverride *bool `pulumi:"isLockOverride"`
	// Locks associated with this resource.
	Locks []QuotaLock `pulumi:"locks"`
	// The name you assign to the quota during creation. The name must be unique across all quotas in the tenancy and cannot be changed.
	Name *string `pulumi:"name"`
	// The quota's current state.
	State *string `pulumi:"state"`
	// (Updatable) An array of quota statements written in the declarative quota statement language.
	Statements []string `pulumi:"statements"`
	// Date and time the quota was created, in the format defined by RFC 3339. Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
}

type QuotaState struct {
	// The OCID of the compartment containing the resource this quota applies to.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The description you assign to the quota.
	Description pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// this is a computed field which is set to true if any lock is present`
	IsLockOverride pulumi.BoolPtrInput
	// Locks associated with this resource.
	Locks QuotaLockArrayInput
	// The name you assign to the quota during creation. The name must be unique across all quotas in the tenancy and cannot be changed.
	Name pulumi.StringPtrInput
	// The quota's current state.
	State pulumi.StringPtrInput
	// (Updatable) An array of quota statements written in the declarative quota statement language.
	Statements pulumi.StringArrayInput
	// Date and time the quota was created, in the format defined by RFC 3339. Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
}

func (QuotaState) ElementType() reflect.Type {
	return reflect.TypeOf((*quotaState)(nil)).Elem()
}

type quotaArgs struct {
	// The OCID of the compartment containing the resource this quota applies to.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The description you assign to the quota.
	Description string `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Locks associated with this resource.
	Locks []QuotaLock `pulumi:"locks"`
	// The name you assign to the quota during creation. The name must be unique across all quotas in the tenancy and cannot be changed.
	Name string `pulumi:"name"`
	// (Updatable) An array of quota statements written in the declarative quota statement language.
	Statements []string `pulumi:"statements"`
}

// The set of arguments for constructing a Quota resource.
type QuotaArgs struct {
	// The OCID of the compartment containing the resource this quota applies to.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The description you assign to the quota.
	Description pulumi.StringInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// Locks associated with this resource.
	Locks QuotaLockArrayInput
	// The name you assign to the quota during creation. The name must be unique across all quotas in the tenancy and cannot be changed.
	Name pulumi.StringInput
	// (Updatable) An array of quota statements written in the declarative quota statement language.
	Statements pulumi.StringArrayInput
}

func (QuotaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*quotaArgs)(nil)).Elem()
}

type QuotaInput interface {
	pulumi.Input

	ToQuotaOutput() QuotaOutput
	ToQuotaOutputWithContext(ctx context.Context) QuotaOutput
}

func (*Quota) ElementType() reflect.Type {
	return reflect.TypeOf((**Quota)(nil)).Elem()
}

func (i *Quota) ToQuotaOutput() QuotaOutput {
	return i.ToQuotaOutputWithContext(context.Background())
}

func (i *Quota) ToQuotaOutputWithContext(ctx context.Context) QuotaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuotaOutput)
}

// QuotaArrayInput is an input type that accepts QuotaArray and QuotaArrayOutput values.
// You can construct a concrete instance of `QuotaArrayInput` via:
//
//	QuotaArray{ QuotaArgs{...} }
type QuotaArrayInput interface {
	pulumi.Input

	ToQuotaArrayOutput() QuotaArrayOutput
	ToQuotaArrayOutputWithContext(context.Context) QuotaArrayOutput
}

type QuotaArray []QuotaInput

func (QuotaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Quota)(nil)).Elem()
}

func (i QuotaArray) ToQuotaArrayOutput() QuotaArrayOutput {
	return i.ToQuotaArrayOutputWithContext(context.Background())
}

func (i QuotaArray) ToQuotaArrayOutputWithContext(ctx context.Context) QuotaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuotaArrayOutput)
}

// QuotaMapInput is an input type that accepts QuotaMap and QuotaMapOutput values.
// You can construct a concrete instance of `QuotaMapInput` via:
//
//	QuotaMap{ "key": QuotaArgs{...} }
type QuotaMapInput interface {
	pulumi.Input

	ToQuotaMapOutput() QuotaMapOutput
	ToQuotaMapOutputWithContext(context.Context) QuotaMapOutput
}

type QuotaMap map[string]QuotaInput

func (QuotaMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Quota)(nil)).Elem()
}

func (i QuotaMap) ToQuotaMapOutput() QuotaMapOutput {
	return i.ToQuotaMapOutputWithContext(context.Background())
}

func (i QuotaMap) ToQuotaMapOutputWithContext(ctx context.Context) QuotaMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuotaMapOutput)
}

type QuotaOutput struct{ *pulumi.OutputState }

func (QuotaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Quota)(nil)).Elem()
}

func (o QuotaOutput) ToQuotaOutput() QuotaOutput {
	return o
}

func (o QuotaOutput) ToQuotaOutputWithContext(ctx context.Context) QuotaOutput {
	return o
}

// The OCID of the compartment containing the resource this quota applies to.
func (o QuotaOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Quota) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o QuotaOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *Quota) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) The description you assign to the quota.
func (o QuotaOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Quota) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o QuotaOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *Quota) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// this is a computed field which is set to true if any lock is present`
func (o QuotaOutput) IsLockOverride() pulumi.BoolOutput {
	return o.ApplyT(func(v *Quota) pulumi.BoolOutput { return v.IsLockOverride }).(pulumi.BoolOutput)
}

// Locks associated with this resource.
func (o QuotaOutput) Locks() QuotaLockArrayOutput {
	return o.ApplyT(func(v *Quota) QuotaLockArrayOutput { return v.Locks }).(QuotaLockArrayOutput)
}

// The name you assign to the quota during creation. The name must be unique across all quotas in the tenancy and cannot be changed.
func (o QuotaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Quota) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The quota's current state.
func (o QuotaOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Quota) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// (Updatable) An array of quota statements written in the declarative quota statement language.
func (o QuotaOutput) Statements() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Quota) pulumi.StringArrayOutput { return v.Statements }).(pulumi.StringArrayOutput)
}

// Date and time the quota was created, in the format defined by RFC 3339. Example: `2016-08-25T21:10:29.600Z`
func (o QuotaOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *Quota) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

type QuotaArrayOutput struct{ *pulumi.OutputState }

func (QuotaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Quota)(nil)).Elem()
}

func (o QuotaArrayOutput) ToQuotaArrayOutput() QuotaArrayOutput {
	return o
}

func (o QuotaArrayOutput) ToQuotaArrayOutputWithContext(ctx context.Context) QuotaArrayOutput {
	return o
}

func (o QuotaArrayOutput) Index(i pulumi.IntInput) QuotaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Quota {
		return vs[0].([]*Quota)[vs[1].(int)]
	}).(QuotaOutput)
}

type QuotaMapOutput struct{ *pulumi.OutputState }

func (QuotaMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Quota)(nil)).Elem()
}

func (o QuotaMapOutput) ToQuotaMapOutput() QuotaMapOutput {
	return o
}

func (o QuotaMapOutput) ToQuotaMapOutputWithContext(ctx context.Context) QuotaMapOutput {
	return o
}

func (o QuotaMapOutput) MapIndex(k pulumi.StringInput) QuotaOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Quota {
		return vs[0].(map[string]*Quota)[vs[1].(string)]
	}).(QuotaOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*QuotaInput)(nil)).Elem(), &Quota{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuotaArrayInput)(nil)).Elem(), QuotaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuotaMapInput)(nil)).Elem(), QuotaMap{})
	pulumi.RegisterOutputType(QuotaOutput{})
	pulumi.RegisterOutputType(QuotaArrayOutput{})
	pulumi.RegisterOutputType(QuotaMapOutput{})
}
