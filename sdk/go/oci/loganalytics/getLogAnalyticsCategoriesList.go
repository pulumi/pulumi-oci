// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package loganalytics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about Categories in Oracle Cloud Infrastructure Log Analytics service.
//
// Returns a list of categories, containing detailed information about them. You may limit the number of results, provide sorting order, and filter by information such as category name or description.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/LogAnalytics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := LogAnalytics.GetLogAnalyticsCategoriesList(ctx, &loganalytics.GetLogAnalyticsCategoriesListArgs{
//				Namespace:           _var.Log_analytics_categories_list_namespace,
//				CategoryDisplayText: pulumi.StringRef(_var.Log_analytics_categories_list_category_display_text),
//				CategoryType:        pulumi.StringRef(_var.Log_analytics_categories_list_category_type),
//				Name:                pulumi.StringRef(_var.Log_analytics_categories_list_name),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetLogAnalyticsCategoriesList(ctx *pulumi.Context, args *GetLogAnalyticsCategoriesListArgs, opts ...pulumi.InvokeOption) (*GetLogAnalyticsCategoriesListResult, error) {
	var rv GetLogAnalyticsCategoriesListResult
	err := ctx.Invoke("oci:LogAnalytics/getLogAnalyticsCategoriesList:getLogAnalyticsCategoriesList", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLogAnalyticsCategoriesList.
type GetLogAnalyticsCategoriesListArgs struct {
	// The category display text used for filtering. Only categories matching the specified display name or description will be returned.
	CategoryDisplayText *string `pulumi:"categoryDisplayText"`
	// A comma-separated list of category types used for filtering. Only categories of the specified types will be returned.
	CategoryType *string `pulumi:"categoryType"`
	// A filter to return only log analytics category whose name matches the entire name given. The match is case-insensitive.
	Name *string `pulumi:"name"`
	// The Logging Analytics namespace used for the request.
	Namespace string `pulumi:"namespace"`
}

// A collection of values returned by getLogAnalyticsCategoriesList.
type GetLogAnalyticsCategoriesListResult struct {
	CategoryDisplayText *string `pulumi:"categoryDisplayText"`
	CategoryType        *string `pulumi:"categoryType"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// An array of categories.
	Items []GetLogAnalyticsCategoriesListItem `pulumi:"items"`
	// The unique name that identifies the category.
	Name      *string `pulumi:"name"`
	Namespace string  `pulumi:"namespace"`
}

func GetLogAnalyticsCategoriesListOutput(ctx *pulumi.Context, args GetLogAnalyticsCategoriesListOutputArgs, opts ...pulumi.InvokeOption) GetLogAnalyticsCategoriesListResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetLogAnalyticsCategoriesListResult, error) {
			args := v.(GetLogAnalyticsCategoriesListArgs)
			r, err := GetLogAnalyticsCategoriesList(ctx, &args, opts...)
			var s GetLogAnalyticsCategoriesListResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetLogAnalyticsCategoriesListResultOutput)
}

// A collection of arguments for invoking getLogAnalyticsCategoriesList.
type GetLogAnalyticsCategoriesListOutputArgs struct {
	// The category display text used for filtering. Only categories matching the specified display name or description will be returned.
	CategoryDisplayText pulumi.StringPtrInput `pulumi:"categoryDisplayText"`
	// A comma-separated list of category types used for filtering. Only categories of the specified types will be returned.
	CategoryType pulumi.StringPtrInput `pulumi:"categoryType"`
	// A filter to return only log analytics category whose name matches the entire name given. The match is case-insensitive.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (GetLogAnalyticsCategoriesListOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsCategoriesListArgs)(nil)).Elem()
}

// A collection of values returned by getLogAnalyticsCategoriesList.
type GetLogAnalyticsCategoriesListResultOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsCategoriesListResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsCategoriesListResult)(nil)).Elem()
}

func (o GetLogAnalyticsCategoriesListResultOutput) ToGetLogAnalyticsCategoriesListResultOutput() GetLogAnalyticsCategoriesListResultOutput {
	return o
}

func (o GetLogAnalyticsCategoriesListResultOutput) ToGetLogAnalyticsCategoriesListResultOutputWithContext(ctx context.Context) GetLogAnalyticsCategoriesListResultOutput {
	return o
}

func (o GetLogAnalyticsCategoriesListResultOutput) CategoryDisplayText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogAnalyticsCategoriesListResult) *string { return v.CategoryDisplayText }).(pulumi.StringPtrOutput)
}

func (o GetLogAnalyticsCategoriesListResultOutput) CategoryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogAnalyticsCategoriesListResult) *string { return v.CategoryType }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetLogAnalyticsCategoriesListResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsCategoriesListResult) string { return v.Id }).(pulumi.StringOutput)
}

// An array of categories.
func (o GetLogAnalyticsCategoriesListResultOutput) Items() GetLogAnalyticsCategoriesListItemArrayOutput {
	return o.ApplyT(func(v GetLogAnalyticsCategoriesListResult) []GetLogAnalyticsCategoriesListItem { return v.Items }).(GetLogAnalyticsCategoriesListItemArrayOutput)
}

// The unique name that identifies the category.
func (o GetLogAnalyticsCategoriesListResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogAnalyticsCategoriesListResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetLogAnalyticsCategoriesListResultOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsCategoriesListResult) string { return v.Namespace }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLogAnalyticsCategoriesListResultOutput{})
}
