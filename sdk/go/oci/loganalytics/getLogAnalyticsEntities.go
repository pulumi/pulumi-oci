// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package loganalytics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides the list of Log Analytics Entities in Oracle Cloud Infrastructure Log Analytics service.
//
// Return a list of log analytics entities.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/LogAnalytics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := LogAnalytics.GetLogAnalyticsEntities(ctx, &loganalytics.GetLogAnalyticsEntitiesArgs{
//				CompartmentId:            _var.Compartment_id,
//				Namespace:                _var.Log_analytics_entity_namespace,
//				CloudResourceId:          pulumi.StringRef(oci_log_analytics_cloud_resource.Test_cloud_resource.Id),
//				EntityTypeNames:          _var.Log_analytics_entity_entity_type_name,
//				Hostname:                 pulumi.StringRef(_var.Log_analytics_entity_hostname),
//				HostnameContains:         pulumi.StringRef(_var.Log_analytics_entity_hostname_contains),
//				IsManagementAgentIdNull:  pulumi.StringRef(_var.Log_analytics_entity_is_management_agent_id_null),
//				LifecycleDetailsContains: pulumi.StringRef(_var.Log_analytics_entity_lifecycle_details_contains),
//				Name:                     pulumi.StringRef(_var.Log_analytics_entity_name),
//				NameContains:             pulumi.StringRef(_var.Log_analytics_entity_name_contains),
//				SourceId:                 pulumi.StringRef(oci_log_analytics_source.Test_source.Id),
//				State:                    pulumi.StringRef(_var.Log_analytics_entity_state),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetLogAnalyticsEntities(ctx *pulumi.Context, args *GetLogAnalyticsEntitiesArgs, opts ...pulumi.InvokeOption) (*GetLogAnalyticsEntitiesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLogAnalyticsEntitiesResult
	err := ctx.Invoke("oci:LogAnalytics/getLogAnalyticsEntities:getLogAnalyticsEntities", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLogAnalyticsEntities.
type GetLogAnalyticsEntitiesArgs struct {
	// A filter to return only log analytics entities whose cloudResourceId matches the cloudResourceId given.
	CloudResourceId *string `pulumi:"cloudResourceId"`
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only log analytics entities whose entityTypeName matches the entire log analytics entity type name of one of the entityTypeNames given in the list. The match is case-insensitive.
	EntityTypeNames []string                        `pulumi:"entityTypeNames"`
	Filters         []GetLogAnalyticsEntitiesFilter `pulumi:"filters"`
	// A filter to return only log analytics entities whose hostname matches the entire hostname given.
	Hostname *string `pulumi:"hostname"`
	// A filter to return only log analytics entities whose hostname contains the substring given. The match is case-insensitive.
	HostnameContains *string `pulumi:"hostnameContains"`
	// A filter to return only those log analytics entities whose managementAgentId is null or is not null.
	IsManagementAgentIdNull *string `pulumi:"isManagementAgentIdNull"`
	// A filter to return only log analytics entities whose lifecycleDetails contains the specified string.
	LifecycleDetailsContains *string `pulumi:"lifecycleDetailsContains"`
	// A filter to return only log analytics entities whose name matches the entire name given. The match is case-insensitive.
	Name *string `pulumi:"name"`
	// A filter to return only log analytics entities whose name contains the name given. The match is case-insensitive.
	NameContains *string `pulumi:"nameContains"`
	// The Logging Analytics namespace used for the request.
	Namespace string `pulumi:"namespace"`
	// A filter to return only log analytics entities whose sourceId matches the sourceId given.
	SourceId *string `pulumi:"sourceId"`
	// A filter to return only those log analytics entities with the specified lifecycle state. The state value is case-insensitive.
	State *string `pulumi:"state"`
}

// A collection of values returned by getLogAnalyticsEntities.
type GetLogAnalyticsEntitiesResult struct {
	// The OCID of the Cloud resource which this entity is a representation of. This may be blank when the entity represents a non-cloud resource that the customer may have on their premises.
	CloudResourceId *string `pulumi:"cloudResourceId"`
	// Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// Log analytics entity type name.
	EntityTypeNames []string                        `pulumi:"entityTypeNames"`
	Filters         []GetLogAnalyticsEntitiesFilter `pulumi:"filters"`
	// The hostname where the entity represented here is actually present. This would be the output one would get if they run `echo $HOSTNAME` on Linux or an equivalent OS command. This may be different from management agents host since logs may be collected remotely.
	Hostname         *string `pulumi:"hostname"`
	HostnameContains *string `pulumi:"hostnameContains"`
	// The provider-assigned unique ID for this managed resource.
	Id                       string  `pulumi:"id"`
	IsManagementAgentIdNull  *string `pulumi:"isManagementAgentIdNull"`
	LifecycleDetailsContains *string `pulumi:"lifecycleDetailsContains"`
	// The list of log_analytics_entity_collection.
	LogAnalyticsEntityCollections []GetLogAnalyticsEntitiesLogAnalyticsEntityCollection `pulumi:"logAnalyticsEntityCollections"`
	// Log analytics entity name.
	Name         *string `pulumi:"name"`
	NameContains *string `pulumi:"nameContains"`
	Namespace    string  `pulumi:"namespace"`
	// This indicates the type of source. It is primarily for Enterprise Manager Repository ID.
	SourceId *string `pulumi:"sourceId"`
	// The current state of the log analytics entity.
	State *string `pulumi:"state"`
}

func GetLogAnalyticsEntitiesOutput(ctx *pulumi.Context, args GetLogAnalyticsEntitiesOutputArgs, opts ...pulumi.InvokeOption) GetLogAnalyticsEntitiesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetLogAnalyticsEntitiesResult, error) {
			args := v.(GetLogAnalyticsEntitiesArgs)
			r, err := GetLogAnalyticsEntities(ctx, &args, opts...)
			var s GetLogAnalyticsEntitiesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetLogAnalyticsEntitiesResultOutput)
}

// A collection of arguments for invoking getLogAnalyticsEntities.
type GetLogAnalyticsEntitiesOutputArgs struct {
	// A filter to return only log analytics entities whose cloudResourceId matches the cloudResourceId given.
	CloudResourceId pulumi.StringPtrInput `pulumi:"cloudResourceId"`
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only log analytics entities whose entityTypeName matches the entire log analytics entity type name of one of the entityTypeNames given in the list. The match is case-insensitive.
	EntityTypeNames pulumi.StringArrayInput                 `pulumi:"entityTypeNames"`
	Filters         GetLogAnalyticsEntitiesFilterArrayInput `pulumi:"filters"`
	// A filter to return only log analytics entities whose hostname matches the entire hostname given.
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	// A filter to return only log analytics entities whose hostname contains the substring given. The match is case-insensitive.
	HostnameContains pulumi.StringPtrInput `pulumi:"hostnameContains"`
	// A filter to return only those log analytics entities whose managementAgentId is null or is not null.
	IsManagementAgentIdNull pulumi.StringPtrInput `pulumi:"isManagementAgentIdNull"`
	// A filter to return only log analytics entities whose lifecycleDetails contains the specified string.
	LifecycleDetailsContains pulumi.StringPtrInput `pulumi:"lifecycleDetailsContains"`
	// A filter to return only log analytics entities whose name matches the entire name given. The match is case-insensitive.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A filter to return only log analytics entities whose name contains the name given. The match is case-insensitive.
	NameContains pulumi.StringPtrInput `pulumi:"nameContains"`
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// A filter to return only log analytics entities whose sourceId matches the sourceId given.
	SourceId pulumi.StringPtrInput `pulumi:"sourceId"`
	// A filter to return only those log analytics entities with the specified lifecycle state. The state value is case-insensitive.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetLogAnalyticsEntitiesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsEntitiesArgs)(nil)).Elem()
}

// A collection of values returned by getLogAnalyticsEntities.
type GetLogAnalyticsEntitiesResultOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsEntitiesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsEntitiesResult)(nil)).Elem()
}

func (o GetLogAnalyticsEntitiesResultOutput) ToGetLogAnalyticsEntitiesResultOutput() GetLogAnalyticsEntitiesResultOutput {
	return o
}

func (o GetLogAnalyticsEntitiesResultOutput) ToGetLogAnalyticsEntitiesResultOutputWithContext(ctx context.Context) GetLogAnalyticsEntitiesResultOutput {
	return o
}

func (o GetLogAnalyticsEntitiesResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetLogAnalyticsEntitiesResult] {
	return pulumix.Output[GetLogAnalyticsEntitiesResult]{
		OutputState: o.OutputState,
	}
}

// The OCID of the Cloud resource which this entity is a representation of. This may be blank when the entity represents a non-cloud resource that the customer may have on their premises.
func (o GetLogAnalyticsEntitiesResultOutput) CloudResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesResult) *string { return v.CloudResourceId }).(pulumi.StringPtrOutput)
}

// Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetLogAnalyticsEntitiesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Log analytics entity type name.
func (o GetLogAnalyticsEntitiesResultOutput) EntityTypeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesResult) []string { return v.EntityTypeNames }).(pulumi.StringArrayOutput)
}

func (o GetLogAnalyticsEntitiesResultOutput) Filters() GetLogAnalyticsEntitiesFilterArrayOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesResult) []GetLogAnalyticsEntitiesFilter { return v.Filters }).(GetLogAnalyticsEntitiesFilterArrayOutput)
}

// The hostname where the entity represented here is actually present. This would be the output one would get if they run `echo $HOSTNAME` on Linux or an equivalent OS command. This may be different from management agents host since logs may be collected remotely.
func (o GetLogAnalyticsEntitiesResultOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesResult) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

func (o GetLogAnalyticsEntitiesResultOutput) HostnameContains() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesResult) *string { return v.HostnameContains }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetLogAnalyticsEntitiesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetLogAnalyticsEntitiesResultOutput) IsManagementAgentIdNull() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesResult) *string { return v.IsManagementAgentIdNull }).(pulumi.StringPtrOutput)
}

func (o GetLogAnalyticsEntitiesResultOutput) LifecycleDetailsContains() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesResult) *string { return v.LifecycleDetailsContains }).(pulumi.StringPtrOutput)
}

// The list of log_analytics_entity_collection.
func (o GetLogAnalyticsEntitiesResultOutput) LogAnalyticsEntityCollections() GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArrayOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesResult) []GetLogAnalyticsEntitiesLogAnalyticsEntityCollection {
		return v.LogAnalyticsEntityCollections
	}).(GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArrayOutput)
}

// Log analytics entity name.
func (o GetLogAnalyticsEntitiesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetLogAnalyticsEntitiesResultOutput) NameContains() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesResult) *string { return v.NameContains }).(pulumi.StringPtrOutput)
}

func (o GetLogAnalyticsEntitiesResultOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesResult) string { return v.Namespace }).(pulumi.StringOutput)
}

// This indicates the type of source. It is primarily for Enterprise Manager Repository ID.
func (o GetLogAnalyticsEntitiesResultOutput) SourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesResult) *string { return v.SourceId }).(pulumi.StringPtrOutput)
}

// The current state of the log analytics entity.
func (o GetLogAnalyticsEntitiesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLogAnalyticsEntitiesResultOutput{})
}
