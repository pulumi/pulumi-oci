// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package loganalytics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Log Analytics Entities Summary resource in Oracle Cloud Infrastructure Log Analytics service.
//
// Returns log analytics entities count summary report.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/LogAnalytics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := LogAnalytics.GetLogAnalyticsEntitiesSummary(ctx, &loganalytics.GetLogAnalyticsEntitiesSummaryArgs{
//				CompartmentId: compartmentId,
//				Namespace:     logAnalyticsEntitiesSummaryNamespace,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetLogAnalyticsEntitiesSummary(ctx *pulumi.Context, args *GetLogAnalyticsEntitiesSummaryArgs, opts ...pulumi.InvokeOption) (*GetLogAnalyticsEntitiesSummaryResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLogAnalyticsEntitiesSummaryResult
	err := ctx.Invoke("oci:LogAnalytics/getLogAnalyticsEntitiesSummary:getLogAnalyticsEntitiesSummary", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLogAnalyticsEntitiesSummary.
type GetLogAnalyticsEntitiesSummaryArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// The Logging Analytics namespace used for the request.
	Namespace string `pulumi:"namespace"`
}

// A collection of values returned by getLogAnalyticsEntitiesSummary.
type GetLogAnalyticsEntitiesSummaryResult struct {
	// Total number of ACTIVE entities
	ActiveEntitiesCount int `pulumi:"activeEntitiesCount"`
	// Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// Entities with log collection enabled
	EntitiesWithHasLogsCollectedCount int `pulumi:"entitiesWithHasLogsCollectedCount"`
	// Entities with management agent
	EntitiesWithManagementAgentCount int `pulumi:"entitiesWithManagementAgentCount"`
	// The provider-assigned unique ID for this managed resource.
	Id        string `pulumi:"id"`
	Namespace string `pulumi:"namespace"`
}

func GetLogAnalyticsEntitiesSummaryOutput(ctx *pulumi.Context, args GetLogAnalyticsEntitiesSummaryOutputArgs, opts ...pulumi.InvokeOption) GetLogAnalyticsEntitiesSummaryResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetLogAnalyticsEntitiesSummaryResultOutput, error) {
			args := v.(GetLogAnalyticsEntitiesSummaryArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetLogAnalyticsEntitiesSummaryResult
			secret, err := ctx.InvokePackageRaw("oci:LogAnalytics/getLogAnalyticsEntitiesSummary:getLogAnalyticsEntitiesSummary", args, &rv, "", opts...)
			if err != nil {
				return GetLogAnalyticsEntitiesSummaryResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetLogAnalyticsEntitiesSummaryResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetLogAnalyticsEntitiesSummaryResultOutput), nil
			}
			return output, nil
		}).(GetLogAnalyticsEntitiesSummaryResultOutput)
}

// A collection of arguments for invoking getLogAnalyticsEntitiesSummary.
type GetLogAnalyticsEntitiesSummaryOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (GetLogAnalyticsEntitiesSummaryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsEntitiesSummaryArgs)(nil)).Elem()
}

// A collection of values returned by getLogAnalyticsEntitiesSummary.
type GetLogAnalyticsEntitiesSummaryResultOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsEntitiesSummaryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsEntitiesSummaryResult)(nil)).Elem()
}

func (o GetLogAnalyticsEntitiesSummaryResultOutput) ToGetLogAnalyticsEntitiesSummaryResultOutput() GetLogAnalyticsEntitiesSummaryResultOutput {
	return o
}

func (o GetLogAnalyticsEntitiesSummaryResultOutput) ToGetLogAnalyticsEntitiesSummaryResultOutputWithContext(ctx context.Context) GetLogAnalyticsEntitiesSummaryResultOutput {
	return o
}

// Total number of ACTIVE entities
func (o GetLogAnalyticsEntitiesSummaryResultOutput) ActiveEntitiesCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesSummaryResult) int { return v.ActiveEntitiesCount }).(pulumi.IntOutput)
}

// Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetLogAnalyticsEntitiesSummaryResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesSummaryResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Entities with log collection enabled
func (o GetLogAnalyticsEntitiesSummaryResultOutput) EntitiesWithHasLogsCollectedCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesSummaryResult) int { return v.EntitiesWithHasLogsCollectedCount }).(pulumi.IntOutput)
}

// Entities with management agent
func (o GetLogAnalyticsEntitiesSummaryResultOutput) EntitiesWithManagementAgentCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesSummaryResult) int { return v.EntitiesWithManagementAgentCount }).(pulumi.IntOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetLogAnalyticsEntitiesSummaryResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesSummaryResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetLogAnalyticsEntitiesSummaryResultOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesSummaryResult) string { return v.Namespace }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLogAnalyticsEntitiesSummaryResultOutput{})
}
