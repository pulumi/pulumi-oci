// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package loganalytics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Log Analytics Entity resource in Oracle Cloud Infrastructure Log Analytics service.
//
// Retrieve the log analytics entity with the given id.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/LogAnalytics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := LogAnalytics.GetLogAnalyticsEntity(ctx, &loganalytics.GetLogAnalyticsEntityArgs{
//				LogAnalyticsEntityId: oci_log_analytics_log_analytics_entity.Test_log_analytics_entity.Id,
//				Namespace:            _var.Log_analytics_entity_namespace,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupLogAnalyticsEntity(ctx *pulumi.Context, args *LookupLogAnalyticsEntityArgs, opts ...pulumi.InvokeOption) (*LookupLogAnalyticsEntityResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupLogAnalyticsEntityResult
	err := ctx.Invoke("oci:LogAnalytics/getLogAnalyticsEntity:getLogAnalyticsEntity", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLogAnalyticsEntity.
type LookupLogAnalyticsEntityArgs struct {
	// The log analytics entity OCID.
	LogAnalyticsEntityId string `pulumi:"logAnalyticsEntityId"`
	// The Logging Analytics namespace used for the request.
	Namespace string `pulumi:"namespace"`
}

// A collection of values returned by getLogAnalyticsEntity.
type LookupLogAnalyticsEntityResult struct {
	// The Boolean flag to indicate if logs are collected for an entity for log analytics usage.
	AreLogsCollected *bool `pulumi:"areLogsCollected"`
	// The OCID of the Cloud resource which this entity is a representation of. This may be blank when the entity represents a non-cloud resource that the customer may have on their premises.
	CloudResourceId *string `pulumi:"cloudResourceId"`
	// Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId *string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Internal name for the log analytics entity type.
	EntityTypeInternalName *string `pulumi:"entityTypeInternalName"`
	// Log analytics entity type name.
	EntityTypeName *string `pulumi:"entityTypeName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The hostname where the entity represented here is actually present. This would be the output one would get if they run `echo $HOSTNAME` on Linux or an equivalent OS command. This may be different from management agents host since logs may be collected remotely.
	Hostname *string `pulumi:"hostname"`
	// The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
	Id *string `pulumi:"id"`
	// lifecycleDetails has additional information regarding substeps such as management agent plugin deployment.
	LifecycleDetails     *string `pulumi:"lifecycleDetails"`
	LogAnalyticsEntityId string  `pulumi:"logAnalyticsEntityId"`
	// Management agent (management-agents resource kind) compartment OCID
	ManagementAgentCompartmentId *string `pulumi:"managementAgentCompartmentId"`
	// Management agent (management-agents resource kind) display name
	ManagementAgentDisplayName *string `pulumi:"managementAgentDisplayName"`
	// The OCID of the Management Agent.
	ManagementAgentId *string `pulumi:"managementAgentId"`
	// Log analytics entity name.
	Name      *string `pulumi:"name"`
	Namespace string  `pulumi:"namespace"`
	// The name/value pairs for parameter values to be used in file patterns specified in log sources.
	Properties map[string]interface{} `pulumi:"properties"`
	// This indicates the type of source. It is primarily for Enterprise Manager Repository ID.
	SourceId *string `pulumi:"sourceId"`
	// The current state of the log analytics entity.
	State *string `pulumi:"state"`
	// The date and time the resource was created, in the format defined by RFC3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the resource was last updated, in the format defined by RFC3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// The timezone region of the log analytics entity.
	TimezoneRegion *string `pulumi:"timezoneRegion"`
}

func LookupLogAnalyticsEntityOutput(ctx *pulumi.Context, args LookupLogAnalyticsEntityOutputArgs, opts ...pulumi.InvokeOption) LookupLogAnalyticsEntityResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupLogAnalyticsEntityResult, error) {
			args := v.(LookupLogAnalyticsEntityArgs)
			r, err := LookupLogAnalyticsEntity(ctx, &args, opts...)
			var s LookupLogAnalyticsEntityResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupLogAnalyticsEntityResultOutput)
}

// A collection of arguments for invoking getLogAnalyticsEntity.
type LookupLogAnalyticsEntityOutputArgs struct {
	// The log analytics entity OCID.
	LogAnalyticsEntityId pulumi.StringInput `pulumi:"logAnalyticsEntityId"`
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (LookupLogAnalyticsEntityOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLogAnalyticsEntityArgs)(nil)).Elem()
}

// A collection of values returned by getLogAnalyticsEntity.
type LookupLogAnalyticsEntityResultOutput struct{ *pulumi.OutputState }

func (LookupLogAnalyticsEntityResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLogAnalyticsEntityResult)(nil)).Elem()
}

func (o LookupLogAnalyticsEntityResultOutput) ToLookupLogAnalyticsEntityResultOutput() LookupLogAnalyticsEntityResultOutput {
	return o
}

func (o LookupLogAnalyticsEntityResultOutput) ToLookupLogAnalyticsEntityResultOutputWithContext(ctx context.Context) LookupLogAnalyticsEntityResultOutput {
	return o
}

// The Boolean flag to indicate if logs are collected for an entity for log analytics usage.
func (o LookupLogAnalyticsEntityResultOutput) AreLogsCollected() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupLogAnalyticsEntityResult) *bool { return v.AreLogsCollected }).(pulumi.BoolPtrOutput)
}

// The OCID of the Cloud resource which this entity is a representation of. This may be blank when the entity represents a non-cloud resource that the customer may have on their premises.
func (o LookupLogAnalyticsEntityResultOutput) CloudResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLogAnalyticsEntityResult) *string { return v.CloudResourceId }).(pulumi.StringPtrOutput)
}

// Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o LookupLogAnalyticsEntityResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLogAnalyticsEntityResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupLogAnalyticsEntityResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupLogAnalyticsEntityResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// Internal name for the log analytics entity type.
func (o LookupLogAnalyticsEntityResultOutput) EntityTypeInternalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLogAnalyticsEntityResult) *string { return v.EntityTypeInternalName }).(pulumi.StringPtrOutput)
}

// Log analytics entity type name.
func (o LookupLogAnalyticsEntityResultOutput) EntityTypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLogAnalyticsEntityResult) *string { return v.EntityTypeName }).(pulumi.StringPtrOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupLogAnalyticsEntityResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupLogAnalyticsEntityResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The hostname where the entity represented here is actually present. This would be the output one would get if they run `echo $HOSTNAME` on Linux or an equivalent OS command. This may be different from management agents host since logs may be collected remotely.
func (o LookupLogAnalyticsEntityResultOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLogAnalyticsEntityResult) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
func (o LookupLogAnalyticsEntityResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLogAnalyticsEntityResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// lifecycleDetails has additional information regarding substeps such as management agent plugin deployment.
func (o LookupLogAnalyticsEntityResultOutput) LifecycleDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLogAnalyticsEntityResult) *string { return v.LifecycleDetails }).(pulumi.StringPtrOutput)
}

func (o LookupLogAnalyticsEntityResultOutput) LogAnalyticsEntityId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogAnalyticsEntityResult) string { return v.LogAnalyticsEntityId }).(pulumi.StringOutput)
}

// Management agent (management-agents resource kind) compartment OCID
func (o LookupLogAnalyticsEntityResultOutput) ManagementAgentCompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLogAnalyticsEntityResult) *string { return v.ManagementAgentCompartmentId }).(pulumi.StringPtrOutput)
}

// Management agent (management-agents resource kind) display name
func (o LookupLogAnalyticsEntityResultOutput) ManagementAgentDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLogAnalyticsEntityResult) *string { return v.ManagementAgentDisplayName }).(pulumi.StringPtrOutput)
}

// The OCID of the Management Agent.
func (o LookupLogAnalyticsEntityResultOutput) ManagementAgentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLogAnalyticsEntityResult) *string { return v.ManagementAgentId }).(pulumi.StringPtrOutput)
}

// Log analytics entity name.
func (o LookupLogAnalyticsEntityResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLogAnalyticsEntityResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupLogAnalyticsEntityResultOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogAnalyticsEntityResult) string { return v.Namespace }).(pulumi.StringOutput)
}

// The name/value pairs for parameter values to be used in file patterns specified in log sources.
func (o LookupLogAnalyticsEntityResultOutput) Properties() pulumi.MapOutput {
	return o.ApplyT(func(v LookupLogAnalyticsEntityResult) map[string]interface{} { return v.Properties }).(pulumi.MapOutput)
}

// This indicates the type of source. It is primarily for Enterprise Manager Repository ID.
func (o LookupLogAnalyticsEntityResultOutput) SourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLogAnalyticsEntityResult) *string { return v.SourceId }).(pulumi.StringPtrOutput)
}

// The current state of the log analytics entity.
func (o LookupLogAnalyticsEntityResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLogAnalyticsEntityResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The date and time the resource was created, in the format defined by RFC3339.
func (o LookupLogAnalyticsEntityResultOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLogAnalyticsEntityResult) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The date and time the resource was last updated, in the format defined by RFC3339.
func (o LookupLogAnalyticsEntityResultOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLogAnalyticsEntityResult) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

// The timezone region of the log analytics entity.
func (o LookupLogAnalyticsEntityResultOutput) TimezoneRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLogAnalyticsEntityResult) *string { return v.TimezoneRegion }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLogAnalyticsEntityResultOutput{})
}
