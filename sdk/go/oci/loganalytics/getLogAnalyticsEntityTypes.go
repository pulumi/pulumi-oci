// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package loganalytics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Log Analytics Entity Types in Oracle Cloud Infrastructure Log Analytics service.
//
// Return a list of log analytics entity types.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/loganalytics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := loganalytics.GetLogAnalyticsEntityTypes(ctx, &loganalytics.GetLogAnalyticsEntityTypesArgs{
//				Namespace:    logAnalyticsEntityTypeNamespace,
//				CloudType:    pulumi.StringRef(logAnalyticsEntityTypeCloudType),
//				Name:         pulumi.StringRef(logAnalyticsEntityTypeName),
//				NameContains: pulumi.StringRef(logAnalyticsEntityTypeNameContains),
//				State:        pulumi.StringRef(logAnalyticsEntityTypeState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetLogAnalyticsEntityTypes(ctx *pulumi.Context, args *GetLogAnalyticsEntityTypesArgs, opts ...pulumi.InvokeOption) (*GetLogAnalyticsEntityTypesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLogAnalyticsEntityTypesResult
	err := ctx.Invoke("oci:LogAnalytics/getLogAnalyticsEntityTypes:getLogAnalyticsEntityTypes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLogAnalyticsEntityTypes.
type GetLogAnalyticsEntityTypesArgs struct {
	// A filter to return CLOUD or NON_CLOUD entity types.
	CloudType *string                            `pulumi:"cloudType"`
	Filters   []GetLogAnalyticsEntityTypesFilter `pulumi:"filters"`
	// A filter to return only log analytics entity types whose name matches the entire name given. The match is case-insensitive.
	Name *string `pulumi:"name"`
	// A filter to return only log analytics entity types whose name or internalName contains name given. The match is case-insensitive.
	NameContains *string `pulumi:"nameContains"`
	// The Logging Analytics namespace used for the request.
	Namespace string `pulumi:"namespace"`
	// A filter to return only those log analytics entity types with the specified lifecycle state. The state value is case-insensitive.
	State *string `pulumi:"state"`
}

// A collection of values returned by getLogAnalyticsEntityTypes.
type GetLogAnalyticsEntityTypesResult struct {
	// Log analytics entity type group. This can be CLOUD (OCI) or NON_CLOUD otherwise.
	CloudType *string                            `pulumi:"cloudType"`
	Filters   []GetLogAnalyticsEntityTypesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of log_analytics_entity_type_collection.
	LogAnalyticsEntityTypeCollections []GetLogAnalyticsEntityTypesLogAnalyticsEntityTypeCollection `pulumi:"logAnalyticsEntityTypeCollections"`
	// Log analytics entity type name.
	Name         *string `pulumi:"name"`
	NameContains *string `pulumi:"nameContains"`
	Namespace    string  `pulumi:"namespace"`
	// The current lifecycle state of the log analytics entity type.
	State *string `pulumi:"state"`
}

func GetLogAnalyticsEntityTypesOutput(ctx *pulumi.Context, args GetLogAnalyticsEntityTypesOutputArgs, opts ...pulumi.InvokeOption) GetLogAnalyticsEntityTypesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetLogAnalyticsEntityTypesResultOutput, error) {
			args := v.(GetLogAnalyticsEntityTypesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:LogAnalytics/getLogAnalyticsEntityTypes:getLogAnalyticsEntityTypes", args, GetLogAnalyticsEntityTypesResultOutput{}, options).(GetLogAnalyticsEntityTypesResultOutput), nil
		}).(GetLogAnalyticsEntityTypesResultOutput)
}

// A collection of arguments for invoking getLogAnalyticsEntityTypes.
type GetLogAnalyticsEntityTypesOutputArgs struct {
	// A filter to return CLOUD or NON_CLOUD entity types.
	CloudType pulumi.StringPtrInput                      `pulumi:"cloudType"`
	Filters   GetLogAnalyticsEntityTypesFilterArrayInput `pulumi:"filters"`
	// A filter to return only log analytics entity types whose name matches the entire name given. The match is case-insensitive.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A filter to return only log analytics entity types whose name or internalName contains name given. The match is case-insensitive.
	NameContains pulumi.StringPtrInput `pulumi:"nameContains"`
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// A filter to return only those log analytics entity types with the specified lifecycle state. The state value is case-insensitive.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetLogAnalyticsEntityTypesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsEntityTypesArgs)(nil)).Elem()
}

// A collection of values returned by getLogAnalyticsEntityTypes.
type GetLogAnalyticsEntityTypesResultOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsEntityTypesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsEntityTypesResult)(nil)).Elem()
}

func (o GetLogAnalyticsEntityTypesResultOutput) ToGetLogAnalyticsEntityTypesResultOutput() GetLogAnalyticsEntityTypesResultOutput {
	return o
}

func (o GetLogAnalyticsEntityTypesResultOutput) ToGetLogAnalyticsEntityTypesResultOutputWithContext(ctx context.Context) GetLogAnalyticsEntityTypesResultOutput {
	return o
}

// Log analytics entity type group. This can be CLOUD (OCI) or NON_CLOUD otherwise.
func (o GetLogAnalyticsEntityTypesResultOutput) CloudType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntityTypesResult) *string { return v.CloudType }).(pulumi.StringPtrOutput)
}

func (o GetLogAnalyticsEntityTypesResultOutput) Filters() GetLogAnalyticsEntityTypesFilterArrayOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntityTypesResult) []GetLogAnalyticsEntityTypesFilter { return v.Filters }).(GetLogAnalyticsEntityTypesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetLogAnalyticsEntityTypesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntityTypesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of log_analytics_entity_type_collection.
func (o GetLogAnalyticsEntityTypesResultOutput) LogAnalyticsEntityTypeCollections() GetLogAnalyticsEntityTypesLogAnalyticsEntityTypeCollectionArrayOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntityTypesResult) []GetLogAnalyticsEntityTypesLogAnalyticsEntityTypeCollection {
		return v.LogAnalyticsEntityTypeCollections
	}).(GetLogAnalyticsEntityTypesLogAnalyticsEntityTypeCollectionArrayOutput)
}

// Log analytics entity type name.
func (o GetLogAnalyticsEntityTypesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntityTypesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetLogAnalyticsEntityTypesResultOutput) NameContains() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntityTypesResult) *string { return v.NameContains }).(pulumi.StringPtrOutput)
}

func (o GetLogAnalyticsEntityTypesResultOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntityTypesResult) string { return v.Namespace }).(pulumi.StringOutput)
}

// The current lifecycle state of the log analytics entity type.
func (o GetLogAnalyticsEntityTypesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntityTypesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLogAnalyticsEntityTypesResultOutput{})
}
