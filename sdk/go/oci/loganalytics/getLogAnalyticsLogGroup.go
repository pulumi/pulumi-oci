// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package loganalytics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Log Analytics Log Group resource in Oracle Cloud Infrastructure Log Analytics service.
//
// Gets detailed information about the specified log group such as display name, description, defined tags, and free-form tags.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/LogAnalytics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := LogAnalytics.GetLogAnalyticsLogGroup(ctx, &loganalytics.GetLogAnalyticsLogGroupArgs{
//				LogAnalyticsLogGroupId: testLogAnalyticsLogGroupOciLogAnalyticsLogAnalyticsLogGroup.Id,
//				Namespace:              logAnalyticsLogGroupNamespace,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupLogAnalyticsLogGroup(ctx *pulumi.Context, args *LookupLogAnalyticsLogGroupArgs, opts ...pulumi.InvokeOption) (*LookupLogAnalyticsLogGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupLogAnalyticsLogGroupResult
	err := ctx.Invoke("oci:LogAnalytics/getLogAnalyticsLogGroup:getLogAnalyticsLogGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLogAnalyticsLogGroup.
type LookupLogAnalyticsLogGroupArgs struct {
	// unique logAnalytics log group identifier
	LogAnalyticsLogGroupId string `pulumi:"logAnalyticsLogGroupId"`
	// The Logging Analytics namespace used for the request.
	Namespace string `pulumi:"namespace"`
}

// A collection of values returned by getLogAnalyticsLogGroup.
type LookupLogAnalyticsLogGroupResult struct {
	// Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Description for this resource.
	Description string `pulumi:"description"`
	// A user-friendly name that is changeable and that does not have to be unique. Format: a leading alphanumeric, followed by zero or more alphanumerics, underscores, spaces, backslashes, or hyphens in any order). No trailing spaces allowed.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
	Id                     string `pulumi:"id"`
	LogAnalyticsLogGroupId string `pulumi:"logAnalyticsLogGroupId"`
	Namespace              string `pulumi:"namespace"`
	// The date and time the resource was created, in the format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the resource was last updated, in the format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupLogAnalyticsLogGroupOutput(ctx *pulumi.Context, args LookupLogAnalyticsLogGroupOutputArgs, opts ...pulumi.InvokeOption) LookupLogAnalyticsLogGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupLogAnalyticsLogGroupResult, error) {
			args := v.(LookupLogAnalyticsLogGroupArgs)
			r, err := LookupLogAnalyticsLogGroup(ctx, &args, opts...)
			var s LookupLogAnalyticsLogGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupLogAnalyticsLogGroupResultOutput)
}

// A collection of arguments for invoking getLogAnalyticsLogGroup.
type LookupLogAnalyticsLogGroupOutputArgs struct {
	// unique logAnalytics log group identifier
	LogAnalyticsLogGroupId pulumi.StringInput `pulumi:"logAnalyticsLogGroupId"`
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (LookupLogAnalyticsLogGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLogAnalyticsLogGroupArgs)(nil)).Elem()
}

// A collection of values returned by getLogAnalyticsLogGroup.
type LookupLogAnalyticsLogGroupResultOutput struct{ *pulumi.OutputState }

func (LookupLogAnalyticsLogGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLogAnalyticsLogGroupResult)(nil)).Elem()
}

func (o LookupLogAnalyticsLogGroupResultOutput) ToLookupLogAnalyticsLogGroupResultOutput() LookupLogAnalyticsLogGroupResultOutput {
	return o
}

func (o LookupLogAnalyticsLogGroupResultOutput) ToLookupLogAnalyticsLogGroupResultOutputWithContext(ctx context.Context) LookupLogAnalyticsLogGroupResultOutput {
	return o
}

// Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o LookupLogAnalyticsLogGroupResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogAnalyticsLogGroupResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupLogAnalyticsLogGroupResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupLogAnalyticsLogGroupResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// Description for this resource.
func (o LookupLogAnalyticsLogGroupResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogAnalyticsLogGroupResult) string { return v.Description }).(pulumi.StringOutput)
}

// A user-friendly name that is changeable and that does not have to be unique. Format: a leading alphanumeric, followed by zero or more alphanumerics, underscores, spaces, backslashes, or hyphens in any order). No trailing spaces allowed.
func (o LookupLogAnalyticsLogGroupResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogAnalyticsLogGroupResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupLogAnalyticsLogGroupResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupLogAnalyticsLogGroupResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
func (o LookupLogAnalyticsLogGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogAnalyticsLogGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupLogAnalyticsLogGroupResultOutput) LogAnalyticsLogGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogAnalyticsLogGroupResult) string { return v.LogAnalyticsLogGroupId }).(pulumi.StringOutput)
}

func (o LookupLogAnalyticsLogGroupResultOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogAnalyticsLogGroupResult) string { return v.Namespace }).(pulumi.StringOutput)
}

// The date and time the resource was created, in the format defined by RFC3339.
func (o LookupLogAnalyticsLogGroupResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogAnalyticsLogGroupResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the resource was last updated, in the format defined by RFC3339.
func (o LookupLogAnalyticsLogGroupResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogAnalyticsLogGroupResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLogAnalyticsLogGroupResultOutput{})
}
