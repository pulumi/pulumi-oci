// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package loganalytics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Log Analytics Log Groups in Oracle Cloud Infrastructure Log Analytics service.
//
// Returns a list of log groups in a compartment. You may limit the number of log groups, provide sorting options, and filter the results by specifying a display name.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/LogAnalytics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := LogAnalytics.GetLogAnalyticsLogGroups(ctx, &loganalytics.GetLogAnalyticsLogGroupsArgs{
//				CompartmentId: compartmentId,
//				Namespace:     logAnalyticsLogGroupNamespace,
//				DisplayName:   pulumi.StringRef(logAnalyticsLogGroupDisplayName),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetLogAnalyticsLogGroups(ctx *pulumi.Context, args *GetLogAnalyticsLogGroupsArgs, opts ...pulumi.InvokeOption) (*GetLogAnalyticsLogGroupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLogAnalyticsLogGroupsResult
	err := ctx.Invoke("oci:LogAnalytics/getLogAnalyticsLogGroups:getLogAnalyticsLogGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLogAnalyticsLogGroups.
type GetLogAnalyticsLogGroupsArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only log analytics log groups whose displayName matches the entire display name given. The match is case-insensitive.
	DisplayName *string                          `pulumi:"displayName"`
	Filters     []GetLogAnalyticsLogGroupsFilter `pulumi:"filters"`
	// The Logging Analytics namespace used for the request.
	Namespace string `pulumi:"namespace"`
}

// A collection of values returned by getLogAnalyticsLogGroups.
type GetLogAnalyticsLogGroupsResult struct {
	// Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// A user-friendly name that is changeable and that does not have to be unique. Format: a leading alphanumeric, followed by zero or more alphanumerics, underscores, spaces, backslashes, or hyphens in any order). No trailing spaces allowed.
	DisplayName *string                          `pulumi:"displayName"`
	Filters     []GetLogAnalyticsLogGroupsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of log_analytics_log_group_summary_collection.
	LogAnalyticsLogGroupSummaryCollections []GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollection `pulumi:"logAnalyticsLogGroupSummaryCollections"`
	Namespace                              string                                                          `pulumi:"namespace"`
}

func GetLogAnalyticsLogGroupsOutput(ctx *pulumi.Context, args GetLogAnalyticsLogGroupsOutputArgs, opts ...pulumi.InvokeOption) GetLogAnalyticsLogGroupsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetLogAnalyticsLogGroupsResult, error) {
			args := v.(GetLogAnalyticsLogGroupsArgs)
			r, err := GetLogAnalyticsLogGroups(ctx, &args, opts...)
			var s GetLogAnalyticsLogGroupsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetLogAnalyticsLogGroupsResultOutput)
}

// A collection of arguments for invoking getLogAnalyticsLogGroups.
type GetLogAnalyticsLogGroupsOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only log analytics log groups whose displayName matches the entire display name given. The match is case-insensitive.
	DisplayName pulumi.StringPtrInput                    `pulumi:"displayName"`
	Filters     GetLogAnalyticsLogGroupsFilterArrayInput `pulumi:"filters"`
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (GetLogAnalyticsLogGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsLogGroupsArgs)(nil)).Elem()
}

// A collection of values returned by getLogAnalyticsLogGroups.
type GetLogAnalyticsLogGroupsResultOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsLogGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsLogGroupsResult)(nil)).Elem()
}

func (o GetLogAnalyticsLogGroupsResultOutput) ToGetLogAnalyticsLogGroupsResultOutput() GetLogAnalyticsLogGroupsResultOutput {
	return o
}

func (o GetLogAnalyticsLogGroupsResultOutput) ToGetLogAnalyticsLogGroupsResultOutputWithContext(ctx context.Context) GetLogAnalyticsLogGroupsResultOutput {
	return o
}

// Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetLogAnalyticsLogGroupsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsLogGroupsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A user-friendly name that is changeable and that does not have to be unique. Format: a leading alphanumeric, followed by zero or more alphanumerics, underscores, spaces, backslashes, or hyphens in any order). No trailing spaces allowed.
func (o GetLogAnalyticsLogGroupsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogAnalyticsLogGroupsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetLogAnalyticsLogGroupsResultOutput) Filters() GetLogAnalyticsLogGroupsFilterArrayOutput {
	return o.ApplyT(func(v GetLogAnalyticsLogGroupsResult) []GetLogAnalyticsLogGroupsFilter { return v.Filters }).(GetLogAnalyticsLogGroupsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetLogAnalyticsLogGroupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsLogGroupsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of log_analytics_log_group_summary_collection.
func (o GetLogAnalyticsLogGroupsResultOutput) LogAnalyticsLogGroupSummaryCollections() GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArrayOutput {
	return o.ApplyT(func(v GetLogAnalyticsLogGroupsResult) []GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollection {
		return v.LogAnalyticsLogGroupSummaryCollections
	}).(GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArrayOutput)
}

func (o GetLogAnalyticsLogGroupsResultOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsLogGroupsResult) string { return v.Namespace }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLogAnalyticsLogGroupsResultOutput{})
}
