// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package loganalytics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Log Analytics Log Groups Summary resource in Oracle Cloud Infrastructure Log Analytics service.
//
// Returns the count of log groups in a compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/LogAnalytics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := LogAnalytics.GetLogAnalyticsLogGroupsSummary(ctx, &loganalytics.GetLogAnalyticsLogGroupsSummaryArgs{
//				CompartmentId: _var.Compartment_id,
//				Namespace:     _var.Log_analytics_log_groups_summary_namespace,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetLogAnalyticsLogGroupsSummary(ctx *pulumi.Context, args *GetLogAnalyticsLogGroupsSummaryArgs, opts ...pulumi.InvokeOption) (*GetLogAnalyticsLogGroupsSummaryResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLogAnalyticsLogGroupsSummaryResult
	err := ctx.Invoke("oci:LogAnalytics/getLogAnalyticsLogGroupsSummary:getLogAnalyticsLogGroupsSummary", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLogAnalyticsLogGroupsSummary.
type GetLogAnalyticsLogGroupsSummaryArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// The Logging Analytics namespace used for the request.
	Namespace string `pulumi:"namespace"`
}

// A collection of values returned by getLogAnalyticsLogGroupsSummary.
type GetLogAnalyticsLogGroupsSummaryResult struct {
	CompartmentId string `pulumi:"compartmentId"`
	// The provider-assigned unique ID for this managed resource.
	Id            string `pulumi:"id"`
	LogGroupCount int    `pulumi:"logGroupCount"`
	Namespace     string `pulumi:"namespace"`
}

func GetLogAnalyticsLogGroupsSummaryOutput(ctx *pulumi.Context, args GetLogAnalyticsLogGroupsSummaryOutputArgs, opts ...pulumi.InvokeOption) GetLogAnalyticsLogGroupsSummaryResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetLogAnalyticsLogGroupsSummaryResult, error) {
			args := v.(GetLogAnalyticsLogGroupsSummaryArgs)
			r, err := GetLogAnalyticsLogGroupsSummary(ctx, &args, opts...)
			var s GetLogAnalyticsLogGroupsSummaryResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetLogAnalyticsLogGroupsSummaryResultOutput)
}

// A collection of arguments for invoking getLogAnalyticsLogGroupsSummary.
type GetLogAnalyticsLogGroupsSummaryOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (GetLogAnalyticsLogGroupsSummaryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsLogGroupsSummaryArgs)(nil)).Elem()
}

// A collection of values returned by getLogAnalyticsLogGroupsSummary.
type GetLogAnalyticsLogGroupsSummaryResultOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsLogGroupsSummaryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsLogGroupsSummaryResult)(nil)).Elem()
}

func (o GetLogAnalyticsLogGroupsSummaryResultOutput) ToGetLogAnalyticsLogGroupsSummaryResultOutput() GetLogAnalyticsLogGroupsSummaryResultOutput {
	return o
}

func (o GetLogAnalyticsLogGroupsSummaryResultOutput) ToGetLogAnalyticsLogGroupsSummaryResultOutputWithContext(ctx context.Context) GetLogAnalyticsLogGroupsSummaryResultOutput {
	return o
}

func (o GetLogAnalyticsLogGroupsSummaryResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsLogGroupsSummaryResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetLogAnalyticsLogGroupsSummaryResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsLogGroupsSummaryResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetLogAnalyticsLogGroupsSummaryResultOutput) LogGroupCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetLogAnalyticsLogGroupsSummaryResult) int { return v.LogGroupCount }).(pulumi.IntOutput)
}

func (o GetLogAnalyticsLogGroupsSummaryResultOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsLogGroupsSummaryResult) string { return v.Namespace }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLogAnalyticsLogGroupsSummaryResultOutput{})
}
