// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package loganalytics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about Resource Categories in Oracle Cloud Infrastructure Log Analytics service.
//
// Returns a list of resources and their category assignments.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/loganalytics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := loganalytics.GetLogAnalyticsResourceCategoriesList(ctx, &loganalytics.GetLogAnalyticsResourceCategoriesListArgs{
//				Namespace:          logAnalyticsResourceCategoriesListNamespace,
//				ResourceIds:        pulumi.StringRef(logAnalyticsResourceCategoriesListResourceIds),
//				ResourceTypes:      pulumi.StringRef(logAnalyticsResourceCategoriesListResourceTypes),
//				ResourceCategories: pulumi.StringRef(logAnalyticsResourceCategoriesListResourceCategories),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetLogAnalyticsResourceCategoriesList(ctx *pulumi.Context, args *GetLogAnalyticsResourceCategoriesListArgs, opts ...pulumi.InvokeOption) (*GetLogAnalyticsResourceCategoriesListResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLogAnalyticsResourceCategoriesListResult
	err := ctx.Invoke("oci:LogAnalytics/getLogAnalyticsResourceCategoriesList:getLogAnalyticsResourceCategoriesList", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLogAnalyticsResourceCategoriesList.
type GetLogAnalyticsResourceCategoriesListArgs struct {
	// The Logging Analytics namespace used for the request.
	Namespace string `pulumi:"namespace"`
	// A comma-separated list of category names used for filtering
	ResourceCategories *string `pulumi:"resourceCategories"`
	// A comma-separated list of resource unique identifiers used for filtering. Only resources with matching unique identifiers will be returned.
	ResourceIds *string `pulumi:"resourceIds"`
	// A comma-separated list of resource types used for filtering. Only resources of the types specified will be returned. Examples include SOURCE, PARSER, LOOKUP, etc.
	ResourceTypes *string `pulumi:"resourceTypes"`
}

// A collection of values returned by getLogAnalyticsResourceCategoriesList.
type GetLogAnalyticsResourceCategoriesListResult struct {
	// An array of categories. The array contents include detailed information about the distinct set of categories assigned to all the listed resources under items.
	Categories []GetLogAnalyticsResourceCategoriesListCategory `pulumi:"categories"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of resources and their category assignments
	Items              []GetLogAnalyticsResourceCategoriesListItem `pulumi:"items"`
	Namespace          string                                      `pulumi:"namespace"`
	ResourceCategories *string                                     `pulumi:"resourceCategories"`
	ResourceIds        *string                                     `pulumi:"resourceIds"`
	ResourceTypes      *string                                     `pulumi:"resourceTypes"`
}

func GetLogAnalyticsResourceCategoriesListOutput(ctx *pulumi.Context, args GetLogAnalyticsResourceCategoriesListOutputArgs, opts ...pulumi.InvokeOption) GetLogAnalyticsResourceCategoriesListResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetLogAnalyticsResourceCategoriesListResultOutput, error) {
			args := v.(GetLogAnalyticsResourceCategoriesListArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:LogAnalytics/getLogAnalyticsResourceCategoriesList:getLogAnalyticsResourceCategoriesList", args, GetLogAnalyticsResourceCategoriesListResultOutput{}, options).(GetLogAnalyticsResourceCategoriesListResultOutput), nil
		}).(GetLogAnalyticsResourceCategoriesListResultOutput)
}

// A collection of arguments for invoking getLogAnalyticsResourceCategoriesList.
type GetLogAnalyticsResourceCategoriesListOutputArgs struct {
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// A comma-separated list of category names used for filtering
	ResourceCategories pulumi.StringPtrInput `pulumi:"resourceCategories"`
	// A comma-separated list of resource unique identifiers used for filtering. Only resources with matching unique identifiers will be returned.
	ResourceIds pulumi.StringPtrInput `pulumi:"resourceIds"`
	// A comma-separated list of resource types used for filtering. Only resources of the types specified will be returned. Examples include SOURCE, PARSER, LOOKUP, etc.
	ResourceTypes pulumi.StringPtrInput `pulumi:"resourceTypes"`
}

func (GetLogAnalyticsResourceCategoriesListOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsResourceCategoriesListArgs)(nil)).Elem()
}

// A collection of values returned by getLogAnalyticsResourceCategoriesList.
type GetLogAnalyticsResourceCategoriesListResultOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsResourceCategoriesListResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsResourceCategoriesListResult)(nil)).Elem()
}

func (o GetLogAnalyticsResourceCategoriesListResultOutput) ToGetLogAnalyticsResourceCategoriesListResultOutput() GetLogAnalyticsResourceCategoriesListResultOutput {
	return o
}

func (o GetLogAnalyticsResourceCategoriesListResultOutput) ToGetLogAnalyticsResourceCategoriesListResultOutputWithContext(ctx context.Context) GetLogAnalyticsResourceCategoriesListResultOutput {
	return o
}

// An array of categories. The array contents include detailed information about the distinct set of categories assigned to all the listed resources under items.
func (o GetLogAnalyticsResourceCategoriesListResultOutput) Categories() GetLogAnalyticsResourceCategoriesListCategoryArrayOutput {
	return o.ApplyT(func(v GetLogAnalyticsResourceCategoriesListResult) []GetLogAnalyticsResourceCategoriesListCategory {
		return v.Categories
	}).(GetLogAnalyticsResourceCategoriesListCategoryArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetLogAnalyticsResourceCategoriesListResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsResourceCategoriesListResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of resources and their category assignments
func (o GetLogAnalyticsResourceCategoriesListResultOutput) Items() GetLogAnalyticsResourceCategoriesListItemArrayOutput {
	return o.ApplyT(func(v GetLogAnalyticsResourceCategoriesListResult) []GetLogAnalyticsResourceCategoriesListItem {
		return v.Items
	}).(GetLogAnalyticsResourceCategoriesListItemArrayOutput)
}

func (o GetLogAnalyticsResourceCategoriesListResultOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsResourceCategoriesListResult) string { return v.Namespace }).(pulumi.StringOutput)
}

func (o GetLogAnalyticsResourceCategoriesListResultOutput) ResourceCategories() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogAnalyticsResourceCategoriesListResult) *string { return v.ResourceCategories }).(pulumi.StringPtrOutput)
}

func (o GetLogAnalyticsResourceCategoriesListResultOutput) ResourceIds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogAnalyticsResourceCategoriesListResult) *string { return v.ResourceIds }).(pulumi.StringPtrOutput)
}

func (o GetLogAnalyticsResourceCategoriesListResultOutput) ResourceTypes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogAnalyticsResourceCategoriesListResult) *string { return v.ResourceTypes }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLogAnalyticsResourceCategoriesListResultOutput{})
}
