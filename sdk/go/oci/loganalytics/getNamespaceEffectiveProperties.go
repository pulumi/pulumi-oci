// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package loganalytics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Namespace Effective Properties in Oracle Cloud Infrastructure Log Analytics service.
//
// Returns a list of effective properties for the specified resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/LogAnalytics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := LogAnalytics.GetNamespaceEffectiveProperties(ctx, &loganalytics.GetNamespaceEffectivePropertiesArgs{
//				Namespace:         _var.Namespace_effective_property_namespace,
//				AgentId:           pulumi.StringRef(oci_cloud_bridge_agent.Test_agent.Id),
//				EntityId:          pulumi.StringRef(oci_log_analytics_log_analytics_entity.Test_log_analytics_entity.Id),
//				IsIncludePatterns: pulumi.BoolRef(_var.Namespace_effective_property_is_include_patterns),
//				Name:              pulumi.StringRef(_var.Namespace_effective_property_name),
//				PatternId:         pulumi.IntRef(oci_log_analytics_pattern.Test_pattern.Id),
//				SourceName:        pulumi.StringRef(_var.Namespace_effective_property_source_name),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetNamespaceEffectiveProperties(ctx *pulumi.Context, args *GetNamespaceEffectivePropertiesArgs, opts ...pulumi.InvokeOption) (*GetNamespaceEffectivePropertiesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetNamespaceEffectivePropertiesResult
	err := ctx.Invoke("oci:LogAnalytics/getNamespaceEffectiveProperties:getNamespaceEffectiveProperties", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNamespaceEffectiveProperties.
type GetNamespaceEffectivePropertiesArgs struct {
	// The agent ocid.
	AgentId *string `pulumi:"agentId"`
	// The entity ocid.
	EntityId *string                                 `pulumi:"entityId"`
	Filters  []GetNamespaceEffectivePropertiesFilter `pulumi:"filters"`
	// The include pattern flag.
	IsIncludePatterns *bool `pulumi:"isIncludePatterns"`
	// The property name used for filtering.
	Name *string `pulumi:"name"`
	// The Logging Analytics namespace used for the request.
	Namespace string `pulumi:"namespace"`
	// The pattern id.
	PatternId *int `pulumi:"patternId"`
	// The source name.
	SourceName *string `pulumi:"sourceName"`
}

// A collection of values returned by getNamespaceEffectiveProperties.
type GetNamespaceEffectivePropertiesResult struct {
	AgentId *string `pulumi:"agentId"`
	// The list of effective_property_collection.
	EffectivePropertyCollections []GetNamespaceEffectivePropertiesEffectivePropertyCollection `pulumi:"effectivePropertyCollections"`
	EntityId                     *string                                                      `pulumi:"entityId"`
	Filters                      []GetNamespaceEffectivePropertiesFilter                      `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                string `pulumi:"id"`
	IsIncludePatterns *bool  `pulumi:"isIncludePatterns"`
	// The property name.
	Name       *string `pulumi:"name"`
	Namespace  string  `pulumi:"namespace"`
	PatternId  *int    `pulumi:"patternId"`
	SourceName *string `pulumi:"sourceName"`
}

func GetNamespaceEffectivePropertiesOutput(ctx *pulumi.Context, args GetNamespaceEffectivePropertiesOutputArgs, opts ...pulumi.InvokeOption) GetNamespaceEffectivePropertiesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetNamespaceEffectivePropertiesResult, error) {
			args := v.(GetNamespaceEffectivePropertiesArgs)
			r, err := GetNamespaceEffectiveProperties(ctx, &args, opts...)
			var s GetNamespaceEffectivePropertiesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetNamespaceEffectivePropertiesResultOutput)
}

// A collection of arguments for invoking getNamespaceEffectiveProperties.
type GetNamespaceEffectivePropertiesOutputArgs struct {
	// The agent ocid.
	AgentId pulumi.StringPtrInput `pulumi:"agentId"`
	// The entity ocid.
	EntityId pulumi.StringPtrInput                           `pulumi:"entityId"`
	Filters  GetNamespaceEffectivePropertiesFilterArrayInput `pulumi:"filters"`
	// The include pattern flag.
	IsIncludePatterns pulumi.BoolPtrInput `pulumi:"isIncludePatterns"`
	// The property name used for filtering.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The pattern id.
	PatternId pulumi.IntPtrInput `pulumi:"patternId"`
	// The source name.
	SourceName pulumi.StringPtrInput `pulumi:"sourceName"`
}

func (GetNamespaceEffectivePropertiesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespaceEffectivePropertiesArgs)(nil)).Elem()
}

// A collection of values returned by getNamespaceEffectiveProperties.
type GetNamespaceEffectivePropertiesResultOutput struct{ *pulumi.OutputState }

func (GetNamespaceEffectivePropertiesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespaceEffectivePropertiesResult)(nil)).Elem()
}

func (o GetNamespaceEffectivePropertiesResultOutput) ToGetNamespaceEffectivePropertiesResultOutput() GetNamespaceEffectivePropertiesResultOutput {
	return o
}

func (o GetNamespaceEffectivePropertiesResultOutput) ToGetNamespaceEffectivePropertiesResultOutputWithContext(ctx context.Context) GetNamespaceEffectivePropertiesResultOutput {
	return o
}

func (o GetNamespaceEffectivePropertiesResultOutput) AgentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNamespaceEffectivePropertiesResult) *string { return v.AgentId }).(pulumi.StringPtrOutput)
}

// The list of effective_property_collection.
func (o GetNamespaceEffectivePropertiesResultOutput) EffectivePropertyCollections() GetNamespaceEffectivePropertiesEffectivePropertyCollectionArrayOutput {
	return o.ApplyT(func(v GetNamespaceEffectivePropertiesResult) []GetNamespaceEffectivePropertiesEffectivePropertyCollection {
		return v.EffectivePropertyCollections
	}).(GetNamespaceEffectivePropertiesEffectivePropertyCollectionArrayOutput)
}

func (o GetNamespaceEffectivePropertiesResultOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNamespaceEffectivePropertiesResult) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o GetNamespaceEffectivePropertiesResultOutput) Filters() GetNamespaceEffectivePropertiesFilterArrayOutput {
	return o.ApplyT(func(v GetNamespaceEffectivePropertiesResult) []GetNamespaceEffectivePropertiesFilter {
		return v.Filters
	}).(GetNamespaceEffectivePropertiesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetNamespaceEffectivePropertiesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceEffectivePropertiesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetNamespaceEffectivePropertiesResultOutput) IsIncludePatterns() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetNamespaceEffectivePropertiesResult) *bool { return v.IsIncludePatterns }).(pulumi.BoolPtrOutput)
}

// The property name.
func (o GetNamespaceEffectivePropertiesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNamespaceEffectivePropertiesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetNamespaceEffectivePropertiesResultOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceEffectivePropertiesResult) string { return v.Namespace }).(pulumi.StringOutput)
}

func (o GetNamespaceEffectivePropertiesResultOutput) PatternId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetNamespaceEffectivePropertiesResult) *int { return v.PatternId }).(pulumi.IntPtrOutput)
}

func (o GetNamespaceEffectivePropertiesResultOutput) SourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNamespaceEffectivePropertiesResult) *string { return v.SourceName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNamespaceEffectivePropertiesResultOutput{})
}
