// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package loganalytics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Namespace Field Usage resource in Oracle Cloud Infrastructure Log Analytics service.
//
// Gets usage information about the field with the specified name.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/loganalytics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := loganalytics.GetNamespaceFieldUsage(ctx, &loganalytics.GetNamespaceFieldUsageArgs{
//				FieldName: namespaceFieldUsageFieldName,
//				Namespace: namespaceFieldUsageNamespace,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetNamespaceFieldUsage(ctx *pulumi.Context, args *GetNamespaceFieldUsageArgs, opts ...pulumi.InvokeOption) (*GetNamespaceFieldUsageResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetNamespaceFieldUsageResult
	err := ctx.Invoke("oci:LogAnalytics/getNamespaceFieldUsage:getNamespaceFieldUsage", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNamespaceFieldUsage.
type GetNamespaceFieldUsageArgs struct {
	// The field name.
	FieldName string `pulumi:"fieldName"`
	// The Logging Analytics namespace used for the request.
	Namespace string `pulumi:"namespace"`
}

// A collection of values returned by getNamespaceFieldUsage.
type GetNamespaceFieldUsageResult struct {
	// Parsers that depend on or use the field.
	DependentParsers []GetNamespaceFieldUsageDependentParser `pulumi:"dependentParsers"`
	// Sources that depend on or use the field.
	DependentSources []GetNamespaceFieldUsageDependentSource `pulumi:"dependentSources"`
	FieldName        string                                  `pulumi:"fieldName"`
	// The provider-assigned unique ID for this managed resource.
	Id        string `pulumi:"id"`
	Namespace string `pulumi:"namespace"`
}

func GetNamespaceFieldUsageOutput(ctx *pulumi.Context, args GetNamespaceFieldUsageOutputArgs, opts ...pulumi.InvokeOption) GetNamespaceFieldUsageResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetNamespaceFieldUsageResultOutput, error) {
			args := v.(GetNamespaceFieldUsageArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:LogAnalytics/getNamespaceFieldUsage:getNamespaceFieldUsage", args, GetNamespaceFieldUsageResultOutput{}, options).(GetNamespaceFieldUsageResultOutput), nil
		}).(GetNamespaceFieldUsageResultOutput)
}

// A collection of arguments for invoking getNamespaceFieldUsage.
type GetNamespaceFieldUsageOutputArgs struct {
	// The field name.
	FieldName pulumi.StringInput `pulumi:"fieldName"`
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (GetNamespaceFieldUsageOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespaceFieldUsageArgs)(nil)).Elem()
}

// A collection of values returned by getNamespaceFieldUsage.
type GetNamespaceFieldUsageResultOutput struct{ *pulumi.OutputState }

func (GetNamespaceFieldUsageResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespaceFieldUsageResult)(nil)).Elem()
}

func (o GetNamespaceFieldUsageResultOutput) ToGetNamespaceFieldUsageResultOutput() GetNamespaceFieldUsageResultOutput {
	return o
}

func (o GetNamespaceFieldUsageResultOutput) ToGetNamespaceFieldUsageResultOutputWithContext(ctx context.Context) GetNamespaceFieldUsageResultOutput {
	return o
}

// Parsers that depend on or use the field.
func (o GetNamespaceFieldUsageResultOutput) DependentParsers() GetNamespaceFieldUsageDependentParserArrayOutput {
	return o.ApplyT(func(v GetNamespaceFieldUsageResult) []GetNamespaceFieldUsageDependentParser {
		return v.DependentParsers
	}).(GetNamespaceFieldUsageDependentParserArrayOutput)
}

// Sources that depend on or use the field.
func (o GetNamespaceFieldUsageResultOutput) DependentSources() GetNamespaceFieldUsageDependentSourceArrayOutput {
	return o.ApplyT(func(v GetNamespaceFieldUsageResult) []GetNamespaceFieldUsageDependentSource {
		return v.DependentSources
	}).(GetNamespaceFieldUsageDependentSourceArrayOutput)
}

func (o GetNamespaceFieldUsageResultOutput) FieldName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceFieldUsageResult) string { return v.FieldName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetNamespaceFieldUsageResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceFieldUsageResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetNamespaceFieldUsageResultOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceFieldUsageResult) string { return v.Namespace }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNamespaceFieldUsageResultOutput{})
}
