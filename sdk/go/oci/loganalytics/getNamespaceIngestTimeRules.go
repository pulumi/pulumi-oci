// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package loganalytics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Namespace Ingest Time Rules in Oracle Cloud Infrastructure Log Analytics service.
//
// Returns a list of ingest time rules in a compartment. You may limit the number of rules, provide sorting options, and filter the results.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/loganalytics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := loganalytics.GetNamespaceIngestTimeRules(ctx, &loganalytics.GetNamespaceIngestTimeRulesArgs{
//				CompartmentId: compartmentId,
//				Namespace:     namespaceIngestTimeRuleNamespace,
//				ConditionKind: pulumi.StringRef(namespaceIngestTimeRuleConditionKind),
//				DisplayName:   pulumi.StringRef(namespaceIngestTimeRuleDisplayName),
//				FieldName:     pulumi.StringRef(namespaceIngestTimeRuleFieldName),
//				FieldValue:    pulumi.StringRef(namespaceIngestTimeRuleFieldValue),
//				State:         pulumi.StringRef(namespaceIngestTimeRuleState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetNamespaceIngestTimeRules(ctx *pulumi.Context, args *GetNamespaceIngestTimeRulesArgs, opts ...pulumi.InvokeOption) (*GetNamespaceIngestTimeRulesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetNamespaceIngestTimeRulesResult
	err := ctx.Invoke("oci:LogAnalytics/getNamespaceIngestTimeRules:getNamespaceIngestTimeRules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNamespaceIngestTimeRules.
type GetNamespaceIngestTimeRulesArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// The ingest time rule condition kind used for filtering. Only rules with conditions of the specified kind will be returned.
	ConditionKind *string `pulumi:"conditionKind"`
	// A filter to return rules whose displayName matches in whole or in part the specified value. The match is case-insensitive.
	DisplayName *string `pulumi:"displayName"`
	// The field name used for filtering. Only rules using the specified field name will be returned.
	FieldName *string `pulumi:"fieldName"`
	// The field value used for filtering. Only rules using the specified field value will be returned.
	FieldValue *string                             `pulumi:"fieldValue"`
	Filters    []GetNamespaceIngestTimeRulesFilter `pulumi:"filters"`
	// The Logging Analytics namespace used for the request.
	Namespace string `pulumi:"namespace"`
	// The rule lifecycle state used for filtering. Currently supported values are ACTIVE and DELETED.
	State *string `pulumi:"state"`
}

// A collection of values returned by getNamespaceIngestTimeRules.
type GetNamespaceIngestTimeRulesResult struct {
	// Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string  `pulumi:"compartmentId"`
	ConditionKind *string `pulumi:"conditionKind"`
	// The ingest time rule display name.
	DisplayName *string `pulumi:"displayName"`
	// The field name to be evaluated.
	FieldName *string `pulumi:"fieldName"`
	// The field value to be evaluated.
	FieldValue *string                             `pulumi:"fieldValue"`
	Filters    []GetNamespaceIngestTimeRulesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of ingest_time_rule_summary_collection.
	IngestTimeRuleSummaryCollections []GetNamespaceIngestTimeRulesIngestTimeRuleSummaryCollection `pulumi:"ingestTimeRuleSummaryCollections"`
	// The namespace of the extracted metric. A valid value starts with an alphabetical character and includes only alphanumeric characters and underscores (_).
	Namespace string `pulumi:"namespace"`
	// The current state of the ingest time rule.
	State *string `pulumi:"state"`
}

func GetNamespaceIngestTimeRulesOutput(ctx *pulumi.Context, args GetNamespaceIngestTimeRulesOutputArgs, opts ...pulumi.InvokeOption) GetNamespaceIngestTimeRulesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetNamespaceIngestTimeRulesResultOutput, error) {
			args := v.(GetNamespaceIngestTimeRulesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:LogAnalytics/getNamespaceIngestTimeRules:getNamespaceIngestTimeRules", args, GetNamespaceIngestTimeRulesResultOutput{}, options).(GetNamespaceIngestTimeRulesResultOutput), nil
		}).(GetNamespaceIngestTimeRulesResultOutput)
}

// A collection of arguments for invoking getNamespaceIngestTimeRules.
type GetNamespaceIngestTimeRulesOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The ingest time rule condition kind used for filtering. Only rules with conditions of the specified kind will be returned.
	ConditionKind pulumi.StringPtrInput `pulumi:"conditionKind"`
	// A filter to return rules whose displayName matches in whole or in part the specified value. The match is case-insensitive.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The field name used for filtering. Only rules using the specified field name will be returned.
	FieldName pulumi.StringPtrInput `pulumi:"fieldName"`
	// The field value used for filtering. Only rules using the specified field value will be returned.
	FieldValue pulumi.StringPtrInput                       `pulumi:"fieldValue"`
	Filters    GetNamespaceIngestTimeRulesFilterArrayInput `pulumi:"filters"`
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The rule lifecycle state used for filtering. Currently supported values are ACTIVE and DELETED.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetNamespaceIngestTimeRulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespaceIngestTimeRulesArgs)(nil)).Elem()
}

// A collection of values returned by getNamespaceIngestTimeRules.
type GetNamespaceIngestTimeRulesResultOutput struct{ *pulumi.OutputState }

func (GetNamespaceIngestTimeRulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespaceIngestTimeRulesResult)(nil)).Elem()
}

func (o GetNamespaceIngestTimeRulesResultOutput) ToGetNamespaceIngestTimeRulesResultOutput() GetNamespaceIngestTimeRulesResultOutput {
	return o
}

func (o GetNamespaceIngestTimeRulesResultOutput) ToGetNamespaceIngestTimeRulesResultOutputWithContext(ctx context.Context) GetNamespaceIngestTimeRulesResultOutput {
	return o
}

// Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetNamespaceIngestTimeRulesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceIngestTimeRulesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetNamespaceIngestTimeRulesResultOutput) ConditionKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNamespaceIngestTimeRulesResult) *string { return v.ConditionKind }).(pulumi.StringPtrOutput)
}

// The ingest time rule display name.
func (o GetNamespaceIngestTimeRulesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNamespaceIngestTimeRulesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The field name to be evaluated.
func (o GetNamespaceIngestTimeRulesResultOutput) FieldName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNamespaceIngestTimeRulesResult) *string { return v.FieldName }).(pulumi.StringPtrOutput)
}

// The field value to be evaluated.
func (o GetNamespaceIngestTimeRulesResultOutput) FieldValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNamespaceIngestTimeRulesResult) *string { return v.FieldValue }).(pulumi.StringPtrOutput)
}

func (o GetNamespaceIngestTimeRulesResultOutput) Filters() GetNamespaceIngestTimeRulesFilterArrayOutput {
	return o.ApplyT(func(v GetNamespaceIngestTimeRulesResult) []GetNamespaceIngestTimeRulesFilter { return v.Filters }).(GetNamespaceIngestTimeRulesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetNamespaceIngestTimeRulesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceIngestTimeRulesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of ingest_time_rule_summary_collection.
func (o GetNamespaceIngestTimeRulesResultOutput) IngestTimeRuleSummaryCollections() GetNamespaceIngestTimeRulesIngestTimeRuleSummaryCollectionArrayOutput {
	return o.ApplyT(func(v GetNamespaceIngestTimeRulesResult) []GetNamespaceIngestTimeRulesIngestTimeRuleSummaryCollection {
		return v.IngestTimeRuleSummaryCollections
	}).(GetNamespaceIngestTimeRulesIngestTimeRuleSummaryCollectionArrayOutput)
}

// The namespace of the extracted metric. A valid value starts with an alphabetical character and includes only alphanumeric characters and underscores (_).
func (o GetNamespaceIngestTimeRulesResultOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceIngestTimeRulesResult) string { return v.Namespace }).(pulumi.StringOutput)
}

// The current state of the ingest time rule.
func (o GetNamespaceIngestTimeRulesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNamespaceIngestTimeRulesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNamespaceIngestTimeRulesResultOutput{})
}
