// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package loganalytics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Namespace Lookup resource in Oracle Cloud Infrastructure Log Analytics service.
//
// Gets detailed information about the lookup with the specified name.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/loganalytics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := loganalytics.GetNamespaceLookup(ctx, &loganalytics.GetNamespaceLookupArgs{
//				LookupName: namespaceLookupLookupName,
//				Namespace:  namespaceLookupNamespace,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupNamespaceLookup(ctx *pulumi.Context, args *LookupNamespaceLookupArgs, opts ...pulumi.InvokeOption) (*LookupNamespaceLookupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNamespaceLookupResult
	err := ctx.Invoke("oci:LogAnalytics/getNamespaceLookup:getNamespaceLookup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNamespaceLookup.
type LookupNamespaceLookupArgs struct {
	// The name of the lookup to operate on.
	LookupName string `pulumi:"lookupName"`
	// The Logging Analytics namespace used for the request.
	Namespace string `pulumi:"namespace"`
}

// A collection of values returned by getNamespaceLookup.
type LookupNamespaceLookupResult struct {
	// The active edit version.
	ActiveEditVersion string `pulumi:"activeEditVersion"`
	// The canonical link.
	CanonicalLink string `pulumi:"canonicalLink"`
	// An array of categories assigned to this lookup. The isSystem flag denotes if each category assignment is user-created or Oracle-defined.
	Categories   []GetNamespaceLookupCategory `pulumi:"categories"`
	CharEncoding string                       `pulumi:"charEncoding"`
	// Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// The default match value.
	DefaultMatchValue string `pulumi:"defaultMatchValue"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// The lookup description.
	Description string `pulumi:"description"`
	// The edit version.
	EditVersion string `pulumi:"editVersion"`
	// The lookup fields.
	Fields []GetNamespaceLookupField `pulumi:"fields"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
	Id string `pulumi:"id"`
	// A flag indicating if the lookup is custom (user-defined) or built in.
	IsBuiltIn string `pulumi:"isBuiltIn"`
	// A flag indicating if the lookup is hidden or not.  A hidden lookup will not be returned in list operations by default.
	IsHidden bool `pulumi:"isHidden"`
	// The lookup display name.
	LookupDisplayName string `pulumi:"lookupDisplayName"`
	// The lookup OCID.
	LookupId string `pulumi:"lookupId"`
	// The lookup name.
	LookupName string `pulumi:"lookupName"`
	// The lookup reference as an integer.
	LookupReference string `pulumi:"lookupReference"`
	// The lookup reference as a string.
	LookupReferenceString string `pulumi:"lookupReferenceString"`
	MaxMatches            string `pulumi:"maxMatches"`
	Namespace             string `pulumi:"namespace"`
	// AutoLookups
	ReferringSources   []GetNamespaceLookupReferringSource `pulumi:"referringSources"`
	RegisterLookupFile string                              `pulumi:"registerLookupFile"`
	// StatusSummary
	StatusSummaries []GetNamespaceLookupStatusSummary `pulumi:"statusSummaries"`
	// The last updated date.
	TimeUpdated string `pulumi:"timeUpdated"`
	// The lookup type. Valid values are Lookup, Dictionary or Module.
	Type string `pulumi:"type"`
}

func LookupNamespaceLookupOutput(ctx *pulumi.Context, args LookupNamespaceLookupOutputArgs, opts ...pulumi.InvokeOption) LookupNamespaceLookupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNamespaceLookupResultOutput, error) {
			args := v.(LookupNamespaceLookupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:LogAnalytics/getNamespaceLookup:getNamespaceLookup", args, LookupNamespaceLookupResultOutput{}, options).(LookupNamespaceLookupResultOutput), nil
		}).(LookupNamespaceLookupResultOutput)
}

// A collection of arguments for invoking getNamespaceLookup.
type LookupNamespaceLookupOutputArgs struct {
	// The name of the lookup to operate on.
	LookupName pulumi.StringInput `pulumi:"lookupName"`
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (LookupNamespaceLookupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNamespaceLookupArgs)(nil)).Elem()
}

// A collection of values returned by getNamespaceLookup.
type LookupNamespaceLookupResultOutput struct{ *pulumi.OutputState }

func (LookupNamespaceLookupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNamespaceLookupResult)(nil)).Elem()
}

func (o LookupNamespaceLookupResultOutput) ToLookupNamespaceLookupResultOutput() LookupNamespaceLookupResultOutput {
	return o
}

func (o LookupNamespaceLookupResultOutput) ToLookupNamespaceLookupResultOutputWithContext(ctx context.Context) LookupNamespaceLookupResultOutput {
	return o
}

// The active edit version.
func (o LookupNamespaceLookupResultOutput) ActiveEditVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceLookupResult) string { return v.ActiveEditVersion }).(pulumi.StringOutput)
}

// The canonical link.
func (o LookupNamespaceLookupResultOutput) CanonicalLink() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceLookupResult) string { return v.CanonicalLink }).(pulumi.StringOutput)
}

// An array of categories assigned to this lookup. The isSystem flag denotes if each category assignment is user-created or Oracle-defined.
func (o LookupNamespaceLookupResultOutput) Categories() GetNamespaceLookupCategoryArrayOutput {
	return o.ApplyT(func(v LookupNamespaceLookupResult) []GetNamespaceLookupCategory { return v.Categories }).(GetNamespaceLookupCategoryArrayOutput)
}

func (o LookupNamespaceLookupResultOutput) CharEncoding() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceLookupResult) string { return v.CharEncoding }).(pulumi.StringOutput)
}

// Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o LookupNamespaceLookupResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceLookupResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The default match value.
func (o LookupNamespaceLookupResultOutput) DefaultMatchValue() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceLookupResult) string { return v.DefaultMatchValue }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupNamespaceLookupResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupNamespaceLookupResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// The lookup description.
func (o LookupNamespaceLookupResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceLookupResult) string { return v.Description }).(pulumi.StringOutput)
}

// The edit version.
func (o LookupNamespaceLookupResultOutput) EditVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceLookupResult) string { return v.EditVersion }).(pulumi.StringOutput)
}

// The lookup fields.
func (o LookupNamespaceLookupResultOutput) Fields() GetNamespaceLookupFieldArrayOutput {
	return o.ApplyT(func(v LookupNamespaceLookupResult) []GetNamespaceLookupField { return v.Fields }).(GetNamespaceLookupFieldArrayOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupNamespaceLookupResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupNamespaceLookupResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
func (o LookupNamespaceLookupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceLookupResult) string { return v.Id }).(pulumi.StringOutput)
}

// A flag indicating if the lookup is custom (user-defined) or built in.
func (o LookupNamespaceLookupResultOutput) IsBuiltIn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceLookupResult) string { return v.IsBuiltIn }).(pulumi.StringOutput)
}

// A flag indicating if the lookup is hidden or not.  A hidden lookup will not be returned in list operations by default.
func (o LookupNamespaceLookupResultOutput) IsHidden() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupNamespaceLookupResult) bool { return v.IsHidden }).(pulumi.BoolOutput)
}

// The lookup display name.
func (o LookupNamespaceLookupResultOutput) LookupDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceLookupResult) string { return v.LookupDisplayName }).(pulumi.StringOutput)
}

// The lookup OCID.
func (o LookupNamespaceLookupResultOutput) LookupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceLookupResult) string { return v.LookupId }).(pulumi.StringOutput)
}

// The lookup name.
func (o LookupNamespaceLookupResultOutput) LookupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceLookupResult) string { return v.LookupName }).(pulumi.StringOutput)
}

// The lookup reference as an integer.
func (o LookupNamespaceLookupResultOutput) LookupReference() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceLookupResult) string { return v.LookupReference }).(pulumi.StringOutput)
}

// The lookup reference as a string.
func (o LookupNamespaceLookupResultOutput) LookupReferenceString() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceLookupResult) string { return v.LookupReferenceString }).(pulumi.StringOutput)
}

func (o LookupNamespaceLookupResultOutput) MaxMatches() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceLookupResult) string { return v.MaxMatches }).(pulumi.StringOutput)
}

func (o LookupNamespaceLookupResultOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceLookupResult) string { return v.Namespace }).(pulumi.StringOutput)
}

// AutoLookups
func (o LookupNamespaceLookupResultOutput) ReferringSources() GetNamespaceLookupReferringSourceArrayOutput {
	return o.ApplyT(func(v LookupNamespaceLookupResult) []GetNamespaceLookupReferringSource { return v.ReferringSources }).(GetNamespaceLookupReferringSourceArrayOutput)
}

func (o LookupNamespaceLookupResultOutput) RegisterLookupFile() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceLookupResult) string { return v.RegisterLookupFile }).(pulumi.StringOutput)
}

// StatusSummary
func (o LookupNamespaceLookupResultOutput) StatusSummaries() GetNamespaceLookupStatusSummaryArrayOutput {
	return o.ApplyT(func(v LookupNamespaceLookupResult) []GetNamespaceLookupStatusSummary { return v.StatusSummaries }).(GetNamespaceLookupStatusSummaryArrayOutput)
}

// The last updated date.
func (o LookupNamespaceLookupResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceLookupResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The lookup type. Valid values are Lookup, Dictionary or Module.
func (o LookupNamespaceLookupResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceLookupResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNamespaceLookupResultOutput{})
}
