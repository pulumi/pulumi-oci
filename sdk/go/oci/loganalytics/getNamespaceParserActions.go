// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package loganalytics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Namespace Parser Actions in Oracle Cloud Infrastructure Log Analytics service.
//
// Returns a list of parser actions. You may limit the number of results and provide sorting order.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/loganalytics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := loganalytics.GetNamespaceParserActions(ctx, &loganalytics.GetNamespaceParserActionsArgs{
//				Namespace:         namespaceParserActionNamespace,
//				ActionDisplayText: pulumi.StringRef(namespaceParserActionActionDisplayText),
//				Name:              pulumi.StringRef(namespaceParserActionName),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetNamespaceParserActions(ctx *pulumi.Context, args *GetNamespaceParserActionsArgs, opts ...pulumi.InvokeOption) (*GetNamespaceParserActionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetNamespaceParserActionsResult
	err := ctx.Invoke("oci:LogAnalytics/getNamespaceParserActions:getNamespaceParserActions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNamespaceParserActions.
type GetNamespaceParserActionsArgs struct {
	// The parser action display text used for filtering.
	ActionDisplayText *string                           `pulumi:"actionDisplayText"`
	Filters           []GetNamespaceParserActionsFilter `pulumi:"filters"`
	// The parser action name used for filtering.
	Name *string `pulumi:"name"`
	// The Logging Analytics namespace used for the request.
	Namespace string `pulumi:"namespace"`
}

// A collection of values returned by getNamespaceParserActions.
type GetNamespaceParserActionsResult struct {
	ActionDisplayText *string                           `pulumi:"actionDisplayText"`
	Filters           []GetNamespaceParserActionsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The parser action name.
	Name      *string `pulumi:"name"`
	Namespace string  `pulumi:"namespace"`
	// The list of parser_action_summary_collection.
	ParserActionSummaryCollections []GetNamespaceParserActionsParserActionSummaryCollection `pulumi:"parserActionSummaryCollections"`
}

func GetNamespaceParserActionsOutput(ctx *pulumi.Context, args GetNamespaceParserActionsOutputArgs, opts ...pulumi.InvokeOption) GetNamespaceParserActionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetNamespaceParserActionsResultOutput, error) {
			args := v.(GetNamespaceParserActionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:LogAnalytics/getNamespaceParserActions:getNamespaceParserActions", args, GetNamespaceParserActionsResultOutput{}, options).(GetNamespaceParserActionsResultOutput), nil
		}).(GetNamespaceParserActionsResultOutput)
}

// A collection of arguments for invoking getNamespaceParserActions.
type GetNamespaceParserActionsOutputArgs struct {
	// The parser action display text used for filtering.
	ActionDisplayText pulumi.StringPtrInput                     `pulumi:"actionDisplayText"`
	Filters           GetNamespaceParserActionsFilterArrayInput `pulumi:"filters"`
	// The parser action name used for filtering.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (GetNamespaceParserActionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespaceParserActionsArgs)(nil)).Elem()
}

// A collection of values returned by getNamespaceParserActions.
type GetNamespaceParserActionsResultOutput struct{ *pulumi.OutputState }

func (GetNamespaceParserActionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespaceParserActionsResult)(nil)).Elem()
}

func (o GetNamespaceParserActionsResultOutput) ToGetNamespaceParserActionsResultOutput() GetNamespaceParserActionsResultOutput {
	return o
}

func (o GetNamespaceParserActionsResultOutput) ToGetNamespaceParserActionsResultOutputWithContext(ctx context.Context) GetNamespaceParserActionsResultOutput {
	return o
}

func (o GetNamespaceParserActionsResultOutput) ActionDisplayText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNamespaceParserActionsResult) *string { return v.ActionDisplayText }).(pulumi.StringPtrOutput)
}

func (o GetNamespaceParserActionsResultOutput) Filters() GetNamespaceParserActionsFilterArrayOutput {
	return o.ApplyT(func(v GetNamespaceParserActionsResult) []GetNamespaceParserActionsFilter { return v.Filters }).(GetNamespaceParserActionsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetNamespaceParserActionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceParserActionsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The parser action name.
func (o GetNamespaceParserActionsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNamespaceParserActionsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetNamespaceParserActionsResultOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceParserActionsResult) string { return v.Namespace }).(pulumi.StringOutput)
}

// The list of parser_action_summary_collection.
func (o GetNamespaceParserActionsResultOutput) ParserActionSummaryCollections() GetNamespaceParserActionsParserActionSummaryCollectionArrayOutput {
	return o.ApplyT(func(v GetNamespaceParserActionsResult) []GetNamespaceParserActionsParserActionSummaryCollection {
		return v.ParserActionSummaryCollections
	}).(GetNamespaceParserActionsParserActionSummaryCollectionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNamespaceParserActionsResultOutput{})
}
