// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package loganalytics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Namespace Properties Metadata in Oracle Cloud Infrastructure Log Analytics service.
//
// Returns a list of properties along with their metadata.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/LogAnalytics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := LogAnalytics.GetNamespacePropertiesMetadata(ctx, &loganalytics.GetNamespacePropertiesMetadataArgs{
//				Namespace:   namespacePropertiesMetadataNamespace,
//				Constraints: pulumi.StringRef(namespacePropertiesMetadataConstraints),
//				DisplayText: pulumi.StringRef(namespacePropertiesMetadataDisplayText),
//				Level:       pulumi.StringRef(namespacePropertiesMetadataLevel),
//				Name:        pulumi.StringRef(namespacePropertiesMetadataName),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetNamespacePropertiesMetadata(ctx *pulumi.Context, args *GetNamespacePropertiesMetadataArgs, opts ...pulumi.InvokeOption) (*GetNamespacePropertiesMetadataResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetNamespacePropertiesMetadataResult
	err := ctx.Invoke("oci:LogAnalytics/getNamespacePropertiesMetadata:getNamespacePropertiesMetadata", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNamespacePropertiesMetadata.
type GetNamespacePropertiesMetadataArgs struct {
	// The constraints that apply to the properties at a certain level.
	Constraints *string `pulumi:"constraints"`
	// The property display text used for filtering. Only properties matching the specified display name or description will be returned.
	DisplayText *string                                `pulumi:"displayText"`
	Filters     []GetNamespacePropertiesMetadataFilter `pulumi:"filters"`
	// The level for which applicable properties are to be listed.
	Level *string `pulumi:"level"`
	// The property name used for filtering.
	Name *string `pulumi:"name"`
	// The Logging Analytics namespace used for the request.
	Namespace string `pulumi:"namespace"`
}

// A collection of values returned by getNamespacePropertiesMetadata.
type GetNamespacePropertiesMetadataResult struct {
	// A string representation of constraints that apply at this level. For example, a property defined at SOURCE level could further be applicable only for SOURCE_TYPE:database_sql.
	Constraints *string                                `pulumi:"constraints"`
	DisplayText *string                                `pulumi:"displayText"`
	Filters     []GetNamespacePropertiesMetadataFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id    string  `pulumi:"id"`
	Level *string `pulumi:"level"`
	// The property name.
	Name      *string `pulumi:"name"`
	Namespace string  `pulumi:"namespace"`
	// The list of property_metadata_summary_collection.
	PropertyMetadataSummaryCollections []GetNamespacePropertiesMetadataPropertyMetadataSummaryCollection `pulumi:"propertyMetadataSummaryCollections"`
}

func GetNamespacePropertiesMetadataOutput(ctx *pulumi.Context, args GetNamespacePropertiesMetadataOutputArgs, opts ...pulumi.InvokeOption) GetNamespacePropertiesMetadataResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetNamespacePropertiesMetadataResult, error) {
			args := v.(GetNamespacePropertiesMetadataArgs)
			r, err := GetNamespacePropertiesMetadata(ctx, &args, opts...)
			var s GetNamespacePropertiesMetadataResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetNamespacePropertiesMetadataResultOutput)
}

// A collection of arguments for invoking getNamespacePropertiesMetadata.
type GetNamespacePropertiesMetadataOutputArgs struct {
	// The constraints that apply to the properties at a certain level.
	Constraints pulumi.StringPtrInput `pulumi:"constraints"`
	// The property display text used for filtering. Only properties matching the specified display name or description will be returned.
	DisplayText pulumi.StringPtrInput                          `pulumi:"displayText"`
	Filters     GetNamespacePropertiesMetadataFilterArrayInput `pulumi:"filters"`
	// The level for which applicable properties are to be listed.
	Level pulumi.StringPtrInput `pulumi:"level"`
	// The property name used for filtering.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (GetNamespacePropertiesMetadataOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespacePropertiesMetadataArgs)(nil)).Elem()
}

// A collection of values returned by getNamespacePropertiesMetadata.
type GetNamespacePropertiesMetadataResultOutput struct{ *pulumi.OutputState }

func (GetNamespacePropertiesMetadataResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespacePropertiesMetadataResult)(nil)).Elem()
}

func (o GetNamespacePropertiesMetadataResultOutput) ToGetNamespacePropertiesMetadataResultOutput() GetNamespacePropertiesMetadataResultOutput {
	return o
}

func (o GetNamespacePropertiesMetadataResultOutput) ToGetNamespacePropertiesMetadataResultOutputWithContext(ctx context.Context) GetNamespacePropertiesMetadataResultOutput {
	return o
}

// A string representation of constraints that apply at this level. For example, a property defined at SOURCE level could further be applicable only for SOURCE_TYPE:database_sql.
func (o GetNamespacePropertiesMetadataResultOutput) Constraints() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNamespacePropertiesMetadataResult) *string { return v.Constraints }).(pulumi.StringPtrOutput)
}

func (o GetNamespacePropertiesMetadataResultOutput) DisplayText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNamespacePropertiesMetadataResult) *string { return v.DisplayText }).(pulumi.StringPtrOutput)
}

func (o GetNamespacePropertiesMetadataResultOutput) Filters() GetNamespacePropertiesMetadataFilterArrayOutput {
	return o.ApplyT(func(v GetNamespacePropertiesMetadataResult) []GetNamespacePropertiesMetadataFilter { return v.Filters }).(GetNamespacePropertiesMetadataFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetNamespacePropertiesMetadataResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespacePropertiesMetadataResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetNamespacePropertiesMetadataResultOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNamespacePropertiesMetadataResult) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// The property name.
func (o GetNamespacePropertiesMetadataResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNamespacePropertiesMetadataResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetNamespacePropertiesMetadataResultOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespacePropertiesMetadataResult) string { return v.Namespace }).(pulumi.StringOutput)
}

// The list of property_metadata_summary_collection.
func (o GetNamespacePropertiesMetadataResultOutput) PropertyMetadataSummaryCollections() GetNamespacePropertiesMetadataPropertyMetadataSummaryCollectionArrayOutput {
	return o.ApplyT(func(v GetNamespacePropertiesMetadataResult) []GetNamespacePropertiesMetadataPropertyMetadataSummaryCollection {
		return v.PropertyMetadataSummaryCollections
	}).(GetNamespacePropertiesMetadataPropertyMetadataSummaryCollectionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNamespacePropertiesMetadataResultOutput{})
}
