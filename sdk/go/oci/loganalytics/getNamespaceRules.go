// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package loganalytics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Namespace Rules in Oracle Cloud Infrastructure Log Analytics service.
//
// Returns a list of ingest time rules and scheduled tasks in a compartment. You may limit the number of items returned, provide sorting options, and filter the results.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/LogAnalytics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := LogAnalytics.GetNamespaceRules(ctx, &loganalytics.GetNamespaceRulesArgs{
//				CompartmentId: compartmentId,
//				Namespace:     namespaceRuleNamespace,
//				DisplayName:   pulumi.StringRef(namespaceRuleDisplayName),
//				Kind:          pulumi.StringRef(namespaceRuleKind),
//				State:         pulumi.StringRef(namespaceRuleState),
//				TargetService: pulumi.StringRef(namespaceRuleTargetService),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetNamespaceRules(ctx *pulumi.Context, args *GetNamespaceRulesArgs, opts ...pulumi.InvokeOption) (*GetNamespaceRulesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetNamespaceRulesResult
	err := ctx.Invoke("oci:LogAnalytics/getNamespaceRules:getNamespaceRules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNamespaceRules.
type GetNamespaceRulesArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return rules whose displayName matches in whole or in part the specified value. The match is case-insensitive.
	DisplayName *string                   `pulumi:"displayName"`
	Filters     []GetNamespaceRulesFilter `pulumi:"filters"`
	// The rule kind used for filtering. Only rules of the specified kind will be returned.
	Kind *string `pulumi:"kind"`
	// The Logging Analytics namespace used for the request.
	Namespace string `pulumi:"namespace"`
	// The rule lifecycle state used for filtering. Currently supported values are ACTIVE and DELETED.
	State *string `pulumi:"state"`
	// The target service to use for filtering.
	TargetService *string `pulumi:"targetService"`
}

// A collection of values returned by getNamespaceRules.
type GetNamespaceRulesResult struct {
	// Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// The ingest time rule or scheduled task display name.
	DisplayName *string                   `pulumi:"displayName"`
	Filters     []GetNamespaceRulesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The kind of rule - either an ingest time rule or a scheduled task.
	Kind      *string `pulumi:"kind"`
	Namespace string  `pulumi:"namespace"`
	// The list of rule_summary_collection.
	RuleSummaryCollections []GetNamespaceRulesRuleSummaryCollection `pulumi:"ruleSummaryCollections"`
	// The current state of the logging analytics rule.
	State *string `pulumi:"state"`
	// The target service.
	TargetService *string `pulumi:"targetService"`
}

func GetNamespaceRulesOutput(ctx *pulumi.Context, args GetNamespaceRulesOutputArgs, opts ...pulumi.InvokeOption) GetNamespaceRulesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetNamespaceRulesResultOutput, error) {
			args := v.(GetNamespaceRulesArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetNamespaceRulesResult
			secret, err := ctx.InvokePackageRaw("oci:LogAnalytics/getNamespaceRules:getNamespaceRules", args, &rv, "", opts...)
			if err != nil {
				return GetNamespaceRulesResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetNamespaceRulesResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetNamespaceRulesResultOutput), nil
			}
			return output, nil
		}).(GetNamespaceRulesResultOutput)
}

// A collection of arguments for invoking getNamespaceRules.
type GetNamespaceRulesOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return rules whose displayName matches in whole or in part the specified value. The match is case-insensitive.
	DisplayName pulumi.StringPtrInput             `pulumi:"displayName"`
	Filters     GetNamespaceRulesFilterArrayInput `pulumi:"filters"`
	// The rule kind used for filtering. Only rules of the specified kind will be returned.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The rule lifecycle state used for filtering. Currently supported values are ACTIVE and DELETED.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The target service to use for filtering.
	TargetService pulumi.StringPtrInput `pulumi:"targetService"`
}

func (GetNamespaceRulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespaceRulesArgs)(nil)).Elem()
}

// A collection of values returned by getNamespaceRules.
type GetNamespaceRulesResultOutput struct{ *pulumi.OutputState }

func (GetNamespaceRulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespaceRulesResult)(nil)).Elem()
}

func (o GetNamespaceRulesResultOutput) ToGetNamespaceRulesResultOutput() GetNamespaceRulesResultOutput {
	return o
}

func (o GetNamespaceRulesResultOutput) ToGetNamespaceRulesResultOutputWithContext(ctx context.Context) GetNamespaceRulesResultOutput {
	return o
}

// Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetNamespaceRulesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceRulesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The ingest time rule or scheduled task display name.
func (o GetNamespaceRulesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNamespaceRulesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetNamespaceRulesResultOutput) Filters() GetNamespaceRulesFilterArrayOutput {
	return o.ApplyT(func(v GetNamespaceRulesResult) []GetNamespaceRulesFilter { return v.Filters }).(GetNamespaceRulesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetNamespaceRulesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceRulesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The kind of rule - either an ingest time rule or a scheduled task.
func (o GetNamespaceRulesResultOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNamespaceRulesResult) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o GetNamespaceRulesResultOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceRulesResult) string { return v.Namespace }).(pulumi.StringOutput)
}

// The list of rule_summary_collection.
func (o GetNamespaceRulesResultOutput) RuleSummaryCollections() GetNamespaceRulesRuleSummaryCollectionArrayOutput {
	return o.ApplyT(func(v GetNamespaceRulesResult) []GetNamespaceRulesRuleSummaryCollection {
		return v.RuleSummaryCollections
	}).(GetNamespaceRulesRuleSummaryCollectionArrayOutput)
}

// The current state of the logging analytics rule.
func (o GetNamespaceRulesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNamespaceRulesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The target service.
func (o GetNamespaceRulesResultOutput) TargetService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNamespaceRulesResult) *string { return v.TargetService }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNamespaceRulesResultOutput{})
}
