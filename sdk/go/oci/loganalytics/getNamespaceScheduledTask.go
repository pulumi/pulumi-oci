// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package loganalytics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Namespace Scheduled Task resource in Oracle Cloud Infrastructure Log Analytics service.
//
// Get the scheduled task for the specified task identifier.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/LogAnalytics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := LogAnalytics.GetNamespaceScheduledTask(ctx, &loganalytics.GetNamespaceScheduledTaskArgs{
//				Namespace:       _var.Namespace_scheduled_task_namespace,
//				ScheduledTaskId: oci_log_analytics_scheduled_task.Test_scheduled_task.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupNamespaceScheduledTask(ctx *pulumi.Context, args *LookupNamespaceScheduledTaskArgs, opts ...pulumi.InvokeOption) (*LookupNamespaceScheduledTaskResult, error) {
	var rv LookupNamespaceScheduledTaskResult
	err := ctx.Invoke("oci:LogAnalytics/getNamespaceScheduledTask:getNamespaceScheduledTask", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNamespaceScheduledTask.
type LookupNamespaceScheduledTaskArgs struct {
	// The Logging Analytics namespace used for the request.
	Namespace string `pulumi:"namespace"`
	// Unique scheduledTask id returned from task create. If invalid will lead to a 404 not found.
	ScheduledTaskId string `pulumi:"scheduledTaskId"`
}

// A collection of values returned by getNamespaceScheduledTask.
type LookupNamespaceScheduledTaskResult struct {
	// Action for scheduled task.
	Actions []GetNamespaceScheduledTaskAction `pulumi:"actions"`
	// Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A user-friendly name that is changeable and that does not have to be unique. Format: a leading alphanumeric, followed by zero or more alphanumerics, underscores, spaces, backslashes, or hyphens in any order). No trailing spaces allowed.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the data plane resource.
	Id string `pulumi:"id"`
	// Discriminator.
	Kind string `pulumi:"kind"`
	// The namespace of the extracted metric. A valid value starts with an alphabetical character and includes only alphanumeric characters and underscores (_).
	Namespace string `pulumi:"namespace"`
	// Number of execution occurrences.
	NumOccurrences string `pulumi:"numOccurrences"`
	// The ManagementSavedSearch id [OCID] utilized in the action.
	SavedSearchId   string `pulumi:"savedSearchId"`
	ScheduledTaskId string `pulumi:"scheduledTaskId"`
	// Schedules.
	Schedules []GetNamespaceScheduledTaskSchedule `pulumi:"schedules"`
	// The current state of the scheduled task.
	State string `pulumi:"state"`
	// Status of the scheduled task. - PURGE_RESOURCE_NOT_FOUND
	TaskStatus string `pulumi:"taskStatus"`
	// Task type.
	TaskType string `pulumi:"taskType"`
	// The date and time the scheduled task was created, in the format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the scheduled task was last updated, in the format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
	// most recent Work Request Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the asynchronous request.
	WorkRequestId string `pulumi:"workRequestId"`
}

func LookupNamespaceScheduledTaskOutput(ctx *pulumi.Context, args LookupNamespaceScheduledTaskOutputArgs, opts ...pulumi.InvokeOption) LookupNamespaceScheduledTaskResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupNamespaceScheduledTaskResult, error) {
			args := v.(LookupNamespaceScheduledTaskArgs)
			r, err := LookupNamespaceScheduledTask(ctx, &args, opts...)
			var s LookupNamespaceScheduledTaskResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupNamespaceScheduledTaskResultOutput)
}

// A collection of arguments for invoking getNamespaceScheduledTask.
type LookupNamespaceScheduledTaskOutputArgs struct {
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// Unique scheduledTask id returned from task create. If invalid will lead to a 404 not found.
	ScheduledTaskId pulumi.StringInput `pulumi:"scheduledTaskId"`
}

func (LookupNamespaceScheduledTaskOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNamespaceScheduledTaskArgs)(nil)).Elem()
}

// A collection of values returned by getNamespaceScheduledTask.
type LookupNamespaceScheduledTaskResultOutput struct{ *pulumi.OutputState }

func (LookupNamespaceScheduledTaskResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNamespaceScheduledTaskResult)(nil)).Elem()
}

func (o LookupNamespaceScheduledTaskResultOutput) ToLookupNamespaceScheduledTaskResultOutput() LookupNamespaceScheduledTaskResultOutput {
	return o
}

func (o LookupNamespaceScheduledTaskResultOutput) ToLookupNamespaceScheduledTaskResultOutputWithContext(ctx context.Context) LookupNamespaceScheduledTaskResultOutput {
	return o
}

// Action for scheduled task.
func (o LookupNamespaceScheduledTaskResultOutput) Actions() GetNamespaceScheduledTaskActionArrayOutput {
	return o.ApplyT(func(v LookupNamespaceScheduledTaskResult) []GetNamespaceScheduledTaskAction { return v.Actions }).(GetNamespaceScheduledTaskActionArrayOutput)
}

// Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o LookupNamespaceScheduledTaskResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceScheduledTaskResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupNamespaceScheduledTaskResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupNamespaceScheduledTaskResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// A user-friendly name that is changeable and that does not have to be unique. Format: a leading alphanumeric, followed by zero or more alphanumerics, underscores, spaces, backslashes, or hyphens in any order). No trailing spaces allowed.
func (o LookupNamespaceScheduledTaskResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceScheduledTaskResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupNamespaceScheduledTaskResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupNamespaceScheduledTaskResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the data plane resource.
func (o LookupNamespaceScheduledTaskResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceScheduledTaskResult) string { return v.Id }).(pulumi.StringOutput)
}

// Discriminator.
func (o LookupNamespaceScheduledTaskResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceScheduledTaskResult) string { return v.Kind }).(pulumi.StringOutput)
}

// The namespace of the extracted metric. A valid value starts with an alphabetical character and includes only alphanumeric characters and underscores (_).
func (o LookupNamespaceScheduledTaskResultOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceScheduledTaskResult) string { return v.Namespace }).(pulumi.StringOutput)
}

// Number of execution occurrences.
func (o LookupNamespaceScheduledTaskResultOutput) NumOccurrences() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceScheduledTaskResult) string { return v.NumOccurrences }).(pulumi.StringOutput)
}

// The ManagementSavedSearch id [OCID] utilized in the action.
func (o LookupNamespaceScheduledTaskResultOutput) SavedSearchId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceScheduledTaskResult) string { return v.SavedSearchId }).(pulumi.StringOutput)
}

func (o LookupNamespaceScheduledTaskResultOutput) ScheduledTaskId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceScheduledTaskResult) string { return v.ScheduledTaskId }).(pulumi.StringOutput)
}

// Schedules.
func (o LookupNamespaceScheduledTaskResultOutput) Schedules() GetNamespaceScheduledTaskScheduleArrayOutput {
	return o.ApplyT(func(v LookupNamespaceScheduledTaskResult) []GetNamespaceScheduledTaskSchedule { return v.Schedules }).(GetNamespaceScheduledTaskScheduleArrayOutput)
}

// The current state of the scheduled task.
func (o LookupNamespaceScheduledTaskResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceScheduledTaskResult) string { return v.State }).(pulumi.StringOutput)
}

// Status of the scheduled task. - PURGE_RESOURCE_NOT_FOUND
func (o LookupNamespaceScheduledTaskResultOutput) TaskStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceScheduledTaskResult) string { return v.TaskStatus }).(pulumi.StringOutput)
}

// Task type.
func (o LookupNamespaceScheduledTaskResultOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceScheduledTaskResult) string { return v.TaskType }).(pulumi.StringOutput)
}

// The date and time the scheduled task was created, in the format defined by RFC3339.
func (o LookupNamespaceScheduledTaskResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceScheduledTaskResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the scheduled task was last updated, in the format defined by RFC3339.
func (o LookupNamespaceScheduledTaskResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceScheduledTaskResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// most recent Work Request Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the asynchronous request.
func (o LookupNamespaceScheduledTaskResultOutput) WorkRequestId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceScheduledTaskResult) string { return v.WorkRequestId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNamespaceScheduledTaskResultOutput{})
}
