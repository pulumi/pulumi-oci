// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package loganalytics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Namespace Storage Archival Config resource in Oracle Cloud Infrastructure Log Analytics service.
//
// # This API gets the storage configuration of a tenancy
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/loganalytics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := loganalytics.GetNamespaceStorageArchivalConfig(ctx, &loganalytics.GetNamespaceStorageArchivalConfigArgs{
//				Namespace: namespaceStorageArchivalConfigNamespace,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupNamespaceStorageArchivalConfig(ctx *pulumi.Context, args *LookupNamespaceStorageArchivalConfigArgs, opts ...pulumi.InvokeOption) (*LookupNamespaceStorageArchivalConfigResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNamespaceStorageArchivalConfigResult
	err := ctx.Invoke("oci:LogAnalytics/getNamespaceStorageArchivalConfig:getNamespaceStorageArchivalConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNamespaceStorageArchivalConfig.
type LookupNamespaceStorageArchivalConfigArgs struct {
	// The Logging Analytics namespace used for the request.
	Namespace string `pulumi:"namespace"`
}

// A collection of values returned by getNamespaceStorageArchivalConfig.
type LookupNamespaceStorageArchivalConfigResult struct {
	// This is the configuration for data archiving in object storage
	ArchivingConfigurations []GetNamespaceStorageArchivalConfigArchivingConfiguration `pulumi:"archivingConfigurations"`
	Id                      string                                                    `pulumi:"id"`
	// This indicates if old data can be archived for a tenancy
	IsArchivingEnabled bool   `pulumi:"isArchivingEnabled"`
	Namespace          string `pulumi:"namespace"`
}

func LookupNamespaceStorageArchivalConfigOutput(ctx *pulumi.Context, args LookupNamespaceStorageArchivalConfigOutputArgs, opts ...pulumi.InvokeOption) LookupNamespaceStorageArchivalConfigResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNamespaceStorageArchivalConfigResultOutput, error) {
			args := v.(LookupNamespaceStorageArchivalConfigArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:LogAnalytics/getNamespaceStorageArchivalConfig:getNamespaceStorageArchivalConfig", args, LookupNamespaceStorageArchivalConfigResultOutput{}, options).(LookupNamespaceStorageArchivalConfigResultOutput), nil
		}).(LookupNamespaceStorageArchivalConfigResultOutput)
}

// A collection of arguments for invoking getNamespaceStorageArchivalConfig.
type LookupNamespaceStorageArchivalConfigOutputArgs struct {
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (LookupNamespaceStorageArchivalConfigOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNamespaceStorageArchivalConfigArgs)(nil)).Elem()
}

// A collection of values returned by getNamespaceStorageArchivalConfig.
type LookupNamespaceStorageArchivalConfigResultOutput struct{ *pulumi.OutputState }

func (LookupNamespaceStorageArchivalConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNamespaceStorageArchivalConfigResult)(nil)).Elem()
}

func (o LookupNamespaceStorageArchivalConfigResultOutput) ToLookupNamespaceStorageArchivalConfigResultOutput() LookupNamespaceStorageArchivalConfigResultOutput {
	return o
}

func (o LookupNamespaceStorageArchivalConfigResultOutput) ToLookupNamespaceStorageArchivalConfigResultOutputWithContext(ctx context.Context) LookupNamespaceStorageArchivalConfigResultOutput {
	return o
}

// This is the configuration for data archiving in object storage
func (o LookupNamespaceStorageArchivalConfigResultOutput) ArchivingConfigurations() GetNamespaceStorageArchivalConfigArchivingConfigurationArrayOutput {
	return o.ApplyT(func(v LookupNamespaceStorageArchivalConfigResult) []GetNamespaceStorageArchivalConfigArchivingConfiguration {
		return v.ArchivingConfigurations
	}).(GetNamespaceStorageArchivalConfigArchivingConfigurationArrayOutput)
}

func (o LookupNamespaceStorageArchivalConfigResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceStorageArchivalConfigResult) string { return v.Id }).(pulumi.StringOutput)
}

// This indicates if old data can be archived for a tenancy
func (o LookupNamespaceStorageArchivalConfigResultOutput) IsArchivingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupNamespaceStorageArchivalConfigResult) bool { return v.IsArchivingEnabled }).(pulumi.BoolOutput)
}

func (o LookupNamespaceStorageArchivalConfigResultOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceStorageArchivalConfigResult) string { return v.Namespace }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNamespaceStorageArchivalConfigResultOutput{})
}
