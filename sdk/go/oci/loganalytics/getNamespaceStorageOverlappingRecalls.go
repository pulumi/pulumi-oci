// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package loganalytics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Namespace Storage Overlapping Recalls in Oracle Cloud Infrastructure Log Analytics service.
//
// # This API gets the list of overlapping recalls made in the given timeframe
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/loganalytics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := loganalytics.GetNamespaceStorageOverlappingRecalls(ctx, &loganalytics.GetNamespaceStorageOverlappingRecallsArgs{
//				Namespace:       namespaceStorageOverlappingRecallNamespace,
//				TimeDataEnded:   pulumi.StringRef(namespaceStorageOverlappingRecallTimeDataEnded),
//				TimeDataStarted: pulumi.StringRef(namespaceStorageOverlappingRecallTimeDataStarted),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetNamespaceStorageOverlappingRecalls(ctx *pulumi.Context, args *GetNamespaceStorageOverlappingRecallsArgs, opts ...pulumi.InvokeOption) (*GetNamespaceStorageOverlappingRecallsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetNamespaceStorageOverlappingRecallsResult
	err := ctx.Invoke("oci:LogAnalytics/getNamespaceStorageOverlappingRecalls:getNamespaceStorageOverlappingRecalls", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNamespaceStorageOverlappingRecalls.
type GetNamespaceStorageOverlappingRecallsArgs struct {
	Filters []GetNamespaceStorageOverlappingRecallsFilter `pulumi:"filters"`
	// The Logging Analytics namespace used for the request.
	Namespace string `pulumi:"namespace"`
	// This is the end of the time range for recalled data
	TimeDataEnded *string `pulumi:"timeDataEnded"`
	// This is the start of the time range for recalled data
	TimeDataStarted *string `pulumi:"timeDataStarted"`
}

// A collection of values returned by getNamespaceStorageOverlappingRecalls.
type GetNamespaceStorageOverlappingRecallsResult struct {
	Filters []GetNamespaceStorageOverlappingRecallsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id        string `pulumi:"id"`
	Namespace string `pulumi:"namespace"`
	// The list of overlapping_recall_collection.
	OverlappingRecallCollections []GetNamespaceStorageOverlappingRecallsOverlappingRecallCollection `pulumi:"overlappingRecallCollections"`
	// This is the end of the time range of the archival data
	TimeDataEnded *string `pulumi:"timeDataEnded"`
	// This is the start of the time range of the archival data
	TimeDataStarted *string `pulumi:"timeDataStarted"`
}

func GetNamespaceStorageOverlappingRecallsOutput(ctx *pulumi.Context, args GetNamespaceStorageOverlappingRecallsOutputArgs, opts ...pulumi.InvokeOption) GetNamespaceStorageOverlappingRecallsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetNamespaceStorageOverlappingRecallsResultOutput, error) {
			args := v.(GetNamespaceStorageOverlappingRecallsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:LogAnalytics/getNamespaceStorageOverlappingRecalls:getNamespaceStorageOverlappingRecalls", args, GetNamespaceStorageOverlappingRecallsResultOutput{}, options).(GetNamespaceStorageOverlappingRecallsResultOutput), nil
		}).(GetNamespaceStorageOverlappingRecallsResultOutput)
}

// A collection of arguments for invoking getNamespaceStorageOverlappingRecalls.
type GetNamespaceStorageOverlappingRecallsOutputArgs struct {
	Filters GetNamespaceStorageOverlappingRecallsFilterArrayInput `pulumi:"filters"`
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// This is the end of the time range for recalled data
	TimeDataEnded pulumi.StringPtrInput `pulumi:"timeDataEnded"`
	// This is the start of the time range for recalled data
	TimeDataStarted pulumi.StringPtrInput `pulumi:"timeDataStarted"`
}

func (GetNamespaceStorageOverlappingRecallsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespaceStorageOverlappingRecallsArgs)(nil)).Elem()
}

// A collection of values returned by getNamespaceStorageOverlappingRecalls.
type GetNamespaceStorageOverlappingRecallsResultOutput struct{ *pulumi.OutputState }

func (GetNamespaceStorageOverlappingRecallsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespaceStorageOverlappingRecallsResult)(nil)).Elem()
}

func (o GetNamespaceStorageOverlappingRecallsResultOutput) ToGetNamespaceStorageOverlappingRecallsResultOutput() GetNamespaceStorageOverlappingRecallsResultOutput {
	return o
}

func (o GetNamespaceStorageOverlappingRecallsResultOutput) ToGetNamespaceStorageOverlappingRecallsResultOutputWithContext(ctx context.Context) GetNamespaceStorageOverlappingRecallsResultOutput {
	return o
}

func (o GetNamespaceStorageOverlappingRecallsResultOutput) Filters() GetNamespaceStorageOverlappingRecallsFilterArrayOutput {
	return o.ApplyT(func(v GetNamespaceStorageOverlappingRecallsResult) []GetNamespaceStorageOverlappingRecallsFilter {
		return v.Filters
	}).(GetNamespaceStorageOverlappingRecallsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetNamespaceStorageOverlappingRecallsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceStorageOverlappingRecallsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetNamespaceStorageOverlappingRecallsResultOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceStorageOverlappingRecallsResult) string { return v.Namespace }).(pulumi.StringOutput)
}

// The list of overlapping_recall_collection.
func (o GetNamespaceStorageOverlappingRecallsResultOutput) OverlappingRecallCollections() GetNamespaceStorageOverlappingRecallsOverlappingRecallCollectionArrayOutput {
	return o.ApplyT(func(v GetNamespaceStorageOverlappingRecallsResult) []GetNamespaceStorageOverlappingRecallsOverlappingRecallCollection {
		return v.OverlappingRecallCollections
	}).(GetNamespaceStorageOverlappingRecallsOverlappingRecallCollectionArrayOutput)
}

// This is the end of the time range of the archival data
func (o GetNamespaceStorageOverlappingRecallsResultOutput) TimeDataEnded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNamespaceStorageOverlappingRecallsResult) *string { return v.TimeDataEnded }).(pulumi.StringPtrOutput)
}

// This is the start of the time range of the archival data
func (o GetNamespaceStorageOverlappingRecallsResultOutput) TimeDataStarted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNamespaceStorageOverlappingRecallsResult) *string { return v.TimeDataStarted }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNamespaceStorageOverlappingRecallsResultOutput{})
}
