// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package loganalytics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Namespace Template resource in Oracle Cloud Infrastructure Log Analytics service.
//
// Gets detailed information about the template with the specified ocid.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/loganalytics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := loganalytics.GetNamespaceTemplate(ctx, &loganalytics.GetNamespaceTemplateArgs{
//				Namespace:  namespaceTemplateNamespace,
//				TemplateId: testTemplate.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetNamespaceTemplate(ctx *pulumi.Context, args *GetNamespaceTemplateArgs, opts ...pulumi.InvokeOption) (*GetNamespaceTemplateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetNamespaceTemplateResult
	err := ctx.Invoke("oci:LogAnalytics/getNamespaceTemplate:getNamespaceTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNamespaceTemplate.
type GetNamespaceTemplateArgs struct {
	// The Logging Analytics namespace used for the request.
	Namespace string `pulumi:"namespace"`
	// Unique ocid of the template.
	TemplateId string `pulumi:"templateId"`
}

// A collection of values returned by getNamespaceTemplate.
type GetNamespaceTemplateResult struct {
	// Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// Base64 encoded template content.
	Content string `pulumi:"content"`
	// Content format. For example - XML.
	ContentFormat string `pulumi:"contentFormat"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Description for this resource.
	Description string `pulumi:"description"`
	// Facets of the template
	Facets []GetNamespaceTemplateFacet `pulumi:"facets"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The system flag.  A value of false denotes a custom, or user defined object.  A value of true denotes a built in object.
	IsSystem bool `pulumi:"isSystem"`
	// The template name.
	Name      string `pulumi:"name"`
	Namespace string `pulumi:"namespace"`
	// Base64 encoded template parameters.
	Parameters string `pulumi:"parameters"`
	// Parameters format.  For example - NAME_VALUE_PAIR.
	ParametersFormat string `pulumi:"parametersFormat"`
	// Base64 encoded parameters metadata definition.
	ParametersMetadata string `pulumi:"parametersMetadata"`
	// The current state of the template.
	State      string `pulumi:"state"`
	TemplateId string `pulumi:"templateId"`
	// The date and time the resource was created, in the format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the resource was last updated, in the format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
	// The template type.
	Type string `pulumi:"type"`
}

func GetNamespaceTemplateOutput(ctx *pulumi.Context, args GetNamespaceTemplateOutputArgs, opts ...pulumi.InvokeOption) GetNamespaceTemplateResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetNamespaceTemplateResultOutput, error) {
			args := v.(GetNamespaceTemplateArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:LogAnalytics/getNamespaceTemplate:getNamespaceTemplate", args, GetNamespaceTemplateResultOutput{}, options).(GetNamespaceTemplateResultOutput), nil
		}).(GetNamespaceTemplateResultOutput)
}

// A collection of arguments for invoking getNamespaceTemplate.
type GetNamespaceTemplateOutputArgs struct {
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// Unique ocid of the template.
	TemplateId pulumi.StringInput `pulumi:"templateId"`
}

func (GetNamespaceTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespaceTemplateArgs)(nil)).Elem()
}

// A collection of values returned by getNamespaceTemplate.
type GetNamespaceTemplateResultOutput struct{ *pulumi.OutputState }

func (GetNamespaceTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespaceTemplateResult)(nil)).Elem()
}

func (o GetNamespaceTemplateResultOutput) ToGetNamespaceTemplateResultOutput() GetNamespaceTemplateResultOutput {
	return o
}

func (o GetNamespaceTemplateResultOutput) ToGetNamespaceTemplateResultOutputWithContext(ctx context.Context) GetNamespaceTemplateResultOutput {
	return o
}

// Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetNamespaceTemplateResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceTemplateResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Base64 encoded template content.
func (o GetNamespaceTemplateResultOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceTemplateResult) string { return v.Content }).(pulumi.StringOutput)
}

// Content format. For example - XML.
func (o GetNamespaceTemplateResultOutput) ContentFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceTemplateResult) string { return v.ContentFormat }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetNamespaceTemplateResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetNamespaceTemplateResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Description for this resource.
func (o GetNamespaceTemplateResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceTemplateResult) string { return v.Description }).(pulumi.StringOutput)
}

// Facets of the template
func (o GetNamespaceTemplateResultOutput) Facets() GetNamespaceTemplateFacetArrayOutput {
	return o.ApplyT(func(v GetNamespaceTemplateResult) []GetNamespaceTemplateFacet { return v.Facets }).(GetNamespaceTemplateFacetArrayOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetNamespaceTemplateResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetNamespaceTemplateResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetNamespaceTemplateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceTemplateResult) string { return v.Id }).(pulumi.StringOutput)
}

// The system flag.  A value of false denotes a custom, or user defined object.  A value of true denotes a built in object.
func (o GetNamespaceTemplateResultOutput) IsSystem() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNamespaceTemplateResult) bool { return v.IsSystem }).(pulumi.BoolOutput)
}

// The template name.
func (o GetNamespaceTemplateResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceTemplateResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetNamespaceTemplateResultOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceTemplateResult) string { return v.Namespace }).(pulumi.StringOutput)
}

// Base64 encoded template parameters.
func (o GetNamespaceTemplateResultOutput) Parameters() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceTemplateResult) string { return v.Parameters }).(pulumi.StringOutput)
}

// Parameters format.  For example - NAME_VALUE_PAIR.
func (o GetNamespaceTemplateResultOutput) ParametersFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceTemplateResult) string { return v.ParametersFormat }).(pulumi.StringOutput)
}

// Base64 encoded parameters metadata definition.
func (o GetNamespaceTemplateResultOutput) ParametersMetadata() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceTemplateResult) string { return v.ParametersMetadata }).(pulumi.StringOutput)
}

// The current state of the template.
func (o GetNamespaceTemplateResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceTemplateResult) string { return v.State }).(pulumi.StringOutput)
}

func (o GetNamespaceTemplateResultOutput) TemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceTemplateResult) string { return v.TemplateId }).(pulumi.StringOutput)
}

// The date and time the resource was created, in the format defined by RFC3339.
func (o GetNamespaceTemplateResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceTemplateResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the resource was last updated, in the format defined by RFC3339.
func (o GetNamespaceTemplateResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceTemplateResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The template type.
func (o GetNamespaceTemplateResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceTemplateResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNamespaceTemplateResultOutput{})
}
