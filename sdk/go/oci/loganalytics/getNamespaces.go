// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package loganalytics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Namespaces in Oracle Cloud Infrastructure Log Analytics service.
//
// Given a tenancy OCID, this API returns the namespace of the tenancy if it is valid and subscribed to the region.  The
// result also indicates if the tenancy is onboarded with Logging Analytics.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/LogAnalytics"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := LogAnalytics.GetNamespaces(ctx, &loganalytics.GetNamespacesArgs{
// 			CompartmentId: _var.Compartment_id,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetNamespaces(ctx *pulumi.Context, args *GetNamespacesArgs, opts ...pulumi.InvokeOption) (*GetNamespacesResult, error) {
	var rv GetNamespacesResult
	err := ctx.Invoke("oci:LogAnalytics/getNamespaces:getNamespaces", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNamespaces.
type GetNamespacesArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string                `pulumi:"compartmentId"`
	Filters       []GetNamespacesFilter `pulumi:"filters"`
}

// A collection of values returned by getNamespaces.
type GetNamespacesResult struct {
	// The is the tenancy ID
	CompartmentId string                `pulumi:"compartmentId"`
	Filters       []GetNamespacesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of namespace_collection.
	NamespaceCollections []GetNamespacesNamespaceCollection `pulumi:"namespaceCollections"`
}

func GetNamespacesOutput(ctx *pulumi.Context, args GetNamespacesOutputArgs, opts ...pulumi.InvokeOption) GetNamespacesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetNamespacesResult, error) {
			args := v.(GetNamespacesArgs)
			r, err := GetNamespaces(ctx, &args, opts...)
			var s GetNamespacesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetNamespacesResultOutput)
}

// A collection of arguments for invoking getNamespaces.
type GetNamespacesOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput            `pulumi:"compartmentId"`
	Filters       GetNamespacesFilterArrayInput `pulumi:"filters"`
}

func (GetNamespacesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespacesArgs)(nil)).Elem()
}

// A collection of values returned by getNamespaces.
type GetNamespacesResultOutput struct{ *pulumi.OutputState }

func (GetNamespacesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespacesResult)(nil)).Elem()
}

func (o GetNamespacesResultOutput) ToGetNamespacesResultOutput() GetNamespacesResultOutput {
	return o
}

func (o GetNamespacesResultOutput) ToGetNamespacesResultOutputWithContext(ctx context.Context) GetNamespacesResultOutput {
	return o
}

// The is the tenancy ID
func (o GetNamespacesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespacesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetNamespacesResultOutput) Filters() GetNamespacesFilterArrayOutput {
	return o.ApplyT(func(v GetNamespacesResult) []GetNamespacesFilter { return v.Filters }).(GetNamespacesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetNamespacesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespacesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of namespace_collection.
func (o GetNamespacesResultOutput) NamespaceCollections() GetNamespacesNamespaceCollectionArrayOutput {
	return o.ApplyT(func(v GetNamespacesResult) []GetNamespacesNamespaceCollection { return v.NamespaceCollections }).(GetNamespacesNamespaceCollectionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNamespacesResultOutput{})
}
