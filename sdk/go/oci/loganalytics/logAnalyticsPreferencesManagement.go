// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package loganalytics

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Log Analytics Preferences Management resource in Oracle Cloud Infrastructure Log Analytics service.
//
// Updates the tenant preferences. Currently, only "DEFAULT_HOMEPAGE" is supported.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/LogAnalytics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := LogAnalytics.NewLogAnalyticsPreferencesManagement(ctx, "testLogAnalyticsPreferencesManagement", &LogAnalytics.LogAnalyticsPreferencesManagementArgs{
//				Namespace: pulumi.Any(_var.Log_analytics_preferences_management_namespace),
//				Items: loganalytics.LogAnalyticsPreferencesManagementItemArray{
//					&loganalytics.LogAnalyticsPreferencesManagementItemArgs{
//						Name:  pulumi.Any(_var.Log_analytics_preferences_management_items_name),
//						Value: pulumi.Any(_var.Log_analytics_preferences_management_items_value),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Import is not supported for LogAnalyticsPreferencesManagement
type LogAnalyticsPreferencesManagement struct {
	pulumi.CustomResourceState

	// An array of tenant preference details.
	Items LogAnalyticsPreferencesManagementItemArrayOutput `pulumi:"items"`
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringOutput `pulumi:"namespace"`
}

// NewLogAnalyticsPreferencesManagement registers a new resource with the given unique name, arguments, and options.
func NewLogAnalyticsPreferencesManagement(ctx *pulumi.Context,
	name string, args *LogAnalyticsPreferencesManagementArgs, opts ...pulumi.ResourceOption) (*LogAnalyticsPreferencesManagement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Namespace == nil {
		return nil, errors.New("invalid value for required argument 'Namespace'")
	}
	var resource LogAnalyticsPreferencesManagement
	err := ctx.RegisterResource("oci:LogAnalytics/logAnalyticsPreferencesManagement:LogAnalyticsPreferencesManagement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogAnalyticsPreferencesManagement gets an existing LogAnalyticsPreferencesManagement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogAnalyticsPreferencesManagement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogAnalyticsPreferencesManagementState, opts ...pulumi.ResourceOption) (*LogAnalyticsPreferencesManagement, error) {
	var resource LogAnalyticsPreferencesManagement
	err := ctx.ReadResource("oci:LogAnalytics/logAnalyticsPreferencesManagement:LogAnalyticsPreferencesManagement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogAnalyticsPreferencesManagement resources.
type logAnalyticsPreferencesManagementState struct {
	// An array of tenant preference details.
	Items []LogAnalyticsPreferencesManagementItem `pulumi:"items"`
	// The Logging Analytics namespace used for the request.
	Namespace *string `pulumi:"namespace"`
}

type LogAnalyticsPreferencesManagementState struct {
	// An array of tenant preference details.
	Items LogAnalyticsPreferencesManagementItemArrayInput
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringPtrInput
}

func (LogAnalyticsPreferencesManagementState) ElementType() reflect.Type {
	return reflect.TypeOf((*logAnalyticsPreferencesManagementState)(nil)).Elem()
}

type logAnalyticsPreferencesManagementArgs struct {
	// An array of tenant preference details.
	Items []LogAnalyticsPreferencesManagementItem `pulumi:"items"`
	// The Logging Analytics namespace used for the request.
	Namespace string `pulumi:"namespace"`
}

// The set of arguments for constructing a LogAnalyticsPreferencesManagement resource.
type LogAnalyticsPreferencesManagementArgs struct {
	// An array of tenant preference details.
	Items LogAnalyticsPreferencesManagementItemArrayInput
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringInput
}

func (LogAnalyticsPreferencesManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logAnalyticsPreferencesManagementArgs)(nil)).Elem()
}

type LogAnalyticsPreferencesManagementInput interface {
	pulumi.Input

	ToLogAnalyticsPreferencesManagementOutput() LogAnalyticsPreferencesManagementOutput
	ToLogAnalyticsPreferencesManagementOutputWithContext(ctx context.Context) LogAnalyticsPreferencesManagementOutput
}

func (*LogAnalyticsPreferencesManagement) ElementType() reflect.Type {
	return reflect.TypeOf((**LogAnalyticsPreferencesManagement)(nil)).Elem()
}

func (i *LogAnalyticsPreferencesManagement) ToLogAnalyticsPreferencesManagementOutput() LogAnalyticsPreferencesManagementOutput {
	return i.ToLogAnalyticsPreferencesManagementOutputWithContext(context.Background())
}

func (i *LogAnalyticsPreferencesManagement) ToLogAnalyticsPreferencesManagementOutputWithContext(ctx context.Context) LogAnalyticsPreferencesManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogAnalyticsPreferencesManagementOutput)
}

// LogAnalyticsPreferencesManagementArrayInput is an input type that accepts LogAnalyticsPreferencesManagementArray and LogAnalyticsPreferencesManagementArrayOutput values.
// You can construct a concrete instance of `LogAnalyticsPreferencesManagementArrayInput` via:
//
//	LogAnalyticsPreferencesManagementArray{ LogAnalyticsPreferencesManagementArgs{...} }
type LogAnalyticsPreferencesManagementArrayInput interface {
	pulumi.Input

	ToLogAnalyticsPreferencesManagementArrayOutput() LogAnalyticsPreferencesManagementArrayOutput
	ToLogAnalyticsPreferencesManagementArrayOutputWithContext(context.Context) LogAnalyticsPreferencesManagementArrayOutput
}

type LogAnalyticsPreferencesManagementArray []LogAnalyticsPreferencesManagementInput

func (LogAnalyticsPreferencesManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogAnalyticsPreferencesManagement)(nil)).Elem()
}

func (i LogAnalyticsPreferencesManagementArray) ToLogAnalyticsPreferencesManagementArrayOutput() LogAnalyticsPreferencesManagementArrayOutput {
	return i.ToLogAnalyticsPreferencesManagementArrayOutputWithContext(context.Background())
}

func (i LogAnalyticsPreferencesManagementArray) ToLogAnalyticsPreferencesManagementArrayOutputWithContext(ctx context.Context) LogAnalyticsPreferencesManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogAnalyticsPreferencesManagementArrayOutput)
}

// LogAnalyticsPreferencesManagementMapInput is an input type that accepts LogAnalyticsPreferencesManagementMap and LogAnalyticsPreferencesManagementMapOutput values.
// You can construct a concrete instance of `LogAnalyticsPreferencesManagementMapInput` via:
//
//	LogAnalyticsPreferencesManagementMap{ "key": LogAnalyticsPreferencesManagementArgs{...} }
type LogAnalyticsPreferencesManagementMapInput interface {
	pulumi.Input

	ToLogAnalyticsPreferencesManagementMapOutput() LogAnalyticsPreferencesManagementMapOutput
	ToLogAnalyticsPreferencesManagementMapOutputWithContext(context.Context) LogAnalyticsPreferencesManagementMapOutput
}

type LogAnalyticsPreferencesManagementMap map[string]LogAnalyticsPreferencesManagementInput

func (LogAnalyticsPreferencesManagementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogAnalyticsPreferencesManagement)(nil)).Elem()
}

func (i LogAnalyticsPreferencesManagementMap) ToLogAnalyticsPreferencesManagementMapOutput() LogAnalyticsPreferencesManagementMapOutput {
	return i.ToLogAnalyticsPreferencesManagementMapOutputWithContext(context.Background())
}

func (i LogAnalyticsPreferencesManagementMap) ToLogAnalyticsPreferencesManagementMapOutputWithContext(ctx context.Context) LogAnalyticsPreferencesManagementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogAnalyticsPreferencesManagementMapOutput)
}

type LogAnalyticsPreferencesManagementOutput struct{ *pulumi.OutputState }

func (LogAnalyticsPreferencesManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogAnalyticsPreferencesManagement)(nil)).Elem()
}

func (o LogAnalyticsPreferencesManagementOutput) ToLogAnalyticsPreferencesManagementOutput() LogAnalyticsPreferencesManagementOutput {
	return o
}

func (o LogAnalyticsPreferencesManagementOutput) ToLogAnalyticsPreferencesManagementOutputWithContext(ctx context.Context) LogAnalyticsPreferencesManagementOutput {
	return o
}

type LogAnalyticsPreferencesManagementArrayOutput struct{ *pulumi.OutputState }

func (LogAnalyticsPreferencesManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogAnalyticsPreferencesManagement)(nil)).Elem()
}

func (o LogAnalyticsPreferencesManagementArrayOutput) ToLogAnalyticsPreferencesManagementArrayOutput() LogAnalyticsPreferencesManagementArrayOutput {
	return o
}

func (o LogAnalyticsPreferencesManagementArrayOutput) ToLogAnalyticsPreferencesManagementArrayOutputWithContext(ctx context.Context) LogAnalyticsPreferencesManagementArrayOutput {
	return o
}

func (o LogAnalyticsPreferencesManagementArrayOutput) Index(i pulumi.IntInput) LogAnalyticsPreferencesManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LogAnalyticsPreferencesManagement {
		return vs[0].([]*LogAnalyticsPreferencesManagement)[vs[1].(int)]
	}).(LogAnalyticsPreferencesManagementOutput)
}

type LogAnalyticsPreferencesManagementMapOutput struct{ *pulumi.OutputState }

func (LogAnalyticsPreferencesManagementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogAnalyticsPreferencesManagement)(nil)).Elem()
}

func (o LogAnalyticsPreferencesManagementMapOutput) ToLogAnalyticsPreferencesManagementMapOutput() LogAnalyticsPreferencesManagementMapOutput {
	return o
}

func (o LogAnalyticsPreferencesManagementMapOutput) ToLogAnalyticsPreferencesManagementMapOutputWithContext(ctx context.Context) LogAnalyticsPreferencesManagementMapOutput {
	return o
}

func (o LogAnalyticsPreferencesManagementMapOutput) MapIndex(k pulumi.StringInput) LogAnalyticsPreferencesManagementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LogAnalyticsPreferencesManagement {
		return vs[0].(map[string]*LogAnalyticsPreferencesManagement)[vs[1].(string)]
	}).(LogAnalyticsPreferencesManagementOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LogAnalyticsPreferencesManagementInput)(nil)).Elem(), &LogAnalyticsPreferencesManagement{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogAnalyticsPreferencesManagementArrayInput)(nil)).Elem(), LogAnalyticsPreferencesManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogAnalyticsPreferencesManagementMapInput)(nil)).Elem(), LogAnalyticsPreferencesManagementMap{})
	pulumi.RegisterOutputType(LogAnalyticsPreferencesManagementOutput{})
	pulumi.RegisterOutputType(LogAnalyticsPreferencesManagementArrayOutput{})
	pulumi.RegisterOutputType(LogAnalyticsPreferencesManagementMapOutput{})
}
