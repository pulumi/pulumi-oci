// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package loganalytics

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Log Analytics Resource Categories Management resource in Oracle Cloud Infrastructure Log Analytics service.
//
// Updates the category assignments of DASHBOARD and SAVEDSEARCH resources.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/loganalytics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := loganalytics.NewLogAnalyticsResourceCategoriesManagement(ctx, "test_log_analytics_resource_categories_management", &loganalytics.LogAnalyticsResourceCategoriesManagementArgs{
//				Namespace:          pulumi.Any(logAnalyticsResourceCategoriesManagementNamespace),
//				ResourceId:         pulumi.Any(ociLogAnalyticsResourceCategoriesManagementResourceId),
//				ResourceType:       pulumi.Any(logAnalyticsResourceCategoriesManagementResourceType),
//				ResourceCategories: pulumi.Any(logAnalyticsResourceCategoriesManagementResourceCategories),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// LogAnalyticsResourceCategoriesManagement cannot be imported.
type LogAnalyticsResourceCategoriesManagement struct {
	pulumi.CustomResourceState

	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringOutput `pulumi:"namespace"`
	// The list of categories to be assigned to the resource.
	ResourceCategories pulumi.StringArrayOutput `pulumi:"resourceCategories"`
	// The resource unique identifier for which catagories are managed.
	ResourceId pulumi.StringOutput `pulumi:"resourceId"`
	// The resource type of the resource for which categories are managed.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ResourceType pulumi.StringOutput `pulumi:"resourceType"`
}

// NewLogAnalyticsResourceCategoriesManagement registers a new resource with the given unique name, arguments, and options.
func NewLogAnalyticsResourceCategoriesManagement(ctx *pulumi.Context,
	name string, args *LogAnalyticsResourceCategoriesManagementArgs, opts ...pulumi.ResourceOption) (*LogAnalyticsResourceCategoriesManagement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Namespace == nil {
		return nil, errors.New("invalid value for required argument 'Namespace'")
	}
	if args.ResourceCategories == nil {
		return nil, errors.New("invalid value for required argument 'ResourceCategories'")
	}
	if args.ResourceId == nil {
		return nil, errors.New("invalid value for required argument 'ResourceId'")
	}
	if args.ResourceType == nil {
		return nil, errors.New("invalid value for required argument 'ResourceType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LogAnalyticsResourceCategoriesManagement
	err := ctx.RegisterResource("oci:LogAnalytics/logAnalyticsResourceCategoriesManagement:LogAnalyticsResourceCategoriesManagement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogAnalyticsResourceCategoriesManagement gets an existing LogAnalyticsResourceCategoriesManagement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogAnalyticsResourceCategoriesManagement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogAnalyticsResourceCategoriesManagementState, opts ...pulumi.ResourceOption) (*LogAnalyticsResourceCategoriesManagement, error) {
	var resource LogAnalyticsResourceCategoriesManagement
	err := ctx.ReadResource("oci:LogAnalytics/logAnalyticsResourceCategoriesManagement:LogAnalyticsResourceCategoriesManagement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogAnalyticsResourceCategoriesManagement resources.
type logAnalyticsResourceCategoriesManagementState struct {
	// The Logging Analytics namespace used for the request.
	Namespace *string `pulumi:"namespace"`
	// The list of categories to be assigned to the resource.
	ResourceCategories []string `pulumi:"resourceCategories"`
	// The resource unique identifier for which catagories are managed.
	ResourceId *string `pulumi:"resourceId"`
	// The resource type of the resource for which categories are managed.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ResourceType *string `pulumi:"resourceType"`
}

type LogAnalyticsResourceCategoriesManagementState struct {
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringPtrInput
	// The list of categories to be assigned to the resource.
	ResourceCategories pulumi.StringArrayInput
	// The resource unique identifier for which catagories are managed.
	ResourceId pulumi.StringPtrInput
	// The resource type of the resource for which categories are managed.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ResourceType pulumi.StringPtrInput
}

func (LogAnalyticsResourceCategoriesManagementState) ElementType() reflect.Type {
	return reflect.TypeOf((*logAnalyticsResourceCategoriesManagementState)(nil)).Elem()
}

type logAnalyticsResourceCategoriesManagementArgs struct {
	// The Logging Analytics namespace used for the request.
	Namespace string `pulumi:"namespace"`
	// The list of categories to be assigned to the resource.
	ResourceCategories []string `pulumi:"resourceCategories"`
	// The resource unique identifier for which catagories are managed.
	ResourceId string `pulumi:"resourceId"`
	// The resource type of the resource for which categories are managed.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ResourceType string `pulumi:"resourceType"`
}

// The set of arguments for constructing a LogAnalyticsResourceCategoriesManagement resource.
type LogAnalyticsResourceCategoriesManagementArgs struct {
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringInput
	// The list of categories to be assigned to the resource.
	ResourceCategories pulumi.StringArrayInput
	// The resource unique identifier for which catagories are managed.
	ResourceId pulumi.StringInput
	// The resource type of the resource for which categories are managed.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ResourceType pulumi.StringInput
}

func (LogAnalyticsResourceCategoriesManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logAnalyticsResourceCategoriesManagementArgs)(nil)).Elem()
}

type LogAnalyticsResourceCategoriesManagementInput interface {
	pulumi.Input

	ToLogAnalyticsResourceCategoriesManagementOutput() LogAnalyticsResourceCategoriesManagementOutput
	ToLogAnalyticsResourceCategoriesManagementOutputWithContext(ctx context.Context) LogAnalyticsResourceCategoriesManagementOutput
}

func (*LogAnalyticsResourceCategoriesManagement) ElementType() reflect.Type {
	return reflect.TypeOf((**LogAnalyticsResourceCategoriesManagement)(nil)).Elem()
}

func (i *LogAnalyticsResourceCategoriesManagement) ToLogAnalyticsResourceCategoriesManagementOutput() LogAnalyticsResourceCategoriesManagementOutput {
	return i.ToLogAnalyticsResourceCategoriesManagementOutputWithContext(context.Background())
}

func (i *LogAnalyticsResourceCategoriesManagement) ToLogAnalyticsResourceCategoriesManagementOutputWithContext(ctx context.Context) LogAnalyticsResourceCategoriesManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogAnalyticsResourceCategoriesManagementOutput)
}

// LogAnalyticsResourceCategoriesManagementArrayInput is an input type that accepts LogAnalyticsResourceCategoriesManagementArray and LogAnalyticsResourceCategoriesManagementArrayOutput values.
// You can construct a concrete instance of `LogAnalyticsResourceCategoriesManagementArrayInput` via:
//
//	LogAnalyticsResourceCategoriesManagementArray{ LogAnalyticsResourceCategoriesManagementArgs{...} }
type LogAnalyticsResourceCategoriesManagementArrayInput interface {
	pulumi.Input

	ToLogAnalyticsResourceCategoriesManagementArrayOutput() LogAnalyticsResourceCategoriesManagementArrayOutput
	ToLogAnalyticsResourceCategoriesManagementArrayOutputWithContext(context.Context) LogAnalyticsResourceCategoriesManagementArrayOutput
}

type LogAnalyticsResourceCategoriesManagementArray []LogAnalyticsResourceCategoriesManagementInput

func (LogAnalyticsResourceCategoriesManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogAnalyticsResourceCategoriesManagement)(nil)).Elem()
}

func (i LogAnalyticsResourceCategoriesManagementArray) ToLogAnalyticsResourceCategoriesManagementArrayOutput() LogAnalyticsResourceCategoriesManagementArrayOutput {
	return i.ToLogAnalyticsResourceCategoriesManagementArrayOutputWithContext(context.Background())
}

func (i LogAnalyticsResourceCategoriesManagementArray) ToLogAnalyticsResourceCategoriesManagementArrayOutputWithContext(ctx context.Context) LogAnalyticsResourceCategoriesManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogAnalyticsResourceCategoriesManagementArrayOutput)
}

// LogAnalyticsResourceCategoriesManagementMapInput is an input type that accepts LogAnalyticsResourceCategoriesManagementMap and LogAnalyticsResourceCategoriesManagementMapOutput values.
// You can construct a concrete instance of `LogAnalyticsResourceCategoriesManagementMapInput` via:
//
//	LogAnalyticsResourceCategoriesManagementMap{ "key": LogAnalyticsResourceCategoriesManagementArgs{...} }
type LogAnalyticsResourceCategoriesManagementMapInput interface {
	pulumi.Input

	ToLogAnalyticsResourceCategoriesManagementMapOutput() LogAnalyticsResourceCategoriesManagementMapOutput
	ToLogAnalyticsResourceCategoriesManagementMapOutputWithContext(context.Context) LogAnalyticsResourceCategoriesManagementMapOutput
}

type LogAnalyticsResourceCategoriesManagementMap map[string]LogAnalyticsResourceCategoriesManagementInput

func (LogAnalyticsResourceCategoriesManagementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogAnalyticsResourceCategoriesManagement)(nil)).Elem()
}

func (i LogAnalyticsResourceCategoriesManagementMap) ToLogAnalyticsResourceCategoriesManagementMapOutput() LogAnalyticsResourceCategoriesManagementMapOutput {
	return i.ToLogAnalyticsResourceCategoriesManagementMapOutputWithContext(context.Background())
}

func (i LogAnalyticsResourceCategoriesManagementMap) ToLogAnalyticsResourceCategoriesManagementMapOutputWithContext(ctx context.Context) LogAnalyticsResourceCategoriesManagementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogAnalyticsResourceCategoriesManagementMapOutput)
}

type LogAnalyticsResourceCategoriesManagementOutput struct{ *pulumi.OutputState }

func (LogAnalyticsResourceCategoriesManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogAnalyticsResourceCategoriesManagement)(nil)).Elem()
}

func (o LogAnalyticsResourceCategoriesManagementOutput) ToLogAnalyticsResourceCategoriesManagementOutput() LogAnalyticsResourceCategoriesManagementOutput {
	return o
}

func (o LogAnalyticsResourceCategoriesManagementOutput) ToLogAnalyticsResourceCategoriesManagementOutputWithContext(ctx context.Context) LogAnalyticsResourceCategoriesManagementOutput {
	return o
}

// The Logging Analytics namespace used for the request.
func (o LogAnalyticsResourceCategoriesManagementOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v *LogAnalyticsResourceCategoriesManagement) pulumi.StringOutput { return v.Namespace }).(pulumi.StringOutput)
}

// The list of categories to be assigned to the resource.
func (o LogAnalyticsResourceCategoriesManagementOutput) ResourceCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LogAnalyticsResourceCategoriesManagement) pulumi.StringArrayOutput {
		return v.ResourceCategories
	}).(pulumi.StringArrayOutput)
}

// The resource unique identifier for which catagories are managed.
func (o LogAnalyticsResourceCategoriesManagementOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *LogAnalyticsResourceCategoriesManagement) pulumi.StringOutput { return v.ResourceId }).(pulumi.StringOutput)
}

// The resource type of the resource for which categories are managed.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o LogAnalyticsResourceCategoriesManagementOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *LogAnalyticsResourceCategoriesManagement) pulumi.StringOutput { return v.ResourceType }).(pulumi.StringOutput)
}

type LogAnalyticsResourceCategoriesManagementArrayOutput struct{ *pulumi.OutputState }

func (LogAnalyticsResourceCategoriesManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogAnalyticsResourceCategoriesManagement)(nil)).Elem()
}

func (o LogAnalyticsResourceCategoriesManagementArrayOutput) ToLogAnalyticsResourceCategoriesManagementArrayOutput() LogAnalyticsResourceCategoriesManagementArrayOutput {
	return o
}

func (o LogAnalyticsResourceCategoriesManagementArrayOutput) ToLogAnalyticsResourceCategoriesManagementArrayOutputWithContext(ctx context.Context) LogAnalyticsResourceCategoriesManagementArrayOutput {
	return o
}

func (o LogAnalyticsResourceCategoriesManagementArrayOutput) Index(i pulumi.IntInput) LogAnalyticsResourceCategoriesManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LogAnalyticsResourceCategoriesManagement {
		return vs[0].([]*LogAnalyticsResourceCategoriesManagement)[vs[1].(int)]
	}).(LogAnalyticsResourceCategoriesManagementOutput)
}

type LogAnalyticsResourceCategoriesManagementMapOutput struct{ *pulumi.OutputState }

func (LogAnalyticsResourceCategoriesManagementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogAnalyticsResourceCategoriesManagement)(nil)).Elem()
}

func (o LogAnalyticsResourceCategoriesManagementMapOutput) ToLogAnalyticsResourceCategoriesManagementMapOutput() LogAnalyticsResourceCategoriesManagementMapOutput {
	return o
}

func (o LogAnalyticsResourceCategoriesManagementMapOutput) ToLogAnalyticsResourceCategoriesManagementMapOutputWithContext(ctx context.Context) LogAnalyticsResourceCategoriesManagementMapOutput {
	return o
}

func (o LogAnalyticsResourceCategoriesManagementMapOutput) MapIndex(k pulumi.StringInput) LogAnalyticsResourceCategoriesManagementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LogAnalyticsResourceCategoriesManagement {
		return vs[0].(map[string]*LogAnalyticsResourceCategoriesManagement)[vs[1].(string)]
	}).(LogAnalyticsResourceCategoriesManagementOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LogAnalyticsResourceCategoriesManagementInput)(nil)).Elem(), &LogAnalyticsResourceCategoriesManagement{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogAnalyticsResourceCategoriesManagementArrayInput)(nil)).Elem(), LogAnalyticsResourceCategoriesManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogAnalyticsResourceCategoriesManagementMapInput)(nil)).Elem(), LogAnalyticsResourceCategoriesManagementMap{})
	pulumi.RegisterOutputType(LogAnalyticsResourceCategoriesManagementOutput{})
	pulumi.RegisterOutputType(LogAnalyticsResourceCategoriesManagementArrayOutput{})
	pulumi.RegisterOutputType(LogAnalyticsResourceCategoriesManagementMapOutput{})
}
