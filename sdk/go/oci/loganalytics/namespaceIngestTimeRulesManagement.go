// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package loganalytics

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Namespace Ingest Time Rules Management resource in Oracle Cloud Infrastructure Log Analytics service.
//
// Enables the specified ingest time rule.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/LogAnalytics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := LogAnalytics.NewNamespaceIngestTimeRulesManagement(ctx, "test_namespace_ingest_time_rules_management", &LogAnalytics.NamespaceIngestTimeRulesManagementArgs{
//				IngestTimeRuleId:     pulumi.Any(testRule.Id),
//				Namespace:            pulumi.Any(namespaceIngestTimeRulesManagementNamespace),
//				EnableIngestTimeRule: pulumi.Any(enableIngestTimeRule),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
type NamespaceIngestTimeRulesManagement struct {
	pulumi.CustomResourceState

	// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnableIngestTimeRule pulumi.BoolOutput `pulumi:"enableIngestTimeRule"`
	// Unique ocid of the ingest time rule.
	IngestTimeRuleId pulumi.StringOutput `pulumi:"ingestTimeRuleId"`
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringOutput `pulumi:"namespace"`
}

// NewNamespaceIngestTimeRulesManagement registers a new resource with the given unique name, arguments, and options.
func NewNamespaceIngestTimeRulesManagement(ctx *pulumi.Context,
	name string, args *NamespaceIngestTimeRulesManagementArgs, opts ...pulumi.ResourceOption) (*NamespaceIngestTimeRulesManagement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnableIngestTimeRule == nil {
		return nil, errors.New("invalid value for required argument 'EnableIngestTimeRule'")
	}
	if args.IngestTimeRuleId == nil {
		return nil, errors.New("invalid value for required argument 'IngestTimeRuleId'")
	}
	if args.Namespace == nil {
		return nil, errors.New("invalid value for required argument 'Namespace'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NamespaceIngestTimeRulesManagement
	err := ctx.RegisterResource("oci:LogAnalytics/namespaceIngestTimeRulesManagement:NamespaceIngestTimeRulesManagement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNamespaceIngestTimeRulesManagement gets an existing NamespaceIngestTimeRulesManagement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNamespaceIngestTimeRulesManagement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NamespaceIngestTimeRulesManagementState, opts ...pulumi.ResourceOption) (*NamespaceIngestTimeRulesManagement, error) {
	var resource NamespaceIngestTimeRulesManagement
	err := ctx.ReadResource("oci:LogAnalytics/namespaceIngestTimeRulesManagement:NamespaceIngestTimeRulesManagement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NamespaceIngestTimeRulesManagement resources.
type namespaceIngestTimeRulesManagementState struct {
	// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnableIngestTimeRule *bool `pulumi:"enableIngestTimeRule"`
	// Unique ocid of the ingest time rule.
	IngestTimeRuleId *string `pulumi:"ingestTimeRuleId"`
	// The Logging Analytics namespace used for the request.
	Namespace *string `pulumi:"namespace"`
}

type NamespaceIngestTimeRulesManagementState struct {
	// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnableIngestTimeRule pulumi.BoolPtrInput
	// Unique ocid of the ingest time rule.
	IngestTimeRuleId pulumi.StringPtrInput
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringPtrInput
}

func (NamespaceIngestTimeRulesManagementState) ElementType() reflect.Type {
	return reflect.TypeOf((*namespaceIngestTimeRulesManagementState)(nil)).Elem()
}

type namespaceIngestTimeRulesManagementArgs struct {
	// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnableIngestTimeRule bool `pulumi:"enableIngestTimeRule"`
	// Unique ocid of the ingest time rule.
	IngestTimeRuleId string `pulumi:"ingestTimeRuleId"`
	// The Logging Analytics namespace used for the request.
	Namespace string `pulumi:"namespace"`
}

// The set of arguments for constructing a NamespaceIngestTimeRulesManagement resource.
type NamespaceIngestTimeRulesManagementArgs struct {
	// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnableIngestTimeRule pulumi.BoolInput
	// Unique ocid of the ingest time rule.
	IngestTimeRuleId pulumi.StringInput
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringInput
}

func (NamespaceIngestTimeRulesManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*namespaceIngestTimeRulesManagementArgs)(nil)).Elem()
}

type NamespaceIngestTimeRulesManagementInput interface {
	pulumi.Input

	ToNamespaceIngestTimeRulesManagementOutput() NamespaceIngestTimeRulesManagementOutput
	ToNamespaceIngestTimeRulesManagementOutputWithContext(ctx context.Context) NamespaceIngestTimeRulesManagementOutput
}

func (*NamespaceIngestTimeRulesManagement) ElementType() reflect.Type {
	return reflect.TypeOf((**NamespaceIngestTimeRulesManagement)(nil)).Elem()
}

func (i *NamespaceIngestTimeRulesManagement) ToNamespaceIngestTimeRulesManagementOutput() NamespaceIngestTimeRulesManagementOutput {
	return i.ToNamespaceIngestTimeRulesManagementOutputWithContext(context.Background())
}

func (i *NamespaceIngestTimeRulesManagement) ToNamespaceIngestTimeRulesManagementOutputWithContext(ctx context.Context) NamespaceIngestTimeRulesManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceIngestTimeRulesManagementOutput)
}

// NamespaceIngestTimeRulesManagementArrayInput is an input type that accepts NamespaceIngestTimeRulesManagementArray and NamespaceIngestTimeRulesManagementArrayOutput values.
// You can construct a concrete instance of `NamespaceIngestTimeRulesManagementArrayInput` via:
//
//	NamespaceIngestTimeRulesManagementArray{ NamespaceIngestTimeRulesManagementArgs{...} }
type NamespaceIngestTimeRulesManagementArrayInput interface {
	pulumi.Input

	ToNamespaceIngestTimeRulesManagementArrayOutput() NamespaceIngestTimeRulesManagementArrayOutput
	ToNamespaceIngestTimeRulesManagementArrayOutputWithContext(context.Context) NamespaceIngestTimeRulesManagementArrayOutput
}

type NamespaceIngestTimeRulesManagementArray []NamespaceIngestTimeRulesManagementInput

func (NamespaceIngestTimeRulesManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NamespaceIngestTimeRulesManagement)(nil)).Elem()
}

func (i NamespaceIngestTimeRulesManagementArray) ToNamespaceIngestTimeRulesManagementArrayOutput() NamespaceIngestTimeRulesManagementArrayOutput {
	return i.ToNamespaceIngestTimeRulesManagementArrayOutputWithContext(context.Background())
}

func (i NamespaceIngestTimeRulesManagementArray) ToNamespaceIngestTimeRulesManagementArrayOutputWithContext(ctx context.Context) NamespaceIngestTimeRulesManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceIngestTimeRulesManagementArrayOutput)
}

// NamespaceIngestTimeRulesManagementMapInput is an input type that accepts NamespaceIngestTimeRulesManagementMap and NamespaceIngestTimeRulesManagementMapOutput values.
// You can construct a concrete instance of `NamespaceIngestTimeRulesManagementMapInput` via:
//
//	NamespaceIngestTimeRulesManagementMap{ "key": NamespaceIngestTimeRulesManagementArgs{...} }
type NamespaceIngestTimeRulesManagementMapInput interface {
	pulumi.Input

	ToNamespaceIngestTimeRulesManagementMapOutput() NamespaceIngestTimeRulesManagementMapOutput
	ToNamespaceIngestTimeRulesManagementMapOutputWithContext(context.Context) NamespaceIngestTimeRulesManagementMapOutput
}

type NamespaceIngestTimeRulesManagementMap map[string]NamespaceIngestTimeRulesManagementInput

func (NamespaceIngestTimeRulesManagementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NamespaceIngestTimeRulesManagement)(nil)).Elem()
}

func (i NamespaceIngestTimeRulesManagementMap) ToNamespaceIngestTimeRulesManagementMapOutput() NamespaceIngestTimeRulesManagementMapOutput {
	return i.ToNamespaceIngestTimeRulesManagementMapOutputWithContext(context.Background())
}

func (i NamespaceIngestTimeRulesManagementMap) ToNamespaceIngestTimeRulesManagementMapOutputWithContext(ctx context.Context) NamespaceIngestTimeRulesManagementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceIngestTimeRulesManagementMapOutput)
}

type NamespaceIngestTimeRulesManagementOutput struct{ *pulumi.OutputState }

func (NamespaceIngestTimeRulesManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NamespaceIngestTimeRulesManagement)(nil)).Elem()
}

func (o NamespaceIngestTimeRulesManagementOutput) ToNamespaceIngestTimeRulesManagementOutput() NamespaceIngestTimeRulesManagementOutput {
	return o
}

func (o NamespaceIngestTimeRulesManagementOutput) ToNamespaceIngestTimeRulesManagementOutputWithContext(ctx context.Context) NamespaceIngestTimeRulesManagementOutput {
	return o
}

// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o NamespaceIngestTimeRulesManagementOutput) EnableIngestTimeRule() pulumi.BoolOutput {
	return o.ApplyT(func(v *NamespaceIngestTimeRulesManagement) pulumi.BoolOutput { return v.EnableIngestTimeRule }).(pulumi.BoolOutput)
}

// Unique ocid of the ingest time rule.
func (o NamespaceIngestTimeRulesManagementOutput) IngestTimeRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v *NamespaceIngestTimeRulesManagement) pulumi.StringOutput { return v.IngestTimeRuleId }).(pulumi.StringOutput)
}

// The Logging Analytics namespace used for the request.
func (o NamespaceIngestTimeRulesManagementOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v *NamespaceIngestTimeRulesManagement) pulumi.StringOutput { return v.Namespace }).(pulumi.StringOutput)
}

type NamespaceIngestTimeRulesManagementArrayOutput struct{ *pulumi.OutputState }

func (NamespaceIngestTimeRulesManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NamespaceIngestTimeRulesManagement)(nil)).Elem()
}

func (o NamespaceIngestTimeRulesManagementArrayOutput) ToNamespaceIngestTimeRulesManagementArrayOutput() NamespaceIngestTimeRulesManagementArrayOutput {
	return o
}

func (o NamespaceIngestTimeRulesManagementArrayOutput) ToNamespaceIngestTimeRulesManagementArrayOutputWithContext(ctx context.Context) NamespaceIngestTimeRulesManagementArrayOutput {
	return o
}

func (o NamespaceIngestTimeRulesManagementArrayOutput) Index(i pulumi.IntInput) NamespaceIngestTimeRulesManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NamespaceIngestTimeRulesManagement {
		return vs[0].([]*NamespaceIngestTimeRulesManagement)[vs[1].(int)]
	}).(NamespaceIngestTimeRulesManagementOutput)
}

type NamespaceIngestTimeRulesManagementMapOutput struct{ *pulumi.OutputState }

func (NamespaceIngestTimeRulesManagementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NamespaceIngestTimeRulesManagement)(nil)).Elem()
}

func (o NamespaceIngestTimeRulesManagementMapOutput) ToNamespaceIngestTimeRulesManagementMapOutput() NamespaceIngestTimeRulesManagementMapOutput {
	return o
}

func (o NamespaceIngestTimeRulesManagementMapOutput) ToNamespaceIngestTimeRulesManagementMapOutputWithContext(ctx context.Context) NamespaceIngestTimeRulesManagementMapOutput {
	return o
}

func (o NamespaceIngestTimeRulesManagementMapOutput) MapIndex(k pulumi.StringInput) NamespaceIngestTimeRulesManagementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NamespaceIngestTimeRulesManagement {
		return vs[0].(map[string]*NamespaceIngestTimeRulesManagement)[vs[1].(string)]
	}).(NamespaceIngestTimeRulesManagementOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NamespaceIngestTimeRulesManagementInput)(nil)).Elem(), &NamespaceIngestTimeRulesManagement{})
	pulumi.RegisterInputType(reflect.TypeOf((*NamespaceIngestTimeRulesManagementArrayInput)(nil)).Elem(), NamespaceIngestTimeRulesManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NamespaceIngestTimeRulesManagementMapInput)(nil)).Elem(), NamespaceIngestTimeRulesManagementMap{})
	pulumi.RegisterOutputType(NamespaceIngestTimeRulesManagementOutput{})
	pulumi.RegisterOutputType(NamespaceIngestTimeRulesManagementArrayOutput{})
	pulumi.RegisterOutputType(NamespaceIngestTimeRulesManagementMapOutput{})
}
