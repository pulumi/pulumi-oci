// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package loganalytics

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Namespace Scheduled Task resource in Oracle Cloud Infrastructure Log Analytics service.
//
// Schedule a task as specified and return task info.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/LogAnalytics"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := LogAnalytics.NewNamespaceScheduledTask(ctx, "testNamespaceScheduledTask", &LogAnalytics.NamespaceScheduledTaskArgs{
// 			CompartmentId: pulumi.Any(_var.Compartment_id),
// 			Kind:          pulumi.Any(_var.Namespace_scheduled_task_kind),
// 			Namespace:     pulumi.Any(_var.Namespace_scheduled_task_namespace),
// 			Action: &loganalytics.NamespaceScheduledTaskActionArgs{
// 				Type:                   pulumi.Any(_var.Namespace_scheduled_task_action_type),
// 				CompartmentIdInSubtree: pulumi.Any(_var.Namespace_scheduled_task_action_compartment_id_in_subtree),
// 				DataType:               pulumi.Any(_var.Namespace_scheduled_task_action_data_type),
// 				PurgeCompartmentId:     pulumi.Any(oci_identity_compartment.Test_compartment.Id),
// 				PurgeDuration:          pulumi.Any(_var.Namespace_scheduled_task_action_purge_duration),
// 				QueryString:            pulumi.Any(_var.Namespace_scheduled_task_action_query_string),
// 				SavedSearchId:          pulumi.Any(oci_log_analytics_saved_search.Test_saved_search.Id),
// 			},
// 			DefinedTags: pulumi.AnyMap{
// 				"foo-namespace.bar-key": pulumi.Any("value"),
// 			},
// 			DisplayName: pulumi.Any(_var.Namespace_scheduled_task_display_name),
// 			FreeformTags: pulumi.AnyMap{
// 				"bar-key": pulumi.Any("value"),
// 			},
// 			SavedSearchId: pulumi.Any(oci_log_analytics_saved_search.Test_saved_search.Id),
// 			Schedules: &loganalytics.NamespaceScheduledTaskSchedulesArgs{
// 				Type:              _var.Namespace_scheduled_task_schedules_type,
// 				Expression:        _var.Namespace_scheduled_task_schedules_expression,
// 				MisfirePolicy:     _var.Namespace_scheduled_task_schedules_misfire_policy,
// 				RecurringInterval: _var.Namespace_scheduled_task_schedules_recurring_interval,
// 				RepeatCount:       _var.Namespace_scheduled_task_schedules_repeat_count,
// 				TimeZone:          _var.Namespace_scheduled_task_schedules_time_zone,
// 			},
// 			TaskType: pulumi.Any(_var.Namespace_scheduled_task_task_type),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// NamespaceScheduledTasks can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:LogAnalytics/namespaceScheduledTask:NamespaceScheduledTask test_namespace_scheduled_task "namespaces/{namespaceName}/scheduledTasks/{scheduledTaskId}"
// ```
type NamespaceScheduledTask struct {
	pulumi.CustomResourceState

	// Action for scheduled task.
	Action NamespaceScheduledTaskActionOutput `pulumi:"action"`
	// (Updatable) Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A user-friendly name that is changeable and that does not have to be unique. Format: a leading alphanumeric, followed by zero or more alphanumerics, underscores, spaces, backslashes, or hyphens in any order). No trailing spaces allowed.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// Discriminator.
	Kind pulumi.StringOutput `pulumi:"kind"`
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringOutput `pulumi:"namespace"`
	// Number of execution occurrences.
	NumOccurrences pulumi.StringOutput `pulumi:"numOccurrences"`
	// The ManagementSavedSearch id [OCID] to be accelerated.
	SavedSearchId   pulumi.StringOutput `pulumi:"savedSearchId"`
	ScheduledTaskId pulumi.StringOutput `pulumi:"scheduledTaskId"`
	// (Updatable) Schedules, typically a single schedule. Note there may only be a single schedule for SAVED_SEARCH and PURGE scheduled tasks.
	Schedules NamespaceScheduledTaskSchedulesOutput `pulumi:"schedules"`
	// The current state of the scheduled task.
	State pulumi.StringOutput `pulumi:"state"`
	// Status of the scheduled task. - PURGE_RESOURCE_NOT_FOUND
	TaskStatus pulumi.StringOutput `pulumi:"taskStatus"`
	// Task type.
	TaskType pulumi.StringOutput `pulumi:"taskType"`
	// The date and time the scheduled task was created, in the format defined by RFC3339.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The date and time the scheduled task was last updated, in the format defined by RFC3339.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// most recent Work Request Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the asynchronous request.
	WorkRequestId pulumi.StringOutput `pulumi:"workRequestId"`
}

// NewNamespaceScheduledTask registers a new resource with the given unique name, arguments, and options.
func NewNamespaceScheduledTask(ctx *pulumi.Context,
	name string, args *NamespaceScheduledTaskArgs, opts ...pulumi.ResourceOption) (*NamespaceScheduledTask, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Action == nil {
		return nil, errors.New("invalid value for required argument 'Action'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.Kind == nil {
		return nil, errors.New("invalid value for required argument 'Kind'")
	}
	if args.Namespace == nil {
		return nil, errors.New("invalid value for required argument 'Namespace'")
	}
	if args.Schedules == nil {
		return nil, errors.New("invalid value for required argument 'Schedules'")
	}
	if args.TaskType == nil {
		return nil, errors.New("invalid value for required argument 'TaskType'")
	}
	var resource NamespaceScheduledTask
	err := ctx.RegisterResource("oci:LogAnalytics/namespaceScheduledTask:NamespaceScheduledTask", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNamespaceScheduledTask gets an existing NamespaceScheduledTask resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNamespaceScheduledTask(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NamespaceScheduledTaskState, opts ...pulumi.ResourceOption) (*NamespaceScheduledTask, error) {
	var resource NamespaceScheduledTask
	err := ctx.ReadResource("oci:LogAnalytics/namespaceScheduledTask:NamespaceScheduledTask", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NamespaceScheduledTask resources.
type namespaceScheduledTaskState struct {
	// Action for scheduled task.
	Action *NamespaceScheduledTaskAction `pulumi:"action"`
	// (Updatable) Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name that is changeable and that does not have to be unique. Format: a leading alphanumeric, followed by zero or more alphanumerics, underscores, spaces, backslashes, or hyphens in any order). No trailing spaces allowed.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Discriminator.
	Kind *string `pulumi:"kind"`
	// The Logging Analytics namespace used for the request.
	Namespace *string `pulumi:"namespace"`
	// Number of execution occurrences.
	NumOccurrences *string `pulumi:"numOccurrences"`
	// The ManagementSavedSearch id [OCID] to be accelerated.
	SavedSearchId   *string `pulumi:"savedSearchId"`
	ScheduledTaskId *string `pulumi:"scheduledTaskId"`
	// (Updatable) Schedules, typically a single schedule. Note there may only be a single schedule for SAVED_SEARCH and PURGE scheduled tasks.
	Schedules *NamespaceScheduledTaskSchedules `pulumi:"schedules"`
	// The current state of the scheduled task.
	State *string `pulumi:"state"`
	// Status of the scheduled task. - PURGE_RESOURCE_NOT_FOUND
	TaskStatus *string `pulumi:"taskStatus"`
	// Task type.
	TaskType *string `pulumi:"taskType"`
	// The date and time the scheduled task was created, in the format defined by RFC3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the scheduled task was last updated, in the format defined by RFC3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// most recent Work Request Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the asynchronous request.
	WorkRequestId *string `pulumi:"workRequestId"`
}

type NamespaceScheduledTaskState struct {
	// Action for scheduled task.
	Action NamespaceScheduledTaskActionPtrInput
	// (Updatable) Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name that is changeable and that does not have to be unique. Format: a leading alphanumeric, followed by zero or more alphanumerics, underscores, spaces, backslashes, or hyphens in any order). No trailing spaces allowed.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// Discriminator.
	Kind pulumi.StringPtrInput
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringPtrInput
	// Number of execution occurrences.
	NumOccurrences pulumi.StringPtrInput
	// The ManagementSavedSearch id [OCID] to be accelerated.
	SavedSearchId   pulumi.StringPtrInput
	ScheduledTaskId pulumi.StringPtrInput
	// (Updatable) Schedules, typically a single schedule. Note there may only be a single schedule for SAVED_SEARCH and PURGE scheduled tasks.
	Schedules NamespaceScheduledTaskSchedulesPtrInput
	// The current state of the scheduled task.
	State pulumi.StringPtrInput
	// Status of the scheduled task. - PURGE_RESOURCE_NOT_FOUND
	TaskStatus pulumi.StringPtrInput
	// Task type.
	TaskType pulumi.StringPtrInput
	// The date and time the scheduled task was created, in the format defined by RFC3339.
	TimeCreated pulumi.StringPtrInput
	// The date and time the scheduled task was last updated, in the format defined by RFC3339.
	TimeUpdated pulumi.StringPtrInput
	// most recent Work Request Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the asynchronous request.
	WorkRequestId pulumi.StringPtrInput
}

func (NamespaceScheduledTaskState) ElementType() reflect.Type {
	return reflect.TypeOf((*namespaceScheduledTaskState)(nil)).Elem()
}

type namespaceScheduledTaskArgs struct {
	// Action for scheduled task.
	Action NamespaceScheduledTaskAction `pulumi:"action"`
	// (Updatable) Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name that is changeable and that does not have to be unique. Format: a leading alphanumeric, followed by zero or more alphanumerics, underscores, spaces, backslashes, or hyphens in any order). No trailing spaces allowed.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Discriminator.
	Kind string `pulumi:"kind"`
	// The Logging Analytics namespace used for the request.
	Namespace string `pulumi:"namespace"`
	// The ManagementSavedSearch id [OCID] to be accelerated.
	SavedSearchId *string `pulumi:"savedSearchId"`
	// (Updatable) Schedules, typically a single schedule. Note there may only be a single schedule for SAVED_SEARCH and PURGE scheduled tasks.
	Schedules NamespaceScheduledTaskSchedules `pulumi:"schedules"`
	// Task type.
	TaskType string `pulumi:"taskType"`
}

// The set of arguments for constructing a NamespaceScheduledTask resource.
type NamespaceScheduledTaskArgs struct {
	// Action for scheduled task.
	Action NamespaceScheduledTaskActionInput
	// (Updatable) Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name that is changeable and that does not have to be unique. Format: a leading alphanumeric, followed by zero or more alphanumerics, underscores, spaces, backslashes, or hyphens in any order). No trailing spaces allowed.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// Discriminator.
	Kind pulumi.StringInput
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringInput
	// The ManagementSavedSearch id [OCID] to be accelerated.
	SavedSearchId pulumi.StringPtrInput
	// (Updatable) Schedules, typically a single schedule. Note there may only be a single schedule for SAVED_SEARCH and PURGE scheduled tasks.
	Schedules NamespaceScheduledTaskSchedulesInput
	// Task type.
	TaskType pulumi.StringInput
}

func (NamespaceScheduledTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*namespaceScheduledTaskArgs)(nil)).Elem()
}

type NamespaceScheduledTaskInput interface {
	pulumi.Input

	ToNamespaceScheduledTaskOutput() NamespaceScheduledTaskOutput
	ToNamespaceScheduledTaskOutputWithContext(ctx context.Context) NamespaceScheduledTaskOutput
}

func (*NamespaceScheduledTask) ElementType() reflect.Type {
	return reflect.TypeOf((**NamespaceScheduledTask)(nil)).Elem()
}

func (i *NamespaceScheduledTask) ToNamespaceScheduledTaskOutput() NamespaceScheduledTaskOutput {
	return i.ToNamespaceScheduledTaskOutputWithContext(context.Background())
}

func (i *NamespaceScheduledTask) ToNamespaceScheduledTaskOutputWithContext(ctx context.Context) NamespaceScheduledTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceScheduledTaskOutput)
}

// NamespaceScheduledTaskArrayInput is an input type that accepts NamespaceScheduledTaskArray and NamespaceScheduledTaskArrayOutput values.
// You can construct a concrete instance of `NamespaceScheduledTaskArrayInput` via:
//
//          NamespaceScheduledTaskArray{ NamespaceScheduledTaskArgs{...} }
type NamespaceScheduledTaskArrayInput interface {
	pulumi.Input

	ToNamespaceScheduledTaskArrayOutput() NamespaceScheduledTaskArrayOutput
	ToNamespaceScheduledTaskArrayOutputWithContext(context.Context) NamespaceScheduledTaskArrayOutput
}

type NamespaceScheduledTaskArray []NamespaceScheduledTaskInput

func (NamespaceScheduledTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NamespaceScheduledTask)(nil)).Elem()
}

func (i NamespaceScheduledTaskArray) ToNamespaceScheduledTaskArrayOutput() NamespaceScheduledTaskArrayOutput {
	return i.ToNamespaceScheduledTaskArrayOutputWithContext(context.Background())
}

func (i NamespaceScheduledTaskArray) ToNamespaceScheduledTaskArrayOutputWithContext(ctx context.Context) NamespaceScheduledTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceScheduledTaskArrayOutput)
}

// NamespaceScheduledTaskMapInput is an input type that accepts NamespaceScheduledTaskMap and NamespaceScheduledTaskMapOutput values.
// You can construct a concrete instance of `NamespaceScheduledTaskMapInput` via:
//
//          NamespaceScheduledTaskMap{ "key": NamespaceScheduledTaskArgs{...} }
type NamespaceScheduledTaskMapInput interface {
	pulumi.Input

	ToNamespaceScheduledTaskMapOutput() NamespaceScheduledTaskMapOutput
	ToNamespaceScheduledTaskMapOutputWithContext(context.Context) NamespaceScheduledTaskMapOutput
}

type NamespaceScheduledTaskMap map[string]NamespaceScheduledTaskInput

func (NamespaceScheduledTaskMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NamespaceScheduledTask)(nil)).Elem()
}

func (i NamespaceScheduledTaskMap) ToNamespaceScheduledTaskMapOutput() NamespaceScheduledTaskMapOutput {
	return i.ToNamespaceScheduledTaskMapOutputWithContext(context.Background())
}

func (i NamespaceScheduledTaskMap) ToNamespaceScheduledTaskMapOutputWithContext(ctx context.Context) NamespaceScheduledTaskMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceScheduledTaskMapOutput)
}

type NamespaceScheduledTaskOutput struct{ *pulumi.OutputState }

func (NamespaceScheduledTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NamespaceScheduledTask)(nil)).Elem()
}

func (o NamespaceScheduledTaskOutput) ToNamespaceScheduledTaskOutput() NamespaceScheduledTaskOutput {
	return o
}

func (o NamespaceScheduledTaskOutput) ToNamespaceScheduledTaskOutputWithContext(ctx context.Context) NamespaceScheduledTaskOutput {
	return o
}

type NamespaceScheduledTaskArrayOutput struct{ *pulumi.OutputState }

func (NamespaceScheduledTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NamespaceScheduledTask)(nil)).Elem()
}

func (o NamespaceScheduledTaskArrayOutput) ToNamespaceScheduledTaskArrayOutput() NamespaceScheduledTaskArrayOutput {
	return o
}

func (o NamespaceScheduledTaskArrayOutput) ToNamespaceScheduledTaskArrayOutputWithContext(ctx context.Context) NamespaceScheduledTaskArrayOutput {
	return o
}

func (o NamespaceScheduledTaskArrayOutput) Index(i pulumi.IntInput) NamespaceScheduledTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NamespaceScheduledTask {
		return vs[0].([]*NamespaceScheduledTask)[vs[1].(int)]
	}).(NamespaceScheduledTaskOutput)
}

type NamespaceScheduledTaskMapOutput struct{ *pulumi.OutputState }

func (NamespaceScheduledTaskMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NamespaceScheduledTask)(nil)).Elem()
}

func (o NamespaceScheduledTaskMapOutput) ToNamespaceScheduledTaskMapOutput() NamespaceScheduledTaskMapOutput {
	return o
}

func (o NamespaceScheduledTaskMapOutput) ToNamespaceScheduledTaskMapOutputWithContext(ctx context.Context) NamespaceScheduledTaskMapOutput {
	return o
}

func (o NamespaceScheduledTaskMapOutput) MapIndex(k pulumi.StringInput) NamespaceScheduledTaskOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NamespaceScheduledTask {
		return vs[0].(map[string]*NamespaceScheduledTask)[vs[1].(string)]
	}).(NamespaceScheduledTaskOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NamespaceScheduledTaskInput)(nil)).Elem(), &NamespaceScheduledTask{})
	pulumi.RegisterInputType(reflect.TypeOf((*NamespaceScheduledTaskArrayInput)(nil)).Elem(), NamespaceScheduledTaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NamespaceScheduledTaskMapInput)(nil)).Elem(), NamespaceScheduledTaskMap{})
	pulumi.RegisterOutputType(NamespaceScheduledTaskOutput{})
	pulumi.RegisterOutputType(NamespaceScheduledTaskArrayOutput{})
	pulumi.RegisterOutputType(NamespaceScheduledTaskMapOutput{})
}
