// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package loganalytics

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Namespace Storage Archival Config resource in Oracle Cloud Infrastructure Log Analytics service.
//
// # This API updates the archiving configuration
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/loganalytics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := loganalytics.NewNamespaceStorageArchivalConfig(ctx, "test_namespace_storage_archival_config", &loganalytics.NamespaceStorageArchivalConfigArgs{
//				ArchivingConfiguration: &loganalytics.NamespaceStorageArchivalConfigArchivingConfigurationArgs{
//					ActiveStorageDuration:   pulumi.Any(namespaceStorageArchivalConfigArchivingConfigurationActiveStorageDuration),
//					ArchivalStorageDuration: pulumi.Any(namespaceStorageArchivalConfigArchivingConfigurationArchivalStorageDuration),
//				},
//				Namespace: pulumi.Any(namespaceStorageArchivalConfigNamespace),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type NamespaceStorageArchivalConfig struct {
	pulumi.CustomResourceState

	// (Updatable) This is the configuration for data archiving in object storage
	ArchivingConfiguration NamespaceStorageArchivalConfigArchivingConfigurationOutput `pulumi:"archivingConfiguration"`
	// This indicates if old data can be archived for a tenancy
	IsArchivingEnabled pulumi.BoolOutput `pulumi:"isArchivingEnabled"`
	// The Logging Analytics namespace used for the request.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Namespace pulumi.StringOutput `pulumi:"namespace"`
}

// NewNamespaceStorageArchivalConfig registers a new resource with the given unique name, arguments, and options.
func NewNamespaceStorageArchivalConfig(ctx *pulumi.Context,
	name string, args *NamespaceStorageArchivalConfigArgs, opts ...pulumi.ResourceOption) (*NamespaceStorageArchivalConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ArchivingConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'ArchivingConfiguration'")
	}
	if args.Namespace == nil {
		return nil, errors.New("invalid value for required argument 'Namespace'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NamespaceStorageArchivalConfig
	err := ctx.RegisterResource("oci:LogAnalytics/namespaceStorageArchivalConfig:NamespaceStorageArchivalConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNamespaceStorageArchivalConfig gets an existing NamespaceStorageArchivalConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNamespaceStorageArchivalConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NamespaceStorageArchivalConfigState, opts ...pulumi.ResourceOption) (*NamespaceStorageArchivalConfig, error) {
	var resource NamespaceStorageArchivalConfig
	err := ctx.ReadResource("oci:LogAnalytics/namespaceStorageArchivalConfig:NamespaceStorageArchivalConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NamespaceStorageArchivalConfig resources.
type namespaceStorageArchivalConfigState struct {
	// (Updatable) This is the configuration for data archiving in object storage
	ArchivingConfiguration *NamespaceStorageArchivalConfigArchivingConfiguration `pulumi:"archivingConfiguration"`
	// This indicates if old data can be archived for a tenancy
	IsArchivingEnabled *bool `pulumi:"isArchivingEnabled"`
	// The Logging Analytics namespace used for the request.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Namespace *string `pulumi:"namespace"`
}

type NamespaceStorageArchivalConfigState struct {
	// (Updatable) This is the configuration for data archiving in object storage
	ArchivingConfiguration NamespaceStorageArchivalConfigArchivingConfigurationPtrInput
	// This indicates if old data can be archived for a tenancy
	IsArchivingEnabled pulumi.BoolPtrInput
	// The Logging Analytics namespace used for the request.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Namespace pulumi.StringPtrInput
}

func (NamespaceStorageArchivalConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*namespaceStorageArchivalConfigState)(nil)).Elem()
}

type namespaceStorageArchivalConfigArgs struct {
	// (Updatable) This is the configuration for data archiving in object storage
	ArchivingConfiguration NamespaceStorageArchivalConfigArchivingConfiguration `pulumi:"archivingConfiguration"`
	// The Logging Analytics namespace used for the request.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Namespace string `pulumi:"namespace"`
}

// The set of arguments for constructing a NamespaceStorageArchivalConfig resource.
type NamespaceStorageArchivalConfigArgs struct {
	// (Updatable) This is the configuration for data archiving in object storage
	ArchivingConfiguration NamespaceStorageArchivalConfigArchivingConfigurationInput
	// The Logging Analytics namespace used for the request.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Namespace pulumi.StringInput
}

func (NamespaceStorageArchivalConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*namespaceStorageArchivalConfigArgs)(nil)).Elem()
}

type NamespaceStorageArchivalConfigInput interface {
	pulumi.Input

	ToNamespaceStorageArchivalConfigOutput() NamespaceStorageArchivalConfigOutput
	ToNamespaceStorageArchivalConfigOutputWithContext(ctx context.Context) NamespaceStorageArchivalConfigOutput
}

func (*NamespaceStorageArchivalConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**NamespaceStorageArchivalConfig)(nil)).Elem()
}

func (i *NamespaceStorageArchivalConfig) ToNamespaceStorageArchivalConfigOutput() NamespaceStorageArchivalConfigOutput {
	return i.ToNamespaceStorageArchivalConfigOutputWithContext(context.Background())
}

func (i *NamespaceStorageArchivalConfig) ToNamespaceStorageArchivalConfigOutputWithContext(ctx context.Context) NamespaceStorageArchivalConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceStorageArchivalConfigOutput)
}

// NamespaceStorageArchivalConfigArrayInput is an input type that accepts NamespaceStorageArchivalConfigArray and NamespaceStorageArchivalConfigArrayOutput values.
// You can construct a concrete instance of `NamespaceStorageArchivalConfigArrayInput` via:
//
//	NamespaceStorageArchivalConfigArray{ NamespaceStorageArchivalConfigArgs{...} }
type NamespaceStorageArchivalConfigArrayInput interface {
	pulumi.Input

	ToNamespaceStorageArchivalConfigArrayOutput() NamespaceStorageArchivalConfigArrayOutput
	ToNamespaceStorageArchivalConfigArrayOutputWithContext(context.Context) NamespaceStorageArchivalConfigArrayOutput
}

type NamespaceStorageArchivalConfigArray []NamespaceStorageArchivalConfigInput

func (NamespaceStorageArchivalConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NamespaceStorageArchivalConfig)(nil)).Elem()
}

func (i NamespaceStorageArchivalConfigArray) ToNamespaceStorageArchivalConfigArrayOutput() NamespaceStorageArchivalConfigArrayOutput {
	return i.ToNamespaceStorageArchivalConfigArrayOutputWithContext(context.Background())
}

func (i NamespaceStorageArchivalConfigArray) ToNamespaceStorageArchivalConfigArrayOutputWithContext(ctx context.Context) NamespaceStorageArchivalConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceStorageArchivalConfigArrayOutput)
}

// NamespaceStorageArchivalConfigMapInput is an input type that accepts NamespaceStorageArchivalConfigMap and NamespaceStorageArchivalConfigMapOutput values.
// You can construct a concrete instance of `NamespaceStorageArchivalConfigMapInput` via:
//
//	NamespaceStorageArchivalConfigMap{ "key": NamespaceStorageArchivalConfigArgs{...} }
type NamespaceStorageArchivalConfigMapInput interface {
	pulumi.Input

	ToNamespaceStorageArchivalConfigMapOutput() NamespaceStorageArchivalConfigMapOutput
	ToNamespaceStorageArchivalConfigMapOutputWithContext(context.Context) NamespaceStorageArchivalConfigMapOutput
}

type NamespaceStorageArchivalConfigMap map[string]NamespaceStorageArchivalConfigInput

func (NamespaceStorageArchivalConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NamespaceStorageArchivalConfig)(nil)).Elem()
}

func (i NamespaceStorageArchivalConfigMap) ToNamespaceStorageArchivalConfigMapOutput() NamespaceStorageArchivalConfigMapOutput {
	return i.ToNamespaceStorageArchivalConfigMapOutputWithContext(context.Background())
}

func (i NamespaceStorageArchivalConfigMap) ToNamespaceStorageArchivalConfigMapOutputWithContext(ctx context.Context) NamespaceStorageArchivalConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceStorageArchivalConfigMapOutput)
}

type NamespaceStorageArchivalConfigOutput struct{ *pulumi.OutputState }

func (NamespaceStorageArchivalConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NamespaceStorageArchivalConfig)(nil)).Elem()
}

func (o NamespaceStorageArchivalConfigOutput) ToNamespaceStorageArchivalConfigOutput() NamespaceStorageArchivalConfigOutput {
	return o
}

func (o NamespaceStorageArchivalConfigOutput) ToNamespaceStorageArchivalConfigOutputWithContext(ctx context.Context) NamespaceStorageArchivalConfigOutput {
	return o
}

// (Updatable) This is the configuration for data archiving in object storage
func (o NamespaceStorageArchivalConfigOutput) ArchivingConfiguration() NamespaceStorageArchivalConfigArchivingConfigurationOutput {
	return o.ApplyT(func(v *NamespaceStorageArchivalConfig) NamespaceStorageArchivalConfigArchivingConfigurationOutput {
		return v.ArchivingConfiguration
	}).(NamespaceStorageArchivalConfigArchivingConfigurationOutput)
}

// This indicates if old data can be archived for a tenancy
func (o NamespaceStorageArchivalConfigOutput) IsArchivingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *NamespaceStorageArchivalConfig) pulumi.BoolOutput { return v.IsArchivingEnabled }).(pulumi.BoolOutput)
}

// The Logging Analytics namespace used for the request.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o NamespaceStorageArchivalConfigOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v *NamespaceStorageArchivalConfig) pulumi.StringOutput { return v.Namespace }).(pulumi.StringOutput)
}

type NamespaceStorageArchivalConfigArrayOutput struct{ *pulumi.OutputState }

func (NamespaceStorageArchivalConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NamespaceStorageArchivalConfig)(nil)).Elem()
}

func (o NamespaceStorageArchivalConfigArrayOutput) ToNamespaceStorageArchivalConfigArrayOutput() NamespaceStorageArchivalConfigArrayOutput {
	return o
}

func (o NamespaceStorageArchivalConfigArrayOutput) ToNamespaceStorageArchivalConfigArrayOutputWithContext(ctx context.Context) NamespaceStorageArchivalConfigArrayOutput {
	return o
}

func (o NamespaceStorageArchivalConfigArrayOutput) Index(i pulumi.IntInput) NamespaceStorageArchivalConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NamespaceStorageArchivalConfig {
		return vs[0].([]*NamespaceStorageArchivalConfig)[vs[1].(int)]
	}).(NamespaceStorageArchivalConfigOutput)
}

type NamespaceStorageArchivalConfigMapOutput struct{ *pulumi.OutputState }

func (NamespaceStorageArchivalConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NamespaceStorageArchivalConfig)(nil)).Elem()
}

func (o NamespaceStorageArchivalConfigMapOutput) ToNamespaceStorageArchivalConfigMapOutput() NamespaceStorageArchivalConfigMapOutput {
	return o
}

func (o NamespaceStorageArchivalConfigMapOutput) ToNamespaceStorageArchivalConfigMapOutputWithContext(ctx context.Context) NamespaceStorageArchivalConfigMapOutput {
	return o
}

func (o NamespaceStorageArchivalConfigMapOutput) MapIndex(k pulumi.StringInput) NamespaceStorageArchivalConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NamespaceStorageArchivalConfig {
		return vs[0].(map[string]*NamespaceStorageArchivalConfig)[vs[1].(string)]
	}).(NamespaceStorageArchivalConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NamespaceStorageArchivalConfigInput)(nil)).Elem(), &NamespaceStorageArchivalConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*NamespaceStorageArchivalConfigArrayInput)(nil)).Elem(), NamespaceStorageArchivalConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NamespaceStorageArchivalConfigMapInput)(nil)).Elem(), NamespaceStorageArchivalConfigMap{})
	pulumi.RegisterOutputType(NamespaceStorageArchivalConfigOutput{})
	pulumi.RegisterOutputType(NamespaceStorageArchivalConfigArrayOutput{})
	pulumi.RegisterOutputType(NamespaceStorageArchivalConfigMapOutput{})
}
