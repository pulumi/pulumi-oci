// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package loganalytics

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Namespace Storage Enable Disable Archiving resource in Oracle Cloud Infrastructure Log Analytics service.
//
// THis API enables archiving.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/loganalytics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := loganalytics.NewNamespaceStorageEnableDisableArchiving(ctx, "test_namespace_storage_enable_disable_archiving", &loganalytics.NamespaceStorageEnableDisableArchivingArgs{
//				Namespace:             pulumi.Any(namespaceStorageEnableDisableArchivingNamespace),
//				EnableArchivingTenant: pulumi.Any(enableArchivingTenant),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type NamespaceStorageEnableDisableArchiving struct {
	pulumi.CustomResourceState

	// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnableArchivingTenant pulumi.BoolOutput `pulumi:"enableArchivingTenant"`
	// A human-readable success string.
	Message pulumi.StringOutput `pulumi:"message"`
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringOutput `pulumi:"namespace"`
}

// NewNamespaceStorageEnableDisableArchiving registers a new resource with the given unique name, arguments, and options.
func NewNamespaceStorageEnableDisableArchiving(ctx *pulumi.Context,
	name string, args *NamespaceStorageEnableDisableArchivingArgs, opts ...pulumi.ResourceOption) (*NamespaceStorageEnableDisableArchiving, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnableArchivingTenant == nil {
		return nil, errors.New("invalid value for required argument 'EnableArchivingTenant'")
	}
	if args.Namespace == nil {
		return nil, errors.New("invalid value for required argument 'Namespace'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NamespaceStorageEnableDisableArchiving
	err := ctx.RegisterResource("oci:LogAnalytics/namespaceStorageEnableDisableArchiving:NamespaceStorageEnableDisableArchiving", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNamespaceStorageEnableDisableArchiving gets an existing NamespaceStorageEnableDisableArchiving resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNamespaceStorageEnableDisableArchiving(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NamespaceStorageEnableDisableArchivingState, opts ...pulumi.ResourceOption) (*NamespaceStorageEnableDisableArchiving, error) {
	var resource NamespaceStorageEnableDisableArchiving
	err := ctx.ReadResource("oci:LogAnalytics/namespaceStorageEnableDisableArchiving:NamespaceStorageEnableDisableArchiving", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NamespaceStorageEnableDisableArchiving resources.
type namespaceStorageEnableDisableArchivingState struct {
	// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnableArchivingTenant *bool `pulumi:"enableArchivingTenant"`
	// A human-readable success string.
	Message *string `pulumi:"message"`
	// The Logging Analytics namespace used for the request.
	Namespace *string `pulumi:"namespace"`
}

type NamespaceStorageEnableDisableArchivingState struct {
	// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnableArchivingTenant pulumi.BoolPtrInput
	// A human-readable success string.
	Message pulumi.StringPtrInput
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringPtrInput
}

func (NamespaceStorageEnableDisableArchivingState) ElementType() reflect.Type {
	return reflect.TypeOf((*namespaceStorageEnableDisableArchivingState)(nil)).Elem()
}

type namespaceStorageEnableDisableArchivingArgs struct {
	// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnableArchivingTenant bool `pulumi:"enableArchivingTenant"`
	// The Logging Analytics namespace used for the request.
	Namespace string `pulumi:"namespace"`
}

// The set of arguments for constructing a NamespaceStorageEnableDisableArchiving resource.
type NamespaceStorageEnableDisableArchivingArgs struct {
	// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnableArchivingTenant pulumi.BoolInput
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringInput
}

func (NamespaceStorageEnableDisableArchivingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*namespaceStorageEnableDisableArchivingArgs)(nil)).Elem()
}

type NamespaceStorageEnableDisableArchivingInput interface {
	pulumi.Input

	ToNamespaceStorageEnableDisableArchivingOutput() NamespaceStorageEnableDisableArchivingOutput
	ToNamespaceStorageEnableDisableArchivingOutputWithContext(ctx context.Context) NamespaceStorageEnableDisableArchivingOutput
}

func (*NamespaceStorageEnableDisableArchiving) ElementType() reflect.Type {
	return reflect.TypeOf((**NamespaceStorageEnableDisableArchiving)(nil)).Elem()
}

func (i *NamespaceStorageEnableDisableArchiving) ToNamespaceStorageEnableDisableArchivingOutput() NamespaceStorageEnableDisableArchivingOutput {
	return i.ToNamespaceStorageEnableDisableArchivingOutputWithContext(context.Background())
}

func (i *NamespaceStorageEnableDisableArchiving) ToNamespaceStorageEnableDisableArchivingOutputWithContext(ctx context.Context) NamespaceStorageEnableDisableArchivingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceStorageEnableDisableArchivingOutput)
}

// NamespaceStorageEnableDisableArchivingArrayInput is an input type that accepts NamespaceStorageEnableDisableArchivingArray and NamespaceStorageEnableDisableArchivingArrayOutput values.
// You can construct a concrete instance of `NamespaceStorageEnableDisableArchivingArrayInput` via:
//
//	NamespaceStorageEnableDisableArchivingArray{ NamespaceStorageEnableDisableArchivingArgs{...} }
type NamespaceStorageEnableDisableArchivingArrayInput interface {
	pulumi.Input

	ToNamespaceStorageEnableDisableArchivingArrayOutput() NamespaceStorageEnableDisableArchivingArrayOutput
	ToNamespaceStorageEnableDisableArchivingArrayOutputWithContext(context.Context) NamespaceStorageEnableDisableArchivingArrayOutput
}

type NamespaceStorageEnableDisableArchivingArray []NamespaceStorageEnableDisableArchivingInput

func (NamespaceStorageEnableDisableArchivingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NamespaceStorageEnableDisableArchiving)(nil)).Elem()
}

func (i NamespaceStorageEnableDisableArchivingArray) ToNamespaceStorageEnableDisableArchivingArrayOutput() NamespaceStorageEnableDisableArchivingArrayOutput {
	return i.ToNamespaceStorageEnableDisableArchivingArrayOutputWithContext(context.Background())
}

func (i NamespaceStorageEnableDisableArchivingArray) ToNamespaceStorageEnableDisableArchivingArrayOutputWithContext(ctx context.Context) NamespaceStorageEnableDisableArchivingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceStorageEnableDisableArchivingArrayOutput)
}

// NamespaceStorageEnableDisableArchivingMapInput is an input type that accepts NamespaceStorageEnableDisableArchivingMap and NamespaceStorageEnableDisableArchivingMapOutput values.
// You can construct a concrete instance of `NamespaceStorageEnableDisableArchivingMapInput` via:
//
//	NamespaceStorageEnableDisableArchivingMap{ "key": NamespaceStorageEnableDisableArchivingArgs{...} }
type NamespaceStorageEnableDisableArchivingMapInput interface {
	pulumi.Input

	ToNamespaceStorageEnableDisableArchivingMapOutput() NamespaceStorageEnableDisableArchivingMapOutput
	ToNamespaceStorageEnableDisableArchivingMapOutputWithContext(context.Context) NamespaceStorageEnableDisableArchivingMapOutput
}

type NamespaceStorageEnableDisableArchivingMap map[string]NamespaceStorageEnableDisableArchivingInput

func (NamespaceStorageEnableDisableArchivingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NamespaceStorageEnableDisableArchiving)(nil)).Elem()
}

func (i NamespaceStorageEnableDisableArchivingMap) ToNamespaceStorageEnableDisableArchivingMapOutput() NamespaceStorageEnableDisableArchivingMapOutput {
	return i.ToNamespaceStorageEnableDisableArchivingMapOutputWithContext(context.Background())
}

func (i NamespaceStorageEnableDisableArchivingMap) ToNamespaceStorageEnableDisableArchivingMapOutputWithContext(ctx context.Context) NamespaceStorageEnableDisableArchivingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceStorageEnableDisableArchivingMapOutput)
}

type NamespaceStorageEnableDisableArchivingOutput struct{ *pulumi.OutputState }

func (NamespaceStorageEnableDisableArchivingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NamespaceStorageEnableDisableArchiving)(nil)).Elem()
}

func (o NamespaceStorageEnableDisableArchivingOutput) ToNamespaceStorageEnableDisableArchivingOutput() NamespaceStorageEnableDisableArchivingOutput {
	return o
}

func (o NamespaceStorageEnableDisableArchivingOutput) ToNamespaceStorageEnableDisableArchivingOutputWithContext(ctx context.Context) NamespaceStorageEnableDisableArchivingOutput {
	return o
}

// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o NamespaceStorageEnableDisableArchivingOutput) EnableArchivingTenant() pulumi.BoolOutput {
	return o.ApplyT(func(v *NamespaceStorageEnableDisableArchiving) pulumi.BoolOutput { return v.EnableArchivingTenant }).(pulumi.BoolOutput)
}

// A human-readable success string.
func (o NamespaceStorageEnableDisableArchivingOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v *NamespaceStorageEnableDisableArchiving) pulumi.StringOutput { return v.Message }).(pulumi.StringOutput)
}

// The Logging Analytics namespace used for the request.
func (o NamespaceStorageEnableDisableArchivingOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v *NamespaceStorageEnableDisableArchiving) pulumi.StringOutput { return v.Namespace }).(pulumi.StringOutput)
}

type NamespaceStorageEnableDisableArchivingArrayOutput struct{ *pulumi.OutputState }

func (NamespaceStorageEnableDisableArchivingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NamespaceStorageEnableDisableArchiving)(nil)).Elem()
}

func (o NamespaceStorageEnableDisableArchivingArrayOutput) ToNamespaceStorageEnableDisableArchivingArrayOutput() NamespaceStorageEnableDisableArchivingArrayOutput {
	return o
}

func (o NamespaceStorageEnableDisableArchivingArrayOutput) ToNamespaceStorageEnableDisableArchivingArrayOutputWithContext(ctx context.Context) NamespaceStorageEnableDisableArchivingArrayOutput {
	return o
}

func (o NamespaceStorageEnableDisableArchivingArrayOutput) Index(i pulumi.IntInput) NamespaceStorageEnableDisableArchivingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NamespaceStorageEnableDisableArchiving {
		return vs[0].([]*NamespaceStorageEnableDisableArchiving)[vs[1].(int)]
	}).(NamespaceStorageEnableDisableArchivingOutput)
}

type NamespaceStorageEnableDisableArchivingMapOutput struct{ *pulumi.OutputState }

func (NamespaceStorageEnableDisableArchivingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NamespaceStorageEnableDisableArchiving)(nil)).Elem()
}

func (o NamespaceStorageEnableDisableArchivingMapOutput) ToNamespaceStorageEnableDisableArchivingMapOutput() NamespaceStorageEnableDisableArchivingMapOutput {
	return o
}

func (o NamespaceStorageEnableDisableArchivingMapOutput) ToNamespaceStorageEnableDisableArchivingMapOutputWithContext(ctx context.Context) NamespaceStorageEnableDisableArchivingMapOutput {
	return o
}

func (o NamespaceStorageEnableDisableArchivingMapOutput) MapIndex(k pulumi.StringInput) NamespaceStorageEnableDisableArchivingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NamespaceStorageEnableDisableArchiving {
		return vs[0].(map[string]*NamespaceStorageEnableDisableArchiving)[vs[1].(string)]
	}).(NamespaceStorageEnableDisableArchivingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NamespaceStorageEnableDisableArchivingInput)(nil)).Elem(), &NamespaceStorageEnableDisableArchiving{})
	pulumi.RegisterInputType(reflect.TypeOf((*NamespaceStorageEnableDisableArchivingArrayInput)(nil)).Elem(), NamespaceStorageEnableDisableArchivingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NamespaceStorageEnableDisableArchivingMapInput)(nil)).Elem(), NamespaceStorageEnableDisableArchivingMap{})
	pulumi.RegisterOutputType(NamespaceStorageEnableDisableArchivingOutput{})
	pulumi.RegisterOutputType(NamespaceStorageEnableDisableArchivingArrayOutput{})
	pulumi.RegisterOutputType(NamespaceStorageEnableDisableArchivingMapOutput{})
}
