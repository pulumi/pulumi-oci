// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package loganalytics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LogAnalyticsImportCustomContentChangeList struct {
	// A list of field display names with conflicts.
	ConflictFieldDisplayNames []string `pulumi:"conflictFieldDisplayNames"`
	// A list of parser names with conflicts.
	ConflictParserNames []string `pulumi:"conflictParserNames"`
	// A list of source names with conflicts.
	ConflictSourceNames []string `pulumi:"conflictSourceNames"`
	// An array of created field display names.
	CreatedFieldDisplayNames []string `pulumi:"createdFieldDisplayNames"`
	// An array of created parser names.
	CreatedParserNames []string `pulumi:"createdParserNames"`
	// An array of created source names.
	CreatedSourceNames []string `pulumi:"createdSourceNames"`
	// An array of updated field display names.
	UpdatedFieldDisplayNames []string `pulumi:"updatedFieldDisplayNames"`
	// An array of updated parser names.
	UpdatedParserNames []string `pulumi:"updatedParserNames"`
	// An array of updated source names.
	UpdatedSourceNames []string `pulumi:"updatedSourceNames"`
}

// LogAnalyticsImportCustomContentChangeListInput is an input type that accepts LogAnalyticsImportCustomContentChangeListArgs and LogAnalyticsImportCustomContentChangeListOutput values.
// You can construct a concrete instance of `LogAnalyticsImportCustomContentChangeListInput` via:
//
//	LogAnalyticsImportCustomContentChangeListArgs{...}
type LogAnalyticsImportCustomContentChangeListInput interface {
	pulumi.Input

	ToLogAnalyticsImportCustomContentChangeListOutput() LogAnalyticsImportCustomContentChangeListOutput
	ToLogAnalyticsImportCustomContentChangeListOutputWithContext(context.Context) LogAnalyticsImportCustomContentChangeListOutput
}

type LogAnalyticsImportCustomContentChangeListArgs struct {
	// A list of field display names with conflicts.
	ConflictFieldDisplayNames pulumi.StringArrayInput `pulumi:"conflictFieldDisplayNames"`
	// A list of parser names with conflicts.
	ConflictParserNames pulumi.StringArrayInput `pulumi:"conflictParserNames"`
	// A list of source names with conflicts.
	ConflictSourceNames pulumi.StringArrayInput `pulumi:"conflictSourceNames"`
	// An array of created field display names.
	CreatedFieldDisplayNames pulumi.StringArrayInput `pulumi:"createdFieldDisplayNames"`
	// An array of created parser names.
	CreatedParserNames pulumi.StringArrayInput `pulumi:"createdParserNames"`
	// An array of created source names.
	CreatedSourceNames pulumi.StringArrayInput `pulumi:"createdSourceNames"`
	// An array of updated field display names.
	UpdatedFieldDisplayNames pulumi.StringArrayInput `pulumi:"updatedFieldDisplayNames"`
	// An array of updated parser names.
	UpdatedParserNames pulumi.StringArrayInput `pulumi:"updatedParserNames"`
	// An array of updated source names.
	UpdatedSourceNames pulumi.StringArrayInput `pulumi:"updatedSourceNames"`
}

func (LogAnalyticsImportCustomContentChangeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogAnalyticsImportCustomContentChangeList)(nil)).Elem()
}

func (i LogAnalyticsImportCustomContentChangeListArgs) ToLogAnalyticsImportCustomContentChangeListOutput() LogAnalyticsImportCustomContentChangeListOutput {
	return i.ToLogAnalyticsImportCustomContentChangeListOutputWithContext(context.Background())
}

func (i LogAnalyticsImportCustomContentChangeListArgs) ToLogAnalyticsImportCustomContentChangeListOutputWithContext(ctx context.Context) LogAnalyticsImportCustomContentChangeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogAnalyticsImportCustomContentChangeListOutput)
}

// LogAnalyticsImportCustomContentChangeListArrayInput is an input type that accepts LogAnalyticsImportCustomContentChangeListArray and LogAnalyticsImportCustomContentChangeListArrayOutput values.
// You can construct a concrete instance of `LogAnalyticsImportCustomContentChangeListArrayInput` via:
//
//	LogAnalyticsImportCustomContentChangeListArray{ LogAnalyticsImportCustomContentChangeListArgs{...} }
type LogAnalyticsImportCustomContentChangeListArrayInput interface {
	pulumi.Input

	ToLogAnalyticsImportCustomContentChangeListArrayOutput() LogAnalyticsImportCustomContentChangeListArrayOutput
	ToLogAnalyticsImportCustomContentChangeListArrayOutputWithContext(context.Context) LogAnalyticsImportCustomContentChangeListArrayOutput
}

type LogAnalyticsImportCustomContentChangeListArray []LogAnalyticsImportCustomContentChangeListInput

func (LogAnalyticsImportCustomContentChangeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogAnalyticsImportCustomContentChangeList)(nil)).Elem()
}

func (i LogAnalyticsImportCustomContentChangeListArray) ToLogAnalyticsImportCustomContentChangeListArrayOutput() LogAnalyticsImportCustomContentChangeListArrayOutput {
	return i.ToLogAnalyticsImportCustomContentChangeListArrayOutputWithContext(context.Background())
}

func (i LogAnalyticsImportCustomContentChangeListArray) ToLogAnalyticsImportCustomContentChangeListArrayOutputWithContext(ctx context.Context) LogAnalyticsImportCustomContentChangeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogAnalyticsImportCustomContentChangeListArrayOutput)
}

type LogAnalyticsImportCustomContentChangeListOutput struct{ *pulumi.OutputState }

func (LogAnalyticsImportCustomContentChangeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogAnalyticsImportCustomContentChangeList)(nil)).Elem()
}

func (o LogAnalyticsImportCustomContentChangeListOutput) ToLogAnalyticsImportCustomContentChangeListOutput() LogAnalyticsImportCustomContentChangeListOutput {
	return o
}

func (o LogAnalyticsImportCustomContentChangeListOutput) ToLogAnalyticsImportCustomContentChangeListOutputWithContext(ctx context.Context) LogAnalyticsImportCustomContentChangeListOutput {
	return o
}

// A list of field display names with conflicts.
func (o LogAnalyticsImportCustomContentChangeListOutput) ConflictFieldDisplayNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LogAnalyticsImportCustomContentChangeList) []string { return v.ConflictFieldDisplayNames }).(pulumi.StringArrayOutput)
}

// A list of parser names with conflicts.
func (o LogAnalyticsImportCustomContentChangeListOutput) ConflictParserNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LogAnalyticsImportCustomContentChangeList) []string { return v.ConflictParserNames }).(pulumi.StringArrayOutput)
}

// A list of source names with conflicts.
func (o LogAnalyticsImportCustomContentChangeListOutput) ConflictSourceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LogAnalyticsImportCustomContentChangeList) []string { return v.ConflictSourceNames }).(pulumi.StringArrayOutput)
}

// An array of created field display names.
func (o LogAnalyticsImportCustomContentChangeListOutput) CreatedFieldDisplayNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LogAnalyticsImportCustomContentChangeList) []string { return v.CreatedFieldDisplayNames }).(pulumi.StringArrayOutput)
}

// An array of created parser names.
func (o LogAnalyticsImportCustomContentChangeListOutput) CreatedParserNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LogAnalyticsImportCustomContentChangeList) []string { return v.CreatedParserNames }).(pulumi.StringArrayOutput)
}

// An array of created source names.
func (o LogAnalyticsImportCustomContentChangeListOutput) CreatedSourceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LogAnalyticsImportCustomContentChangeList) []string { return v.CreatedSourceNames }).(pulumi.StringArrayOutput)
}

// An array of updated field display names.
func (o LogAnalyticsImportCustomContentChangeListOutput) UpdatedFieldDisplayNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LogAnalyticsImportCustomContentChangeList) []string { return v.UpdatedFieldDisplayNames }).(pulumi.StringArrayOutput)
}

// An array of updated parser names.
func (o LogAnalyticsImportCustomContentChangeListOutput) UpdatedParserNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LogAnalyticsImportCustomContentChangeList) []string { return v.UpdatedParserNames }).(pulumi.StringArrayOutput)
}

// An array of updated source names.
func (o LogAnalyticsImportCustomContentChangeListOutput) UpdatedSourceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LogAnalyticsImportCustomContentChangeList) []string { return v.UpdatedSourceNames }).(pulumi.StringArrayOutput)
}

type LogAnalyticsImportCustomContentChangeListArrayOutput struct{ *pulumi.OutputState }

func (LogAnalyticsImportCustomContentChangeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogAnalyticsImportCustomContentChangeList)(nil)).Elem()
}

func (o LogAnalyticsImportCustomContentChangeListArrayOutput) ToLogAnalyticsImportCustomContentChangeListArrayOutput() LogAnalyticsImportCustomContentChangeListArrayOutput {
	return o
}

func (o LogAnalyticsImportCustomContentChangeListArrayOutput) ToLogAnalyticsImportCustomContentChangeListArrayOutputWithContext(ctx context.Context) LogAnalyticsImportCustomContentChangeListArrayOutput {
	return o
}

func (o LogAnalyticsImportCustomContentChangeListArrayOutput) Index(i pulumi.IntInput) LogAnalyticsImportCustomContentChangeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogAnalyticsImportCustomContentChangeList {
		return vs[0].([]LogAnalyticsImportCustomContentChangeList)[vs[1].(int)]
	}).(LogAnalyticsImportCustomContentChangeListOutput)
}

type LogAnalyticsObjectCollectionRuleOverride struct {
	MatchType     *string `pulumi:"matchType"`
	MatchValue    *string `pulumi:"matchValue"`
	PropertyName  *string `pulumi:"propertyName"`
	PropertyValue *string `pulumi:"propertyValue"`
}

// LogAnalyticsObjectCollectionRuleOverrideInput is an input type that accepts LogAnalyticsObjectCollectionRuleOverrideArgs and LogAnalyticsObjectCollectionRuleOverrideOutput values.
// You can construct a concrete instance of `LogAnalyticsObjectCollectionRuleOverrideInput` via:
//
//	LogAnalyticsObjectCollectionRuleOverrideArgs{...}
type LogAnalyticsObjectCollectionRuleOverrideInput interface {
	pulumi.Input

	ToLogAnalyticsObjectCollectionRuleOverrideOutput() LogAnalyticsObjectCollectionRuleOverrideOutput
	ToLogAnalyticsObjectCollectionRuleOverrideOutputWithContext(context.Context) LogAnalyticsObjectCollectionRuleOverrideOutput
}

type LogAnalyticsObjectCollectionRuleOverrideArgs struct {
	MatchType     pulumi.StringPtrInput `pulumi:"matchType"`
	MatchValue    pulumi.StringPtrInput `pulumi:"matchValue"`
	PropertyName  pulumi.StringPtrInput `pulumi:"propertyName"`
	PropertyValue pulumi.StringPtrInput `pulumi:"propertyValue"`
}

func (LogAnalyticsObjectCollectionRuleOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogAnalyticsObjectCollectionRuleOverride)(nil)).Elem()
}

func (i LogAnalyticsObjectCollectionRuleOverrideArgs) ToLogAnalyticsObjectCollectionRuleOverrideOutput() LogAnalyticsObjectCollectionRuleOverrideOutput {
	return i.ToLogAnalyticsObjectCollectionRuleOverrideOutputWithContext(context.Background())
}

func (i LogAnalyticsObjectCollectionRuleOverrideArgs) ToLogAnalyticsObjectCollectionRuleOverrideOutputWithContext(ctx context.Context) LogAnalyticsObjectCollectionRuleOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogAnalyticsObjectCollectionRuleOverrideOutput)
}

// LogAnalyticsObjectCollectionRuleOverrideArrayInput is an input type that accepts LogAnalyticsObjectCollectionRuleOverrideArray and LogAnalyticsObjectCollectionRuleOverrideArrayOutput values.
// You can construct a concrete instance of `LogAnalyticsObjectCollectionRuleOverrideArrayInput` via:
//
//	LogAnalyticsObjectCollectionRuleOverrideArray{ LogAnalyticsObjectCollectionRuleOverrideArgs{...} }
type LogAnalyticsObjectCollectionRuleOverrideArrayInput interface {
	pulumi.Input

	ToLogAnalyticsObjectCollectionRuleOverrideArrayOutput() LogAnalyticsObjectCollectionRuleOverrideArrayOutput
	ToLogAnalyticsObjectCollectionRuleOverrideArrayOutputWithContext(context.Context) LogAnalyticsObjectCollectionRuleOverrideArrayOutput
}

type LogAnalyticsObjectCollectionRuleOverrideArray []LogAnalyticsObjectCollectionRuleOverrideInput

func (LogAnalyticsObjectCollectionRuleOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogAnalyticsObjectCollectionRuleOverride)(nil)).Elem()
}

func (i LogAnalyticsObjectCollectionRuleOverrideArray) ToLogAnalyticsObjectCollectionRuleOverrideArrayOutput() LogAnalyticsObjectCollectionRuleOverrideArrayOutput {
	return i.ToLogAnalyticsObjectCollectionRuleOverrideArrayOutputWithContext(context.Background())
}

func (i LogAnalyticsObjectCollectionRuleOverrideArray) ToLogAnalyticsObjectCollectionRuleOverrideArrayOutputWithContext(ctx context.Context) LogAnalyticsObjectCollectionRuleOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogAnalyticsObjectCollectionRuleOverrideArrayOutput)
}

type LogAnalyticsObjectCollectionRuleOverrideOutput struct{ *pulumi.OutputState }

func (LogAnalyticsObjectCollectionRuleOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogAnalyticsObjectCollectionRuleOverride)(nil)).Elem()
}

func (o LogAnalyticsObjectCollectionRuleOverrideOutput) ToLogAnalyticsObjectCollectionRuleOverrideOutput() LogAnalyticsObjectCollectionRuleOverrideOutput {
	return o
}

func (o LogAnalyticsObjectCollectionRuleOverrideOutput) ToLogAnalyticsObjectCollectionRuleOverrideOutputWithContext(ctx context.Context) LogAnalyticsObjectCollectionRuleOverrideOutput {
	return o
}

func (o LogAnalyticsObjectCollectionRuleOverrideOutput) MatchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogAnalyticsObjectCollectionRuleOverride) *string { return v.MatchType }).(pulumi.StringPtrOutput)
}

func (o LogAnalyticsObjectCollectionRuleOverrideOutput) MatchValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogAnalyticsObjectCollectionRuleOverride) *string { return v.MatchValue }).(pulumi.StringPtrOutput)
}

func (o LogAnalyticsObjectCollectionRuleOverrideOutput) PropertyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogAnalyticsObjectCollectionRuleOverride) *string { return v.PropertyName }).(pulumi.StringPtrOutput)
}

func (o LogAnalyticsObjectCollectionRuleOverrideOutput) PropertyValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogAnalyticsObjectCollectionRuleOverride) *string { return v.PropertyValue }).(pulumi.StringPtrOutput)
}

type LogAnalyticsObjectCollectionRuleOverrideArrayOutput struct{ *pulumi.OutputState }

func (LogAnalyticsObjectCollectionRuleOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogAnalyticsObjectCollectionRuleOverride)(nil)).Elem()
}

func (o LogAnalyticsObjectCollectionRuleOverrideArrayOutput) ToLogAnalyticsObjectCollectionRuleOverrideArrayOutput() LogAnalyticsObjectCollectionRuleOverrideArrayOutput {
	return o
}

func (o LogAnalyticsObjectCollectionRuleOverrideArrayOutput) ToLogAnalyticsObjectCollectionRuleOverrideArrayOutputWithContext(ctx context.Context) LogAnalyticsObjectCollectionRuleOverrideArrayOutput {
	return o
}

func (o LogAnalyticsObjectCollectionRuleOverrideArrayOutput) Index(i pulumi.IntInput) LogAnalyticsObjectCollectionRuleOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogAnalyticsObjectCollectionRuleOverride {
		return vs[0].([]LogAnalyticsObjectCollectionRuleOverride)[vs[1].(int)]
	}).(LogAnalyticsObjectCollectionRuleOverrideOutput)
}

type LogAnalyticsPreferencesManagementItem struct {
	// The preference name. Currently, only "DEFAULT_HOMEPAGE" is supported.
	Name *string `pulumi:"name"`
	// The preference value.
	Value *string `pulumi:"value"`
}

// LogAnalyticsPreferencesManagementItemInput is an input type that accepts LogAnalyticsPreferencesManagementItemArgs and LogAnalyticsPreferencesManagementItemOutput values.
// You can construct a concrete instance of `LogAnalyticsPreferencesManagementItemInput` via:
//
//	LogAnalyticsPreferencesManagementItemArgs{...}
type LogAnalyticsPreferencesManagementItemInput interface {
	pulumi.Input

	ToLogAnalyticsPreferencesManagementItemOutput() LogAnalyticsPreferencesManagementItemOutput
	ToLogAnalyticsPreferencesManagementItemOutputWithContext(context.Context) LogAnalyticsPreferencesManagementItemOutput
}

type LogAnalyticsPreferencesManagementItemArgs struct {
	// The preference name. Currently, only "DEFAULT_HOMEPAGE" is supported.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The preference value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (LogAnalyticsPreferencesManagementItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogAnalyticsPreferencesManagementItem)(nil)).Elem()
}

func (i LogAnalyticsPreferencesManagementItemArgs) ToLogAnalyticsPreferencesManagementItemOutput() LogAnalyticsPreferencesManagementItemOutput {
	return i.ToLogAnalyticsPreferencesManagementItemOutputWithContext(context.Background())
}

func (i LogAnalyticsPreferencesManagementItemArgs) ToLogAnalyticsPreferencesManagementItemOutputWithContext(ctx context.Context) LogAnalyticsPreferencesManagementItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogAnalyticsPreferencesManagementItemOutput)
}

// LogAnalyticsPreferencesManagementItemArrayInput is an input type that accepts LogAnalyticsPreferencesManagementItemArray and LogAnalyticsPreferencesManagementItemArrayOutput values.
// You can construct a concrete instance of `LogAnalyticsPreferencesManagementItemArrayInput` via:
//
//	LogAnalyticsPreferencesManagementItemArray{ LogAnalyticsPreferencesManagementItemArgs{...} }
type LogAnalyticsPreferencesManagementItemArrayInput interface {
	pulumi.Input

	ToLogAnalyticsPreferencesManagementItemArrayOutput() LogAnalyticsPreferencesManagementItemArrayOutput
	ToLogAnalyticsPreferencesManagementItemArrayOutputWithContext(context.Context) LogAnalyticsPreferencesManagementItemArrayOutput
}

type LogAnalyticsPreferencesManagementItemArray []LogAnalyticsPreferencesManagementItemInput

func (LogAnalyticsPreferencesManagementItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogAnalyticsPreferencesManagementItem)(nil)).Elem()
}

func (i LogAnalyticsPreferencesManagementItemArray) ToLogAnalyticsPreferencesManagementItemArrayOutput() LogAnalyticsPreferencesManagementItemArrayOutput {
	return i.ToLogAnalyticsPreferencesManagementItemArrayOutputWithContext(context.Background())
}

func (i LogAnalyticsPreferencesManagementItemArray) ToLogAnalyticsPreferencesManagementItemArrayOutputWithContext(ctx context.Context) LogAnalyticsPreferencesManagementItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogAnalyticsPreferencesManagementItemArrayOutput)
}

type LogAnalyticsPreferencesManagementItemOutput struct{ *pulumi.OutputState }

func (LogAnalyticsPreferencesManagementItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogAnalyticsPreferencesManagementItem)(nil)).Elem()
}

func (o LogAnalyticsPreferencesManagementItemOutput) ToLogAnalyticsPreferencesManagementItemOutput() LogAnalyticsPreferencesManagementItemOutput {
	return o
}

func (o LogAnalyticsPreferencesManagementItemOutput) ToLogAnalyticsPreferencesManagementItemOutputWithContext(ctx context.Context) LogAnalyticsPreferencesManagementItemOutput {
	return o
}

// The preference name. Currently, only "DEFAULT_HOMEPAGE" is supported.
func (o LogAnalyticsPreferencesManagementItemOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogAnalyticsPreferencesManagementItem) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The preference value.
func (o LogAnalyticsPreferencesManagementItemOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogAnalyticsPreferencesManagementItem) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type LogAnalyticsPreferencesManagementItemArrayOutput struct{ *pulumi.OutputState }

func (LogAnalyticsPreferencesManagementItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogAnalyticsPreferencesManagementItem)(nil)).Elem()
}

func (o LogAnalyticsPreferencesManagementItemArrayOutput) ToLogAnalyticsPreferencesManagementItemArrayOutput() LogAnalyticsPreferencesManagementItemArrayOutput {
	return o
}

func (o LogAnalyticsPreferencesManagementItemArrayOutput) ToLogAnalyticsPreferencesManagementItemArrayOutputWithContext(ctx context.Context) LogAnalyticsPreferencesManagementItemArrayOutput {
	return o
}

func (o LogAnalyticsPreferencesManagementItemArrayOutput) Index(i pulumi.IntInput) LogAnalyticsPreferencesManagementItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogAnalyticsPreferencesManagementItem {
		return vs[0].([]LogAnalyticsPreferencesManagementItem)[vs[1].(int)]
	}).(LogAnalyticsPreferencesManagementItemOutput)
}

type NamespaceScheduledTaskAction struct {
	// if true, purge child compartments data
	CompartmentIdInSubtree *bool `pulumi:"compartmentIdInSubtree"`
	// the type of the log data to be purged
	DataType *string `pulumi:"dataType"`
	// the compartment OCID under which the data will be purged
	PurgeCompartmentId *string `pulumi:"purgeCompartmentId"`
	// The duration of data to be retained, which is used to calculate the timeDataEnded when the task fires. The value should be negative. Purge duration in ISO 8601 extended format as described in https://en.wikipedia.org/wiki/ISO_8601#Durations. The largest supported unit is D, e.g. -P365D (not -P1Y) or -P14D (not -P2W).
	PurgeDuration *string `pulumi:"purgeDuration"`
	// Purge query string.
	QueryString *string `pulumi:"queryString"`
	// The ManagementSavedSearch id [OCID] to be accelerated.
	SavedSearchId *string `pulumi:"savedSearchId"`
	// (Updatable) Schedule type discriminator.
	Type string `pulumi:"type"`
}

// NamespaceScheduledTaskActionInput is an input type that accepts NamespaceScheduledTaskActionArgs and NamespaceScheduledTaskActionOutput values.
// You can construct a concrete instance of `NamespaceScheduledTaskActionInput` via:
//
//	NamespaceScheduledTaskActionArgs{...}
type NamespaceScheduledTaskActionInput interface {
	pulumi.Input

	ToNamespaceScheduledTaskActionOutput() NamespaceScheduledTaskActionOutput
	ToNamespaceScheduledTaskActionOutputWithContext(context.Context) NamespaceScheduledTaskActionOutput
}

type NamespaceScheduledTaskActionArgs struct {
	// if true, purge child compartments data
	CompartmentIdInSubtree pulumi.BoolPtrInput `pulumi:"compartmentIdInSubtree"`
	// the type of the log data to be purged
	DataType pulumi.StringPtrInput `pulumi:"dataType"`
	// the compartment OCID under which the data will be purged
	PurgeCompartmentId pulumi.StringPtrInput `pulumi:"purgeCompartmentId"`
	// The duration of data to be retained, which is used to calculate the timeDataEnded when the task fires. The value should be negative. Purge duration in ISO 8601 extended format as described in https://en.wikipedia.org/wiki/ISO_8601#Durations. The largest supported unit is D, e.g. -P365D (not -P1Y) or -P14D (not -P2W).
	PurgeDuration pulumi.StringPtrInput `pulumi:"purgeDuration"`
	// Purge query string.
	QueryString pulumi.StringPtrInput `pulumi:"queryString"`
	// The ManagementSavedSearch id [OCID] to be accelerated.
	SavedSearchId pulumi.StringPtrInput `pulumi:"savedSearchId"`
	// (Updatable) Schedule type discriminator.
	Type pulumi.StringInput `pulumi:"type"`
}

func (NamespaceScheduledTaskActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespaceScheduledTaskAction)(nil)).Elem()
}

func (i NamespaceScheduledTaskActionArgs) ToNamespaceScheduledTaskActionOutput() NamespaceScheduledTaskActionOutput {
	return i.ToNamespaceScheduledTaskActionOutputWithContext(context.Background())
}

func (i NamespaceScheduledTaskActionArgs) ToNamespaceScheduledTaskActionOutputWithContext(ctx context.Context) NamespaceScheduledTaskActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceScheduledTaskActionOutput)
}

func (i NamespaceScheduledTaskActionArgs) ToNamespaceScheduledTaskActionPtrOutput() NamespaceScheduledTaskActionPtrOutput {
	return i.ToNamespaceScheduledTaskActionPtrOutputWithContext(context.Background())
}

func (i NamespaceScheduledTaskActionArgs) ToNamespaceScheduledTaskActionPtrOutputWithContext(ctx context.Context) NamespaceScheduledTaskActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceScheduledTaskActionOutput).ToNamespaceScheduledTaskActionPtrOutputWithContext(ctx)
}

// NamespaceScheduledTaskActionPtrInput is an input type that accepts NamespaceScheduledTaskActionArgs, NamespaceScheduledTaskActionPtr and NamespaceScheduledTaskActionPtrOutput values.
// You can construct a concrete instance of `NamespaceScheduledTaskActionPtrInput` via:
//
//	        NamespaceScheduledTaskActionArgs{...}
//
//	or:
//
//	        nil
type NamespaceScheduledTaskActionPtrInput interface {
	pulumi.Input

	ToNamespaceScheduledTaskActionPtrOutput() NamespaceScheduledTaskActionPtrOutput
	ToNamespaceScheduledTaskActionPtrOutputWithContext(context.Context) NamespaceScheduledTaskActionPtrOutput
}

type namespaceScheduledTaskActionPtrType NamespaceScheduledTaskActionArgs

func NamespaceScheduledTaskActionPtr(v *NamespaceScheduledTaskActionArgs) NamespaceScheduledTaskActionPtrInput {
	return (*namespaceScheduledTaskActionPtrType)(v)
}

func (*namespaceScheduledTaskActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NamespaceScheduledTaskAction)(nil)).Elem()
}

func (i *namespaceScheduledTaskActionPtrType) ToNamespaceScheduledTaskActionPtrOutput() NamespaceScheduledTaskActionPtrOutput {
	return i.ToNamespaceScheduledTaskActionPtrOutputWithContext(context.Background())
}

func (i *namespaceScheduledTaskActionPtrType) ToNamespaceScheduledTaskActionPtrOutputWithContext(ctx context.Context) NamespaceScheduledTaskActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceScheduledTaskActionPtrOutput)
}

type NamespaceScheduledTaskActionOutput struct{ *pulumi.OutputState }

func (NamespaceScheduledTaskActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespaceScheduledTaskAction)(nil)).Elem()
}

func (o NamespaceScheduledTaskActionOutput) ToNamespaceScheduledTaskActionOutput() NamespaceScheduledTaskActionOutput {
	return o
}

func (o NamespaceScheduledTaskActionOutput) ToNamespaceScheduledTaskActionOutputWithContext(ctx context.Context) NamespaceScheduledTaskActionOutput {
	return o
}

func (o NamespaceScheduledTaskActionOutput) ToNamespaceScheduledTaskActionPtrOutput() NamespaceScheduledTaskActionPtrOutput {
	return o.ToNamespaceScheduledTaskActionPtrOutputWithContext(context.Background())
}

func (o NamespaceScheduledTaskActionOutput) ToNamespaceScheduledTaskActionPtrOutputWithContext(ctx context.Context) NamespaceScheduledTaskActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NamespaceScheduledTaskAction) *NamespaceScheduledTaskAction {
		return &v
	}).(NamespaceScheduledTaskActionPtrOutput)
}

// if true, purge child compartments data
func (o NamespaceScheduledTaskActionOutput) CompartmentIdInSubtree() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NamespaceScheduledTaskAction) *bool { return v.CompartmentIdInSubtree }).(pulumi.BoolPtrOutput)
}

// the type of the log data to be purged
func (o NamespaceScheduledTaskActionOutput) DataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamespaceScheduledTaskAction) *string { return v.DataType }).(pulumi.StringPtrOutput)
}

// the compartment OCID under which the data will be purged
func (o NamespaceScheduledTaskActionOutput) PurgeCompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamespaceScheduledTaskAction) *string { return v.PurgeCompartmentId }).(pulumi.StringPtrOutput)
}

// The duration of data to be retained, which is used to calculate the timeDataEnded when the task fires. The value should be negative. Purge duration in ISO 8601 extended format as described in https://en.wikipedia.org/wiki/ISO_8601#Durations. The largest supported unit is D, e.g. -P365D (not -P1Y) or -P14D (not -P2W).
func (o NamespaceScheduledTaskActionOutput) PurgeDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamespaceScheduledTaskAction) *string { return v.PurgeDuration }).(pulumi.StringPtrOutput)
}

// Purge query string.
func (o NamespaceScheduledTaskActionOutput) QueryString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamespaceScheduledTaskAction) *string { return v.QueryString }).(pulumi.StringPtrOutput)
}

// The ManagementSavedSearch id [OCID] to be accelerated.
func (o NamespaceScheduledTaskActionOutput) SavedSearchId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamespaceScheduledTaskAction) *string { return v.SavedSearchId }).(pulumi.StringPtrOutput)
}

// (Updatable) Schedule type discriminator.
func (o NamespaceScheduledTaskActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NamespaceScheduledTaskAction) string { return v.Type }).(pulumi.StringOutput)
}

type NamespaceScheduledTaskActionPtrOutput struct{ *pulumi.OutputState }

func (NamespaceScheduledTaskActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NamespaceScheduledTaskAction)(nil)).Elem()
}

func (o NamespaceScheduledTaskActionPtrOutput) ToNamespaceScheduledTaskActionPtrOutput() NamespaceScheduledTaskActionPtrOutput {
	return o
}

func (o NamespaceScheduledTaskActionPtrOutput) ToNamespaceScheduledTaskActionPtrOutputWithContext(ctx context.Context) NamespaceScheduledTaskActionPtrOutput {
	return o
}

func (o NamespaceScheduledTaskActionPtrOutput) Elem() NamespaceScheduledTaskActionOutput {
	return o.ApplyT(func(v *NamespaceScheduledTaskAction) NamespaceScheduledTaskAction {
		if v != nil {
			return *v
		}
		var ret NamespaceScheduledTaskAction
		return ret
	}).(NamespaceScheduledTaskActionOutput)
}

// if true, purge child compartments data
func (o NamespaceScheduledTaskActionPtrOutput) CompartmentIdInSubtree() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NamespaceScheduledTaskAction) *bool {
		if v == nil {
			return nil
		}
		return v.CompartmentIdInSubtree
	}).(pulumi.BoolPtrOutput)
}

// the type of the log data to be purged
func (o NamespaceScheduledTaskActionPtrOutput) DataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespaceScheduledTaskAction) *string {
		if v == nil {
			return nil
		}
		return v.DataType
	}).(pulumi.StringPtrOutput)
}

// the compartment OCID under which the data will be purged
func (o NamespaceScheduledTaskActionPtrOutput) PurgeCompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespaceScheduledTaskAction) *string {
		if v == nil {
			return nil
		}
		return v.PurgeCompartmentId
	}).(pulumi.StringPtrOutput)
}

// The duration of data to be retained, which is used to calculate the timeDataEnded when the task fires. The value should be negative. Purge duration in ISO 8601 extended format as described in https://en.wikipedia.org/wiki/ISO_8601#Durations. The largest supported unit is D, e.g. -P365D (not -P1Y) or -P14D (not -P2W).
func (o NamespaceScheduledTaskActionPtrOutput) PurgeDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespaceScheduledTaskAction) *string {
		if v == nil {
			return nil
		}
		return v.PurgeDuration
	}).(pulumi.StringPtrOutput)
}

// Purge query string.
func (o NamespaceScheduledTaskActionPtrOutput) QueryString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespaceScheduledTaskAction) *string {
		if v == nil {
			return nil
		}
		return v.QueryString
	}).(pulumi.StringPtrOutput)
}

// The ManagementSavedSearch id [OCID] to be accelerated.
func (o NamespaceScheduledTaskActionPtrOutput) SavedSearchId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespaceScheduledTaskAction) *string {
		if v == nil {
			return nil
		}
		return v.SavedSearchId
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Schedule type discriminator.
func (o NamespaceScheduledTaskActionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespaceScheduledTaskAction) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type NamespaceScheduledTaskSchedules struct {
	Schedules []NamespaceScheduledTaskSchedulesSchedule `pulumi:"schedules"`
}

// NamespaceScheduledTaskSchedulesInput is an input type that accepts NamespaceScheduledTaskSchedulesArgs and NamespaceScheduledTaskSchedulesOutput values.
// You can construct a concrete instance of `NamespaceScheduledTaskSchedulesInput` via:
//
//	NamespaceScheduledTaskSchedulesArgs{...}
type NamespaceScheduledTaskSchedulesInput interface {
	pulumi.Input

	ToNamespaceScheduledTaskSchedulesOutput() NamespaceScheduledTaskSchedulesOutput
	ToNamespaceScheduledTaskSchedulesOutputWithContext(context.Context) NamespaceScheduledTaskSchedulesOutput
}

type NamespaceScheduledTaskSchedulesArgs struct {
	Schedules NamespaceScheduledTaskSchedulesScheduleArrayInput `pulumi:"schedules"`
}

func (NamespaceScheduledTaskSchedulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespaceScheduledTaskSchedules)(nil)).Elem()
}

func (i NamespaceScheduledTaskSchedulesArgs) ToNamespaceScheduledTaskSchedulesOutput() NamespaceScheduledTaskSchedulesOutput {
	return i.ToNamespaceScheduledTaskSchedulesOutputWithContext(context.Background())
}

func (i NamespaceScheduledTaskSchedulesArgs) ToNamespaceScheduledTaskSchedulesOutputWithContext(ctx context.Context) NamespaceScheduledTaskSchedulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceScheduledTaskSchedulesOutput)
}

func (i NamespaceScheduledTaskSchedulesArgs) ToNamespaceScheduledTaskSchedulesPtrOutput() NamespaceScheduledTaskSchedulesPtrOutput {
	return i.ToNamespaceScheduledTaskSchedulesPtrOutputWithContext(context.Background())
}

func (i NamespaceScheduledTaskSchedulesArgs) ToNamespaceScheduledTaskSchedulesPtrOutputWithContext(ctx context.Context) NamespaceScheduledTaskSchedulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceScheduledTaskSchedulesOutput).ToNamespaceScheduledTaskSchedulesPtrOutputWithContext(ctx)
}

// NamespaceScheduledTaskSchedulesPtrInput is an input type that accepts NamespaceScheduledTaskSchedulesArgs, NamespaceScheduledTaskSchedulesPtr and NamespaceScheduledTaskSchedulesPtrOutput values.
// You can construct a concrete instance of `NamespaceScheduledTaskSchedulesPtrInput` via:
//
//	        NamespaceScheduledTaskSchedulesArgs{...}
//
//	or:
//
//	        nil
type NamespaceScheduledTaskSchedulesPtrInput interface {
	pulumi.Input

	ToNamespaceScheduledTaskSchedulesPtrOutput() NamespaceScheduledTaskSchedulesPtrOutput
	ToNamespaceScheduledTaskSchedulesPtrOutputWithContext(context.Context) NamespaceScheduledTaskSchedulesPtrOutput
}

type namespaceScheduledTaskSchedulesPtrType NamespaceScheduledTaskSchedulesArgs

func NamespaceScheduledTaskSchedulesPtr(v *NamespaceScheduledTaskSchedulesArgs) NamespaceScheduledTaskSchedulesPtrInput {
	return (*namespaceScheduledTaskSchedulesPtrType)(v)
}

func (*namespaceScheduledTaskSchedulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NamespaceScheduledTaskSchedules)(nil)).Elem()
}

func (i *namespaceScheduledTaskSchedulesPtrType) ToNamespaceScheduledTaskSchedulesPtrOutput() NamespaceScheduledTaskSchedulesPtrOutput {
	return i.ToNamespaceScheduledTaskSchedulesPtrOutputWithContext(context.Background())
}

func (i *namespaceScheduledTaskSchedulesPtrType) ToNamespaceScheduledTaskSchedulesPtrOutputWithContext(ctx context.Context) NamespaceScheduledTaskSchedulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceScheduledTaskSchedulesPtrOutput)
}

type NamespaceScheduledTaskSchedulesOutput struct{ *pulumi.OutputState }

func (NamespaceScheduledTaskSchedulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespaceScheduledTaskSchedules)(nil)).Elem()
}

func (o NamespaceScheduledTaskSchedulesOutput) ToNamespaceScheduledTaskSchedulesOutput() NamespaceScheduledTaskSchedulesOutput {
	return o
}

func (o NamespaceScheduledTaskSchedulesOutput) ToNamespaceScheduledTaskSchedulesOutputWithContext(ctx context.Context) NamespaceScheduledTaskSchedulesOutput {
	return o
}

func (o NamespaceScheduledTaskSchedulesOutput) ToNamespaceScheduledTaskSchedulesPtrOutput() NamespaceScheduledTaskSchedulesPtrOutput {
	return o.ToNamespaceScheduledTaskSchedulesPtrOutputWithContext(context.Background())
}

func (o NamespaceScheduledTaskSchedulesOutput) ToNamespaceScheduledTaskSchedulesPtrOutputWithContext(ctx context.Context) NamespaceScheduledTaskSchedulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NamespaceScheduledTaskSchedules) *NamespaceScheduledTaskSchedules {
		return &v
	}).(NamespaceScheduledTaskSchedulesPtrOutput)
}

func (o NamespaceScheduledTaskSchedulesOutput) Schedules() NamespaceScheduledTaskSchedulesScheduleArrayOutput {
	return o.ApplyT(func(v NamespaceScheduledTaskSchedules) []NamespaceScheduledTaskSchedulesSchedule { return v.Schedules }).(NamespaceScheduledTaskSchedulesScheduleArrayOutput)
}

type NamespaceScheduledTaskSchedulesPtrOutput struct{ *pulumi.OutputState }

func (NamespaceScheduledTaskSchedulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NamespaceScheduledTaskSchedules)(nil)).Elem()
}

func (o NamespaceScheduledTaskSchedulesPtrOutput) ToNamespaceScheduledTaskSchedulesPtrOutput() NamespaceScheduledTaskSchedulesPtrOutput {
	return o
}

func (o NamespaceScheduledTaskSchedulesPtrOutput) ToNamespaceScheduledTaskSchedulesPtrOutputWithContext(ctx context.Context) NamespaceScheduledTaskSchedulesPtrOutput {
	return o
}

func (o NamespaceScheduledTaskSchedulesPtrOutput) Elem() NamespaceScheduledTaskSchedulesOutput {
	return o.ApplyT(func(v *NamespaceScheduledTaskSchedules) NamespaceScheduledTaskSchedules {
		if v != nil {
			return *v
		}
		var ret NamespaceScheduledTaskSchedules
		return ret
	}).(NamespaceScheduledTaskSchedulesOutput)
}

func (o NamespaceScheduledTaskSchedulesPtrOutput) Schedules() NamespaceScheduledTaskSchedulesScheduleArrayOutput {
	return o.ApplyT(func(v *NamespaceScheduledTaskSchedules) []NamespaceScheduledTaskSchedulesSchedule {
		if v == nil {
			return nil
		}
		return v.Schedules
	}).(NamespaceScheduledTaskSchedulesScheduleArrayOutput)
}

type NamespaceScheduledTaskSchedulesSchedule struct {
	// (Updatable) Value in cron format.
	Expression *string `pulumi:"expression"`
	// (Updatable) Schedule misfire retry policy.
	MisfirePolicy *string `pulumi:"misfirePolicy"`
	// (Updatable) Recurring interval in ISO 8601 extended format as described in https://en.wikipedia.org/wiki/ISO_8601#Durations. The largest supported unit is D, e.g. P14D (not P2W). The value must be at least 5 minutes (PT5M) and at most 3 weeks (P21D or PT30240M).
	RecurringInterval *string `pulumi:"recurringInterval"`
	// (Updatable) Number of times (0-based) to execute until auto-stop. Default value -1 will execute indefinitely. Value 0 will execute once.
	RepeatCount *int `pulumi:"repeatCount"`
	// (Updatable) Time zone, by default UTC.
	TimeZone *string `pulumi:"timeZone"`
	// (Updatable) Schedule type discriminator.
	Type string `pulumi:"type"`
}

// NamespaceScheduledTaskSchedulesScheduleInput is an input type that accepts NamespaceScheduledTaskSchedulesScheduleArgs and NamespaceScheduledTaskSchedulesScheduleOutput values.
// You can construct a concrete instance of `NamespaceScheduledTaskSchedulesScheduleInput` via:
//
//	NamespaceScheduledTaskSchedulesScheduleArgs{...}
type NamespaceScheduledTaskSchedulesScheduleInput interface {
	pulumi.Input

	ToNamespaceScheduledTaskSchedulesScheduleOutput() NamespaceScheduledTaskSchedulesScheduleOutput
	ToNamespaceScheduledTaskSchedulesScheduleOutputWithContext(context.Context) NamespaceScheduledTaskSchedulesScheduleOutput
}

type NamespaceScheduledTaskSchedulesScheduleArgs struct {
	// (Updatable) Value in cron format.
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	// (Updatable) Schedule misfire retry policy.
	MisfirePolicy pulumi.StringPtrInput `pulumi:"misfirePolicy"`
	// (Updatable) Recurring interval in ISO 8601 extended format as described in https://en.wikipedia.org/wiki/ISO_8601#Durations. The largest supported unit is D, e.g. P14D (not P2W). The value must be at least 5 minutes (PT5M) and at most 3 weeks (P21D or PT30240M).
	RecurringInterval pulumi.StringPtrInput `pulumi:"recurringInterval"`
	// (Updatable) Number of times (0-based) to execute until auto-stop. Default value -1 will execute indefinitely. Value 0 will execute once.
	RepeatCount pulumi.IntPtrInput `pulumi:"repeatCount"`
	// (Updatable) Time zone, by default UTC.
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
	// (Updatable) Schedule type discriminator.
	Type pulumi.StringInput `pulumi:"type"`
}

func (NamespaceScheduledTaskSchedulesScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespaceScheduledTaskSchedulesSchedule)(nil)).Elem()
}

func (i NamespaceScheduledTaskSchedulesScheduleArgs) ToNamespaceScheduledTaskSchedulesScheduleOutput() NamespaceScheduledTaskSchedulesScheduleOutput {
	return i.ToNamespaceScheduledTaskSchedulesScheduleOutputWithContext(context.Background())
}

func (i NamespaceScheduledTaskSchedulesScheduleArgs) ToNamespaceScheduledTaskSchedulesScheduleOutputWithContext(ctx context.Context) NamespaceScheduledTaskSchedulesScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceScheduledTaskSchedulesScheduleOutput)
}

// NamespaceScheduledTaskSchedulesScheduleArrayInput is an input type that accepts NamespaceScheduledTaskSchedulesScheduleArray and NamespaceScheduledTaskSchedulesScheduleArrayOutput values.
// You can construct a concrete instance of `NamespaceScheduledTaskSchedulesScheduleArrayInput` via:
//
//	NamespaceScheduledTaskSchedulesScheduleArray{ NamespaceScheduledTaskSchedulesScheduleArgs{...} }
type NamespaceScheduledTaskSchedulesScheduleArrayInput interface {
	pulumi.Input

	ToNamespaceScheduledTaskSchedulesScheduleArrayOutput() NamespaceScheduledTaskSchedulesScheduleArrayOutput
	ToNamespaceScheduledTaskSchedulesScheduleArrayOutputWithContext(context.Context) NamespaceScheduledTaskSchedulesScheduleArrayOutput
}

type NamespaceScheduledTaskSchedulesScheduleArray []NamespaceScheduledTaskSchedulesScheduleInput

func (NamespaceScheduledTaskSchedulesScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NamespaceScheduledTaskSchedulesSchedule)(nil)).Elem()
}

func (i NamespaceScheduledTaskSchedulesScheduleArray) ToNamespaceScheduledTaskSchedulesScheduleArrayOutput() NamespaceScheduledTaskSchedulesScheduleArrayOutput {
	return i.ToNamespaceScheduledTaskSchedulesScheduleArrayOutputWithContext(context.Background())
}

func (i NamespaceScheduledTaskSchedulesScheduleArray) ToNamespaceScheduledTaskSchedulesScheduleArrayOutputWithContext(ctx context.Context) NamespaceScheduledTaskSchedulesScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceScheduledTaskSchedulesScheduleArrayOutput)
}

type NamespaceScheduledTaskSchedulesScheduleOutput struct{ *pulumi.OutputState }

func (NamespaceScheduledTaskSchedulesScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespaceScheduledTaskSchedulesSchedule)(nil)).Elem()
}

func (o NamespaceScheduledTaskSchedulesScheduleOutput) ToNamespaceScheduledTaskSchedulesScheduleOutput() NamespaceScheduledTaskSchedulesScheduleOutput {
	return o
}

func (o NamespaceScheduledTaskSchedulesScheduleOutput) ToNamespaceScheduledTaskSchedulesScheduleOutputWithContext(ctx context.Context) NamespaceScheduledTaskSchedulesScheduleOutput {
	return o
}

// (Updatable) Value in cron format.
func (o NamespaceScheduledTaskSchedulesScheduleOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamespaceScheduledTaskSchedulesSchedule) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// (Updatable) Schedule misfire retry policy.
func (o NamespaceScheduledTaskSchedulesScheduleOutput) MisfirePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamespaceScheduledTaskSchedulesSchedule) *string { return v.MisfirePolicy }).(pulumi.StringPtrOutput)
}

// (Updatable) Recurring interval in ISO 8601 extended format as described in https://en.wikipedia.org/wiki/ISO_8601#Durations. The largest supported unit is D, e.g. P14D (not P2W). The value must be at least 5 minutes (PT5M) and at most 3 weeks (P21D or PT30240M).
func (o NamespaceScheduledTaskSchedulesScheduleOutput) RecurringInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamespaceScheduledTaskSchedulesSchedule) *string { return v.RecurringInterval }).(pulumi.StringPtrOutput)
}

// (Updatable) Number of times (0-based) to execute until auto-stop. Default value -1 will execute indefinitely. Value 0 will execute once.
func (o NamespaceScheduledTaskSchedulesScheduleOutput) RepeatCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NamespaceScheduledTaskSchedulesSchedule) *int { return v.RepeatCount }).(pulumi.IntPtrOutput)
}

// (Updatable) Time zone, by default UTC.
func (o NamespaceScheduledTaskSchedulesScheduleOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamespaceScheduledTaskSchedulesSchedule) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

// (Updatable) Schedule type discriminator.
func (o NamespaceScheduledTaskSchedulesScheduleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NamespaceScheduledTaskSchedulesSchedule) string { return v.Type }).(pulumi.StringOutput)
}

type NamespaceScheduledTaskSchedulesScheduleArrayOutput struct{ *pulumi.OutputState }

func (NamespaceScheduledTaskSchedulesScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NamespaceScheduledTaskSchedulesSchedule)(nil)).Elem()
}

func (o NamespaceScheduledTaskSchedulesScheduleArrayOutput) ToNamespaceScheduledTaskSchedulesScheduleArrayOutput() NamespaceScheduledTaskSchedulesScheduleArrayOutput {
	return o
}

func (o NamespaceScheduledTaskSchedulesScheduleArrayOutput) ToNamespaceScheduledTaskSchedulesScheduleArrayOutputWithContext(ctx context.Context) NamespaceScheduledTaskSchedulesScheduleArrayOutput {
	return o
}

func (o NamespaceScheduledTaskSchedulesScheduleArrayOutput) Index(i pulumi.IntInput) NamespaceScheduledTaskSchedulesScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NamespaceScheduledTaskSchedulesSchedule {
		return vs[0].([]NamespaceScheduledTaskSchedulesSchedule)[vs[1].(int)]
	}).(NamespaceScheduledTaskSchedulesScheduleOutput)
}

type GetLogAnalyticsCategoriesListItem struct {
	// The category description.
	Description string `pulumi:"description"`
	// The category display name.
	DisplayName string `pulumi:"displayName"`
	// The system flag. A value of false denotes a user-created category. A value of true denotes an Oracle-defined category.
	IsSystem bool `pulumi:"isSystem"`
	// A filter to return only log analytics category whose name matches the entire name given. The match is case-insensitive.
	Name string `pulumi:"name"`
	// The category type. Values include "PRODUCT", "TIER", "VENDOR" and "GENERIC".
	Type string `pulumi:"type"`
}

// GetLogAnalyticsCategoriesListItemInput is an input type that accepts GetLogAnalyticsCategoriesListItemArgs and GetLogAnalyticsCategoriesListItemOutput values.
// You can construct a concrete instance of `GetLogAnalyticsCategoriesListItemInput` via:
//
//	GetLogAnalyticsCategoriesListItemArgs{...}
type GetLogAnalyticsCategoriesListItemInput interface {
	pulumi.Input

	ToGetLogAnalyticsCategoriesListItemOutput() GetLogAnalyticsCategoriesListItemOutput
	ToGetLogAnalyticsCategoriesListItemOutputWithContext(context.Context) GetLogAnalyticsCategoriesListItemOutput
}

type GetLogAnalyticsCategoriesListItemArgs struct {
	// The category description.
	Description pulumi.StringInput `pulumi:"description"`
	// The category display name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The system flag. A value of false denotes a user-created category. A value of true denotes an Oracle-defined category.
	IsSystem pulumi.BoolInput `pulumi:"isSystem"`
	// A filter to return only log analytics category whose name matches the entire name given. The match is case-insensitive.
	Name pulumi.StringInput `pulumi:"name"`
	// The category type. Values include "PRODUCT", "TIER", "VENDOR" and "GENERIC".
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetLogAnalyticsCategoriesListItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsCategoriesListItem)(nil)).Elem()
}

func (i GetLogAnalyticsCategoriesListItemArgs) ToGetLogAnalyticsCategoriesListItemOutput() GetLogAnalyticsCategoriesListItemOutput {
	return i.ToGetLogAnalyticsCategoriesListItemOutputWithContext(context.Background())
}

func (i GetLogAnalyticsCategoriesListItemArgs) ToGetLogAnalyticsCategoriesListItemOutputWithContext(ctx context.Context) GetLogAnalyticsCategoriesListItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsCategoriesListItemOutput)
}

// GetLogAnalyticsCategoriesListItemArrayInput is an input type that accepts GetLogAnalyticsCategoriesListItemArray and GetLogAnalyticsCategoriesListItemArrayOutput values.
// You can construct a concrete instance of `GetLogAnalyticsCategoriesListItemArrayInput` via:
//
//	GetLogAnalyticsCategoriesListItemArray{ GetLogAnalyticsCategoriesListItemArgs{...} }
type GetLogAnalyticsCategoriesListItemArrayInput interface {
	pulumi.Input

	ToGetLogAnalyticsCategoriesListItemArrayOutput() GetLogAnalyticsCategoriesListItemArrayOutput
	ToGetLogAnalyticsCategoriesListItemArrayOutputWithContext(context.Context) GetLogAnalyticsCategoriesListItemArrayOutput
}

type GetLogAnalyticsCategoriesListItemArray []GetLogAnalyticsCategoriesListItemInput

func (GetLogAnalyticsCategoriesListItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsCategoriesListItem)(nil)).Elem()
}

func (i GetLogAnalyticsCategoriesListItemArray) ToGetLogAnalyticsCategoriesListItemArrayOutput() GetLogAnalyticsCategoriesListItemArrayOutput {
	return i.ToGetLogAnalyticsCategoriesListItemArrayOutputWithContext(context.Background())
}

func (i GetLogAnalyticsCategoriesListItemArray) ToGetLogAnalyticsCategoriesListItemArrayOutputWithContext(ctx context.Context) GetLogAnalyticsCategoriesListItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsCategoriesListItemArrayOutput)
}

type GetLogAnalyticsCategoriesListItemOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsCategoriesListItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsCategoriesListItem)(nil)).Elem()
}

func (o GetLogAnalyticsCategoriesListItemOutput) ToGetLogAnalyticsCategoriesListItemOutput() GetLogAnalyticsCategoriesListItemOutput {
	return o
}

func (o GetLogAnalyticsCategoriesListItemOutput) ToGetLogAnalyticsCategoriesListItemOutputWithContext(ctx context.Context) GetLogAnalyticsCategoriesListItemOutput {
	return o
}

// The category description.
func (o GetLogAnalyticsCategoriesListItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsCategoriesListItem) string { return v.Description }).(pulumi.StringOutput)
}

// The category display name.
func (o GetLogAnalyticsCategoriesListItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsCategoriesListItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The system flag. A value of false denotes a user-created category. A value of true denotes an Oracle-defined category.
func (o GetLogAnalyticsCategoriesListItemOutput) IsSystem() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLogAnalyticsCategoriesListItem) bool { return v.IsSystem }).(pulumi.BoolOutput)
}

// A filter to return only log analytics category whose name matches the entire name given. The match is case-insensitive.
func (o GetLogAnalyticsCategoriesListItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsCategoriesListItem) string { return v.Name }).(pulumi.StringOutput)
}

// The category type. Values include "PRODUCT", "TIER", "VENDOR" and "GENERIC".
func (o GetLogAnalyticsCategoriesListItemOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsCategoriesListItem) string { return v.Type }).(pulumi.StringOutput)
}

type GetLogAnalyticsCategoriesListItemArrayOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsCategoriesListItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsCategoriesListItem)(nil)).Elem()
}

func (o GetLogAnalyticsCategoriesListItemArrayOutput) ToGetLogAnalyticsCategoriesListItemArrayOutput() GetLogAnalyticsCategoriesListItemArrayOutput {
	return o
}

func (o GetLogAnalyticsCategoriesListItemArrayOutput) ToGetLogAnalyticsCategoriesListItemArrayOutputWithContext(ctx context.Context) GetLogAnalyticsCategoriesListItemArrayOutput {
	return o
}

func (o GetLogAnalyticsCategoriesListItemArrayOutput) Index(i pulumi.IntInput) GetLogAnalyticsCategoriesListItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogAnalyticsCategoriesListItem {
		return vs[0].([]GetLogAnalyticsCategoriesListItem)[vs[1].(int)]
	}).(GetLogAnalyticsCategoriesListItemOutput)
}

type GetLogAnalyticsEntitiesFilter struct {
	// A filter to return only log analytics entities whose name matches the entire name given. The match is case-insensitive.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetLogAnalyticsEntitiesFilterInput is an input type that accepts GetLogAnalyticsEntitiesFilterArgs and GetLogAnalyticsEntitiesFilterOutput values.
// You can construct a concrete instance of `GetLogAnalyticsEntitiesFilterInput` via:
//
//	GetLogAnalyticsEntitiesFilterArgs{...}
type GetLogAnalyticsEntitiesFilterInput interface {
	pulumi.Input

	ToGetLogAnalyticsEntitiesFilterOutput() GetLogAnalyticsEntitiesFilterOutput
	ToGetLogAnalyticsEntitiesFilterOutputWithContext(context.Context) GetLogAnalyticsEntitiesFilterOutput
}

type GetLogAnalyticsEntitiesFilterArgs struct {
	// A filter to return only log analytics entities whose name matches the entire name given. The match is case-insensitive.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetLogAnalyticsEntitiesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsEntitiesFilter)(nil)).Elem()
}

func (i GetLogAnalyticsEntitiesFilterArgs) ToGetLogAnalyticsEntitiesFilterOutput() GetLogAnalyticsEntitiesFilterOutput {
	return i.ToGetLogAnalyticsEntitiesFilterOutputWithContext(context.Background())
}

func (i GetLogAnalyticsEntitiesFilterArgs) ToGetLogAnalyticsEntitiesFilterOutputWithContext(ctx context.Context) GetLogAnalyticsEntitiesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsEntitiesFilterOutput)
}

// GetLogAnalyticsEntitiesFilterArrayInput is an input type that accepts GetLogAnalyticsEntitiesFilterArray and GetLogAnalyticsEntitiesFilterArrayOutput values.
// You can construct a concrete instance of `GetLogAnalyticsEntitiesFilterArrayInput` via:
//
//	GetLogAnalyticsEntitiesFilterArray{ GetLogAnalyticsEntitiesFilterArgs{...} }
type GetLogAnalyticsEntitiesFilterArrayInput interface {
	pulumi.Input

	ToGetLogAnalyticsEntitiesFilterArrayOutput() GetLogAnalyticsEntitiesFilterArrayOutput
	ToGetLogAnalyticsEntitiesFilterArrayOutputWithContext(context.Context) GetLogAnalyticsEntitiesFilterArrayOutput
}

type GetLogAnalyticsEntitiesFilterArray []GetLogAnalyticsEntitiesFilterInput

func (GetLogAnalyticsEntitiesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsEntitiesFilter)(nil)).Elem()
}

func (i GetLogAnalyticsEntitiesFilterArray) ToGetLogAnalyticsEntitiesFilterArrayOutput() GetLogAnalyticsEntitiesFilterArrayOutput {
	return i.ToGetLogAnalyticsEntitiesFilterArrayOutputWithContext(context.Background())
}

func (i GetLogAnalyticsEntitiesFilterArray) ToGetLogAnalyticsEntitiesFilterArrayOutputWithContext(ctx context.Context) GetLogAnalyticsEntitiesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsEntitiesFilterArrayOutput)
}

type GetLogAnalyticsEntitiesFilterOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsEntitiesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsEntitiesFilter)(nil)).Elem()
}

func (o GetLogAnalyticsEntitiesFilterOutput) ToGetLogAnalyticsEntitiesFilterOutput() GetLogAnalyticsEntitiesFilterOutput {
	return o
}

func (o GetLogAnalyticsEntitiesFilterOutput) ToGetLogAnalyticsEntitiesFilterOutputWithContext(ctx context.Context) GetLogAnalyticsEntitiesFilterOutput {
	return o
}

// A filter to return only log analytics entities whose name matches the entire name given. The match is case-insensitive.
func (o GetLogAnalyticsEntitiesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetLogAnalyticsEntitiesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetLogAnalyticsEntitiesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetLogAnalyticsEntitiesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsEntitiesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsEntitiesFilter)(nil)).Elem()
}

func (o GetLogAnalyticsEntitiesFilterArrayOutput) ToGetLogAnalyticsEntitiesFilterArrayOutput() GetLogAnalyticsEntitiesFilterArrayOutput {
	return o
}

func (o GetLogAnalyticsEntitiesFilterArrayOutput) ToGetLogAnalyticsEntitiesFilterArrayOutputWithContext(ctx context.Context) GetLogAnalyticsEntitiesFilterArrayOutput {
	return o
}

func (o GetLogAnalyticsEntitiesFilterArrayOutput) Index(i pulumi.IntInput) GetLogAnalyticsEntitiesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogAnalyticsEntitiesFilter {
		return vs[0].([]GetLogAnalyticsEntitiesFilter)[vs[1].(int)]
	}).(GetLogAnalyticsEntitiesFilterOutput)
}

type GetLogAnalyticsEntitiesLogAnalyticsEntityCollection struct {
	Items []GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItem `pulumi:"items"`
}

// GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionInput is an input type that accepts GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArgs and GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionOutput values.
// You can construct a concrete instance of `GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionInput` via:
//
//	GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArgs{...}
type GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionInput interface {
	pulumi.Input

	ToGetLogAnalyticsEntitiesLogAnalyticsEntityCollectionOutput() GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionOutput
	ToGetLogAnalyticsEntitiesLogAnalyticsEntityCollectionOutputWithContext(context.Context) GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionOutput
}

type GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArgs struct {
	Items GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArrayInput `pulumi:"items"`
}

func (GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsEntitiesLogAnalyticsEntityCollection)(nil)).Elem()
}

func (i GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArgs) ToGetLogAnalyticsEntitiesLogAnalyticsEntityCollectionOutput() GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionOutput {
	return i.ToGetLogAnalyticsEntitiesLogAnalyticsEntityCollectionOutputWithContext(context.Background())
}

func (i GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArgs) ToGetLogAnalyticsEntitiesLogAnalyticsEntityCollectionOutputWithContext(ctx context.Context) GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionOutput)
}

// GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArrayInput is an input type that accepts GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArray and GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArrayOutput values.
// You can construct a concrete instance of `GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArrayInput` via:
//
//	GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArray{ GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArgs{...} }
type GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArrayInput interface {
	pulumi.Input

	ToGetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArrayOutput() GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArrayOutput
	ToGetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArrayOutputWithContext(context.Context) GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArrayOutput
}

type GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArray []GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionInput

func (GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsEntitiesLogAnalyticsEntityCollection)(nil)).Elem()
}

func (i GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArray) ToGetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArrayOutput() GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArrayOutput {
	return i.ToGetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArrayOutputWithContext(context.Background())
}

func (i GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArray) ToGetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArrayOutputWithContext(ctx context.Context) GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArrayOutput)
}

type GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsEntitiesLogAnalyticsEntityCollection)(nil)).Elem()
}

func (o GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionOutput) ToGetLogAnalyticsEntitiesLogAnalyticsEntityCollectionOutput() GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionOutput {
	return o
}

func (o GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionOutput) ToGetLogAnalyticsEntitiesLogAnalyticsEntityCollectionOutputWithContext(ctx context.Context) GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionOutput {
	return o
}

func (o GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionOutput) Items() GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArrayOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesLogAnalyticsEntityCollection) []GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItem {
		return v.Items
	}).(GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArrayOutput)
}

type GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsEntitiesLogAnalyticsEntityCollection)(nil)).Elem()
}

func (o GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArrayOutput) ToGetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArrayOutput() GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArrayOutput {
	return o
}

func (o GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArrayOutput) ToGetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArrayOutputWithContext(ctx context.Context) GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArrayOutput {
	return o
}

func (o GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArrayOutput) Index(i pulumi.IntInput) GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogAnalyticsEntitiesLogAnalyticsEntityCollection {
		return vs[0].([]GetLogAnalyticsEntitiesLogAnalyticsEntityCollection)[vs[1].(int)]
	}).(GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionOutput)
}

type GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItem struct {
	// The Boolean flag to indicate if logs are collected for an entity for log analytics usage.
	AreLogsCollected bool `pulumi:"areLogsCollected"`
	// A filter to return only log analytics entities whose cloudResourceId matches the cloudResourceId given.
	CloudResourceId string `pulumi:"cloudResourceId"`
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Internal name for the log analytics entity type.
	EntityTypeInternalName string `pulumi:"entityTypeInternalName"`
	// A filter to return only log analytics entities whose entityTypeName matches the entire log analytics entity type name of one of the entityTypeNames given in the list. The match is case-insensitive.
	EntityTypeName string `pulumi:"entityTypeName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A filter to return only log analytics entities whose hostname matches the entire hostname given.
	Hostname string `pulumi:"hostname"`
	// The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
	Id string `pulumi:"id"`
	// lifecycleDetails has additional information regarding substeps such as management agent plugin deployment.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Management agent (management-agents resource kind) compartment OCID
	ManagementAgentCompartmentId string `pulumi:"managementAgentCompartmentId"`
	// Management agent (management-agents resource kind) display name
	ManagementAgentDisplayName string `pulumi:"managementAgentDisplayName"`
	// The OCID of the Management Agent.
	ManagementAgentId string `pulumi:"managementAgentId"`
	// A filter to return only log analytics entities whose name matches the entire name given. The match is case-insensitive.
	Name string `pulumi:"name"`
	// The Logging Analytics namespace used for the request.
	Namespace string `pulumi:"namespace"`
	// The name/value pairs for parameter values to be used in file patterns specified in log sources.
	Properties map[string]interface{} `pulumi:"properties"`
	// A filter to return only log analytics entities whose sourceId matches the sourceId given.
	SourceId string `pulumi:"sourceId"`
	// A filter to return only those log analytics entities with the specified lifecycle state. The state value is case-insensitive.
	State string `pulumi:"state"`
	// The date and time the resource was created, in the format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the resource was last updated, in the format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
	// The timezone region of the log analytics entity.
	TimezoneRegion string `pulumi:"timezoneRegion"`
}

// GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemInput is an input type that accepts GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArgs and GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput values.
// You can construct a concrete instance of `GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemInput` via:
//
//	GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArgs{...}
type GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemInput interface {
	pulumi.Input

	ToGetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput() GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput
	ToGetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutputWithContext(context.Context) GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput
}

type GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArgs struct {
	// The Boolean flag to indicate if logs are collected for an entity for log analytics usage.
	AreLogsCollected pulumi.BoolInput `pulumi:"areLogsCollected"`
	// A filter to return only log analytics entities whose cloudResourceId matches the cloudResourceId given.
	CloudResourceId pulumi.StringInput `pulumi:"cloudResourceId"`
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// Internal name for the log analytics entity type.
	EntityTypeInternalName pulumi.StringInput `pulumi:"entityTypeInternalName"`
	// A filter to return only log analytics entities whose entityTypeName matches the entire log analytics entity type name of one of the entityTypeNames given in the list. The match is case-insensitive.
	EntityTypeName pulumi.StringInput `pulumi:"entityTypeName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// A filter to return only log analytics entities whose hostname matches the entire hostname given.
	Hostname pulumi.StringInput `pulumi:"hostname"`
	// The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
	Id pulumi.StringInput `pulumi:"id"`
	// lifecycleDetails has additional information regarding substeps such as management agent plugin deployment.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// Management agent (management-agents resource kind) compartment OCID
	ManagementAgentCompartmentId pulumi.StringInput `pulumi:"managementAgentCompartmentId"`
	// Management agent (management-agents resource kind) display name
	ManagementAgentDisplayName pulumi.StringInput `pulumi:"managementAgentDisplayName"`
	// The OCID of the Management Agent.
	ManagementAgentId pulumi.StringInput `pulumi:"managementAgentId"`
	// A filter to return only log analytics entities whose name matches the entire name given. The match is case-insensitive.
	Name pulumi.StringInput `pulumi:"name"`
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The name/value pairs for parameter values to be used in file patterns specified in log sources.
	Properties pulumi.MapInput `pulumi:"properties"`
	// A filter to return only log analytics entities whose sourceId matches the sourceId given.
	SourceId pulumi.StringInput `pulumi:"sourceId"`
	// A filter to return only those log analytics entities with the specified lifecycle state. The state value is case-insensitive.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the resource was created, in the format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the resource was last updated, in the format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// The timezone region of the log analytics entity.
	TimezoneRegion pulumi.StringInput `pulumi:"timezoneRegion"`
}

func (GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItem)(nil)).Elem()
}

func (i GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArgs) ToGetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput() GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput {
	return i.ToGetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutputWithContext(context.Background())
}

func (i GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArgs) ToGetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutputWithContext(ctx context.Context) GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput)
}

// GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArrayInput is an input type that accepts GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArray and GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArrayInput` via:
//
//	GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArray{ GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArgs{...} }
type GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArrayInput interface {
	pulumi.Input

	ToGetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArrayOutput() GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArrayOutput
	ToGetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArrayOutputWithContext(context.Context) GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArrayOutput
}

type GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArray []GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemInput

func (GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItem)(nil)).Elem()
}

func (i GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArray) ToGetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArrayOutput() GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArrayOutput {
	return i.ToGetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArray) ToGetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArrayOutputWithContext(ctx context.Context) GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArrayOutput)
}

type GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItem)(nil)).Elem()
}

func (o GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput) ToGetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput() GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput {
	return o
}

func (o GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput) ToGetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutputWithContext(ctx context.Context) GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput {
	return o
}

// The Boolean flag to indicate if logs are collected for an entity for log analytics usage.
func (o GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput) AreLogsCollected() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItem) bool { return v.AreLogsCollected }).(pulumi.BoolOutput)
}

// A filter to return only log analytics entities whose cloudResourceId matches the cloudResourceId given.
func (o GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput) CloudResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItem) string { return v.CloudResourceId }).(pulumi.StringOutput)
}

// The ID of the compartment in which to list resources.
func (o GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItem) map[string]interface{} {
		return v.DefinedTags
	}).(pulumi.MapOutput)
}

// Internal name for the log analytics entity type.
func (o GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput) EntityTypeInternalName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItem) string {
		return v.EntityTypeInternalName
	}).(pulumi.StringOutput)
}

// A filter to return only log analytics entities whose entityTypeName matches the entire log analytics entity type name of one of the entityTypeNames given in the list. The match is case-insensitive.
func (o GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput) EntityTypeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItem) string { return v.EntityTypeName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItem) map[string]interface{} {
		return v.FreeformTags
	}).(pulumi.MapOutput)
}

// A filter to return only log analytics entities whose hostname matches the entire hostname given.
func (o GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItem) string { return v.Hostname }).(pulumi.StringOutput)
}

// The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
func (o GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// lifecycleDetails has additional information regarding substeps such as management agent plugin deployment.
func (o GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItem) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Management agent (management-agents resource kind) compartment OCID
func (o GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput) ManagementAgentCompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItem) string {
		return v.ManagementAgentCompartmentId
	}).(pulumi.StringOutput)
}

// Management agent (management-agents resource kind) display name
func (o GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput) ManagementAgentDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItem) string {
		return v.ManagementAgentDisplayName
	}).(pulumi.StringOutput)
}

// The OCID of the Management Agent.
func (o GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput) ManagementAgentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItem) string { return v.ManagementAgentId }).(pulumi.StringOutput)
}

// A filter to return only log analytics entities whose name matches the entire name given. The match is case-insensitive.
func (o GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItem) string { return v.Name }).(pulumi.StringOutput)
}

// The Logging Analytics namespace used for the request.
func (o GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItem) string { return v.Namespace }).(pulumi.StringOutput)
}

// The name/value pairs for parameter values to be used in file patterns specified in log sources.
func (o GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput) Properties() pulumi.MapOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItem) map[string]interface{} {
		return v.Properties
	}).(pulumi.MapOutput)
}

// A filter to return only log analytics entities whose sourceId matches the sourceId given.
func (o GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItem) string { return v.SourceId }).(pulumi.StringOutput)
}

// A filter to return only those log analytics entities with the specified lifecycle state. The state value is case-insensitive.
func (o GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the resource was created, in the format defined by RFC3339.
func (o GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the resource was last updated, in the format defined by RFC3339.
func (o GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The timezone region of the log analytics entity.
func (o GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput) TimezoneRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItem) string { return v.TimezoneRegion }).(pulumi.StringOutput)
}

type GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItem)(nil)).Elem()
}

func (o GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArrayOutput) ToGetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArrayOutput() GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArrayOutput {
	return o
}

func (o GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArrayOutput) ToGetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArrayOutputWithContext(ctx context.Context) GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArrayOutput {
	return o
}

func (o GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArrayOutput) Index(i pulumi.IntInput) GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItem {
		return vs[0].([]GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItem)[vs[1].(int)]
	}).(GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput)
}

type GetLogAnalyticsEntityTopologyItem struct {
	// Collection of log analytics entity relationship links.
	Links []GetLogAnalyticsEntityTopologyItemLink `pulumi:"links"`
	// Collection of log analytics entities.
	Nodes []GetLogAnalyticsEntityTopologyItemNode `pulumi:"nodes"`
}

// GetLogAnalyticsEntityTopologyItemInput is an input type that accepts GetLogAnalyticsEntityTopologyItemArgs and GetLogAnalyticsEntityTopologyItemOutput values.
// You can construct a concrete instance of `GetLogAnalyticsEntityTopologyItemInput` via:
//
//	GetLogAnalyticsEntityTopologyItemArgs{...}
type GetLogAnalyticsEntityTopologyItemInput interface {
	pulumi.Input

	ToGetLogAnalyticsEntityTopologyItemOutput() GetLogAnalyticsEntityTopologyItemOutput
	ToGetLogAnalyticsEntityTopologyItemOutputWithContext(context.Context) GetLogAnalyticsEntityTopologyItemOutput
}

type GetLogAnalyticsEntityTopologyItemArgs struct {
	// Collection of log analytics entity relationship links.
	Links GetLogAnalyticsEntityTopologyItemLinkArrayInput `pulumi:"links"`
	// Collection of log analytics entities.
	Nodes GetLogAnalyticsEntityTopologyItemNodeArrayInput `pulumi:"nodes"`
}

func (GetLogAnalyticsEntityTopologyItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsEntityTopologyItem)(nil)).Elem()
}

func (i GetLogAnalyticsEntityTopologyItemArgs) ToGetLogAnalyticsEntityTopologyItemOutput() GetLogAnalyticsEntityTopologyItemOutput {
	return i.ToGetLogAnalyticsEntityTopologyItemOutputWithContext(context.Background())
}

func (i GetLogAnalyticsEntityTopologyItemArgs) ToGetLogAnalyticsEntityTopologyItemOutputWithContext(ctx context.Context) GetLogAnalyticsEntityTopologyItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsEntityTopologyItemOutput)
}

// GetLogAnalyticsEntityTopologyItemArrayInput is an input type that accepts GetLogAnalyticsEntityTopologyItemArray and GetLogAnalyticsEntityTopologyItemArrayOutput values.
// You can construct a concrete instance of `GetLogAnalyticsEntityTopologyItemArrayInput` via:
//
//	GetLogAnalyticsEntityTopologyItemArray{ GetLogAnalyticsEntityTopologyItemArgs{...} }
type GetLogAnalyticsEntityTopologyItemArrayInput interface {
	pulumi.Input

	ToGetLogAnalyticsEntityTopologyItemArrayOutput() GetLogAnalyticsEntityTopologyItemArrayOutput
	ToGetLogAnalyticsEntityTopologyItemArrayOutputWithContext(context.Context) GetLogAnalyticsEntityTopologyItemArrayOutput
}

type GetLogAnalyticsEntityTopologyItemArray []GetLogAnalyticsEntityTopologyItemInput

func (GetLogAnalyticsEntityTopologyItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsEntityTopologyItem)(nil)).Elem()
}

func (i GetLogAnalyticsEntityTopologyItemArray) ToGetLogAnalyticsEntityTopologyItemArrayOutput() GetLogAnalyticsEntityTopologyItemArrayOutput {
	return i.ToGetLogAnalyticsEntityTopologyItemArrayOutputWithContext(context.Background())
}

func (i GetLogAnalyticsEntityTopologyItemArray) ToGetLogAnalyticsEntityTopologyItemArrayOutputWithContext(ctx context.Context) GetLogAnalyticsEntityTopologyItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsEntityTopologyItemArrayOutput)
}

type GetLogAnalyticsEntityTopologyItemOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsEntityTopologyItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsEntityTopologyItem)(nil)).Elem()
}

func (o GetLogAnalyticsEntityTopologyItemOutput) ToGetLogAnalyticsEntityTopologyItemOutput() GetLogAnalyticsEntityTopologyItemOutput {
	return o
}

func (o GetLogAnalyticsEntityTopologyItemOutput) ToGetLogAnalyticsEntityTopologyItemOutputWithContext(ctx context.Context) GetLogAnalyticsEntityTopologyItemOutput {
	return o
}

// Collection of log analytics entity relationship links.
func (o GetLogAnalyticsEntityTopologyItemOutput) Links() GetLogAnalyticsEntityTopologyItemLinkArrayOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntityTopologyItem) []GetLogAnalyticsEntityTopologyItemLink { return v.Links }).(GetLogAnalyticsEntityTopologyItemLinkArrayOutput)
}

// Collection of log analytics entities.
func (o GetLogAnalyticsEntityTopologyItemOutput) Nodes() GetLogAnalyticsEntityTopologyItemNodeArrayOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntityTopologyItem) []GetLogAnalyticsEntityTopologyItemNode { return v.Nodes }).(GetLogAnalyticsEntityTopologyItemNodeArrayOutput)
}

type GetLogAnalyticsEntityTopologyItemArrayOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsEntityTopologyItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsEntityTopologyItem)(nil)).Elem()
}

func (o GetLogAnalyticsEntityTopologyItemArrayOutput) ToGetLogAnalyticsEntityTopologyItemArrayOutput() GetLogAnalyticsEntityTopologyItemArrayOutput {
	return o
}

func (o GetLogAnalyticsEntityTopologyItemArrayOutput) ToGetLogAnalyticsEntityTopologyItemArrayOutputWithContext(ctx context.Context) GetLogAnalyticsEntityTopologyItemArrayOutput {
	return o
}

func (o GetLogAnalyticsEntityTopologyItemArrayOutput) Index(i pulumi.IntInput) GetLogAnalyticsEntityTopologyItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogAnalyticsEntityTopologyItem {
		return vs[0].([]GetLogAnalyticsEntityTopologyItem)[vs[1].(int)]
	}).(GetLogAnalyticsEntityTopologyItemOutput)
}

type GetLogAnalyticsEntityTopologyItemLink struct {
	// Array of log analytics entity summary.
	Items []GetLogAnalyticsEntityTopologyItemLinkItem `pulumi:"items"`
}

// GetLogAnalyticsEntityTopologyItemLinkInput is an input type that accepts GetLogAnalyticsEntityTopologyItemLinkArgs and GetLogAnalyticsEntityTopologyItemLinkOutput values.
// You can construct a concrete instance of `GetLogAnalyticsEntityTopologyItemLinkInput` via:
//
//	GetLogAnalyticsEntityTopologyItemLinkArgs{...}
type GetLogAnalyticsEntityTopologyItemLinkInput interface {
	pulumi.Input

	ToGetLogAnalyticsEntityTopologyItemLinkOutput() GetLogAnalyticsEntityTopologyItemLinkOutput
	ToGetLogAnalyticsEntityTopologyItemLinkOutputWithContext(context.Context) GetLogAnalyticsEntityTopologyItemLinkOutput
}

type GetLogAnalyticsEntityTopologyItemLinkArgs struct {
	// Array of log analytics entity summary.
	Items GetLogAnalyticsEntityTopologyItemLinkItemArrayInput `pulumi:"items"`
}

func (GetLogAnalyticsEntityTopologyItemLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsEntityTopologyItemLink)(nil)).Elem()
}

func (i GetLogAnalyticsEntityTopologyItemLinkArgs) ToGetLogAnalyticsEntityTopologyItemLinkOutput() GetLogAnalyticsEntityTopologyItemLinkOutput {
	return i.ToGetLogAnalyticsEntityTopologyItemLinkOutputWithContext(context.Background())
}

func (i GetLogAnalyticsEntityTopologyItemLinkArgs) ToGetLogAnalyticsEntityTopologyItemLinkOutputWithContext(ctx context.Context) GetLogAnalyticsEntityTopologyItemLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsEntityTopologyItemLinkOutput)
}

// GetLogAnalyticsEntityTopologyItemLinkArrayInput is an input type that accepts GetLogAnalyticsEntityTopologyItemLinkArray and GetLogAnalyticsEntityTopologyItemLinkArrayOutput values.
// You can construct a concrete instance of `GetLogAnalyticsEntityTopologyItemLinkArrayInput` via:
//
//	GetLogAnalyticsEntityTopologyItemLinkArray{ GetLogAnalyticsEntityTopologyItemLinkArgs{...} }
type GetLogAnalyticsEntityTopologyItemLinkArrayInput interface {
	pulumi.Input

	ToGetLogAnalyticsEntityTopologyItemLinkArrayOutput() GetLogAnalyticsEntityTopologyItemLinkArrayOutput
	ToGetLogAnalyticsEntityTopologyItemLinkArrayOutputWithContext(context.Context) GetLogAnalyticsEntityTopologyItemLinkArrayOutput
}

type GetLogAnalyticsEntityTopologyItemLinkArray []GetLogAnalyticsEntityTopologyItemLinkInput

func (GetLogAnalyticsEntityTopologyItemLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsEntityTopologyItemLink)(nil)).Elem()
}

func (i GetLogAnalyticsEntityTopologyItemLinkArray) ToGetLogAnalyticsEntityTopologyItemLinkArrayOutput() GetLogAnalyticsEntityTopologyItemLinkArrayOutput {
	return i.ToGetLogAnalyticsEntityTopologyItemLinkArrayOutputWithContext(context.Background())
}

func (i GetLogAnalyticsEntityTopologyItemLinkArray) ToGetLogAnalyticsEntityTopologyItemLinkArrayOutputWithContext(ctx context.Context) GetLogAnalyticsEntityTopologyItemLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsEntityTopologyItemLinkArrayOutput)
}

type GetLogAnalyticsEntityTopologyItemLinkOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsEntityTopologyItemLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsEntityTopologyItemLink)(nil)).Elem()
}

func (o GetLogAnalyticsEntityTopologyItemLinkOutput) ToGetLogAnalyticsEntityTopologyItemLinkOutput() GetLogAnalyticsEntityTopologyItemLinkOutput {
	return o
}

func (o GetLogAnalyticsEntityTopologyItemLinkOutput) ToGetLogAnalyticsEntityTopologyItemLinkOutputWithContext(ctx context.Context) GetLogAnalyticsEntityTopologyItemLinkOutput {
	return o
}

// Array of log analytics entity summary.
func (o GetLogAnalyticsEntityTopologyItemLinkOutput) Items() GetLogAnalyticsEntityTopologyItemLinkItemArrayOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntityTopologyItemLink) []GetLogAnalyticsEntityTopologyItemLinkItem {
		return v.Items
	}).(GetLogAnalyticsEntityTopologyItemLinkItemArrayOutput)
}

type GetLogAnalyticsEntityTopologyItemLinkArrayOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsEntityTopologyItemLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsEntityTopologyItemLink)(nil)).Elem()
}

func (o GetLogAnalyticsEntityTopologyItemLinkArrayOutput) ToGetLogAnalyticsEntityTopologyItemLinkArrayOutput() GetLogAnalyticsEntityTopologyItemLinkArrayOutput {
	return o
}

func (o GetLogAnalyticsEntityTopologyItemLinkArrayOutput) ToGetLogAnalyticsEntityTopologyItemLinkArrayOutputWithContext(ctx context.Context) GetLogAnalyticsEntityTopologyItemLinkArrayOutput {
	return o
}

func (o GetLogAnalyticsEntityTopologyItemLinkArrayOutput) Index(i pulumi.IntInput) GetLogAnalyticsEntityTopologyItemLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogAnalyticsEntityTopologyItemLink {
		return vs[0].([]GetLogAnalyticsEntityTopologyItemLink)[vs[1].(int)]
	}).(GetLogAnalyticsEntityTopologyItemLinkOutput)
}

type GetLogAnalyticsEntityTopologyItemLinkItem struct {
	// The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
	DestinationEntityId string `pulumi:"destinationEntityId"`
	// The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
	SourceEntityId string `pulumi:"sourceEntityId"`
}

// GetLogAnalyticsEntityTopologyItemLinkItemInput is an input type that accepts GetLogAnalyticsEntityTopologyItemLinkItemArgs and GetLogAnalyticsEntityTopologyItemLinkItemOutput values.
// You can construct a concrete instance of `GetLogAnalyticsEntityTopologyItemLinkItemInput` via:
//
//	GetLogAnalyticsEntityTopologyItemLinkItemArgs{...}
type GetLogAnalyticsEntityTopologyItemLinkItemInput interface {
	pulumi.Input

	ToGetLogAnalyticsEntityTopologyItemLinkItemOutput() GetLogAnalyticsEntityTopologyItemLinkItemOutput
	ToGetLogAnalyticsEntityTopologyItemLinkItemOutputWithContext(context.Context) GetLogAnalyticsEntityTopologyItemLinkItemOutput
}

type GetLogAnalyticsEntityTopologyItemLinkItemArgs struct {
	// The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
	DestinationEntityId pulumi.StringInput `pulumi:"destinationEntityId"`
	// The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
	SourceEntityId pulumi.StringInput `pulumi:"sourceEntityId"`
}

func (GetLogAnalyticsEntityTopologyItemLinkItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsEntityTopologyItemLinkItem)(nil)).Elem()
}

func (i GetLogAnalyticsEntityTopologyItemLinkItemArgs) ToGetLogAnalyticsEntityTopologyItemLinkItemOutput() GetLogAnalyticsEntityTopologyItemLinkItemOutput {
	return i.ToGetLogAnalyticsEntityTopologyItemLinkItemOutputWithContext(context.Background())
}

func (i GetLogAnalyticsEntityTopologyItemLinkItemArgs) ToGetLogAnalyticsEntityTopologyItemLinkItemOutputWithContext(ctx context.Context) GetLogAnalyticsEntityTopologyItemLinkItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsEntityTopologyItemLinkItemOutput)
}

// GetLogAnalyticsEntityTopologyItemLinkItemArrayInput is an input type that accepts GetLogAnalyticsEntityTopologyItemLinkItemArray and GetLogAnalyticsEntityTopologyItemLinkItemArrayOutput values.
// You can construct a concrete instance of `GetLogAnalyticsEntityTopologyItemLinkItemArrayInput` via:
//
//	GetLogAnalyticsEntityTopologyItemLinkItemArray{ GetLogAnalyticsEntityTopologyItemLinkItemArgs{...} }
type GetLogAnalyticsEntityTopologyItemLinkItemArrayInput interface {
	pulumi.Input

	ToGetLogAnalyticsEntityTopologyItemLinkItemArrayOutput() GetLogAnalyticsEntityTopologyItemLinkItemArrayOutput
	ToGetLogAnalyticsEntityTopologyItemLinkItemArrayOutputWithContext(context.Context) GetLogAnalyticsEntityTopologyItemLinkItemArrayOutput
}

type GetLogAnalyticsEntityTopologyItemLinkItemArray []GetLogAnalyticsEntityTopologyItemLinkItemInput

func (GetLogAnalyticsEntityTopologyItemLinkItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsEntityTopologyItemLinkItem)(nil)).Elem()
}

func (i GetLogAnalyticsEntityTopologyItemLinkItemArray) ToGetLogAnalyticsEntityTopologyItemLinkItemArrayOutput() GetLogAnalyticsEntityTopologyItemLinkItemArrayOutput {
	return i.ToGetLogAnalyticsEntityTopologyItemLinkItemArrayOutputWithContext(context.Background())
}

func (i GetLogAnalyticsEntityTopologyItemLinkItemArray) ToGetLogAnalyticsEntityTopologyItemLinkItemArrayOutputWithContext(ctx context.Context) GetLogAnalyticsEntityTopologyItemLinkItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsEntityTopologyItemLinkItemArrayOutput)
}

type GetLogAnalyticsEntityTopologyItemLinkItemOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsEntityTopologyItemLinkItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsEntityTopologyItemLinkItem)(nil)).Elem()
}

func (o GetLogAnalyticsEntityTopologyItemLinkItemOutput) ToGetLogAnalyticsEntityTopologyItemLinkItemOutput() GetLogAnalyticsEntityTopologyItemLinkItemOutput {
	return o
}

func (o GetLogAnalyticsEntityTopologyItemLinkItemOutput) ToGetLogAnalyticsEntityTopologyItemLinkItemOutputWithContext(ctx context.Context) GetLogAnalyticsEntityTopologyItemLinkItemOutput {
	return o
}

// The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
func (o GetLogAnalyticsEntityTopologyItemLinkItemOutput) DestinationEntityId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntityTopologyItemLinkItem) string { return v.DestinationEntityId }).(pulumi.StringOutput)
}

// The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
func (o GetLogAnalyticsEntityTopologyItemLinkItemOutput) SourceEntityId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntityTopologyItemLinkItem) string { return v.SourceEntityId }).(pulumi.StringOutput)
}

type GetLogAnalyticsEntityTopologyItemLinkItemArrayOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsEntityTopologyItemLinkItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsEntityTopologyItemLinkItem)(nil)).Elem()
}

func (o GetLogAnalyticsEntityTopologyItemLinkItemArrayOutput) ToGetLogAnalyticsEntityTopologyItemLinkItemArrayOutput() GetLogAnalyticsEntityTopologyItemLinkItemArrayOutput {
	return o
}

func (o GetLogAnalyticsEntityTopologyItemLinkItemArrayOutput) ToGetLogAnalyticsEntityTopologyItemLinkItemArrayOutputWithContext(ctx context.Context) GetLogAnalyticsEntityTopologyItemLinkItemArrayOutput {
	return o
}

func (o GetLogAnalyticsEntityTopologyItemLinkItemArrayOutput) Index(i pulumi.IntInput) GetLogAnalyticsEntityTopologyItemLinkItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogAnalyticsEntityTopologyItemLinkItem {
		return vs[0].([]GetLogAnalyticsEntityTopologyItemLinkItem)[vs[1].(int)]
	}).(GetLogAnalyticsEntityTopologyItemLinkItemOutput)
}

type GetLogAnalyticsEntityTopologyItemNode struct {
	// Array of log analytics entity summary.
	Items []GetLogAnalyticsEntityTopologyItemNodeItem `pulumi:"items"`
}

// GetLogAnalyticsEntityTopologyItemNodeInput is an input type that accepts GetLogAnalyticsEntityTopologyItemNodeArgs and GetLogAnalyticsEntityTopologyItemNodeOutput values.
// You can construct a concrete instance of `GetLogAnalyticsEntityTopologyItemNodeInput` via:
//
//	GetLogAnalyticsEntityTopologyItemNodeArgs{...}
type GetLogAnalyticsEntityTopologyItemNodeInput interface {
	pulumi.Input

	ToGetLogAnalyticsEntityTopologyItemNodeOutput() GetLogAnalyticsEntityTopologyItemNodeOutput
	ToGetLogAnalyticsEntityTopologyItemNodeOutputWithContext(context.Context) GetLogAnalyticsEntityTopologyItemNodeOutput
}

type GetLogAnalyticsEntityTopologyItemNodeArgs struct {
	// Array of log analytics entity summary.
	Items GetLogAnalyticsEntityTopologyItemNodeItemArrayInput `pulumi:"items"`
}

func (GetLogAnalyticsEntityTopologyItemNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsEntityTopologyItemNode)(nil)).Elem()
}

func (i GetLogAnalyticsEntityTopologyItemNodeArgs) ToGetLogAnalyticsEntityTopologyItemNodeOutput() GetLogAnalyticsEntityTopologyItemNodeOutput {
	return i.ToGetLogAnalyticsEntityTopologyItemNodeOutputWithContext(context.Background())
}

func (i GetLogAnalyticsEntityTopologyItemNodeArgs) ToGetLogAnalyticsEntityTopologyItemNodeOutputWithContext(ctx context.Context) GetLogAnalyticsEntityTopologyItemNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsEntityTopologyItemNodeOutput)
}

// GetLogAnalyticsEntityTopologyItemNodeArrayInput is an input type that accepts GetLogAnalyticsEntityTopologyItemNodeArray and GetLogAnalyticsEntityTopologyItemNodeArrayOutput values.
// You can construct a concrete instance of `GetLogAnalyticsEntityTopologyItemNodeArrayInput` via:
//
//	GetLogAnalyticsEntityTopologyItemNodeArray{ GetLogAnalyticsEntityTopologyItemNodeArgs{...} }
type GetLogAnalyticsEntityTopologyItemNodeArrayInput interface {
	pulumi.Input

	ToGetLogAnalyticsEntityTopologyItemNodeArrayOutput() GetLogAnalyticsEntityTopologyItemNodeArrayOutput
	ToGetLogAnalyticsEntityTopologyItemNodeArrayOutputWithContext(context.Context) GetLogAnalyticsEntityTopologyItemNodeArrayOutput
}

type GetLogAnalyticsEntityTopologyItemNodeArray []GetLogAnalyticsEntityTopologyItemNodeInput

func (GetLogAnalyticsEntityTopologyItemNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsEntityTopologyItemNode)(nil)).Elem()
}

func (i GetLogAnalyticsEntityTopologyItemNodeArray) ToGetLogAnalyticsEntityTopologyItemNodeArrayOutput() GetLogAnalyticsEntityTopologyItemNodeArrayOutput {
	return i.ToGetLogAnalyticsEntityTopologyItemNodeArrayOutputWithContext(context.Background())
}

func (i GetLogAnalyticsEntityTopologyItemNodeArray) ToGetLogAnalyticsEntityTopologyItemNodeArrayOutputWithContext(ctx context.Context) GetLogAnalyticsEntityTopologyItemNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsEntityTopologyItemNodeArrayOutput)
}

type GetLogAnalyticsEntityTopologyItemNodeOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsEntityTopologyItemNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsEntityTopologyItemNode)(nil)).Elem()
}

func (o GetLogAnalyticsEntityTopologyItemNodeOutput) ToGetLogAnalyticsEntityTopologyItemNodeOutput() GetLogAnalyticsEntityTopologyItemNodeOutput {
	return o
}

func (o GetLogAnalyticsEntityTopologyItemNodeOutput) ToGetLogAnalyticsEntityTopologyItemNodeOutputWithContext(ctx context.Context) GetLogAnalyticsEntityTopologyItemNodeOutput {
	return o
}

// Array of log analytics entity summary.
func (o GetLogAnalyticsEntityTopologyItemNodeOutput) Items() GetLogAnalyticsEntityTopologyItemNodeItemArrayOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntityTopologyItemNode) []GetLogAnalyticsEntityTopologyItemNodeItem {
		return v.Items
	}).(GetLogAnalyticsEntityTopologyItemNodeItemArrayOutput)
}

type GetLogAnalyticsEntityTopologyItemNodeArrayOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsEntityTopologyItemNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsEntityTopologyItemNode)(nil)).Elem()
}

func (o GetLogAnalyticsEntityTopologyItemNodeArrayOutput) ToGetLogAnalyticsEntityTopologyItemNodeArrayOutput() GetLogAnalyticsEntityTopologyItemNodeArrayOutput {
	return o
}

func (o GetLogAnalyticsEntityTopologyItemNodeArrayOutput) ToGetLogAnalyticsEntityTopologyItemNodeArrayOutputWithContext(ctx context.Context) GetLogAnalyticsEntityTopologyItemNodeArrayOutput {
	return o
}

func (o GetLogAnalyticsEntityTopologyItemNodeArrayOutput) Index(i pulumi.IntInput) GetLogAnalyticsEntityTopologyItemNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogAnalyticsEntityTopologyItemNode {
		return vs[0].([]GetLogAnalyticsEntityTopologyItemNode)[vs[1].(int)]
	}).(GetLogAnalyticsEntityTopologyItemNodeOutput)
}

type GetLogAnalyticsEntityTopologyItemNodeItem struct {
	// The Boolean flag to indicate if logs are collected for an entity for log analytics usage.
	AreLogsCollected bool `pulumi:"areLogsCollected"`
	// The OCID of the Cloud resource which this entity is a representation of. This may be blank when the entity represents a non-cloud resource that the customer may have on their premises.
	CloudResourceId string `pulumi:"cloudResourceId"`
	// Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Internal name for the log analytics entity type.
	EntityTypeInternalName string `pulumi:"entityTypeInternalName"`
	// Log analytics entity type name.
	EntityTypeName string `pulumi:"entityTypeName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
	Id string `pulumi:"id"`
	// lifecycleDetails has additional information regarding substeps such as management agent plugin deployment.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The OCID of the Management Agent.
	ManagementAgentId string `pulumi:"managementAgentId"`
	// Log analytics entity name.
	Name string `pulumi:"name"`
	// This indicates the type of source. It is primarily for Enterprise Manager Repository ID.
	SourceId string `pulumi:"sourceId"`
	// A filter to return only those log analytics entities with the specified lifecycle state. The state value is case-insensitive.
	State string `pulumi:"state"`
	// The date and time the resource was created, in the format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the resource was last updated, in the format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
	// The timezone region of the log analytics entity.
	TimezoneRegion string `pulumi:"timezoneRegion"`
}

// GetLogAnalyticsEntityTopologyItemNodeItemInput is an input type that accepts GetLogAnalyticsEntityTopologyItemNodeItemArgs and GetLogAnalyticsEntityTopologyItemNodeItemOutput values.
// You can construct a concrete instance of `GetLogAnalyticsEntityTopologyItemNodeItemInput` via:
//
//	GetLogAnalyticsEntityTopologyItemNodeItemArgs{...}
type GetLogAnalyticsEntityTopologyItemNodeItemInput interface {
	pulumi.Input

	ToGetLogAnalyticsEntityTopologyItemNodeItemOutput() GetLogAnalyticsEntityTopologyItemNodeItemOutput
	ToGetLogAnalyticsEntityTopologyItemNodeItemOutputWithContext(context.Context) GetLogAnalyticsEntityTopologyItemNodeItemOutput
}

type GetLogAnalyticsEntityTopologyItemNodeItemArgs struct {
	// The Boolean flag to indicate if logs are collected for an entity for log analytics usage.
	AreLogsCollected pulumi.BoolInput `pulumi:"areLogsCollected"`
	// The OCID of the Cloud resource which this entity is a representation of. This may be blank when the entity represents a non-cloud resource that the customer may have on their premises.
	CloudResourceId pulumi.StringInput `pulumi:"cloudResourceId"`
	// Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// Internal name for the log analytics entity type.
	EntityTypeInternalName pulumi.StringInput `pulumi:"entityTypeInternalName"`
	// Log analytics entity type name.
	EntityTypeName pulumi.StringInput `pulumi:"entityTypeName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
	Id pulumi.StringInput `pulumi:"id"`
	// lifecycleDetails has additional information regarding substeps such as management agent plugin deployment.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// The OCID of the Management Agent.
	ManagementAgentId pulumi.StringInput `pulumi:"managementAgentId"`
	// Log analytics entity name.
	Name pulumi.StringInput `pulumi:"name"`
	// This indicates the type of source. It is primarily for Enterprise Manager Repository ID.
	SourceId pulumi.StringInput `pulumi:"sourceId"`
	// A filter to return only those log analytics entities with the specified lifecycle state. The state value is case-insensitive.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the resource was created, in the format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the resource was last updated, in the format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// The timezone region of the log analytics entity.
	TimezoneRegion pulumi.StringInput `pulumi:"timezoneRegion"`
}

func (GetLogAnalyticsEntityTopologyItemNodeItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsEntityTopologyItemNodeItem)(nil)).Elem()
}

func (i GetLogAnalyticsEntityTopologyItemNodeItemArgs) ToGetLogAnalyticsEntityTopologyItemNodeItemOutput() GetLogAnalyticsEntityTopologyItemNodeItemOutput {
	return i.ToGetLogAnalyticsEntityTopologyItemNodeItemOutputWithContext(context.Background())
}

func (i GetLogAnalyticsEntityTopologyItemNodeItemArgs) ToGetLogAnalyticsEntityTopologyItemNodeItemOutputWithContext(ctx context.Context) GetLogAnalyticsEntityTopologyItemNodeItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsEntityTopologyItemNodeItemOutput)
}

// GetLogAnalyticsEntityTopologyItemNodeItemArrayInput is an input type that accepts GetLogAnalyticsEntityTopologyItemNodeItemArray and GetLogAnalyticsEntityTopologyItemNodeItemArrayOutput values.
// You can construct a concrete instance of `GetLogAnalyticsEntityTopologyItemNodeItemArrayInput` via:
//
//	GetLogAnalyticsEntityTopologyItemNodeItemArray{ GetLogAnalyticsEntityTopologyItemNodeItemArgs{...} }
type GetLogAnalyticsEntityTopologyItemNodeItemArrayInput interface {
	pulumi.Input

	ToGetLogAnalyticsEntityTopologyItemNodeItemArrayOutput() GetLogAnalyticsEntityTopologyItemNodeItemArrayOutput
	ToGetLogAnalyticsEntityTopologyItemNodeItemArrayOutputWithContext(context.Context) GetLogAnalyticsEntityTopologyItemNodeItemArrayOutput
}

type GetLogAnalyticsEntityTopologyItemNodeItemArray []GetLogAnalyticsEntityTopologyItemNodeItemInput

func (GetLogAnalyticsEntityTopologyItemNodeItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsEntityTopologyItemNodeItem)(nil)).Elem()
}

func (i GetLogAnalyticsEntityTopologyItemNodeItemArray) ToGetLogAnalyticsEntityTopologyItemNodeItemArrayOutput() GetLogAnalyticsEntityTopologyItemNodeItemArrayOutput {
	return i.ToGetLogAnalyticsEntityTopologyItemNodeItemArrayOutputWithContext(context.Background())
}

func (i GetLogAnalyticsEntityTopologyItemNodeItemArray) ToGetLogAnalyticsEntityTopologyItemNodeItemArrayOutputWithContext(ctx context.Context) GetLogAnalyticsEntityTopologyItemNodeItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsEntityTopologyItemNodeItemArrayOutput)
}

type GetLogAnalyticsEntityTopologyItemNodeItemOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsEntityTopologyItemNodeItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsEntityTopologyItemNodeItem)(nil)).Elem()
}

func (o GetLogAnalyticsEntityTopologyItemNodeItemOutput) ToGetLogAnalyticsEntityTopologyItemNodeItemOutput() GetLogAnalyticsEntityTopologyItemNodeItemOutput {
	return o
}

func (o GetLogAnalyticsEntityTopologyItemNodeItemOutput) ToGetLogAnalyticsEntityTopologyItemNodeItemOutputWithContext(ctx context.Context) GetLogAnalyticsEntityTopologyItemNodeItemOutput {
	return o
}

// The Boolean flag to indicate if logs are collected for an entity for log analytics usage.
func (o GetLogAnalyticsEntityTopologyItemNodeItemOutput) AreLogsCollected() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntityTopologyItemNodeItem) bool { return v.AreLogsCollected }).(pulumi.BoolOutput)
}

// The OCID of the Cloud resource which this entity is a representation of. This may be blank when the entity represents a non-cloud resource that the customer may have on their premises.
func (o GetLogAnalyticsEntityTopologyItemNodeItemOutput) CloudResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntityTopologyItemNodeItem) string { return v.CloudResourceId }).(pulumi.StringOutput)
}

// Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetLogAnalyticsEntityTopologyItemNodeItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntityTopologyItemNodeItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetLogAnalyticsEntityTopologyItemNodeItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntityTopologyItemNodeItem) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// Internal name for the log analytics entity type.
func (o GetLogAnalyticsEntityTopologyItemNodeItemOutput) EntityTypeInternalName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntityTopologyItemNodeItem) string { return v.EntityTypeInternalName }).(pulumi.StringOutput)
}

// Log analytics entity type name.
func (o GetLogAnalyticsEntityTopologyItemNodeItemOutput) EntityTypeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntityTopologyItemNodeItem) string { return v.EntityTypeName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetLogAnalyticsEntityTopologyItemNodeItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntityTopologyItemNodeItem) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
func (o GetLogAnalyticsEntityTopologyItemNodeItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntityTopologyItemNodeItem) string { return v.Id }).(pulumi.StringOutput)
}

// lifecycleDetails has additional information regarding substeps such as management agent plugin deployment.
func (o GetLogAnalyticsEntityTopologyItemNodeItemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntityTopologyItemNodeItem) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The OCID of the Management Agent.
func (o GetLogAnalyticsEntityTopologyItemNodeItemOutput) ManagementAgentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntityTopologyItemNodeItem) string { return v.ManagementAgentId }).(pulumi.StringOutput)
}

// Log analytics entity name.
func (o GetLogAnalyticsEntityTopologyItemNodeItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntityTopologyItemNodeItem) string { return v.Name }).(pulumi.StringOutput)
}

// This indicates the type of source. It is primarily for Enterprise Manager Repository ID.
func (o GetLogAnalyticsEntityTopologyItemNodeItemOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntityTopologyItemNodeItem) string { return v.SourceId }).(pulumi.StringOutput)
}

// A filter to return only those log analytics entities with the specified lifecycle state. The state value is case-insensitive.
func (o GetLogAnalyticsEntityTopologyItemNodeItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntityTopologyItemNodeItem) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the resource was created, in the format defined by RFC3339.
func (o GetLogAnalyticsEntityTopologyItemNodeItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntityTopologyItemNodeItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the resource was last updated, in the format defined by RFC3339.
func (o GetLogAnalyticsEntityTopologyItemNodeItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntityTopologyItemNodeItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The timezone region of the log analytics entity.
func (o GetLogAnalyticsEntityTopologyItemNodeItemOutput) TimezoneRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsEntityTopologyItemNodeItem) string { return v.TimezoneRegion }).(pulumi.StringOutput)
}

type GetLogAnalyticsEntityTopologyItemNodeItemArrayOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsEntityTopologyItemNodeItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsEntityTopologyItemNodeItem)(nil)).Elem()
}

func (o GetLogAnalyticsEntityTopologyItemNodeItemArrayOutput) ToGetLogAnalyticsEntityTopologyItemNodeItemArrayOutput() GetLogAnalyticsEntityTopologyItemNodeItemArrayOutput {
	return o
}

func (o GetLogAnalyticsEntityTopologyItemNodeItemArrayOutput) ToGetLogAnalyticsEntityTopologyItemNodeItemArrayOutputWithContext(ctx context.Context) GetLogAnalyticsEntityTopologyItemNodeItemArrayOutput {
	return o
}

func (o GetLogAnalyticsEntityTopologyItemNodeItemArrayOutput) Index(i pulumi.IntInput) GetLogAnalyticsEntityTopologyItemNodeItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogAnalyticsEntityTopologyItemNodeItem {
		return vs[0].([]GetLogAnalyticsEntityTopologyItemNodeItem)[vs[1].(int)]
	}).(GetLogAnalyticsEntityTopologyItemNodeItemOutput)
}

type GetLogAnalyticsLogGroupsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetLogAnalyticsLogGroupsFilterInput is an input type that accepts GetLogAnalyticsLogGroupsFilterArgs and GetLogAnalyticsLogGroupsFilterOutput values.
// You can construct a concrete instance of `GetLogAnalyticsLogGroupsFilterInput` via:
//
//	GetLogAnalyticsLogGroupsFilterArgs{...}
type GetLogAnalyticsLogGroupsFilterInput interface {
	pulumi.Input

	ToGetLogAnalyticsLogGroupsFilterOutput() GetLogAnalyticsLogGroupsFilterOutput
	ToGetLogAnalyticsLogGroupsFilterOutputWithContext(context.Context) GetLogAnalyticsLogGroupsFilterOutput
}

type GetLogAnalyticsLogGroupsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetLogAnalyticsLogGroupsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsLogGroupsFilter)(nil)).Elem()
}

func (i GetLogAnalyticsLogGroupsFilterArgs) ToGetLogAnalyticsLogGroupsFilterOutput() GetLogAnalyticsLogGroupsFilterOutput {
	return i.ToGetLogAnalyticsLogGroupsFilterOutputWithContext(context.Background())
}

func (i GetLogAnalyticsLogGroupsFilterArgs) ToGetLogAnalyticsLogGroupsFilterOutputWithContext(ctx context.Context) GetLogAnalyticsLogGroupsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsLogGroupsFilterOutput)
}

// GetLogAnalyticsLogGroupsFilterArrayInput is an input type that accepts GetLogAnalyticsLogGroupsFilterArray and GetLogAnalyticsLogGroupsFilterArrayOutput values.
// You can construct a concrete instance of `GetLogAnalyticsLogGroupsFilterArrayInput` via:
//
//	GetLogAnalyticsLogGroupsFilterArray{ GetLogAnalyticsLogGroupsFilterArgs{...} }
type GetLogAnalyticsLogGroupsFilterArrayInput interface {
	pulumi.Input

	ToGetLogAnalyticsLogGroupsFilterArrayOutput() GetLogAnalyticsLogGroupsFilterArrayOutput
	ToGetLogAnalyticsLogGroupsFilterArrayOutputWithContext(context.Context) GetLogAnalyticsLogGroupsFilterArrayOutput
}

type GetLogAnalyticsLogGroupsFilterArray []GetLogAnalyticsLogGroupsFilterInput

func (GetLogAnalyticsLogGroupsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsLogGroupsFilter)(nil)).Elem()
}

func (i GetLogAnalyticsLogGroupsFilterArray) ToGetLogAnalyticsLogGroupsFilterArrayOutput() GetLogAnalyticsLogGroupsFilterArrayOutput {
	return i.ToGetLogAnalyticsLogGroupsFilterArrayOutputWithContext(context.Background())
}

func (i GetLogAnalyticsLogGroupsFilterArray) ToGetLogAnalyticsLogGroupsFilterArrayOutputWithContext(ctx context.Context) GetLogAnalyticsLogGroupsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsLogGroupsFilterArrayOutput)
}

type GetLogAnalyticsLogGroupsFilterOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsLogGroupsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsLogGroupsFilter)(nil)).Elem()
}

func (o GetLogAnalyticsLogGroupsFilterOutput) ToGetLogAnalyticsLogGroupsFilterOutput() GetLogAnalyticsLogGroupsFilterOutput {
	return o
}

func (o GetLogAnalyticsLogGroupsFilterOutput) ToGetLogAnalyticsLogGroupsFilterOutputWithContext(ctx context.Context) GetLogAnalyticsLogGroupsFilterOutput {
	return o
}

func (o GetLogAnalyticsLogGroupsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsLogGroupsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetLogAnalyticsLogGroupsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetLogAnalyticsLogGroupsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetLogAnalyticsLogGroupsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLogAnalyticsLogGroupsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetLogAnalyticsLogGroupsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsLogGroupsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsLogGroupsFilter)(nil)).Elem()
}

func (o GetLogAnalyticsLogGroupsFilterArrayOutput) ToGetLogAnalyticsLogGroupsFilterArrayOutput() GetLogAnalyticsLogGroupsFilterArrayOutput {
	return o
}

func (o GetLogAnalyticsLogGroupsFilterArrayOutput) ToGetLogAnalyticsLogGroupsFilterArrayOutputWithContext(ctx context.Context) GetLogAnalyticsLogGroupsFilterArrayOutput {
	return o
}

func (o GetLogAnalyticsLogGroupsFilterArrayOutput) Index(i pulumi.IntInput) GetLogAnalyticsLogGroupsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogAnalyticsLogGroupsFilter {
		return vs[0].([]GetLogAnalyticsLogGroupsFilter)[vs[1].(int)]
	}).(GetLogAnalyticsLogGroupsFilterOutput)
}

type GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollection struct {
	Items []GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItem `pulumi:"items"`
}

// GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionInput is an input type that accepts GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArgs and GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionOutput values.
// You can construct a concrete instance of `GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionInput` via:
//
//	GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArgs{...}
type GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionInput interface {
	pulumi.Input

	ToGetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionOutput() GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionOutput
	ToGetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionOutputWithContext(context.Context) GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionOutput
}

type GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArgs struct {
	Items GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArrayInput `pulumi:"items"`
}

func (GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollection)(nil)).Elem()
}

func (i GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArgs) ToGetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionOutput() GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionOutput {
	return i.ToGetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionOutputWithContext(context.Background())
}

func (i GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArgs) ToGetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionOutputWithContext(ctx context.Context) GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionOutput)
}

// GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArrayInput is an input type that accepts GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArray and GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArrayOutput values.
// You can construct a concrete instance of `GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArrayInput` via:
//
//	GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArray{ GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArgs{...} }
type GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArrayInput interface {
	pulumi.Input

	ToGetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArrayOutput() GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArrayOutput
	ToGetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArrayOutputWithContext(context.Context) GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArrayOutput
}

type GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArray []GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionInput

func (GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollection)(nil)).Elem()
}

func (i GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArray) ToGetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArrayOutput() GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArrayOutput {
	return i.ToGetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArrayOutputWithContext(context.Background())
}

func (i GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArray) ToGetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArrayOutputWithContext(ctx context.Context) GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArrayOutput)
}

type GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollection)(nil)).Elem()
}

func (o GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionOutput) ToGetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionOutput() GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionOutput {
	return o
}

func (o GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionOutput) ToGetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionOutputWithContext(ctx context.Context) GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionOutput {
	return o
}

func (o GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionOutput) Items() GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArrayOutput {
	return o.ApplyT(func(v GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollection) []GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItem {
		return v.Items
	}).(GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArrayOutput)
}

type GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollection)(nil)).Elem()
}

func (o GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArrayOutput) ToGetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArrayOutput() GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArrayOutput {
	return o
}

func (o GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArrayOutput) ToGetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArrayOutputWithContext(ctx context.Context) GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArrayOutput {
	return o
}

func (o GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArrayOutput) Index(i pulumi.IntInput) GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollection {
		return vs[0].([]GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollection)[vs[1].(int)]
	}).(GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionOutput)
}

type GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItem struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Description for this resource.
	Description string `pulumi:"description"`
	// A filter to return only log analytics log groups whose displayName matches the entire display name given. The match is case-insensitive.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
	Id string `pulumi:"id"`
	// The Logging Analytics namespace used for the request.
	Namespace string `pulumi:"namespace"`
	// The date and time the resource was created, in the format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the resource was last updated, in the format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemInput is an input type that accepts GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArgs and GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemOutput values.
// You can construct a concrete instance of `GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemInput` via:
//
//	GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArgs{...}
type GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemInput interface {
	pulumi.Input

	ToGetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemOutput() GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemOutput
	ToGetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemOutputWithContext(context.Context) GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemOutput
}

type GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// Description for this resource.
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only log analytics log groups whose displayName matches the entire display name given. The match is case-insensitive.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
	Id pulumi.StringInput `pulumi:"id"`
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The date and time the resource was created, in the format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the resource was last updated, in the format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItem)(nil)).Elem()
}

func (i GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArgs) ToGetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemOutput() GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemOutput {
	return i.ToGetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemOutputWithContext(context.Background())
}

func (i GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArgs) ToGetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemOutputWithContext(ctx context.Context) GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemOutput)
}

// GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArrayInput is an input type that accepts GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArray and GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArrayInput` via:
//
//	GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArray{ GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArgs{...} }
type GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArrayInput interface {
	pulumi.Input

	ToGetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArrayOutput() GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArrayOutput
	ToGetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArrayOutputWithContext(context.Context) GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArrayOutput
}

type GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArray []GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemInput

func (GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItem)(nil)).Elem()
}

func (i GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArray) ToGetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArrayOutput() GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArrayOutput {
	return i.ToGetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArray) ToGetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArrayOutputWithContext(ctx context.Context) GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArrayOutput)
}

type GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItem)(nil)).Elem()
}

func (o GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemOutput) ToGetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemOutput() GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemOutput {
	return o
}

func (o GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemOutput) ToGetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemOutputWithContext(ctx context.Context) GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItem) string {
		return v.CompartmentId
	}).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItem) map[string]interface{} {
		return v.DefinedTags
	}).(pulumi.MapOutput)
}

// Description for this resource.
func (o GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItem) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only log analytics log groups whose displayName matches the entire display name given. The match is case-insensitive.
func (o GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItem) map[string]interface{} {
		return v.FreeformTags
	}).(pulumi.MapOutput)
}

// The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
func (o GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// The Logging Analytics namespace used for the request.
func (o GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItem) string { return v.Namespace }).(pulumi.StringOutput)
}

// The date and time the resource was created, in the format defined by RFC3339.
func (o GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the resource was last updated, in the format defined by RFC3339.
func (o GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItem)(nil)).Elem()
}

func (o GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArrayOutput) ToGetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArrayOutput() GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArrayOutput {
	return o
}

func (o GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArrayOutput) ToGetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArrayOutputWithContext(ctx context.Context) GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArrayOutput {
	return o
}

func (o GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArrayOutput) Index(i pulumi.IntInput) GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItem {
		return vs[0].([]GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItem)[vs[1].(int)]
	}).(GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemOutput)
}

type GetLogAnalyticsObjectCollectionRuleOverride struct {
	MatchType     string `pulumi:"matchType"`
	MatchValue    string `pulumi:"matchValue"`
	PropertyName  string `pulumi:"propertyName"`
	PropertyValue string `pulumi:"propertyValue"`
}

// GetLogAnalyticsObjectCollectionRuleOverrideInput is an input type that accepts GetLogAnalyticsObjectCollectionRuleOverrideArgs and GetLogAnalyticsObjectCollectionRuleOverrideOutput values.
// You can construct a concrete instance of `GetLogAnalyticsObjectCollectionRuleOverrideInput` via:
//
//	GetLogAnalyticsObjectCollectionRuleOverrideArgs{...}
type GetLogAnalyticsObjectCollectionRuleOverrideInput interface {
	pulumi.Input

	ToGetLogAnalyticsObjectCollectionRuleOverrideOutput() GetLogAnalyticsObjectCollectionRuleOverrideOutput
	ToGetLogAnalyticsObjectCollectionRuleOverrideOutputWithContext(context.Context) GetLogAnalyticsObjectCollectionRuleOverrideOutput
}

type GetLogAnalyticsObjectCollectionRuleOverrideArgs struct {
	MatchType     pulumi.StringInput `pulumi:"matchType"`
	MatchValue    pulumi.StringInput `pulumi:"matchValue"`
	PropertyName  pulumi.StringInput `pulumi:"propertyName"`
	PropertyValue pulumi.StringInput `pulumi:"propertyValue"`
}

func (GetLogAnalyticsObjectCollectionRuleOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsObjectCollectionRuleOverride)(nil)).Elem()
}

func (i GetLogAnalyticsObjectCollectionRuleOverrideArgs) ToGetLogAnalyticsObjectCollectionRuleOverrideOutput() GetLogAnalyticsObjectCollectionRuleOverrideOutput {
	return i.ToGetLogAnalyticsObjectCollectionRuleOverrideOutputWithContext(context.Background())
}

func (i GetLogAnalyticsObjectCollectionRuleOverrideArgs) ToGetLogAnalyticsObjectCollectionRuleOverrideOutputWithContext(ctx context.Context) GetLogAnalyticsObjectCollectionRuleOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsObjectCollectionRuleOverrideOutput)
}

// GetLogAnalyticsObjectCollectionRuleOverrideArrayInput is an input type that accepts GetLogAnalyticsObjectCollectionRuleOverrideArray and GetLogAnalyticsObjectCollectionRuleOverrideArrayOutput values.
// You can construct a concrete instance of `GetLogAnalyticsObjectCollectionRuleOverrideArrayInput` via:
//
//	GetLogAnalyticsObjectCollectionRuleOverrideArray{ GetLogAnalyticsObjectCollectionRuleOverrideArgs{...} }
type GetLogAnalyticsObjectCollectionRuleOverrideArrayInput interface {
	pulumi.Input

	ToGetLogAnalyticsObjectCollectionRuleOverrideArrayOutput() GetLogAnalyticsObjectCollectionRuleOverrideArrayOutput
	ToGetLogAnalyticsObjectCollectionRuleOverrideArrayOutputWithContext(context.Context) GetLogAnalyticsObjectCollectionRuleOverrideArrayOutput
}

type GetLogAnalyticsObjectCollectionRuleOverrideArray []GetLogAnalyticsObjectCollectionRuleOverrideInput

func (GetLogAnalyticsObjectCollectionRuleOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsObjectCollectionRuleOverride)(nil)).Elem()
}

func (i GetLogAnalyticsObjectCollectionRuleOverrideArray) ToGetLogAnalyticsObjectCollectionRuleOverrideArrayOutput() GetLogAnalyticsObjectCollectionRuleOverrideArrayOutput {
	return i.ToGetLogAnalyticsObjectCollectionRuleOverrideArrayOutputWithContext(context.Background())
}

func (i GetLogAnalyticsObjectCollectionRuleOverrideArray) ToGetLogAnalyticsObjectCollectionRuleOverrideArrayOutputWithContext(ctx context.Context) GetLogAnalyticsObjectCollectionRuleOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsObjectCollectionRuleOverrideArrayOutput)
}

type GetLogAnalyticsObjectCollectionRuleOverrideOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsObjectCollectionRuleOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsObjectCollectionRuleOverride)(nil)).Elem()
}

func (o GetLogAnalyticsObjectCollectionRuleOverrideOutput) ToGetLogAnalyticsObjectCollectionRuleOverrideOutput() GetLogAnalyticsObjectCollectionRuleOverrideOutput {
	return o
}

func (o GetLogAnalyticsObjectCollectionRuleOverrideOutput) ToGetLogAnalyticsObjectCollectionRuleOverrideOutputWithContext(ctx context.Context) GetLogAnalyticsObjectCollectionRuleOverrideOutput {
	return o
}

func (o GetLogAnalyticsObjectCollectionRuleOverrideOutput) MatchType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsObjectCollectionRuleOverride) string { return v.MatchType }).(pulumi.StringOutput)
}

func (o GetLogAnalyticsObjectCollectionRuleOverrideOutput) MatchValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsObjectCollectionRuleOverride) string { return v.MatchValue }).(pulumi.StringOutput)
}

func (o GetLogAnalyticsObjectCollectionRuleOverrideOutput) PropertyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsObjectCollectionRuleOverride) string { return v.PropertyName }).(pulumi.StringOutput)
}

func (o GetLogAnalyticsObjectCollectionRuleOverrideOutput) PropertyValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsObjectCollectionRuleOverride) string { return v.PropertyValue }).(pulumi.StringOutput)
}

type GetLogAnalyticsObjectCollectionRuleOverrideArrayOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsObjectCollectionRuleOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsObjectCollectionRuleOverride)(nil)).Elem()
}

func (o GetLogAnalyticsObjectCollectionRuleOverrideArrayOutput) ToGetLogAnalyticsObjectCollectionRuleOverrideArrayOutput() GetLogAnalyticsObjectCollectionRuleOverrideArrayOutput {
	return o
}

func (o GetLogAnalyticsObjectCollectionRuleOverrideArrayOutput) ToGetLogAnalyticsObjectCollectionRuleOverrideArrayOutputWithContext(ctx context.Context) GetLogAnalyticsObjectCollectionRuleOverrideArrayOutput {
	return o
}

func (o GetLogAnalyticsObjectCollectionRuleOverrideArrayOutput) Index(i pulumi.IntInput) GetLogAnalyticsObjectCollectionRuleOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogAnalyticsObjectCollectionRuleOverride {
		return vs[0].([]GetLogAnalyticsObjectCollectionRuleOverride)[vs[1].(int)]
	}).(GetLogAnalyticsObjectCollectionRuleOverrideOutput)
}

type GetLogAnalyticsObjectCollectionRulesFilter struct {
	// A filter to return rules only matching with this name.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetLogAnalyticsObjectCollectionRulesFilterInput is an input type that accepts GetLogAnalyticsObjectCollectionRulesFilterArgs and GetLogAnalyticsObjectCollectionRulesFilterOutput values.
// You can construct a concrete instance of `GetLogAnalyticsObjectCollectionRulesFilterInput` via:
//
//	GetLogAnalyticsObjectCollectionRulesFilterArgs{...}
type GetLogAnalyticsObjectCollectionRulesFilterInput interface {
	pulumi.Input

	ToGetLogAnalyticsObjectCollectionRulesFilterOutput() GetLogAnalyticsObjectCollectionRulesFilterOutput
	ToGetLogAnalyticsObjectCollectionRulesFilterOutputWithContext(context.Context) GetLogAnalyticsObjectCollectionRulesFilterOutput
}

type GetLogAnalyticsObjectCollectionRulesFilterArgs struct {
	// A filter to return rules only matching with this name.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetLogAnalyticsObjectCollectionRulesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsObjectCollectionRulesFilter)(nil)).Elem()
}

func (i GetLogAnalyticsObjectCollectionRulesFilterArgs) ToGetLogAnalyticsObjectCollectionRulesFilterOutput() GetLogAnalyticsObjectCollectionRulesFilterOutput {
	return i.ToGetLogAnalyticsObjectCollectionRulesFilterOutputWithContext(context.Background())
}

func (i GetLogAnalyticsObjectCollectionRulesFilterArgs) ToGetLogAnalyticsObjectCollectionRulesFilterOutputWithContext(ctx context.Context) GetLogAnalyticsObjectCollectionRulesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsObjectCollectionRulesFilterOutput)
}

// GetLogAnalyticsObjectCollectionRulesFilterArrayInput is an input type that accepts GetLogAnalyticsObjectCollectionRulesFilterArray and GetLogAnalyticsObjectCollectionRulesFilterArrayOutput values.
// You can construct a concrete instance of `GetLogAnalyticsObjectCollectionRulesFilterArrayInput` via:
//
//	GetLogAnalyticsObjectCollectionRulesFilterArray{ GetLogAnalyticsObjectCollectionRulesFilterArgs{...} }
type GetLogAnalyticsObjectCollectionRulesFilterArrayInput interface {
	pulumi.Input

	ToGetLogAnalyticsObjectCollectionRulesFilterArrayOutput() GetLogAnalyticsObjectCollectionRulesFilterArrayOutput
	ToGetLogAnalyticsObjectCollectionRulesFilterArrayOutputWithContext(context.Context) GetLogAnalyticsObjectCollectionRulesFilterArrayOutput
}

type GetLogAnalyticsObjectCollectionRulesFilterArray []GetLogAnalyticsObjectCollectionRulesFilterInput

func (GetLogAnalyticsObjectCollectionRulesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsObjectCollectionRulesFilter)(nil)).Elem()
}

func (i GetLogAnalyticsObjectCollectionRulesFilterArray) ToGetLogAnalyticsObjectCollectionRulesFilterArrayOutput() GetLogAnalyticsObjectCollectionRulesFilterArrayOutput {
	return i.ToGetLogAnalyticsObjectCollectionRulesFilterArrayOutputWithContext(context.Background())
}

func (i GetLogAnalyticsObjectCollectionRulesFilterArray) ToGetLogAnalyticsObjectCollectionRulesFilterArrayOutputWithContext(ctx context.Context) GetLogAnalyticsObjectCollectionRulesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsObjectCollectionRulesFilterArrayOutput)
}

type GetLogAnalyticsObjectCollectionRulesFilterOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsObjectCollectionRulesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsObjectCollectionRulesFilter)(nil)).Elem()
}

func (o GetLogAnalyticsObjectCollectionRulesFilterOutput) ToGetLogAnalyticsObjectCollectionRulesFilterOutput() GetLogAnalyticsObjectCollectionRulesFilterOutput {
	return o
}

func (o GetLogAnalyticsObjectCollectionRulesFilterOutput) ToGetLogAnalyticsObjectCollectionRulesFilterOutputWithContext(ctx context.Context) GetLogAnalyticsObjectCollectionRulesFilterOutput {
	return o
}

// A filter to return rules only matching with this name.
func (o GetLogAnalyticsObjectCollectionRulesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsObjectCollectionRulesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetLogAnalyticsObjectCollectionRulesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetLogAnalyticsObjectCollectionRulesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetLogAnalyticsObjectCollectionRulesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLogAnalyticsObjectCollectionRulesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetLogAnalyticsObjectCollectionRulesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsObjectCollectionRulesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsObjectCollectionRulesFilter)(nil)).Elem()
}

func (o GetLogAnalyticsObjectCollectionRulesFilterArrayOutput) ToGetLogAnalyticsObjectCollectionRulesFilterArrayOutput() GetLogAnalyticsObjectCollectionRulesFilterArrayOutput {
	return o
}

func (o GetLogAnalyticsObjectCollectionRulesFilterArrayOutput) ToGetLogAnalyticsObjectCollectionRulesFilterArrayOutputWithContext(ctx context.Context) GetLogAnalyticsObjectCollectionRulesFilterArrayOutput {
	return o
}

func (o GetLogAnalyticsObjectCollectionRulesFilterArrayOutput) Index(i pulumi.IntInput) GetLogAnalyticsObjectCollectionRulesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogAnalyticsObjectCollectionRulesFilter {
		return vs[0].([]GetLogAnalyticsObjectCollectionRulesFilter)[vs[1].(int)]
	}).(GetLogAnalyticsObjectCollectionRulesFilterOutput)
}

type GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollection struct {
	Items []GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItem `pulumi:"items"`
}

// GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionInput is an input type that accepts GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArgs and GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionOutput values.
// You can construct a concrete instance of `GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionInput` via:
//
//	GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArgs{...}
type GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionInput interface {
	pulumi.Input

	ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionOutput() GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionOutput
	ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionOutputWithContext(context.Context) GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionOutput
}

type GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArgs struct {
	Items GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArrayInput `pulumi:"items"`
}

func (GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollection)(nil)).Elem()
}

func (i GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArgs) ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionOutput() GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionOutput {
	return i.ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionOutputWithContext(context.Background())
}

func (i GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArgs) ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionOutputWithContext(ctx context.Context) GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionOutput)
}

// GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArrayInput is an input type that accepts GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArray and GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArrayOutput values.
// You can construct a concrete instance of `GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArrayInput` via:
//
//	GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArray{ GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArgs{...} }
type GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArrayInput interface {
	pulumi.Input

	ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArrayOutput() GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArrayOutput
	ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArrayOutputWithContext(context.Context) GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArrayOutput
}

type GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArray []GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionInput

func (GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollection)(nil)).Elem()
}

func (i GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArray) ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArrayOutput() GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArrayOutput {
	return i.ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArrayOutputWithContext(context.Background())
}

func (i GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArray) ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArrayOutputWithContext(ctx context.Context) GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArrayOutput)
}

type GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollection)(nil)).Elem()
}

func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionOutput) ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionOutput() GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionOutput {
	return o
}

func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionOutput) ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionOutputWithContext(ctx context.Context) GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionOutput {
	return o
}

func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionOutput) Items() GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArrayOutput {
	return o.ApplyT(func(v GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollection) []GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItem {
		return v.Items
	}).(GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArrayOutput)
}

type GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollection)(nil)).Elem()
}

func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArrayOutput) ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArrayOutput() GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArrayOutput {
	return o
}

func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArrayOutput) ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArrayOutputWithContext(ctx context.Context) GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArrayOutput {
	return o
}

func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArrayOutput) Index(i pulumi.IntInput) GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollection {
		return vs[0].([]GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollection)[vs[1].(int)]
	}).(GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionOutput)
}

type GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItem struct {
	// An optional character encoding to aid in detecting the character encoding of the contents of the objects while processing. It is recommended to set this value as ISO_8589_1 when configuring content of the objects having more numeric characters, and very few alphabets. For e.g. this applies when configuring VCN Flow Logs.
	CharEncoding string `pulumi:"charEncoding"`
	// The type of collection. Supported collection types: LIVE, HISTORIC, HISTORIC_LIVE
	CollectionType string `pulumi:"collectionType"`
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A string that describes the details of the rule. It does not have to be unique, and can be changed. Avoid entering confidential information.
	Description string `pulumi:"description"`
	// Logging Analytics entity OCID to associate the processed logs with.
	EntityId string `pulumi:"entityId"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this rule.
	Id string `pulumi:"id"`
	// A detailed status of the life cycle state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Logging Analytics Log group OCID to associate the processed logs with.
	LogGroupId string `pulumi:"logGroupId"`
	// Name of the Logging Analytics Source to use for the processing.
	LogSourceName string `pulumi:"logSourceName"`
	// A filter to return rules only matching with this name.
	Name string `pulumi:"name"`
	// The Logging Analytics namespace used for the request.
	Namespace string `pulumi:"namespace"`
	// When the filters are provided, only the objects matching the filters are picked up for processing. The matchType supported is exact match and accommodates wildcard "*". For more information on filters, see [Event Filters](https://docs.oracle.com/en-us/iaas/Content/Events/Concepts/filterevents.htm).
	ObjectNameFilters []string `pulumi:"objectNameFilters"`
	// Name of the Object Storage bucket.
	OsBucketName string `pulumi:"osBucketName"`
	// Object Storage namespace.
	OsNamespace string `pulumi:"osNamespace"`
	// Use this to override some property values which are defined at bucket level to the scope of object. Supported propeties for override are, logSourceName, charEncoding. Supported matchType for override are "contains".
	Overrides []GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverride `pulumi:"overrides"`
	// The oldest time of the file in the bucket to consider for collection. Accepted values are: BEGINNING or CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollSince value other than CURRENT_TIME will result in error.
	PollSince string `pulumi:"pollSince"`
	// The oldest time of the file in the bucket to consider for collection. Accepted values are: CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollTill will result in error.
	PollTill string `pulumi:"pollTill"`
	// Lifecycle state filter.
	State string `pulumi:"state"`
	// The time when this rule was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time when this rule was last updated. An RFC3339 formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemInput is an input type that accepts GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArgs and GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput values.
// You can construct a concrete instance of `GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemInput` via:
//
//	GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArgs{...}
type GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemInput interface {
	pulumi.Input

	ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput() GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput
	ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutputWithContext(context.Context) GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput
}

type GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArgs struct {
	// An optional character encoding to aid in detecting the character encoding of the contents of the objects while processing. It is recommended to set this value as ISO_8589_1 when configuring content of the objects having more numeric characters, and very few alphabets. For e.g. this applies when configuring VCN Flow Logs.
	CharEncoding pulumi.StringInput `pulumi:"charEncoding"`
	// The type of collection. Supported collection types: LIVE, HISTORIC, HISTORIC_LIVE
	CollectionType pulumi.StringInput `pulumi:"collectionType"`
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// A string that describes the details of the rule. It does not have to be unique, and can be changed. Avoid entering confidential information.
	Description pulumi.StringInput `pulumi:"description"`
	// Logging Analytics entity OCID to associate the processed logs with.
	EntityId pulumi.StringInput `pulumi:"entityId"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this rule.
	Id pulumi.StringInput `pulumi:"id"`
	// A detailed status of the life cycle state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// Logging Analytics Log group OCID to associate the processed logs with.
	LogGroupId pulumi.StringInput `pulumi:"logGroupId"`
	// Name of the Logging Analytics Source to use for the processing.
	LogSourceName pulumi.StringInput `pulumi:"logSourceName"`
	// A filter to return rules only matching with this name.
	Name pulumi.StringInput `pulumi:"name"`
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// When the filters are provided, only the objects matching the filters are picked up for processing. The matchType supported is exact match and accommodates wildcard "*". For more information on filters, see [Event Filters](https://docs.oracle.com/en-us/iaas/Content/Events/Concepts/filterevents.htm).
	ObjectNameFilters pulumi.StringArrayInput `pulumi:"objectNameFilters"`
	// Name of the Object Storage bucket.
	OsBucketName pulumi.StringInput `pulumi:"osBucketName"`
	// Object Storage namespace.
	OsNamespace pulumi.StringInput `pulumi:"osNamespace"`
	// Use this to override some property values which are defined at bucket level to the scope of object. Supported propeties for override are, logSourceName, charEncoding. Supported matchType for override are "contains".
	Overrides GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArrayInput `pulumi:"overrides"`
	// The oldest time of the file in the bucket to consider for collection. Accepted values are: BEGINNING or CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollSince value other than CURRENT_TIME will result in error.
	PollSince pulumi.StringInput `pulumi:"pollSince"`
	// The oldest time of the file in the bucket to consider for collection. Accepted values are: CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollTill will result in error.
	PollTill pulumi.StringInput `pulumi:"pollTill"`
	// Lifecycle state filter.
	State pulumi.StringInput `pulumi:"state"`
	// The time when this rule was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time when this rule was last updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItem)(nil)).Elem()
}

func (i GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArgs) ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput() GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput {
	return i.ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutputWithContext(context.Background())
}

func (i GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArgs) ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutputWithContext(ctx context.Context) GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput)
}

// GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArrayInput is an input type that accepts GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArray and GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArrayInput` via:
//
//	GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArray{ GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArgs{...} }
type GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArrayInput interface {
	pulumi.Input

	ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArrayOutput() GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArrayOutput
	ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArrayOutputWithContext(context.Context) GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArrayOutput
}

type GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArray []GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemInput

func (GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItem)(nil)).Elem()
}

func (i GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArray) ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArrayOutput() GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArrayOutput {
	return i.ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArray) ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArrayOutputWithContext(ctx context.Context) GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArrayOutput)
}

type GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItem)(nil)).Elem()
}

func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput) ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput() GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput {
	return o
}

func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput) ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutputWithContext(ctx context.Context) GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput {
	return o
}

// An optional character encoding to aid in detecting the character encoding of the contents of the objects while processing. It is recommended to set this value as ISO_8589_1 when configuring content of the objects having more numeric characters, and very few alphabets. For e.g. this applies when configuring VCN Flow Logs.
func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput) CharEncoding() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItem) string {
		return v.CharEncoding
	}).(pulumi.StringOutput)
}

// The type of collection. Supported collection types: LIVE, HISTORIC, HISTORIC_LIVE
func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput) CollectionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItem) string {
		return v.CollectionType
	}).(pulumi.StringOutput)
}

// The ID of the compartment in which to list resources.
func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItem) string {
		return v.CompartmentId
	}).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItem) map[string]interface{} {
		return v.DefinedTags
	}).(pulumi.MapOutput)
}

// A string that describes the details of the rule. It does not have to be unique, and can be changed. Avoid entering confidential information.
func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItem) string {
		return v.Description
	}).(pulumi.StringOutput)
}

// Logging Analytics entity OCID to associate the processed logs with.
func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput) EntityId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItem) string {
		return v.EntityId
	}).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItem) map[string]interface{} {
		return v.FreeformTags
	}).(pulumi.MapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this rule.
func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItem) string {
		return v.Id
	}).(pulumi.StringOutput)
}

// A detailed status of the life cycle state.
func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItem) string {
		return v.LifecycleDetails
	}).(pulumi.StringOutput)
}

// Logging Analytics Log group OCID to associate the processed logs with.
func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput) LogGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItem) string {
		return v.LogGroupId
	}).(pulumi.StringOutput)
}

// Name of the Logging Analytics Source to use for the processing.
func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput) LogSourceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItem) string {
		return v.LogSourceName
	}).(pulumi.StringOutput)
}

// A filter to return rules only matching with this name.
func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItem) string {
		return v.Name
	}).(pulumi.StringOutput)
}

// The Logging Analytics namespace used for the request.
func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItem) string {
		return v.Namespace
	}).(pulumi.StringOutput)
}

// When the filters are provided, only the objects matching the filters are picked up for processing. The matchType supported is exact match and accommodates wildcard "*". For more information on filters, see [Event Filters](https://docs.oracle.com/en-us/iaas/Content/Events/Concepts/filterevents.htm).
func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput) ObjectNameFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItem) []string {
		return v.ObjectNameFilters
	}).(pulumi.StringArrayOutput)
}

// Name of the Object Storage bucket.
func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput) OsBucketName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItem) string {
		return v.OsBucketName
	}).(pulumi.StringOutput)
}

// Object Storage namespace.
func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput) OsNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItem) string {
		return v.OsNamespace
	}).(pulumi.StringOutput)
}

// Use this to override some property values which are defined at bucket level to the scope of object. Supported propeties for override are, logSourceName, charEncoding. Supported matchType for override are "contains".
func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput) Overrides() GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArrayOutput {
	return o.ApplyT(func(v GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItem) []GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverride {
		return v.Overrides
	}).(GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArrayOutput)
}

// The oldest time of the file in the bucket to consider for collection. Accepted values are: BEGINNING or CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollSince value other than CURRENT_TIME will result in error.
func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput) PollSince() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItem) string {
		return v.PollSince
	}).(pulumi.StringOutput)
}

// The oldest time of the file in the bucket to consider for collection. Accepted values are: CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollTill will result in error.
func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput) PollTill() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItem) string {
		return v.PollTill
	}).(pulumi.StringOutput)
}

// Lifecycle state filter.
func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItem) string {
		return v.State
	}).(pulumi.StringOutput)
}

// The time when this rule was created. An RFC3339 formatted datetime string.
func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItem) string {
		return v.TimeCreated
	}).(pulumi.StringOutput)
}

// The time when this rule was last updated. An RFC3339 formatted datetime string.
func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItem) string {
		return v.TimeUpdated
	}).(pulumi.StringOutput)
}

type GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItem)(nil)).Elem()
}

func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArrayOutput) ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArrayOutput() GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArrayOutput {
	return o
}

func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArrayOutput) ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArrayOutputWithContext(ctx context.Context) GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArrayOutput {
	return o
}

func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArrayOutput) Index(i pulumi.IntInput) GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItem {
		return vs[0].([]GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItem)[vs[1].(int)]
	}).(GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput)
}

type GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverride struct {
	MatchType     string `pulumi:"matchType"`
	MatchValue    string `pulumi:"matchValue"`
	PropertyName  string `pulumi:"propertyName"`
	PropertyValue string `pulumi:"propertyValue"`
}

// GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideInput is an input type that accepts GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArgs and GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideOutput values.
// You can construct a concrete instance of `GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideInput` via:
//
//	GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArgs{...}
type GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideInput interface {
	pulumi.Input

	ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideOutput() GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideOutput
	ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideOutputWithContext(context.Context) GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideOutput
}

type GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArgs struct {
	MatchType     pulumi.StringInput `pulumi:"matchType"`
	MatchValue    pulumi.StringInput `pulumi:"matchValue"`
	PropertyName  pulumi.StringInput `pulumi:"propertyName"`
	PropertyValue pulumi.StringInput `pulumi:"propertyValue"`
}

func (GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverride)(nil)).Elem()
}

func (i GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArgs) ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideOutput() GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideOutput {
	return i.ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideOutputWithContext(context.Background())
}

func (i GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArgs) ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideOutputWithContext(ctx context.Context) GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideOutput)
}

// GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArrayInput is an input type that accepts GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArray and GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArrayOutput values.
// You can construct a concrete instance of `GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArrayInput` via:
//
//	GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArray{ GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArgs{...} }
type GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArrayInput interface {
	pulumi.Input

	ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArrayOutput() GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArrayOutput
	ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArrayOutputWithContext(context.Context) GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArrayOutput
}

type GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArray []GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideInput

func (GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverride)(nil)).Elem()
}

func (i GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArray) ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArrayOutput() GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArrayOutput {
	return i.ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArrayOutputWithContext(context.Background())
}

func (i GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArray) ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArrayOutputWithContext(ctx context.Context) GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArrayOutput)
}

type GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverride)(nil)).Elem()
}

func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideOutput) ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideOutput() GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideOutput {
	return o
}

func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideOutput) ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideOutputWithContext(ctx context.Context) GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideOutput {
	return o
}

func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideOutput) MatchType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverride) string {
		return v.MatchType
	}).(pulumi.StringOutput)
}

func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideOutput) MatchValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverride) string {
		return v.MatchValue
	}).(pulumi.StringOutput)
}

func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideOutput) PropertyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverride) string {
		return v.PropertyName
	}).(pulumi.StringOutput)
}

func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideOutput) PropertyValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverride) string {
		return v.PropertyValue
	}).(pulumi.StringOutput)
}

type GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArrayOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverride)(nil)).Elem()
}

func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArrayOutput) ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArrayOutput() GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArrayOutput {
	return o
}

func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArrayOutput) ToGetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArrayOutputWithContext(ctx context.Context) GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArrayOutput {
	return o
}

func (o GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArrayOutput) Index(i pulumi.IntInput) GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverride {
		return vs[0].([]GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverride)[vs[1].(int)]
	}).(GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideOutput)
}

type GetLogAnalyticsPreferenceItem struct {
	// The preference name. Currently, only "DEFAULT_HOMEPAGE" is supported.
	Name string `pulumi:"name"`
	// The preference value.
	Value string `pulumi:"value"`
}

// GetLogAnalyticsPreferenceItemInput is an input type that accepts GetLogAnalyticsPreferenceItemArgs and GetLogAnalyticsPreferenceItemOutput values.
// You can construct a concrete instance of `GetLogAnalyticsPreferenceItemInput` via:
//
//	GetLogAnalyticsPreferenceItemArgs{...}
type GetLogAnalyticsPreferenceItemInput interface {
	pulumi.Input

	ToGetLogAnalyticsPreferenceItemOutput() GetLogAnalyticsPreferenceItemOutput
	ToGetLogAnalyticsPreferenceItemOutputWithContext(context.Context) GetLogAnalyticsPreferenceItemOutput
}

type GetLogAnalyticsPreferenceItemArgs struct {
	// The preference name. Currently, only "DEFAULT_HOMEPAGE" is supported.
	Name pulumi.StringInput `pulumi:"name"`
	// The preference value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetLogAnalyticsPreferenceItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsPreferenceItem)(nil)).Elem()
}

func (i GetLogAnalyticsPreferenceItemArgs) ToGetLogAnalyticsPreferenceItemOutput() GetLogAnalyticsPreferenceItemOutput {
	return i.ToGetLogAnalyticsPreferenceItemOutputWithContext(context.Background())
}

func (i GetLogAnalyticsPreferenceItemArgs) ToGetLogAnalyticsPreferenceItemOutputWithContext(ctx context.Context) GetLogAnalyticsPreferenceItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsPreferenceItemOutput)
}

// GetLogAnalyticsPreferenceItemArrayInput is an input type that accepts GetLogAnalyticsPreferenceItemArray and GetLogAnalyticsPreferenceItemArrayOutput values.
// You can construct a concrete instance of `GetLogAnalyticsPreferenceItemArrayInput` via:
//
//	GetLogAnalyticsPreferenceItemArray{ GetLogAnalyticsPreferenceItemArgs{...} }
type GetLogAnalyticsPreferenceItemArrayInput interface {
	pulumi.Input

	ToGetLogAnalyticsPreferenceItemArrayOutput() GetLogAnalyticsPreferenceItemArrayOutput
	ToGetLogAnalyticsPreferenceItemArrayOutputWithContext(context.Context) GetLogAnalyticsPreferenceItemArrayOutput
}

type GetLogAnalyticsPreferenceItemArray []GetLogAnalyticsPreferenceItemInput

func (GetLogAnalyticsPreferenceItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsPreferenceItem)(nil)).Elem()
}

func (i GetLogAnalyticsPreferenceItemArray) ToGetLogAnalyticsPreferenceItemArrayOutput() GetLogAnalyticsPreferenceItemArrayOutput {
	return i.ToGetLogAnalyticsPreferenceItemArrayOutputWithContext(context.Background())
}

func (i GetLogAnalyticsPreferenceItemArray) ToGetLogAnalyticsPreferenceItemArrayOutputWithContext(ctx context.Context) GetLogAnalyticsPreferenceItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsPreferenceItemArrayOutput)
}

type GetLogAnalyticsPreferenceItemOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsPreferenceItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsPreferenceItem)(nil)).Elem()
}

func (o GetLogAnalyticsPreferenceItemOutput) ToGetLogAnalyticsPreferenceItemOutput() GetLogAnalyticsPreferenceItemOutput {
	return o
}

func (o GetLogAnalyticsPreferenceItemOutput) ToGetLogAnalyticsPreferenceItemOutputWithContext(ctx context.Context) GetLogAnalyticsPreferenceItemOutput {
	return o
}

// The preference name. Currently, only "DEFAULT_HOMEPAGE" is supported.
func (o GetLogAnalyticsPreferenceItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsPreferenceItem) string { return v.Name }).(pulumi.StringOutput)
}

// The preference value.
func (o GetLogAnalyticsPreferenceItemOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsPreferenceItem) string { return v.Value }).(pulumi.StringOutput)
}

type GetLogAnalyticsPreferenceItemArrayOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsPreferenceItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsPreferenceItem)(nil)).Elem()
}

func (o GetLogAnalyticsPreferenceItemArrayOutput) ToGetLogAnalyticsPreferenceItemArrayOutput() GetLogAnalyticsPreferenceItemArrayOutput {
	return o
}

func (o GetLogAnalyticsPreferenceItemArrayOutput) ToGetLogAnalyticsPreferenceItemArrayOutputWithContext(ctx context.Context) GetLogAnalyticsPreferenceItemArrayOutput {
	return o
}

func (o GetLogAnalyticsPreferenceItemArrayOutput) Index(i pulumi.IntInput) GetLogAnalyticsPreferenceItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogAnalyticsPreferenceItem {
		return vs[0].([]GetLogAnalyticsPreferenceItem)[vs[1].(int)]
	}).(GetLogAnalyticsPreferenceItemOutput)
}

type GetLogAnalyticsResourceCategoriesListCategory struct {
	// The category description.
	Description string `pulumi:"description"`
	// The category display name.
	DisplayName string `pulumi:"displayName"`
	// The system flag. A value of false denotes a user-created category assignment. A value of true denotes an Oracle-defined category assignment.
	IsSystem bool `pulumi:"isSystem"`
	// The unique name that identifies the category.
	Name string `pulumi:"name"`
	// The category type. Values include "PRODUCT", "TIER", "VENDOR" and "GENERIC".
	Type string `pulumi:"type"`
}

// GetLogAnalyticsResourceCategoriesListCategoryInput is an input type that accepts GetLogAnalyticsResourceCategoriesListCategoryArgs and GetLogAnalyticsResourceCategoriesListCategoryOutput values.
// You can construct a concrete instance of `GetLogAnalyticsResourceCategoriesListCategoryInput` via:
//
//	GetLogAnalyticsResourceCategoriesListCategoryArgs{...}
type GetLogAnalyticsResourceCategoriesListCategoryInput interface {
	pulumi.Input

	ToGetLogAnalyticsResourceCategoriesListCategoryOutput() GetLogAnalyticsResourceCategoriesListCategoryOutput
	ToGetLogAnalyticsResourceCategoriesListCategoryOutputWithContext(context.Context) GetLogAnalyticsResourceCategoriesListCategoryOutput
}

type GetLogAnalyticsResourceCategoriesListCategoryArgs struct {
	// The category description.
	Description pulumi.StringInput `pulumi:"description"`
	// The category display name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The system flag. A value of false denotes a user-created category assignment. A value of true denotes an Oracle-defined category assignment.
	IsSystem pulumi.BoolInput `pulumi:"isSystem"`
	// The unique name that identifies the category.
	Name pulumi.StringInput `pulumi:"name"`
	// The category type. Values include "PRODUCT", "TIER", "VENDOR" and "GENERIC".
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetLogAnalyticsResourceCategoriesListCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsResourceCategoriesListCategory)(nil)).Elem()
}

func (i GetLogAnalyticsResourceCategoriesListCategoryArgs) ToGetLogAnalyticsResourceCategoriesListCategoryOutput() GetLogAnalyticsResourceCategoriesListCategoryOutput {
	return i.ToGetLogAnalyticsResourceCategoriesListCategoryOutputWithContext(context.Background())
}

func (i GetLogAnalyticsResourceCategoriesListCategoryArgs) ToGetLogAnalyticsResourceCategoriesListCategoryOutputWithContext(ctx context.Context) GetLogAnalyticsResourceCategoriesListCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsResourceCategoriesListCategoryOutput)
}

// GetLogAnalyticsResourceCategoriesListCategoryArrayInput is an input type that accepts GetLogAnalyticsResourceCategoriesListCategoryArray and GetLogAnalyticsResourceCategoriesListCategoryArrayOutput values.
// You can construct a concrete instance of `GetLogAnalyticsResourceCategoriesListCategoryArrayInput` via:
//
//	GetLogAnalyticsResourceCategoriesListCategoryArray{ GetLogAnalyticsResourceCategoriesListCategoryArgs{...} }
type GetLogAnalyticsResourceCategoriesListCategoryArrayInput interface {
	pulumi.Input

	ToGetLogAnalyticsResourceCategoriesListCategoryArrayOutput() GetLogAnalyticsResourceCategoriesListCategoryArrayOutput
	ToGetLogAnalyticsResourceCategoriesListCategoryArrayOutputWithContext(context.Context) GetLogAnalyticsResourceCategoriesListCategoryArrayOutput
}

type GetLogAnalyticsResourceCategoriesListCategoryArray []GetLogAnalyticsResourceCategoriesListCategoryInput

func (GetLogAnalyticsResourceCategoriesListCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsResourceCategoriesListCategory)(nil)).Elem()
}

func (i GetLogAnalyticsResourceCategoriesListCategoryArray) ToGetLogAnalyticsResourceCategoriesListCategoryArrayOutput() GetLogAnalyticsResourceCategoriesListCategoryArrayOutput {
	return i.ToGetLogAnalyticsResourceCategoriesListCategoryArrayOutputWithContext(context.Background())
}

func (i GetLogAnalyticsResourceCategoriesListCategoryArray) ToGetLogAnalyticsResourceCategoriesListCategoryArrayOutputWithContext(ctx context.Context) GetLogAnalyticsResourceCategoriesListCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsResourceCategoriesListCategoryArrayOutput)
}

type GetLogAnalyticsResourceCategoriesListCategoryOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsResourceCategoriesListCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsResourceCategoriesListCategory)(nil)).Elem()
}

func (o GetLogAnalyticsResourceCategoriesListCategoryOutput) ToGetLogAnalyticsResourceCategoriesListCategoryOutput() GetLogAnalyticsResourceCategoriesListCategoryOutput {
	return o
}

func (o GetLogAnalyticsResourceCategoriesListCategoryOutput) ToGetLogAnalyticsResourceCategoriesListCategoryOutputWithContext(ctx context.Context) GetLogAnalyticsResourceCategoriesListCategoryOutput {
	return o
}

// The category description.
func (o GetLogAnalyticsResourceCategoriesListCategoryOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsResourceCategoriesListCategory) string { return v.Description }).(pulumi.StringOutput)
}

// The category display name.
func (o GetLogAnalyticsResourceCategoriesListCategoryOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsResourceCategoriesListCategory) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The system flag. A value of false denotes a user-created category assignment. A value of true denotes an Oracle-defined category assignment.
func (o GetLogAnalyticsResourceCategoriesListCategoryOutput) IsSystem() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLogAnalyticsResourceCategoriesListCategory) bool { return v.IsSystem }).(pulumi.BoolOutput)
}

// The unique name that identifies the category.
func (o GetLogAnalyticsResourceCategoriesListCategoryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsResourceCategoriesListCategory) string { return v.Name }).(pulumi.StringOutput)
}

// The category type. Values include "PRODUCT", "TIER", "VENDOR" and "GENERIC".
func (o GetLogAnalyticsResourceCategoriesListCategoryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsResourceCategoriesListCategory) string { return v.Type }).(pulumi.StringOutput)
}

type GetLogAnalyticsResourceCategoriesListCategoryArrayOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsResourceCategoriesListCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsResourceCategoriesListCategory)(nil)).Elem()
}

func (o GetLogAnalyticsResourceCategoriesListCategoryArrayOutput) ToGetLogAnalyticsResourceCategoriesListCategoryArrayOutput() GetLogAnalyticsResourceCategoriesListCategoryArrayOutput {
	return o
}

func (o GetLogAnalyticsResourceCategoriesListCategoryArrayOutput) ToGetLogAnalyticsResourceCategoriesListCategoryArrayOutputWithContext(ctx context.Context) GetLogAnalyticsResourceCategoriesListCategoryArrayOutput {
	return o
}

func (o GetLogAnalyticsResourceCategoriesListCategoryArrayOutput) Index(i pulumi.IntInput) GetLogAnalyticsResourceCategoriesListCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogAnalyticsResourceCategoriesListCategory {
		return vs[0].([]GetLogAnalyticsResourceCategoriesListCategory)[vs[1].(int)]
	}).(GetLogAnalyticsResourceCategoriesListCategoryOutput)
}

type GetLogAnalyticsResourceCategoriesListItem struct {
	// The category name to which this resource belongs.
	CategoryName string `pulumi:"categoryName"`
	// The system flag. A value of false denotes a user-created category assignment. A value of true denotes an Oracle-defined category assignment.
	IsSystem bool `pulumi:"isSystem"`
	// The unique identifier of the resource, usually a name or ocid.
	ResourceId string `pulumi:"resourceId"`
	// The resource type.
	ResourceType string `pulumi:"resourceType"`
}

// GetLogAnalyticsResourceCategoriesListItemInput is an input type that accepts GetLogAnalyticsResourceCategoriesListItemArgs and GetLogAnalyticsResourceCategoriesListItemOutput values.
// You can construct a concrete instance of `GetLogAnalyticsResourceCategoriesListItemInput` via:
//
//	GetLogAnalyticsResourceCategoriesListItemArgs{...}
type GetLogAnalyticsResourceCategoriesListItemInput interface {
	pulumi.Input

	ToGetLogAnalyticsResourceCategoriesListItemOutput() GetLogAnalyticsResourceCategoriesListItemOutput
	ToGetLogAnalyticsResourceCategoriesListItemOutputWithContext(context.Context) GetLogAnalyticsResourceCategoriesListItemOutput
}

type GetLogAnalyticsResourceCategoriesListItemArgs struct {
	// The category name to which this resource belongs.
	CategoryName pulumi.StringInput `pulumi:"categoryName"`
	// The system flag. A value of false denotes a user-created category assignment. A value of true denotes an Oracle-defined category assignment.
	IsSystem pulumi.BoolInput `pulumi:"isSystem"`
	// The unique identifier of the resource, usually a name or ocid.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// The resource type.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
}

func (GetLogAnalyticsResourceCategoriesListItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsResourceCategoriesListItem)(nil)).Elem()
}

func (i GetLogAnalyticsResourceCategoriesListItemArgs) ToGetLogAnalyticsResourceCategoriesListItemOutput() GetLogAnalyticsResourceCategoriesListItemOutput {
	return i.ToGetLogAnalyticsResourceCategoriesListItemOutputWithContext(context.Background())
}

func (i GetLogAnalyticsResourceCategoriesListItemArgs) ToGetLogAnalyticsResourceCategoriesListItemOutputWithContext(ctx context.Context) GetLogAnalyticsResourceCategoriesListItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsResourceCategoriesListItemOutput)
}

// GetLogAnalyticsResourceCategoriesListItemArrayInput is an input type that accepts GetLogAnalyticsResourceCategoriesListItemArray and GetLogAnalyticsResourceCategoriesListItemArrayOutput values.
// You can construct a concrete instance of `GetLogAnalyticsResourceCategoriesListItemArrayInput` via:
//
//	GetLogAnalyticsResourceCategoriesListItemArray{ GetLogAnalyticsResourceCategoriesListItemArgs{...} }
type GetLogAnalyticsResourceCategoriesListItemArrayInput interface {
	pulumi.Input

	ToGetLogAnalyticsResourceCategoriesListItemArrayOutput() GetLogAnalyticsResourceCategoriesListItemArrayOutput
	ToGetLogAnalyticsResourceCategoriesListItemArrayOutputWithContext(context.Context) GetLogAnalyticsResourceCategoriesListItemArrayOutput
}

type GetLogAnalyticsResourceCategoriesListItemArray []GetLogAnalyticsResourceCategoriesListItemInput

func (GetLogAnalyticsResourceCategoriesListItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsResourceCategoriesListItem)(nil)).Elem()
}

func (i GetLogAnalyticsResourceCategoriesListItemArray) ToGetLogAnalyticsResourceCategoriesListItemArrayOutput() GetLogAnalyticsResourceCategoriesListItemArrayOutput {
	return i.ToGetLogAnalyticsResourceCategoriesListItemArrayOutputWithContext(context.Background())
}

func (i GetLogAnalyticsResourceCategoriesListItemArray) ToGetLogAnalyticsResourceCategoriesListItemArrayOutputWithContext(ctx context.Context) GetLogAnalyticsResourceCategoriesListItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogAnalyticsResourceCategoriesListItemArrayOutput)
}

type GetLogAnalyticsResourceCategoriesListItemOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsResourceCategoriesListItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogAnalyticsResourceCategoriesListItem)(nil)).Elem()
}

func (o GetLogAnalyticsResourceCategoriesListItemOutput) ToGetLogAnalyticsResourceCategoriesListItemOutput() GetLogAnalyticsResourceCategoriesListItemOutput {
	return o
}

func (o GetLogAnalyticsResourceCategoriesListItemOutput) ToGetLogAnalyticsResourceCategoriesListItemOutputWithContext(ctx context.Context) GetLogAnalyticsResourceCategoriesListItemOutput {
	return o
}

// The category name to which this resource belongs.
func (o GetLogAnalyticsResourceCategoriesListItemOutput) CategoryName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsResourceCategoriesListItem) string { return v.CategoryName }).(pulumi.StringOutput)
}

// The system flag. A value of false denotes a user-created category assignment. A value of true denotes an Oracle-defined category assignment.
func (o GetLogAnalyticsResourceCategoriesListItemOutput) IsSystem() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLogAnalyticsResourceCategoriesListItem) bool { return v.IsSystem }).(pulumi.BoolOutput)
}

// The unique identifier of the resource, usually a name or ocid.
func (o GetLogAnalyticsResourceCategoriesListItemOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsResourceCategoriesListItem) string { return v.ResourceId }).(pulumi.StringOutput)
}

// The resource type.
func (o GetLogAnalyticsResourceCategoriesListItemOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogAnalyticsResourceCategoriesListItem) string { return v.ResourceType }).(pulumi.StringOutput)
}

type GetLogAnalyticsResourceCategoriesListItemArrayOutput struct{ *pulumi.OutputState }

func (GetLogAnalyticsResourceCategoriesListItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogAnalyticsResourceCategoriesListItem)(nil)).Elem()
}

func (o GetLogAnalyticsResourceCategoriesListItemArrayOutput) ToGetLogAnalyticsResourceCategoriesListItemArrayOutput() GetLogAnalyticsResourceCategoriesListItemArrayOutput {
	return o
}

func (o GetLogAnalyticsResourceCategoriesListItemArrayOutput) ToGetLogAnalyticsResourceCategoriesListItemArrayOutputWithContext(ctx context.Context) GetLogAnalyticsResourceCategoriesListItemArrayOutput {
	return o
}

func (o GetLogAnalyticsResourceCategoriesListItemArrayOutput) Index(i pulumi.IntInput) GetLogAnalyticsResourceCategoriesListItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogAnalyticsResourceCategoriesListItem {
		return vs[0].([]GetLogAnalyticsResourceCategoriesListItem)[vs[1].(int)]
	}).(GetLogAnalyticsResourceCategoriesListItemOutput)
}

type GetNamespaceScheduledTaskAction struct {
	// if true, purge child compartments data
	CompartmentIdInSubtree bool `pulumi:"compartmentIdInSubtree"`
	// the type of the log data to be purged
	DataType string `pulumi:"dataType"`
	// the compartment OCID under which the data will be purged
	PurgeCompartmentId string `pulumi:"purgeCompartmentId"`
	// The duration of data to be retained, which is used to calculate the timeDataEnded when the task fires. The value should be negative. Purge duration in ISO 8601 extended format as described in https://en.wikipedia.org/wiki/ISO_8601#Durations. The largest supported unit is D, e.g. -P365D (not -P1Y) or -P14D (not -P2W).
	PurgeDuration string `pulumi:"purgeDuration"`
	// Purge query string.
	QueryString string `pulumi:"queryString"`
	// The ManagementSavedSearch id [OCID] utilized in the action.
	SavedSearchId string `pulumi:"savedSearchId"`
	// Schedule type discriminator.
	Type string `pulumi:"type"`
}

// GetNamespaceScheduledTaskActionInput is an input type that accepts GetNamespaceScheduledTaskActionArgs and GetNamespaceScheduledTaskActionOutput values.
// You can construct a concrete instance of `GetNamespaceScheduledTaskActionInput` via:
//
//	GetNamespaceScheduledTaskActionArgs{...}
type GetNamespaceScheduledTaskActionInput interface {
	pulumi.Input

	ToGetNamespaceScheduledTaskActionOutput() GetNamespaceScheduledTaskActionOutput
	ToGetNamespaceScheduledTaskActionOutputWithContext(context.Context) GetNamespaceScheduledTaskActionOutput
}

type GetNamespaceScheduledTaskActionArgs struct {
	// if true, purge child compartments data
	CompartmentIdInSubtree pulumi.BoolInput `pulumi:"compartmentIdInSubtree"`
	// the type of the log data to be purged
	DataType pulumi.StringInput `pulumi:"dataType"`
	// the compartment OCID under which the data will be purged
	PurgeCompartmentId pulumi.StringInput `pulumi:"purgeCompartmentId"`
	// The duration of data to be retained, which is used to calculate the timeDataEnded when the task fires. The value should be negative. Purge duration in ISO 8601 extended format as described in https://en.wikipedia.org/wiki/ISO_8601#Durations. The largest supported unit is D, e.g. -P365D (not -P1Y) or -P14D (not -P2W).
	PurgeDuration pulumi.StringInput `pulumi:"purgeDuration"`
	// Purge query string.
	QueryString pulumi.StringInput `pulumi:"queryString"`
	// The ManagementSavedSearch id [OCID] utilized in the action.
	SavedSearchId pulumi.StringInput `pulumi:"savedSearchId"`
	// Schedule type discriminator.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetNamespaceScheduledTaskActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespaceScheduledTaskAction)(nil)).Elem()
}

func (i GetNamespaceScheduledTaskActionArgs) ToGetNamespaceScheduledTaskActionOutput() GetNamespaceScheduledTaskActionOutput {
	return i.ToGetNamespaceScheduledTaskActionOutputWithContext(context.Background())
}

func (i GetNamespaceScheduledTaskActionArgs) ToGetNamespaceScheduledTaskActionOutputWithContext(ctx context.Context) GetNamespaceScheduledTaskActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNamespaceScheduledTaskActionOutput)
}

// GetNamespaceScheduledTaskActionArrayInput is an input type that accepts GetNamespaceScheduledTaskActionArray and GetNamespaceScheduledTaskActionArrayOutput values.
// You can construct a concrete instance of `GetNamespaceScheduledTaskActionArrayInput` via:
//
//	GetNamespaceScheduledTaskActionArray{ GetNamespaceScheduledTaskActionArgs{...} }
type GetNamespaceScheduledTaskActionArrayInput interface {
	pulumi.Input

	ToGetNamespaceScheduledTaskActionArrayOutput() GetNamespaceScheduledTaskActionArrayOutput
	ToGetNamespaceScheduledTaskActionArrayOutputWithContext(context.Context) GetNamespaceScheduledTaskActionArrayOutput
}

type GetNamespaceScheduledTaskActionArray []GetNamespaceScheduledTaskActionInput

func (GetNamespaceScheduledTaskActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNamespaceScheduledTaskAction)(nil)).Elem()
}

func (i GetNamespaceScheduledTaskActionArray) ToGetNamespaceScheduledTaskActionArrayOutput() GetNamespaceScheduledTaskActionArrayOutput {
	return i.ToGetNamespaceScheduledTaskActionArrayOutputWithContext(context.Background())
}

func (i GetNamespaceScheduledTaskActionArray) ToGetNamespaceScheduledTaskActionArrayOutputWithContext(ctx context.Context) GetNamespaceScheduledTaskActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNamespaceScheduledTaskActionArrayOutput)
}

type GetNamespaceScheduledTaskActionOutput struct{ *pulumi.OutputState }

func (GetNamespaceScheduledTaskActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespaceScheduledTaskAction)(nil)).Elem()
}

func (o GetNamespaceScheduledTaskActionOutput) ToGetNamespaceScheduledTaskActionOutput() GetNamespaceScheduledTaskActionOutput {
	return o
}

func (o GetNamespaceScheduledTaskActionOutput) ToGetNamespaceScheduledTaskActionOutputWithContext(ctx context.Context) GetNamespaceScheduledTaskActionOutput {
	return o
}

// if true, purge child compartments data
func (o GetNamespaceScheduledTaskActionOutput) CompartmentIdInSubtree() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTaskAction) bool { return v.CompartmentIdInSubtree }).(pulumi.BoolOutput)
}

// the type of the log data to be purged
func (o GetNamespaceScheduledTaskActionOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTaskAction) string { return v.DataType }).(pulumi.StringOutput)
}

// the compartment OCID under which the data will be purged
func (o GetNamespaceScheduledTaskActionOutput) PurgeCompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTaskAction) string { return v.PurgeCompartmentId }).(pulumi.StringOutput)
}

// The duration of data to be retained, which is used to calculate the timeDataEnded when the task fires. The value should be negative. Purge duration in ISO 8601 extended format as described in https://en.wikipedia.org/wiki/ISO_8601#Durations. The largest supported unit is D, e.g. -P365D (not -P1Y) or -P14D (not -P2W).
func (o GetNamespaceScheduledTaskActionOutput) PurgeDuration() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTaskAction) string { return v.PurgeDuration }).(pulumi.StringOutput)
}

// Purge query string.
func (o GetNamespaceScheduledTaskActionOutput) QueryString() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTaskAction) string { return v.QueryString }).(pulumi.StringOutput)
}

// The ManagementSavedSearch id [OCID] utilized in the action.
func (o GetNamespaceScheduledTaskActionOutput) SavedSearchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTaskAction) string { return v.SavedSearchId }).(pulumi.StringOutput)
}

// Schedule type discriminator.
func (o GetNamespaceScheduledTaskActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTaskAction) string { return v.Type }).(pulumi.StringOutput)
}

type GetNamespaceScheduledTaskActionArrayOutput struct{ *pulumi.OutputState }

func (GetNamespaceScheduledTaskActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNamespaceScheduledTaskAction)(nil)).Elem()
}

func (o GetNamespaceScheduledTaskActionArrayOutput) ToGetNamespaceScheduledTaskActionArrayOutput() GetNamespaceScheduledTaskActionArrayOutput {
	return o
}

func (o GetNamespaceScheduledTaskActionArrayOutput) ToGetNamespaceScheduledTaskActionArrayOutputWithContext(ctx context.Context) GetNamespaceScheduledTaskActionArrayOutput {
	return o
}

func (o GetNamespaceScheduledTaskActionArrayOutput) Index(i pulumi.IntInput) GetNamespaceScheduledTaskActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNamespaceScheduledTaskAction {
		return vs[0].([]GetNamespaceScheduledTaskAction)[vs[1].(int)]
	}).(GetNamespaceScheduledTaskActionOutput)
}

type GetNamespaceScheduledTaskSchedule struct {
	Schedules []GetNamespaceScheduledTaskScheduleSchedule `pulumi:"schedules"`
}

// GetNamespaceScheduledTaskScheduleInput is an input type that accepts GetNamespaceScheduledTaskScheduleArgs and GetNamespaceScheduledTaskScheduleOutput values.
// You can construct a concrete instance of `GetNamespaceScheduledTaskScheduleInput` via:
//
//	GetNamespaceScheduledTaskScheduleArgs{...}
type GetNamespaceScheduledTaskScheduleInput interface {
	pulumi.Input

	ToGetNamespaceScheduledTaskScheduleOutput() GetNamespaceScheduledTaskScheduleOutput
	ToGetNamespaceScheduledTaskScheduleOutputWithContext(context.Context) GetNamespaceScheduledTaskScheduleOutput
}

type GetNamespaceScheduledTaskScheduleArgs struct {
	Schedules GetNamespaceScheduledTaskScheduleScheduleArrayInput `pulumi:"schedules"`
}

func (GetNamespaceScheduledTaskScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespaceScheduledTaskSchedule)(nil)).Elem()
}

func (i GetNamespaceScheduledTaskScheduleArgs) ToGetNamespaceScheduledTaskScheduleOutput() GetNamespaceScheduledTaskScheduleOutput {
	return i.ToGetNamespaceScheduledTaskScheduleOutputWithContext(context.Background())
}

func (i GetNamespaceScheduledTaskScheduleArgs) ToGetNamespaceScheduledTaskScheduleOutputWithContext(ctx context.Context) GetNamespaceScheduledTaskScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNamespaceScheduledTaskScheduleOutput)
}

// GetNamespaceScheduledTaskScheduleArrayInput is an input type that accepts GetNamespaceScheduledTaskScheduleArray and GetNamespaceScheduledTaskScheduleArrayOutput values.
// You can construct a concrete instance of `GetNamespaceScheduledTaskScheduleArrayInput` via:
//
//	GetNamespaceScheduledTaskScheduleArray{ GetNamespaceScheduledTaskScheduleArgs{...} }
type GetNamespaceScheduledTaskScheduleArrayInput interface {
	pulumi.Input

	ToGetNamespaceScheduledTaskScheduleArrayOutput() GetNamespaceScheduledTaskScheduleArrayOutput
	ToGetNamespaceScheduledTaskScheduleArrayOutputWithContext(context.Context) GetNamespaceScheduledTaskScheduleArrayOutput
}

type GetNamespaceScheduledTaskScheduleArray []GetNamespaceScheduledTaskScheduleInput

func (GetNamespaceScheduledTaskScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNamespaceScheduledTaskSchedule)(nil)).Elem()
}

func (i GetNamespaceScheduledTaskScheduleArray) ToGetNamespaceScheduledTaskScheduleArrayOutput() GetNamespaceScheduledTaskScheduleArrayOutput {
	return i.ToGetNamespaceScheduledTaskScheduleArrayOutputWithContext(context.Background())
}

func (i GetNamespaceScheduledTaskScheduleArray) ToGetNamespaceScheduledTaskScheduleArrayOutputWithContext(ctx context.Context) GetNamespaceScheduledTaskScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNamespaceScheduledTaskScheduleArrayOutput)
}

type GetNamespaceScheduledTaskScheduleOutput struct{ *pulumi.OutputState }

func (GetNamespaceScheduledTaskScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespaceScheduledTaskSchedule)(nil)).Elem()
}

func (o GetNamespaceScheduledTaskScheduleOutput) ToGetNamespaceScheduledTaskScheduleOutput() GetNamespaceScheduledTaskScheduleOutput {
	return o
}

func (o GetNamespaceScheduledTaskScheduleOutput) ToGetNamespaceScheduledTaskScheduleOutputWithContext(ctx context.Context) GetNamespaceScheduledTaskScheduleOutput {
	return o
}

func (o GetNamespaceScheduledTaskScheduleOutput) Schedules() GetNamespaceScheduledTaskScheduleScheduleArrayOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTaskSchedule) []GetNamespaceScheduledTaskScheduleSchedule {
		return v.Schedules
	}).(GetNamespaceScheduledTaskScheduleScheduleArrayOutput)
}

type GetNamespaceScheduledTaskScheduleArrayOutput struct{ *pulumi.OutputState }

func (GetNamespaceScheduledTaskScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNamespaceScheduledTaskSchedule)(nil)).Elem()
}

func (o GetNamespaceScheduledTaskScheduleArrayOutput) ToGetNamespaceScheduledTaskScheduleArrayOutput() GetNamespaceScheduledTaskScheduleArrayOutput {
	return o
}

func (o GetNamespaceScheduledTaskScheduleArrayOutput) ToGetNamespaceScheduledTaskScheduleArrayOutputWithContext(ctx context.Context) GetNamespaceScheduledTaskScheduleArrayOutput {
	return o
}

func (o GetNamespaceScheduledTaskScheduleArrayOutput) Index(i pulumi.IntInput) GetNamespaceScheduledTaskScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNamespaceScheduledTaskSchedule {
		return vs[0].([]GetNamespaceScheduledTaskSchedule)[vs[1].(int)]
	}).(GetNamespaceScheduledTaskScheduleOutput)
}

type GetNamespaceScheduledTaskScheduleSchedule struct {
	// Value in cron format.
	Expression string `pulumi:"expression"`
	// Schedule misfire retry policy.
	MisfirePolicy string `pulumi:"misfirePolicy"`
	// Recurring interval in ISO 8601 extended format as described in https://en.wikipedia.org/wiki/ISO_8601#Durations. The largest supported unit is D, e.g. P14D (not P2W). The value must be at least 5 minutes (PT5M) and at most 3 weeks (P21D or PT30240M).
	RecurringInterval string `pulumi:"recurringInterval"`
	// Number of times (0-based) to execute until auto-stop. Default value -1 will execute indefinitely. Value 0 will execute once.
	RepeatCount int `pulumi:"repeatCount"`
	// Time zone, by default UTC.
	TimeZone string `pulumi:"timeZone"`
	// Schedule type discriminator.
	Type string `pulumi:"type"`
}

// GetNamespaceScheduledTaskScheduleScheduleInput is an input type that accepts GetNamespaceScheduledTaskScheduleScheduleArgs and GetNamespaceScheduledTaskScheduleScheduleOutput values.
// You can construct a concrete instance of `GetNamespaceScheduledTaskScheduleScheduleInput` via:
//
//	GetNamespaceScheduledTaskScheduleScheduleArgs{...}
type GetNamespaceScheduledTaskScheduleScheduleInput interface {
	pulumi.Input

	ToGetNamespaceScheduledTaskScheduleScheduleOutput() GetNamespaceScheduledTaskScheduleScheduleOutput
	ToGetNamespaceScheduledTaskScheduleScheduleOutputWithContext(context.Context) GetNamespaceScheduledTaskScheduleScheduleOutput
}

type GetNamespaceScheduledTaskScheduleScheduleArgs struct {
	// Value in cron format.
	Expression pulumi.StringInput `pulumi:"expression"`
	// Schedule misfire retry policy.
	MisfirePolicy pulumi.StringInput `pulumi:"misfirePolicy"`
	// Recurring interval in ISO 8601 extended format as described in https://en.wikipedia.org/wiki/ISO_8601#Durations. The largest supported unit is D, e.g. P14D (not P2W). The value must be at least 5 minutes (PT5M) and at most 3 weeks (P21D or PT30240M).
	RecurringInterval pulumi.StringInput `pulumi:"recurringInterval"`
	// Number of times (0-based) to execute until auto-stop. Default value -1 will execute indefinitely. Value 0 will execute once.
	RepeatCount pulumi.IntInput `pulumi:"repeatCount"`
	// Time zone, by default UTC.
	TimeZone pulumi.StringInput `pulumi:"timeZone"`
	// Schedule type discriminator.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetNamespaceScheduledTaskScheduleScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespaceScheduledTaskScheduleSchedule)(nil)).Elem()
}

func (i GetNamespaceScheduledTaskScheduleScheduleArgs) ToGetNamespaceScheduledTaskScheduleScheduleOutput() GetNamespaceScheduledTaskScheduleScheduleOutput {
	return i.ToGetNamespaceScheduledTaskScheduleScheduleOutputWithContext(context.Background())
}

func (i GetNamespaceScheduledTaskScheduleScheduleArgs) ToGetNamespaceScheduledTaskScheduleScheduleOutputWithContext(ctx context.Context) GetNamespaceScheduledTaskScheduleScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNamespaceScheduledTaskScheduleScheduleOutput)
}

// GetNamespaceScheduledTaskScheduleScheduleArrayInput is an input type that accepts GetNamespaceScheduledTaskScheduleScheduleArray and GetNamespaceScheduledTaskScheduleScheduleArrayOutput values.
// You can construct a concrete instance of `GetNamespaceScheduledTaskScheduleScheduleArrayInput` via:
//
//	GetNamespaceScheduledTaskScheduleScheduleArray{ GetNamespaceScheduledTaskScheduleScheduleArgs{...} }
type GetNamespaceScheduledTaskScheduleScheduleArrayInput interface {
	pulumi.Input

	ToGetNamespaceScheduledTaskScheduleScheduleArrayOutput() GetNamespaceScheduledTaskScheduleScheduleArrayOutput
	ToGetNamespaceScheduledTaskScheduleScheduleArrayOutputWithContext(context.Context) GetNamespaceScheduledTaskScheduleScheduleArrayOutput
}

type GetNamespaceScheduledTaskScheduleScheduleArray []GetNamespaceScheduledTaskScheduleScheduleInput

func (GetNamespaceScheduledTaskScheduleScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNamespaceScheduledTaskScheduleSchedule)(nil)).Elem()
}

func (i GetNamespaceScheduledTaskScheduleScheduleArray) ToGetNamespaceScheduledTaskScheduleScheduleArrayOutput() GetNamespaceScheduledTaskScheduleScheduleArrayOutput {
	return i.ToGetNamespaceScheduledTaskScheduleScheduleArrayOutputWithContext(context.Background())
}

func (i GetNamespaceScheduledTaskScheduleScheduleArray) ToGetNamespaceScheduledTaskScheduleScheduleArrayOutputWithContext(ctx context.Context) GetNamespaceScheduledTaskScheduleScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNamespaceScheduledTaskScheduleScheduleArrayOutput)
}

type GetNamespaceScheduledTaskScheduleScheduleOutput struct{ *pulumi.OutputState }

func (GetNamespaceScheduledTaskScheduleScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespaceScheduledTaskScheduleSchedule)(nil)).Elem()
}

func (o GetNamespaceScheduledTaskScheduleScheduleOutput) ToGetNamespaceScheduledTaskScheduleScheduleOutput() GetNamespaceScheduledTaskScheduleScheduleOutput {
	return o
}

func (o GetNamespaceScheduledTaskScheduleScheduleOutput) ToGetNamespaceScheduledTaskScheduleScheduleOutputWithContext(ctx context.Context) GetNamespaceScheduledTaskScheduleScheduleOutput {
	return o
}

// Value in cron format.
func (o GetNamespaceScheduledTaskScheduleScheduleOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTaskScheduleSchedule) string { return v.Expression }).(pulumi.StringOutput)
}

// Schedule misfire retry policy.
func (o GetNamespaceScheduledTaskScheduleScheduleOutput) MisfirePolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTaskScheduleSchedule) string { return v.MisfirePolicy }).(pulumi.StringOutput)
}

// Recurring interval in ISO 8601 extended format as described in https://en.wikipedia.org/wiki/ISO_8601#Durations. The largest supported unit is D, e.g. P14D (not P2W). The value must be at least 5 minutes (PT5M) and at most 3 weeks (P21D or PT30240M).
func (o GetNamespaceScheduledTaskScheduleScheduleOutput) RecurringInterval() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTaskScheduleSchedule) string { return v.RecurringInterval }).(pulumi.StringOutput)
}

// Number of times (0-based) to execute until auto-stop. Default value -1 will execute indefinitely. Value 0 will execute once.
func (o GetNamespaceScheduledTaskScheduleScheduleOutput) RepeatCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTaskScheduleSchedule) int { return v.RepeatCount }).(pulumi.IntOutput)
}

// Time zone, by default UTC.
func (o GetNamespaceScheduledTaskScheduleScheduleOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTaskScheduleSchedule) string { return v.TimeZone }).(pulumi.StringOutput)
}

// Schedule type discriminator.
func (o GetNamespaceScheduledTaskScheduleScheduleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTaskScheduleSchedule) string { return v.Type }).(pulumi.StringOutput)
}

type GetNamespaceScheduledTaskScheduleScheduleArrayOutput struct{ *pulumi.OutputState }

func (GetNamespaceScheduledTaskScheduleScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNamespaceScheduledTaskScheduleSchedule)(nil)).Elem()
}

func (o GetNamespaceScheduledTaskScheduleScheduleArrayOutput) ToGetNamespaceScheduledTaskScheduleScheduleArrayOutput() GetNamespaceScheduledTaskScheduleScheduleArrayOutput {
	return o
}

func (o GetNamespaceScheduledTaskScheduleScheduleArrayOutput) ToGetNamespaceScheduledTaskScheduleScheduleArrayOutputWithContext(ctx context.Context) GetNamespaceScheduledTaskScheduleScheduleArrayOutput {
	return o
}

func (o GetNamespaceScheduledTaskScheduleScheduleArrayOutput) Index(i pulumi.IntInput) GetNamespaceScheduledTaskScheduleScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNamespaceScheduledTaskScheduleSchedule {
		return vs[0].([]GetNamespaceScheduledTaskScheduleSchedule)[vs[1].(int)]
	}).(GetNamespaceScheduledTaskScheduleScheduleOutput)
}

type GetNamespaceScheduledTasksFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetNamespaceScheduledTasksFilterInput is an input type that accepts GetNamespaceScheduledTasksFilterArgs and GetNamespaceScheduledTasksFilterOutput values.
// You can construct a concrete instance of `GetNamespaceScheduledTasksFilterInput` via:
//
//	GetNamespaceScheduledTasksFilterArgs{...}
type GetNamespaceScheduledTasksFilterInput interface {
	pulumi.Input

	ToGetNamespaceScheduledTasksFilterOutput() GetNamespaceScheduledTasksFilterOutput
	ToGetNamespaceScheduledTasksFilterOutputWithContext(context.Context) GetNamespaceScheduledTasksFilterOutput
}

type GetNamespaceScheduledTasksFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNamespaceScheduledTasksFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespaceScheduledTasksFilter)(nil)).Elem()
}

func (i GetNamespaceScheduledTasksFilterArgs) ToGetNamespaceScheduledTasksFilterOutput() GetNamespaceScheduledTasksFilterOutput {
	return i.ToGetNamespaceScheduledTasksFilterOutputWithContext(context.Background())
}

func (i GetNamespaceScheduledTasksFilterArgs) ToGetNamespaceScheduledTasksFilterOutputWithContext(ctx context.Context) GetNamespaceScheduledTasksFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNamespaceScheduledTasksFilterOutput)
}

// GetNamespaceScheduledTasksFilterArrayInput is an input type that accepts GetNamespaceScheduledTasksFilterArray and GetNamespaceScheduledTasksFilterArrayOutput values.
// You can construct a concrete instance of `GetNamespaceScheduledTasksFilterArrayInput` via:
//
//	GetNamespaceScheduledTasksFilterArray{ GetNamespaceScheduledTasksFilterArgs{...} }
type GetNamespaceScheduledTasksFilterArrayInput interface {
	pulumi.Input

	ToGetNamespaceScheduledTasksFilterArrayOutput() GetNamespaceScheduledTasksFilterArrayOutput
	ToGetNamespaceScheduledTasksFilterArrayOutputWithContext(context.Context) GetNamespaceScheduledTasksFilterArrayOutput
}

type GetNamespaceScheduledTasksFilterArray []GetNamespaceScheduledTasksFilterInput

func (GetNamespaceScheduledTasksFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNamespaceScheduledTasksFilter)(nil)).Elem()
}

func (i GetNamespaceScheduledTasksFilterArray) ToGetNamespaceScheduledTasksFilterArrayOutput() GetNamespaceScheduledTasksFilterArrayOutput {
	return i.ToGetNamespaceScheduledTasksFilterArrayOutputWithContext(context.Background())
}

func (i GetNamespaceScheduledTasksFilterArray) ToGetNamespaceScheduledTasksFilterArrayOutputWithContext(ctx context.Context) GetNamespaceScheduledTasksFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNamespaceScheduledTasksFilterArrayOutput)
}

type GetNamespaceScheduledTasksFilterOutput struct{ *pulumi.OutputState }

func (GetNamespaceScheduledTasksFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespaceScheduledTasksFilter)(nil)).Elem()
}

func (o GetNamespaceScheduledTasksFilterOutput) ToGetNamespaceScheduledTasksFilterOutput() GetNamespaceScheduledTasksFilterOutput {
	return o
}

func (o GetNamespaceScheduledTasksFilterOutput) ToGetNamespaceScheduledTasksFilterOutputWithContext(ctx context.Context) GetNamespaceScheduledTasksFilterOutput {
	return o
}

func (o GetNamespaceScheduledTasksFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTasksFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetNamespaceScheduledTasksFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTasksFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetNamespaceScheduledTasksFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTasksFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNamespaceScheduledTasksFilterArrayOutput struct{ *pulumi.OutputState }

func (GetNamespaceScheduledTasksFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNamespaceScheduledTasksFilter)(nil)).Elem()
}

func (o GetNamespaceScheduledTasksFilterArrayOutput) ToGetNamespaceScheduledTasksFilterArrayOutput() GetNamespaceScheduledTasksFilterArrayOutput {
	return o
}

func (o GetNamespaceScheduledTasksFilterArrayOutput) ToGetNamespaceScheduledTasksFilterArrayOutputWithContext(ctx context.Context) GetNamespaceScheduledTasksFilterArrayOutput {
	return o
}

func (o GetNamespaceScheduledTasksFilterArrayOutput) Index(i pulumi.IntInput) GetNamespaceScheduledTasksFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNamespaceScheduledTasksFilter {
		return vs[0].([]GetNamespaceScheduledTasksFilter)[vs[1].(int)]
	}).(GetNamespaceScheduledTasksFilterOutput)
}

type GetNamespaceScheduledTasksScheduledTaskCollection struct {
	Items []GetNamespaceScheduledTasksScheduledTaskCollectionItem `pulumi:"items"`
}

// GetNamespaceScheduledTasksScheduledTaskCollectionInput is an input type that accepts GetNamespaceScheduledTasksScheduledTaskCollectionArgs and GetNamespaceScheduledTasksScheduledTaskCollectionOutput values.
// You can construct a concrete instance of `GetNamespaceScheduledTasksScheduledTaskCollectionInput` via:
//
//	GetNamespaceScheduledTasksScheduledTaskCollectionArgs{...}
type GetNamespaceScheduledTasksScheduledTaskCollectionInput interface {
	pulumi.Input

	ToGetNamespaceScheduledTasksScheduledTaskCollectionOutput() GetNamespaceScheduledTasksScheduledTaskCollectionOutput
	ToGetNamespaceScheduledTasksScheduledTaskCollectionOutputWithContext(context.Context) GetNamespaceScheduledTasksScheduledTaskCollectionOutput
}

type GetNamespaceScheduledTasksScheduledTaskCollectionArgs struct {
	Items GetNamespaceScheduledTasksScheduledTaskCollectionItemArrayInput `pulumi:"items"`
}

func (GetNamespaceScheduledTasksScheduledTaskCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespaceScheduledTasksScheduledTaskCollection)(nil)).Elem()
}

func (i GetNamespaceScheduledTasksScheduledTaskCollectionArgs) ToGetNamespaceScheduledTasksScheduledTaskCollectionOutput() GetNamespaceScheduledTasksScheduledTaskCollectionOutput {
	return i.ToGetNamespaceScheduledTasksScheduledTaskCollectionOutputWithContext(context.Background())
}

func (i GetNamespaceScheduledTasksScheduledTaskCollectionArgs) ToGetNamespaceScheduledTasksScheduledTaskCollectionOutputWithContext(ctx context.Context) GetNamespaceScheduledTasksScheduledTaskCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNamespaceScheduledTasksScheduledTaskCollectionOutput)
}

// GetNamespaceScheduledTasksScheduledTaskCollectionArrayInput is an input type that accepts GetNamespaceScheduledTasksScheduledTaskCollectionArray and GetNamespaceScheduledTasksScheduledTaskCollectionArrayOutput values.
// You can construct a concrete instance of `GetNamespaceScheduledTasksScheduledTaskCollectionArrayInput` via:
//
//	GetNamespaceScheduledTasksScheduledTaskCollectionArray{ GetNamespaceScheduledTasksScheduledTaskCollectionArgs{...} }
type GetNamespaceScheduledTasksScheduledTaskCollectionArrayInput interface {
	pulumi.Input

	ToGetNamespaceScheduledTasksScheduledTaskCollectionArrayOutput() GetNamespaceScheduledTasksScheduledTaskCollectionArrayOutput
	ToGetNamespaceScheduledTasksScheduledTaskCollectionArrayOutputWithContext(context.Context) GetNamespaceScheduledTasksScheduledTaskCollectionArrayOutput
}

type GetNamespaceScheduledTasksScheduledTaskCollectionArray []GetNamespaceScheduledTasksScheduledTaskCollectionInput

func (GetNamespaceScheduledTasksScheduledTaskCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNamespaceScheduledTasksScheduledTaskCollection)(nil)).Elem()
}

func (i GetNamespaceScheduledTasksScheduledTaskCollectionArray) ToGetNamespaceScheduledTasksScheduledTaskCollectionArrayOutput() GetNamespaceScheduledTasksScheduledTaskCollectionArrayOutput {
	return i.ToGetNamespaceScheduledTasksScheduledTaskCollectionArrayOutputWithContext(context.Background())
}

func (i GetNamespaceScheduledTasksScheduledTaskCollectionArray) ToGetNamespaceScheduledTasksScheduledTaskCollectionArrayOutputWithContext(ctx context.Context) GetNamespaceScheduledTasksScheduledTaskCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNamespaceScheduledTasksScheduledTaskCollectionArrayOutput)
}

type GetNamespaceScheduledTasksScheduledTaskCollectionOutput struct{ *pulumi.OutputState }

func (GetNamespaceScheduledTasksScheduledTaskCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespaceScheduledTasksScheduledTaskCollection)(nil)).Elem()
}

func (o GetNamespaceScheduledTasksScheduledTaskCollectionOutput) ToGetNamespaceScheduledTasksScheduledTaskCollectionOutput() GetNamespaceScheduledTasksScheduledTaskCollectionOutput {
	return o
}

func (o GetNamespaceScheduledTasksScheduledTaskCollectionOutput) ToGetNamespaceScheduledTasksScheduledTaskCollectionOutputWithContext(ctx context.Context) GetNamespaceScheduledTasksScheduledTaskCollectionOutput {
	return o
}

func (o GetNamespaceScheduledTasksScheduledTaskCollectionOutput) Items() GetNamespaceScheduledTasksScheduledTaskCollectionItemArrayOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTasksScheduledTaskCollection) []GetNamespaceScheduledTasksScheduledTaskCollectionItem {
		return v.Items
	}).(GetNamespaceScheduledTasksScheduledTaskCollectionItemArrayOutput)
}

type GetNamespaceScheduledTasksScheduledTaskCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetNamespaceScheduledTasksScheduledTaskCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNamespaceScheduledTasksScheduledTaskCollection)(nil)).Elem()
}

func (o GetNamespaceScheduledTasksScheduledTaskCollectionArrayOutput) ToGetNamespaceScheduledTasksScheduledTaskCollectionArrayOutput() GetNamespaceScheduledTasksScheduledTaskCollectionArrayOutput {
	return o
}

func (o GetNamespaceScheduledTasksScheduledTaskCollectionArrayOutput) ToGetNamespaceScheduledTasksScheduledTaskCollectionArrayOutputWithContext(ctx context.Context) GetNamespaceScheduledTasksScheduledTaskCollectionArrayOutput {
	return o
}

func (o GetNamespaceScheduledTasksScheduledTaskCollectionArrayOutput) Index(i pulumi.IntInput) GetNamespaceScheduledTasksScheduledTaskCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNamespaceScheduledTasksScheduledTaskCollection {
		return vs[0].([]GetNamespaceScheduledTasksScheduledTaskCollection)[vs[1].(int)]
	}).(GetNamespaceScheduledTasksScheduledTaskCollectionOutput)
}

type GetNamespaceScheduledTasksScheduledTaskCollectionItem struct {
	// Action for scheduled task.
	Actions []GetNamespaceScheduledTasksScheduledTaskCollectionItemAction `pulumi:"actions"`
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A filter to return only resources that match the given display name exactly.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the data plane resource.
	Id   string `pulumi:"id"`
	Kind string `pulumi:"kind"`
	// The Logging Analytics namespace used for the request.
	Namespace string `pulumi:"namespace"`
	// Number of execution occurrences.
	NumOccurrences string `pulumi:"numOccurrences"`
	// The ManagementSavedSearch id [OCID] utilized in the action.
	SavedSearchId   string `pulumi:"savedSearchId"`
	ScheduledTaskId string `pulumi:"scheduledTaskId"`
	// Schedules.
	Schedules []GetNamespaceScheduledTasksScheduledTaskCollectionItemSchedule `pulumi:"schedules"`
	// The current state of the scheduled task.
	State string `pulumi:"state"`
	// Status of the scheduled task. - PURGE_RESOURCE_NOT_FOUND
	TaskStatus string `pulumi:"taskStatus"`
	// Required parameter to specify schedule task type.
	TaskType string `pulumi:"taskType"`
	// The date and time the scheduled task was created, in the format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the scheduled task was last updated, in the format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
	// most recent Work Request Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the asynchronous request.
	WorkRequestId string `pulumi:"workRequestId"`
}

// GetNamespaceScheduledTasksScheduledTaskCollectionItemInput is an input type that accepts GetNamespaceScheduledTasksScheduledTaskCollectionItemArgs and GetNamespaceScheduledTasksScheduledTaskCollectionItemOutput values.
// You can construct a concrete instance of `GetNamespaceScheduledTasksScheduledTaskCollectionItemInput` via:
//
//	GetNamespaceScheduledTasksScheduledTaskCollectionItemArgs{...}
type GetNamespaceScheduledTasksScheduledTaskCollectionItemInput interface {
	pulumi.Input

	ToGetNamespaceScheduledTasksScheduledTaskCollectionItemOutput() GetNamespaceScheduledTasksScheduledTaskCollectionItemOutput
	ToGetNamespaceScheduledTasksScheduledTaskCollectionItemOutputWithContext(context.Context) GetNamespaceScheduledTasksScheduledTaskCollectionItemOutput
}

type GetNamespaceScheduledTasksScheduledTaskCollectionItemArgs struct {
	// Action for scheduled task.
	Actions GetNamespaceScheduledTasksScheduledTaskCollectionItemActionArrayInput `pulumi:"actions"`
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// A filter to return only resources that match the given display name exactly.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the data plane resource.
	Id   pulumi.StringInput `pulumi:"id"`
	Kind pulumi.StringInput `pulumi:"kind"`
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// Number of execution occurrences.
	NumOccurrences pulumi.StringInput `pulumi:"numOccurrences"`
	// The ManagementSavedSearch id [OCID] utilized in the action.
	SavedSearchId   pulumi.StringInput `pulumi:"savedSearchId"`
	ScheduledTaskId pulumi.StringInput `pulumi:"scheduledTaskId"`
	// Schedules.
	Schedules GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArrayInput `pulumi:"schedules"`
	// The current state of the scheduled task.
	State pulumi.StringInput `pulumi:"state"`
	// Status of the scheduled task. - PURGE_RESOURCE_NOT_FOUND
	TaskStatus pulumi.StringInput `pulumi:"taskStatus"`
	// Required parameter to specify schedule task type.
	TaskType pulumi.StringInput `pulumi:"taskType"`
	// The date and time the scheduled task was created, in the format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the scheduled task was last updated, in the format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// most recent Work Request Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the asynchronous request.
	WorkRequestId pulumi.StringInput `pulumi:"workRequestId"`
}

func (GetNamespaceScheduledTasksScheduledTaskCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespaceScheduledTasksScheduledTaskCollectionItem)(nil)).Elem()
}

func (i GetNamespaceScheduledTasksScheduledTaskCollectionItemArgs) ToGetNamespaceScheduledTasksScheduledTaskCollectionItemOutput() GetNamespaceScheduledTasksScheduledTaskCollectionItemOutput {
	return i.ToGetNamespaceScheduledTasksScheduledTaskCollectionItemOutputWithContext(context.Background())
}

func (i GetNamespaceScheduledTasksScheduledTaskCollectionItemArgs) ToGetNamespaceScheduledTasksScheduledTaskCollectionItemOutputWithContext(ctx context.Context) GetNamespaceScheduledTasksScheduledTaskCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNamespaceScheduledTasksScheduledTaskCollectionItemOutput)
}

// GetNamespaceScheduledTasksScheduledTaskCollectionItemArrayInput is an input type that accepts GetNamespaceScheduledTasksScheduledTaskCollectionItemArray and GetNamespaceScheduledTasksScheduledTaskCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetNamespaceScheduledTasksScheduledTaskCollectionItemArrayInput` via:
//
//	GetNamespaceScheduledTasksScheduledTaskCollectionItemArray{ GetNamespaceScheduledTasksScheduledTaskCollectionItemArgs{...} }
type GetNamespaceScheduledTasksScheduledTaskCollectionItemArrayInput interface {
	pulumi.Input

	ToGetNamespaceScheduledTasksScheduledTaskCollectionItemArrayOutput() GetNamespaceScheduledTasksScheduledTaskCollectionItemArrayOutput
	ToGetNamespaceScheduledTasksScheduledTaskCollectionItemArrayOutputWithContext(context.Context) GetNamespaceScheduledTasksScheduledTaskCollectionItemArrayOutput
}

type GetNamespaceScheduledTasksScheduledTaskCollectionItemArray []GetNamespaceScheduledTasksScheduledTaskCollectionItemInput

func (GetNamespaceScheduledTasksScheduledTaskCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNamespaceScheduledTasksScheduledTaskCollectionItem)(nil)).Elem()
}

func (i GetNamespaceScheduledTasksScheduledTaskCollectionItemArray) ToGetNamespaceScheduledTasksScheduledTaskCollectionItemArrayOutput() GetNamespaceScheduledTasksScheduledTaskCollectionItemArrayOutput {
	return i.ToGetNamespaceScheduledTasksScheduledTaskCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetNamespaceScheduledTasksScheduledTaskCollectionItemArray) ToGetNamespaceScheduledTasksScheduledTaskCollectionItemArrayOutputWithContext(ctx context.Context) GetNamespaceScheduledTasksScheduledTaskCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNamespaceScheduledTasksScheduledTaskCollectionItemArrayOutput)
}

type GetNamespaceScheduledTasksScheduledTaskCollectionItemOutput struct{ *pulumi.OutputState }

func (GetNamespaceScheduledTasksScheduledTaskCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespaceScheduledTasksScheduledTaskCollectionItem)(nil)).Elem()
}

func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemOutput) ToGetNamespaceScheduledTasksScheduledTaskCollectionItemOutput() GetNamespaceScheduledTasksScheduledTaskCollectionItemOutput {
	return o
}

func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemOutput) ToGetNamespaceScheduledTasksScheduledTaskCollectionItemOutputWithContext(ctx context.Context) GetNamespaceScheduledTasksScheduledTaskCollectionItemOutput {
	return o
}

// Action for scheduled task.
func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemOutput) Actions() GetNamespaceScheduledTasksScheduledTaskCollectionItemActionArrayOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTasksScheduledTaskCollectionItem) []GetNamespaceScheduledTasksScheduledTaskCollectionItemAction {
		return v.Actions
	}).(GetNamespaceScheduledTasksScheduledTaskCollectionItemActionArrayOutput)
}

// The ID of the compartment in which to list resources.
func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTasksScheduledTaskCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTasksScheduledTaskCollectionItem) map[string]interface{} {
		return v.DefinedTags
	}).(pulumi.MapOutput)
}

// A filter to return only resources that match the given display name exactly.
func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTasksScheduledTaskCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTasksScheduledTaskCollectionItem) map[string]interface{} {
		return v.FreeformTags
	}).(pulumi.MapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the data plane resource.
func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTasksScheduledTaskCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTasksScheduledTaskCollectionItem) string { return v.Kind }).(pulumi.StringOutput)
}

// The Logging Analytics namespace used for the request.
func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTasksScheduledTaskCollectionItem) string { return v.Namespace }).(pulumi.StringOutput)
}

// Number of execution occurrences.
func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemOutput) NumOccurrences() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTasksScheduledTaskCollectionItem) string { return v.NumOccurrences }).(pulumi.StringOutput)
}

// The ManagementSavedSearch id [OCID] utilized in the action.
func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemOutput) SavedSearchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTasksScheduledTaskCollectionItem) string { return v.SavedSearchId }).(pulumi.StringOutput)
}

func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemOutput) ScheduledTaskId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTasksScheduledTaskCollectionItem) string { return v.ScheduledTaskId }).(pulumi.StringOutput)
}

// Schedules.
func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemOutput) Schedules() GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArrayOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTasksScheduledTaskCollectionItem) []GetNamespaceScheduledTasksScheduledTaskCollectionItemSchedule {
		return v.Schedules
	}).(GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArrayOutput)
}

// The current state of the scheduled task.
func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTasksScheduledTaskCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// Status of the scheduled task. - PURGE_RESOURCE_NOT_FOUND
func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemOutput) TaskStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTasksScheduledTaskCollectionItem) string { return v.TaskStatus }).(pulumi.StringOutput)
}

// Required parameter to specify schedule task type.
func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTasksScheduledTaskCollectionItem) string { return v.TaskType }).(pulumi.StringOutput)
}

// The date and time the scheduled task was created, in the format defined by RFC3339.
func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTasksScheduledTaskCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the scheduled task was last updated, in the format defined by RFC3339.
func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTasksScheduledTaskCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// most recent Work Request Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the asynchronous request.
func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemOutput) WorkRequestId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTasksScheduledTaskCollectionItem) string { return v.WorkRequestId }).(pulumi.StringOutput)
}

type GetNamespaceScheduledTasksScheduledTaskCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetNamespaceScheduledTasksScheduledTaskCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNamespaceScheduledTasksScheduledTaskCollectionItem)(nil)).Elem()
}

func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemArrayOutput) ToGetNamespaceScheduledTasksScheduledTaskCollectionItemArrayOutput() GetNamespaceScheduledTasksScheduledTaskCollectionItemArrayOutput {
	return o
}

func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemArrayOutput) ToGetNamespaceScheduledTasksScheduledTaskCollectionItemArrayOutputWithContext(ctx context.Context) GetNamespaceScheduledTasksScheduledTaskCollectionItemArrayOutput {
	return o
}

func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemArrayOutput) Index(i pulumi.IntInput) GetNamespaceScheduledTasksScheduledTaskCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNamespaceScheduledTasksScheduledTaskCollectionItem {
		return vs[0].([]GetNamespaceScheduledTasksScheduledTaskCollectionItem)[vs[1].(int)]
	}).(GetNamespaceScheduledTasksScheduledTaskCollectionItemOutput)
}

type GetNamespaceScheduledTasksScheduledTaskCollectionItemAction struct {
	// if true, purge child compartments data
	CompartmentIdInSubtree bool `pulumi:"compartmentIdInSubtree"`
	// the type of the log data to be purged
	DataType string `pulumi:"dataType"`
	// the compartment OCID under which the data will be purged
	PurgeCompartmentId string `pulumi:"purgeCompartmentId"`
	// The duration of data to be retained, which is used to calculate the timeDataEnded when the task fires. The value should be negative. Purge duration in ISO 8601 extended format as described in https://en.wikipedia.org/wiki/ISO_8601#Durations. The largest supported unit is D, e.g. -P365D (not -P1Y) or -P14D (not -P2W).
	PurgeDuration string `pulumi:"purgeDuration"`
	// Purge query string.
	QueryString string `pulumi:"queryString"`
	// The ManagementSavedSearch id [OCID] utilized in the action.
	SavedSearchId string `pulumi:"savedSearchId"`
	// Schedule type discriminator.
	Type string `pulumi:"type"`
}

// GetNamespaceScheduledTasksScheduledTaskCollectionItemActionInput is an input type that accepts GetNamespaceScheduledTasksScheduledTaskCollectionItemActionArgs and GetNamespaceScheduledTasksScheduledTaskCollectionItemActionOutput values.
// You can construct a concrete instance of `GetNamespaceScheduledTasksScheduledTaskCollectionItemActionInput` via:
//
//	GetNamespaceScheduledTasksScheduledTaskCollectionItemActionArgs{...}
type GetNamespaceScheduledTasksScheduledTaskCollectionItemActionInput interface {
	pulumi.Input

	ToGetNamespaceScheduledTasksScheduledTaskCollectionItemActionOutput() GetNamespaceScheduledTasksScheduledTaskCollectionItemActionOutput
	ToGetNamespaceScheduledTasksScheduledTaskCollectionItemActionOutputWithContext(context.Context) GetNamespaceScheduledTasksScheduledTaskCollectionItemActionOutput
}

type GetNamespaceScheduledTasksScheduledTaskCollectionItemActionArgs struct {
	// if true, purge child compartments data
	CompartmentIdInSubtree pulumi.BoolInput `pulumi:"compartmentIdInSubtree"`
	// the type of the log data to be purged
	DataType pulumi.StringInput `pulumi:"dataType"`
	// the compartment OCID under which the data will be purged
	PurgeCompartmentId pulumi.StringInput `pulumi:"purgeCompartmentId"`
	// The duration of data to be retained, which is used to calculate the timeDataEnded when the task fires. The value should be negative. Purge duration in ISO 8601 extended format as described in https://en.wikipedia.org/wiki/ISO_8601#Durations. The largest supported unit is D, e.g. -P365D (not -P1Y) or -P14D (not -P2W).
	PurgeDuration pulumi.StringInput `pulumi:"purgeDuration"`
	// Purge query string.
	QueryString pulumi.StringInput `pulumi:"queryString"`
	// The ManagementSavedSearch id [OCID] utilized in the action.
	SavedSearchId pulumi.StringInput `pulumi:"savedSearchId"`
	// Schedule type discriminator.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetNamespaceScheduledTasksScheduledTaskCollectionItemActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespaceScheduledTasksScheduledTaskCollectionItemAction)(nil)).Elem()
}

func (i GetNamespaceScheduledTasksScheduledTaskCollectionItemActionArgs) ToGetNamespaceScheduledTasksScheduledTaskCollectionItemActionOutput() GetNamespaceScheduledTasksScheduledTaskCollectionItemActionOutput {
	return i.ToGetNamespaceScheduledTasksScheduledTaskCollectionItemActionOutputWithContext(context.Background())
}

func (i GetNamespaceScheduledTasksScheduledTaskCollectionItemActionArgs) ToGetNamespaceScheduledTasksScheduledTaskCollectionItemActionOutputWithContext(ctx context.Context) GetNamespaceScheduledTasksScheduledTaskCollectionItemActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNamespaceScheduledTasksScheduledTaskCollectionItemActionOutput)
}

// GetNamespaceScheduledTasksScheduledTaskCollectionItemActionArrayInput is an input type that accepts GetNamespaceScheduledTasksScheduledTaskCollectionItemActionArray and GetNamespaceScheduledTasksScheduledTaskCollectionItemActionArrayOutput values.
// You can construct a concrete instance of `GetNamespaceScheduledTasksScheduledTaskCollectionItemActionArrayInput` via:
//
//	GetNamespaceScheduledTasksScheduledTaskCollectionItemActionArray{ GetNamespaceScheduledTasksScheduledTaskCollectionItemActionArgs{...} }
type GetNamespaceScheduledTasksScheduledTaskCollectionItemActionArrayInput interface {
	pulumi.Input

	ToGetNamespaceScheduledTasksScheduledTaskCollectionItemActionArrayOutput() GetNamespaceScheduledTasksScheduledTaskCollectionItemActionArrayOutput
	ToGetNamespaceScheduledTasksScheduledTaskCollectionItemActionArrayOutputWithContext(context.Context) GetNamespaceScheduledTasksScheduledTaskCollectionItemActionArrayOutput
}

type GetNamespaceScheduledTasksScheduledTaskCollectionItemActionArray []GetNamespaceScheduledTasksScheduledTaskCollectionItemActionInput

func (GetNamespaceScheduledTasksScheduledTaskCollectionItemActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNamespaceScheduledTasksScheduledTaskCollectionItemAction)(nil)).Elem()
}

func (i GetNamespaceScheduledTasksScheduledTaskCollectionItemActionArray) ToGetNamespaceScheduledTasksScheduledTaskCollectionItemActionArrayOutput() GetNamespaceScheduledTasksScheduledTaskCollectionItemActionArrayOutput {
	return i.ToGetNamespaceScheduledTasksScheduledTaskCollectionItemActionArrayOutputWithContext(context.Background())
}

func (i GetNamespaceScheduledTasksScheduledTaskCollectionItemActionArray) ToGetNamespaceScheduledTasksScheduledTaskCollectionItemActionArrayOutputWithContext(ctx context.Context) GetNamespaceScheduledTasksScheduledTaskCollectionItemActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNamespaceScheduledTasksScheduledTaskCollectionItemActionArrayOutput)
}

type GetNamespaceScheduledTasksScheduledTaskCollectionItemActionOutput struct{ *pulumi.OutputState }

func (GetNamespaceScheduledTasksScheduledTaskCollectionItemActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespaceScheduledTasksScheduledTaskCollectionItemAction)(nil)).Elem()
}

func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemActionOutput) ToGetNamespaceScheduledTasksScheduledTaskCollectionItemActionOutput() GetNamespaceScheduledTasksScheduledTaskCollectionItemActionOutput {
	return o
}

func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemActionOutput) ToGetNamespaceScheduledTasksScheduledTaskCollectionItemActionOutputWithContext(ctx context.Context) GetNamespaceScheduledTasksScheduledTaskCollectionItemActionOutput {
	return o
}

// if true, purge child compartments data
func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemActionOutput) CompartmentIdInSubtree() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTasksScheduledTaskCollectionItemAction) bool {
		return v.CompartmentIdInSubtree
	}).(pulumi.BoolOutput)
}

// the type of the log data to be purged
func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemActionOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTasksScheduledTaskCollectionItemAction) string { return v.DataType }).(pulumi.StringOutput)
}

// the compartment OCID under which the data will be purged
func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemActionOutput) PurgeCompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTasksScheduledTaskCollectionItemAction) string {
		return v.PurgeCompartmentId
	}).(pulumi.StringOutput)
}

// The duration of data to be retained, which is used to calculate the timeDataEnded when the task fires. The value should be negative. Purge duration in ISO 8601 extended format as described in https://en.wikipedia.org/wiki/ISO_8601#Durations. The largest supported unit is D, e.g. -P365D (not -P1Y) or -P14D (not -P2W).
func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemActionOutput) PurgeDuration() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTasksScheduledTaskCollectionItemAction) string { return v.PurgeDuration }).(pulumi.StringOutput)
}

// Purge query string.
func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemActionOutput) QueryString() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTasksScheduledTaskCollectionItemAction) string { return v.QueryString }).(pulumi.StringOutput)
}

// The ManagementSavedSearch id [OCID] utilized in the action.
func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemActionOutput) SavedSearchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTasksScheduledTaskCollectionItemAction) string { return v.SavedSearchId }).(pulumi.StringOutput)
}

// Schedule type discriminator.
func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTasksScheduledTaskCollectionItemAction) string { return v.Type }).(pulumi.StringOutput)
}

type GetNamespaceScheduledTasksScheduledTaskCollectionItemActionArrayOutput struct{ *pulumi.OutputState }

func (GetNamespaceScheduledTasksScheduledTaskCollectionItemActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNamespaceScheduledTasksScheduledTaskCollectionItemAction)(nil)).Elem()
}

func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemActionArrayOutput) ToGetNamespaceScheduledTasksScheduledTaskCollectionItemActionArrayOutput() GetNamespaceScheduledTasksScheduledTaskCollectionItemActionArrayOutput {
	return o
}

func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemActionArrayOutput) ToGetNamespaceScheduledTasksScheduledTaskCollectionItemActionArrayOutputWithContext(ctx context.Context) GetNamespaceScheduledTasksScheduledTaskCollectionItemActionArrayOutput {
	return o
}

func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemActionArrayOutput) Index(i pulumi.IntInput) GetNamespaceScheduledTasksScheduledTaskCollectionItemActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNamespaceScheduledTasksScheduledTaskCollectionItemAction {
		return vs[0].([]GetNamespaceScheduledTasksScheduledTaskCollectionItemAction)[vs[1].(int)]
	}).(GetNamespaceScheduledTasksScheduledTaskCollectionItemActionOutput)
}

type GetNamespaceScheduledTasksScheduledTaskCollectionItemSchedule struct {
	Schedules []GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleSchedule `pulumi:"schedules"`
}

// GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleInput is an input type that accepts GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArgs and GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleOutput values.
// You can construct a concrete instance of `GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleInput` via:
//
//	GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArgs{...}
type GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleInput interface {
	pulumi.Input

	ToGetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleOutput() GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleOutput
	ToGetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleOutputWithContext(context.Context) GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleOutput
}

type GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArgs struct {
	Schedules GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArrayInput `pulumi:"schedules"`
}

func (GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespaceScheduledTasksScheduledTaskCollectionItemSchedule)(nil)).Elem()
}

func (i GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArgs) ToGetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleOutput() GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleOutput {
	return i.ToGetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleOutputWithContext(context.Background())
}

func (i GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArgs) ToGetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleOutputWithContext(ctx context.Context) GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleOutput)
}

// GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArrayInput is an input type that accepts GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArray and GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArrayOutput values.
// You can construct a concrete instance of `GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArrayInput` via:
//
//	GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArray{ GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArgs{...} }
type GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArrayInput interface {
	pulumi.Input

	ToGetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArrayOutput() GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArrayOutput
	ToGetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArrayOutputWithContext(context.Context) GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArrayOutput
}

type GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArray []GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleInput

func (GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNamespaceScheduledTasksScheduledTaskCollectionItemSchedule)(nil)).Elem()
}

func (i GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArray) ToGetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArrayOutput() GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArrayOutput {
	return i.ToGetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArrayOutputWithContext(context.Background())
}

func (i GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArray) ToGetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArrayOutputWithContext(ctx context.Context) GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArrayOutput)
}

type GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleOutput struct{ *pulumi.OutputState }

func (GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespaceScheduledTasksScheduledTaskCollectionItemSchedule)(nil)).Elem()
}

func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleOutput) ToGetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleOutput() GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleOutput {
	return o
}

func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleOutput) ToGetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleOutputWithContext(ctx context.Context) GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleOutput {
	return o
}

func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleOutput) Schedules() GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArrayOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTasksScheduledTaskCollectionItemSchedule) []GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleSchedule {
		return v.Schedules
	}).(GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArrayOutput)
}

type GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArrayOutput struct{ *pulumi.OutputState }

func (GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNamespaceScheduledTasksScheduledTaskCollectionItemSchedule)(nil)).Elem()
}

func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArrayOutput) ToGetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArrayOutput() GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArrayOutput {
	return o
}

func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArrayOutput) ToGetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArrayOutputWithContext(ctx context.Context) GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArrayOutput {
	return o
}

func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArrayOutput) Index(i pulumi.IntInput) GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNamespaceScheduledTasksScheduledTaskCollectionItemSchedule {
		return vs[0].([]GetNamespaceScheduledTasksScheduledTaskCollectionItemSchedule)[vs[1].(int)]
	}).(GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleOutput)
}

type GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleSchedule struct {
	// Value in cron format.
	Expression string `pulumi:"expression"`
	// Schedule misfire retry policy.
	MisfirePolicy string `pulumi:"misfirePolicy"`
	// Recurring interval in ISO 8601 extended format as described in https://en.wikipedia.org/wiki/ISO_8601#Durations. The largest supported unit is D, e.g. P14D (not P2W). The value must be at least 5 minutes (PT5M) and at most 3 weeks (P21D or PT30240M).
	RecurringInterval string `pulumi:"recurringInterval"`
	// Number of times (0-based) to execute until auto-stop. Default value -1 will execute indefinitely. Value 0 will execute once.
	RepeatCount int `pulumi:"repeatCount"`
	// Time zone, by default UTC.
	TimeZone string `pulumi:"timeZone"`
	// Schedule type discriminator.
	Type string `pulumi:"type"`
}

// GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleInput is an input type that accepts GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArgs and GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleOutput values.
// You can construct a concrete instance of `GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleInput` via:
//
//	GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArgs{...}
type GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleInput interface {
	pulumi.Input

	ToGetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleOutput() GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleOutput
	ToGetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleOutputWithContext(context.Context) GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleOutput
}

type GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArgs struct {
	// Value in cron format.
	Expression pulumi.StringInput `pulumi:"expression"`
	// Schedule misfire retry policy.
	MisfirePolicy pulumi.StringInput `pulumi:"misfirePolicy"`
	// Recurring interval in ISO 8601 extended format as described in https://en.wikipedia.org/wiki/ISO_8601#Durations. The largest supported unit is D, e.g. P14D (not P2W). The value must be at least 5 minutes (PT5M) and at most 3 weeks (P21D or PT30240M).
	RecurringInterval pulumi.StringInput `pulumi:"recurringInterval"`
	// Number of times (0-based) to execute until auto-stop. Default value -1 will execute indefinitely. Value 0 will execute once.
	RepeatCount pulumi.IntInput `pulumi:"repeatCount"`
	// Time zone, by default UTC.
	TimeZone pulumi.StringInput `pulumi:"timeZone"`
	// Schedule type discriminator.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleSchedule)(nil)).Elem()
}

func (i GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArgs) ToGetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleOutput() GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleOutput {
	return i.ToGetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleOutputWithContext(context.Background())
}

func (i GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArgs) ToGetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleOutputWithContext(ctx context.Context) GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleOutput)
}

// GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArrayInput is an input type that accepts GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArray and GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArrayOutput values.
// You can construct a concrete instance of `GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArrayInput` via:
//
//	GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArray{ GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArgs{...} }
type GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArrayInput interface {
	pulumi.Input

	ToGetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArrayOutput() GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArrayOutput
	ToGetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArrayOutputWithContext(context.Context) GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArrayOutput
}

type GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArray []GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleInput

func (GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleSchedule)(nil)).Elem()
}

func (i GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArray) ToGetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArrayOutput() GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArrayOutput {
	return i.ToGetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArrayOutputWithContext(context.Background())
}

func (i GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArray) ToGetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArrayOutputWithContext(ctx context.Context) GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArrayOutput)
}

type GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleOutput struct{ *pulumi.OutputState }

func (GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleSchedule)(nil)).Elem()
}

func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleOutput) ToGetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleOutput() GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleOutput {
	return o
}

func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleOutput) ToGetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleOutputWithContext(ctx context.Context) GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleOutput {
	return o
}

// Value in cron format.
func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleSchedule) string {
		return v.Expression
	}).(pulumi.StringOutput)
}

// Schedule misfire retry policy.
func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleOutput) MisfirePolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleSchedule) string {
		return v.MisfirePolicy
	}).(pulumi.StringOutput)
}

// Recurring interval in ISO 8601 extended format as described in https://en.wikipedia.org/wiki/ISO_8601#Durations. The largest supported unit is D, e.g. P14D (not P2W). The value must be at least 5 minutes (PT5M) and at most 3 weeks (P21D or PT30240M).
func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleOutput) RecurringInterval() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleSchedule) string {
		return v.RecurringInterval
	}).(pulumi.StringOutput)
}

// Number of times (0-based) to execute until auto-stop. Default value -1 will execute indefinitely. Value 0 will execute once.
func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleOutput) RepeatCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleSchedule) int {
		return v.RepeatCount
	}).(pulumi.IntOutput)
}

// Time zone, by default UTC.
func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleSchedule) string {
		return v.TimeZone
	}).(pulumi.StringOutput)
}

// Schedule type discriminator.
func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleSchedule) string { return v.Type }).(pulumi.StringOutput)
}

type GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArrayOutput struct{ *pulumi.OutputState }

func (GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleSchedule)(nil)).Elem()
}

func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArrayOutput) ToGetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArrayOutput() GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArrayOutput {
	return o
}

func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArrayOutput) ToGetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArrayOutputWithContext(ctx context.Context) GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArrayOutput {
	return o
}

func (o GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArrayOutput) Index(i pulumi.IntInput) GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleSchedule {
		return vs[0].([]GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleSchedule)[vs[1].(int)]
	}).(GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleOutput)
}

type GetNamespacesFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetNamespacesFilterInput is an input type that accepts GetNamespacesFilterArgs and GetNamespacesFilterOutput values.
// You can construct a concrete instance of `GetNamespacesFilterInput` via:
//
//	GetNamespacesFilterArgs{...}
type GetNamespacesFilterInput interface {
	pulumi.Input

	ToGetNamespacesFilterOutput() GetNamespacesFilterOutput
	ToGetNamespacesFilterOutputWithContext(context.Context) GetNamespacesFilterOutput
}

type GetNamespacesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNamespacesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespacesFilter)(nil)).Elem()
}

func (i GetNamespacesFilterArgs) ToGetNamespacesFilterOutput() GetNamespacesFilterOutput {
	return i.ToGetNamespacesFilterOutputWithContext(context.Background())
}

func (i GetNamespacesFilterArgs) ToGetNamespacesFilterOutputWithContext(ctx context.Context) GetNamespacesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNamespacesFilterOutput)
}

// GetNamespacesFilterArrayInput is an input type that accepts GetNamespacesFilterArray and GetNamespacesFilterArrayOutput values.
// You can construct a concrete instance of `GetNamespacesFilterArrayInput` via:
//
//	GetNamespacesFilterArray{ GetNamespacesFilterArgs{...} }
type GetNamespacesFilterArrayInput interface {
	pulumi.Input

	ToGetNamespacesFilterArrayOutput() GetNamespacesFilterArrayOutput
	ToGetNamespacesFilterArrayOutputWithContext(context.Context) GetNamespacesFilterArrayOutput
}

type GetNamespacesFilterArray []GetNamespacesFilterInput

func (GetNamespacesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNamespacesFilter)(nil)).Elem()
}

func (i GetNamespacesFilterArray) ToGetNamespacesFilterArrayOutput() GetNamespacesFilterArrayOutput {
	return i.ToGetNamespacesFilterArrayOutputWithContext(context.Background())
}

func (i GetNamespacesFilterArray) ToGetNamespacesFilterArrayOutputWithContext(ctx context.Context) GetNamespacesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNamespacesFilterArrayOutput)
}

type GetNamespacesFilterOutput struct{ *pulumi.OutputState }

func (GetNamespacesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespacesFilter)(nil)).Elem()
}

func (o GetNamespacesFilterOutput) ToGetNamespacesFilterOutput() GetNamespacesFilterOutput {
	return o
}

func (o GetNamespacesFilterOutput) ToGetNamespacesFilterOutputWithContext(ctx context.Context) GetNamespacesFilterOutput {
	return o
}

func (o GetNamespacesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespacesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetNamespacesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetNamespacesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetNamespacesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNamespacesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNamespacesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetNamespacesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNamespacesFilter)(nil)).Elem()
}

func (o GetNamespacesFilterArrayOutput) ToGetNamespacesFilterArrayOutput() GetNamespacesFilterArrayOutput {
	return o
}

func (o GetNamespacesFilterArrayOutput) ToGetNamespacesFilterArrayOutputWithContext(ctx context.Context) GetNamespacesFilterArrayOutput {
	return o
}

func (o GetNamespacesFilterArrayOutput) Index(i pulumi.IntInput) GetNamespacesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNamespacesFilter {
		return vs[0].([]GetNamespacesFilter)[vs[1].(int)]
	}).(GetNamespacesFilterOutput)
}

type GetNamespacesNamespaceCollection struct {
	Items []GetNamespacesNamespaceCollectionItem `pulumi:"items"`
}

// GetNamespacesNamespaceCollectionInput is an input type that accepts GetNamespacesNamespaceCollectionArgs and GetNamespacesNamespaceCollectionOutput values.
// You can construct a concrete instance of `GetNamespacesNamespaceCollectionInput` via:
//
//	GetNamespacesNamespaceCollectionArgs{...}
type GetNamespacesNamespaceCollectionInput interface {
	pulumi.Input

	ToGetNamespacesNamespaceCollectionOutput() GetNamespacesNamespaceCollectionOutput
	ToGetNamespacesNamespaceCollectionOutputWithContext(context.Context) GetNamespacesNamespaceCollectionOutput
}

type GetNamespacesNamespaceCollectionArgs struct {
	Items GetNamespacesNamespaceCollectionItemArrayInput `pulumi:"items"`
}

func (GetNamespacesNamespaceCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespacesNamespaceCollection)(nil)).Elem()
}

func (i GetNamespacesNamespaceCollectionArgs) ToGetNamespacesNamespaceCollectionOutput() GetNamespacesNamespaceCollectionOutput {
	return i.ToGetNamespacesNamespaceCollectionOutputWithContext(context.Background())
}

func (i GetNamespacesNamespaceCollectionArgs) ToGetNamespacesNamespaceCollectionOutputWithContext(ctx context.Context) GetNamespacesNamespaceCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNamespacesNamespaceCollectionOutput)
}

// GetNamespacesNamespaceCollectionArrayInput is an input type that accepts GetNamespacesNamespaceCollectionArray and GetNamespacesNamespaceCollectionArrayOutput values.
// You can construct a concrete instance of `GetNamespacesNamespaceCollectionArrayInput` via:
//
//	GetNamespacesNamespaceCollectionArray{ GetNamespacesNamespaceCollectionArgs{...} }
type GetNamespacesNamespaceCollectionArrayInput interface {
	pulumi.Input

	ToGetNamespacesNamespaceCollectionArrayOutput() GetNamespacesNamespaceCollectionArrayOutput
	ToGetNamespacesNamespaceCollectionArrayOutputWithContext(context.Context) GetNamespacesNamespaceCollectionArrayOutput
}

type GetNamespacesNamespaceCollectionArray []GetNamespacesNamespaceCollectionInput

func (GetNamespacesNamespaceCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNamespacesNamespaceCollection)(nil)).Elem()
}

func (i GetNamespacesNamespaceCollectionArray) ToGetNamespacesNamespaceCollectionArrayOutput() GetNamespacesNamespaceCollectionArrayOutput {
	return i.ToGetNamespacesNamespaceCollectionArrayOutputWithContext(context.Background())
}

func (i GetNamespacesNamespaceCollectionArray) ToGetNamespacesNamespaceCollectionArrayOutputWithContext(ctx context.Context) GetNamespacesNamespaceCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNamespacesNamespaceCollectionArrayOutput)
}

type GetNamespacesNamespaceCollectionOutput struct{ *pulumi.OutputState }

func (GetNamespacesNamespaceCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespacesNamespaceCollection)(nil)).Elem()
}

func (o GetNamespacesNamespaceCollectionOutput) ToGetNamespacesNamespaceCollectionOutput() GetNamespacesNamespaceCollectionOutput {
	return o
}

func (o GetNamespacesNamespaceCollectionOutput) ToGetNamespacesNamespaceCollectionOutputWithContext(ctx context.Context) GetNamespacesNamespaceCollectionOutput {
	return o
}

func (o GetNamespacesNamespaceCollectionOutput) Items() GetNamespacesNamespaceCollectionItemArrayOutput {
	return o.ApplyT(func(v GetNamespacesNamespaceCollection) []GetNamespacesNamespaceCollectionItem { return v.Items }).(GetNamespacesNamespaceCollectionItemArrayOutput)
}

type GetNamespacesNamespaceCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetNamespacesNamespaceCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNamespacesNamespaceCollection)(nil)).Elem()
}

func (o GetNamespacesNamespaceCollectionArrayOutput) ToGetNamespacesNamespaceCollectionArrayOutput() GetNamespacesNamespaceCollectionArrayOutput {
	return o
}

func (o GetNamespacesNamespaceCollectionArrayOutput) ToGetNamespacesNamespaceCollectionArrayOutputWithContext(ctx context.Context) GetNamespacesNamespaceCollectionArrayOutput {
	return o
}

func (o GetNamespacesNamespaceCollectionArrayOutput) Index(i pulumi.IntInput) GetNamespacesNamespaceCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNamespacesNamespaceCollection {
		return vs[0].([]GetNamespacesNamespaceCollection)[vs[1].(int)]
	}).(GetNamespacesNamespaceCollectionOutput)
}

type GetNamespacesNamespaceCollectionItem struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// This indicates if the tenancy is onboarded to Logging Analytics
	IsOnboarded bool `pulumi:"isOnboarded"`
	// This is the namespace name of a tenancy
	Namespace string `pulumi:"namespace"`
}

// GetNamespacesNamespaceCollectionItemInput is an input type that accepts GetNamespacesNamespaceCollectionItemArgs and GetNamespacesNamespaceCollectionItemOutput values.
// You can construct a concrete instance of `GetNamespacesNamespaceCollectionItemInput` via:
//
//	GetNamespacesNamespaceCollectionItemArgs{...}
type GetNamespacesNamespaceCollectionItemInput interface {
	pulumi.Input

	ToGetNamespacesNamespaceCollectionItemOutput() GetNamespacesNamespaceCollectionItemOutput
	ToGetNamespacesNamespaceCollectionItemOutputWithContext(context.Context) GetNamespacesNamespaceCollectionItemOutput
}

type GetNamespacesNamespaceCollectionItemArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// This indicates if the tenancy is onboarded to Logging Analytics
	IsOnboarded pulumi.BoolInput `pulumi:"isOnboarded"`
	// This is the namespace name of a tenancy
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (GetNamespacesNamespaceCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespacesNamespaceCollectionItem)(nil)).Elem()
}

func (i GetNamespacesNamespaceCollectionItemArgs) ToGetNamespacesNamespaceCollectionItemOutput() GetNamespacesNamespaceCollectionItemOutput {
	return i.ToGetNamespacesNamespaceCollectionItemOutputWithContext(context.Background())
}

func (i GetNamespacesNamespaceCollectionItemArgs) ToGetNamespacesNamespaceCollectionItemOutputWithContext(ctx context.Context) GetNamespacesNamespaceCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNamespacesNamespaceCollectionItemOutput)
}

// GetNamespacesNamespaceCollectionItemArrayInput is an input type that accepts GetNamespacesNamespaceCollectionItemArray and GetNamespacesNamespaceCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetNamespacesNamespaceCollectionItemArrayInput` via:
//
//	GetNamespacesNamespaceCollectionItemArray{ GetNamespacesNamespaceCollectionItemArgs{...} }
type GetNamespacesNamespaceCollectionItemArrayInput interface {
	pulumi.Input

	ToGetNamespacesNamespaceCollectionItemArrayOutput() GetNamespacesNamespaceCollectionItemArrayOutput
	ToGetNamespacesNamespaceCollectionItemArrayOutputWithContext(context.Context) GetNamespacesNamespaceCollectionItemArrayOutput
}

type GetNamespacesNamespaceCollectionItemArray []GetNamespacesNamespaceCollectionItemInput

func (GetNamespacesNamespaceCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNamespacesNamespaceCollectionItem)(nil)).Elem()
}

func (i GetNamespacesNamespaceCollectionItemArray) ToGetNamespacesNamespaceCollectionItemArrayOutput() GetNamespacesNamespaceCollectionItemArrayOutput {
	return i.ToGetNamespacesNamespaceCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetNamespacesNamespaceCollectionItemArray) ToGetNamespacesNamespaceCollectionItemArrayOutputWithContext(ctx context.Context) GetNamespacesNamespaceCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNamespacesNamespaceCollectionItemArrayOutput)
}

type GetNamespacesNamespaceCollectionItemOutput struct{ *pulumi.OutputState }

func (GetNamespacesNamespaceCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespacesNamespaceCollectionItem)(nil)).Elem()
}

func (o GetNamespacesNamespaceCollectionItemOutput) ToGetNamespacesNamespaceCollectionItemOutput() GetNamespacesNamespaceCollectionItemOutput {
	return o
}

func (o GetNamespacesNamespaceCollectionItemOutput) ToGetNamespacesNamespaceCollectionItemOutputWithContext(ctx context.Context) GetNamespacesNamespaceCollectionItemOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetNamespacesNamespaceCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespacesNamespaceCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// This indicates if the tenancy is onboarded to Logging Analytics
func (o GetNamespacesNamespaceCollectionItemOutput) IsOnboarded() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNamespacesNamespaceCollectionItem) bool { return v.IsOnboarded }).(pulumi.BoolOutput)
}

// This is the namespace name of a tenancy
func (o GetNamespacesNamespaceCollectionItemOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespacesNamespaceCollectionItem) string { return v.Namespace }).(pulumi.StringOutput)
}

type GetNamespacesNamespaceCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetNamespacesNamespaceCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNamespacesNamespaceCollectionItem)(nil)).Elem()
}

func (o GetNamespacesNamespaceCollectionItemArrayOutput) ToGetNamespacesNamespaceCollectionItemArrayOutput() GetNamespacesNamespaceCollectionItemArrayOutput {
	return o
}

func (o GetNamespacesNamespaceCollectionItemArrayOutput) ToGetNamespacesNamespaceCollectionItemArrayOutputWithContext(ctx context.Context) GetNamespacesNamespaceCollectionItemArrayOutput {
	return o
}

func (o GetNamespacesNamespaceCollectionItemArrayOutput) Index(i pulumi.IntInput) GetNamespacesNamespaceCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNamespacesNamespaceCollectionItem {
		return vs[0].([]GetNamespacesNamespaceCollectionItem)[vs[1].(int)]
	}).(GetNamespacesNamespaceCollectionItemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LogAnalyticsImportCustomContentChangeListInput)(nil)).Elem(), LogAnalyticsImportCustomContentChangeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogAnalyticsImportCustomContentChangeListArrayInput)(nil)).Elem(), LogAnalyticsImportCustomContentChangeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogAnalyticsObjectCollectionRuleOverrideInput)(nil)).Elem(), LogAnalyticsObjectCollectionRuleOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogAnalyticsObjectCollectionRuleOverrideArrayInput)(nil)).Elem(), LogAnalyticsObjectCollectionRuleOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogAnalyticsPreferencesManagementItemInput)(nil)).Elem(), LogAnalyticsPreferencesManagementItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogAnalyticsPreferencesManagementItemArrayInput)(nil)).Elem(), LogAnalyticsPreferencesManagementItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NamespaceScheduledTaskActionInput)(nil)).Elem(), NamespaceScheduledTaskActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NamespaceScheduledTaskActionPtrInput)(nil)).Elem(), NamespaceScheduledTaskActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NamespaceScheduledTaskSchedulesInput)(nil)).Elem(), NamespaceScheduledTaskSchedulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NamespaceScheduledTaskSchedulesPtrInput)(nil)).Elem(), NamespaceScheduledTaskSchedulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NamespaceScheduledTaskSchedulesScheduleInput)(nil)).Elem(), NamespaceScheduledTaskSchedulesScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NamespaceScheduledTaskSchedulesScheduleArrayInput)(nil)).Elem(), NamespaceScheduledTaskSchedulesScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsCategoriesListItemInput)(nil)).Elem(), GetLogAnalyticsCategoriesListItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsCategoriesListItemArrayInput)(nil)).Elem(), GetLogAnalyticsCategoriesListItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsEntitiesFilterInput)(nil)).Elem(), GetLogAnalyticsEntitiesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsEntitiesFilterArrayInput)(nil)).Elem(), GetLogAnalyticsEntitiesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionInput)(nil)).Elem(), GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArrayInput)(nil)).Elem(), GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemInput)(nil)).Elem(), GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArrayInput)(nil)).Elem(), GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsEntityTopologyItemInput)(nil)).Elem(), GetLogAnalyticsEntityTopologyItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsEntityTopologyItemArrayInput)(nil)).Elem(), GetLogAnalyticsEntityTopologyItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsEntityTopologyItemLinkInput)(nil)).Elem(), GetLogAnalyticsEntityTopologyItemLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsEntityTopologyItemLinkArrayInput)(nil)).Elem(), GetLogAnalyticsEntityTopologyItemLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsEntityTopologyItemLinkItemInput)(nil)).Elem(), GetLogAnalyticsEntityTopologyItemLinkItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsEntityTopologyItemLinkItemArrayInput)(nil)).Elem(), GetLogAnalyticsEntityTopologyItemLinkItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsEntityTopologyItemNodeInput)(nil)).Elem(), GetLogAnalyticsEntityTopologyItemNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsEntityTopologyItemNodeArrayInput)(nil)).Elem(), GetLogAnalyticsEntityTopologyItemNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsEntityTopologyItemNodeItemInput)(nil)).Elem(), GetLogAnalyticsEntityTopologyItemNodeItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsEntityTopologyItemNodeItemArrayInput)(nil)).Elem(), GetLogAnalyticsEntityTopologyItemNodeItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsLogGroupsFilterInput)(nil)).Elem(), GetLogAnalyticsLogGroupsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsLogGroupsFilterArrayInput)(nil)).Elem(), GetLogAnalyticsLogGroupsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionInput)(nil)).Elem(), GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArrayInput)(nil)).Elem(), GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemInput)(nil)).Elem(), GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArrayInput)(nil)).Elem(), GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsObjectCollectionRuleOverrideInput)(nil)).Elem(), GetLogAnalyticsObjectCollectionRuleOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsObjectCollectionRuleOverrideArrayInput)(nil)).Elem(), GetLogAnalyticsObjectCollectionRuleOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsObjectCollectionRulesFilterInput)(nil)).Elem(), GetLogAnalyticsObjectCollectionRulesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsObjectCollectionRulesFilterArrayInput)(nil)).Elem(), GetLogAnalyticsObjectCollectionRulesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionInput)(nil)).Elem(), GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArrayInput)(nil)).Elem(), GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemInput)(nil)).Elem(), GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArrayInput)(nil)).Elem(), GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideInput)(nil)).Elem(), GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArrayInput)(nil)).Elem(), GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsPreferenceItemInput)(nil)).Elem(), GetLogAnalyticsPreferenceItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsPreferenceItemArrayInput)(nil)).Elem(), GetLogAnalyticsPreferenceItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsResourceCategoriesListCategoryInput)(nil)).Elem(), GetLogAnalyticsResourceCategoriesListCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsResourceCategoriesListCategoryArrayInput)(nil)).Elem(), GetLogAnalyticsResourceCategoriesListCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsResourceCategoriesListItemInput)(nil)).Elem(), GetLogAnalyticsResourceCategoriesListItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogAnalyticsResourceCategoriesListItemArrayInput)(nil)).Elem(), GetLogAnalyticsResourceCategoriesListItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNamespaceScheduledTaskActionInput)(nil)).Elem(), GetNamespaceScheduledTaskActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNamespaceScheduledTaskActionArrayInput)(nil)).Elem(), GetNamespaceScheduledTaskActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNamespaceScheduledTaskScheduleInput)(nil)).Elem(), GetNamespaceScheduledTaskScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNamespaceScheduledTaskScheduleArrayInput)(nil)).Elem(), GetNamespaceScheduledTaskScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNamespaceScheduledTaskScheduleScheduleInput)(nil)).Elem(), GetNamespaceScheduledTaskScheduleScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNamespaceScheduledTaskScheduleScheduleArrayInput)(nil)).Elem(), GetNamespaceScheduledTaskScheduleScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNamespaceScheduledTasksFilterInput)(nil)).Elem(), GetNamespaceScheduledTasksFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNamespaceScheduledTasksFilterArrayInput)(nil)).Elem(), GetNamespaceScheduledTasksFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNamespaceScheduledTasksScheduledTaskCollectionInput)(nil)).Elem(), GetNamespaceScheduledTasksScheduledTaskCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNamespaceScheduledTasksScheduledTaskCollectionArrayInput)(nil)).Elem(), GetNamespaceScheduledTasksScheduledTaskCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNamespaceScheduledTasksScheduledTaskCollectionItemInput)(nil)).Elem(), GetNamespaceScheduledTasksScheduledTaskCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNamespaceScheduledTasksScheduledTaskCollectionItemArrayInput)(nil)).Elem(), GetNamespaceScheduledTasksScheduledTaskCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNamespaceScheduledTasksScheduledTaskCollectionItemActionInput)(nil)).Elem(), GetNamespaceScheduledTasksScheduledTaskCollectionItemActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNamespaceScheduledTasksScheduledTaskCollectionItemActionArrayInput)(nil)).Elem(), GetNamespaceScheduledTasksScheduledTaskCollectionItemActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleInput)(nil)).Elem(), GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArrayInput)(nil)).Elem(), GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleInput)(nil)).Elem(), GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArrayInput)(nil)).Elem(), GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNamespacesFilterInput)(nil)).Elem(), GetNamespacesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNamespacesFilterArrayInput)(nil)).Elem(), GetNamespacesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNamespacesNamespaceCollectionInput)(nil)).Elem(), GetNamespacesNamespaceCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNamespacesNamespaceCollectionArrayInput)(nil)).Elem(), GetNamespacesNamespaceCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNamespacesNamespaceCollectionItemInput)(nil)).Elem(), GetNamespacesNamespaceCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNamespacesNamespaceCollectionItemArrayInput)(nil)).Elem(), GetNamespacesNamespaceCollectionItemArray{})
	pulumi.RegisterOutputType(LogAnalyticsImportCustomContentChangeListOutput{})
	pulumi.RegisterOutputType(LogAnalyticsImportCustomContentChangeListArrayOutput{})
	pulumi.RegisterOutputType(LogAnalyticsObjectCollectionRuleOverrideOutput{})
	pulumi.RegisterOutputType(LogAnalyticsObjectCollectionRuleOverrideArrayOutput{})
	pulumi.RegisterOutputType(LogAnalyticsPreferencesManagementItemOutput{})
	pulumi.RegisterOutputType(LogAnalyticsPreferencesManagementItemArrayOutput{})
	pulumi.RegisterOutputType(NamespaceScheduledTaskActionOutput{})
	pulumi.RegisterOutputType(NamespaceScheduledTaskActionPtrOutput{})
	pulumi.RegisterOutputType(NamespaceScheduledTaskSchedulesOutput{})
	pulumi.RegisterOutputType(NamespaceScheduledTaskSchedulesPtrOutput{})
	pulumi.RegisterOutputType(NamespaceScheduledTaskSchedulesScheduleOutput{})
	pulumi.RegisterOutputType(NamespaceScheduledTaskSchedulesScheduleArrayOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsCategoriesListItemOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsCategoriesListItemArrayOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsEntitiesFilterOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsEntitiesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsEntitiesLogAnalyticsEntityCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsEntityTopologyItemOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsEntityTopologyItemArrayOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsEntityTopologyItemLinkOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsEntityTopologyItemLinkArrayOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsEntityTopologyItemLinkItemOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsEntityTopologyItemLinkItemArrayOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsEntityTopologyItemNodeOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsEntityTopologyItemNodeArrayOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsEntityTopologyItemNodeItemOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsEntityTopologyItemNodeItemArrayOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsLogGroupsFilterOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsLogGroupsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsObjectCollectionRuleOverrideOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsObjectCollectionRuleOverrideArrayOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsObjectCollectionRulesFilterOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsObjectCollectionRulesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverrideArrayOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsPreferenceItemOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsPreferenceItemArrayOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsResourceCategoriesListCategoryOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsResourceCategoriesListCategoryArrayOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsResourceCategoriesListItemOutput{})
	pulumi.RegisterOutputType(GetLogAnalyticsResourceCategoriesListItemArrayOutput{})
	pulumi.RegisterOutputType(GetNamespaceScheduledTaskActionOutput{})
	pulumi.RegisterOutputType(GetNamespaceScheduledTaskActionArrayOutput{})
	pulumi.RegisterOutputType(GetNamespaceScheduledTaskScheduleOutput{})
	pulumi.RegisterOutputType(GetNamespaceScheduledTaskScheduleArrayOutput{})
	pulumi.RegisterOutputType(GetNamespaceScheduledTaskScheduleScheduleOutput{})
	pulumi.RegisterOutputType(GetNamespaceScheduledTaskScheduleScheduleArrayOutput{})
	pulumi.RegisterOutputType(GetNamespaceScheduledTasksFilterOutput{})
	pulumi.RegisterOutputType(GetNamespaceScheduledTasksFilterArrayOutput{})
	pulumi.RegisterOutputType(GetNamespaceScheduledTasksScheduledTaskCollectionOutput{})
	pulumi.RegisterOutputType(GetNamespaceScheduledTasksScheduledTaskCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetNamespaceScheduledTasksScheduledTaskCollectionItemOutput{})
	pulumi.RegisterOutputType(GetNamespaceScheduledTasksScheduledTaskCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetNamespaceScheduledTasksScheduledTaskCollectionItemActionOutput{})
	pulumi.RegisterOutputType(GetNamespaceScheduledTasksScheduledTaskCollectionItemActionArrayOutput{})
	pulumi.RegisterOutputType(GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleOutput{})
	pulumi.RegisterOutputType(GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleArrayOutput{})
	pulumi.RegisterOutputType(GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleOutput{})
	pulumi.RegisterOutputType(GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleScheduleArrayOutput{})
	pulumi.RegisterOutputType(GetNamespacesFilterOutput{})
	pulumi.RegisterOutputType(GetNamespacesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetNamespacesNamespaceCollectionOutput{})
	pulumi.RegisterOutputType(GetNamespacesNamespaceCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetNamespacesNamespaceCollectionItemOutput{})
	pulumi.RegisterOutputType(GetNamespacesNamespaceCollectionItemArrayOutput{})
}
