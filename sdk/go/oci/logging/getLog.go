// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package logging

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Log resource in Oracle Cloud Infrastructure Logging service.
//
// Gets the log object configuration for the log object OCID.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/logging"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := logging.GetLog(ctx, &logging.GetLogArgs{
//				LogGroupId: testLogGroup.Id,
//				LogId:      testLogOciLoggingLog.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupLog(ctx *pulumi.Context, args *LookupLogArgs, opts ...pulumi.InvokeOption) (*LookupLogResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupLogResult
	err := ctx.Invoke("oci:Logging/getLog:getLog", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLog.
type LookupLogArgs struct {
	// OCID of a log group to work with.
	LogGroupId string `pulumi:"logGroupId"`
	// OCID of a log to work with.
	LogId string `pulumi:"logId"`
}

// A collection of values returned by getLog.
type LookupLogResult struct {
	// The OCID of the compartment that the resource belongs to.
	CompartmentId string `pulumi:"compartmentId"`
	// Log object configuration.
	Configurations []GetLogConfiguration `pulumi:"configurations"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// The user-friendly display name. This must be unique within the enclosing resource, and it's changeable. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The OCID of the resource.
	Id string `pulumi:"id"`
	// Whether or not this resource is currently enabled.
	IsEnabled bool `pulumi:"isEnabled"`
	// Log group OCID.
	LogGroupId string `pulumi:"logGroupId"`
	LogId      string `pulumi:"logId"`
	// The logType that the log object is for, whether custom or service.
	LogType string `pulumi:"logType"`
	// Log retention duration in 30-day increments (30, 60, 90 and so on until 180).
	RetentionDuration int `pulumi:"retentionDuration"`
	// The pipeline state.
	State string `pulumi:"state"`
	// The OCID of the tenancy.
	TenancyId string `pulumi:"tenancyId"`
	// Time the resource was created.
	TimeCreated string `pulumi:"timeCreated"`
	// Time the resource was last modified.
	TimeLastModified string `pulumi:"timeLastModified"`
}

func LookupLogOutput(ctx *pulumi.Context, args LookupLogOutputArgs, opts ...pulumi.InvokeOption) LookupLogResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupLogResultOutput, error) {
			args := v.(LookupLogArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Logging/getLog:getLog", args, LookupLogResultOutput{}, options).(LookupLogResultOutput), nil
		}).(LookupLogResultOutput)
}

// A collection of arguments for invoking getLog.
type LookupLogOutputArgs struct {
	// OCID of a log group to work with.
	LogGroupId pulumi.StringInput `pulumi:"logGroupId"`
	// OCID of a log to work with.
	LogId pulumi.StringInput `pulumi:"logId"`
}

func (LookupLogOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLogArgs)(nil)).Elem()
}

// A collection of values returned by getLog.
type LookupLogResultOutput struct{ *pulumi.OutputState }

func (LookupLogResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLogResult)(nil)).Elem()
}

func (o LookupLogResultOutput) ToLookupLogResultOutput() LookupLogResultOutput {
	return o
}

func (o LookupLogResultOutput) ToLookupLogResultOutputWithContext(ctx context.Context) LookupLogResultOutput {
	return o
}

// The OCID of the compartment that the resource belongs to.
func (o LookupLogResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Log object configuration.
func (o LookupLogResultOutput) Configurations() GetLogConfigurationArrayOutput {
	return o.ApplyT(func(v LookupLogResult) []GetLogConfiguration { return v.Configurations }).(GetLogConfigurationArrayOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o LookupLogResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupLogResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// The user-friendly display name. This must be unique within the enclosing resource, and it's changeable. Avoid entering confidential information.
func (o LookupLogResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o LookupLogResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupLogResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The OCID of the resource.
func (o LookupLogResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogResult) string { return v.Id }).(pulumi.StringOutput)
}

// Whether or not this resource is currently enabled.
func (o LookupLogResultOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupLogResult) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Log group OCID.
func (o LookupLogResultOutput) LogGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogResult) string { return v.LogGroupId }).(pulumi.StringOutput)
}

func (o LookupLogResultOutput) LogId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogResult) string { return v.LogId }).(pulumi.StringOutput)
}

// The logType that the log object is for, whether custom or service.
func (o LookupLogResultOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogResult) string { return v.LogType }).(pulumi.StringOutput)
}

// Log retention duration in 30-day increments (30, 60, 90 and so on until 180).
func (o LookupLogResultOutput) RetentionDuration() pulumi.IntOutput {
	return o.ApplyT(func(v LookupLogResult) int { return v.RetentionDuration }).(pulumi.IntOutput)
}

// The pipeline state.
func (o LookupLogResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogResult) string { return v.State }).(pulumi.StringOutput)
}

// The OCID of the tenancy.
func (o LookupLogResultOutput) TenancyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogResult) string { return v.TenancyId }).(pulumi.StringOutput)
}

// Time the resource was created.
func (o LookupLogResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Time the resource was last modified.
func (o LookupLogResultOutput) TimeLastModified() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogResult) string { return v.TimeLastModified }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLogResultOutput{})
}
