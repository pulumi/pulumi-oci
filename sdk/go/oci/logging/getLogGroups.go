// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package logging

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Log Groups in Oracle Cloud Infrastructure Logging service.
//
// Lists all log groups for the specified compartment or tenancy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/logging"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := logging.GetLogGroups(ctx, &logging.GetLogGroupsArgs{
//				CompartmentId:            compartmentId,
//				DisplayName:              pulumi.StringRef(logGroupDisplayName),
//				IsCompartmentIdInSubtree: pulumi.BoolRef(logGroupIsCompartmentIdInSubtree),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetLogGroups(ctx *pulumi.Context, args *GetLogGroupsArgs, opts ...pulumi.InvokeOption) (*GetLogGroupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLogGroupsResult
	err := ctx.Invoke("oci:Logging/getLogGroups:getLogGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLogGroups.
type GetLogGroupsArgs struct {
	// Compartment OCID to list resources in. See compartmentIdInSubtree for nested compartments traversal.
	CompartmentId string `pulumi:"compartmentId"`
	// Resource name.
	DisplayName *string              `pulumi:"displayName"`
	Filters     []GetLogGroupsFilter `pulumi:"filters"`
	// Specifies whether or not nested compartments should be traversed. Defaults to false.
	IsCompartmentIdInSubtree *bool `pulumi:"isCompartmentIdInSubtree"`
}

// A collection of values returned by getLogGroups.
type GetLogGroupsResult struct {
	// The OCID of the compartment that the resource belongs to.
	CompartmentId string `pulumi:"compartmentId"`
	// The user-friendly display name. This must be unique within the enclosing resource, and it's changeable. Avoid entering confidential information.
	DisplayName *string              `pulumi:"displayName"`
	Filters     []GetLogGroupsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                       string `pulumi:"id"`
	IsCompartmentIdInSubtree *bool  `pulumi:"isCompartmentIdInSubtree"`
	// The list of log_groups.
	LogGroups []GetLogGroupsLogGroup `pulumi:"logGroups"`
}

func GetLogGroupsOutput(ctx *pulumi.Context, args GetLogGroupsOutputArgs, opts ...pulumi.InvokeOption) GetLogGroupsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetLogGroupsResultOutput, error) {
			args := v.(GetLogGroupsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Logging/getLogGroups:getLogGroups", args, GetLogGroupsResultOutput{}, options).(GetLogGroupsResultOutput), nil
		}).(GetLogGroupsResultOutput)
}

// A collection of arguments for invoking getLogGroups.
type GetLogGroupsOutputArgs struct {
	// Compartment OCID to list resources in. See compartmentIdInSubtree for nested compartments traversal.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Resource name.
	DisplayName pulumi.StringPtrInput        `pulumi:"displayName"`
	Filters     GetLogGroupsFilterArrayInput `pulumi:"filters"`
	// Specifies whether or not nested compartments should be traversed. Defaults to false.
	IsCompartmentIdInSubtree pulumi.BoolPtrInput `pulumi:"isCompartmentIdInSubtree"`
}

func (GetLogGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogGroupsArgs)(nil)).Elem()
}

// A collection of values returned by getLogGroups.
type GetLogGroupsResultOutput struct{ *pulumi.OutputState }

func (GetLogGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogGroupsResult)(nil)).Elem()
}

func (o GetLogGroupsResultOutput) ToGetLogGroupsResultOutput() GetLogGroupsResultOutput {
	return o
}

func (o GetLogGroupsResultOutput) ToGetLogGroupsResultOutputWithContext(ctx context.Context) GetLogGroupsResultOutput {
	return o
}

// The OCID of the compartment that the resource belongs to.
func (o GetLogGroupsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogGroupsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The user-friendly display name. This must be unique within the enclosing resource, and it's changeable. Avoid entering confidential information.
func (o GetLogGroupsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogGroupsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetLogGroupsResultOutput) Filters() GetLogGroupsFilterArrayOutput {
	return o.ApplyT(func(v GetLogGroupsResult) []GetLogGroupsFilter { return v.Filters }).(GetLogGroupsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetLogGroupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogGroupsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetLogGroupsResultOutput) IsCompartmentIdInSubtree() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetLogGroupsResult) *bool { return v.IsCompartmentIdInSubtree }).(pulumi.BoolPtrOutput)
}

// The list of log_groups.
func (o GetLogGroupsResultOutput) LogGroups() GetLogGroupsLogGroupArrayOutput {
	return o.ApplyT(func(v GetLogGroupsResult) []GetLogGroupsLogGroup { return v.LogGroups }).(GetLogGroupsLogGroupArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLogGroupsResultOutput{})
}
