// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package logging

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Logs in Oracle Cloud Infrastructure Logging service.
//
// Lists the specified log group's log objects.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Logging"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Logging.GetLogs(ctx, &logging.GetLogsArgs{
//				LogGroupId:     testLogGroup.Id,
//				DisplayName:    pulumi.StringRef(logDisplayName),
//				LogType:        pulumi.StringRef(logLogType),
//				SourceResource: pulumi.StringRef(logSourceResource),
//				SourceService:  pulumi.StringRef(logSourceService),
//				State:          pulumi.StringRef(logState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetLogs(ctx *pulumi.Context, args *GetLogsArgs, opts ...pulumi.InvokeOption) (*GetLogsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLogsResult
	err := ctx.Invoke("oci:Logging/getLogs:getLogs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLogs.
type GetLogsArgs struct {
	// Resource name.
	DisplayName *string         `pulumi:"displayName"`
	Filters     []GetLogsFilter `pulumi:"filters"`
	// OCID of a log group to work with.
	LogGroupId string `pulumi:"logGroupId"`
	// The logType that the log object is for, whether custom or service.
	LogType *string `pulumi:"logType"`
	// Log object resource, which is a field of LogSummary.Configuration.Source.
	SourceResource *string `pulumi:"sourceResource"`
	// Service that created the log object, which is a field of LogSummary.Configuration.Source.
	SourceService *string `pulumi:"sourceService"`
	// Lifecycle state of the log object
	State *string `pulumi:"state"`
}

// A collection of values returned by getLogs.
type GetLogsResult struct {
	// The user-friendly display name. This must be unique within the enclosing resource, and it's changeable. Avoid entering confidential information.
	DisplayName *string         `pulumi:"displayName"`
	Filters     []GetLogsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Log group OCID.
	LogGroupId string `pulumi:"logGroupId"`
	// The logType that the log object is for, whether custom or service.
	LogType *string `pulumi:"logType"`
	// The list of logs.
	Logs           []GetLogsLog `pulumi:"logs"`
	SourceResource *string      `pulumi:"sourceResource"`
	SourceService  *string      `pulumi:"sourceService"`
	// The pipeline state.
	State *string `pulumi:"state"`
}

func GetLogsOutput(ctx *pulumi.Context, args GetLogsOutputArgs, opts ...pulumi.InvokeOption) GetLogsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetLogsResult, error) {
			args := v.(GetLogsArgs)
			r, err := GetLogs(ctx, &args, opts...)
			var s GetLogsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetLogsResultOutput)
}

// A collection of arguments for invoking getLogs.
type GetLogsOutputArgs struct {
	// Resource name.
	DisplayName pulumi.StringPtrInput   `pulumi:"displayName"`
	Filters     GetLogsFilterArrayInput `pulumi:"filters"`
	// OCID of a log group to work with.
	LogGroupId pulumi.StringInput `pulumi:"logGroupId"`
	// The logType that the log object is for, whether custom or service.
	LogType pulumi.StringPtrInput `pulumi:"logType"`
	// Log object resource, which is a field of LogSummary.Configuration.Source.
	SourceResource pulumi.StringPtrInput `pulumi:"sourceResource"`
	// Service that created the log object, which is a field of LogSummary.Configuration.Source.
	SourceService pulumi.StringPtrInput `pulumi:"sourceService"`
	// Lifecycle state of the log object
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetLogsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsArgs)(nil)).Elem()
}

// A collection of values returned by getLogs.
type GetLogsResultOutput struct{ *pulumi.OutputState }

func (GetLogsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsResult)(nil)).Elem()
}

func (o GetLogsResultOutput) ToGetLogsResultOutput() GetLogsResultOutput {
	return o
}

func (o GetLogsResultOutput) ToGetLogsResultOutputWithContext(ctx context.Context) GetLogsResultOutput {
	return o
}

// The user-friendly display name. This must be unique within the enclosing resource, and it's changeable. Avoid entering confidential information.
func (o GetLogsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetLogsResultOutput) Filters() GetLogsFilterArrayOutput {
	return o.ApplyT(func(v GetLogsResult) []GetLogsFilter { return v.Filters }).(GetLogsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetLogsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Log group OCID.
func (o GetLogsResultOutput) LogGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogsResult) string { return v.LogGroupId }).(pulumi.StringOutput)
}

// The logType that the log object is for, whether custom or service.
func (o GetLogsResultOutput) LogType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogsResult) *string { return v.LogType }).(pulumi.StringPtrOutput)
}

// The list of logs.
func (o GetLogsResultOutput) Logs() GetLogsLogArrayOutput {
	return o.ApplyT(func(v GetLogsResult) []GetLogsLog { return v.Logs }).(GetLogsLogArrayOutput)
}

func (o GetLogsResultOutput) SourceResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogsResult) *string { return v.SourceResource }).(pulumi.StringPtrOutput)
}

func (o GetLogsResultOutput) SourceService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogsResult) *string { return v.SourceService }).(pulumi.StringPtrOutput)
}

// The pipeline state.
func (o GetLogsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLogsResultOutput{})
}
