// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lustre

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type FileStorageLustreFileSystemMaintenanceWindow struct {
	// Day of the week when the maintainence window starts.
	DayOfWeek *string `pulumi:"dayOfWeek"`
	// The time to start the maintenance window. The format is 'HH:MM', 'HH:MM' represents the time in UTC.   Example: `22:00`
	TimeStart *string `pulumi:"timeStart"`
}

// FileStorageLustreFileSystemMaintenanceWindowInput is an input type that accepts FileStorageLustreFileSystemMaintenanceWindowArgs and FileStorageLustreFileSystemMaintenanceWindowOutput values.
// You can construct a concrete instance of `FileStorageLustreFileSystemMaintenanceWindowInput` via:
//
//	FileStorageLustreFileSystemMaintenanceWindowArgs{...}
type FileStorageLustreFileSystemMaintenanceWindowInput interface {
	pulumi.Input

	ToFileStorageLustreFileSystemMaintenanceWindowOutput() FileStorageLustreFileSystemMaintenanceWindowOutput
	ToFileStorageLustreFileSystemMaintenanceWindowOutputWithContext(context.Context) FileStorageLustreFileSystemMaintenanceWindowOutput
}

type FileStorageLustreFileSystemMaintenanceWindowArgs struct {
	// Day of the week when the maintainence window starts.
	DayOfWeek pulumi.StringPtrInput `pulumi:"dayOfWeek"`
	// The time to start the maintenance window. The format is 'HH:MM', 'HH:MM' represents the time in UTC.   Example: `22:00`
	TimeStart pulumi.StringPtrInput `pulumi:"timeStart"`
}

func (FileStorageLustreFileSystemMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileStorageLustreFileSystemMaintenanceWindow)(nil)).Elem()
}

func (i FileStorageLustreFileSystemMaintenanceWindowArgs) ToFileStorageLustreFileSystemMaintenanceWindowOutput() FileStorageLustreFileSystemMaintenanceWindowOutput {
	return i.ToFileStorageLustreFileSystemMaintenanceWindowOutputWithContext(context.Background())
}

func (i FileStorageLustreFileSystemMaintenanceWindowArgs) ToFileStorageLustreFileSystemMaintenanceWindowOutputWithContext(ctx context.Context) FileStorageLustreFileSystemMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileStorageLustreFileSystemMaintenanceWindowOutput)
}

// FileStorageLustreFileSystemMaintenanceWindowArrayInput is an input type that accepts FileStorageLustreFileSystemMaintenanceWindowArray and FileStorageLustreFileSystemMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `FileStorageLustreFileSystemMaintenanceWindowArrayInput` via:
//
//	FileStorageLustreFileSystemMaintenanceWindowArray{ FileStorageLustreFileSystemMaintenanceWindowArgs{...} }
type FileStorageLustreFileSystemMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToFileStorageLustreFileSystemMaintenanceWindowArrayOutput() FileStorageLustreFileSystemMaintenanceWindowArrayOutput
	ToFileStorageLustreFileSystemMaintenanceWindowArrayOutputWithContext(context.Context) FileStorageLustreFileSystemMaintenanceWindowArrayOutput
}

type FileStorageLustreFileSystemMaintenanceWindowArray []FileStorageLustreFileSystemMaintenanceWindowInput

func (FileStorageLustreFileSystemMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FileStorageLustreFileSystemMaintenanceWindow)(nil)).Elem()
}

func (i FileStorageLustreFileSystemMaintenanceWindowArray) ToFileStorageLustreFileSystemMaintenanceWindowArrayOutput() FileStorageLustreFileSystemMaintenanceWindowArrayOutput {
	return i.ToFileStorageLustreFileSystemMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i FileStorageLustreFileSystemMaintenanceWindowArray) ToFileStorageLustreFileSystemMaintenanceWindowArrayOutputWithContext(ctx context.Context) FileStorageLustreFileSystemMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileStorageLustreFileSystemMaintenanceWindowArrayOutput)
}

type FileStorageLustreFileSystemMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (FileStorageLustreFileSystemMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileStorageLustreFileSystemMaintenanceWindow)(nil)).Elem()
}

func (o FileStorageLustreFileSystemMaintenanceWindowOutput) ToFileStorageLustreFileSystemMaintenanceWindowOutput() FileStorageLustreFileSystemMaintenanceWindowOutput {
	return o
}

func (o FileStorageLustreFileSystemMaintenanceWindowOutput) ToFileStorageLustreFileSystemMaintenanceWindowOutputWithContext(ctx context.Context) FileStorageLustreFileSystemMaintenanceWindowOutput {
	return o
}

// Day of the week when the maintainence window starts.
func (o FileStorageLustreFileSystemMaintenanceWindowOutput) DayOfWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileStorageLustreFileSystemMaintenanceWindow) *string { return v.DayOfWeek }).(pulumi.StringPtrOutput)
}

// The time to start the maintenance window. The format is 'HH:MM', 'HH:MM' represents the time in UTC.   Example: `22:00`
func (o FileStorageLustreFileSystemMaintenanceWindowOutput) TimeStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileStorageLustreFileSystemMaintenanceWindow) *string { return v.TimeStart }).(pulumi.StringPtrOutput)
}

type FileStorageLustreFileSystemMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (FileStorageLustreFileSystemMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FileStorageLustreFileSystemMaintenanceWindow)(nil)).Elem()
}

func (o FileStorageLustreFileSystemMaintenanceWindowArrayOutput) ToFileStorageLustreFileSystemMaintenanceWindowArrayOutput() FileStorageLustreFileSystemMaintenanceWindowArrayOutput {
	return o
}

func (o FileStorageLustreFileSystemMaintenanceWindowArrayOutput) ToFileStorageLustreFileSystemMaintenanceWindowArrayOutputWithContext(ctx context.Context) FileStorageLustreFileSystemMaintenanceWindowArrayOutput {
	return o
}

func (o FileStorageLustreFileSystemMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) FileStorageLustreFileSystemMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FileStorageLustreFileSystemMaintenanceWindow {
		return vs[0].([]FileStorageLustreFileSystemMaintenanceWindow)[vs[1].(int)]
	}).(FileStorageLustreFileSystemMaintenanceWindowOutput)
}

type FileStorageLustreFileSystemRootSquashConfiguration struct {
	// (Updatable) A list of NIDs allowed with this lustre file system not to be squashed. A maximum of 10 is allowed.
	ClientExceptions []string `pulumi:"clientExceptions"`
	// (Updatable) Used when clients accessing the Lustre file system have their UID and GID remapped to `squashUid` and `squashGid`. If `ROOT`, only the root user and group (UID/GID 0) are remapped; if `NONE`, no remapping is done. If unspecified, defaults to `NONE`.
	IdentitySquash *string `pulumi:"identitySquash"`
	// (Updatable) The GID value to remap to when squashing a client GID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
	SquashGid *string `pulumi:"squashGid"`
	// (Updatable) The UID value to remap to when squashing a client UID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
	SquashUid *string `pulumi:"squashUid"`
}

// FileStorageLustreFileSystemRootSquashConfigurationInput is an input type that accepts FileStorageLustreFileSystemRootSquashConfigurationArgs and FileStorageLustreFileSystemRootSquashConfigurationOutput values.
// You can construct a concrete instance of `FileStorageLustreFileSystemRootSquashConfigurationInput` via:
//
//	FileStorageLustreFileSystemRootSquashConfigurationArgs{...}
type FileStorageLustreFileSystemRootSquashConfigurationInput interface {
	pulumi.Input

	ToFileStorageLustreFileSystemRootSquashConfigurationOutput() FileStorageLustreFileSystemRootSquashConfigurationOutput
	ToFileStorageLustreFileSystemRootSquashConfigurationOutputWithContext(context.Context) FileStorageLustreFileSystemRootSquashConfigurationOutput
}

type FileStorageLustreFileSystemRootSquashConfigurationArgs struct {
	// (Updatable) A list of NIDs allowed with this lustre file system not to be squashed. A maximum of 10 is allowed.
	ClientExceptions pulumi.StringArrayInput `pulumi:"clientExceptions"`
	// (Updatable) Used when clients accessing the Lustre file system have their UID and GID remapped to `squashUid` and `squashGid`. If `ROOT`, only the root user and group (UID/GID 0) are remapped; if `NONE`, no remapping is done. If unspecified, defaults to `NONE`.
	IdentitySquash pulumi.StringPtrInput `pulumi:"identitySquash"`
	// (Updatable) The GID value to remap to when squashing a client GID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
	SquashGid pulumi.StringPtrInput `pulumi:"squashGid"`
	// (Updatable) The UID value to remap to when squashing a client UID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
	SquashUid pulumi.StringPtrInput `pulumi:"squashUid"`
}

func (FileStorageLustreFileSystemRootSquashConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileStorageLustreFileSystemRootSquashConfiguration)(nil)).Elem()
}

func (i FileStorageLustreFileSystemRootSquashConfigurationArgs) ToFileStorageLustreFileSystemRootSquashConfigurationOutput() FileStorageLustreFileSystemRootSquashConfigurationOutput {
	return i.ToFileStorageLustreFileSystemRootSquashConfigurationOutputWithContext(context.Background())
}

func (i FileStorageLustreFileSystemRootSquashConfigurationArgs) ToFileStorageLustreFileSystemRootSquashConfigurationOutputWithContext(ctx context.Context) FileStorageLustreFileSystemRootSquashConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileStorageLustreFileSystemRootSquashConfigurationOutput)
}

func (i FileStorageLustreFileSystemRootSquashConfigurationArgs) ToFileStorageLustreFileSystemRootSquashConfigurationPtrOutput() FileStorageLustreFileSystemRootSquashConfigurationPtrOutput {
	return i.ToFileStorageLustreFileSystemRootSquashConfigurationPtrOutputWithContext(context.Background())
}

func (i FileStorageLustreFileSystemRootSquashConfigurationArgs) ToFileStorageLustreFileSystemRootSquashConfigurationPtrOutputWithContext(ctx context.Context) FileStorageLustreFileSystemRootSquashConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileStorageLustreFileSystemRootSquashConfigurationOutput).ToFileStorageLustreFileSystemRootSquashConfigurationPtrOutputWithContext(ctx)
}

// FileStorageLustreFileSystemRootSquashConfigurationPtrInput is an input type that accepts FileStorageLustreFileSystemRootSquashConfigurationArgs, FileStorageLustreFileSystemRootSquashConfigurationPtr and FileStorageLustreFileSystemRootSquashConfigurationPtrOutput values.
// You can construct a concrete instance of `FileStorageLustreFileSystemRootSquashConfigurationPtrInput` via:
//
//	        FileStorageLustreFileSystemRootSquashConfigurationArgs{...}
//
//	or:
//
//	        nil
type FileStorageLustreFileSystemRootSquashConfigurationPtrInput interface {
	pulumi.Input

	ToFileStorageLustreFileSystemRootSquashConfigurationPtrOutput() FileStorageLustreFileSystemRootSquashConfigurationPtrOutput
	ToFileStorageLustreFileSystemRootSquashConfigurationPtrOutputWithContext(context.Context) FileStorageLustreFileSystemRootSquashConfigurationPtrOutput
}

type fileStorageLustreFileSystemRootSquashConfigurationPtrType FileStorageLustreFileSystemRootSquashConfigurationArgs

func FileStorageLustreFileSystemRootSquashConfigurationPtr(v *FileStorageLustreFileSystemRootSquashConfigurationArgs) FileStorageLustreFileSystemRootSquashConfigurationPtrInput {
	return (*fileStorageLustreFileSystemRootSquashConfigurationPtrType)(v)
}

func (*fileStorageLustreFileSystemRootSquashConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FileStorageLustreFileSystemRootSquashConfiguration)(nil)).Elem()
}

func (i *fileStorageLustreFileSystemRootSquashConfigurationPtrType) ToFileStorageLustreFileSystemRootSquashConfigurationPtrOutput() FileStorageLustreFileSystemRootSquashConfigurationPtrOutput {
	return i.ToFileStorageLustreFileSystemRootSquashConfigurationPtrOutputWithContext(context.Background())
}

func (i *fileStorageLustreFileSystemRootSquashConfigurationPtrType) ToFileStorageLustreFileSystemRootSquashConfigurationPtrOutputWithContext(ctx context.Context) FileStorageLustreFileSystemRootSquashConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileStorageLustreFileSystemRootSquashConfigurationPtrOutput)
}

type FileStorageLustreFileSystemRootSquashConfigurationOutput struct{ *pulumi.OutputState }

func (FileStorageLustreFileSystemRootSquashConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileStorageLustreFileSystemRootSquashConfiguration)(nil)).Elem()
}

func (o FileStorageLustreFileSystemRootSquashConfigurationOutput) ToFileStorageLustreFileSystemRootSquashConfigurationOutput() FileStorageLustreFileSystemRootSquashConfigurationOutput {
	return o
}

func (o FileStorageLustreFileSystemRootSquashConfigurationOutput) ToFileStorageLustreFileSystemRootSquashConfigurationOutputWithContext(ctx context.Context) FileStorageLustreFileSystemRootSquashConfigurationOutput {
	return o
}

func (o FileStorageLustreFileSystemRootSquashConfigurationOutput) ToFileStorageLustreFileSystemRootSquashConfigurationPtrOutput() FileStorageLustreFileSystemRootSquashConfigurationPtrOutput {
	return o.ToFileStorageLustreFileSystemRootSquashConfigurationPtrOutputWithContext(context.Background())
}

func (o FileStorageLustreFileSystemRootSquashConfigurationOutput) ToFileStorageLustreFileSystemRootSquashConfigurationPtrOutputWithContext(ctx context.Context) FileStorageLustreFileSystemRootSquashConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FileStorageLustreFileSystemRootSquashConfiguration) *FileStorageLustreFileSystemRootSquashConfiguration {
		return &v
	}).(FileStorageLustreFileSystemRootSquashConfigurationPtrOutput)
}

// (Updatable) A list of NIDs allowed with this lustre file system not to be squashed. A maximum of 10 is allowed.
func (o FileStorageLustreFileSystemRootSquashConfigurationOutput) ClientExceptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FileStorageLustreFileSystemRootSquashConfiguration) []string { return v.ClientExceptions }).(pulumi.StringArrayOutput)
}

// (Updatable) Used when clients accessing the Lustre file system have their UID and GID remapped to `squashUid` and `squashGid`. If `ROOT`, only the root user and group (UID/GID 0) are remapped; if `NONE`, no remapping is done. If unspecified, defaults to `NONE`.
func (o FileStorageLustreFileSystemRootSquashConfigurationOutput) IdentitySquash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileStorageLustreFileSystemRootSquashConfiguration) *string { return v.IdentitySquash }).(pulumi.StringPtrOutput)
}

// (Updatable) The GID value to remap to when squashing a client GID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
func (o FileStorageLustreFileSystemRootSquashConfigurationOutput) SquashGid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileStorageLustreFileSystemRootSquashConfiguration) *string { return v.SquashGid }).(pulumi.StringPtrOutput)
}

// (Updatable) The UID value to remap to when squashing a client UID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
func (o FileStorageLustreFileSystemRootSquashConfigurationOutput) SquashUid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileStorageLustreFileSystemRootSquashConfiguration) *string { return v.SquashUid }).(pulumi.StringPtrOutput)
}

type FileStorageLustreFileSystemRootSquashConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FileStorageLustreFileSystemRootSquashConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FileStorageLustreFileSystemRootSquashConfiguration)(nil)).Elem()
}

func (o FileStorageLustreFileSystemRootSquashConfigurationPtrOutput) ToFileStorageLustreFileSystemRootSquashConfigurationPtrOutput() FileStorageLustreFileSystemRootSquashConfigurationPtrOutput {
	return o
}

func (o FileStorageLustreFileSystemRootSquashConfigurationPtrOutput) ToFileStorageLustreFileSystemRootSquashConfigurationPtrOutputWithContext(ctx context.Context) FileStorageLustreFileSystemRootSquashConfigurationPtrOutput {
	return o
}

func (o FileStorageLustreFileSystemRootSquashConfigurationPtrOutput) Elem() FileStorageLustreFileSystemRootSquashConfigurationOutput {
	return o.ApplyT(func(v *FileStorageLustreFileSystemRootSquashConfiguration) FileStorageLustreFileSystemRootSquashConfiguration {
		if v != nil {
			return *v
		}
		var ret FileStorageLustreFileSystemRootSquashConfiguration
		return ret
	}).(FileStorageLustreFileSystemRootSquashConfigurationOutput)
}

// (Updatable) A list of NIDs allowed with this lustre file system not to be squashed. A maximum of 10 is allowed.
func (o FileStorageLustreFileSystemRootSquashConfigurationPtrOutput) ClientExceptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FileStorageLustreFileSystemRootSquashConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.ClientExceptions
	}).(pulumi.StringArrayOutput)
}

// (Updatable) Used when clients accessing the Lustre file system have their UID and GID remapped to `squashUid` and `squashGid`. If `ROOT`, only the root user and group (UID/GID 0) are remapped; if `NONE`, no remapping is done. If unspecified, defaults to `NONE`.
func (o FileStorageLustreFileSystemRootSquashConfigurationPtrOutput) IdentitySquash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileStorageLustreFileSystemRootSquashConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.IdentitySquash
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The GID value to remap to when squashing a client GID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
func (o FileStorageLustreFileSystemRootSquashConfigurationPtrOutput) SquashGid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileStorageLustreFileSystemRootSquashConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.SquashGid
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The UID value to remap to when squashing a client UID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
func (o FileStorageLustreFileSystemRootSquashConfigurationPtrOutput) SquashUid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileStorageLustreFileSystemRootSquashConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.SquashUid
	}).(pulumi.StringPtrOutput)
}

type GetFileStorageLustreFileSystemMaintenanceWindow struct {
	// Day of the week when the maintainence window starts.
	DayOfWeek string `pulumi:"dayOfWeek"`
	// The time to start the maintenance window. The format is 'HH:MM', 'HH:MM' represents the time in UTC.   Example: `22:00`
	TimeStart string `pulumi:"timeStart"`
}

// GetFileStorageLustreFileSystemMaintenanceWindowInput is an input type that accepts GetFileStorageLustreFileSystemMaintenanceWindowArgs and GetFileStorageLustreFileSystemMaintenanceWindowOutput values.
// You can construct a concrete instance of `GetFileStorageLustreFileSystemMaintenanceWindowInput` via:
//
//	GetFileStorageLustreFileSystemMaintenanceWindowArgs{...}
type GetFileStorageLustreFileSystemMaintenanceWindowInput interface {
	pulumi.Input

	ToGetFileStorageLustreFileSystemMaintenanceWindowOutput() GetFileStorageLustreFileSystemMaintenanceWindowOutput
	ToGetFileStorageLustreFileSystemMaintenanceWindowOutputWithContext(context.Context) GetFileStorageLustreFileSystemMaintenanceWindowOutput
}

type GetFileStorageLustreFileSystemMaintenanceWindowArgs struct {
	// Day of the week when the maintainence window starts.
	DayOfWeek pulumi.StringInput `pulumi:"dayOfWeek"`
	// The time to start the maintenance window. The format is 'HH:MM', 'HH:MM' represents the time in UTC.   Example: `22:00`
	TimeStart pulumi.StringInput `pulumi:"timeStart"`
}

func (GetFileStorageLustreFileSystemMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileStorageLustreFileSystemMaintenanceWindow)(nil)).Elem()
}

func (i GetFileStorageLustreFileSystemMaintenanceWindowArgs) ToGetFileStorageLustreFileSystemMaintenanceWindowOutput() GetFileStorageLustreFileSystemMaintenanceWindowOutput {
	return i.ToGetFileStorageLustreFileSystemMaintenanceWindowOutputWithContext(context.Background())
}

func (i GetFileStorageLustreFileSystemMaintenanceWindowArgs) ToGetFileStorageLustreFileSystemMaintenanceWindowOutputWithContext(ctx context.Context) GetFileStorageLustreFileSystemMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFileStorageLustreFileSystemMaintenanceWindowOutput)
}

// GetFileStorageLustreFileSystemMaintenanceWindowArrayInput is an input type that accepts GetFileStorageLustreFileSystemMaintenanceWindowArray and GetFileStorageLustreFileSystemMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `GetFileStorageLustreFileSystemMaintenanceWindowArrayInput` via:
//
//	GetFileStorageLustreFileSystemMaintenanceWindowArray{ GetFileStorageLustreFileSystemMaintenanceWindowArgs{...} }
type GetFileStorageLustreFileSystemMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToGetFileStorageLustreFileSystemMaintenanceWindowArrayOutput() GetFileStorageLustreFileSystemMaintenanceWindowArrayOutput
	ToGetFileStorageLustreFileSystemMaintenanceWindowArrayOutputWithContext(context.Context) GetFileStorageLustreFileSystemMaintenanceWindowArrayOutput
}

type GetFileStorageLustreFileSystemMaintenanceWindowArray []GetFileStorageLustreFileSystemMaintenanceWindowInput

func (GetFileStorageLustreFileSystemMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFileStorageLustreFileSystemMaintenanceWindow)(nil)).Elem()
}

func (i GetFileStorageLustreFileSystemMaintenanceWindowArray) ToGetFileStorageLustreFileSystemMaintenanceWindowArrayOutput() GetFileStorageLustreFileSystemMaintenanceWindowArrayOutput {
	return i.ToGetFileStorageLustreFileSystemMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i GetFileStorageLustreFileSystemMaintenanceWindowArray) ToGetFileStorageLustreFileSystemMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetFileStorageLustreFileSystemMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFileStorageLustreFileSystemMaintenanceWindowArrayOutput)
}

type GetFileStorageLustreFileSystemMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (GetFileStorageLustreFileSystemMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileStorageLustreFileSystemMaintenanceWindow)(nil)).Elem()
}

func (o GetFileStorageLustreFileSystemMaintenanceWindowOutput) ToGetFileStorageLustreFileSystemMaintenanceWindowOutput() GetFileStorageLustreFileSystemMaintenanceWindowOutput {
	return o
}

func (o GetFileStorageLustreFileSystemMaintenanceWindowOutput) ToGetFileStorageLustreFileSystemMaintenanceWindowOutputWithContext(ctx context.Context) GetFileStorageLustreFileSystemMaintenanceWindowOutput {
	return o
}

// Day of the week when the maintainence window starts.
func (o GetFileStorageLustreFileSystemMaintenanceWindowOutput) DayOfWeek() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemMaintenanceWindow) string { return v.DayOfWeek }).(pulumi.StringOutput)
}

// The time to start the maintenance window. The format is 'HH:MM', 'HH:MM' represents the time in UTC.   Example: `22:00`
func (o GetFileStorageLustreFileSystemMaintenanceWindowOutput) TimeStart() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemMaintenanceWindow) string { return v.TimeStart }).(pulumi.StringOutput)
}

type GetFileStorageLustreFileSystemMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (GetFileStorageLustreFileSystemMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFileStorageLustreFileSystemMaintenanceWindow)(nil)).Elem()
}

func (o GetFileStorageLustreFileSystemMaintenanceWindowArrayOutput) ToGetFileStorageLustreFileSystemMaintenanceWindowArrayOutput() GetFileStorageLustreFileSystemMaintenanceWindowArrayOutput {
	return o
}

func (o GetFileStorageLustreFileSystemMaintenanceWindowArrayOutput) ToGetFileStorageLustreFileSystemMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetFileStorageLustreFileSystemMaintenanceWindowArrayOutput {
	return o
}

func (o GetFileStorageLustreFileSystemMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) GetFileStorageLustreFileSystemMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFileStorageLustreFileSystemMaintenanceWindow {
		return vs[0].([]GetFileStorageLustreFileSystemMaintenanceWindow)[vs[1].(int)]
	}).(GetFileStorageLustreFileSystemMaintenanceWindowOutput)
}

type GetFileStorageLustreFileSystemRootSquashConfiguration struct {
	// A list of NIDs allowed with this lustre file system not to be squashed. A maximum of 10 is allowed.
	ClientExceptions []string `pulumi:"clientExceptions"`
	// Used when clients accessing the Lustre file system have their UID and GID remapped to `squashUid` and `squashGid`. If `ROOT`, only the root user and group (UID/GID 0) are remapped; if `NONE`, no remapping is done. If unspecified, defaults to `NONE`.
	IdentitySquash string `pulumi:"identitySquash"`
	// The GID value to remap to when squashing a client GID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
	SquashGid string `pulumi:"squashGid"`
	// The UID value to remap to when squashing a client UID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
	SquashUid string `pulumi:"squashUid"`
}

// GetFileStorageLustreFileSystemRootSquashConfigurationInput is an input type that accepts GetFileStorageLustreFileSystemRootSquashConfigurationArgs and GetFileStorageLustreFileSystemRootSquashConfigurationOutput values.
// You can construct a concrete instance of `GetFileStorageLustreFileSystemRootSquashConfigurationInput` via:
//
//	GetFileStorageLustreFileSystemRootSquashConfigurationArgs{...}
type GetFileStorageLustreFileSystemRootSquashConfigurationInput interface {
	pulumi.Input

	ToGetFileStorageLustreFileSystemRootSquashConfigurationOutput() GetFileStorageLustreFileSystemRootSquashConfigurationOutput
	ToGetFileStorageLustreFileSystemRootSquashConfigurationOutputWithContext(context.Context) GetFileStorageLustreFileSystemRootSquashConfigurationOutput
}

type GetFileStorageLustreFileSystemRootSquashConfigurationArgs struct {
	// A list of NIDs allowed with this lustre file system not to be squashed. A maximum of 10 is allowed.
	ClientExceptions pulumi.StringArrayInput `pulumi:"clientExceptions"`
	// Used when clients accessing the Lustre file system have their UID and GID remapped to `squashUid` and `squashGid`. If `ROOT`, only the root user and group (UID/GID 0) are remapped; if `NONE`, no remapping is done. If unspecified, defaults to `NONE`.
	IdentitySquash pulumi.StringInput `pulumi:"identitySquash"`
	// The GID value to remap to when squashing a client GID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
	SquashGid pulumi.StringInput `pulumi:"squashGid"`
	// The UID value to remap to when squashing a client UID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
	SquashUid pulumi.StringInput `pulumi:"squashUid"`
}

func (GetFileStorageLustreFileSystemRootSquashConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileStorageLustreFileSystemRootSquashConfiguration)(nil)).Elem()
}

func (i GetFileStorageLustreFileSystemRootSquashConfigurationArgs) ToGetFileStorageLustreFileSystemRootSquashConfigurationOutput() GetFileStorageLustreFileSystemRootSquashConfigurationOutput {
	return i.ToGetFileStorageLustreFileSystemRootSquashConfigurationOutputWithContext(context.Background())
}

func (i GetFileStorageLustreFileSystemRootSquashConfigurationArgs) ToGetFileStorageLustreFileSystemRootSquashConfigurationOutputWithContext(ctx context.Context) GetFileStorageLustreFileSystemRootSquashConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFileStorageLustreFileSystemRootSquashConfigurationOutput)
}

// GetFileStorageLustreFileSystemRootSquashConfigurationArrayInput is an input type that accepts GetFileStorageLustreFileSystemRootSquashConfigurationArray and GetFileStorageLustreFileSystemRootSquashConfigurationArrayOutput values.
// You can construct a concrete instance of `GetFileStorageLustreFileSystemRootSquashConfigurationArrayInput` via:
//
//	GetFileStorageLustreFileSystemRootSquashConfigurationArray{ GetFileStorageLustreFileSystemRootSquashConfigurationArgs{...} }
type GetFileStorageLustreFileSystemRootSquashConfigurationArrayInput interface {
	pulumi.Input

	ToGetFileStorageLustreFileSystemRootSquashConfigurationArrayOutput() GetFileStorageLustreFileSystemRootSquashConfigurationArrayOutput
	ToGetFileStorageLustreFileSystemRootSquashConfigurationArrayOutputWithContext(context.Context) GetFileStorageLustreFileSystemRootSquashConfigurationArrayOutput
}

type GetFileStorageLustreFileSystemRootSquashConfigurationArray []GetFileStorageLustreFileSystemRootSquashConfigurationInput

func (GetFileStorageLustreFileSystemRootSquashConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFileStorageLustreFileSystemRootSquashConfiguration)(nil)).Elem()
}

func (i GetFileStorageLustreFileSystemRootSquashConfigurationArray) ToGetFileStorageLustreFileSystemRootSquashConfigurationArrayOutput() GetFileStorageLustreFileSystemRootSquashConfigurationArrayOutput {
	return i.ToGetFileStorageLustreFileSystemRootSquashConfigurationArrayOutputWithContext(context.Background())
}

func (i GetFileStorageLustreFileSystemRootSquashConfigurationArray) ToGetFileStorageLustreFileSystemRootSquashConfigurationArrayOutputWithContext(ctx context.Context) GetFileStorageLustreFileSystemRootSquashConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFileStorageLustreFileSystemRootSquashConfigurationArrayOutput)
}

type GetFileStorageLustreFileSystemRootSquashConfigurationOutput struct{ *pulumi.OutputState }

func (GetFileStorageLustreFileSystemRootSquashConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileStorageLustreFileSystemRootSquashConfiguration)(nil)).Elem()
}

func (o GetFileStorageLustreFileSystemRootSquashConfigurationOutput) ToGetFileStorageLustreFileSystemRootSquashConfigurationOutput() GetFileStorageLustreFileSystemRootSquashConfigurationOutput {
	return o
}

func (o GetFileStorageLustreFileSystemRootSquashConfigurationOutput) ToGetFileStorageLustreFileSystemRootSquashConfigurationOutputWithContext(ctx context.Context) GetFileStorageLustreFileSystemRootSquashConfigurationOutput {
	return o
}

// A list of NIDs allowed with this lustre file system not to be squashed. A maximum of 10 is allowed.
func (o GetFileStorageLustreFileSystemRootSquashConfigurationOutput) ClientExceptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemRootSquashConfiguration) []string { return v.ClientExceptions }).(pulumi.StringArrayOutput)
}

// Used when clients accessing the Lustre file system have their UID and GID remapped to `squashUid` and `squashGid`. If `ROOT`, only the root user and group (UID/GID 0) are remapped; if `NONE`, no remapping is done. If unspecified, defaults to `NONE`.
func (o GetFileStorageLustreFileSystemRootSquashConfigurationOutput) IdentitySquash() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemRootSquashConfiguration) string { return v.IdentitySquash }).(pulumi.StringOutput)
}

// The GID value to remap to when squashing a client GID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
func (o GetFileStorageLustreFileSystemRootSquashConfigurationOutput) SquashGid() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemRootSquashConfiguration) string { return v.SquashGid }).(pulumi.StringOutput)
}

// The UID value to remap to when squashing a client UID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
func (o GetFileStorageLustreFileSystemRootSquashConfigurationOutput) SquashUid() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemRootSquashConfiguration) string { return v.SquashUid }).(pulumi.StringOutput)
}

type GetFileStorageLustreFileSystemRootSquashConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetFileStorageLustreFileSystemRootSquashConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFileStorageLustreFileSystemRootSquashConfiguration)(nil)).Elem()
}

func (o GetFileStorageLustreFileSystemRootSquashConfigurationArrayOutput) ToGetFileStorageLustreFileSystemRootSquashConfigurationArrayOutput() GetFileStorageLustreFileSystemRootSquashConfigurationArrayOutput {
	return o
}

func (o GetFileStorageLustreFileSystemRootSquashConfigurationArrayOutput) ToGetFileStorageLustreFileSystemRootSquashConfigurationArrayOutputWithContext(ctx context.Context) GetFileStorageLustreFileSystemRootSquashConfigurationArrayOutput {
	return o
}

func (o GetFileStorageLustreFileSystemRootSquashConfigurationArrayOutput) Index(i pulumi.IntInput) GetFileStorageLustreFileSystemRootSquashConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFileStorageLustreFileSystemRootSquashConfiguration {
		return vs[0].([]GetFileStorageLustreFileSystemRootSquashConfiguration)[vs[1].(int)]
	}).(GetFileStorageLustreFileSystemRootSquashConfigurationOutput)
}

type GetFileStorageLustreFileSystemsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetFileStorageLustreFileSystemsFilterInput is an input type that accepts GetFileStorageLustreFileSystemsFilterArgs and GetFileStorageLustreFileSystemsFilterOutput values.
// You can construct a concrete instance of `GetFileStorageLustreFileSystemsFilterInput` via:
//
//	GetFileStorageLustreFileSystemsFilterArgs{...}
type GetFileStorageLustreFileSystemsFilterInput interface {
	pulumi.Input

	ToGetFileStorageLustreFileSystemsFilterOutput() GetFileStorageLustreFileSystemsFilterOutput
	ToGetFileStorageLustreFileSystemsFilterOutputWithContext(context.Context) GetFileStorageLustreFileSystemsFilterOutput
}

type GetFileStorageLustreFileSystemsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetFileStorageLustreFileSystemsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileStorageLustreFileSystemsFilter)(nil)).Elem()
}

func (i GetFileStorageLustreFileSystemsFilterArgs) ToGetFileStorageLustreFileSystemsFilterOutput() GetFileStorageLustreFileSystemsFilterOutput {
	return i.ToGetFileStorageLustreFileSystemsFilterOutputWithContext(context.Background())
}

func (i GetFileStorageLustreFileSystemsFilterArgs) ToGetFileStorageLustreFileSystemsFilterOutputWithContext(ctx context.Context) GetFileStorageLustreFileSystemsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFileStorageLustreFileSystemsFilterOutput)
}

// GetFileStorageLustreFileSystemsFilterArrayInput is an input type that accepts GetFileStorageLustreFileSystemsFilterArray and GetFileStorageLustreFileSystemsFilterArrayOutput values.
// You can construct a concrete instance of `GetFileStorageLustreFileSystemsFilterArrayInput` via:
//
//	GetFileStorageLustreFileSystemsFilterArray{ GetFileStorageLustreFileSystemsFilterArgs{...} }
type GetFileStorageLustreFileSystemsFilterArrayInput interface {
	pulumi.Input

	ToGetFileStorageLustreFileSystemsFilterArrayOutput() GetFileStorageLustreFileSystemsFilterArrayOutput
	ToGetFileStorageLustreFileSystemsFilterArrayOutputWithContext(context.Context) GetFileStorageLustreFileSystemsFilterArrayOutput
}

type GetFileStorageLustreFileSystemsFilterArray []GetFileStorageLustreFileSystemsFilterInput

func (GetFileStorageLustreFileSystemsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFileStorageLustreFileSystemsFilter)(nil)).Elem()
}

func (i GetFileStorageLustreFileSystemsFilterArray) ToGetFileStorageLustreFileSystemsFilterArrayOutput() GetFileStorageLustreFileSystemsFilterArrayOutput {
	return i.ToGetFileStorageLustreFileSystemsFilterArrayOutputWithContext(context.Background())
}

func (i GetFileStorageLustreFileSystemsFilterArray) ToGetFileStorageLustreFileSystemsFilterArrayOutputWithContext(ctx context.Context) GetFileStorageLustreFileSystemsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFileStorageLustreFileSystemsFilterArrayOutput)
}

type GetFileStorageLustreFileSystemsFilterOutput struct{ *pulumi.OutputState }

func (GetFileStorageLustreFileSystemsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileStorageLustreFileSystemsFilter)(nil)).Elem()
}

func (o GetFileStorageLustreFileSystemsFilterOutput) ToGetFileStorageLustreFileSystemsFilterOutput() GetFileStorageLustreFileSystemsFilterOutput {
	return o
}

func (o GetFileStorageLustreFileSystemsFilterOutput) ToGetFileStorageLustreFileSystemsFilterOutputWithContext(ctx context.Context) GetFileStorageLustreFileSystemsFilterOutput {
	return o
}

func (o GetFileStorageLustreFileSystemsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetFileStorageLustreFileSystemsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetFileStorageLustreFileSystemsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetFileStorageLustreFileSystemsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetFileStorageLustreFileSystemsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFileStorageLustreFileSystemsFilter)(nil)).Elem()
}

func (o GetFileStorageLustreFileSystemsFilterArrayOutput) ToGetFileStorageLustreFileSystemsFilterArrayOutput() GetFileStorageLustreFileSystemsFilterArrayOutput {
	return o
}

func (o GetFileStorageLustreFileSystemsFilterArrayOutput) ToGetFileStorageLustreFileSystemsFilterArrayOutputWithContext(ctx context.Context) GetFileStorageLustreFileSystemsFilterArrayOutput {
	return o
}

func (o GetFileStorageLustreFileSystemsFilterArrayOutput) Index(i pulumi.IntInput) GetFileStorageLustreFileSystemsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFileStorageLustreFileSystemsFilter {
		return vs[0].([]GetFileStorageLustreFileSystemsFilter)[vs[1].(int)]
	}).(GetFileStorageLustreFileSystemsFilterOutput)
}

type GetFileStorageLustreFileSystemsLustreFileSystemCollection struct {
	Items []GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem `pulumi:"items"`
}

// GetFileStorageLustreFileSystemsLustreFileSystemCollectionInput is an input type that accepts GetFileStorageLustreFileSystemsLustreFileSystemCollectionArgs and GetFileStorageLustreFileSystemsLustreFileSystemCollectionOutput values.
// You can construct a concrete instance of `GetFileStorageLustreFileSystemsLustreFileSystemCollectionInput` via:
//
//	GetFileStorageLustreFileSystemsLustreFileSystemCollectionArgs{...}
type GetFileStorageLustreFileSystemsLustreFileSystemCollectionInput interface {
	pulumi.Input

	ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionOutput() GetFileStorageLustreFileSystemsLustreFileSystemCollectionOutput
	ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionOutputWithContext(context.Context) GetFileStorageLustreFileSystemsLustreFileSystemCollectionOutput
}

type GetFileStorageLustreFileSystemsLustreFileSystemCollectionArgs struct {
	Items GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayInput `pulumi:"items"`
}

func (GetFileStorageLustreFileSystemsLustreFileSystemCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileStorageLustreFileSystemsLustreFileSystemCollection)(nil)).Elem()
}

func (i GetFileStorageLustreFileSystemsLustreFileSystemCollectionArgs) ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionOutput() GetFileStorageLustreFileSystemsLustreFileSystemCollectionOutput {
	return i.ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionOutputWithContext(context.Background())
}

func (i GetFileStorageLustreFileSystemsLustreFileSystemCollectionArgs) ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionOutputWithContext(ctx context.Context) GetFileStorageLustreFileSystemsLustreFileSystemCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFileStorageLustreFileSystemsLustreFileSystemCollectionOutput)
}

// GetFileStorageLustreFileSystemsLustreFileSystemCollectionArrayInput is an input type that accepts GetFileStorageLustreFileSystemsLustreFileSystemCollectionArray and GetFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutput values.
// You can construct a concrete instance of `GetFileStorageLustreFileSystemsLustreFileSystemCollectionArrayInput` via:
//
//	GetFileStorageLustreFileSystemsLustreFileSystemCollectionArray{ GetFileStorageLustreFileSystemsLustreFileSystemCollectionArgs{...} }
type GetFileStorageLustreFileSystemsLustreFileSystemCollectionArrayInput interface {
	pulumi.Input

	ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutput() GetFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutput
	ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutputWithContext(context.Context) GetFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutput
}

type GetFileStorageLustreFileSystemsLustreFileSystemCollectionArray []GetFileStorageLustreFileSystemsLustreFileSystemCollectionInput

func (GetFileStorageLustreFileSystemsLustreFileSystemCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFileStorageLustreFileSystemsLustreFileSystemCollection)(nil)).Elem()
}

func (i GetFileStorageLustreFileSystemsLustreFileSystemCollectionArray) ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutput() GetFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutput {
	return i.ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutputWithContext(context.Background())
}

func (i GetFileStorageLustreFileSystemsLustreFileSystemCollectionArray) ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutputWithContext(ctx context.Context) GetFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutput)
}

type GetFileStorageLustreFileSystemsLustreFileSystemCollectionOutput struct{ *pulumi.OutputState }

func (GetFileStorageLustreFileSystemsLustreFileSystemCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileStorageLustreFileSystemsLustreFileSystemCollection)(nil)).Elem()
}

func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionOutput) ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionOutput() GetFileStorageLustreFileSystemsLustreFileSystemCollectionOutput {
	return o
}

func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionOutput) ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionOutputWithContext(ctx context.Context) GetFileStorageLustreFileSystemsLustreFileSystemCollectionOutput {
	return o
}

func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionOutput) Items() GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemsLustreFileSystemCollection) []GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem {
		return v.Items
	}).(GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput)
}

type GetFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFileStorageLustreFileSystemsLustreFileSystemCollection)(nil)).Elem()
}

func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutput) ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutput() GetFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutput {
	return o
}

func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutput) ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutputWithContext(ctx context.Context) GetFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutput {
	return o
}

func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutput) Index(i pulumi.IntInput) GetFileStorageLustreFileSystemsLustreFileSystemCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFileStorageLustreFileSystemsLustreFileSystemCollection {
		return vs[0].([]GetFileStorageLustreFileSystemsLustreFileSystemCollection)[vs[1].(int)]
	}).(GetFileStorageLustreFileSystemsLustreFileSystemCollectionOutput)
}

type GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem struct {
	// The name of the availability domain.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain string `pulumi:"availabilityDomain"`
	// Capacity of the Lustre file system in GB.
	CapacityInGbs int `pulumi:"capacityInGbs"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cluster placement group in which the Lustre file system exists.
	ClusterPlacementGroupId string `pulumi:"clusterPlacementGroupId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A filter to return only resources that match the given display name exactly.
	DisplayName string `pulumi:"displayName"`
	// Short description of the Lustre file system. Avoid entering confidential information.
	FileSystemDescription string `pulumi:"fileSystemDescription"`
	// The Lustre file system name. This is used in mount commands and other aspects of the client command line interface. The default file system name is 'lustre'. The file system name is limited to 8 characters. Allowed characters are lower and upper case English letters, numbers, and '_'.
	FileSystemName string `pulumi:"fileSystemName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Lustre file system.
	Id string `pulumi:"id"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key used to encrypt the encryption keys associated with this file system.
	KmsKeyId string `pulumi:"kmsKeyId"`
	// A message that describes the current state of the Lustre file system in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Type of network used by clients to mount the file system.   Example: `tcp`
	Lnet string `pulumi:"lnet"`
	// The preferred day and time to perform maintenance.
	MaintenanceWindows []GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindow `pulumi:"maintenanceWindows"`
	// Major version of Lustre running in the Lustre file system.  Example: `2.15`
	MajorVersion string `pulumi:"majorVersion"`
	// The IPv4 address of MGS (Lustre Management Service) used by clients to mount the file system. For example '10.0.0.4'.
	ManagementServiceAddress string `pulumi:"managementServiceAddress"`
	// A list of Network Security Group [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with this lustre file system. A maximum of 5 is allowed. Setting this to an empty array after the list is created removes the lustre file system from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm).
	NsgIds []string `pulumi:"nsgIds"`
	// The Lustre file system performance tier. A value of `MBPS_PER_TB_125` represents 125 megabytes per second per terabyte.
	PerformanceTier string `pulumi:"performanceTier"`
	// An administrative feature that allows you to restrict root level access from clients that try to access your Lustre file system as root.
	RootSquashConfigurations []GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfiguration `pulumi:"rootSquashConfigurations"`
	// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
	State string `pulumi:"state"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the Lustre file system is in.
	SubnetId string `pulumi:"subnetId"`
	// System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time that the current billing cycle for the file system will end, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format. After the current cycle ends, this date is updated automatically to the next timestamp, which is 30 days later. File systems deleted earlier than this time will still incur charges until the billing cycle ends.  Example: `2016-08-25T21:10:29.600Z`
	TimeBillingCycleEnd string `pulumi:"timeBillingCycleEnd"`
	// The date and time the Lustre file system was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2024-04-25T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the Lustre file system was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2024-04-25T21:10:29.600Z`
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemInput is an input type that accepts GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArgs and GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput values.
// You can construct a concrete instance of `GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemInput` via:
//
//	GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArgs{...}
type GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemInput interface {
	pulumi.Input

	ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput() GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput
	ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutputWithContext(context.Context) GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput
}

type GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArgs struct {
	// The name of the availability domain.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain pulumi.StringInput `pulumi:"availabilityDomain"`
	// Capacity of the Lustre file system in GB.
	CapacityInGbs pulumi.IntInput `pulumi:"capacityInGbs"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cluster placement group in which the Lustre file system exists.
	ClusterPlacementGroupId pulumi.StringInput `pulumi:"clusterPlacementGroupId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// A filter to return only resources that match the given display name exactly.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Short description of the Lustre file system. Avoid entering confidential information.
	FileSystemDescription pulumi.StringInput `pulumi:"fileSystemDescription"`
	// The Lustre file system name. This is used in mount commands and other aspects of the client command line interface. The default file system name is 'lustre'. The file system name is limited to 8 characters. Allowed characters are lower and upper case English letters, numbers, and '_'.
	FileSystemName pulumi.StringInput `pulumi:"fileSystemName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Lustre file system.
	Id pulumi.StringInput `pulumi:"id"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key used to encrypt the encryption keys associated with this file system.
	KmsKeyId pulumi.StringInput `pulumi:"kmsKeyId"`
	// A message that describes the current state of the Lustre file system in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// Type of network used by clients to mount the file system.   Example: `tcp`
	Lnet pulumi.StringInput `pulumi:"lnet"`
	// The preferred day and time to perform maintenance.
	MaintenanceWindows GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayInput `pulumi:"maintenanceWindows"`
	// Major version of Lustre running in the Lustre file system.  Example: `2.15`
	MajorVersion pulumi.StringInput `pulumi:"majorVersion"`
	// The IPv4 address of MGS (Lustre Management Service) used by clients to mount the file system. For example '10.0.0.4'.
	ManagementServiceAddress pulumi.StringInput `pulumi:"managementServiceAddress"`
	// A list of Network Security Group [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with this lustre file system. A maximum of 5 is allowed. Setting this to an empty array after the list is created removes the lustre file system from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm).
	NsgIds pulumi.StringArrayInput `pulumi:"nsgIds"`
	// The Lustre file system performance tier. A value of `MBPS_PER_TB_125` represents 125 megabytes per second per terabyte.
	PerformanceTier pulumi.StringInput `pulumi:"performanceTier"`
	// An administrative feature that allows you to restrict root level access from clients that try to access your Lustre file system as root.
	RootSquashConfigurations GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayInput `pulumi:"rootSquashConfigurations"`
	// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
	State pulumi.StringInput `pulumi:"state"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the Lustre file system is in.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput `pulumi:"systemTags"`
	// The date and time that the current billing cycle for the file system will end, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format. After the current cycle ends, this date is updated automatically to the next timestamp, which is 30 days later. File systems deleted earlier than this time will still incur charges until the billing cycle ends.  Example: `2016-08-25T21:10:29.600Z`
	TimeBillingCycleEnd pulumi.StringInput `pulumi:"timeBillingCycleEnd"`
	// The date and time the Lustre file system was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2024-04-25T21:10:29.600Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the Lustre file system was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2024-04-25T21:10:29.600Z`
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem)(nil)).Elem()
}

func (i GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArgs) ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput() GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput {
	return i.ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutputWithContext(context.Background())
}

func (i GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArgs) ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutputWithContext(ctx context.Context) GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput)
}

// GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayInput is an input type that accepts GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArray and GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayInput` via:
//
//	GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArray{ GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArgs{...} }
type GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayInput interface {
	pulumi.Input

	ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput() GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput
	ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutputWithContext(context.Context) GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput
}

type GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArray []GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemInput

func (GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem)(nil)).Elem()
}

func (i GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArray) ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput() GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput {
	return i.ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArray) ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutputWithContext(ctx context.Context) GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput)
}

type GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput struct{ *pulumi.OutputState }

func (GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem)(nil)).Elem()
}

func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput() GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput {
	return o
}

func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutputWithContext(ctx context.Context) GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput {
	return o
}

// The name of the availability domain.  Example: `Uocm:PHX-AD-1`
func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem) string {
		return v.AvailabilityDomain
	}).(pulumi.StringOutput)
}

// Capacity of the Lustre file system in GB.
func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) CapacityInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem) int { return v.CapacityInGbs }).(pulumi.IntOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cluster placement group in which the Lustre file system exists.
func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) ClusterPlacementGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem) string {
		return v.ClusterPlacementGroupId
	}).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem) map[string]string {
		return v.DefinedTags
	}).(pulumi.StringMapOutput)
}

// A filter to return only resources that match the given display name exactly.
func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Short description of the Lustre file system. Avoid entering confidential information.
func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) FileSystemDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem) string {
		return v.FileSystemDescription
	}).(pulumi.StringOutput)
}

// The Lustre file system name. This is used in mount commands and other aspects of the client command line interface. The default file system name is 'lustre'. The file system name is limited to 8 characters. Allowed characters are lower and upper case English letters, numbers, and '_'.
func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) FileSystemName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem) string { return v.FileSystemName }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem) map[string]string {
		return v.FreeformTags
	}).(pulumi.StringMapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Lustre file system.
func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key used to encrypt the encryption keys associated with this file system.
func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

// A message that describes the current state of the Lustre file system in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem) string {
		return v.LifecycleDetails
	}).(pulumi.StringOutput)
}

// Type of network used by clients to mount the file system.   Example: `tcp`
func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) Lnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem) string { return v.Lnet }).(pulumi.StringOutput)
}

// The preferred day and time to perform maintenance.
func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) MaintenanceWindows() GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem) []GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindow {
		return v.MaintenanceWindows
	}).(GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput)
}

// Major version of Lustre running in the Lustre file system.  Example: `2.15`
func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) MajorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem) string { return v.MajorVersion }).(pulumi.StringOutput)
}

// The IPv4 address of MGS (Lustre Management Service) used by clients to mount the file system. For example '10.0.0.4'.
func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) ManagementServiceAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem) string {
		return v.ManagementServiceAddress
	}).(pulumi.StringOutput)
}

// A list of Network Security Group [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with this lustre file system. A maximum of 5 is allowed. Setting this to an empty array after the list is created removes the lustre file system from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm).
func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) NsgIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem) []string { return v.NsgIds }).(pulumi.StringArrayOutput)
}

// The Lustre file system performance tier. A value of `MBPS_PER_TB_125` represents 125 megabytes per second per terabyte.
func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) PerformanceTier() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem) string { return v.PerformanceTier }).(pulumi.StringOutput)
}

// An administrative feature that allows you to restrict root level access from clients that try to access your Lustre file system as root.
func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) RootSquashConfigurations() GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem) []GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfiguration {
		return v.RootSquashConfigurations
	}).(GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput)
}

// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the Lustre file system is in.
func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem) string { return v.SubnetId }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem) map[string]string {
		return v.SystemTags
	}).(pulumi.StringMapOutput)
}

// The date and time that the current billing cycle for the file system will end, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format. After the current cycle ends, this date is updated automatically to the next timestamp, which is 30 days later. File systems deleted earlier than this time will still incur charges until the billing cycle ends.  Example: `2016-08-25T21:10:29.600Z`
func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) TimeBillingCycleEnd() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem) string {
		return v.TimeBillingCycleEnd
	}).(pulumi.StringOutput)
}

// The date and time the Lustre file system was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2024-04-25T21:10:29.600Z`
func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the Lustre file system was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2024-04-25T21:10:29.600Z`
func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem)(nil)).Elem()
}

func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput) ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput() GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput {
	return o
}

func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput) ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutputWithContext(ctx context.Context) GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput {
	return o
}

func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput) Index(i pulumi.IntInput) GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem {
		return vs[0].([]GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem)[vs[1].(int)]
	}).(GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput)
}

type GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindow struct {
	// Day of the week when the maintainence window starts.
	DayOfWeek string `pulumi:"dayOfWeek"`
	// The time to start the maintenance window. The format is 'HH:MM', 'HH:MM' represents the time in UTC.   Example: `22:00`
	TimeStart string `pulumi:"timeStart"`
}

// GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowInput is an input type that accepts GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArgs and GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput values.
// You can construct a concrete instance of `GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowInput` via:
//
//	GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArgs{...}
type GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowInput interface {
	pulumi.Input

	ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput() GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput
	ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutputWithContext(context.Context) GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput
}

type GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArgs struct {
	// Day of the week when the maintainence window starts.
	DayOfWeek pulumi.StringInput `pulumi:"dayOfWeek"`
	// The time to start the maintenance window. The format is 'HH:MM', 'HH:MM' represents the time in UTC.   Example: `22:00`
	TimeStart pulumi.StringInput `pulumi:"timeStart"`
}

func (GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindow)(nil)).Elem()
}

func (i GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArgs) ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput() GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput {
	return i.ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutputWithContext(context.Background())
}

func (i GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArgs) ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutputWithContext(ctx context.Context) GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput)
}

// GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayInput is an input type that accepts GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArray and GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayInput` via:
//
//	GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArray{ GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArgs{...} }
type GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput() GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput
	ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutputWithContext(context.Context) GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput
}

type GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArray []GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowInput

func (GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindow)(nil)).Elem()
}

func (i GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArray) ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput() GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput {
	return i.ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArray) ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput)
}

type GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindow)(nil)).Elem()
}

func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput) ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput() GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput {
	return o
}

func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput) ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutputWithContext(ctx context.Context) GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput {
	return o
}

// Day of the week when the maintainence window starts.
func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput) DayOfWeek() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindow) string {
		return v.DayOfWeek
	}).(pulumi.StringOutput)
}

// The time to start the maintenance window. The format is 'HH:MM', 'HH:MM' represents the time in UTC.   Example: `22:00`
func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput) TimeStart() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindow) string {
		return v.TimeStart
	}).(pulumi.StringOutput)
}

type GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindow)(nil)).Elem()
}

func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput) ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput() GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput {
	return o
}

func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput) ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput {
	return o
}

func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindow {
		return vs[0].([]GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindow)[vs[1].(int)]
	}).(GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput)
}

type GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfiguration struct {
	// A list of NIDs allowed with this lustre file system not to be squashed. A maximum of 10 is allowed.
	ClientExceptions []string `pulumi:"clientExceptions"`
	// Used when clients accessing the Lustre file system have their UID and GID remapped to `squashUid` and `squashGid`. If `ROOT`, only the root user and group (UID/GID 0) are remapped; if `NONE`, no remapping is done. If unspecified, defaults to `NONE`.
	IdentitySquash string `pulumi:"identitySquash"`
	// The GID value to remap to when squashing a client GID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
	SquashGid string `pulumi:"squashGid"`
	// The UID value to remap to when squashing a client UID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
	SquashUid string `pulumi:"squashUid"`
}

// GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationInput is an input type that accepts GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArgs and GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput values.
// You can construct a concrete instance of `GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationInput` via:
//
//	GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArgs{...}
type GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationInput interface {
	pulumi.Input

	ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput() GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput
	ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutputWithContext(context.Context) GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput
}

type GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArgs struct {
	// A list of NIDs allowed with this lustre file system not to be squashed. A maximum of 10 is allowed.
	ClientExceptions pulumi.StringArrayInput `pulumi:"clientExceptions"`
	// Used when clients accessing the Lustre file system have their UID and GID remapped to `squashUid` and `squashGid`. If `ROOT`, only the root user and group (UID/GID 0) are remapped; if `NONE`, no remapping is done. If unspecified, defaults to `NONE`.
	IdentitySquash pulumi.StringInput `pulumi:"identitySquash"`
	// The GID value to remap to when squashing a client GID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
	SquashGid pulumi.StringInput `pulumi:"squashGid"`
	// The UID value to remap to when squashing a client UID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
	SquashUid pulumi.StringInput `pulumi:"squashUid"`
}

func (GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfiguration)(nil)).Elem()
}

func (i GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArgs) ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput() GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput {
	return i.ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutputWithContext(context.Background())
}

func (i GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArgs) ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutputWithContext(ctx context.Context) GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput)
}

// GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayInput is an input type that accepts GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArray and GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput values.
// You can construct a concrete instance of `GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayInput` via:
//
//	GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArray{ GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArgs{...} }
type GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayInput interface {
	pulumi.Input

	ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput() GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput
	ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutputWithContext(context.Context) GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput
}

type GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArray []GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationInput

func (GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfiguration)(nil)).Elem()
}

func (i GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArray) ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput() GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput {
	return i.ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutputWithContext(context.Background())
}

func (i GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArray) ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutputWithContext(ctx context.Context) GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput)
}

type GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput struct{ *pulumi.OutputState }

func (GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfiguration)(nil)).Elem()
}

func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput) ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput() GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput {
	return o
}

func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput) ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutputWithContext(ctx context.Context) GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput {
	return o
}

// A list of NIDs allowed with this lustre file system not to be squashed. A maximum of 10 is allowed.
func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput) ClientExceptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfiguration) []string {
		return v.ClientExceptions
	}).(pulumi.StringArrayOutput)
}

// Used when clients accessing the Lustre file system have their UID and GID remapped to `squashUid` and `squashGid`. If `ROOT`, only the root user and group (UID/GID 0) are remapped; if `NONE`, no remapping is done. If unspecified, defaults to `NONE`.
func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput) IdentitySquash() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfiguration) string {
		return v.IdentitySquash
	}).(pulumi.StringOutput)
}

// The GID value to remap to when squashing a client GID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput) SquashGid() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfiguration) string {
		return v.SquashGid
	}).(pulumi.StringOutput)
}

// The UID value to remap to when squashing a client UID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput) SquashUid() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfiguration) string {
		return v.SquashUid
	}).(pulumi.StringOutput)
}

type GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfiguration)(nil)).Elem()
}

func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput) ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput() GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput {
	return o
}

func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput) ToGetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutputWithContext(ctx context.Context) GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput {
	return o
}

func (o GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput) Index(i pulumi.IntInput) GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfiguration {
		return vs[0].([]GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfiguration)[vs[1].(int)]
	}).(GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FileStorageLustreFileSystemMaintenanceWindowInput)(nil)).Elem(), FileStorageLustreFileSystemMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FileStorageLustreFileSystemMaintenanceWindowArrayInput)(nil)).Elem(), FileStorageLustreFileSystemMaintenanceWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FileStorageLustreFileSystemRootSquashConfigurationInput)(nil)).Elem(), FileStorageLustreFileSystemRootSquashConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FileStorageLustreFileSystemRootSquashConfigurationPtrInput)(nil)).Elem(), FileStorageLustreFileSystemRootSquashConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFileStorageLustreFileSystemMaintenanceWindowInput)(nil)).Elem(), GetFileStorageLustreFileSystemMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFileStorageLustreFileSystemMaintenanceWindowArrayInput)(nil)).Elem(), GetFileStorageLustreFileSystemMaintenanceWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFileStorageLustreFileSystemRootSquashConfigurationInput)(nil)).Elem(), GetFileStorageLustreFileSystemRootSquashConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFileStorageLustreFileSystemRootSquashConfigurationArrayInput)(nil)).Elem(), GetFileStorageLustreFileSystemRootSquashConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFileStorageLustreFileSystemsFilterInput)(nil)).Elem(), GetFileStorageLustreFileSystemsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFileStorageLustreFileSystemsFilterArrayInput)(nil)).Elem(), GetFileStorageLustreFileSystemsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFileStorageLustreFileSystemsLustreFileSystemCollectionInput)(nil)).Elem(), GetFileStorageLustreFileSystemsLustreFileSystemCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFileStorageLustreFileSystemsLustreFileSystemCollectionArrayInput)(nil)).Elem(), GetFileStorageLustreFileSystemsLustreFileSystemCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemInput)(nil)).Elem(), GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayInput)(nil)).Elem(), GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowInput)(nil)).Elem(), GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayInput)(nil)).Elem(), GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationInput)(nil)).Elem(), GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayInput)(nil)).Elem(), GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArray{})
	pulumi.RegisterOutputType(FileStorageLustreFileSystemMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(FileStorageLustreFileSystemMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(FileStorageLustreFileSystemRootSquashConfigurationOutput{})
	pulumi.RegisterOutputType(FileStorageLustreFileSystemRootSquashConfigurationPtrOutput{})
	pulumi.RegisterOutputType(GetFileStorageLustreFileSystemMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(GetFileStorageLustreFileSystemMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(GetFileStorageLustreFileSystemRootSquashConfigurationOutput{})
	pulumi.RegisterOutputType(GetFileStorageLustreFileSystemRootSquashConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetFileStorageLustreFileSystemsFilterOutput{})
	pulumi.RegisterOutputType(GetFileStorageLustreFileSystemsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetFileStorageLustreFileSystemsLustreFileSystemCollectionOutput{})
	pulumi.RegisterOutputType(GetFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput{})
	pulumi.RegisterOutputType(GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput{})
	pulumi.RegisterOutputType(GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput{})
}
