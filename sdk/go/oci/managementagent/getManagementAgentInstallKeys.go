// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package managementagent

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Management Agent Install Keys in Oracle Cloud Infrastructure Management Agent service.
//
// Returns a list of Management Agent installed Keys.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/managementagent"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := managementagent.GetManagementAgentInstallKeys(ctx, &managementagent.GetManagementAgentInstallKeysArgs{
//				CompartmentId:          compartmentId,
//				AccessLevel:            pulumi.StringRef(managementAgentInstallKeyAccessLevel),
//				CompartmentIdInSubtree: pulumi.BoolRef(managementAgentInstallKeyCompartmentIdInSubtree),
//				DisplayName:            pulumi.StringRef(managementAgentInstallKeyDisplayName),
//				State:                  pulumi.StringRef(managementAgentInstallKeyState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetManagementAgentInstallKeys(ctx *pulumi.Context, args *GetManagementAgentInstallKeysArgs, opts ...pulumi.InvokeOption) (*GetManagementAgentInstallKeysResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetManagementAgentInstallKeysResult
	err := ctx.Invoke("oci:ManagementAgent/getManagementAgentInstallKeys:getManagementAgentInstallKeys", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagementAgentInstallKeys.
type GetManagementAgentInstallKeysArgs struct {
	// Value of this is always "ACCESSIBLE" and any other value is not supported.
	AccessLevel *string `pulumi:"accessLevel"`
	// The OCID of the compartment to which a request will be scoped.
	CompartmentId string `pulumi:"compartmentId"`
	// if set to true then it fetches resources for all compartments where user has access to else only on the compartment specified.
	CompartmentIdInSubtree *bool `pulumi:"compartmentIdInSubtree"`
	// The display name for which the Key needs to be listed.
	DisplayName *string                               `pulumi:"displayName"`
	Filters     []GetManagementAgentInstallKeysFilter `pulumi:"filters"`
	// Filter to return only Management Agents in the particular lifecycle state.
	State *string `pulumi:"state"`
}

// A collection of values returned by getManagementAgentInstallKeys.
type GetManagementAgentInstallKeysResult struct {
	AccessLevel *string `pulumi:"accessLevel"`
	// Compartment Identifier
	CompartmentId          string `pulumi:"compartmentId"`
	CompartmentIdInSubtree *bool  `pulumi:"compartmentIdInSubtree"`
	// Management Agent Install Key Name
	DisplayName *string                               `pulumi:"displayName"`
	Filters     []GetManagementAgentInstallKeysFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of management_agent_install_keys.
	ManagementAgentInstallKeys []GetManagementAgentInstallKeysManagementAgentInstallKey `pulumi:"managementAgentInstallKeys"`
	// Status of Key
	State *string `pulumi:"state"`
}

func GetManagementAgentInstallKeysOutput(ctx *pulumi.Context, args GetManagementAgentInstallKeysOutputArgs, opts ...pulumi.InvokeOption) GetManagementAgentInstallKeysResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetManagementAgentInstallKeysResultOutput, error) {
			args := v.(GetManagementAgentInstallKeysArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:ManagementAgent/getManagementAgentInstallKeys:getManagementAgentInstallKeys", args, GetManagementAgentInstallKeysResultOutput{}, options).(GetManagementAgentInstallKeysResultOutput), nil
		}).(GetManagementAgentInstallKeysResultOutput)
}

// A collection of arguments for invoking getManagementAgentInstallKeys.
type GetManagementAgentInstallKeysOutputArgs struct {
	// Value of this is always "ACCESSIBLE" and any other value is not supported.
	AccessLevel pulumi.StringPtrInput `pulumi:"accessLevel"`
	// The OCID of the compartment to which a request will be scoped.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// if set to true then it fetches resources for all compartments where user has access to else only on the compartment specified.
	CompartmentIdInSubtree pulumi.BoolPtrInput `pulumi:"compartmentIdInSubtree"`
	// The display name for which the Key needs to be listed.
	DisplayName pulumi.StringPtrInput                         `pulumi:"displayName"`
	Filters     GetManagementAgentInstallKeysFilterArrayInput `pulumi:"filters"`
	// Filter to return only Management Agents in the particular lifecycle state.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetManagementAgentInstallKeysOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementAgentInstallKeysArgs)(nil)).Elem()
}

// A collection of values returned by getManagementAgentInstallKeys.
type GetManagementAgentInstallKeysResultOutput struct{ *pulumi.OutputState }

func (GetManagementAgentInstallKeysResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementAgentInstallKeysResult)(nil)).Elem()
}

func (o GetManagementAgentInstallKeysResultOutput) ToGetManagementAgentInstallKeysResultOutput() GetManagementAgentInstallKeysResultOutput {
	return o
}

func (o GetManagementAgentInstallKeysResultOutput) ToGetManagementAgentInstallKeysResultOutputWithContext(ctx context.Context) GetManagementAgentInstallKeysResultOutput {
	return o
}

func (o GetManagementAgentInstallKeysResultOutput) AccessLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementAgentInstallKeysResult) *string { return v.AccessLevel }).(pulumi.StringPtrOutput)
}

// Compartment Identifier
func (o GetManagementAgentInstallKeysResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagementAgentInstallKeysResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetManagementAgentInstallKeysResultOutput) CompartmentIdInSubtree() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetManagementAgentInstallKeysResult) *bool { return v.CompartmentIdInSubtree }).(pulumi.BoolPtrOutput)
}

// Management Agent Install Key Name
func (o GetManagementAgentInstallKeysResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementAgentInstallKeysResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetManagementAgentInstallKeysResultOutput) Filters() GetManagementAgentInstallKeysFilterArrayOutput {
	return o.ApplyT(func(v GetManagementAgentInstallKeysResult) []GetManagementAgentInstallKeysFilter { return v.Filters }).(GetManagementAgentInstallKeysFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagementAgentInstallKeysResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagementAgentInstallKeysResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of management_agent_install_keys.
func (o GetManagementAgentInstallKeysResultOutput) ManagementAgentInstallKeys() GetManagementAgentInstallKeysManagementAgentInstallKeyArrayOutput {
	return o.ApplyT(func(v GetManagementAgentInstallKeysResult) []GetManagementAgentInstallKeysManagementAgentInstallKey {
		return v.ManagementAgentInstallKeys
	}).(GetManagementAgentInstallKeysManagementAgentInstallKeyArrayOutput)
}

// Status of Key
func (o GetManagementAgentInstallKeysResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementAgentInstallKeysResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagementAgentInstallKeysResultOutput{})
}
