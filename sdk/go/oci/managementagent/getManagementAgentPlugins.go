// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package managementagent

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Management Agent Plugins in Oracle Cloud Infrastructure Management Agent service.
//
// Returns a list of managementAgentPlugins.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/ManagementAgent"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := ManagementAgent.GetManagementAgentPlugins(ctx, &managementagent.GetManagementAgentPluginsArgs{
// 			CompartmentId: _var.Compartment_id,
// 			DisplayName:   pulumi.StringRef(_var.Management_agent_plugin_display_name),
// 			PlatformTypes: _var.Management_agent_plugin_platform_type,
// 			State:         pulumi.StringRef(_var.Management_agent_plugin_state),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetManagementAgentPlugins(ctx *pulumi.Context, args *GetManagementAgentPluginsArgs, opts ...pulumi.InvokeOption) (*GetManagementAgentPluginsResult, error) {
	var rv GetManagementAgentPluginsResult
	err := ctx.Invoke("oci:ManagementAgent/getManagementAgentPlugins:getManagementAgentPlugins", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagementAgentPlugins.
type GetManagementAgentPluginsArgs struct {
	// The OCID of the compartment to which a request will be scoped.
	CompartmentId string `pulumi:"compartmentId"`
	// Filter to return only Management Agent Plugins having the particular display name.
	DisplayName *string                           `pulumi:"displayName"`
	Filters     []GetManagementAgentPluginsFilter `pulumi:"filters"`
	// Filter to return only results having the particular platform type.
	PlatformTypes []string `pulumi:"platformTypes"`
	// Filter to return only Management Agents in the particular lifecycle state.
	State *string `pulumi:"state"`
}

// A collection of values returned by getManagementAgentPlugins.
type GetManagementAgentPluginsResult struct {
	CompartmentId string `pulumi:"compartmentId"`
	// Management Agent Plugin Display Name
	DisplayName *string                           `pulumi:"displayName"`
	Filters     []GetManagementAgentPluginsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of management_agent_plugins.
	ManagementAgentPlugins []GetManagementAgentPluginsManagementAgentPlugin `pulumi:"managementAgentPlugins"`
	PlatformTypes          []string                                         `pulumi:"platformTypes"`
	// The current state of Management Agent Plugin
	State *string `pulumi:"state"`
}

func GetManagementAgentPluginsOutput(ctx *pulumi.Context, args GetManagementAgentPluginsOutputArgs, opts ...pulumi.InvokeOption) GetManagementAgentPluginsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetManagementAgentPluginsResult, error) {
			args := v.(GetManagementAgentPluginsArgs)
			r, err := GetManagementAgentPlugins(ctx, &args, opts...)
			var s GetManagementAgentPluginsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetManagementAgentPluginsResultOutput)
}

// A collection of arguments for invoking getManagementAgentPlugins.
type GetManagementAgentPluginsOutputArgs struct {
	// The OCID of the compartment to which a request will be scoped.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Filter to return only Management Agent Plugins having the particular display name.
	DisplayName pulumi.StringPtrInput                     `pulumi:"displayName"`
	Filters     GetManagementAgentPluginsFilterArrayInput `pulumi:"filters"`
	// Filter to return only results having the particular platform type.
	PlatformTypes pulumi.StringArrayInput `pulumi:"platformTypes"`
	// Filter to return only Management Agents in the particular lifecycle state.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetManagementAgentPluginsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementAgentPluginsArgs)(nil)).Elem()
}

// A collection of values returned by getManagementAgentPlugins.
type GetManagementAgentPluginsResultOutput struct{ *pulumi.OutputState }

func (GetManagementAgentPluginsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementAgentPluginsResult)(nil)).Elem()
}

func (o GetManagementAgentPluginsResultOutput) ToGetManagementAgentPluginsResultOutput() GetManagementAgentPluginsResultOutput {
	return o
}

func (o GetManagementAgentPluginsResultOutput) ToGetManagementAgentPluginsResultOutputWithContext(ctx context.Context) GetManagementAgentPluginsResultOutput {
	return o
}

func (o GetManagementAgentPluginsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagementAgentPluginsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Management Agent Plugin Display Name
func (o GetManagementAgentPluginsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementAgentPluginsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetManagementAgentPluginsResultOutput) Filters() GetManagementAgentPluginsFilterArrayOutput {
	return o.ApplyT(func(v GetManagementAgentPluginsResult) []GetManagementAgentPluginsFilter { return v.Filters }).(GetManagementAgentPluginsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagementAgentPluginsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagementAgentPluginsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of management_agent_plugins.
func (o GetManagementAgentPluginsResultOutput) ManagementAgentPlugins() GetManagementAgentPluginsManagementAgentPluginArrayOutput {
	return o.ApplyT(func(v GetManagementAgentPluginsResult) []GetManagementAgentPluginsManagementAgentPlugin {
		return v.ManagementAgentPlugins
	}).(GetManagementAgentPluginsManagementAgentPluginArrayOutput)
}

func (o GetManagementAgentPluginsResultOutput) PlatformTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagementAgentPluginsResult) []string { return v.PlatformTypes }).(pulumi.StringArrayOutput)
}

// The current state of Management Agent Plugin
func (o GetManagementAgentPluginsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementAgentPluginsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagementAgentPluginsResultOutput{})
}
