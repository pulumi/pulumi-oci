// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package managementagent

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Named Credential resource in Oracle Cloud Infrastructure Management Agent service.
//
// Get Named credential details for given Id and given Management Agent.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/managementagent"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := managementagent.GetNamedCredential(ctx, &managementagent.GetNamedCredentialArgs{
//				NamedCredentialId: testNamedCredentialOciManagementAgentNamedCredential.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupNamedCredential(ctx *pulumi.Context, args *LookupNamedCredentialArgs, opts ...pulumi.InvokeOption) (*LookupNamedCredentialResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNamedCredentialResult
	err := ctx.Invoke("oci:ManagementAgent/getNamedCredential:getNamedCredential", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNamedCredential.
type LookupNamedCredentialArgs struct {
	// Named credential ID
	NamedCredentialId string `pulumi:"namedCredentialId"`
}

// A collection of values returned by getNamedCredential.
type LookupNamedCredentialResult struct {
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Description of the Named Credential.
	Description string `pulumi:"description"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Identifier for Named Credential.
	Id string `pulumi:"id"`
	// The Management Agent parent resource to associated with this named credential. This is the ManagementAgent resource OCID.
	ManagementAgentId string `pulumi:"managementAgentId"`
	// Name of the property
	Name              string `pulumi:"name"`
	NamedCredentialId string `pulumi:"namedCredentialId"`
	// Properties for the named credential
	Properties []GetNamedCredentialProperty `pulumi:"properties"`
	// The current state of the named credential
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time the Named Credential was created. An RFC3339 formatted datetime string
	TimeCreated string `pulumi:"timeCreated"`
	// The time the Named Credential data was last updated. An RFC3339 formatted datetime string
	TimeUpdated string `pulumi:"timeUpdated"`
	// The type of the Named Credential.
	Type string `pulumi:"type"`
}

func LookupNamedCredentialOutput(ctx *pulumi.Context, args LookupNamedCredentialOutputArgs, opts ...pulumi.InvokeOption) LookupNamedCredentialResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNamedCredentialResultOutput, error) {
			args := v.(LookupNamedCredentialArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:ManagementAgent/getNamedCredential:getNamedCredential", args, LookupNamedCredentialResultOutput{}, options).(LookupNamedCredentialResultOutput), nil
		}).(LookupNamedCredentialResultOutput)
}

// A collection of arguments for invoking getNamedCredential.
type LookupNamedCredentialOutputArgs struct {
	// Named credential ID
	NamedCredentialId pulumi.StringInput `pulumi:"namedCredentialId"`
}

func (LookupNamedCredentialOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNamedCredentialArgs)(nil)).Elem()
}

// A collection of values returned by getNamedCredential.
type LookupNamedCredentialResultOutput struct{ *pulumi.OutputState }

func (LookupNamedCredentialResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNamedCredentialResult)(nil)).Elem()
}

func (o LookupNamedCredentialResultOutput) ToLookupNamedCredentialResultOutput() LookupNamedCredentialResultOutput {
	return o
}

func (o LookupNamedCredentialResultOutput) ToLookupNamedCredentialResultOutputWithContext(ctx context.Context) LookupNamedCredentialResultOutput {
	return o
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupNamedCredentialResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupNamedCredentialResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Description of the Named Credential.
func (o LookupNamedCredentialResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamedCredentialResult) string { return v.Description }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupNamedCredentialResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupNamedCredentialResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Identifier for Named Credential.
func (o LookupNamedCredentialResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamedCredentialResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Management Agent parent resource to associated with this named credential. This is the ManagementAgent resource OCID.
func (o LookupNamedCredentialResultOutput) ManagementAgentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamedCredentialResult) string { return v.ManagementAgentId }).(pulumi.StringOutput)
}

// Name of the property
func (o LookupNamedCredentialResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamedCredentialResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupNamedCredentialResultOutput) NamedCredentialId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamedCredentialResult) string { return v.NamedCredentialId }).(pulumi.StringOutput)
}

// Properties for the named credential
func (o LookupNamedCredentialResultOutput) Properties() GetNamedCredentialPropertyArrayOutput {
	return o.ApplyT(func(v LookupNamedCredentialResult) []GetNamedCredentialProperty { return v.Properties }).(GetNamedCredentialPropertyArrayOutput)
}

// The current state of the named credential
func (o LookupNamedCredentialResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamedCredentialResult) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupNamedCredentialResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupNamedCredentialResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The time the Named Credential was created. An RFC3339 formatted datetime string
func (o LookupNamedCredentialResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamedCredentialResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the Named Credential data was last updated. An RFC3339 formatted datetime string
func (o LookupNamedCredentialResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamedCredentialResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The type of the Named Credential.
func (o LookupNamedCredentialResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamedCredentialResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNamedCredentialResultOutput{})
}
