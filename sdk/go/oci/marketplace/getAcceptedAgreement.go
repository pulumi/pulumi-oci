// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package marketplace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Accepted Agreement resource in Oracle Cloud Infrastructure Marketplace service.
//
// Gets the details of a specific, previously accepted terms of use agreement.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Marketplace"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Marketplace.GetAcceptedAgreement(ctx, &marketplace.GetAcceptedAgreementArgs{
//				AcceptedAgreementId: testAcceptedAgreementOciMarketplaceAcceptedAgreement.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAcceptedAgreement(ctx *pulumi.Context, args *LookupAcceptedAgreementArgs, opts ...pulumi.InvokeOption) (*LookupAcceptedAgreementResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAcceptedAgreementResult
	err := ctx.Invoke("oci:Marketplace/getAcceptedAgreement:getAcceptedAgreement", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAcceptedAgreement.
type LookupAcceptedAgreementArgs struct {
	// The unique identifier for the accepted terms of use agreement.
	AcceptedAgreementId string `pulumi:"acceptedAgreementId"`
}

// A collection of values returned by getAcceptedAgreement.
type LookupAcceptedAgreementResult struct {
	AcceptedAgreementId string `pulumi:"acceptedAgreementId"`
	// The unique identifier for the terms of use agreement itself.
	AgreementId string `pulumi:"agreementId"`
	// The unique identifier for the compartment where the agreement was accepted.
	CompartmentId string `pulumi:"compartmentId"`
	// The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A display name for the accepted agreement.
	DisplayName string `pulumi:"displayName"`
	// The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The unique identifier for the acceptance of the agreement within a specific compartment.
	Id string `pulumi:"id"`
	// The unique identifier for the listing associated with the agreement.
	ListingId string `pulumi:"listingId"`
	// The package version associated with the agreement.
	PackageVersion string `pulumi:"packageVersion"`
	Signature      string `pulumi:"signature"`
	// The time the agreement was accepted.
	TimeAccepted string `pulumi:"timeAccepted"`
}

func LookupAcceptedAgreementOutput(ctx *pulumi.Context, args LookupAcceptedAgreementOutputArgs, opts ...pulumi.InvokeOption) LookupAcceptedAgreementResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAcceptedAgreementResultOutput, error) {
			args := v.(LookupAcceptedAgreementArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Marketplace/getAcceptedAgreement:getAcceptedAgreement", args, LookupAcceptedAgreementResultOutput{}, options).(LookupAcceptedAgreementResultOutput), nil
		}).(LookupAcceptedAgreementResultOutput)
}

// A collection of arguments for invoking getAcceptedAgreement.
type LookupAcceptedAgreementOutputArgs struct {
	// The unique identifier for the accepted terms of use agreement.
	AcceptedAgreementId pulumi.StringInput `pulumi:"acceptedAgreementId"`
}

func (LookupAcceptedAgreementOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAcceptedAgreementArgs)(nil)).Elem()
}

// A collection of values returned by getAcceptedAgreement.
type LookupAcceptedAgreementResultOutput struct{ *pulumi.OutputState }

func (LookupAcceptedAgreementResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAcceptedAgreementResult)(nil)).Elem()
}

func (o LookupAcceptedAgreementResultOutput) ToLookupAcceptedAgreementResultOutput() LookupAcceptedAgreementResultOutput {
	return o
}

func (o LookupAcceptedAgreementResultOutput) ToLookupAcceptedAgreementResultOutputWithContext(ctx context.Context) LookupAcceptedAgreementResultOutput {
	return o
}

func (o LookupAcceptedAgreementResultOutput) AcceptedAgreementId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAcceptedAgreementResult) string { return v.AcceptedAgreementId }).(pulumi.StringOutput)
}

// The unique identifier for the terms of use agreement itself.
func (o LookupAcceptedAgreementResultOutput) AgreementId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAcceptedAgreementResult) string { return v.AgreementId }).(pulumi.StringOutput)
}

// The unique identifier for the compartment where the agreement was accepted.
func (o LookupAcceptedAgreementResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAcceptedAgreementResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o LookupAcceptedAgreementResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAcceptedAgreementResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A display name for the accepted agreement.
func (o LookupAcceptedAgreementResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAcceptedAgreementResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o LookupAcceptedAgreementResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAcceptedAgreementResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The unique identifier for the acceptance of the agreement within a specific compartment.
func (o LookupAcceptedAgreementResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAcceptedAgreementResult) string { return v.Id }).(pulumi.StringOutput)
}

// The unique identifier for the listing associated with the agreement.
func (o LookupAcceptedAgreementResultOutput) ListingId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAcceptedAgreementResult) string { return v.ListingId }).(pulumi.StringOutput)
}

// The package version associated with the agreement.
func (o LookupAcceptedAgreementResultOutput) PackageVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAcceptedAgreementResult) string { return v.PackageVersion }).(pulumi.StringOutput)
}

func (o LookupAcceptedAgreementResultOutput) Signature() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAcceptedAgreementResult) string { return v.Signature }).(pulumi.StringOutput)
}

// The time the agreement was accepted.
func (o LookupAcceptedAgreementResultOutput) TimeAccepted() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAcceptedAgreementResult) string { return v.TimeAccepted }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAcceptedAgreementResultOutput{})
}
