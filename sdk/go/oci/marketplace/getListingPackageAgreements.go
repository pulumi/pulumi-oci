// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package marketplace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Listing Package Agreements in Oracle Cloud Infrastructure Marketplace service.
//
// Returns the terms of use agreements that must be accepted before you can deploy the specified version of a package.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Marketplace"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Marketplace.GetListingPackageAgreements(ctx, &marketplace.GetListingPackageAgreementsArgs{
//				ListingId:      testListing.Id,
//				PackageVersion: listingPackageAgreementPackageVersion,
//				CompartmentId:  pulumi.StringRef(compartmentId),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetListingPackageAgreements(ctx *pulumi.Context, args *GetListingPackageAgreementsArgs, opts ...pulumi.InvokeOption) (*GetListingPackageAgreementsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetListingPackageAgreementsResult
	err := ctx.Invoke("oci:Marketplace/getListingPackageAgreements:getListingPackageAgreements", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getListingPackageAgreements.
type GetListingPackageAgreementsArgs struct {
	// The unique identifier for the compartment.
	CompartmentId *string                             `pulumi:"compartmentId"`
	Filters       []GetListingPackageAgreementsFilter `pulumi:"filters"`
	// The unique identifier for the listing.
	ListingId string `pulumi:"listingId"`
	// The version of the package. Package versions are unique within a listing.
	PackageVersion string `pulumi:"packageVersion"`
}

// A collection of values returned by getListingPackageAgreements.
type GetListingPackageAgreementsResult struct {
	// The list of agreements.
	Agreements []GetListingPackageAgreementsAgreement `pulumi:"agreements"`
	// The unique identifier for the compartment.
	CompartmentId *string                             `pulumi:"compartmentId"`
	Filters       []GetListingPackageAgreementsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id             string `pulumi:"id"`
	ListingId      string `pulumi:"listingId"`
	PackageVersion string `pulumi:"packageVersion"`
}

func GetListingPackageAgreementsOutput(ctx *pulumi.Context, args GetListingPackageAgreementsOutputArgs, opts ...pulumi.InvokeOption) GetListingPackageAgreementsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetListingPackageAgreementsResult, error) {
			args := v.(GetListingPackageAgreementsArgs)
			r, err := GetListingPackageAgreements(ctx, &args, opts...)
			var s GetListingPackageAgreementsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetListingPackageAgreementsResultOutput)
}

// A collection of arguments for invoking getListingPackageAgreements.
type GetListingPackageAgreementsOutputArgs struct {
	// The unique identifier for the compartment.
	CompartmentId pulumi.StringPtrInput                       `pulumi:"compartmentId"`
	Filters       GetListingPackageAgreementsFilterArrayInput `pulumi:"filters"`
	// The unique identifier for the listing.
	ListingId pulumi.StringInput `pulumi:"listingId"`
	// The version of the package. Package versions are unique within a listing.
	PackageVersion pulumi.StringInput `pulumi:"packageVersion"`
}

func (GetListingPackageAgreementsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListingPackageAgreementsArgs)(nil)).Elem()
}

// A collection of values returned by getListingPackageAgreements.
type GetListingPackageAgreementsResultOutput struct{ *pulumi.OutputState }

func (GetListingPackageAgreementsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListingPackageAgreementsResult)(nil)).Elem()
}

func (o GetListingPackageAgreementsResultOutput) ToGetListingPackageAgreementsResultOutput() GetListingPackageAgreementsResultOutput {
	return o
}

func (o GetListingPackageAgreementsResultOutput) ToGetListingPackageAgreementsResultOutputWithContext(ctx context.Context) GetListingPackageAgreementsResultOutput {
	return o
}

// The list of agreements.
func (o GetListingPackageAgreementsResultOutput) Agreements() GetListingPackageAgreementsAgreementArrayOutput {
	return o.ApplyT(func(v GetListingPackageAgreementsResult) []GetListingPackageAgreementsAgreement { return v.Agreements }).(GetListingPackageAgreementsAgreementArrayOutput)
}

// The unique identifier for the compartment.
func (o GetListingPackageAgreementsResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetListingPackageAgreementsResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

func (o GetListingPackageAgreementsResultOutput) Filters() GetListingPackageAgreementsFilterArrayOutput {
	return o.ApplyT(func(v GetListingPackageAgreementsResult) []GetListingPackageAgreementsFilter { return v.Filters }).(GetListingPackageAgreementsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetListingPackageAgreementsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetListingPackageAgreementsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetListingPackageAgreementsResultOutput) ListingId() pulumi.StringOutput {
	return o.ApplyT(func(v GetListingPackageAgreementsResult) string { return v.ListingId }).(pulumi.StringOutput)
}

func (o GetListingPackageAgreementsResultOutput) PackageVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetListingPackageAgreementsResult) string { return v.PackageVersion }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetListingPackageAgreementsResultOutput{})
}
