// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package marketplace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Publication resource in Oracle Cloud Infrastructure Marketplace service.
//
// Creates a publication of the specified listing type with an optional default package.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Marketplace"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Marketplace.NewPublication(ctx, "testPublication", &Marketplace.PublicationArgs{
//				CompartmentId:           pulumi.Any(_var.Compartment_id),
//				IsAgreementAcknowledged: pulumi.Any(_var.Publication_is_agreement_acknowledged),
//				ListingType:             pulumi.Any(_var.Publication_listing_type),
//				PackageDetails: &marketplace.PublicationPackageDetailsArgs{
//					Eulas: marketplace.PublicationPackageDetailsEulaArray{
//						&marketplace.PublicationPackageDetailsEulaArgs{
//							EulaType:    pulumi.Any(_var.Publication_package_details_eula_eula_type),
//							LicenseText: pulumi.Any(_var.Publication_package_details_eula_license_text),
//						},
//					},
//					OperatingSystem: &marketplace.PublicationPackageDetailsOperatingSystemArgs{
//						Name: pulumi.Any(_var.Publication_package_details_operating_system_name),
//					},
//					PackageType:    pulumi.Any(_var.Publication_package_details_package_type),
//					PackageVersion: pulumi.Any(_var.Publication_package_details_package_version),
//					ImageId:        pulumi.Any(oci_core_image.Test_image.Id),
//				},
//				ShortDescription: pulumi.Any(_var.Publication_short_description),
//				SupportContacts: marketplace.PublicationSupportContactArray{
//					&marketplace.PublicationSupportContactArgs{
//						Email:   pulumi.Any(_var.Publication_support_contacts_email),
//						Name:    pulumi.Any(_var.Publication_support_contacts_name),
//						Phone:   pulumi.Any(_var.Publication_support_contacts_phone),
//						Subject: pulumi.Any(_var.Publication_support_contacts_subject),
//					},
//				},
//				DefinedTags: pulumi.Map{
//					"Operations.CostCenter": pulumi.Any("42"),
//				},
//				FreeformTags: pulumi.Map{
//					"Department": pulumi.Any("Finance"),
//				},
//				LongDescription: pulumi.Any(_var.Publication_long_description),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Publications can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:Marketplace/publication:Publication test_publication "id"
//
// ```
type Publication struct {
	pulumi.CustomResourceState

	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the publication.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The model for upload data for images and icons.
	Icons PublicationIconArrayOutput `pulumi:"icons"`
	// Whether the publisher acknowledged that they have the right and authority to share the contents of the publication and that they accepted the Oracle terms of use agreements required to create a publication.
	IsAgreementAcknowledged pulumi.BoolOutput `pulumi:"isAgreementAcknowledged"`
	// The publisher category to which the publication belongs. The publisher category informs where the listing appears for use.
	ListingType pulumi.StringOutput `pulumi:"listingType"`
	// (Updatable) A long description of the publication to use in the listing.
	LongDescription pulumi.StringOutput `pulumi:"longDescription"`
	// (Updatable) The name of the contact.
	Name pulumi.StringOutput `pulumi:"name"`
	// A base object for creating a publication package.
	PackageDetails PublicationPackageDetailsOutput `pulumi:"packageDetails"`
	// The package's type.
	PackageType pulumi.StringOutput `pulumi:"packageType"`
	// (Updatable) A short description of the publication to use in the listing.
	ShortDescription pulumi.StringOutput `pulumi:"shortDescription"`
	// The lifecycle state of the publication.
	State pulumi.StringOutput `pulumi:"state"`
	// (Updatable) Contact information for getting support from the publisher for the listing.
	SupportContacts PublicationSupportContactArrayOutput `pulumi:"supportContacts"`
	// The list of operating systems supported by the listing.
	SupportedOperatingSystems PublicationSupportedOperatingSystemArrayOutput `pulumi:"supportedOperatingSystems"`
	// The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// The date and time the publication was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewPublication registers a new resource with the given unique name, arguments, and options.
func NewPublication(ctx *pulumi.Context,
	name string, args *PublicationArgs, opts ...pulumi.ResourceOption) (*Publication, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.IsAgreementAcknowledged == nil {
		return nil, errors.New("invalid value for required argument 'IsAgreementAcknowledged'")
	}
	if args.ListingType == nil {
		return nil, errors.New("invalid value for required argument 'ListingType'")
	}
	if args.PackageDetails == nil {
		return nil, errors.New("invalid value for required argument 'PackageDetails'")
	}
	if args.ShortDescription == nil {
		return nil, errors.New("invalid value for required argument 'ShortDescription'")
	}
	if args.SupportContacts == nil {
		return nil, errors.New("invalid value for required argument 'SupportContacts'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Publication
	err := ctx.RegisterResource("oci:Marketplace/publication:Publication", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPublication gets an existing Publication resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPublication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PublicationState, opts ...pulumi.ResourceOption) (*Publication, error) {
	var resource Publication
	err := ctx.ReadResource("oci:Marketplace/publication:Publication", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Publication resources.
type publicationState struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the publication.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The model for upload data for images and icons.
	Icons []PublicationIcon `pulumi:"icons"`
	// Whether the publisher acknowledged that they have the right and authority to share the contents of the publication and that they accepted the Oracle terms of use agreements required to create a publication.
	IsAgreementAcknowledged *bool `pulumi:"isAgreementAcknowledged"`
	// The publisher category to which the publication belongs. The publisher category informs where the listing appears for use.
	ListingType *string `pulumi:"listingType"`
	// (Updatable) A long description of the publication to use in the listing.
	LongDescription *string `pulumi:"longDescription"`
	// (Updatable) The name of the contact.
	Name *string `pulumi:"name"`
	// A base object for creating a publication package.
	PackageDetails *PublicationPackageDetails `pulumi:"packageDetails"`
	// The package's type.
	PackageType *string `pulumi:"packageType"`
	// (Updatable) A short description of the publication to use in the listing.
	ShortDescription *string `pulumi:"shortDescription"`
	// The lifecycle state of the publication.
	State *string `pulumi:"state"`
	// (Updatable) Contact information for getting support from the publisher for the listing.
	SupportContacts []PublicationSupportContact `pulumi:"supportContacts"`
	// The list of operating systems supported by the listing.
	SupportedOperatingSystems []PublicationSupportedOperatingSystem `pulumi:"supportedOperatingSystems"`
	// The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The date and time the publication was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
}

type PublicationState struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the publication.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The model for upload data for images and icons.
	Icons PublicationIconArrayInput
	// Whether the publisher acknowledged that they have the right and authority to share the contents of the publication and that they accepted the Oracle terms of use agreements required to create a publication.
	IsAgreementAcknowledged pulumi.BoolPtrInput
	// The publisher category to which the publication belongs. The publisher category informs where the listing appears for use.
	ListingType pulumi.StringPtrInput
	// (Updatable) A long description of the publication to use in the listing.
	LongDescription pulumi.StringPtrInput
	// (Updatable) The name of the contact.
	Name pulumi.StringPtrInput
	// A base object for creating a publication package.
	PackageDetails PublicationPackageDetailsPtrInput
	// The package's type.
	PackageType pulumi.StringPtrInput
	// (Updatable) A short description of the publication to use in the listing.
	ShortDescription pulumi.StringPtrInput
	// The lifecycle state of the publication.
	State pulumi.StringPtrInput
	// (Updatable) Contact information for getting support from the publisher for the listing.
	SupportContacts PublicationSupportContactArrayInput
	// The list of operating systems supported by the listing.
	SupportedOperatingSystems PublicationSupportedOperatingSystemArrayInput
	// The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
	SystemTags pulumi.MapInput
	// The date and time the publication was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
}

func (PublicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*publicationState)(nil)).Elem()
}

type publicationArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the publication.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Whether the publisher acknowledged that they have the right and authority to share the contents of the publication and that they accepted the Oracle terms of use agreements required to create a publication.
	IsAgreementAcknowledged bool `pulumi:"isAgreementAcknowledged"`
	// The publisher category to which the publication belongs. The publisher category informs where the listing appears for use.
	ListingType string `pulumi:"listingType"`
	// (Updatable) A long description of the publication to use in the listing.
	LongDescription *string `pulumi:"longDescription"`
	// (Updatable) The name of the contact.
	Name *string `pulumi:"name"`
	// A base object for creating a publication package.
	PackageDetails PublicationPackageDetails `pulumi:"packageDetails"`
	// (Updatable) A short description of the publication to use in the listing.
	ShortDescription string `pulumi:"shortDescription"`
	// (Updatable) Contact information for getting support from the publisher for the listing.
	SupportContacts []PublicationSupportContact `pulumi:"supportContacts"`
}

// The set of arguments for constructing a Publication resource.
type PublicationArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the publication.
	CompartmentId pulumi.StringInput
	// (Updatable) The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// Whether the publisher acknowledged that they have the right and authority to share the contents of the publication and that they accepted the Oracle terms of use agreements required to create a publication.
	IsAgreementAcknowledged pulumi.BoolInput
	// The publisher category to which the publication belongs. The publisher category informs where the listing appears for use.
	ListingType pulumi.StringInput
	// (Updatable) A long description of the publication to use in the listing.
	LongDescription pulumi.StringPtrInput
	// (Updatable) The name of the contact.
	Name pulumi.StringPtrInput
	// A base object for creating a publication package.
	PackageDetails PublicationPackageDetailsInput
	// (Updatable) A short description of the publication to use in the listing.
	ShortDescription pulumi.StringInput
	// (Updatable) Contact information for getting support from the publisher for the listing.
	SupportContacts PublicationSupportContactArrayInput
}

func (PublicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*publicationArgs)(nil)).Elem()
}

type PublicationInput interface {
	pulumi.Input

	ToPublicationOutput() PublicationOutput
	ToPublicationOutputWithContext(ctx context.Context) PublicationOutput
}

func (*Publication) ElementType() reflect.Type {
	return reflect.TypeOf((**Publication)(nil)).Elem()
}

func (i *Publication) ToPublicationOutput() PublicationOutput {
	return i.ToPublicationOutputWithContext(context.Background())
}

func (i *Publication) ToPublicationOutputWithContext(ctx context.Context) PublicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationOutput)
}

// PublicationArrayInput is an input type that accepts PublicationArray and PublicationArrayOutput values.
// You can construct a concrete instance of `PublicationArrayInput` via:
//
//	PublicationArray{ PublicationArgs{...} }
type PublicationArrayInput interface {
	pulumi.Input

	ToPublicationArrayOutput() PublicationArrayOutput
	ToPublicationArrayOutputWithContext(context.Context) PublicationArrayOutput
}

type PublicationArray []PublicationInput

func (PublicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Publication)(nil)).Elem()
}

func (i PublicationArray) ToPublicationArrayOutput() PublicationArrayOutput {
	return i.ToPublicationArrayOutputWithContext(context.Background())
}

func (i PublicationArray) ToPublicationArrayOutputWithContext(ctx context.Context) PublicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationArrayOutput)
}

// PublicationMapInput is an input type that accepts PublicationMap and PublicationMapOutput values.
// You can construct a concrete instance of `PublicationMapInput` via:
//
//	PublicationMap{ "key": PublicationArgs{...} }
type PublicationMapInput interface {
	pulumi.Input

	ToPublicationMapOutput() PublicationMapOutput
	ToPublicationMapOutputWithContext(context.Context) PublicationMapOutput
}

type PublicationMap map[string]PublicationInput

func (PublicationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Publication)(nil)).Elem()
}

func (i PublicationMap) ToPublicationMapOutput() PublicationMapOutput {
	return i.ToPublicationMapOutputWithContext(context.Background())
}

func (i PublicationMap) ToPublicationMapOutputWithContext(ctx context.Context) PublicationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationMapOutput)
}

type PublicationOutput struct{ *pulumi.OutputState }

func (PublicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Publication)(nil)).Elem()
}

func (o PublicationOutput) ToPublicationOutput() PublicationOutput {
	return o
}

func (o PublicationOutput) ToPublicationOutputWithContext(ctx context.Context) PublicationOutput {
	return o
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the publication.
func (o PublicationOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Publication) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o PublicationOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *Publication) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o PublicationOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *Publication) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// The model for upload data for images and icons.
func (o PublicationOutput) Icons() PublicationIconArrayOutput {
	return o.ApplyT(func(v *Publication) PublicationIconArrayOutput { return v.Icons }).(PublicationIconArrayOutput)
}

// Whether the publisher acknowledged that they have the right and authority to share the contents of the publication and that they accepted the Oracle terms of use agreements required to create a publication.
func (o PublicationOutput) IsAgreementAcknowledged() pulumi.BoolOutput {
	return o.ApplyT(func(v *Publication) pulumi.BoolOutput { return v.IsAgreementAcknowledged }).(pulumi.BoolOutput)
}

// The publisher category to which the publication belongs. The publisher category informs where the listing appears for use.
func (o PublicationOutput) ListingType() pulumi.StringOutput {
	return o.ApplyT(func(v *Publication) pulumi.StringOutput { return v.ListingType }).(pulumi.StringOutput)
}

// (Updatable) A long description of the publication to use in the listing.
func (o PublicationOutput) LongDescription() pulumi.StringOutput {
	return o.ApplyT(func(v *Publication) pulumi.StringOutput { return v.LongDescription }).(pulumi.StringOutput)
}

// (Updatable) The name of the contact.
func (o PublicationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Publication) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A base object for creating a publication package.
func (o PublicationOutput) PackageDetails() PublicationPackageDetailsOutput {
	return o.ApplyT(func(v *Publication) PublicationPackageDetailsOutput { return v.PackageDetails }).(PublicationPackageDetailsOutput)
}

// The package's type.
func (o PublicationOutput) PackageType() pulumi.StringOutput {
	return o.ApplyT(func(v *Publication) pulumi.StringOutput { return v.PackageType }).(pulumi.StringOutput)
}

// (Updatable) A short description of the publication to use in the listing.
func (o PublicationOutput) ShortDescription() pulumi.StringOutput {
	return o.ApplyT(func(v *Publication) pulumi.StringOutput { return v.ShortDescription }).(pulumi.StringOutput)
}

// The lifecycle state of the publication.
func (o PublicationOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Publication) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// (Updatable) Contact information for getting support from the publisher for the listing.
func (o PublicationOutput) SupportContacts() PublicationSupportContactArrayOutput {
	return o.ApplyT(func(v *Publication) PublicationSupportContactArrayOutput { return v.SupportContacts }).(PublicationSupportContactArrayOutput)
}

// The list of operating systems supported by the listing.
func (o PublicationOutput) SupportedOperatingSystems() PublicationSupportedOperatingSystemArrayOutput {
	return o.ApplyT(func(v *Publication) PublicationSupportedOperatingSystemArrayOutput {
		return v.SupportedOperatingSystems
	}).(PublicationSupportedOperatingSystemArrayOutput)
}

// The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
func (o PublicationOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v *Publication) pulumi.MapOutput { return v.SystemTags }).(pulumi.MapOutput)
}

// The date and time the publication was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
func (o PublicationOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *Publication) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

type PublicationArrayOutput struct{ *pulumi.OutputState }

func (PublicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Publication)(nil)).Elem()
}

func (o PublicationArrayOutput) ToPublicationArrayOutput() PublicationArrayOutput {
	return o
}

func (o PublicationArrayOutput) ToPublicationArrayOutputWithContext(ctx context.Context) PublicationArrayOutput {
	return o
}

func (o PublicationArrayOutput) Index(i pulumi.IntInput) PublicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Publication {
		return vs[0].([]*Publication)[vs[1].(int)]
	}).(PublicationOutput)
}

type PublicationMapOutput struct{ *pulumi.OutputState }

func (PublicationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Publication)(nil)).Elem()
}

func (o PublicationMapOutput) ToPublicationMapOutput() PublicationMapOutput {
	return o
}

func (o PublicationMapOutput) ToPublicationMapOutputWithContext(ctx context.Context) PublicationMapOutput {
	return o
}

func (o PublicationMapOutput) MapIndex(k pulumi.StringInput) PublicationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Publication {
		return vs[0].(map[string]*Publication)[vs[1].(string)]
	}).(PublicationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PublicationInput)(nil)).Elem(), &Publication{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicationArrayInput)(nil)).Elem(), PublicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicationMapInput)(nil)).Elem(), PublicationMap{})
	pulumi.RegisterOutputType(PublicationOutput{})
	pulumi.RegisterOutputType(PublicationArrayOutput{})
	pulumi.RegisterOutputType(PublicationMapOutput{})
}
