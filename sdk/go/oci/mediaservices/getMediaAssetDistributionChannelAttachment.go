// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mediaservices

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Media Asset Distribution Channel Attachment resource in Oracle Cloud Infrastructure Media Services service.
//
// Gets a MediaAssetDistributionChannelAttachment for a MediaAsset by identifiers.
func GetMediaAssetDistributionChannelAttachment(ctx *pulumi.Context, args *GetMediaAssetDistributionChannelAttachmentArgs, opts ...pulumi.InvokeOption) (*GetMediaAssetDistributionChannelAttachmentResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetMediaAssetDistributionChannelAttachmentResult
	err := ctx.Invoke("oci:MediaServices/getMediaAssetDistributionChannelAttachment:getMediaAssetDistributionChannelAttachment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMediaAssetDistributionChannelAttachment.
type GetMediaAssetDistributionChannelAttachmentArgs struct {
	// Unique DistributionChannel identifier.
	DistributionChannelId string `pulumi:"distributionChannelId"`
	IsLockOverride        *bool  `pulumi:"isLockOverride"`
	// Locks associated with this resource.
	Locks []GetMediaAssetDistributionChannelAttachmentLock `pulumi:"locks"`
	// Unique MediaAsset identifier
	MediaAssetId string `pulumi:"mediaAssetId"`
}

// A collection of values returned by getMediaAssetDistributionChannelAttachment.
type GetMediaAssetDistributionChannelAttachmentResult struct {
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// OCID of associated Distribution Channel.
	DistributionChannelId string `pulumi:"distributionChannelId"`
	// The provider-assigned unique ID for this managed resource.
	Id             string `pulumi:"id"`
	IsLockOverride bool   `pulumi:"isLockOverride"`
	// Locks associated with this resource.
	Locks        []GetMediaAssetDistributionChannelAttachmentLock `pulumi:"locks"`
	MediaAssetId string                                           `pulumi:"mediaAssetId"`
	// The ingest MediaWorkflowJob ID that created this attachment.
	MediaWorkflowJobId string `pulumi:"mediaWorkflowJobId"`
	// The identifier for the metadata.
	MetadataRef string `pulumi:"metadataRef"`
	// Lifecycle state of the attachment.
	State string `pulumi:"state"`
	// Version of the attachment.
	Version string `pulumi:"version"`
}

func GetMediaAssetDistributionChannelAttachmentOutput(ctx *pulumi.Context, args GetMediaAssetDistributionChannelAttachmentOutputArgs, opts ...pulumi.InvokeOption) GetMediaAssetDistributionChannelAttachmentResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetMediaAssetDistributionChannelAttachmentResult, error) {
			args := v.(GetMediaAssetDistributionChannelAttachmentArgs)
			r, err := GetMediaAssetDistributionChannelAttachment(ctx, &args, opts...)
			var s GetMediaAssetDistributionChannelAttachmentResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetMediaAssetDistributionChannelAttachmentResultOutput)
}

// A collection of arguments for invoking getMediaAssetDistributionChannelAttachment.
type GetMediaAssetDistributionChannelAttachmentOutputArgs struct {
	// Unique DistributionChannel identifier.
	DistributionChannelId pulumi.StringInput  `pulumi:"distributionChannelId"`
	IsLockOverride        pulumi.BoolPtrInput `pulumi:"isLockOverride"`
	// Locks associated with this resource.
	Locks GetMediaAssetDistributionChannelAttachmentLockArrayInput `pulumi:"locks"`
	// Unique MediaAsset identifier
	MediaAssetId pulumi.StringInput `pulumi:"mediaAssetId"`
}

func (GetMediaAssetDistributionChannelAttachmentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaAssetDistributionChannelAttachmentArgs)(nil)).Elem()
}

// A collection of values returned by getMediaAssetDistributionChannelAttachment.
type GetMediaAssetDistributionChannelAttachmentResultOutput struct{ *pulumi.OutputState }

func (GetMediaAssetDistributionChannelAttachmentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaAssetDistributionChannelAttachmentResult)(nil)).Elem()
}

func (o GetMediaAssetDistributionChannelAttachmentResultOutput) ToGetMediaAssetDistributionChannelAttachmentResultOutput() GetMediaAssetDistributionChannelAttachmentResultOutput {
	return o
}

func (o GetMediaAssetDistributionChannelAttachmentResultOutput) ToGetMediaAssetDistributionChannelAttachmentResultOutputWithContext(ctx context.Context) GetMediaAssetDistributionChannelAttachmentResultOutput {
	return o
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o GetMediaAssetDistributionChannelAttachmentResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetDistributionChannelAttachmentResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// OCID of associated Distribution Channel.
func (o GetMediaAssetDistributionChannelAttachmentResultOutput) DistributionChannelId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetDistributionChannelAttachmentResult) string { return v.DistributionChannelId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetMediaAssetDistributionChannelAttachmentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetDistributionChannelAttachmentResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetMediaAssetDistributionChannelAttachmentResultOutput) IsLockOverride() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMediaAssetDistributionChannelAttachmentResult) bool { return v.IsLockOverride }).(pulumi.BoolOutput)
}

// Locks associated with this resource.
func (o GetMediaAssetDistributionChannelAttachmentResultOutput) Locks() GetMediaAssetDistributionChannelAttachmentLockArrayOutput {
	return o.ApplyT(func(v GetMediaAssetDistributionChannelAttachmentResult) []GetMediaAssetDistributionChannelAttachmentLock {
		return v.Locks
	}).(GetMediaAssetDistributionChannelAttachmentLockArrayOutput)
}

func (o GetMediaAssetDistributionChannelAttachmentResultOutput) MediaAssetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetDistributionChannelAttachmentResult) string { return v.MediaAssetId }).(pulumi.StringOutput)
}

// The ingest MediaWorkflowJob ID that created this attachment.
func (o GetMediaAssetDistributionChannelAttachmentResultOutput) MediaWorkflowJobId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetDistributionChannelAttachmentResult) string { return v.MediaWorkflowJobId }).(pulumi.StringOutput)
}

// The identifier for the metadata.
func (o GetMediaAssetDistributionChannelAttachmentResultOutput) MetadataRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetDistributionChannelAttachmentResult) string { return v.MetadataRef }).(pulumi.StringOutput)
}

// Lifecycle state of the attachment.
func (o GetMediaAssetDistributionChannelAttachmentResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetDistributionChannelAttachmentResult) string { return v.State }).(pulumi.StringOutput)
}

// Version of the attachment.
func (o GetMediaAssetDistributionChannelAttachmentResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetDistributionChannelAttachmentResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMediaAssetDistributionChannelAttachmentResultOutput{})
}
