// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mediaservices

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Media Workflow Configuration resource in Oracle Cloud Infrastructure Media Services service.
//
// # Gets a MediaWorkflowConfiguration by identifier
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/MediaServices"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := MediaServices.GetMediaWorkflowConfiguration(ctx, &mediaservices.GetMediaWorkflowConfigurationArgs{
//				MediaWorkflowConfigurationId: oci_media_services_media_workflow_configuration.Test_media_workflow_configuration.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupMediaWorkflowConfiguration(ctx *pulumi.Context, args *LookupMediaWorkflowConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupMediaWorkflowConfigurationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMediaWorkflowConfigurationResult
	err := ctx.Invoke("oci:MediaServices/getMediaWorkflowConfiguration:getMediaWorkflowConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMediaWorkflowConfiguration.
type LookupMediaWorkflowConfigurationArgs struct {
	// Unique MediaWorkflowConfiguration identifier.
	MediaWorkflowConfigurationId string `pulumi:"mediaWorkflowConfigurationId"`
}

// A collection of values returned by getMediaWorkflowConfiguration.
type LookupMediaWorkflowConfigurationResult struct {
	// Compartment Identifier.
	CompartmentId *string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Display name for the MediaWorkflowConfiguration. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Unique identifier that is immutable on creation.
	Id *string `pulumi:"id"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecyleDetails              *string `pulumi:"lifecyleDetails"`
	MediaWorkflowConfigurationId string  `pulumi:"mediaWorkflowConfigurationId"`
	// Reuseable parameter values encoded as a JSON; the top and second level JSON elements are objects. Each key of the top level object refer to a task key that is unqiue to the workflow, each of the second level objects' keys refer to the name of a parameter that is unique to the task. taskKey > parameterName > parameterValue
	Parameters *string `pulumi:"parameters"`
	// The current state of the MediaWorkflowConfiguration.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time when the the MediaWorkflowConfiguration was created. An RFC3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time when the MediaWorkflowConfiguration was updated. An RFC3339 formatted datetime string.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

func LookupMediaWorkflowConfigurationOutput(ctx *pulumi.Context, args LookupMediaWorkflowConfigurationOutputArgs, opts ...pulumi.InvokeOption) LookupMediaWorkflowConfigurationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMediaWorkflowConfigurationResult, error) {
			args := v.(LookupMediaWorkflowConfigurationArgs)
			r, err := LookupMediaWorkflowConfiguration(ctx, &args, opts...)
			var s LookupMediaWorkflowConfigurationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMediaWorkflowConfigurationResultOutput)
}

// A collection of arguments for invoking getMediaWorkflowConfiguration.
type LookupMediaWorkflowConfigurationOutputArgs struct {
	// Unique MediaWorkflowConfiguration identifier.
	MediaWorkflowConfigurationId pulumi.StringInput `pulumi:"mediaWorkflowConfigurationId"`
}

func (LookupMediaWorkflowConfigurationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMediaWorkflowConfigurationArgs)(nil)).Elem()
}

// A collection of values returned by getMediaWorkflowConfiguration.
type LookupMediaWorkflowConfigurationResultOutput struct{ *pulumi.OutputState }

func (LookupMediaWorkflowConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMediaWorkflowConfigurationResult)(nil)).Elem()
}

func (o LookupMediaWorkflowConfigurationResultOutput) ToLookupMediaWorkflowConfigurationResultOutput() LookupMediaWorkflowConfigurationResultOutput {
	return o
}

func (o LookupMediaWorkflowConfigurationResultOutput) ToLookupMediaWorkflowConfigurationResultOutputWithContext(ctx context.Context) LookupMediaWorkflowConfigurationResultOutput {
	return o
}

// Compartment Identifier.
func (o LookupMediaWorkflowConfigurationResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMediaWorkflowConfigurationResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupMediaWorkflowConfigurationResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupMediaWorkflowConfigurationResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// Display name for the MediaWorkflowConfiguration. Avoid entering confidential information.
func (o LookupMediaWorkflowConfigurationResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMediaWorkflowConfigurationResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupMediaWorkflowConfigurationResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupMediaWorkflowConfigurationResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// Unique identifier that is immutable on creation.
func (o LookupMediaWorkflowConfigurationResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMediaWorkflowConfigurationResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o LookupMediaWorkflowConfigurationResultOutput) LifecyleDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMediaWorkflowConfigurationResult) *string { return v.LifecyleDetails }).(pulumi.StringPtrOutput)
}

func (o LookupMediaWorkflowConfigurationResultOutput) MediaWorkflowConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMediaWorkflowConfigurationResult) string { return v.MediaWorkflowConfigurationId }).(pulumi.StringOutput)
}

// Reuseable parameter values encoded as a JSON; the top and second level JSON elements are objects. Each key of the top level object refer to a task key that is unqiue to the workflow, each of the second level objects' keys refer to the name of a parameter that is unique to the task. taskKey > parameterName > parameterValue
func (o LookupMediaWorkflowConfigurationResultOutput) Parameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMediaWorkflowConfigurationResult) *string { return v.Parameters }).(pulumi.StringPtrOutput)
}

// The current state of the MediaWorkflowConfiguration.
func (o LookupMediaWorkflowConfigurationResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMediaWorkflowConfigurationResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupMediaWorkflowConfigurationResultOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupMediaWorkflowConfigurationResult) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The time when the the MediaWorkflowConfiguration was created. An RFC3339 formatted datetime string.
func (o LookupMediaWorkflowConfigurationResultOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMediaWorkflowConfigurationResult) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The time when the MediaWorkflowConfiguration was updated. An RFC3339 formatted datetime string.
func (o LookupMediaWorkflowConfigurationResultOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMediaWorkflowConfigurationResult) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMediaWorkflowConfigurationResultOutput{})
}
