// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mediaservices

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Media Workflow Job resource in Oracle Cloud Infrastructure Media Services service.
//
// Gets the MediaWorkflowJob.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/MediaServices"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := MediaServices.GetMediaWorkflowJob(ctx, &mediaservices.GetMediaWorkflowJobArgs{
//				MediaWorkflowJobId: oci_media_services_media_workflow_job.Test_media_workflow_job.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupMediaWorkflowJob(ctx *pulumi.Context, args *LookupMediaWorkflowJobArgs, opts ...pulumi.InvokeOption) (*LookupMediaWorkflowJobResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMediaWorkflowJobResult
	err := ctx.Invoke("oci:MediaServices/getMediaWorkflowJob:getMediaWorkflowJob", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMediaWorkflowJob.
type LookupMediaWorkflowJobArgs struct {
	// Unique MediaWorkflowJob identifier.
	MediaWorkflowJobId string `pulumi:"mediaWorkflowJobId"`
}

// A collection of values returned by getMediaWorkflowJob.
type LookupMediaWorkflowJobResult struct {
	// Compartment Identifier.
	CompartmentId *string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Name of the Media Workflow Job. Does not have to be unique. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The ID associated with the job output.
	Id *string `pulumi:"id"`
	// The lifecycle details of MediaWorkflowJob task.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// Configurations to be applied to this run of the workflow.
	MediaWorkflowConfigurationIds []string `pulumi:"mediaWorkflowConfigurationIds"`
	// The workflow to execute.
	MediaWorkflowId    *string `pulumi:"mediaWorkflowId"`
	MediaWorkflowJobId string  `pulumi:"mediaWorkflowJobId"`
	MediaWorkflowName  *string `pulumi:"mediaWorkflowName"`
	// A list of JobOutput for the workflowJob.
	Outputs []GetMediaWorkflowJobOutput `pulumi:"outputs"`
	// Parameters that override parameters specified in MediaWorkflowTaskDeclarations, the MediaWorkflow, the MediaWorkflow's MediaWorkflowConfigurations and the MediaWorkflowConfigurations of this MediaWorkflowJob. The parameters are given as JSON.  The top level and 2nd level elements must be JSON objects (vs arrays, scalars, etc). The top level keys refer to a task's key and the 2nd level keys refer to a parameter's name.
	Parameters *string `pulumi:"parameters"`
	// A JSON representation of the job as it will be run by the system. All the task declarations, configurations and parameters are merged. Parameter values are all fully resolved.
	Runnable *string `pulumi:"runnable"`
	// The current state of the MediaWorkflowJob task.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// Status of each task.
	TaskLifecycleStates []GetMediaWorkflowJobTaskLifecycleState `pulumi:"taskLifecycleStates"`
	// Creation time of the job. An RFC3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// Time when the job finished. An RFC3339 formatted datetime string.
	TimeEnded *string `pulumi:"timeEnded"`
	// Time when the job started to execute. An RFC3339 formatted datetime string.
	TimeStarted *string `pulumi:"timeStarted"`
	// Updated time of the job. An RFC3339 formatted datetime string.
	TimeUpdated            *string `pulumi:"timeUpdated"`
	WorkflowIdentifierType *string `pulumi:"workflowIdentifierType"`
}

func LookupMediaWorkflowJobOutput(ctx *pulumi.Context, args LookupMediaWorkflowJobOutputArgs, opts ...pulumi.InvokeOption) LookupMediaWorkflowJobResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMediaWorkflowJobResult, error) {
			args := v.(LookupMediaWorkflowJobArgs)
			r, err := LookupMediaWorkflowJob(ctx, &args, opts...)
			var s LookupMediaWorkflowJobResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMediaWorkflowJobResultOutput)
}

// A collection of arguments for invoking getMediaWorkflowJob.
type LookupMediaWorkflowJobOutputArgs struct {
	// Unique MediaWorkflowJob identifier.
	MediaWorkflowJobId pulumi.StringInput `pulumi:"mediaWorkflowJobId"`
}

func (LookupMediaWorkflowJobOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMediaWorkflowJobArgs)(nil)).Elem()
}

// A collection of values returned by getMediaWorkflowJob.
type LookupMediaWorkflowJobResultOutput struct{ *pulumi.OutputState }

func (LookupMediaWorkflowJobResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMediaWorkflowJobResult)(nil)).Elem()
}

func (o LookupMediaWorkflowJobResultOutput) ToLookupMediaWorkflowJobResultOutput() LookupMediaWorkflowJobResultOutput {
	return o
}

func (o LookupMediaWorkflowJobResultOutput) ToLookupMediaWorkflowJobResultOutputWithContext(ctx context.Context) LookupMediaWorkflowJobResultOutput {
	return o
}

// Compartment Identifier.
func (o LookupMediaWorkflowJobResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMediaWorkflowJobResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupMediaWorkflowJobResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupMediaWorkflowJobResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// Name of the Media Workflow Job. Does not have to be unique. Avoid entering confidential information.
func (o LookupMediaWorkflowJobResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMediaWorkflowJobResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupMediaWorkflowJobResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupMediaWorkflowJobResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The ID associated with the job output.
func (o LookupMediaWorkflowJobResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMediaWorkflowJobResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The lifecycle details of MediaWorkflowJob task.
func (o LookupMediaWorkflowJobResultOutput) LifecycleDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMediaWorkflowJobResult) *string { return v.LifecycleDetails }).(pulumi.StringPtrOutput)
}

// Configurations to be applied to this run of the workflow.
func (o LookupMediaWorkflowJobResultOutput) MediaWorkflowConfigurationIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupMediaWorkflowJobResult) []string { return v.MediaWorkflowConfigurationIds }).(pulumi.StringArrayOutput)
}

// The workflow to execute.
func (o LookupMediaWorkflowJobResultOutput) MediaWorkflowId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMediaWorkflowJobResult) *string { return v.MediaWorkflowId }).(pulumi.StringPtrOutput)
}

func (o LookupMediaWorkflowJobResultOutput) MediaWorkflowJobId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMediaWorkflowJobResult) string { return v.MediaWorkflowJobId }).(pulumi.StringOutput)
}

func (o LookupMediaWorkflowJobResultOutput) MediaWorkflowName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMediaWorkflowJobResult) *string { return v.MediaWorkflowName }).(pulumi.StringPtrOutput)
}

// A list of JobOutput for the workflowJob.
func (o LookupMediaWorkflowJobResultOutput) Outputs() GetMediaWorkflowJobOutputArrayOutput {
	return o.ApplyT(func(v LookupMediaWorkflowJobResult) []GetMediaWorkflowJobOutput { return v.Outputs }).(GetMediaWorkflowJobOutputArrayOutput)
}

// Parameters that override parameters specified in MediaWorkflowTaskDeclarations, the MediaWorkflow, the MediaWorkflow's MediaWorkflowConfigurations and the MediaWorkflowConfigurations of this MediaWorkflowJob. The parameters are given as JSON.  The top level and 2nd level elements must be JSON objects (vs arrays, scalars, etc). The top level keys refer to a task's key and the 2nd level keys refer to a parameter's name.
func (o LookupMediaWorkflowJobResultOutput) Parameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMediaWorkflowJobResult) *string { return v.Parameters }).(pulumi.StringPtrOutput)
}

// A JSON representation of the job as it will be run by the system. All the task declarations, configurations and parameters are merged. Parameter values are all fully resolved.
func (o LookupMediaWorkflowJobResultOutput) Runnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMediaWorkflowJobResult) *string { return v.Runnable }).(pulumi.StringPtrOutput)
}

// The current state of the MediaWorkflowJob task.
func (o LookupMediaWorkflowJobResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMediaWorkflowJobResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupMediaWorkflowJobResultOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupMediaWorkflowJobResult) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// Status of each task.
func (o LookupMediaWorkflowJobResultOutput) TaskLifecycleStates() GetMediaWorkflowJobTaskLifecycleStateArrayOutput {
	return o.ApplyT(func(v LookupMediaWorkflowJobResult) []GetMediaWorkflowJobTaskLifecycleState {
		return v.TaskLifecycleStates
	}).(GetMediaWorkflowJobTaskLifecycleStateArrayOutput)
}

// Creation time of the job. An RFC3339 formatted datetime string.
func (o LookupMediaWorkflowJobResultOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMediaWorkflowJobResult) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// Time when the job finished. An RFC3339 formatted datetime string.
func (o LookupMediaWorkflowJobResultOutput) TimeEnded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMediaWorkflowJobResult) *string { return v.TimeEnded }).(pulumi.StringPtrOutput)
}

// Time when the job started to execute. An RFC3339 formatted datetime string.
func (o LookupMediaWorkflowJobResultOutput) TimeStarted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMediaWorkflowJobResult) *string { return v.TimeStarted }).(pulumi.StringPtrOutput)
}

// Updated time of the job. An RFC3339 formatted datetime string.
func (o LookupMediaWorkflowJobResultOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMediaWorkflowJobResult) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

func (o LookupMediaWorkflowJobResultOutput) WorkflowIdentifierType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMediaWorkflowJobResult) *string { return v.WorkflowIdentifierType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMediaWorkflowJobResultOutput{})
}
