// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mediaservices

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Media Workflow Jobs in Oracle Cloud Infrastructure Media Services service.
//
// Lists the MediaWorkflowJobs.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/MediaServices"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := MediaServices.GetMediaWorkflowJobs(ctx, &mediaservices.GetMediaWorkflowJobsArgs{
//				CompartmentId:   pulumi.StringRef(_var.Compartment_id),
//				DisplayName:     pulumi.StringRef(_var.Media_workflow_job_display_name),
//				Id:              pulumi.StringRef(_var.Media_workflow_job_id),
//				MediaWorkflowId: pulumi.StringRef(oci_media_services_media_workflow.Test_media_workflow.Id),
//				State:           pulumi.StringRef(_var.Media_workflow_job_state),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetMediaWorkflowJobs(ctx *pulumi.Context, args *GetMediaWorkflowJobsArgs, opts ...pulumi.InvokeOption) (*GetMediaWorkflowJobsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetMediaWorkflowJobsResult
	err := ctx.Invoke("oci:MediaServices/getMediaWorkflowJobs:getMediaWorkflowJobs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMediaWorkflowJobs.
type GetMediaWorkflowJobsArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId *string `pulumi:"compartmentId"`
	// A filter to return only the resources that match the entire display name given.
	DisplayName *string                      `pulumi:"displayName"`
	Filters     []GetMediaWorkflowJobsFilter `pulumi:"filters"`
	// unique MediaWorkflowJob identifier
	Id *string `pulumi:"id"`
	// Unique MediaWorkflow identifier.
	MediaWorkflowId *string `pulumi:"mediaWorkflowId"`
	// A filter to return only the resources with lifecycleState matching the given lifecycleState.
	State *string `pulumi:"state"`
}

// A collection of values returned by getMediaWorkflowJobs.
type GetMediaWorkflowJobsResult struct {
	// The compartment ID of the lock.
	CompartmentId *string `pulumi:"compartmentId"`
	// Name of the Media Workflow Job. Does not have to be unique. Avoid entering confidential information.
	DisplayName *string                      `pulumi:"displayName"`
	Filters     []GetMediaWorkflowJobsFilter `pulumi:"filters"`
	// The ID associated with the job output.
	Id *string `pulumi:"id"`
	// The workflow to execute.
	MediaWorkflowId *string `pulumi:"mediaWorkflowId"`
	// The list of media_workflow_job_collection.
	MediaWorkflowJobCollections []GetMediaWorkflowJobsMediaWorkflowJobCollection `pulumi:"mediaWorkflowJobCollections"`
	// The current state of the MediaWorkflowJob task.
	State *string `pulumi:"state"`
}

func GetMediaWorkflowJobsOutput(ctx *pulumi.Context, args GetMediaWorkflowJobsOutputArgs, opts ...pulumi.InvokeOption) GetMediaWorkflowJobsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetMediaWorkflowJobsResult, error) {
			args := v.(GetMediaWorkflowJobsArgs)
			r, err := GetMediaWorkflowJobs(ctx, &args, opts...)
			var s GetMediaWorkflowJobsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetMediaWorkflowJobsResultOutput)
}

// A collection of arguments for invoking getMediaWorkflowJobs.
type GetMediaWorkflowJobsOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// A filter to return only the resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput                `pulumi:"displayName"`
	Filters     GetMediaWorkflowJobsFilterArrayInput `pulumi:"filters"`
	// unique MediaWorkflowJob identifier
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Unique MediaWorkflow identifier.
	MediaWorkflowId pulumi.StringPtrInput `pulumi:"mediaWorkflowId"`
	// A filter to return only the resources with lifecycleState matching the given lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetMediaWorkflowJobsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowJobsArgs)(nil)).Elem()
}

// A collection of values returned by getMediaWorkflowJobs.
type GetMediaWorkflowJobsResultOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowJobsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowJobsResult)(nil)).Elem()
}

func (o GetMediaWorkflowJobsResultOutput) ToGetMediaWorkflowJobsResultOutput() GetMediaWorkflowJobsResultOutput {
	return o
}

func (o GetMediaWorkflowJobsResultOutput) ToGetMediaWorkflowJobsResultOutputWithContext(ctx context.Context) GetMediaWorkflowJobsResultOutput {
	return o
}

// The compartment ID of the lock.
func (o GetMediaWorkflowJobsResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// Name of the Media Workflow Job. Does not have to be unique. Avoid entering confidential information.
func (o GetMediaWorkflowJobsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetMediaWorkflowJobsResultOutput) Filters() GetMediaWorkflowJobsFilterArrayOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsResult) []GetMediaWorkflowJobsFilter { return v.Filters }).(GetMediaWorkflowJobsFilterArrayOutput)
}

// The ID associated with the job output.
func (o GetMediaWorkflowJobsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The workflow to execute.
func (o GetMediaWorkflowJobsResultOutput) MediaWorkflowId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsResult) *string { return v.MediaWorkflowId }).(pulumi.StringPtrOutput)
}

// The list of media_workflow_job_collection.
func (o GetMediaWorkflowJobsResultOutput) MediaWorkflowJobCollections() GetMediaWorkflowJobsMediaWorkflowJobCollectionArrayOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsResult) []GetMediaWorkflowJobsMediaWorkflowJobCollection {
		return v.MediaWorkflowJobCollections
	}).(GetMediaWorkflowJobsMediaWorkflowJobCollectionArrayOutput)
}

// The current state of the MediaWorkflowJob task.
func (o GetMediaWorkflowJobsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMediaWorkflowJobsResultOutput{})
}
