// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mediaservices

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Media Workflow Task Declaration resource in Oracle Cloud Infrastructure Media Services service.
//
// Returns a list of MediaWorkflowTaskDeclarations.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/MediaServices"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := MediaServices.GetMediaWorkflowTaskDeclaration(ctx, &mediaservices.GetMediaWorkflowTaskDeclarationArgs{
//				CompartmentId: pulumi.StringRef(compartmentId),
//				IsCurrent:     pulumi.BoolRef(mediaWorkflowTaskDeclarationIsCurrent),
//				Name:          pulumi.StringRef(mediaWorkflowTaskDeclarationName),
//				Version:       pulumi.IntRef(mediaWorkflowTaskDeclarationVersion),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetMediaWorkflowTaskDeclaration(ctx *pulumi.Context, args *GetMediaWorkflowTaskDeclarationArgs, opts ...pulumi.InvokeOption) (*GetMediaWorkflowTaskDeclarationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetMediaWorkflowTaskDeclarationResult
	err := ctx.Invoke("oci:MediaServices/getMediaWorkflowTaskDeclaration:getMediaWorkflowTaskDeclaration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMediaWorkflowTaskDeclaration.
type GetMediaWorkflowTaskDeclarationArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId *string `pulumi:"compartmentId"`
	// A filter to only select the newest version for each MediaWorkflowTaskDeclaration name.
	IsCurrent *bool `pulumi:"isCurrent"`
	// A filter to return only the resources with their system defined, unique name matching the given name.
	Name *string `pulumi:"name"`
	// A filter to select MediaWorkflowTaskDeclaration by version.
	Version *int `pulumi:"version"`
}

// A collection of values returned by getMediaWorkflowTaskDeclaration.
type GetMediaWorkflowTaskDeclarationResult struct {
	CompartmentId *string `pulumi:"compartmentId"`
	// The provider-assigned unique ID for this managed resource.
	Id        string `pulumi:"id"`
	IsCurrent *bool  `pulumi:"isCurrent"`
	// List of MediaWorkflowTaskDeclaration objects.
	Items []GetMediaWorkflowTaskDeclarationItem `pulumi:"items"`
	// MediaWorkflowTaskDeclaration identifier. The name and version should be unique among MediaWorkflowTaskDeclarations.
	Name *string `pulumi:"name"`
	// The version of MediaWorkflowTaskDeclaration, incremented whenever the team implementing the task processor modifies the JSON schema of this declaration's definitions, parameters or list of required parameters.
	Version *int `pulumi:"version"`
}

func GetMediaWorkflowTaskDeclarationOutput(ctx *pulumi.Context, args GetMediaWorkflowTaskDeclarationOutputArgs, opts ...pulumi.InvokeOption) GetMediaWorkflowTaskDeclarationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetMediaWorkflowTaskDeclarationResult, error) {
			args := v.(GetMediaWorkflowTaskDeclarationArgs)
			r, err := GetMediaWorkflowTaskDeclaration(ctx, &args, opts...)
			var s GetMediaWorkflowTaskDeclarationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetMediaWorkflowTaskDeclarationResultOutput)
}

// A collection of arguments for invoking getMediaWorkflowTaskDeclaration.
type GetMediaWorkflowTaskDeclarationOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// A filter to only select the newest version for each MediaWorkflowTaskDeclaration name.
	IsCurrent pulumi.BoolPtrInput `pulumi:"isCurrent"`
	// A filter to return only the resources with their system defined, unique name matching the given name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A filter to select MediaWorkflowTaskDeclaration by version.
	Version pulumi.IntPtrInput `pulumi:"version"`
}

func (GetMediaWorkflowTaskDeclarationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowTaskDeclarationArgs)(nil)).Elem()
}

// A collection of values returned by getMediaWorkflowTaskDeclaration.
type GetMediaWorkflowTaskDeclarationResultOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowTaskDeclarationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowTaskDeclarationResult)(nil)).Elem()
}

func (o GetMediaWorkflowTaskDeclarationResultOutput) ToGetMediaWorkflowTaskDeclarationResultOutput() GetMediaWorkflowTaskDeclarationResultOutput {
	return o
}

func (o GetMediaWorkflowTaskDeclarationResultOutput) ToGetMediaWorkflowTaskDeclarationResultOutputWithContext(ctx context.Context) GetMediaWorkflowTaskDeclarationResultOutput {
	return o
}

func (o GetMediaWorkflowTaskDeclarationResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMediaWorkflowTaskDeclarationResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetMediaWorkflowTaskDeclarationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowTaskDeclarationResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetMediaWorkflowTaskDeclarationResultOutput) IsCurrent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetMediaWorkflowTaskDeclarationResult) *bool { return v.IsCurrent }).(pulumi.BoolPtrOutput)
}

// List of MediaWorkflowTaskDeclaration objects.
func (o GetMediaWorkflowTaskDeclarationResultOutput) Items() GetMediaWorkflowTaskDeclarationItemArrayOutput {
	return o.ApplyT(func(v GetMediaWorkflowTaskDeclarationResult) []GetMediaWorkflowTaskDeclarationItem { return v.Items }).(GetMediaWorkflowTaskDeclarationItemArrayOutput)
}

// MediaWorkflowTaskDeclaration identifier. The name and version should be unique among MediaWorkflowTaskDeclarations.
func (o GetMediaWorkflowTaskDeclarationResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMediaWorkflowTaskDeclarationResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The version of MediaWorkflowTaskDeclaration, incremented whenever the team implementing the task processor modifies the JSON schema of this declaration's definitions, parameters or list of required parameters.
func (o GetMediaWorkflowTaskDeclarationResultOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMediaWorkflowTaskDeclarationResult) *int { return v.Version }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMediaWorkflowTaskDeclarationResultOutput{})
}
