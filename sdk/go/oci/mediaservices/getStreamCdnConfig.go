// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mediaservices

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides details about a specific Stream Cdn Config resource in Oracle Cloud Infrastructure Media Services service.
//
// Gets a StreamCdnConfig by identifier.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/MediaServices"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := MediaServices.GetStreamCdnConfig(ctx, &mediaservices.GetStreamCdnConfigArgs{
//				StreamCdnConfigId: oci_media_services_stream_cdn_config.Test_stream_cdn_config.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupStreamCdnConfig(ctx *pulumi.Context, args *LookupStreamCdnConfigArgs, opts ...pulumi.InvokeOption) (*LookupStreamCdnConfigResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupStreamCdnConfigResult
	err := ctx.Invoke("oci:MediaServices/getStreamCdnConfig:getStreamCdnConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getStreamCdnConfig.
type LookupStreamCdnConfigArgs struct {
	// Unique StreamCdnConfig identifier.
	StreamCdnConfigId string `pulumi:"streamCdnConfigId"`
}

// A collection of values returned by getStreamCdnConfig.
type LookupStreamCdnConfigResult struct {
	// Compartment Identifier.
	CompartmentId string `pulumi:"compartmentId"`
	// Base fields of the StreamCdnConfig configuration object.
	Configs []GetStreamCdnConfigConfig `pulumi:"configs"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The CDN Configuration identifier or display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// Distribution Channel Identifier.
	DistributionChannelId string `pulumi:"distributionChannelId"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Unique identifier that is immutable on creation.
	Id string `pulumi:"id"`
	// Whether publishing to CDN is enabled.
	IsEnabled bool `pulumi:"isEnabled"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecyleDetails string `pulumi:"lifecyleDetails"`
	// The current state of the CDN Configuration.
	State             string `pulumi:"state"`
	StreamCdnConfigId string `pulumi:"streamCdnConfigId"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time when the CDN Config was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time when the CDN Config was updated. An RFC3339 formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupStreamCdnConfigOutput(ctx *pulumi.Context, args LookupStreamCdnConfigOutputArgs, opts ...pulumi.InvokeOption) LookupStreamCdnConfigResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupStreamCdnConfigResult, error) {
			args := v.(LookupStreamCdnConfigArgs)
			r, err := LookupStreamCdnConfig(ctx, &args, opts...)
			var s LookupStreamCdnConfigResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupStreamCdnConfigResultOutput)
}

// A collection of arguments for invoking getStreamCdnConfig.
type LookupStreamCdnConfigOutputArgs struct {
	// Unique StreamCdnConfig identifier.
	StreamCdnConfigId pulumi.StringInput `pulumi:"streamCdnConfigId"`
}

func (LookupStreamCdnConfigOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStreamCdnConfigArgs)(nil)).Elem()
}

// A collection of values returned by getStreamCdnConfig.
type LookupStreamCdnConfigResultOutput struct{ *pulumi.OutputState }

func (LookupStreamCdnConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStreamCdnConfigResult)(nil)).Elem()
}

func (o LookupStreamCdnConfigResultOutput) ToLookupStreamCdnConfigResultOutput() LookupStreamCdnConfigResultOutput {
	return o
}

func (o LookupStreamCdnConfigResultOutput) ToLookupStreamCdnConfigResultOutputWithContext(ctx context.Context) LookupStreamCdnConfigResultOutput {
	return o
}

func (o LookupStreamCdnConfigResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupStreamCdnConfigResult] {
	return pulumix.Output[LookupStreamCdnConfigResult]{
		OutputState: o.OutputState,
	}
}

// Compartment Identifier.
func (o LookupStreamCdnConfigResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamCdnConfigResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Base fields of the StreamCdnConfig configuration object.
func (o LookupStreamCdnConfigResultOutput) Configs() GetStreamCdnConfigConfigArrayOutput {
	return o.ApplyT(func(v LookupStreamCdnConfigResult) []GetStreamCdnConfigConfig { return v.Configs }).(GetStreamCdnConfigConfigArrayOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupStreamCdnConfigResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupStreamCdnConfigResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// The CDN Configuration identifier or display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
func (o LookupStreamCdnConfigResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamCdnConfigResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Distribution Channel Identifier.
func (o LookupStreamCdnConfigResultOutput) DistributionChannelId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamCdnConfigResult) string { return v.DistributionChannelId }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupStreamCdnConfigResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupStreamCdnConfigResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// Unique identifier that is immutable on creation.
func (o LookupStreamCdnConfigResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamCdnConfigResult) string { return v.Id }).(pulumi.StringOutput)
}

// Whether publishing to CDN is enabled.
func (o LookupStreamCdnConfigResultOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupStreamCdnConfigResult) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o LookupStreamCdnConfigResultOutput) LifecyleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamCdnConfigResult) string { return v.LifecyleDetails }).(pulumi.StringOutput)
}

// The current state of the CDN Configuration.
func (o LookupStreamCdnConfigResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamCdnConfigResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupStreamCdnConfigResultOutput) StreamCdnConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamCdnConfigResult) string { return v.StreamCdnConfigId }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupStreamCdnConfigResultOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupStreamCdnConfigResult) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The time when the CDN Config was created. An RFC3339 formatted datetime string.
func (o LookupStreamCdnConfigResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamCdnConfigResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time when the CDN Config was updated. An RFC3339 formatted datetime string.
func (o LookupStreamCdnConfigResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamCdnConfigResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStreamCdnConfigResultOutput{})
}
