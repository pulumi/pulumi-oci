// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mediaservices

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Stream Cdn Configs in Oracle Cloud Infrastructure Media Services service.
//
// Lists the StreamCdnConfig.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/mediaservices"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := mediaservices.GetStreamCdnConfigs(ctx, &mediaservices.GetStreamCdnConfigsArgs{
//				DistributionChannelId: testChannel.Id,
//				DisplayName:           pulumi.StringRef(streamCdnConfigDisplayName),
//				Id:                    pulumi.StringRef(streamCdnConfigId),
//				State:                 pulumi.StringRef(streamCdnConfigState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetStreamCdnConfigs(ctx *pulumi.Context, args *GetStreamCdnConfigsArgs, opts ...pulumi.InvokeOption) (*GetStreamCdnConfigsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetStreamCdnConfigsResult
	err := ctx.Invoke("oci:MediaServices/getStreamCdnConfigs:getStreamCdnConfigs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getStreamCdnConfigs.
type GetStreamCdnConfigsArgs struct {
	// A filter to return only the resources that match the entire display name given.
	DisplayName *string `pulumi:"displayName"`
	// The Stream Distribution Channel identifier this CdnConfig belongs to.
	DistributionChannelId string                      `pulumi:"distributionChannelId"`
	Filters               []GetStreamCdnConfigsFilter `pulumi:"filters"`
	// Unique StreamCdnConfig identifier.
	Id *string `pulumi:"id"`
	// A filter to return only the resources with lifecycleState matching the given lifecycleState.
	State *string `pulumi:"state"`
}

// A collection of values returned by getStreamCdnConfigs.
type GetStreamCdnConfigsResult struct {
	// The CDN Configuration identifier or display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// Distribution Channel Identifier.
	DistributionChannelId string                      `pulumi:"distributionChannelId"`
	Filters               []GetStreamCdnConfigsFilter `pulumi:"filters"`
	// Unique identifier that is immutable on creation.
	Id *string `pulumi:"id"`
	// The current state of the CDN Configuration.
	State *string `pulumi:"state"`
	// The list of stream_cdn_config_collection.
	StreamCdnConfigCollections []GetStreamCdnConfigsStreamCdnConfigCollection `pulumi:"streamCdnConfigCollections"`
}

func GetStreamCdnConfigsOutput(ctx *pulumi.Context, args GetStreamCdnConfigsOutputArgs, opts ...pulumi.InvokeOption) GetStreamCdnConfigsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetStreamCdnConfigsResultOutput, error) {
			args := v.(GetStreamCdnConfigsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:MediaServices/getStreamCdnConfigs:getStreamCdnConfigs", args, GetStreamCdnConfigsResultOutput{}, options).(GetStreamCdnConfigsResultOutput), nil
		}).(GetStreamCdnConfigsResultOutput)
}

// A collection of arguments for invoking getStreamCdnConfigs.
type GetStreamCdnConfigsOutputArgs struct {
	// A filter to return only the resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The Stream Distribution Channel identifier this CdnConfig belongs to.
	DistributionChannelId pulumi.StringInput                  `pulumi:"distributionChannelId"`
	Filters               GetStreamCdnConfigsFilterArrayInput `pulumi:"filters"`
	// Unique StreamCdnConfig identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return only the resources with lifecycleState matching the given lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetStreamCdnConfigsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamCdnConfigsArgs)(nil)).Elem()
}

// A collection of values returned by getStreamCdnConfigs.
type GetStreamCdnConfigsResultOutput struct{ *pulumi.OutputState }

func (GetStreamCdnConfigsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamCdnConfigsResult)(nil)).Elem()
}

func (o GetStreamCdnConfigsResultOutput) ToGetStreamCdnConfigsResultOutput() GetStreamCdnConfigsResultOutput {
	return o
}

func (o GetStreamCdnConfigsResultOutput) ToGetStreamCdnConfigsResultOutputWithContext(ctx context.Context) GetStreamCdnConfigsResultOutput {
	return o
}

// The CDN Configuration identifier or display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
func (o GetStreamCdnConfigsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Distribution Channel Identifier.
func (o GetStreamCdnConfigsResultOutput) DistributionChannelId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsResult) string { return v.DistributionChannelId }).(pulumi.StringOutput)
}

func (o GetStreamCdnConfigsResultOutput) Filters() GetStreamCdnConfigsFilterArrayOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsResult) []GetStreamCdnConfigsFilter { return v.Filters }).(GetStreamCdnConfigsFilterArrayOutput)
}

// Unique identifier that is immutable on creation.
func (o GetStreamCdnConfigsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The current state of the CDN Configuration.
func (o GetStreamCdnConfigsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The list of stream_cdn_config_collection.
func (o GetStreamCdnConfigsResultOutput) StreamCdnConfigCollections() GetStreamCdnConfigsStreamCdnConfigCollectionArrayOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsResult) []GetStreamCdnConfigsStreamCdnConfigCollection {
		return v.StreamCdnConfigCollections
	}).(GetStreamCdnConfigsStreamCdnConfigCollectionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetStreamCdnConfigsResultOutput{})
}
