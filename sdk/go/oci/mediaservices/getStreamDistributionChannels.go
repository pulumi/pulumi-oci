// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mediaservices

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Stream Distribution Channels in Oracle Cloud Infrastructure Media Services service.
//
// Lists the Stream Distribution Channels.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/MediaServices"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := MediaServices.GetStreamDistributionChannels(ctx, &mediaservices.GetStreamDistributionChannelsArgs{
//				CompartmentId: pulumi.StringRef(compartmentId),
//				DisplayName:   pulumi.StringRef(streamDistributionChannelDisplayName),
//				Id:            pulumi.StringRef(streamDistributionChannelId),
//				State:         pulumi.StringRef(streamDistributionChannelState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetStreamDistributionChannels(ctx *pulumi.Context, args *GetStreamDistributionChannelsArgs, opts ...pulumi.InvokeOption) (*GetStreamDistributionChannelsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetStreamDistributionChannelsResult
	err := ctx.Invoke("oci:MediaServices/getStreamDistributionChannels:getStreamDistributionChannels", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getStreamDistributionChannels.
type GetStreamDistributionChannelsArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId *string `pulumi:"compartmentId"`
	// A filter to return only the resources that match the entire display name given.
	DisplayName *string                               `pulumi:"displayName"`
	Filters     []GetStreamDistributionChannelsFilter `pulumi:"filters"`
	// Unique Stream Distribution Channel identifier.
	Id *string `pulumi:"id"`
	// A filter to return only the resources with lifecycleState matching the given lifecycleState.
	State *string `pulumi:"state"`
}

// A collection of values returned by getStreamDistributionChannels.
type GetStreamDistributionChannelsResult struct {
	// The compartment ID of the lock.
	CompartmentId *string `pulumi:"compartmentId"`
	// Stream Distribution Channel display name. Avoid entering confidential information.
	DisplayName *string                               `pulumi:"displayName"`
	Filters     []GetStreamDistributionChannelsFilter `pulumi:"filters"`
	// Unique identifier that is immutable on creation.
	Id *string `pulumi:"id"`
	// The current state of the Stream Distribution Channel.
	State *string `pulumi:"state"`
	// The list of stream_distribution_channel_collection.
	StreamDistributionChannelCollections []GetStreamDistributionChannelsStreamDistributionChannelCollection `pulumi:"streamDistributionChannelCollections"`
}

func GetStreamDistributionChannelsOutput(ctx *pulumi.Context, args GetStreamDistributionChannelsOutputArgs, opts ...pulumi.InvokeOption) GetStreamDistributionChannelsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetStreamDistributionChannelsResultOutput, error) {
			args := v.(GetStreamDistributionChannelsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:MediaServices/getStreamDistributionChannels:getStreamDistributionChannels", args, GetStreamDistributionChannelsResultOutput{}, options).(GetStreamDistributionChannelsResultOutput), nil
		}).(GetStreamDistributionChannelsResultOutput)
}

// A collection of arguments for invoking getStreamDistributionChannels.
type GetStreamDistributionChannelsOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// A filter to return only the resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput                         `pulumi:"displayName"`
	Filters     GetStreamDistributionChannelsFilterArrayInput `pulumi:"filters"`
	// Unique Stream Distribution Channel identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return only the resources with lifecycleState matching the given lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetStreamDistributionChannelsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamDistributionChannelsArgs)(nil)).Elem()
}

// A collection of values returned by getStreamDistributionChannels.
type GetStreamDistributionChannelsResultOutput struct{ *pulumi.OutputState }

func (GetStreamDistributionChannelsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamDistributionChannelsResult)(nil)).Elem()
}

func (o GetStreamDistributionChannelsResultOutput) ToGetStreamDistributionChannelsResultOutput() GetStreamDistributionChannelsResultOutput {
	return o
}

func (o GetStreamDistributionChannelsResultOutput) ToGetStreamDistributionChannelsResultOutputWithContext(ctx context.Context) GetStreamDistributionChannelsResultOutput {
	return o
}

// The compartment ID of the lock.
func (o GetStreamDistributionChannelsResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStreamDistributionChannelsResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// Stream Distribution Channel display name. Avoid entering confidential information.
func (o GetStreamDistributionChannelsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStreamDistributionChannelsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetStreamDistributionChannelsResultOutput) Filters() GetStreamDistributionChannelsFilterArrayOutput {
	return o.ApplyT(func(v GetStreamDistributionChannelsResult) []GetStreamDistributionChannelsFilter { return v.Filters }).(GetStreamDistributionChannelsFilterArrayOutput)
}

// Unique identifier that is immutable on creation.
func (o GetStreamDistributionChannelsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStreamDistributionChannelsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The current state of the Stream Distribution Channel.
func (o GetStreamDistributionChannelsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStreamDistributionChannelsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The list of stream_distribution_channel_collection.
func (o GetStreamDistributionChannelsResultOutput) StreamDistributionChannelCollections() GetStreamDistributionChannelsStreamDistributionChannelCollectionArrayOutput {
	return o.ApplyT(func(v GetStreamDistributionChannelsResult) []GetStreamDistributionChannelsStreamDistributionChannelCollection {
		return v.StreamDistributionChannelCollections
	}).(GetStreamDistributionChannelsStreamDistributionChannelCollectionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetStreamDistributionChannelsResultOutput{})
}
