// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mediaservices

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific System Media Workflow resource in Oracle Cloud Infrastructure Media Services service.
//
// Lists the SystemMediaWorkflows that can be used to run a job by name or as a template to create a MediaWorkflow.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/MediaServices"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := MediaServices.GetSystemMediaWorkflow(ctx, &mediaservices.GetSystemMediaWorkflowArgs{
//				CompartmentId: pulumi.StringRef(compartmentId),
//				Name:          pulumi.StringRef(systemMediaWorkflowName),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSystemMediaWorkflow(ctx *pulumi.Context, args *GetSystemMediaWorkflowArgs, opts ...pulumi.InvokeOption) (*GetSystemMediaWorkflowResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSystemMediaWorkflowResult
	err := ctx.Invoke("oci:MediaServices/getSystemMediaWorkflow:getSystemMediaWorkflow", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSystemMediaWorkflow.
type GetSystemMediaWorkflowArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId *string `pulumi:"compartmentId"`
	// A filter to return only the resources with their system defined, unique name matching the given name.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getSystemMediaWorkflow.
type GetSystemMediaWorkflowResult struct {
	CompartmentId *string `pulumi:"compartmentId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// List of SytemMediaWorkflow items.
	Items []GetSystemMediaWorkflowItem `pulumi:"items"`
	// System provided unique identifier for this static media workflow.
	Name *string `pulumi:"name"`
}

func GetSystemMediaWorkflowOutput(ctx *pulumi.Context, args GetSystemMediaWorkflowOutputArgs, opts ...pulumi.InvokeOption) GetSystemMediaWorkflowResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSystemMediaWorkflowResultOutput, error) {
			args := v.(GetSystemMediaWorkflowArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetSystemMediaWorkflowResult
			secret, err := ctx.InvokePackageRaw("oci:MediaServices/getSystemMediaWorkflow:getSystemMediaWorkflow", args, &rv, "", opts...)
			if err != nil {
				return GetSystemMediaWorkflowResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetSystemMediaWorkflowResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetSystemMediaWorkflowResultOutput), nil
			}
			return output, nil
		}).(GetSystemMediaWorkflowResultOutput)
}

// A collection of arguments for invoking getSystemMediaWorkflow.
type GetSystemMediaWorkflowOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// A filter to return only the resources with their system defined, unique name matching the given name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GetSystemMediaWorkflowOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSystemMediaWorkflowArgs)(nil)).Elem()
}

// A collection of values returned by getSystemMediaWorkflow.
type GetSystemMediaWorkflowResultOutput struct{ *pulumi.OutputState }

func (GetSystemMediaWorkflowResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSystemMediaWorkflowResult)(nil)).Elem()
}

func (o GetSystemMediaWorkflowResultOutput) ToGetSystemMediaWorkflowResultOutput() GetSystemMediaWorkflowResultOutput {
	return o
}

func (o GetSystemMediaWorkflowResultOutput) ToGetSystemMediaWorkflowResultOutputWithContext(ctx context.Context) GetSystemMediaWorkflowResultOutput {
	return o
}

func (o GetSystemMediaWorkflowResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSystemMediaWorkflowResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSystemMediaWorkflowResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSystemMediaWorkflowResult) string { return v.Id }).(pulumi.StringOutput)
}

// List of SytemMediaWorkflow items.
func (o GetSystemMediaWorkflowResultOutput) Items() GetSystemMediaWorkflowItemArrayOutput {
	return o.ApplyT(func(v GetSystemMediaWorkflowResult) []GetSystemMediaWorkflowItem { return v.Items }).(GetSystemMediaWorkflowItemArrayOutput)
}

// System provided unique identifier for this static media workflow.
func (o GetSystemMediaWorkflowResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSystemMediaWorkflowResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSystemMediaWorkflowResultOutput{})
}
