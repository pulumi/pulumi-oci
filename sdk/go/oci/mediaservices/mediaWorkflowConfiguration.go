// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mediaservices

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Media Workflow Configuration resource in Oracle Cloud Infrastructure Media Services service.
//
// Creates a new MediaWorkflowConfiguration.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/MediaServices"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := MediaServices.NewMediaWorkflowConfiguration(ctx, "test_media_workflow_configuration", &MediaServices.MediaWorkflowConfigurationArgs{
//				CompartmentId: pulumi.Any(compartmentId),
//				DisplayName:   pulumi.Any(mediaWorkflowConfigurationDisplayName),
//				Parameters:    pulumi.Any(mediaWorkflowConfigurationParameters),
//				DefinedTags: pulumi.StringMap{
//					"foo-namespace.bar-key": pulumi.String("value"),
//				},
//				FreeformTags: pulumi.StringMap{
//					"bar-key": pulumi.String("value"),
//				},
//				Locks: mediaservices.MediaWorkflowConfigurationLockArray{
//					&mediaservices.MediaWorkflowConfigurationLockArgs{
//						CompartmentId:     pulumi.Any(compartmentId),
//						Type:              pulumi.Any(mediaWorkflowConfigurationLocksType),
//						Message:           pulumi.Any(mediaWorkflowConfigurationLocksMessage),
//						RelatedResourceId: pulumi.Any(testResource.Id),
//						TimeCreated:       pulumi.Any(mediaWorkflowConfigurationLocksTimeCreated),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// MediaWorkflowConfigurations can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:MediaServices/mediaWorkflowConfiguration:MediaWorkflowConfiguration test_media_workflow_configuration "id"
// ```
type MediaWorkflowConfiguration struct {
	pulumi.CustomResourceState

	// (Updatable) Compartment Identifier.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) MediaWorkflowConfiguration identifier. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags   pulumi.StringMapOutput `pulumi:"freeformTags"`
	IsLockOverride pulumi.BoolOutput      `pulumi:"isLockOverride"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecyleDetails pulumi.StringOutput `pulumi:"lifecyleDetails"`
	// Locks associated with this resource.
	Locks MediaWorkflowConfigurationLockArrayOutput `pulumi:"locks"`
	// (Updatable) Reuseable parameter values encoded as a JSON; the top and second level JSON elements are objects. Each key of the top level object refers to a task key that is unqiue to the workflow, each of the second level objects' keys refer to the name of a parameter that is unique to the task. taskKey > parameterName > parameterValue
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Parameters pulumi.StringOutput `pulumi:"parameters"`
	// The current state of the MediaWorkflowConfiguration.
	State pulumi.StringOutput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// The time when the the MediaWorkflowConfiguration was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time when the MediaWorkflowConfiguration was updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewMediaWorkflowConfiguration registers a new resource with the given unique name, arguments, and options.
func NewMediaWorkflowConfiguration(ctx *pulumi.Context,
	name string, args *MediaWorkflowConfigurationArgs, opts ...pulumi.ResourceOption) (*MediaWorkflowConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.Parameters == nil {
		return nil, errors.New("invalid value for required argument 'Parameters'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MediaWorkflowConfiguration
	err := ctx.RegisterResource("oci:MediaServices/mediaWorkflowConfiguration:MediaWorkflowConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMediaWorkflowConfiguration gets an existing MediaWorkflowConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMediaWorkflowConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MediaWorkflowConfigurationState, opts ...pulumi.ResourceOption) (*MediaWorkflowConfiguration, error) {
	var resource MediaWorkflowConfiguration
	err := ctx.ReadResource("oci:MediaServices/mediaWorkflowConfiguration:MediaWorkflowConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MediaWorkflowConfiguration resources.
type mediaWorkflowConfigurationState struct {
	// (Updatable) Compartment Identifier.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) MediaWorkflowConfiguration identifier. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags   map[string]string `pulumi:"freeformTags"`
	IsLockOverride *bool             `pulumi:"isLockOverride"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecyleDetails *string `pulumi:"lifecyleDetails"`
	// Locks associated with this resource.
	Locks []MediaWorkflowConfigurationLock `pulumi:"locks"`
	// (Updatable) Reuseable parameter values encoded as a JSON; the top and second level JSON elements are objects. Each key of the top level object refers to a task key that is unqiue to the workflow, each of the second level objects' keys refer to the name of a parameter that is unique to the task. taskKey > parameterName > parameterValue
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Parameters *string `pulumi:"parameters"`
	// The current state of the MediaWorkflowConfiguration.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time when the the MediaWorkflowConfiguration was created. An RFC3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time when the MediaWorkflowConfiguration was updated. An RFC3339 formatted datetime string.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type MediaWorkflowConfigurationState struct {
	// (Updatable) Compartment Identifier.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) MediaWorkflowConfiguration identifier. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags   pulumi.StringMapInput
	IsLockOverride pulumi.BoolPtrInput
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecyleDetails pulumi.StringPtrInput
	// Locks associated with this resource.
	Locks MediaWorkflowConfigurationLockArrayInput
	// (Updatable) Reuseable parameter values encoded as a JSON; the top and second level JSON elements are objects. Each key of the top level object refers to a task key that is unqiue to the workflow, each of the second level objects' keys refer to the name of a parameter that is unique to the task. taskKey > parameterName > parameterValue
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Parameters pulumi.StringPtrInput
	// The current state of the MediaWorkflowConfiguration.
	State pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput
	// The time when the the MediaWorkflowConfiguration was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput
	// The time when the MediaWorkflowConfiguration was updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringPtrInput
}

func (MediaWorkflowConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*mediaWorkflowConfigurationState)(nil)).Elem()
}

type mediaWorkflowConfigurationArgs struct {
	// (Updatable) Compartment Identifier.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) MediaWorkflowConfiguration identifier. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags   map[string]string `pulumi:"freeformTags"`
	IsLockOverride *bool             `pulumi:"isLockOverride"`
	// Locks associated with this resource.
	Locks []MediaWorkflowConfigurationLock `pulumi:"locks"`
	// (Updatable) Reuseable parameter values encoded as a JSON; the top and second level JSON elements are objects. Each key of the top level object refers to a task key that is unqiue to the workflow, each of the second level objects' keys refer to the name of a parameter that is unique to the task. taskKey > parameterName > parameterValue
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Parameters string `pulumi:"parameters"`
}

// The set of arguments for constructing a MediaWorkflowConfiguration resource.
type MediaWorkflowConfigurationArgs struct {
	// (Updatable) Compartment Identifier.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) MediaWorkflowConfiguration identifier. Avoid entering confidential information.
	DisplayName pulumi.StringInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags   pulumi.StringMapInput
	IsLockOverride pulumi.BoolPtrInput
	// Locks associated with this resource.
	Locks MediaWorkflowConfigurationLockArrayInput
	// (Updatable) Reuseable parameter values encoded as a JSON; the top and second level JSON elements are objects. Each key of the top level object refers to a task key that is unqiue to the workflow, each of the second level objects' keys refer to the name of a parameter that is unique to the task. taskKey > parameterName > parameterValue
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Parameters pulumi.StringInput
}

func (MediaWorkflowConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mediaWorkflowConfigurationArgs)(nil)).Elem()
}

type MediaWorkflowConfigurationInput interface {
	pulumi.Input

	ToMediaWorkflowConfigurationOutput() MediaWorkflowConfigurationOutput
	ToMediaWorkflowConfigurationOutputWithContext(ctx context.Context) MediaWorkflowConfigurationOutput
}

func (*MediaWorkflowConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**MediaWorkflowConfiguration)(nil)).Elem()
}

func (i *MediaWorkflowConfiguration) ToMediaWorkflowConfigurationOutput() MediaWorkflowConfigurationOutput {
	return i.ToMediaWorkflowConfigurationOutputWithContext(context.Background())
}

func (i *MediaWorkflowConfiguration) ToMediaWorkflowConfigurationOutputWithContext(ctx context.Context) MediaWorkflowConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaWorkflowConfigurationOutput)
}

// MediaWorkflowConfigurationArrayInput is an input type that accepts MediaWorkflowConfigurationArray and MediaWorkflowConfigurationArrayOutput values.
// You can construct a concrete instance of `MediaWorkflowConfigurationArrayInput` via:
//
//	MediaWorkflowConfigurationArray{ MediaWorkflowConfigurationArgs{...} }
type MediaWorkflowConfigurationArrayInput interface {
	pulumi.Input

	ToMediaWorkflowConfigurationArrayOutput() MediaWorkflowConfigurationArrayOutput
	ToMediaWorkflowConfigurationArrayOutputWithContext(context.Context) MediaWorkflowConfigurationArrayOutput
}

type MediaWorkflowConfigurationArray []MediaWorkflowConfigurationInput

func (MediaWorkflowConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MediaWorkflowConfiguration)(nil)).Elem()
}

func (i MediaWorkflowConfigurationArray) ToMediaWorkflowConfigurationArrayOutput() MediaWorkflowConfigurationArrayOutput {
	return i.ToMediaWorkflowConfigurationArrayOutputWithContext(context.Background())
}

func (i MediaWorkflowConfigurationArray) ToMediaWorkflowConfigurationArrayOutputWithContext(ctx context.Context) MediaWorkflowConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaWorkflowConfigurationArrayOutput)
}

// MediaWorkflowConfigurationMapInput is an input type that accepts MediaWorkflowConfigurationMap and MediaWorkflowConfigurationMapOutput values.
// You can construct a concrete instance of `MediaWorkflowConfigurationMapInput` via:
//
//	MediaWorkflowConfigurationMap{ "key": MediaWorkflowConfigurationArgs{...} }
type MediaWorkflowConfigurationMapInput interface {
	pulumi.Input

	ToMediaWorkflowConfigurationMapOutput() MediaWorkflowConfigurationMapOutput
	ToMediaWorkflowConfigurationMapOutputWithContext(context.Context) MediaWorkflowConfigurationMapOutput
}

type MediaWorkflowConfigurationMap map[string]MediaWorkflowConfigurationInput

func (MediaWorkflowConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MediaWorkflowConfiguration)(nil)).Elem()
}

func (i MediaWorkflowConfigurationMap) ToMediaWorkflowConfigurationMapOutput() MediaWorkflowConfigurationMapOutput {
	return i.ToMediaWorkflowConfigurationMapOutputWithContext(context.Background())
}

func (i MediaWorkflowConfigurationMap) ToMediaWorkflowConfigurationMapOutputWithContext(ctx context.Context) MediaWorkflowConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaWorkflowConfigurationMapOutput)
}

type MediaWorkflowConfigurationOutput struct{ *pulumi.OutputState }

func (MediaWorkflowConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MediaWorkflowConfiguration)(nil)).Elem()
}

func (o MediaWorkflowConfigurationOutput) ToMediaWorkflowConfigurationOutput() MediaWorkflowConfigurationOutput {
	return o
}

func (o MediaWorkflowConfigurationOutput) ToMediaWorkflowConfigurationOutputWithContext(ctx context.Context) MediaWorkflowConfigurationOutput {
	return o
}

// (Updatable) Compartment Identifier.
func (o MediaWorkflowConfigurationOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *MediaWorkflowConfiguration) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o MediaWorkflowConfigurationOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MediaWorkflowConfiguration) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) MediaWorkflowConfiguration identifier. Avoid entering confidential information.
func (o MediaWorkflowConfigurationOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *MediaWorkflowConfiguration) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o MediaWorkflowConfigurationOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MediaWorkflowConfiguration) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

func (o MediaWorkflowConfigurationOutput) IsLockOverride() pulumi.BoolOutput {
	return o.ApplyT(func(v *MediaWorkflowConfiguration) pulumi.BoolOutput { return v.IsLockOverride }).(pulumi.BoolOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o MediaWorkflowConfigurationOutput) LifecyleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *MediaWorkflowConfiguration) pulumi.StringOutput { return v.LifecyleDetails }).(pulumi.StringOutput)
}

// Locks associated with this resource.
func (o MediaWorkflowConfigurationOutput) Locks() MediaWorkflowConfigurationLockArrayOutput {
	return o.ApplyT(func(v *MediaWorkflowConfiguration) MediaWorkflowConfigurationLockArrayOutput { return v.Locks }).(MediaWorkflowConfigurationLockArrayOutput)
}

// (Updatable) Reuseable parameter values encoded as a JSON; the top and second level JSON elements are objects. Each key of the top level object refers to a task key that is unqiue to the workflow, each of the second level objects' keys refer to the name of a parameter that is unique to the task. taskKey > parameterName > parameterValue
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o MediaWorkflowConfigurationOutput) Parameters() pulumi.StringOutput {
	return o.ApplyT(func(v *MediaWorkflowConfiguration) pulumi.StringOutput { return v.Parameters }).(pulumi.StringOutput)
}

// The current state of the MediaWorkflowConfiguration.
func (o MediaWorkflowConfigurationOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *MediaWorkflowConfiguration) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o MediaWorkflowConfigurationOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MediaWorkflowConfiguration) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The time when the the MediaWorkflowConfiguration was created. An RFC3339 formatted datetime string.
func (o MediaWorkflowConfigurationOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *MediaWorkflowConfiguration) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time when the MediaWorkflowConfiguration was updated. An RFC3339 formatted datetime string.
func (o MediaWorkflowConfigurationOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *MediaWorkflowConfiguration) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type MediaWorkflowConfigurationArrayOutput struct{ *pulumi.OutputState }

func (MediaWorkflowConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MediaWorkflowConfiguration)(nil)).Elem()
}

func (o MediaWorkflowConfigurationArrayOutput) ToMediaWorkflowConfigurationArrayOutput() MediaWorkflowConfigurationArrayOutput {
	return o
}

func (o MediaWorkflowConfigurationArrayOutput) ToMediaWorkflowConfigurationArrayOutputWithContext(ctx context.Context) MediaWorkflowConfigurationArrayOutput {
	return o
}

func (o MediaWorkflowConfigurationArrayOutput) Index(i pulumi.IntInput) MediaWorkflowConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MediaWorkflowConfiguration {
		return vs[0].([]*MediaWorkflowConfiguration)[vs[1].(int)]
	}).(MediaWorkflowConfigurationOutput)
}

type MediaWorkflowConfigurationMapOutput struct{ *pulumi.OutputState }

func (MediaWorkflowConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MediaWorkflowConfiguration)(nil)).Elem()
}

func (o MediaWorkflowConfigurationMapOutput) ToMediaWorkflowConfigurationMapOutput() MediaWorkflowConfigurationMapOutput {
	return o
}

func (o MediaWorkflowConfigurationMapOutput) ToMediaWorkflowConfigurationMapOutputWithContext(ctx context.Context) MediaWorkflowConfigurationMapOutput {
	return o
}

func (o MediaWorkflowConfigurationMapOutput) MapIndex(k pulumi.StringInput) MediaWorkflowConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MediaWorkflowConfiguration {
		return vs[0].(map[string]*MediaWorkflowConfiguration)[vs[1].(string)]
	}).(MediaWorkflowConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MediaWorkflowConfigurationInput)(nil)).Elem(), &MediaWorkflowConfiguration{})
	pulumi.RegisterInputType(reflect.TypeOf((*MediaWorkflowConfigurationArrayInput)(nil)).Elem(), MediaWorkflowConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MediaWorkflowConfigurationMapInput)(nil)).Elem(), MediaWorkflowConfigurationMap{})
	pulumi.RegisterOutputType(MediaWorkflowConfigurationOutput{})
	pulumi.RegisterOutputType(MediaWorkflowConfigurationArrayOutput{})
	pulumi.RegisterOutputType(MediaWorkflowConfigurationMapOutput{})
}
