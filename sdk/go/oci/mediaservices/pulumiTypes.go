// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mediaservices

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type MediaAssetLock struct {
	// (Updatable) The compartment ID of the lock.
	CompartmentId string `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message *string `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId *string `pulumi:"relatedResourceId"`
	// When the lock was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// Type of the lock.
	Type string `pulumi:"type"`
}

// MediaAssetLockInput is an input type that accepts MediaAssetLockArgs and MediaAssetLockOutput values.
// You can construct a concrete instance of `MediaAssetLockInput` via:
//
//	MediaAssetLockArgs{...}
type MediaAssetLockInput interface {
	pulumi.Input

	ToMediaAssetLockOutput() MediaAssetLockOutput
	ToMediaAssetLockOutputWithContext(context.Context) MediaAssetLockOutput
}

type MediaAssetLockArgs struct {
	// (Updatable) The compartment ID of the lock.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId pulumi.StringPtrInput `pulumi:"relatedResourceId"`
	// When the lock was created.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// Type of the lock.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MediaAssetLockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MediaAssetLock)(nil)).Elem()
}

func (i MediaAssetLockArgs) ToMediaAssetLockOutput() MediaAssetLockOutput {
	return i.ToMediaAssetLockOutputWithContext(context.Background())
}

func (i MediaAssetLockArgs) ToMediaAssetLockOutputWithContext(ctx context.Context) MediaAssetLockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaAssetLockOutput)
}

// MediaAssetLockArrayInput is an input type that accepts MediaAssetLockArray and MediaAssetLockArrayOutput values.
// You can construct a concrete instance of `MediaAssetLockArrayInput` via:
//
//	MediaAssetLockArray{ MediaAssetLockArgs{...} }
type MediaAssetLockArrayInput interface {
	pulumi.Input

	ToMediaAssetLockArrayOutput() MediaAssetLockArrayOutput
	ToMediaAssetLockArrayOutputWithContext(context.Context) MediaAssetLockArrayOutput
}

type MediaAssetLockArray []MediaAssetLockInput

func (MediaAssetLockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MediaAssetLock)(nil)).Elem()
}

func (i MediaAssetLockArray) ToMediaAssetLockArrayOutput() MediaAssetLockArrayOutput {
	return i.ToMediaAssetLockArrayOutputWithContext(context.Background())
}

func (i MediaAssetLockArray) ToMediaAssetLockArrayOutputWithContext(ctx context.Context) MediaAssetLockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaAssetLockArrayOutput)
}

type MediaAssetLockOutput struct{ *pulumi.OutputState }

func (MediaAssetLockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MediaAssetLock)(nil)).Elem()
}

func (o MediaAssetLockOutput) ToMediaAssetLockOutput() MediaAssetLockOutput {
	return o
}

func (o MediaAssetLockOutput) ToMediaAssetLockOutputWithContext(ctx context.Context) MediaAssetLockOutput {
	return o
}

// (Updatable) The compartment ID of the lock.
func (o MediaAssetLockOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v MediaAssetLock) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
func (o MediaAssetLockOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MediaAssetLock) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
func (o MediaAssetLockOutput) RelatedResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MediaAssetLock) *string { return v.RelatedResourceId }).(pulumi.StringPtrOutput)
}

// When the lock was created.
func (o MediaAssetLockOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MediaAssetLock) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// Type of the lock.
func (o MediaAssetLockOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MediaAssetLock) string { return v.Type }).(pulumi.StringOutput)
}

type MediaAssetLockArrayOutput struct{ *pulumi.OutputState }

func (MediaAssetLockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MediaAssetLock)(nil)).Elem()
}

func (o MediaAssetLockArrayOutput) ToMediaAssetLockArrayOutput() MediaAssetLockArrayOutput {
	return o
}

func (o MediaAssetLockArrayOutput) ToMediaAssetLockArrayOutputWithContext(ctx context.Context) MediaAssetLockArrayOutput {
	return o
}

func (o MediaAssetLockArrayOutput) Index(i pulumi.IntInput) MediaAssetLockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MediaAssetLock {
		return vs[0].([]MediaAssetLock)[vs[1].(int)]
	}).(MediaAssetLockOutput)
}

type MediaAssetMediaAssetTag struct {
	// (Updatable) Type of the tag.
	Type *string `pulumi:"type"`
	// (Updatable) Tag of the MediaAsset.
	Value string `pulumi:"value"`
}

// MediaAssetMediaAssetTagInput is an input type that accepts MediaAssetMediaAssetTagArgs and MediaAssetMediaAssetTagOutput values.
// You can construct a concrete instance of `MediaAssetMediaAssetTagInput` via:
//
//	MediaAssetMediaAssetTagArgs{...}
type MediaAssetMediaAssetTagInput interface {
	pulumi.Input

	ToMediaAssetMediaAssetTagOutput() MediaAssetMediaAssetTagOutput
	ToMediaAssetMediaAssetTagOutputWithContext(context.Context) MediaAssetMediaAssetTagOutput
}

type MediaAssetMediaAssetTagArgs struct {
	// (Updatable) Type of the tag.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// (Updatable) Tag of the MediaAsset.
	Value pulumi.StringInput `pulumi:"value"`
}

func (MediaAssetMediaAssetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MediaAssetMediaAssetTag)(nil)).Elem()
}

func (i MediaAssetMediaAssetTagArgs) ToMediaAssetMediaAssetTagOutput() MediaAssetMediaAssetTagOutput {
	return i.ToMediaAssetMediaAssetTagOutputWithContext(context.Background())
}

func (i MediaAssetMediaAssetTagArgs) ToMediaAssetMediaAssetTagOutputWithContext(ctx context.Context) MediaAssetMediaAssetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaAssetMediaAssetTagOutput)
}

// MediaAssetMediaAssetTagArrayInput is an input type that accepts MediaAssetMediaAssetTagArray and MediaAssetMediaAssetTagArrayOutput values.
// You can construct a concrete instance of `MediaAssetMediaAssetTagArrayInput` via:
//
//	MediaAssetMediaAssetTagArray{ MediaAssetMediaAssetTagArgs{...} }
type MediaAssetMediaAssetTagArrayInput interface {
	pulumi.Input

	ToMediaAssetMediaAssetTagArrayOutput() MediaAssetMediaAssetTagArrayOutput
	ToMediaAssetMediaAssetTagArrayOutputWithContext(context.Context) MediaAssetMediaAssetTagArrayOutput
}

type MediaAssetMediaAssetTagArray []MediaAssetMediaAssetTagInput

func (MediaAssetMediaAssetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MediaAssetMediaAssetTag)(nil)).Elem()
}

func (i MediaAssetMediaAssetTagArray) ToMediaAssetMediaAssetTagArrayOutput() MediaAssetMediaAssetTagArrayOutput {
	return i.ToMediaAssetMediaAssetTagArrayOutputWithContext(context.Background())
}

func (i MediaAssetMediaAssetTagArray) ToMediaAssetMediaAssetTagArrayOutputWithContext(ctx context.Context) MediaAssetMediaAssetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaAssetMediaAssetTagArrayOutput)
}

type MediaAssetMediaAssetTagOutput struct{ *pulumi.OutputState }

func (MediaAssetMediaAssetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MediaAssetMediaAssetTag)(nil)).Elem()
}

func (o MediaAssetMediaAssetTagOutput) ToMediaAssetMediaAssetTagOutput() MediaAssetMediaAssetTagOutput {
	return o
}

func (o MediaAssetMediaAssetTagOutput) ToMediaAssetMediaAssetTagOutputWithContext(ctx context.Context) MediaAssetMediaAssetTagOutput {
	return o
}

// (Updatable) Type of the tag.
func (o MediaAssetMediaAssetTagOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MediaAssetMediaAssetTag) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// (Updatable) Tag of the MediaAsset.
func (o MediaAssetMediaAssetTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v MediaAssetMediaAssetTag) string { return v.Value }).(pulumi.StringOutput)
}

type MediaAssetMediaAssetTagArrayOutput struct{ *pulumi.OutputState }

func (MediaAssetMediaAssetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MediaAssetMediaAssetTag)(nil)).Elem()
}

func (o MediaAssetMediaAssetTagArrayOutput) ToMediaAssetMediaAssetTagArrayOutput() MediaAssetMediaAssetTagArrayOutput {
	return o
}

func (o MediaAssetMediaAssetTagArrayOutput) ToMediaAssetMediaAssetTagArrayOutputWithContext(ctx context.Context) MediaAssetMediaAssetTagArrayOutput {
	return o
}

func (o MediaAssetMediaAssetTagArrayOutput) Index(i pulumi.IntInput) MediaAssetMediaAssetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MediaAssetMediaAssetTag {
		return vs[0].([]MediaAssetMediaAssetTag)[vs[1].(int)]
	}).(MediaAssetMediaAssetTagOutput)
}

type MediaAssetMetadata struct {
	// (Updatable) JSON string containing the technial metadata for the media asset.
	Metadata string `pulumi:"metadata"`
}

// MediaAssetMetadataInput is an input type that accepts MediaAssetMetadataArgs and MediaAssetMetadataOutput values.
// You can construct a concrete instance of `MediaAssetMetadataInput` via:
//
//	MediaAssetMetadataArgs{...}
type MediaAssetMetadataInput interface {
	pulumi.Input

	ToMediaAssetMetadataOutput() MediaAssetMetadataOutput
	ToMediaAssetMetadataOutputWithContext(context.Context) MediaAssetMetadataOutput
}

type MediaAssetMetadataArgs struct {
	// (Updatable) JSON string containing the technial metadata for the media asset.
	Metadata pulumi.StringInput `pulumi:"metadata"`
}

func (MediaAssetMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MediaAssetMetadata)(nil)).Elem()
}

func (i MediaAssetMetadataArgs) ToMediaAssetMetadataOutput() MediaAssetMetadataOutput {
	return i.ToMediaAssetMetadataOutputWithContext(context.Background())
}

func (i MediaAssetMetadataArgs) ToMediaAssetMetadataOutputWithContext(ctx context.Context) MediaAssetMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaAssetMetadataOutput)
}

// MediaAssetMetadataArrayInput is an input type that accepts MediaAssetMetadataArray and MediaAssetMetadataArrayOutput values.
// You can construct a concrete instance of `MediaAssetMetadataArrayInput` via:
//
//	MediaAssetMetadataArray{ MediaAssetMetadataArgs{...} }
type MediaAssetMetadataArrayInput interface {
	pulumi.Input

	ToMediaAssetMetadataArrayOutput() MediaAssetMetadataArrayOutput
	ToMediaAssetMetadataArrayOutputWithContext(context.Context) MediaAssetMetadataArrayOutput
}

type MediaAssetMetadataArray []MediaAssetMetadataInput

func (MediaAssetMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MediaAssetMetadata)(nil)).Elem()
}

func (i MediaAssetMetadataArray) ToMediaAssetMetadataArrayOutput() MediaAssetMetadataArrayOutput {
	return i.ToMediaAssetMetadataArrayOutputWithContext(context.Background())
}

func (i MediaAssetMetadataArray) ToMediaAssetMetadataArrayOutputWithContext(ctx context.Context) MediaAssetMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaAssetMetadataArrayOutput)
}

type MediaAssetMetadataOutput struct{ *pulumi.OutputState }

func (MediaAssetMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MediaAssetMetadata)(nil)).Elem()
}

func (o MediaAssetMetadataOutput) ToMediaAssetMetadataOutput() MediaAssetMetadataOutput {
	return o
}

func (o MediaAssetMetadataOutput) ToMediaAssetMetadataOutputWithContext(ctx context.Context) MediaAssetMetadataOutput {
	return o
}

// (Updatable) JSON string containing the technial metadata for the media asset.
func (o MediaAssetMetadataOutput) Metadata() pulumi.StringOutput {
	return o.ApplyT(func(v MediaAssetMetadata) string { return v.Metadata }).(pulumi.StringOutput)
}

type MediaAssetMetadataArrayOutput struct{ *pulumi.OutputState }

func (MediaAssetMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MediaAssetMetadata)(nil)).Elem()
}

func (o MediaAssetMetadataArrayOutput) ToMediaAssetMetadataArrayOutput() MediaAssetMetadataArrayOutput {
	return o
}

func (o MediaAssetMetadataArrayOutput) ToMediaAssetMetadataArrayOutputWithContext(ctx context.Context) MediaAssetMetadataArrayOutput {
	return o
}

func (o MediaAssetMetadataArrayOutput) Index(i pulumi.IntInput) MediaAssetMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MediaAssetMetadata {
		return vs[0].([]MediaAssetMetadata)[vs[1].(int)]
	}).(MediaAssetMetadataOutput)
}

type MediaWorkflowConfigurationLock struct {
	// (Updatable) The compartment ID of the lock.
	CompartmentId string `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message *string `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId *string `pulumi:"relatedResourceId"`
	// When the lock was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// Type of the lock.
	Type string `pulumi:"type"`
}

// MediaWorkflowConfigurationLockInput is an input type that accepts MediaWorkflowConfigurationLockArgs and MediaWorkflowConfigurationLockOutput values.
// You can construct a concrete instance of `MediaWorkflowConfigurationLockInput` via:
//
//	MediaWorkflowConfigurationLockArgs{...}
type MediaWorkflowConfigurationLockInput interface {
	pulumi.Input

	ToMediaWorkflowConfigurationLockOutput() MediaWorkflowConfigurationLockOutput
	ToMediaWorkflowConfigurationLockOutputWithContext(context.Context) MediaWorkflowConfigurationLockOutput
}

type MediaWorkflowConfigurationLockArgs struct {
	// (Updatable) The compartment ID of the lock.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId pulumi.StringPtrInput `pulumi:"relatedResourceId"`
	// When the lock was created.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// Type of the lock.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MediaWorkflowConfigurationLockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MediaWorkflowConfigurationLock)(nil)).Elem()
}

func (i MediaWorkflowConfigurationLockArgs) ToMediaWorkflowConfigurationLockOutput() MediaWorkflowConfigurationLockOutput {
	return i.ToMediaWorkflowConfigurationLockOutputWithContext(context.Background())
}

func (i MediaWorkflowConfigurationLockArgs) ToMediaWorkflowConfigurationLockOutputWithContext(ctx context.Context) MediaWorkflowConfigurationLockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaWorkflowConfigurationLockOutput)
}

// MediaWorkflowConfigurationLockArrayInput is an input type that accepts MediaWorkflowConfigurationLockArray and MediaWorkflowConfigurationLockArrayOutput values.
// You can construct a concrete instance of `MediaWorkflowConfigurationLockArrayInput` via:
//
//	MediaWorkflowConfigurationLockArray{ MediaWorkflowConfigurationLockArgs{...} }
type MediaWorkflowConfigurationLockArrayInput interface {
	pulumi.Input

	ToMediaWorkflowConfigurationLockArrayOutput() MediaWorkflowConfigurationLockArrayOutput
	ToMediaWorkflowConfigurationLockArrayOutputWithContext(context.Context) MediaWorkflowConfigurationLockArrayOutput
}

type MediaWorkflowConfigurationLockArray []MediaWorkflowConfigurationLockInput

func (MediaWorkflowConfigurationLockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MediaWorkflowConfigurationLock)(nil)).Elem()
}

func (i MediaWorkflowConfigurationLockArray) ToMediaWorkflowConfigurationLockArrayOutput() MediaWorkflowConfigurationLockArrayOutput {
	return i.ToMediaWorkflowConfigurationLockArrayOutputWithContext(context.Background())
}

func (i MediaWorkflowConfigurationLockArray) ToMediaWorkflowConfigurationLockArrayOutputWithContext(ctx context.Context) MediaWorkflowConfigurationLockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaWorkflowConfigurationLockArrayOutput)
}

type MediaWorkflowConfigurationLockOutput struct{ *pulumi.OutputState }

func (MediaWorkflowConfigurationLockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MediaWorkflowConfigurationLock)(nil)).Elem()
}

func (o MediaWorkflowConfigurationLockOutput) ToMediaWorkflowConfigurationLockOutput() MediaWorkflowConfigurationLockOutput {
	return o
}

func (o MediaWorkflowConfigurationLockOutput) ToMediaWorkflowConfigurationLockOutputWithContext(ctx context.Context) MediaWorkflowConfigurationLockOutput {
	return o
}

// (Updatable) The compartment ID of the lock.
func (o MediaWorkflowConfigurationLockOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v MediaWorkflowConfigurationLock) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
func (o MediaWorkflowConfigurationLockOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MediaWorkflowConfigurationLock) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
func (o MediaWorkflowConfigurationLockOutput) RelatedResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MediaWorkflowConfigurationLock) *string { return v.RelatedResourceId }).(pulumi.StringPtrOutput)
}

// When the lock was created.
func (o MediaWorkflowConfigurationLockOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MediaWorkflowConfigurationLock) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// Type of the lock.
func (o MediaWorkflowConfigurationLockOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MediaWorkflowConfigurationLock) string { return v.Type }).(pulumi.StringOutput)
}

type MediaWorkflowConfigurationLockArrayOutput struct{ *pulumi.OutputState }

func (MediaWorkflowConfigurationLockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MediaWorkflowConfigurationLock)(nil)).Elem()
}

func (o MediaWorkflowConfigurationLockArrayOutput) ToMediaWorkflowConfigurationLockArrayOutput() MediaWorkflowConfigurationLockArrayOutput {
	return o
}

func (o MediaWorkflowConfigurationLockArrayOutput) ToMediaWorkflowConfigurationLockArrayOutputWithContext(ctx context.Context) MediaWorkflowConfigurationLockArrayOutput {
	return o
}

func (o MediaWorkflowConfigurationLockArrayOutput) Index(i pulumi.IntInput) MediaWorkflowConfigurationLockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MediaWorkflowConfigurationLock {
		return vs[0].([]MediaWorkflowConfigurationLock)[vs[1].(int)]
	}).(MediaWorkflowConfigurationLockOutput)
}

type MediaWorkflowJobLock struct {
	// (Updatable) The compartment ID of the lock.
	CompartmentId string `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message *string `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId *string `pulumi:"relatedResourceId"`
	// When the lock was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// Type of the lock.
	Type string `pulumi:"type"`
}

// MediaWorkflowJobLockInput is an input type that accepts MediaWorkflowJobLockArgs and MediaWorkflowJobLockOutput values.
// You can construct a concrete instance of `MediaWorkflowJobLockInput` via:
//
//	MediaWorkflowJobLockArgs{...}
type MediaWorkflowJobLockInput interface {
	pulumi.Input

	ToMediaWorkflowJobLockOutput() MediaWorkflowJobLockOutput
	ToMediaWorkflowJobLockOutputWithContext(context.Context) MediaWorkflowJobLockOutput
}

type MediaWorkflowJobLockArgs struct {
	// (Updatable) The compartment ID of the lock.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId pulumi.StringPtrInput `pulumi:"relatedResourceId"`
	// When the lock was created.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// Type of the lock.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MediaWorkflowJobLockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MediaWorkflowJobLock)(nil)).Elem()
}

func (i MediaWorkflowJobLockArgs) ToMediaWorkflowJobLockOutput() MediaWorkflowJobLockOutput {
	return i.ToMediaWorkflowJobLockOutputWithContext(context.Background())
}

func (i MediaWorkflowJobLockArgs) ToMediaWorkflowJobLockOutputWithContext(ctx context.Context) MediaWorkflowJobLockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaWorkflowJobLockOutput)
}

// MediaWorkflowJobLockArrayInput is an input type that accepts MediaWorkflowJobLockArray and MediaWorkflowJobLockArrayOutput values.
// You can construct a concrete instance of `MediaWorkflowJobLockArrayInput` via:
//
//	MediaWorkflowJobLockArray{ MediaWorkflowJobLockArgs{...} }
type MediaWorkflowJobLockArrayInput interface {
	pulumi.Input

	ToMediaWorkflowJobLockArrayOutput() MediaWorkflowJobLockArrayOutput
	ToMediaWorkflowJobLockArrayOutputWithContext(context.Context) MediaWorkflowJobLockArrayOutput
}

type MediaWorkflowJobLockArray []MediaWorkflowJobLockInput

func (MediaWorkflowJobLockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MediaWorkflowJobLock)(nil)).Elem()
}

func (i MediaWorkflowJobLockArray) ToMediaWorkflowJobLockArrayOutput() MediaWorkflowJobLockArrayOutput {
	return i.ToMediaWorkflowJobLockArrayOutputWithContext(context.Background())
}

func (i MediaWorkflowJobLockArray) ToMediaWorkflowJobLockArrayOutputWithContext(ctx context.Context) MediaWorkflowJobLockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaWorkflowJobLockArrayOutput)
}

type MediaWorkflowJobLockOutput struct{ *pulumi.OutputState }

func (MediaWorkflowJobLockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MediaWorkflowJobLock)(nil)).Elem()
}

func (o MediaWorkflowJobLockOutput) ToMediaWorkflowJobLockOutput() MediaWorkflowJobLockOutput {
	return o
}

func (o MediaWorkflowJobLockOutput) ToMediaWorkflowJobLockOutputWithContext(ctx context.Context) MediaWorkflowJobLockOutput {
	return o
}

// (Updatable) The compartment ID of the lock.
func (o MediaWorkflowJobLockOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v MediaWorkflowJobLock) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
func (o MediaWorkflowJobLockOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MediaWorkflowJobLock) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
func (o MediaWorkflowJobLockOutput) RelatedResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MediaWorkflowJobLock) *string { return v.RelatedResourceId }).(pulumi.StringPtrOutput)
}

// When the lock was created.
func (o MediaWorkflowJobLockOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MediaWorkflowJobLock) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// Type of the lock.
func (o MediaWorkflowJobLockOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MediaWorkflowJobLock) string { return v.Type }).(pulumi.StringOutput)
}

type MediaWorkflowJobLockArrayOutput struct{ *pulumi.OutputState }

func (MediaWorkflowJobLockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MediaWorkflowJobLock)(nil)).Elem()
}

func (o MediaWorkflowJobLockArrayOutput) ToMediaWorkflowJobLockArrayOutput() MediaWorkflowJobLockArrayOutput {
	return o
}

func (o MediaWorkflowJobLockArrayOutput) ToMediaWorkflowJobLockArrayOutputWithContext(ctx context.Context) MediaWorkflowJobLockArrayOutput {
	return o
}

func (o MediaWorkflowJobLockArrayOutput) Index(i pulumi.IntInput) MediaWorkflowJobLockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MediaWorkflowJobLock {
		return vs[0].([]MediaWorkflowJobLock)[vs[1].(int)]
	}).(MediaWorkflowJobLockOutput)
}

type MediaWorkflowJobOutputType struct {
	// Type of job output.
	AssetType *string `pulumi:"assetType"`
	// The bucket name of the job output.
	Bucket *string `pulumi:"bucket"`
	// The ID associated with the job output.
	Id *string `pulumi:"id"`
	// The namespace name of the job output.
	Namespace *string `pulumi:"namespace"`
	// The object name of the job output.
	Object *string `pulumi:"object"`
}

// MediaWorkflowJobOutputTypeInput is an input type that accepts MediaWorkflowJobOutputTypeArgs and MediaWorkflowJobOutputTypeOutput values.
// You can construct a concrete instance of `MediaWorkflowJobOutputTypeInput` via:
//
//	MediaWorkflowJobOutputTypeArgs{...}
type MediaWorkflowJobOutputTypeInput interface {
	pulumi.Input

	ToMediaWorkflowJobOutputTypeOutput() MediaWorkflowJobOutputTypeOutput
	ToMediaWorkflowJobOutputTypeOutputWithContext(context.Context) MediaWorkflowJobOutputTypeOutput
}

type MediaWorkflowJobOutputTypeArgs struct {
	// Type of job output.
	AssetType pulumi.StringPtrInput `pulumi:"assetType"`
	// The bucket name of the job output.
	Bucket pulumi.StringPtrInput `pulumi:"bucket"`
	// The ID associated with the job output.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The namespace name of the job output.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The object name of the job output.
	Object pulumi.StringPtrInput `pulumi:"object"`
}

func (MediaWorkflowJobOutputTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MediaWorkflowJobOutputType)(nil)).Elem()
}

func (i MediaWorkflowJobOutputTypeArgs) ToMediaWorkflowJobOutputTypeOutput() MediaWorkflowJobOutputTypeOutput {
	return i.ToMediaWorkflowJobOutputTypeOutputWithContext(context.Background())
}

func (i MediaWorkflowJobOutputTypeArgs) ToMediaWorkflowJobOutputTypeOutputWithContext(ctx context.Context) MediaWorkflowJobOutputTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaWorkflowJobOutputTypeOutput)
}

// MediaWorkflowJobOutputTypeArrayInput is an input type that accepts MediaWorkflowJobOutputTypeArray and MediaWorkflowJobOutputTypeArrayOutput values.
// You can construct a concrete instance of `MediaWorkflowJobOutputTypeArrayInput` via:
//
//	MediaWorkflowJobOutputTypeArray{ MediaWorkflowJobOutputTypeArgs{...} }
type MediaWorkflowJobOutputTypeArrayInput interface {
	pulumi.Input

	ToMediaWorkflowJobOutputTypeArrayOutput() MediaWorkflowJobOutputTypeArrayOutput
	ToMediaWorkflowJobOutputTypeArrayOutputWithContext(context.Context) MediaWorkflowJobOutputTypeArrayOutput
}

type MediaWorkflowJobOutputTypeArray []MediaWorkflowJobOutputTypeInput

func (MediaWorkflowJobOutputTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MediaWorkflowJobOutputType)(nil)).Elem()
}

func (i MediaWorkflowJobOutputTypeArray) ToMediaWorkflowJobOutputTypeArrayOutput() MediaWorkflowJobOutputTypeArrayOutput {
	return i.ToMediaWorkflowJobOutputTypeArrayOutputWithContext(context.Background())
}

func (i MediaWorkflowJobOutputTypeArray) ToMediaWorkflowJobOutputTypeArrayOutputWithContext(ctx context.Context) MediaWorkflowJobOutputTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaWorkflowJobOutputTypeArrayOutput)
}

type MediaWorkflowJobOutputTypeOutput struct{ *pulumi.OutputState }

func (MediaWorkflowJobOutputTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MediaWorkflowJobOutputType)(nil)).Elem()
}

func (o MediaWorkflowJobOutputTypeOutput) ToMediaWorkflowJobOutputTypeOutput() MediaWorkflowJobOutputTypeOutput {
	return o
}

func (o MediaWorkflowJobOutputTypeOutput) ToMediaWorkflowJobOutputTypeOutputWithContext(ctx context.Context) MediaWorkflowJobOutputTypeOutput {
	return o
}

// Type of job output.
func (o MediaWorkflowJobOutputTypeOutput) AssetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MediaWorkflowJobOutputType) *string { return v.AssetType }).(pulumi.StringPtrOutput)
}

// The bucket name of the job output.
func (o MediaWorkflowJobOutputTypeOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MediaWorkflowJobOutputType) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

// The ID associated with the job output.
func (o MediaWorkflowJobOutputTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MediaWorkflowJobOutputType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The namespace name of the job output.
func (o MediaWorkflowJobOutputTypeOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MediaWorkflowJobOutputType) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The object name of the job output.
func (o MediaWorkflowJobOutputTypeOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MediaWorkflowJobOutputType) *string { return v.Object }).(pulumi.StringPtrOutput)
}

type MediaWorkflowJobOutputTypeArrayOutput struct{ *pulumi.OutputState }

func (MediaWorkflowJobOutputTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MediaWorkflowJobOutputType)(nil)).Elem()
}

func (o MediaWorkflowJobOutputTypeArrayOutput) ToMediaWorkflowJobOutputTypeArrayOutput() MediaWorkflowJobOutputTypeArrayOutput {
	return o
}

func (o MediaWorkflowJobOutputTypeArrayOutput) ToMediaWorkflowJobOutputTypeArrayOutputWithContext(ctx context.Context) MediaWorkflowJobOutputTypeArrayOutput {
	return o
}

func (o MediaWorkflowJobOutputTypeArrayOutput) Index(i pulumi.IntInput) MediaWorkflowJobOutputTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MediaWorkflowJobOutputType {
		return vs[0].([]MediaWorkflowJobOutputType)[vs[1].(int)]
	}).(MediaWorkflowJobOutputTypeOutput)
}

type MediaWorkflowJobTaskLifecycleState struct {
	// Unique key within a MediaWorkflowJob for the task.
	Key *string `pulumi:"key"`
	// The lifecycle details of MediaWorkflowJob task.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The current state of the MediaWorkflowJob task.
	State *string `pulumi:"state"`
}

// MediaWorkflowJobTaskLifecycleStateInput is an input type that accepts MediaWorkflowJobTaskLifecycleStateArgs and MediaWorkflowJobTaskLifecycleStateOutput values.
// You can construct a concrete instance of `MediaWorkflowJobTaskLifecycleStateInput` via:
//
//	MediaWorkflowJobTaskLifecycleStateArgs{...}
type MediaWorkflowJobTaskLifecycleStateInput interface {
	pulumi.Input

	ToMediaWorkflowJobTaskLifecycleStateOutput() MediaWorkflowJobTaskLifecycleStateOutput
	ToMediaWorkflowJobTaskLifecycleStateOutputWithContext(context.Context) MediaWorkflowJobTaskLifecycleStateOutput
}

type MediaWorkflowJobTaskLifecycleStateArgs struct {
	// Unique key within a MediaWorkflowJob for the task.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The lifecycle details of MediaWorkflowJob task.
	LifecycleDetails pulumi.StringPtrInput `pulumi:"lifecycleDetails"`
	// The current state of the MediaWorkflowJob task.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (MediaWorkflowJobTaskLifecycleStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MediaWorkflowJobTaskLifecycleState)(nil)).Elem()
}

func (i MediaWorkflowJobTaskLifecycleStateArgs) ToMediaWorkflowJobTaskLifecycleStateOutput() MediaWorkflowJobTaskLifecycleStateOutput {
	return i.ToMediaWorkflowJobTaskLifecycleStateOutputWithContext(context.Background())
}

func (i MediaWorkflowJobTaskLifecycleStateArgs) ToMediaWorkflowJobTaskLifecycleStateOutputWithContext(ctx context.Context) MediaWorkflowJobTaskLifecycleStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaWorkflowJobTaskLifecycleStateOutput)
}

// MediaWorkflowJobTaskLifecycleStateArrayInput is an input type that accepts MediaWorkflowJobTaskLifecycleStateArray and MediaWorkflowJobTaskLifecycleStateArrayOutput values.
// You can construct a concrete instance of `MediaWorkflowJobTaskLifecycleStateArrayInput` via:
//
//	MediaWorkflowJobTaskLifecycleStateArray{ MediaWorkflowJobTaskLifecycleStateArgs{...} }
type MediaWorkflowJobTaskLifecycleStateArrayInput interface {
	pulumi.Input

	ToMediaWorkflowJobTaskLifecycleStateArrayOutput() MediaWorkflowJobTaskLifecycleStateArrayOutput
	ToMediaWorkflowJobTaskLifecycleStateArrayOutputWithContext(context.Context) MediaWorkflowJobTaskLifecycleStateArrayOutput
}

type MediaWorkflowJobTaskLifecycleStateArray []MediaWorkflowJobTaskLifecycleStateInput

func (MediaWorkflowJobTaskLifecycleStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MediaWorkflowJobTaskLifecycleState)(nil)).Elem()
}

func (i MediaWorkflowJobTaskLifecycleStateArray) ToMediaWorkflowJobTaskLifecycleStateArrayOutput() MediaWorkflowJobTaskLifecycleStateArrayOutput {
	return i.ToMediaWorkflowJobTaskLifecycleStateArrayOutputWithContext(context.Background())
}

func (i MediaWorkflowJobTaskLifecycleStateArray) ToMediaWorkflowJobTaskLifecycleStateArrayOutputWithContext(ctx context.Context) MediaWorkflowJobTaskLifecycleStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaWorkflowJobTaskLifecycleStateArrayOutput)
}

type MediaWorkflowJobTaskLifecycleStateOutput struct{ *pulumi.OutputState }

func (MediaWorkflowJobTaskLifecycleStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MediaWorkflowJobTaskLifecycleState)(nil)).Elem()
}

func (o MediaWorkflowJobTaskLifecycleStateOutput) ToMediaWorkflowJobTaskLifecycleStateOutput() MediaWorkflowJobTaskLifecycleStateOutput {
	return o
}

func (o MediaWorkflowJobTaskLifecycleStateOutput) ToMediaWorkflowJobTaskLifecycleStateOutputWithContext(ctx context.Context) MediaWorkflowJobTaskLifecycleStateOutput {
	return o
}

// Unique key within a MediaWorkflowJob for the task.
func (o MediaWorkflowJobTaskLifecycleStateOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MediaWorkflowJobTaskLifecycleState) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The lifecycle details of MediaWorkflowJob task.
func (o MediaWorkflowJobTaskLifecycleStateOutput) LifecycleDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MediaWorkflowJobTaskLifecycleState) *string { return v.LifecycleDetails }).(pulumi.StringPtrOutput)
}

// The current state of the MediaWorkflowJob task.
func (o MediaWorkflowJobTaskLifecycleStateOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MediaWorkflowJobTaskLifecycleState) *string { return v.State }).(pulumi.StringPtrOutput)
}

type MediaWorkflowJobTaskLifecycleStateArrayOutput struct{ *pulumi.OutputState }

func (MediaWorkflowJobTaskLifecycleStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MediaWorkflowJobTaskLifecycleState)(nil)).Elem()
}

func (o MediaWorkflowJobTaskLifecycleStateArrayOutput) ToMediaWorkflowJobTaskLifecycleStateArrayOutput() MediaWorkflowJobTaskLifecycleStateArrayOutput {
	return o
}

func (o MediaWorkflowJobTaskLifecycleStateArrayOutput) ToMediaWorkflowJobTaskLifecycleStateArrayOutputWithContext(ctx context.Context) MediaWorkflowJobTaskLifecycleStateArrayOutput {
	return o
}

func (o MediaWorkflowJobTaskLifecycleStateArrayOutput) Index(i pulumi.IntInput) MediaWorkflowJobTaskLifecycleStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MediaWorkflowJobTaskLifecycleState {
		return vs[0].([]MediaWorkflowJobTaskLifecycleState)[vs[1].(int)]
	}).(MediaWorkflowJobTaskLifecycleStateOutput)
}

type MediaWorkflowLock struct {
	// (Updatable) The compartment ID of the lock.
	CompartmentId string `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message *string `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId *string `pulumi:"relatedResourceId"`
	// When the lock was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// Type of the lock.
	Type string `pulumi:"type"`
}

// MediaWorkflowLockInput is an input type that accepts MediaWorkflowLockArgs and MediaWorkflowLockOutput values.
// You can construct a concrete instance of `MediaWorkflowLockInput` via:
//
//	MediaWorkflowLockArgs{...}
type MediaWorkflowLockInput interface {
	pulumi.Input

	ToMediaWorkflowLockOutput() MediaWorkflowLockOutput
	ToMediaWorkflowLockOutputWithContext(context.Context) MediaWorkflowLockOutput
}

type MediaWorkflowLockArgs struct {
	// (Updatable) The compartment ID of the lock.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId pulumi.StringPtrInput `pulumi:"relatedResourceId"`
	// When the lock was created.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// Type of the lock.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MediaWorkflowLockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MediaWorkflowLock)(nil)).Elem()
}

func (i MediaWorkflowLockArgs) ToMediaWorkflowLockOutput() MediaWorkflowLockOutput {
	return i.ToMediaWorkflowLockOutputWithContext(context.Background())
}

func (i MediaWorkflowLockArgs) ToMediaWorkflowLockOutputWithContext(ctx context.Context) MediaWorkflowLockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaWorkflowLockOutput)
}

// MediaWorkflowLockArrayInput is an input type that accepts MediaWorkflowLockArray and MediaWorkflowLockArrayOutput values.
// You can construct a concrete instance of `MediaWorkflowLockArrayInput` via:
//
//	MediaWorkflowLockArray{ MediaWorkflowLockArgs{...} }
type MediaWorkflowLockArrayInput interface {
	pulumi.Input

	ToMediaWorkflowLockArrayOutput() MediaWorkflowLockArrayOutput
	ToMediaWorkflowLockArrayOutputWithContext(context.Context) MediaWorkflowLockArrayOutput
}

type MediaWorkflowLockArray []MediaWorkflowLockInput

func (MediaWorkflowLockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MediaWorkflowLock)(nil)).Elem()
}

func (i MediaWorkflowLockArray) ToMediaWorkflowLockArrayOutput() MediaWorkflowLockArrayOutput {
	return i.ToMediaWorkflowLockArrayOutputWithContext(context.Background())
}

func (i MediaWorkflowLockArray) ToMediaWorkflowLockArrayOutputWithContext(ctx context.Context) MediaWorkflowLockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaWorkflowLockArrayOutput)
}

type MediaWorkflowLockOutput struct{ *pulumi.OutputState }

func (MediaWorkflowLockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MediaWorkflowLock)(nil)).Elem()
}

func (o MediaWorkflowLockOutput) ToMediaWorkflowLockOutput() MediaWorkflowLockOutput {
	return o
}

func (o MediaWorkflowLockOutput) ToMediaWorkflowLockOutputWithContext(ctx context.Context) MediaWorkflowLockOutput {
	return o
}

// (Updatable) The compartment ID of the lock.
func (o MediaWorkflowLockOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v MediaWorkflowLock) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
func (o MediaWorkflowLockOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MediaWorkflowLock) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
func (o MediaWorkflowLockOutput) RelatedResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MediaWorkflowLock) *string { return v.RelatedResourceId }).(pulumi.StringPtrOutput)
}

// When the lock was created.
func (o MediaWorkflowLockOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MediaWorkflowLock) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// Type of the lock.
func (o MediaWorkflowLockOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MediaWorkflowLock) string { return v.Type }).(pulumi.StringOutput)
}

type MediaWorkflowLockArrayOutput struct{ *pulumi.OutputState }

func (MediaWorkflowLockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MediaWorkflowLock)(nil)).Elem()
}

func (o MediaWorkflowLockArrayOutput) ToMediaWorkflowLockArrayOutput() MediaWorkflowLockArrayOutput {
	return o
}

func (o MediaWorkflowLockArrayOutput) ToMediaWorkflowLockArrayOutputWithContext(ctx context.Context) MediaWorkflowLockArrayOutput {
	return o
}

func (o MediaWorkflowLockArrayOutput) Index(i pulumi.IntInput) MediaWorkflowLockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MediaWorkflowLock {
		return vs[0].([]MediaWorkflowLock)[vs[1].(int)]
	}).(MediaWorkflowLockOutput)
}

type MediaWorkflowTask struct {
	// (Updatable) Allows this task to be conditionally enabled.  If no value or a blank value is given, the task is unconditionally enbled.  Otherwise the given string specifies a parameter of the job created for this task's workflow using the JSON pointer syntax. The JSON pointer is validated when a job is created from the workflow of this task.
	EnableParameterReference *string `pulumi:"enableParameterReference"`
	// (Updatable) Used in conjunction with enableParameterReference to conditionally enable a task.  When a job is created from the workflow of this task, the task will only be enabled if the value of the parameter specified by enableParameterReference is equal to the value of this property. This property must be prenset if and only if a enableParameterReference is given. The value is a JSON node.
	EnableWhenReferencedParameterEquals map[string]string `pulumi:"enableWhenReferencedParameterEquals"`
	// (Updatable) A unique identifier for this task within its workflow. Keys are used to reference a task within workflows and MediaWorkflowJobs. Tasks are referenced as prerequisites and to track output and state.
	Key string `pulumi:"key"`
	// (Updatable) Data specifiying how this task is to be run. The data is a JSON object that must conform to the JSON Schema specified by the parameters of the MediaWorkflowTaskDeclaration this task references. The parameters may contain values or references to other parameters.
	Parameters string `pulumi:"parameters"`
	// (Updatable) Keys to the other tasks in this workflow that must be completed before execution of this task can begin.
	Prerequisites []string `pulumi:"prerequisites"`
	// (Updatable) The type of process to run at this task. Refers to the name of a MediaWorkflowTaskDeclaration.
	Type string `pulumi:"type"`
	// (Updatable) The version of the MediaWorkflowTaskDeclaration.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Version string `pulumi:"version"`
}

// MediaWorkflowTaskInput is an input type that accepts MediaWorkflowTaskArgs and MediaWorkflowTaskOutput values.
// You can construct a concrete instance of `MediaWorkflowTaskInput` via:
//
//	MediaWorkflowTaskArgs{...}
type MediaWorkflowTaskInput interface {
	pulumi.Input

	ToMediaWorkflowTaskOutput() MediaWorkflowTaskOutput
	ToMediaWorkflowTaskOutputWithContext(context.Context) MediaWorkflowTaskOutput
}

type MediaWorkflowTaskArgs struct {
	// (Updatable) Allows this task to be conditionally enabled.  If no value or a blank value is given, the task is unconditionally enbled.  Otherwise the given string specifies a parameter of the job created for this task's workflow using the JSON pointer syntax. The JSON pointer is validated when a job is created from the workflow of this task.
	EnableParameterReference pulumi.StringPtrInput `pulumi:"enableParameterReference"`
	// (Updatable) Used in conjunction with enableParameterReference to conditionally enable a task.  When a job is created from the workflow of this task, the task will only be enabled if the value of the parameter specified by enableParameterReference is equal to the value of this property. This property must be prenset if and only if a enableParameterReference is given. The value is a JSON node.
	EnableWhenReferencedParameterEquals pulumi.StringMapInput `pulumi:"enableWhenReferencedParameterEquals"`
	// (Updatable) A unique identifier for this task within its workflow. Keys are used to reference a task within workflows and MediaWorkflowJobs. Tasks are referenced as prerequisites and to track output and state.
	Key pulumi.StringInput `pulumi:"key"`
	// (Updatable) Data specifiying how this task is to be run. The data is a JSON object that must conform to the JSON Schema specified by the parameters of the MediaWorkflowTaskDeclaration this task references. The parameters may contain values or references to other parameters.
	Parameters pulumi.StringInput `pulumi:"parameters"`
	// (Updatable) Keys to the other tasks in this workflow that must be completed before execution of this task can begin.
	Prerequisites pulumi.StringArrayInput `pulumi:"prerequisites"`
	// (Updatable) The type of process to run at this task. Refers to the name of a MediaWorkflowTaskDeclaration.
	Type pulumi.StringInput `pulumi:"type"`
	// (Updatable) The version of the MediaWorkflowTaskDeclaration.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Version pulumi.StringInput `pulumi:"version"`
}

func (MediaWorkflowTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MediaWorkflowTask)(nil)).Elem()
}

func (i MediaWorkflowTaskArgs) ToMediaWorkflowTaskOutput() MediaWorkflowTaskOutput {
	return i.ToMediaWorkflowTaskOutputWithContext(context.Background())
}

func (i MediaWorkflowTaskArgs) ToMediaWorkflowTaskOutputWithContext(ctx context.Context) MediaWorkflowTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaWorkflowTaskOutput)
}

// MediaWorkflowTaskArrayInput is an input type that accepts MediaWorkflowTaskArray and MediaWorkflowTaskArrayOutput values.
// You can construct a concrete instance of `MediaWorkflowTaskArrayInput` via:
//
//	MediaWorkflowTaskArray{ MediaWorkflowTaskArgs{...} }
type MediaWorkflowTaskArrayInput interface {
	pulumi.Input

	ToMediaWorkflowTaskArrayOutput() MediaWorkflowTaskArrayOutput
	ToMediaWorkflowTaskArrayOutputWithContext(context.Context) MediaWorkflowTaskArrayOutput
}

type MediaWorkflowTaskArray []MediaWorkflowTaskInput

func (MediaWorkflowTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MediaWorkflowTask)(nil)).Elem()
}

func (i MediaWorkflowTaskArray) ToMediaWorkflowTaskArrayOutput() MediaWorkflowTaskArrayOutput {
	return i.ToMediaWorkflowTaskArrayOutputWithContext(context.Background())
}

func (i MediaWorkflowTaskArray) ToMediaWorkflowTaskArrayOutputWithContext(ctx context.Context) MediaWorkflowTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaWorkflowTaskArrayOutput)
}

type MediaWorkflowTaskOutput struct{ *pulumi.OutputState }

func (MediaWorkflowTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MediaWorkflowTask)(nil)).Elem()
}

func (o MediaWorkflowTaskOutput) ToMediaWorkflowTaskOutput() MediaWorkflowTaskOutput {
	return o
}

func (o MediaWorkflowTaskOutput) ToMediaWorkflowTaskOutputWithContext(ctx context.Context) MediaWorkflowTaskOutput {
	return o
}

// (Updatable) Allows this task to be conditionally enabled.  If no value or a blank value is given, the task is unconditionally enbled.  Otherwise the given string specifies a parameter of the job created for this task's workflow using the JSON pointer syntax. The JSON pointer is validated when a job is created from the workflow of this task.
func (o MediaWorkflowTaskOutput) EnableParameterReference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MediaWorkflowTask) *string { return v.EnableParameterReference }).(pulumi.StringPtrOutput)
}

// (Updatable) Used in conjunction with enableParameterReference to conditionally enable a task.  When a job is created from the workflow of this task, the task will only be enabled if the value of the parameter specified by enableParameterReference is equal to the value of this property. This property must be prenset if and only if a enableParameterReference is given. The value is a JSON node.
func (o MediaWorkflowTaskOutput) EnableWhenReferencedParameterEquals() pulumi.StringMapOutput {
	return o.ApplyT(func(v MediaWorkflowTask) map[string]string { return v.EnableWhenReferencedParameterEquals }).(pulumi.StringMapOutput)
}

// (Updatable) A unique identifier for this task within its workflow. Keys are used to reference a task within workflows and MediaWorkflowJobs. Tasks are referenced as prerequisites and to track output and state.
func (o MediaWorkflowTaskOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v MediaWorkflowTask) string { return v.Key }).(pulumi.StringOutput)
}

// (Updatable) Data specifiying how this task is to be run. The data is a JSON object that must conform to the JSON Schema specified by the parameters of the MediaWorkflowTaskDeclaration this task references. The parameters may contain values or references to other parameters.
func (o MediaWorkflowTaskOutput) Parameters() pulumi.StringOutput {
	return o.ApplyT(func(v MediaWorkflowTask) string { return v.Parameters }).(pulumi.StringOutput)
}

// (Updatable) Keys to the other tasks in this workflow that must be completed before execution of this task can begin.
func (o MediaWorkflowTaskOutput) Prerequisites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MediaWorkflowTask) []string { return v.Prerequisites }).(pulumi.StringArrayOutput)
}

// (Updatable) The type of process to run at this task. Refers to the name of a MediaWorkflowTaskDeclaration.
func (o MediaWorkflowTaskOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MediaWorkflowTask) string { return v.Type }).(pulumi.StringOutput)
}

// (Updatable) The version of the MediaWorkflowTaskDeclaration.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o MediaWorkflowTaskOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v MediaWorkflowTask) string { return v.Version }).(pulumi.StringOutput)
}

type MediaWorkflowTaskArrayOutput struct{ *pulumi.OutputState }

func (MediaWorkflowTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MediaWorkflowTask)(nil)).Elem()
}

func (o MediaWorkflowTaskArrayOutput) ToMediaWorkflowTaskArrayOutput() MediaWorkflowTaskArrayOutput {
	return o
}

func (o MediaWorkflowTaskArrayOutput) ToMediaWorkflowTaskArrayOutputWithContext(ctx context.Context) MediaWorkflowTaskArrayOutput {
	return o
}

func (o MediaWorkflowTaskArrayOutput) Index(i pulumi.IntInput) MediaWorkflowTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MediaWorkflowTask {
		return vs[0].([]MediaWorkflowTask)[vs[1].(int)]
	}).(MediaWorkflowTaskOutput)
}

type StreamCdnConfigConfig struct {
	// (Updatable) The hostname of the CDN edge server to use when building CDN URLs.
	EdgeHostname *string `pulumi:"edgeHostname"`
	// (Updatable) The path to prepend when building CDN URLs.
	EdgePathPrefix *string `pulumi:"edgePathPrefix"`
	// (Updatable) The encryption key to use for edge token authentication.
	EdgeTokenKey *string `pulumi:"edgeTokenKey"`
	// (Updatable) Salt to use when encrypting authentication token.
	EdgeTokenSalt *string `pulumi:"edgeTokenSalt"`
	// (Updatable) Whether token authentication should be used at the CDN edge.
	IsEdgeTokenAuth *bool `pulumi:"isEdgeTokenAuth"`
	// (Updatable) The shared secret key A, two for errorless key rotation.
	OriginAuthSecretKeyA *string `pulumi:"originAuthSecretKeyA"`
	// (Updatable) The shared secret key B, two for errorless key rotation.
	OriginAuthSecretKeyB *string `pulumi:"originAuthSecretKeyB"`
	// (Updatable) Nonce identifier for originAuthSecretKeyA (used to determine key used to sign).
	OriginAuthSecretKeyNonceA *string `pulumi:"originAuthSecretKeyNonceA"`
	// (Updatable) Nonce identifier for originAuthSecretKeyB (used to determine key used to sign).
	OriginAuthSecretKeyNonceB *string `pulumi:"originAuthSecretKeyNonceB"`
	// (Updatable) The type of encryption used to compute the signature.
	OriginAuthSignEncryption *string `pulumi:"originAuthSignEncryption"`
	// (Updatable) The type of data used to compute the signature.
	OriginAuthSignType *string `pulumi:"originAuthSignType"`
	// (Updatable) The name of the CDN configuration type.
	Type string `pulumi:"type"`
}

// StreamCdnConfigConfigInput is an input type that accepts StreamCdnConfigConfigArgs and StreamCdnConfigConfigOutput values.
// You can construct a concrete instance of `StreamCdnConfigConfigInput` via:
//
//	StreamCdnConfigConfigArgs{...}
type StreamCdnConfigConfigInput interface {
	pulumi.Input

	ToStreamCdnConfigConfigOutput() StreamCdnConfigConfigOutput
	ToStreamCdnConfigConfigOutputWithContext(context.Context) StreamCdnConfigConfigOutput
}

type StreamCdnConfigConfigArgs struct {
	// (Updatable) The hostname of the CDN edge server to use when building CDN URLs.
	EdgeHostname pulumi.StringPtrInput `pulumi:"edgeHostname"`
	// (Updatable) The path to prepend when building CDN URLs.
	EdgePathPrefix pulumi.StringPtrInput `pulumi:"edgePathPrefix"`
	// (Updatable) The encryption key to use for edge token authentication.
	EdgeTokenKey pulumi.StringPtrInput `pulumi:"edgeTokenKey"`
	// (Updatable) Salt to use when encrypting authentication token.
	EdgeTokenSalt pulumi.StringPtrInput `pulumi:"edgeTokenSalt"`
	// (Updatable) Whether token authentication should be used at the CDN edge.
	IsEdgeTokenAuth pulumi.BoolPtrInput `pulumi:"isEdgeTokenAuth"`
	// (Updatable) The shared secret key A, two for errorless key rotation.
	OriginAuthSecretKeyA pulumi.StringPtrInput `pulumi:"originAuthSecretKeyA"`
	// (Updatable) The shared secret key B, two for errorless key rotation.
	OriginAuthSecretKeyB pulumi.StringPtrInput `pulumi:"originAuthSecretKeyB"`
	// (Updatable) Nonce identifier for originAuthSecretKeyA (used to determine key used to sign).
	OriginAuthSecretKeyNonceA pulumi.StringPtrInput `pulumi:"originAuthSecretKeyNonceA"`
	// (Updatable) Nonce identifier for originAuthSecretKeyB (used to determine key used to sign).
	OriginAuthSecretKeyNonceB pulumi.StringPtrInput `pulumi:"originAuthSecretKeyNonceB"`
	// (Updatable) The type of encryption used to compute the signature.
	OriginAuthSignEncryption pulumi.StringPtrInput `pulumi:"originAuthSignEncryption"`
	// (Updatable) The type of data used to compute the signature.
	OriginAuthSignType pulumi.StringPtrInput `pulumi:"originAuthSignType"`
	// (Updatable) The name of the CDN configuration type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (StreamCdnConfigConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamCdnConfigConfig)(nil)).Elem()
}

func (i StreamCdnConfigConfigArgs) ToStreamCdnConfigConfigOutput() StreamCdnConfigConfigOutput {
	return i.ToStreamCdnConfigConfigOutputWithContext(context.Background())
}

func (i StreamCdnConfigConfigArgs) ToStreamCdnConfigConfigOutputWithContext(ctx context.Context) StreamCdnConfigConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamCdnConfigConfigOutput)
}

func (i StreamCdnConfigConfigArgs) ToStreamCdnConfigConfigPtrOutput() StreamCdnConfigConfigPtrOutput {
	return i.ToStreamCdnConfigConfigPtrOutputWithContext(context.Background())
}

func (i StreamCdnConfigConfigArgs) ToStreamCdnConfigConfigPtrOutputWithContext(ctx context.Context) StreamCdnConfigConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamCdnConfigConfigOutput).ToStreamCdnConfigConfigPtrOutputWithContext(ctx)
}

// StreamCdnConfigConfigPtrInput is an input type that accepts StreamCdnConfigConfigArgs, StreamCdnConfigConfigPtr and StreamCdnConfigConfigPtrOutput values.
// You can construct a concrete instance of `StreamCdnConfigConfigPtrInput` via:
//
//	        StreamCdnConfigConfigArgs{...}
//
//	or:
//
//	        nil
type StreamCdnConfigConfigPtrInput interface {
	pulumi.Input

	ToStreamCdnConfigConfigPtrOutput() StreamCdnConfigConfigPtrOutput
	ToStreamCdnConfigConfigPtrOutputWithContext(context.Context) StreamCdnConfigConfigPtrOutput
}

type streamCdnConfigConfigPtrType StreamCdnConfigConfigArgs

func StreamCdnConfigConfigPtr(v *StreamCdnConfigConfigArgs) StreamCdnConfigConfigPtrInput {
	return (*streamCdnConfigConfigPtrType)(v)
}

func (*streamCdnConfigConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamCdnConfigConfig)(nil)).Elem()
}

func (i *streamCdnConfigConfigPtrType) ToStreamCdnConfigConfigPtrOutput() StreamCdnConfigConfigPtrOutput {
	return i.ToStreamCdnConfigConfigPtrOutputWithContext(context.Background())
}

func (i *streamCdnConfigConfigPtrType) ToStreamCdnConfigConfigPtrOutputWithContext(ctx context.Context) StreamCdnConfigConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamCdnConfigConfigPtrOutput)
}

type StreamCdnConfigConfigOutput struct{ *pulumi.OutputState }

func (StreamCdnConfigConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamCdnConfigConfig)(nil)).Elem()
}

func (o StreamCdnConfigConfigOutput) ToStreamCdnConfigConfigOutput() StreamCdnConfigConfigOutput {
	return o
}

func (o StreamCdnConfigConfigOutput) ToStreamCdnConfigConfigOutputWithContext(ctx context.Context) StreamCdnConfigConfigOutput {
	return o
}

func (o StreamCdnConfigConfigOutput) ToStreamCdnConfigConfigPtrOutput() StreamCdnConfigConfigPtrOutput {
	return o.ToStreamCdnConfigConfigPtrOutputWithContext(context.Background())
}

func (o StreamCdnConfigConfigOutput) ToStreamCdnConfigConfigPtrOutputWithContext(ctx context.Context) StreamCdnConfigConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StreamCdnConfigConfig) *StreamCdnConfigConfig {
		return &v
	}).(StreamCdnConfigConfigPtrOutput)
}

// (Updatable) The hostname of the CDN edge server to use when building CDN URLs.
func (o StreamCdnConfigConfigOutput) EdgeHostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamCdnConfigConfig) *string { return v.EdgeHostname }).(pulumi.StringPtrOutput)
}

// (Updatable) The path to prepend when building CDN URLs.
func (o StreamCdnConfigConfigOutput) EdgePathPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamCdnConfigConfig) *string { return v.EdgePathPrefix }).(pulumi.StringPtrOutput)
}

// (Updatable) The encryption key to use for edge token authentication.
func (o StreamCdnConfigConfigOutput) EdgeTokenKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamCdnConfigConfig) *string { return v.EdgeTokenKey }).(pulumi.StringPtrOutput)
}

// (Updatable) Salt to use when encrypting authentication token.
func (o StreamCdnConfigConfigOutput) EdgeTokenSalt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamCdnConfigConfig) *string { return v.EdgeTokenSalt }).(pulumi.StringPtrOutput)
}

// (Updatable) Whether token authentication should be used at the CDN edge.
func (o StreamCdnConfigConfigOutput) IsEdgeTokenAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StreamCdnConfigConfig) *bool { return v.IsEdgeTokenAuth }).(pulumi.BoolPtrOutput)
}

// (Updatable) The shared secret key A, two for errorless key rotation.
func (o StreamCdnConfigConfigOutput) OriginAuthSecretKeyA() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamCdnConfigConfig) *string { return v.OriginAuthSecretKeyA }).(pulumi.StringPtrOutput)
}

// (Updatable) The shared secret key B, two for errorless key rotation.
func (o StreamCdnConfigConfigOutput) OriginAuthSecretKeyB() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamCdnConfigConfig) *string { return v.OriginAuthSecretKeyB }).(pulumi.StringPtrOutput)
}

// (Updatable) Nonce identifier for originAuthSecretKeyA (used to determine key used to sign).
func (o StreamCdnConfigConfigOutput) OriginAuthSecretKeyNonceA() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamCdnConfigConfig) *string { return v.OriginAuthSecretKeyNonceA }).(pulumi.StringPtrOutput)
}

// (Updatable) Nonce identifier for originAuthSecretKeyB (used to determine key used to sign).
func (o StreamCdnConfigConfigOutput) OriginAuthSecretKeyNonceB() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamCdnConfigConfig) *string { return v.OriginAuthSecretKeyNonceB }).(pulumi.StringPtrOutput)
}

// (Updatable) The type of encryption used to compute the signature.
func (o StreamCdnConfigConfigOutput) OriginAuthSignEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamCdnConfigConfig) *string { return v.OriginAuthSignEncryption }).(pulumi.StringPtrOutput)
}

// (Updatable) The type of data used to compute the signature.
func (o StreamCdnConfigConfigOutput) OriginAuthSignType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamCdnConfigConfig) *string { return v.OriginAuthSignType }).(pulumi.StringPtrOutput)
}

// (Updatable) The name of the CDN configuration type.
func (o StreamCdnConfigConfigOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v StreamCdnConfigConfig) string { return v.Type }).(pulumi.StringOutput)
}

type StreamCdnConfigConfigPtrOutput struct{ *pulumi.OutputState }

func (StreamCdnConfigConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamCdnConfigConfig)(nil)).Elem()
}

func (o StreamCdnConfigConfigPtrOutput) ToStreamCdnConfigConfigPtrOutput() StreamCdnConfigConfigPtrOutput {
	return o
}

func (o StreamCdnConfigConfigPtrOutput) ToStreamCdnConfigConfigPtrOutputWithContext(ctx context.Context) StreamCdnConfigConfigPtrOutput {
	return o
}

func (o StreamCdnConfigConfigPtrOutput) Elem() StreamCdnConfigConfigOutput {
	return o.ApplyT(func(v *StreamCdnConfigConfig) StreamCdnConfigConfig {
		if v != nil {
			return *v
		}
		var ret StreamCdnConfigConfig
		return ret
	}).(StreamCdnConfigConfigOutput)
}

// (Updatable) The hostname of the CDN edge server to use when building CDN URLs.
func (o StreamCdnConfigConfigPtrOutput) EdgeHostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamCdnConfigConfig) *string {
		if v == nil {
			return nil
		}
		return v.EdgeHostname
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The path to prepend when building CDN URLs.
func (o StreamCdnConfigConfigPtrOutput) EdgePathPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamCdnConfigConfig) *string {
		if v == nil {
			return nil
		}
		return v.EdgePathPrefix
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The encryption key to use for edge token authentication.
func (o StreamCdnConfigConfigPtrOutput) EdgeTokenKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamCdnConfigConfig) *string {
		if v == nil {
			return nil
		}
		return v.EdgeTokenKey
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Salt to use when encrypting authentication token.
func (o StreamCdnConfigConfigPtrOutput) EdgeTokenSalt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamCdnConfigConfig) *string {
		if v == nil {
			return nil
		}
		return v.EdgeTokenSalt
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Whether token authentication should be used at the CDN edge.
func (o StreamCdnConfigConfigPtrOutput) IsEdgeTokenAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StreamCdnConfigConfig) *bool {
		if v == nil {
			return nil
		}
		return v.IsEdgeTokenAuth
	}).(pulumi.BoolPtrOutput)
}

// (Updatable) The shared secret key A, two for errorless key rotation.
func (o StreamCdnConfigConfigPtrOutput) OriginAuthSecretKeyA() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamCdnConfigConfig) *string {
		if v == nil {
			return nil
		}
		return v.OriginAuthSecretKeyA
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The shared secret key B, two for errorless key rotation.
func (o StreamCdnConfigConfigPtrOutput) OriginAuthSecretKeyB() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamCdnConfigConfig) *string {
		if v == nil {
			return nil
		}
		return v.OriginAuthSecretKeyB
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Nonce identifier for originAuthSecretKeyA (used to determine key used to sign).
func (o StreamCdnConfigConfigPtrOutput) OriginAuthSecretKeyNonceA() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamCdnConfigConfig) *string {
		if v == nil {
			return nil
		}
		return v.OriginAuthSecretKeyNonceA
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Nonce identifier for originAuthSecretKeyB (used to determine key used to sign).
func (o StreamCdnConfigConfigPtrOutput) OriginAuthSecretKeyNonceB() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamCdnConfigConfig) *string {
		if v == nil {
			return nil
		}
		return v.OriginAuthSecretKeyNonceB
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The type of encryption used to compute the signature.
func (o StreamCdnConfigConfigPtrOutput) OriginAuthSignEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamCdnConfigConfig) *string {
		if v == nil {
			return nil
		}
		return v.OriginAuthSignEncryption
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The type of data used to compute the signature.
func (o StreamCdnConfigConfigPtrOutput) OriginAuthSignType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamCdnConfigConfig) *string {
		if v == nil {
			return nil
		}
		return v.OriginAuthSignType
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The name of the CDN configuration type.
func (o StreamCdnConfigConfigPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamCdnConfigConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type StreamCdnConfigLock struct {
	// The compartment ID of the lock.
	CompartmentId string `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message *string `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId *string `pulumi:"relatedResourceId"`
	// When the lock was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// Type of the lock.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Type string `pulumi:"type"`
}

// StreamCdnConfigLockInput is an input type that accepts StreamCdnConfigLockArgs and StreamCdnConfigLockOutput values.
// You can construct a concrete instance of `StreamCdnConfigLockInput` via:
//
//	StreamCdnConfigLockArgs{...}
type StreamCdnConfigLockInput interface {
	pulumi.Input

	ToStreamCdnConfigLockOutput() StreamCdnConfigLockOutput
	ToStreamCdnConfigLockOutputWithContext(context.Context) StreamCdnConfigLockOutput
}

type StreamCdnConfigLockArgs struct {
	// The compartment ID of the lock.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId pulumi.StringPtrInput `pulumi:"relatedResourceId"`
	// When the lock was created.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// Type of the lock.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Type pulumi.StringInput `pulumi:"type"`
}

func (StreamCdnConfigLockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamCdnConfigLock)(nil)).Elem()
}

func (i StreamCdnConfigLockArgs) ToStreamCdnConfigLockOutput() StreamCdnConfigLockOutput {
	return i.ToStreamCdnConfigLockOutputWithContext(context.Background())
}

func (i StreamCdnConfigLockArgs) ToStreamCdnConfigLockOutputWithContext(ctx context.Context) StreamCdnConfigLockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamCdnConfigLockOutput)
}

// StreamCdnConfigLockArrayInput is an input type that accepts StreamCdnConfigLockArray and StreamCdnConfigLockArrayOutput values.
// You can construct a concrete instance of `StreamCdnConfigLockArrayInput` via:
//
//	StreamCdnConfigLockArray{ StreamCdnConfigLockArgs{...} }
type StreamCdnConfigLockArrayInput interface {
	pulumi.Input

	ToStreamCdnConfigLockArrayOutput() StreamCdnConfigLockArrayOutput
	ToStreamCdnConfigLockArrayOutputWithContext(context.Context) StreamCdnConfigLockArrayOutput
}

type StreamCdnConfigLockArray []StreamCdnConfigLockInput

func (StreamCdnConfigLockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StreamCdnConfigLock)(nil)).Elem()
}

func (i StreamCdnConfigLockArray) ToStreamCdnConfigLockArrayOutput() StreamCdnConfigLockArrayOutput {
	return i.ToStreamCdnConfigLockArrayOutputWithContext(context.Background())
}

func (i StreamCdnConfigLockArray) ToStreamCdnConfigLockArrayOutputWithContext(ctx context.Context) StreamCdnConfigLockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamCdnConfigLockArrayOutput)
}

type StreamCdnConfigLockOutput struct{ *pulumi.OutputState }

func (StreamCdnConfigLockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamCdnConfigLock)(nil)).Elem()
}

func (o StreamCdnConfigLockOutput) ToStreamCdnConfigLockOutput() StreamCdnConfigLockOutput {
	return o
}

func (o StreamCdnConfigLockOutput) ToStreamCdnConfigLockOutputWithContext(ctx context.Context) StreamCdnConfigLockOutput {
	return o
}

// The compartment ID of the lock.
func (o StreamCdnConfigLockOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v StreamCdnConfigLock) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
func (o StreamCdnConfigLockOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamCdnConfigLock) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
func (o StreamCdnConfigLockOutput) RelatedResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamCdnConfigLock) *string { return v.RelatedResourceId }).(pulumi.StringPtrOutput)
}

// When the lock was created.
func (o StreamCdnConfigLockOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamCdnConfigLock) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// Type of the lock.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o StreamCdnConfigLockOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v StreamCdnConfigLock) string { return v.Type }).(pulumi.StringOutput)
}

type StreamCdnConfigLockArrayOutput struct{ *pulumi.OutputState }

func (StreamCdnConfigLockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StreamCdnConfigLock)(nil)).Elem()
}

func (o StreamCdnConfigLockArrayOutput) ToStreamCdnConfigLockArrayOutput() StreamCdnConfigLockArrayOutput {
	return o
}

func (o StreamCdnConfigLockArrayOutput) ToStreamCdnConfigLockArrayOutputWithContext(ctx context.Context) StreamCdnConfigLockArrayOutput {
	return o
}

func (o StreamCdnConfigLockArrayOutput) Index(i pulumi.IntInput) StreamCdnConfigLockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StreamCdnConfigLock {
		return vs[0].([]StreamCdnConfigLock)[vs[1].(int)]
	}).(StreamCdnConfigLockOutput)
}

type StreamDistributionChannelLock struct {
	// (Updatable) The compartment ID of the lock.
	CompartmentId string `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message *string `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId *string `pulumi:"relatedResourceId"`
	// When the lock was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// Type of the lock.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Type string `pulumi:"type"`
}

// StreamDistributionChannelLockInput is an input type that accepts StreamDistributionChannelLockArgs and StreamDistributionChannelLockOutput values.
// You can construct a concrete instance of `StreamDistributionChannelLockInput` via:
//
//	StreamDistributionChannelLockArgs{...}
type StreamDistributionChannelLockInput interface {
	pulumi.Input

	ToStreamDistributionChannelLockOutput() StreamDistributionChannelLockOutput
	ToStreamDistributionChannelLockOutputWithContext(context.Context) StreamDistributionChannelLockOutput
}

type StreamDistributionChannelLockArgs struct {
	// (Updatable) The compartment ID of the lock.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId pulumi.StringPtrInput `pulumi:"relatedResourceId"`
	// When the lock was created.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// Type of the lock.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Type pulumi.StringInput `pulumi:"type"`
}

func (StreamDistributionChannelLockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamDistributionChannelLock)(nil)).Elem()
}

func (i StreamDistributionChannelLockArgs) ToStreamDistributionChannelLockOutput() StreamDistributionChannelLockOutput {
	return i.ToStreamDistributionChannelLockOutputWithContext(context.Background())
}

func (i StreamDistributionChannelLockArgs) ToStreamDistributionChannelLockOutputWithContext(ctx context.Context) StreamDistributionChannelLockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamDistributionChannelLockOutput)
}

// StreamDistributionChannelLockArrayInput is an input type that accepts StreamDistributionChannelLockArray and StreamDistributionChannelLockArrayOutput values.
// You can construct a concrete instance of `StreamDistributionChannelLockArrayInput` via:
//
//	StreamDistributionChannelLockArray{ StreamDistributionChannelLockArgs{...} }
type StreamDistributionChannelLockArrayInput interface {
	pulumi.Input

	ToStreamDistributionChannelLockArrayOutput() StreamDistributionChannelLockArrayOutput
	ToStreamDistributionChannelLockArrayOutputWithContext(context.Context) StreamDistributionChannelLockArrayOutput
}

type StreamDistributionChannelLockArray []StreamDistributionChannelLockInput

func (StreamDistributionChannelLockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StreamDistributionChannelLock)(nil)).Elem()
}

func (i StreamDistributionChannelLockArray) ToStreamDistributionChannelLockArrayOutput() StreamDistributionChannelLockArrayOutput {
	return i.ToStreamDistributionChannelLockArrayOutputWithContext(context.Background())
}

func (i StreamDistributionChannelLockArray) ToStreamDistributionChannelLockArrayOutputWithContext(ctx context.Context) StreamDistributionChannelLockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamDistributionChannelLockArrayOutput)
}

type StreamDistributionChannelLockOutput struct{ *pulumi.OutputState }

func (StreamDistributionChannelLockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamDistributionChannelLock)(nil)).Elem()
}

func (o StreamDistributionChannelLockOutput) ToStreamDistributionChannelLockOutput() StreamDistributionChannelLockOutput {
	return o
}

func (o StreamDistributionChannelLockOutput) ToStreamDistributionChannelLockOutputWithContext(ctx context.Context) StreamDistributionChannelLockOutput {
	return o
}

// (Updatable) The compartment ID of the lock.
func (o StreamDistributionChannelLockOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v StreamDistributionChannelLock) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
func (o StreamDistributionChannelLockOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamDistributionChannelLock) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
func (o StreamDistributionChannelLockOutput) RelatedResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamDistributionChannelLock) *string { return v.RelatedResourceId }).(pulumi.StringPtrOutput)
}

// When the lock was created.
func (o StreamDistributionChannelLockOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamDistributionChannelLock) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// Type of the lock.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o StreamDistributionChannelLockOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v StreamDistributionChannelLock) string { return v.Type }).(pulumi.StringOutput)
}

type StreamDistributionChannelLockArrayOutput struct{ *pulumi.OutputState }

func (StreamDistributionChannelLockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StreamDistributionChannelLock)(nil)).Elem()
}

func (o StreamDistributionChannelLockArrayOutput) ToStreamDistributionChannelLockArrayOutput() StreamDistributionChannelLockArrayOutput {
	return o
}

func (o StreamDistributionChannelLockArrayOutput) ToStreamDistributionChannelLockArrayOutputWithContext(ctx context.Context) StreamDistributionChannelLockArrayOutput {
	return o
}

func (o StreamDistributionChannelLockArrayOutput) Index(i pulumi.IntInput) StreamDistributionChannelLockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StreamDistributionChannelLock {
		return vs[0].([]StreamDistributionChannelLock)[vs[1].(int)]
	}).(StreamDistributionChannelLockOutput)
}

type StreamPackagingConfigEncryption struct {
	// The encryption algorithm for the stream packaging configuration.
	Algorithm string `pulumi:"algorithm"`
	// The identifier of the customer managed Vault KMS symmetric encryption key (null if Oracle managed).
	KmsKeyId *string `pulumi:"kmsKeyId"`
}

// StreamPackagingConfigEncryptionInput is an input type that accepts StreamPackagingConfigEncryptionArgs and StreamPackagingConfigEncryptionOutput values.
// You can construct a concrete instance of `StreamPackagingConfigEncryptionInput` via:
//
//	StreamPackagingConfigEncryptionArgs{...}
type StreamPackagingConfigEncryptionInput interface {
	pulumi.Input

	ToStreamPackagingConfigEncryptionOutput() StreamPackagingConfigEncryptionOutput
	ToStreamPackagingConfigEncryptionOutputWithContext(context.Context) StreamPackagingConfigEncryptionOutput
}

type StreamPackagingConfigEncryptionArgs struct {
	// The encryption algorithm for the stream packaging configuration.
	Algorithm pulumi.StringInput `pulumi:"algorithm"`
	// The identifier of the customer managed Vault KMS symmetric encryption key (null if Oracle managed).
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
}

func (StreamPackagingConfigEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamPackagingConfigEncryption)(nil)).Elem()
}

func (i StreamPackagingConfigEncryptionArgs) ToStreamPackagingConfigEncryptionOutput() StreamPackagingConfigEncryptionOutput {
	return i.ToStreamPackagingConfigEncryptionOutputWithContext(context.Background())
}

func (i StreamPackagingConfigEncryptionArgs) ToStreamPackagingConfigEncryptionOutputWithContext(ctx context.Context) StreamPackagingConfigEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamPackagingConfigEncryptionOutput)
}

func (i StreamPackagingConfigEncryptionArgs) ToStreamPackagingConfigEncryptionPtrOutput() StreamPackagingConfigEncryptionPtrOutput {
	return i.ToStreamPackagingConfigEncryptionPtrOutputWithContext(context.Background())
}

func (i StreamPackagingConfigEncryptionArgs) ToStreamPackagingConfigEncryptionPtrOutputWithContext(ctx context.Context) StreamPackagingConfigEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamPackagingConfigEncryptionOutput).ToStreamPackagingConfigEncryptionPtrOutputWithContext(ctx)
}

// StreamPackagingConfigEncryptionPtrInput is an input type that accepts StreamPackagingConfigEncryptionArgs, StreamPackagingConfigEncryptionPtr and StreamPackagingConfigEncryptionPtrOutput values.
// You can construct a concrete instance of `StreamPackagingConfigEncryptionPtrInput` via:
//
//	        StreamPackagingConfigEncryptionArgs{...}
//
//	or:
//
//	        nil
type StreamPackagingConfigEncryptionPtrInput interface {
	pulumi.Input

	ToStreamPackagingConfigEncryptionPtrOutput() StreamPackagingConfigEncryptionPtrOutput
	ToStreamPackagingConfigEncryptionPtrOutputWithContext(context.Context) StreamPackagingConfigEncryptionPtrOutput
}

type streamPackagingConfigEncryptionPtrType StreamPackagingConfigEncryptionArgs

func StreamPackagingConfigEncryptionPtr(v *StreamPackagingConfigEncryptionArgs) StreamPackagingConfigEncryptionPtrInput {
	return (*streamPackagingConfigEncryptionPtrType)(v)
}

func (*streamPackagingConfigEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamPackagingConfigEncryption)(nil)).Elem()
}

func (i *streamPackagingConfigEncryptionPtrType) ToStreamPackagingConfigEncryptionPtrOutput() StreamPackagingConfigEncryptionPtrOutput {
	return i.ToStreamPackagingConfigEncryptionPtrOutputWithContext(context.Background())
}

func (i *streamPackagingConfigEncryptionPtrType) ToStreamPackagingConfigEncryptionPtrOutputWithContext(ctx context.Context) StreamPackagingConfigEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamPackagingConfigEncryptionPtrOutput)
}

type StreamPackagingConfigEncryptionOutput struct{ *pulumi.OutputState }

func (StreamPackagingConfigEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamPackagingConfigEncryption)(nil)).Elem()
}

func (o StreamPackagingConfigEncryptionOutput) ToStreamPackagingConfigEncryptionOutput() StreamPackagingConfigEncryptionOutput {
	return o
}

func (o StreamPackagingConfigEncryptionOutput) ToStreamPackagingConfigEncryptionOutputWithContext(ctx context.Context) StreamPackagingConfigEncryptionOutput {
	return o
}

func (o StreamPackagingConfigEncryptionOutput) ToStreamPackagingConfigEncryptionPtrOutput() StreamPackagingConfigEncryptionPtrOutput {
	return o.ToStreamPackagingConfigEncryptionPtrOutputWithContext(context.Background())
}

func (o StreamPackagingConfigEncryptionOutput) ToStreamPackagingConfigEncryptionPtrOutputWithContext(ctx context.Context) StreamPackagingConfigEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StreamPackagingConfigEncryption) *StreamPackagingConfigEncryption {
		return &v
	}).(StreamPackagingConfigEncryptionPtrOutput)
}

// The encryption algorithm for the stream packaging configuration.
func (o StreamPackagingConfigEncryptionOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v StreamPackagingConfigEncryption) string { return v.Algorithm }).(pulumi.StringOutput)
}

// The identifier of the customer managed Vault KMS symmetric encryption key (null if Oracle managed).
func (o StreamPackagingConfigEncryptionOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamPackagingConfigEncryption) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

type StreamPackagingConfigEncryptionPtrOutput struct{ *pulumi.OutputState }

func (StreamPackagingConfigEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamPackagingConfigEncryption)(nil)).Elem()
}

func (o StreamPackagingConfigEncryptionPtrOutput) ToStreamPackagingConfigEncryptionPtrOutput() StreamPackagingConfigEncryptionPtrOutput {
	return o
}

func (o StreamPackagingConfigEncryptionPtrOutput) ToStreamPackagingConfigEncryptionPtrOutputWithContext(ctx context.Context) StreamPackagingConfigEncryptionPtrOutput {
	return o
}

func (o StreamPackagingConfigEncryptionPtrOutput) Elem() StreamPackagingConfigEncryptionOutput {
	return o.ApplyT(func(v *StreamPackagingConfigEncryption) StreamPackagingConfigEncryption {
		if v != nil {
			return *v
		}
		var ret StreamPackagingConfigEncryption
		return ret
	}).(StreamPackagingConfigEncryptionOutput)
}

// The encryption algorithm for the stream packaging configuration.
func (o StreamPackagingConfigEncryptionPtrOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamPackagingConfigEncryption) *string {
		if v == nil {
			return nil
		}
		return &v.Algorithm
	}).(pulumi.StringPtrOutput)
}

// The identifier of the customer managed Vault KMS symmetric encryption key (null if Oracle managed).
func (o StreamPackagingConfigEncryptionPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamPackagingConfigEncryption) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

type StreamPackagingConfigLock struct {
	// The compartment ID of the lock.
	CompartmentId string `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message *string `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId *string `pulumi:"relatedResourceId"`
	// When the lock was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// Type of the lock.
	Type string `pulumi:"type"`
}

// StreamPackagingConfigLockInput is an input type that accepts StreamPackagingConfigLockArgs and StreamPackagingConfigLockOutput values.
// You can construct a concrete instance of `StreamPackagingConfigLockInput` via:
//
//	StreamPackagingConfigLockArgs{...}
type StreamPackagingConfigLockInput interface {
	pulumi.Input

	ToStreamPackagingConfigLockOutput() StreamPackagingConfigLockOutput
	ToStreamPackagingConfigLockOutputWithContext(context.Context) StreamPackagingConfigLockOutput
}

type StreamPackagingConfigLockArgs struct {
	// The compartment ID of the lock.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId pulumi.StringPtrInput `pulumi:"relatedResourceId"`
	// When the lock was created.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// Type of the lock.
	Type pulumi.StringInput `pulumi:"type"`
}

func (StreamPackagingConfigLockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamPackagingConfigLock)(nil)).Elem()
}

func (i StreamPackagingConfigLockArgs) ToStreamPackagingConfigLockOutput() StreamPackagingConfigLockOutput {
	return i.ToStreamPackagingConfigLockOutputWithContext(context.Background())
}

func (i StreamPackagingConfigLockArgs) ToStreamPackagingConfigLockOutputWithContext(ctx context.Context) StreamPackagingConfigLockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamPackagingConfigLockOutput)
}

// StreamPackagingConfigLockArrayInput is an input type that accepts StreamPackagingConfigLockArray and StreamPackagingConfigLockArrayOutput values.
// You can construct a concrete instance of `StreamPackagingConfigLockArrayInput` via:
//
//	StreamPackagingConfigLockArray{ StreamPackagingConfigLockArgs{...} }
type StreamPackagingConfigLockArrayInput interface {
	pulumi.Input

	ToStreamPackagingConfigLockArrayOutput() StreamPackagingConfigLockArrayOutput
	ToStreamPackagingConfigLockArrayOutputWithContext(context.Context) StreamPackagingConfigLockArrayOutput
}

type StreamPackagingConfigLockArray []StreamPackagingConfigLockInput

func (StreamPackagingConfigLockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StreamPackagingConfigLock)(nil)).Elem()
}

func (i StreamPackagingConfigLockArray) ToStreamPackagingConfigLockArrayOutput() StreamPackagingConfigLockArrayOutput {
	return i.ToStreamPackagingConfigLockArrayOutputWithContext(context.Background())
}

func (i StreamPackagingConfigLockArray) ToStreamPackagingConfigLockArrayOutputWithContext(ctx context.Context) StreamPackagingConfigLockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamPackagingConfigLockArrayOutput)
}

type StreamPackagingConfigLockOutput struct{ *pulumi.OutputState }

func (StreamPackagingConfigLockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamPackagingConfigLock)(nil)).Elem()
}

func (o StreamPackagingConfigLockOutput) ToStreamPackagingConfigLockOutput() StreamPackagingConfigLockOutput {
	return o
}

func (o StreamPackagingConfigLockOutput) ToStreamPackagingConfigLockOutputWithContext(ctx context.Context) StreamPackagingConfigLockOutput {
	return o
}

// The compartment ID of the lock.
func (o StreamPackagingConfigLockOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v StreamPackagingConfigLock) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
func (o StreamPackagingConfigLockOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamPackagingConfigLock) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
func (o StreamPackagingConfigLockOutput) RelatedResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamPackagingConfigLock) *string { return v.RelatedResourceId }).(pulumi.StringPtrOutput)
}

// When the lock was created.
func (o StreamPackagingConfigLockOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamPackagingConfigLock) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// Type of the lock.
func (o StreamPackagingConfigLockOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v StreamPackagingConfigLock) string { return v.Type }).(pulumi.StringOutput)
}

type StreamPackagingConfigLockArrayOutput struct{ *pulumi.OutputState }

func (StreamPackagingConfigLockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StreamPackagingConfigLock)(nil)).Elem()
}

func (o StreamPackagingConfigLockArrayOutput) ToStreamPackagingConfigLockArrayOutput() StreamPackagingConfigLockArrayOutput {
	return o
}

func (o StreamPackagingConfigLockArrayOutput) ToStreamPackagingConfigLockArrayOutputWithContext(ctx context.Context) StreamPackagingConfigLockArrayOutput {
	return o
}

func (o StreamPackagingConfigLockArrayOutput) Index(i pulumi.IntInput) StreamPackagingConfigLockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StreamPackagingConfigLock {
		return vs[0].([]StreamPackagingConfigLock)[vs[1].(int)]
	}).(StreamPackagingConfigLockOutput)
}

type GetMediaAssetDistributionChannelAttachmentLock struct {
	// The compartment ID of the lock.
	CompartmentId string `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message string `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId string `pulumi:"relatedResourceId"`
	// When the lock was created.
	TimeCreated string `pulumi:"timeCreated"`
	// Type of the lock.
	Type string `pulumi:"type"`
}

// GetMediaAssetDistributionChannelAttachmentLockInput is an input type that accepts GetMediaAssetDistributionChannelAttachmentLockArgs and GetMediaAssetDistributionChannelAttachmentLockOutput values.
// You can construct a concrete instance of `GetMediaAssetDistributionChannelAttachmentLockInput` via:
//
//	GetMediaAssetDistributionChannelAttachmentLockArgs{...}
type GetMediaAssetDistributionChannelAttachmentLockInput interface {
	pulumi.Input

	ToGetMediaAssetDistributionChannelAttachmentLockOutput() GetMediaAssetDistributionChannelAttachmentLockOutput
	ToGetMediaAssetDistributionChannelAttachmentLockOutputWithContext(context.Context) GetMediaAssetDistributionChannelAttachmentLockOutput
}

type GetMediaAssetDistributionChannelAttachmentLockArgs struct {
	// The compartment ID of the lock.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message pulumi.StringInput `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId pulumi.StringInput `pulumi:"relatedResourceId"`
	// When the lock was created.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// Type of the lock.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetMediaAssetDistributionChannelAttachmentLockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaAssetDistributionChannelAttachmentLock)(nil)).Elem()
}

func (i GetMediaAssetDistributionChannelAttachmentLockArgs) ToGetMediaAssetDistributionChannelAttachmentLockOutput() GetMediaAssetDistributionChannelAttachmentLockOutput {
	return i.ToGetMediaAssetDistributionChannelAttachmentLockOutputWithContext(context.Background())
}

func (i GetMediaAssetDistributionChannelAttachmentLockArgs) ToGetMediaAssetDistributionChannelAttachmentLockOutputWithContext(ctx context.Context) GetMediaAssetDistributionChannelAttachmentLockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaAssetDistributionChannelAttachmentLockOutput)
}

// GetMediaAssetDistributionChannelAttachmentLockArrayInput is an input type that accepts GetMediaAssetDistributionChannelAttachmentLockArray and GetMediaAssetDistributionChannelAttachmentLockArrayOutput values.
// You can construct a concrete instance of `GetMediaAssetDistributionChannelAttachmentLockArrayInput` via:
//
//	GetMediaAssetDistributionChannelAttachmentLockArray{ GetMediaAssetDistributionChannelAttachmentLockArgs{...} }
type GetMediaAssetDistributionChannelAttachmentLockArrayInput interface {
	pulumi.Input

	ToGetMediaAssetDistributionChannelAttachmentLockArrayOutput() GetMediaAssetDistributionChannelAttachmentLockArrayOutput
	ToGetMediaAssetDistributionChannelAttachmentLockArrayOutputWithContext(context.Context) GetMediaAssetDistributionChannelAttachmentLockArrayOutput
}

type GetMediaAssetDistributionChannelAttachmentLockArray []GetMediaAssetDistributionChannelAttachmentLockInput

func (GetMediaAssetDistributionChannelAttachmentLockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaAssetDistributionChannelAttachmentLock)(nil)).Elem()
}

func (i GetMediaAssetDistributionChannelAttachmentLockArray) ToGetMediaAssetDistributionChannelAttachmentLockArrayOutput() GetMediaAssetDistributionChannelAttachmentLockArrayOutput {
	return i.ToGetMediaAssetDistributionChannelAttachmentLockArrayOutputWithContext(context.Background())
}

func (i GetMediaAssetDistributionChannelAttachmentLockArray) ToGetMediaAssetDistributionChannelAttachmentLockArrayOutputWithContext(ctx context.Context) GetMediaAssetDistributionChannelAttachmentLockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaAssetDistributionChannelAttachmentLockArrayOutput)
}

type GetMediaAssetDistributionChannelAttachmentLockOutput struct{ *pulumi.OutputState }

func (GetMediaAssetDistributionChannelAttachmentLockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaAssetDistributionChannelAttachmentLock)(nil)).Elem()
}

func (o GetMediaAssetDistributionChannelAttachmentLockOutput) ToGetMediaAssetDistributionChannelAttachmentLockOutput() GetMediaAssetDistributionChannelAttachmentLockOutput {
	return o
}

func (o GetMediaAssetDistributionChannelAttachmentLockOutput) ToGetMediaAssetDistributionChannelAttachmentLockOutputWithContext(ctx context.Context) GetMediaAssetDistributionChannelAttachmentLockOutput {
	return o
}

// The compartment ID of the lock.
func (o GetMediaAssetDistributionChannelAttachmentLockOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetDistributionChannelAttachmentLock) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
func (o GetMediaAssetDistributionChannelAttachmentLockOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetDistributionChannelAttachmentLock) string { return v.Message }).(pulumi.StringOutput)
}

// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
func (o GetMediaAssetDistributionChannelAttachmentLockOutput) RelatedResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetDistributionChannelAttachmentLock) string { return v.RelatedResourceId }).(pulumi.StringOutput)
}

// When the lock was created.
func (o GetMediaAssetDistributionChannelAttachmentLockOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetDistributionChannelAttachmentLock) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Type of the lock.
func (o GetMediaAssetDistributionChannelAttachmentLockOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetDistributionChannelAttachmentLock) string { return v.Type }).(pulumi.StringOutput)
}

type GetMediaAssetDistributionChannelAttachmentLockArrayOutput struct{ *pulumi.OutputState }

func (GetMediaAssetDistributionChannelAttachmentLockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaAssetDistributionChannelAttachmentLock)(nil)).Elem()
}

func (o GetMediaAssetDistributionChannelAttachmentLockArrayOutput) ToGetMediaAssetDistributionChannelAttachmentLockArrayOutput() GetMediaAssetDistributionChannelAttachmentLockArrayOutput {
	return o
}

func (o GetMediaAssetDistributionChannelAttachmentLockArrayOutput) ToGetMediaAssetDistributionChannelAttachmentLockArrayOutputWithContext(ctx context.Context) GetMediaAssetDistributionChannelAttachmentLockArrayOutput {
	return o
}

func (o GetMediaAssetDistributionChannelAttachmentLockArrayOutput) Index(i pulumi.IntInput) GetMediaAssetDistributionChannelAttachmentLockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMediaAssetDistributionChannelAttachmentLock {
		return vs[0].([]GetMediaAssetDistributionChannelAttachmentLock)[vs[1].(int)]
	}).(GetMediaAssetDistributionChannelAttachmentLockOutput)
}

type GetMediaAssetLock struct {
	// The compartment ID of the lock.
	CompartmentId string `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message string `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId string `pulumi:"relatedResourceId"`
	// The time when the MediaAsset was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The type of the media asset.
	Type string `pulumi:"type"`
}

// GetMediaAssetLockInput is an input type that accepts GetMediaAssetLockArgs and GetMediaAssetLockOutput values.
// You can construct a concrete instance of `GetMediaAssetLockInput` via:
//
//	GetMediaAssetLockArgs{...}
type GetMediaAssetLockInput interface {
	pulumi.Input

	ToGetMediaAssetLockOutput() GetMediaAssetLockOutput
	ToGetMediaAssetLockOutputWithContext(context.Context) GetMediaAssetLockOutput
}

type GetMediaAssetLockArgs struct {
	// The compartment ID of the lock.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message pulumi.StringInput `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId pulumi.StringInput `pulumi:"relatedResourceId"`
	// The time when the MediaAsset was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The type of the media asset.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetMediaAssetLockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaAssetLock)(nil)).Elem()
}

func (i GetMediaAssetLockArgs) ToGetMediaAssetLockOutput() GetMediaAssetLockOutput {
	return i.ToGetMediaAssetLockOutputWithContext(context.Background())
}

func (i GetMediaAssetLockArgs) ToGetMediaAssetLockOutputWithContext(ctx context.Context) GetMediaAssetLockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaAssetLockOutput)
}

// GetMediaAssetLockArrayInput is an input type that accepts GetMediaAssetLockArray and GetMediaAssetLockArrayOutput values.
// You can construct a concrete instance of `GetMediaAssetLockArrayInput` via:
//
//	GetMediaAssetLockArray{ GetMediaAssetLockArgs{...} }
type GetMediaAssetLockArrayInput interface {
	pulumi.Input

	ToGetMediaAssetLockArrayOutput() GetMediaAssetLockArrayOutput
	ToGetMediaAssetLockArrayOutputWithContext(context.Context) GetMediaAssetLockArrayOutput
}

type GetMediaAssetLockArray []GetMediaAssetLockInput

func (GetMediaAssetLockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaAssetLock)(nil)).Elem()
}

func (i GetMediaAssetLockArray) ToGetMediaAssetLockArrayOutput() GetMediaAssetLockArrayOutput {
	return i.ToGetMediaAssetLockArrayOutputWithContext(context.Background())
}

func (i GetMediaAssetLockArray) ToGetMediaAssetLockArrayOutputWithContext(ctx context.Context) GetMediaAssetLockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaAssetLockArrayOutput)
}

type GetMediaAssetLockOutput struct{ *pulumi.OutputState }

func (GetMediaAssetLockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaAssetLock)(nil)).Elem()
}

func (o GetMediaAssetLockOutput) ToGetMediaAssetLockOutput() GetMediaAssetLockOutput {
	return o
}

func (o GetMediaAssetLockOutput) ToGetMediaAssetLockOutputWithContext(ctx context.Context) GetMediaAssetLockOutput {
	return o
}

// The compartment ID of the lock.
func (o GetMediaAssetLockOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetLock) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
func (o GetMediaAssetLockOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetLock) string { return v.Message }).(pulumi.StringOutput)
}

// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
func (o GetMediaAssetLockOutput) RelatedResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetLock) string { return v.RelatedResourceId }).(pulumi.StringOutput)
}

// The time when the MediaAsset was created. An RFC3339 formatted datetime string.
func (o GetMediaAssetLockOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetLock) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The type of the media asset.
func (o GetMediaAssetLockOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetLock) string { return v.Type }).(pulumi.StringOutput)
}

type GetMediaAssetLockArrayOutput struct{ *pulumi.OutputState }

func (GetMediaAssetLockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaAssetLock)(nil)).Elem()
}

func (o GetMediaAssetLockArrayOutput) ToGetMediaAssetLockArrayOutput() GetMediaAssetLockArrayOutput {
	return o
}

func (o GetMediaAssetLockArrayOutput) ToGetMediaAssetLockArrayOutputWithContext(ctx context.Context) GetMediaAssetLockArrayOutput {
	return o
}

func (o GetMediaAssetLockArrayOutput) Index(i pulumi.IntInput) GetMediaAssetLockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMediaAssetLock {
		return vs[0].([]GetMediaAssetLock)[vs[1].(int)]
	}).(GetMediaAssetLockOutput)
}

type GetMediaAssetMediaAssetTag struct {
	// The type of the media asset.
	Type string `pulumi:"type"`
	// Tag of the MediaAsset.
	Value string `pulumi:"value"`
}

// GetMediaAssetMediaAssetTagInput is an input type that accepts GetMediaAssetMediaAssetTagArgs and GetMediaAssetMediaAssetTagOutput values.
// You can construct a concrete instance of `GetMediaAssetMediaAssetTagInput` via:
//
//	GetMediaAssetMediaAssetTagArgs{...}
type GetMediaAssetMediaAssetTagInput interface {
	pulumi.Input

	ToGetMediaAssetMediaAssetTagOutput() GetMediaAssetMediaAssetTagOutput
	ToGetMediaAssetMediaAssetTagOutputWithContext(context.Context) GetMediaAssetMediaAssetTagOutput
}

type GetMediaAssetMediaAssetTagArgs struct {
	// The type of the media asset.
	Type pulumi.StringInput `pulumi:"type"`
	// Tag of the MediaAsset.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetMediaAssetMediaAssetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaAssetMediaAssetTag)(nil)).Elem()
}

func (i GetMediaAssetMediaAssetTagArgs) ToGetMediaAssetMediaAssetTagOutput() GetMediaAssetMediaAssetTagOutput {
	return i.ToGetMediaAssetMediaAssetTagOutputWithContext(context.Background())
}

func (i GetMediaAssetMediaAssetTagArgs) ToGetMediaAssetMediaAssetTagOutputWithContext(ctx context.Context) GetMediaAssetMediaAssetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaAssetMediaAssetTagOutput)
}

// GetMediaAssetMediaAssetTagArrayInput is an input type that accepts GetMediaAssetMediaAssetTagArray and GetMediaAssetMediaAssetTagArrayOutput values.
// You can construct a concrete instance of `GetMediaAssetMediaAssetTagArrayInput` via:
//
//	GetMediaAssetMediaAssetTagArray{ GetMediaAssetMediaAssetTagArgs{...} }
type GetMediaAssetMediaAssetTagArrayInput interface {
	pulumi.Input

	ToGetMediaAssetMediaAssetTagArrayOutput() GetMediaAssetMediaAssetTagArrayOutput
	ToGetMediaAssetMediaAssetTagArrayOutputWithContext(context.Context) GetMediaAssetMediaAssetTagArrayOutput
}

type GetMediaAssetMediaAssetTagArray []GetMediaAssetMediaAssetTagInput

func (GetMediaAssetMediaAssetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaAssetMediaAssetTag)(nil)).Elem()
}

func (i GetMediaAssetMediaAssetTagArray) ToGetMediaAssetMediaAssetTagArrayOutput() GetMediaAssetMediaAssetTagArrayOutput {
	return i.ToGetMediaAssetMediaAssetTagArrayOutputWithContext(context.Background())
}

func (i GetMediaAssetMediaAssetTagArray) ToGetMediaAssetMediaAssetTagArrayOutputWithContext(ctx context.Context) GetMediaAssetMediaAssetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaAssetMediaAssetTagArrayOutput)
}

type GetMediaAssetMediaAssetTagOutput struct{ *pulumi.OutputState }

func (GetMediaAssetMediaAssetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaAssetMediaAssetTag)(nil)).Elem()
}

func (o GetMediaAssetMediaAssetTagOutput) ToGetMediaAssetMediaAssetTagOutput() GetMediaAssetMediaAssetTagOutput {
	return o
}

func (o GetMediaAssetMediaAssetTagOutput) ToGetMediaAssetMediaAssetTagOutputWithContext(ctx context.Context) GetMediaAssetMediaAssetTagOutput {
	return o
}

// The type of the media asset.
func (o GetMediaAssetMediaAssetTagOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetMediaAssetTag) string { return v.Type }).(pulumi.StringOutput)
}

// Tag of the MediaAsset.
func (o GetMediaAssetMediaAssetTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetMediaAssetTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetMediaAssetMediaAssetTagArrayOutput struct{ *pulumi.OutputState }

func (GetMediaAssetMediaAssetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaAssetMediaAssetTag)(nil)).Elem()
}

func (o GetMediaAssetMediaAssetTagArrayOutput) ToGetMediaAssetMediaAssetTagArrayOutput() GetMediaAssetMediaAssetTagArrayOutput {
	return o
}

func (o GetMediaAssetMediaAssetTagArrayOutput) ToGetMediaAssetMediaAssetTagArrayOutputWithContext(ctx context.Context) GetMediaAssetMediaAssetTagArrayOutput {
	return o
}

func (o GetMediaAssetMediaAssetTagArrayOutput) Index(i pulumi.IntInput) GetMediaAssetMediaAssetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMediaAssetMediaAssetTag {
		return vs[0].([]GetMediaAssetMediaAssetTag)[vs[1].(int)]
	}).(GetMediaAssetMediaAssetTagOutput)
}

type GetMediaAssetMetadata struct {
	// JSON string containing the technial metadata for the media asset.
	Metadata string `pulumi:"metadata"`
}

// GetMediaAssetMetadataInput is an input type that accepts GetMediaAssetMetadataArgs and GetMediaAssetMetadataOutput values.
// You can construct a concrete instance of `GetMediaAssetMetadataInput` via:
//
//	GetMediaAssetMetadataArgs{...}
type GetMediaAssetMetadataInput interface {
	pulumi.Input

	ToGetMediaAssetMetadataOutput() GetMediaAssetMetadataOutput
	ToGetMediaAssetMetadataOutputWithContext(context.Context) GetMediaAssetMetadataOutput
}

type GetMediaAssetMetadataArgs struct {
	// JSON string containing the technial metadata for the media asset.
	Metadata pulumi.StringInput `pulumi:"metadata"`
}

func (GetMediaAssetMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaAssetMetadata)(nil)).Elem()
}

func (i GetMediaAssetMetadataArgs) ToGetMediaAssetMetadataOutput() GetMediaAssetMetadataOutput {
	return i.ToGetMediaAssetMetadataOutputWithContext(context.Background())
}

func (i GetMediaAssetMetadataArgs) ToGetMediaAssetMetadataOutputWithContext(ctx context.Context) GetMediaAssetMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaAssetMetadataOutput)
}

// GetMediaAssetMetadataArrayInput is an input type that accepts GetMediaAssetMetadataArray and GetMediaAssetMetadataArrayOutput values.
// You can construct a concrete instance of `GetMediaAssetMetadataArrayInput` via:
//
//	GetMediaAssetMetadataArray{ GetMediaAssetMetadataArgs{...} }
type GetMediaAssetMetadataArrayInput interface {
	pulumi.Input

	ToGetMediaAssetMetadataArrayOutput() GetMediaAssetMetadataArrayOutput
	ToGetMediaAssetMetadataArrayOutputWithContext(context.Context) GetMediaAssetMetadataArrayOutput
}

type GetMediaAssetMetadataArray []GetMediaAssetMetadataInput

func (GetMediaAssetMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaAssetMetadata)(nil)).Elem()
}

func (i GetMediaAssetMetadataArray) ToGetMediaAssetMetadataArrayOutput() GetMediaAssetMetadataArrayOutput {
	return i.ToGetMediaAssetMetadataArrayOutputWithContext(context.Background())
}

func (i GetMediaAssetMetadataArray) ToGetMediaAssetMetadataArrayOutputWithContext(ctx context.Context) GetMediaAssetMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaAssetMetadataArrayOutput)
}

type GetMediaAssetMetadataOutput struct{ *pulumi.OutputState }

func (GetMediaAssetMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaAssetMetadata)(nil)).Elem()
}

func (o GetMediaAssetMetadataOutput) ToGetMediaAssetMetadataOutput() GetMediaAssetMetadataOutput {
	return o
}

func (o GetMediaAssetMetadataOutput) ToGetMediaAssetMetadataOutputWithContext(ctx context.Context) GetMediaAssetMetadataOutput {
	return o
}

// JSON string containing the technial metadata for the media asset.
func (o GetMediaAssetMetadataOutput) Metadata() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetMetadata) string { return v.Metadata }).(pulumi.StringOutput)
}

type GetMediaAssetMetadataArrayOutput struct{ *pulumi.OutputState }

func (GetMediaAssetMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaAssetMetadata)(nil)).Elem()
}

func (o GetMediaAssetMetadataArrayOutput) ToGetMediaAssetMetadataArrayOutput() GetMediaAssetMetadataArrayOutput {
	return o
}

func (o GetMediaAssetMetadataArrayOutput) ToGetMediaAssetMetadataArrayOutputWithContext(ctx context.Context) GetMediaAssetMetadataArrayOutput {
	return o
}

func (o GetMediaAssetMetadataArrayOutput) Index(i pulumi.IntInput) GetMediaAssetMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMediaAssetMetadata {
		return vs[0].([]GetMediaAssetMetadata)[vs[1].(int)]
	}).(GetMediaAssetMetadataOutput)
}

type GetMediaAssetsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetMediaAssetsFilterInput is an input type that accepts GetMediaAssetsFilterArgs and GetMediaAssetsFilterOutput values.
// You can construct a concrete instance of `GetMediaAssetsFilterInput` via:
//
//	GetMediaAssetsFilterArgs{...}
type GetMediaAssetsFilterInput interface {
	pulumi.Input

	ToGetMediaAssetsFilterOutput() GetMediaAssetsFilterOutput
	ToGetMediaAssetsFilterOutputWithContext(context.Context) GetMediaAssetsFilterOutput
}

type GetMediaAssetsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetMediaAssetsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaAssetsFilter)(nil)).Elem()
}

func (i GetMediaAssetsFilterArgs) ToGetMediaAssetsFilterOutput() GetMediaAssetsFilterOutput {
	return i.ToGetMediaAssetsFilterOutputWithContext(context.Background())
}

func (i GetMediaAssetsFilterArgs) ToGetMediaAssetsFilterOutputWithContext(ctx context.Context) GetMediaAssetsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaAssetsFilterOutput)
}

// GetMediaAssetsFilterArrayInput is an input type that accepts GetMediaAssetsFilterArray and GetMediaAssetsFilterArrayOutput values.
// You can construct a concrete instance of `GetMediaAssetsFilterArrayInput` via:
//
//	GetMediaAssetsFilterArray{ GetMediaAssetsFilterArgs{...} }
type GetMediaAssetsFilterArrayInput interface {
	pulumi.Input

	ToGetMediaAssetsFilterArrayOutput() GetMediaAssetsFilterArrayOutput
	ToGetMediaAssetsFilterArrayOutputWithContext(context.Context) GetMediaAssetsFilterArrayOutput
}

type GetMediaAssetsFilterArray []GetMediaAssetsFilterInput

func (GetMediaAssetsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaAssetsFilter)(nil)).Elem()
}

func (i GetMediaAssetsFilterArray) ToGetMediaAssetsFilterArrayOutput() GetMediaAssetsFilterArrayOutput {
	return i.ToGetMediaAssetsFilterArrayOutputWithContext(context.Background())
}

func (i GetMediaAssetsFilterArray) ToGetMediaAssetsFilterArrayOutputWithContext(ctx context.Context) GetMediaAssetsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaAssetsFilterArrayOutput)
}

type GetMediaAssetsFilterOutput struct{ *pulumi.OutputState }

func (GetMediaAssetsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaAssetsFilter)(nil)).Elem()
}

func (o GetMediaAssetsFilterOutput) ToGetMediaAssetsFilterOutput() GetMediaAssetsFilterOutput {
	return o
}

func (o GetMediaAssetsFilterOutput) ToGetMediaAssetsFilterOutputWithContext(ctx context.Context) GetMediaAssetsFilterOutput {
	return o
}

func (o GetMediaAssetsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetMediaAssetsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetMediaAssetsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetMediaAssetsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMediaAssetsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetMediaAssetsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetMediaAssetsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaAssetsFilter)(nil)).Elem()
}

func (o GetMediaAssetsFilterArrayOutput) ToGetMediaAssetsFilterArrayOutput() GetMediaAssetsFilterArrayOutput {
	return o
}

func (o GetMediaAssetsFilterArrayOutput) ToGetMediaAssetsFilterArrayOutputWithContext(ctx context.Context) GetMediaAssetsFilterArrayOutput {
	return o
}

func (o GetMediaAssetsFilterArrayOutput) Index(i pulumi.IntInput) GetMediaAssetsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMediaAssetsFilter {
		return vs[0].([]GetMediaAssetsFilter)[vs[1].(int)]
	}).(GetMediaAssetsFilterOutput)
}

type GetMediaAssetsMediaAssetCollection struct {
	Items []GetMediaAssetsMediaAssetCollectionItem `pulumi:"items"`
}

// GetMediaAssetsMediaAssetCollectionInput is an input type that accepts GetMediaAssetsMediaAssetCollectionArgs and GetMediaAssetsMediaAssetCollectionOutput values.
// You can construct a concrete instance of `GetMediaAssetsMediaAssetCollectionInput` via:
//
//	GetMediaAssetsMediaAssetCollectionArgs{...}
type GetMediaAssetsMediaAssetCollectionInput interface {
	pulumi.Input

	ToGetMediaAssetsMediaAssetCollectionOutput() GetMediaAssetsMediaAssetCollectionOutput
	ToGetMediaAssetsMediaAssetCollectionOutputWithContext(context.Context) GetMediaAssetsMediaAssetCollectionOutput
}

type GetMediaAssetsMediaAssetCollectionArgs struct {
	Items GetMediaAssetsMediaAssetCollectionItemArrayInput `pulumi:"items"`
}

func (GetMediaAssetsMediaAssetCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaAssetsMediaAssetCollection)(nil)).Elem()
}

func (i GetMediaAssetsMediaAssetCollectionArgs) ToGetMediaAssetsMediaAssetCollectionOutput() GetMediaAssetsMediaAssetCollectionOutput {
	return i.ToGetMediaAssetsMediaAssetCollectionOutputWithContext(context.Background())
}

func (i GetMediaAssetsMediaAssetCollectionArgs) ToGetMediaAssetsMediaAssetCollectionOutputWithContext(ctx context.Context) GetMediaAssetsMediaAssetCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaAssetsMediaAssetCollectionOutput)
}

// GetMediaAssetsMediaAssetCollectionArrayInput is an input type that accepts GetMediaAssetsMediaAssetCollectionArray and GetMediaAssetsMediaAssetCollectionArrayOutput values.
// You can construct a concrete instance of `GetMediaAssetsMediaAssetCollectionArrayInput` via:
//
//	GetMediaAssetsMediaAssetCollectionArray{ GetMediaAssetsMediaAssetCollectionArgs{...} }
type GetMediaAssetsMediaAssetCollectionArrayInput interface {
	pulumi.Input

	ToGetMediaAssetsMediaAssetCollectionArrayOutput() GetMediaAssetsMediaAssetCollectionArrayOutput
	ToGetMediaAssetsMediaAssetCollectionArrayOutputWithContext(context.Context) GetMediaAssetsMediaAssetCollectionArrayOutput
}

type GetMediaAssetsMediaAssetCollectionArray []GetMediaAssetsMediaAssetCollectionInput

func (GetMediaAssetsMediaAssetCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaAssetsMediaAssetCollection)(nil)).Elem()
}

func (i GetMediaAssetsMediaAssetCollectionArray) ToGetMediaAssetsMediaAssetCollectionArrayOutput() GetMediaAssetsMediaAssetCollectionArrayOutput {
	return i.ToGetMediaAssetsMediaAssetCollectionArrayOutputWithContext(context.Background())
}

func (i GetMediaAssetsMediaAssetCollectionArray) ToGetMediaAssetsMediaAssetCollectionArrayOutputWithContext(ctx context.Context) GetMediaAssetsMediaAssetCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaAssetsMediaAssetCollectionArrayOutput)
}

type GetMediaAssetsMediaAssetCollectionOutput struct{ *pulumi.OutputState }

func (GetMediaAssetsMediaAssetCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaAssetsMediaAssetCollection)(nil)).Elem()
}

func (o GetMediaAssetsMediaAssetCollectionOutput) ToGetMediaAssetsMediaAssetCollectionOutput() GetMediaAssetsMediaAssetCollectionOutput {
	return o
}

func (o GetMediaAssetsMediaAssetCollectionOutput) ToGetMediaAssetsMediaAssetCollectionOutputWithContext(ctx context.Context) GetMediaAssetsMediaAssetCollectionOutput {
	return o
}

func (o GetMediaAssetsMediaAssetCollectionOutput) Items() GetMediaAssetsMediaAssetCollectionItemArrayOutput {
	return o.ApplyT(func(v GetMediaAssetsMediaAssetCollection) []GetMediaAssetsMediaAssetCollectionItem { return v.Items }).(GetMediaAssetsMediaAssetCollectionItemArrayOutput)
}

type GetMediaAssetsMediaAssetCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetMediaAssetsMediaAssetCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaAssetsMediaAssetCollection)(nil)).Elem()
}

func (o GetMediaAssetsMediaAssetCollectionArrayOutput) ToGetMediaAssetsMediaAssetCollectionArrayOutput() GetMediaAssetsMediaAssetCollectionArrayOutput {
	return o
}

func (o GetMediaAssetsMediaAssetCollectionArrayOutput) ToGetMediaAssetsMediaAssetCollectionArrayOutputWithContext(ctx context.Context) GetMediaAssetsMediaAssetCollectionArrayOutput {
	return o
}

func (o GetMediaAssetsMediaAssetCollectionArrayOutput) Index(i pulumi.IntInput) GetMediaAssetsMediaAssetCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMediaAssetsMediaAssetCollection {
		return vs[0].([]GetMediaAssetsMediaAssetCollection)[vs[1].(int)]
	}).(GetMediaAssetsMediaAssetCollectionOutput)
}

type GetMediaAssetsMediaAssetCollectionItem struct {
	// Filter MediaAsset by the bucket where the object is stored.
	Bucket string `pulumi:"bucket"`
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A filter to return only the resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Unique identifier that is immutable on creation.
	Id             string `pulumi:"id"`
	IsLockOverride bool   `pulumi:"isLockOverride"`
	// Locks associated with this resource.
	Locks []GetMediaAssetsMediaAssetCollectionItemLock `pulumi:"locks"`
	// Unique MediaAsset identifier of the first asset upload.
	MasterMediaAssetId string `pulumi:"masterMediaAssetId"`
	// List of tags for the MediaAsset.
	MediaAssetTags []GetMediaAssetsMediaAssetCollectionItemMediaAssetTag `pulumi:"mediaAssetTags"`
	// The ID of the MediaWorkflowJob used to produce this asset, if this parameter is supplied then the workflow ID must also be supplied.
	MediaWorkflowJobId string `pulumi:"mediaWorkflowJobId"`
	// JSON string containing the technial metadata for the media asset.
	Metadatas []GetMediaAssetsMediaAssetCollectionItemMetadata `pulumi:"metadatas"`
	// The object storage namespace where this asset is located.
	Namespace string `pulumi:"namespace"`
	// Filter MediaAsset by the name of the object in object storage.
	Object string `pulumi:"object"`
	// eTag of the underlying object storage object.
	ObjectEtag string `pulumi:"objectEtag"`
	// Unique MediaAsset identifier of the asset from which this asset is derived.
	ParentMediaAssetId string `pulumi:"parentMediaAssetId"`
	// The end index of video segment files.
	SegmentRangeEndIndex string `pulumi:"segmentRangeEndIndex"`
	// The start index for video segment files.
	SegmentRangeStartIndex string `pulumi:"segmentRangeStartIndex"`
	// The ID of the MediaWorkflow used to produce this asset.
	SourceMediaWorkflowId string `pulumi:"sourceMediaWorkflowId"`
	// The version of the MediaWorkflow used to produce this asset.
	SourceMediaWorkflowVersion string `pulumi:"sourceMediaWorkflowVersion"`
	// A filter to return only the resources with lifecycleState matching the given lifecycleState.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time when the MediaAsset was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time when the MediaAsset was updated. An RFC3339 formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
	// Filter MediaAsset by the asset type.
	Type string `pulumi:"type"`
}

// GetMediaAssetsMediaAssetCollectionItemInput is an input type that accepts GetMediaAssetsMediaAssetCollectionItemArgs and GetMediaAssetsMediaAssetCollectionItemOutput values.
// You can construct a concrete instance of `GetMediaAssetsMediaAssetCollectionItemInput` via:
//
//	GetMediaAssetsMediaAssetCollectionItemArgs{...}
type GetMediaAssetsMediaAssetCollectionItemInput interface {
	pulumi.Input

	ToGetMediaAssetsMediaAssetCollectionItemOutput() GetMediaAssetsMediaAssetCollectionItemOutput
	ToGetMediaAssetsMediaAssetCollectionItemOutputWithContext(context.Context) GetMediaAssetsMediaAssetCollectionItemOutput
}

type GetMediaAssetsMediaAssetCollectionItemArgs struct {
	// Filter MediaAsset by the bucket where the object is stored.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// A filter to return only the resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// Unique identifier that is immutable on creation.
	Id             pulumi.StringInput `pulumi:"id"`
	IsLockOverride pulumi.BoolInput   `pulumi:"isLockOverride"`
	// Locks associated with this resource.
	Locks GetMediaAssetsMediaAssetCollectionItemLockArrayInput `pulumi:"locks"`
	// Unique MediaAsset identifier of the first asset upload.
	MasterMediaAssetId pulumi.StringInput `pulumi:"masterMediaAssetId"`
	// List of tags for the MediaAsset.
	MediaAssetTags GetMediaAssetsMediaAssetCollectionItemMediaAssetTagArrayInput `pulumi:"mediaAssetTags"`
	// The ID of the MediaWorkflowJob used to produce this asset, if this parameter is supplied then the workflow ID must also be supplied.
	MediaWorkflowJobId pulumi.StringInput `pulumi:"mediaWorkflowJobId"`
	// JSON string containing the technial metadata for the media asset.
	Metadatas GetMediaAssetsMediaAssetCollectionItemMetadataArrayInput `pulumi:"metadatas"`
	// The object storage namespace where this asset is located.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// Filter MediaAsset by the name of the object in object storage.
	Object pulumi.StringInput `pulumi:"object"`
	// eTag of the underlying object storage object.
	ObjectEtag pulumi.StringInput `pulumi:"objectEtag"`
	// Unique MediaAsset identifier of the asset from which this asset is derived.
	ParentMediaAssetId pulumi.StringInput `pulumi:"parentMediaAssetId"`
	// The end index of video segment files.
	SegmentRangeEndIndex pulumi.StringInput `pulumi:"segmentRangeEndIndex"`
	// The start index for video segment files.
	SegmentRangeStartIndex pulumi.StringInput `pulumi:"segmentRangeStartIndex"`
	// The ID of the MediaWorkflow used to produce this asset.
	SourceMediaWorkflowId pulumi.StringInput `pulumi:"sourceMediaWorkflowId"`
	// The version of the MediaWorkflow used to produce this asset.
	SourceMediaWorkflowVersion pulumi.StringInput `pulumi:"sourceMediaWorkflowVersion"`
	// A filter to return only the resources with lifecycleState matching the given lifecycleState.
	State pulumi.StringInput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput `pulumi:"systemTags"`
	// The time when the MediaAsset was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time when the MediaAsset was updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// Filter MediaAsset by the asset type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetMediaAssetsMediaAssetCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaAssetsMediaAssetCollectionItem)(nil)).Elem()
}

func (i GetMediaAssetsMediaAssetCollectionItemArgs) ToGetMediaAssetsMediaAssetCollectionItemOutput() GetMediaAssetsMediaAssetCollectionItemOutput {
	return i.ToGetMediaAssetsMediaAssetCollectionItemOutputWithContext(context.Background())
}

func (i GetMediaAssetsMediaAssetCollectionItemArgs) ToGetMediaAssetsMediaAssetCollectionItemOutputWithContext(ctx context.Context) GetMediaAssetsMediaAssetCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaAssetsMediaAssetCollectionItemOutput)
}

// GetMediaAssetsMediaAssetCollectionItemArrayInput is an input type that accepts GetMediaAssetsMediaAssetCollectionItemArray and GetMediaAssetsMediaAssetCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetMediaAssetsMediaAssetCollectionItemArrayInput` via:
//
//	GetMediaAssetsMediaAssetCollectionItemArray{ GetMediaAssetsMediaAssetCollectionItemArgs{...} }
type GetMediaAssetsMediaAssetCollectionItemArrayInput interface {
	pulumi.Input

	ToGetMediaAssetsMediaAssetCollectionItemArrayOutput() GetMediaAssetsMediaAssetCollectionItemArrayOutput
	ToGetMediaAssetsMediaAssetCollectionItemArrayOutputWithContext(context.Context) GetMediaAssetsMediaAssetCollectionItemArrayOutput
}

type GetMediaAssetsMediaAssetCollectionItemArray []GetMediaAssetsMediaAssetCollectionItemInput

func (GetMediaAssetsMediaAssetCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaAssetsMediaAssetCollectionItem)(nil)).Elem()
}

func (i GetMediaAssetsMediaAssetCollectionItemArray) ToGetMediaAssetsMediaAssetCollectionItemArrayOutput() GetMediaAssetsMediaAssetCollectionItemArrayOutput {
	return i.ToGetMediaAssetsMediaAssetCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetMediaAssetsMediaAssetCollectionItemArray) ToGetMediaAssetsMediaAssetCollectionItemArrayOutputWithContext(ctx context.Context) GetMediaAssetsMediaAssetCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaAssetsMediaAssetCollectionItemArrayOutput)
}

type GetMediaAssetsMediaAssetCollectionItemOutput struct{ *pulumi.OutputState }

func (GetMediaAssetsMediaAssetCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaAssetsMediaAssetCollectionItem)(nil)).Elem()
}

func (o GetMediaAssetsMediaAssetCollectionItemOutput) ToGetMediaAssetsMediaAssetCollectionItemOutput() GetMediaAssetsMediaAssetCollectionItemOutput {
	return o
}

func (o GetMediaAssetsMediaAssetCollectionItemOutput) ToGetMediaAssetsMediaAssetCollectionItemOutputWithContext(ctx context.Context) GetMediaAssetsMediaAssetCollectionItemOutput {
	return o
}

// Filter MediaAsset by the bucket where the object is stored.
func (o GetMediaAssetsMediaAssetCollectionItemOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetsMediaAssetCollectionItem) string { return v.Bucket }).(pulumi.StringOutput)
}

// The ID of the compartment in which to list resources.
func (o GetMediaAssetsMediaAssetCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetsMediaAssetCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetMediaAssetsMediaAssetCollectionItemOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMediaAssetsMediaAssetCollectionItem) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A filter to return only the resources that match the entire display name given.
func (o GetMediaAssetsMediaAssetCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetsMediaAssetCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetMediaAssetsMediaAssetCollectionItemOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMediaAssetsMediaAssetCollectionItem) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Unique identifier that is immutable on creation.
func (o GetMediaAssetsMediaAssetCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetsMediaAssetCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetMediaAssetsMediaAssetCollectionItemOutput) IsLockOverride() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMediaAssetsMediaAssetCollectionItem) bool { return v.IsLockOverride }).(pulumi.BoolOutput)
}

// Locks associated with this resource.
func (o GetMediaAssetsMediaAssetCollectionItemOutput) Locks() GetMediaAssetsMediaAssetCollectionItemLockArrayOutput {
	return o.ApplyT(func(v GetMediaAssetsMediaAssetCollectionItem) []GetMediaAssetsMediaAssetCollectionItemLock {
		return v.Locks
	}).(GetMediaAssetsMediaAssetCollectionItemLockArrayOutput)
}

// Unique MediaAsset identifier of the first asset upload.
func (o GetMediaAssetsMediaAssetCollectionItemOutput) MasterMediaAssetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetsMediaAssetCollectionItem) string { return v.MasterMediaAssetId }).(pulumi.StringOutput)
}

// List of tags for the MediaAsset.
func (o GetMediaAssetsMediaAssetCollectionItemOutput) MediaAssetTags() GetMediaAssetsMediaAssetCollectionItemMediaAssetTagArrayOutput {
	return o.ApplyT(func(v GetMediaAssetsMediaAssetCollectionItem) []GetMediaAssetsMediaAssetCollectionItemMediaAssetTag {
		return v.MediaAssetTags
	}).(GetMediaAssetsMediaAssetCollectionItemMediaAssetTagArrayOutput)
}

// The ID of the MediaWorkflowJob used to produce this asset, if this parameter is supplied then the workflow ID must also be supplied.
func (o GetMediaAssetsMediaAssetCollectionItemOutput) MediaWorkflowJobId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetsMediaAssetCollectionItem) string { return v.MediaWorkflowJobId }).(pulumi.StringOutput)
}

// JSON string containing the technial metadata for the media asset.
func (o GetMediaAssetsMediaAssetCollectionItemOutput) Metadatas() GetMediaAssetsMediaAssetCollectionItemMetadataArrayOutput {
	return o.ApplyT(func(v GetMediaAssetsMediaAssetCollectionItem) []GetMediaAssetsMediaAssetCollectionItemMetadata {
		return v.Metadatas
	}).(GetMediaAssetsMediaAssetCollectionItemMetadataArrayOutput)
}

// The object storage namespace where this asset is located.
func (o GetMediaAssetsMediaAssetCollectionItemOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetsMediaAssetCollectionItem) string { return v.Namespace }).(pulumi.StringOutput)
}

// Filter MediaAsset by the name of the object in object storage.
func (o GetMediaAssetsMediaAssetCollectionItemOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetsMediaAssetCollectionItem) string { return v.Object }).(pulumi.StringOutput)
}

// eTag of the underlying object storage object.
func (o GetMediaAssetsMediaAssetCollectionItemOutput) ObjectEtag() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetsMediaAssetCollectionItem) string { return v.ObjectEtag }).(pulumi.StringOutput)
}

// Unique MediaAsset identifier of the asset from which this asset is derived.
func (o GetMediaAssetsMediaAssetCollectionItemOutput) ParentMediaAssetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetsMediaAssetCollectionItem) string { return v.ParentMediaAssetId }).(pulumi.StringOutput)
}

// The end index of video segment files.
func (o GetMediaAssetsMediaAssetCollectionItemOutput) SegmentRangeEndIndex() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetsMediaAssetCollectionItem) string { return v.SegmentRangeEndIndex }).(pulumi.StringOutput)
}

// The start index for video segment files.
func (o GetMediaAssetsMediaAssetCollectionItemOutput) SegmentRangeStartIndex() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetsMediaAssetCollectionItem) string { return v.SegmentRangeStartIndex }).(pulumi.StringOutput)
}

// The ID of the MediaWorkflow used to produce this asset.
func (o GetMediaAssetsMediaAssetCollectionItemOutput) SourceMediaWorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetsMediaAssetCollectionItem) string { return v.SourceMediaWorkflowId }).(pulumi.StringOutput)
}

// The version of the MediaWorkflow used to produce this asset.
func (o GetMediaAssetsMediaAssetCollectionItemOutput) SourceMediaWorkflowVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetsMediaAssetCollectionItem) string { return v.SourceMediaWorkflowVersion }).(pulumi.StringOutput)
}

// A filter to return only the resources with lifecycleState matching the given lifecycleState.
func (o GetMediaAssetsMediaAssetCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetsMediaAssetCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetMediaAssetsMediaAssetCollectionItemOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMediaAssetsMediaAssetCollectionItem) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The time when the MediaAsset was created. An RFC3339 formatted datetime string.
func (o GetMediaAssetsMediaAssetCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetsMediaAssetCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time when the MediaAsset was updated. An RFC3339 formatted datetime string.
func (o GetMediaAssetsMediaAssetCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetsMediaAssetCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Filter MediaAsset by the asset type.
func (o GetMediaAssetsMediaAssetCollectionItemOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetsMediaAssetCollectionItem) string { return v.Type }).(pulumi.StringOutput)
}

type GetMediaAssetsMediaAssetCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetMediaAssetsMediaAssetCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaAssetsMediaAssetCollectionItem)(nil)).Elem()
}

func (o GetMediaAssetsMediaAssetCollectionItemArrayOutput) ToGetMediaAssetsMediaAssetCollectionItemArrayOutput() GetMediaAssetsMediaAssetCollectionItemArrayOutput {
	return o
}

func (o GetMediaAssetsMediaAssetCollectionItemArrayOutput) ToGetMediaAssetsMediaAssetCollectionItemArrayOutputWithContext(ctx context.Context) GetMediaAssetsMediaAssetCollectionItemArrayOutput {
	return o
}

func (o GetMediaAssetsMediaAssetCollectionItemArrayOutput) Index(i pulumi.IntInput) GetMediaAssetsMediaAssetCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMediaAssetsMediaAssetCollectionItem {
		return vs[0].([]GetMediaAssetsMediaAssetCollectionItem)[vs[1].(int)]
	}).(GetMediaAssetsMediaAssetCollectionItemOutput)
}

type GetMediaAssetsMediaAssetCollectionItemLock struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message string `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId string `pulumi:"relatedResourceId"`
	// The time when the MediaAsset was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// Filter MediaAsset by the asset type.
	Type string `pulumi:"type"`
}

// GetMediaAssetsMediaAssetCollectionItemLockInput is an input type that accepts GetMediaAssetsMediaAssetCollectionItemLockArgs and GetMediaAssetsMediaAssetCollectionItemLockOutput values.
// You can construct a concrete instance of `GetMediaAssetsMediaAssetCollectionItemLockInput` via:
//
//	GetMediaAssetsMediaAssetCollectionItemLockArgs{...}
type GetMediaAssetsMediaAssetCollectionItemLockInput interface {
	pulumi.Input

	ToGetMediaAssetsMediaAssetCollectionItemLockOutput() GetMediaAssetsMediaAssetCollectionItemLockOutput
	ToGetMediaAssetsMediaAssetCollectionItemLockOutputWithContext(context.Context) GetMediaAssetsMediaAssetCollectionItemLockOutput
}

type GetMediaAssetsMediaAssetCollectionItemLockArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message pulumi.StringInput `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId pulumi.StringInput `pulumi:"relatedResourceId"`
	// The time when the MediaAsset was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// Filter MediaAsset by the asset type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetMediaAssetsMediaAssetCollectionItemLockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaAssetsMediaAssetCollectionItemLock)(nil)).Elem()
}

func (i GetMediaAssetsMediaAssetCollectionItemLockArgs) ToGetMediaAssetsMediaAssetCollectionItemLockOutput() GetMediaAssetsMediaAssetCollectionItemLockOutput {
	return i.ToGetMediaAssetsMediaAssetCollectionItemLockOutputWithContext(context.Background())
}

func (i GetMediaAssetsMediaAssetCollectionItemLockArgs) ToGetMediaAssetsMediaAssetCollectionItemLockOutputWithContext(ctx context.Context) GetMediaAssetsMediaAssetCollectionItemLockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaAssetsMediaAssetCollectionItemLockOutput)
}

// GetMediaAssetsMediaAssetCollectionItemLockArrayInput is an input type that accepts GetMediaAssetsMediaAssetCollectionItemLockArray and GetMediaAssetsMediaAssetCollectionItemLockArrayOutput values.
// You can construct a concrete instance of `GetMediaAssetsMediaAssetCollectionItemLockArrayInput` via:
//
//	GetMediaAssetsMediaAssetCollectionItemLockArray{ GetMediaAssetsMediaAssetCollectionItemLockArgs{...} }
type GetMediaAssetsMediaAssetCollectionItemLockArrayInput interface {
	pulumi.Input

	ToGetMediaAssetsMediaAssetCollectionItemLockArrayOutput() GetMediaAssetsMediaAssetCollectionItemLockArrayOutput
	ToGetMediaAssetsMediaAssetCollectionItemLockArrayOutputWithContext(context.Context) GetMediaAssetsMediaAssetCollectionItemLockArrayOutput
}

type GetMediaAssetsMediaAssetCollectionItemLockArray []GetMediaAssetsMediaAssetCollectionItemLockInput

func (GetMediaAssetsMediaAssetCollectionItemLockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaAssetsMediaAssetCollectionItemLock)(nil)).Elem()
}

func (i GetMediaAssetsMediaAssetCollectionItemLockArray) ToGetMediaAssetsMediaAssetCollectionItemLockArrayOutput() GetMediaAssetsMediaAssetCollectionItemLockArrayOutput {
	return i.ToGetMediaAssetsMediaAssetCollectionItemLockArrayOutputWithContext(context.Background())
}

func (i GetMediaAssetsMediaAssetCollectionItemLockArray) ToGetMediaAssetsMediaAssetCollectionItemLockArrayOutputWithContext(ctx context.Context) GetMediaAssetsMediaAssetCollectionItemLockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaAssetsMediaAssetCollectionItemLockArrayOutput)
}

type GetMediaAssetsMediaAssetCollectionItemLockOutput struct{ *pulumi.OutputState }

func (GetMediaAssetsMediaAssetCollectionItemLockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaAssetsMediaAssetCollectionItemLock)(nil)).Elem()
}

func (o GetMediaAssetsMediaAssetCollectionItemLockOutput) ToGetMediaAssetsMediaAssetCollectionItemLockOutput() GetMediaAssetsMediaAssetCollectionItemLockOutput {
	return o
}

func (o GetMediaAssetsMediaAssetCollectionItemLockOutput) ToGetMediaAssetsMediaAssetCollectionItemLockOutputWithContext(ctx context.Context) GetMediaAssetsMediaAssetCollectionItemLockOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetMediaAssetsMediaAssetCollectionItemLockOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetsMediaAssetCollectionItemLock) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
func (o GetMediaAssetsMediaAssetCollectionItemLockOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetsMediaAssetCollectionItemLock) string { return v.Message }).(pulumi.StringOutput)
}

// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
func (o GetMediaAssetsMediaAssetCollectionItemLockOutput) RelatedResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetsMediaAssetCollectionItemLock) string { return v.RelatedResourceId }).(pulumi.StringOutput)
}

// The time when the MediaAsset was created. An RFC3339 formatted datetime string.
func (o GetMediaAssetsMediaAssetCollectionItemLockOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetsMediaAssetCollectionItemLock) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Filter MediaAsset by the asset type.
func (o GetMediaAssetsMediaAssetCollectionItemLockOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetsMediaAssetCollectionItemLock) string { return v.Type }).(pulumi.StringOutput)
}

type GetMediaAssetsMediaAssetCollectionItemLockArrayOutput struct{ *pulumi.OutputState }

func (GetMediaAssetsMediaAssetCollectionItemLockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaAssetsMediaAssetCollectionItemLock)(nil)).Elem()
}

func (o GetMediaAssetsMediaAssetCollectionItemLockArrayOutput) ToGetMediaAssetsMediaAssetCollectionItemLockArrayOutput() GetMediaAssetsMediaAssetCollectionItemLockArrayOutput {
	return o
}

func (o GetMediaAssetsMediaAssetCollectionItemLockArrayOutput) ToGetMediaAssetsMediaAssetCollectionItemLockArrayOutputWithContext(ctx context.Context) GetMediaAssetsMediaAssetCollectionItemLockArrayOutput {
	return o
}

func (o GetMediaAssetsMediaAssetCollectionItemLockArrayOutput) Index(i pulumi.IntInput) GetMediaAssetsMediaAssetCollectionItemLockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMediaAssetsMediaAssetCollectionItemLock {
		return vs[0].([]GetMediaAssetsMediaAssetCollectionItemLock)[vs[1].(int)]
	}).(GetMediaAssetsMediaAssetCollectionItemLockOutput)
}

type GetMediaAssetsMediaAssetCollectionItemMediaAssetTag struct {
	// Filter MediaAsset by the asset type.
	Type string `pulumi:"type"`
	// Tag of the MediaAsset.
	Value string `pulumi:"value"`
}

// GetMediaAssetsMediaAssetCollectionItemMediaAssetTagInput is an input type that accepts GetMediaAssetsMediaAssetCollectionItemMediaAssetTagArgs and GetMediaAssetsMediaAssetCollectionItemMediaAssetTagOutput values.
// You can construct a concrete instance of `GetMediaAssetsMediaAssetCollectionItemMediaAssetTagInput` via:
//
//	GetMediaAssetsMediaAssetCollectionItemMediaAssetTagArgs{...}
type GetMediaAssetsMediaAssetCollectionItemMediaAssetTagInput interface {
	pulumi.Input

	ToGetMediaAssetsMediaAssetCollectionItemMediaAssetTagOutput() GetMediaAssetsMediaAssetCollectionItemMediaAssetTagOutput
	ToGetMediaAssetsMediaAssetCollectionItemMediaAssetTagOutputWithContext(context.Context) GetMediaAssetsMediaAssetCollectionItemMediaAssetTagOutput
}

type GetMediaAssetsMediaAssetCollectionItemMediaAssetTagArgs struct {
	// Filter MediaAsset by the asset type.
	Type pulumi.StringInput `pulumi:"type"`
	// Tag of the MediaAsset.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetMediaAssetsMediaAssetCollectionItemMediaAssetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaAssetsMediaAssetCollectionItemMediaAssetTag)(nil)).Elem()
}

func (i GetMediaAssetsMediaAssetCollectionItemMediaAssetTagArgs) ToGetMediaAssetsMediaAssetCollectionItemMediaAssetTagOutput() GetMediaAssetsMediaAssetCollectionItemMediaAssetTagOutput {
	return i.ToGetMediaAssetsMediaAssetCollectionItemMediaAssetTagOutputWithContext(context.Background())
}

func (i GetMediaAssetsMediaAssetCollectionItemMediaAssetTagArgs) ToGetMediaAssetsMediaAssetCollectionItemMediaAssetTagOutputWithContext(ctx context.Context) GetMediaAssetsMediaAssetCollectionItemMediaAssetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaAssetsMediaAssetCollectionItemMediaAssetTagOutput)
}

// GetMediaAssetsMediaAssetCollectionItemMediaAssetTagArrayInput is an input type that accepts GetMediaAssetsMediaAssetCollectionItemMediaAssetTagArray and GetMediaAssetsMediaAssetCollectionItemMediaAssetTagArrayOutput values.
// You can construct a concrete instance of `GetMediaAssetsMediaAssetCollectionItemMediaAssetTagArrayInput` via:
//
//	GetMediaAssetsMediaAssetCollectionItemMediaAssetTagArray{ GetMediaAssetsMediaAssetCollectionItemMediaAssetTagArgs{...} }
type GetMediaAssetsMediaAssetCollectionItemMediaAssetTagArrayInput interface {
	pulumi.Input

	ToGetMediaAssetsMediaAssetCollectionItemMediaAssetTagArrayOutput() GetMediaAssetsMediaAssetCollectionItemMediaAssetTagArrayOutput
	ToGetMediaAssetsMediaAssetCollectionItemMediaAssetTagArrayOutputWithContext(context.Context) GetMediaAssetsMediaAssetCollectionItemMediaAssetTagArrayOutput
}

type GetMediaAssetsMediaAssetCollectionItemMediaAssetTagArray []GetMediaAssetsMediaAssetCollectionItemMediaAssetTagInput

func (GetMediaAssetsMediaAssetCollectionItemMediaAssetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaAssetsMediaAssetCollectionItemMediaAssetTag)(nil)).Elem()
}

func (i GetMediaAssetsMediaAssetCollectionItemMediaAssetTagArray) ToGetMediaAssetsMediaAssetCollectionItemMediaAssetTagArrayOutput() GetMediaAssetsMediaAssetCollectionItemMediaAssetTagArrayOutput {
	return i.ToGetMediaAssetsMediaAssetCollectionItemMediaAssetTagArrayOutputWithContext(context.Background())
}

func (i GetMediaAssetsMediaAssetCollectionItemMediaAssetTagArray) ToGetMediaAssetsMediaAssetCollectionItemMediaAssetTagArrayOutputWithContext(ctx context.Context) GetMediaAssetsMediaAssetCollectionItemMediaAssetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaAssetsMediaAssetCollectionItemMediaAssetTagArrayOutput)
}

type GetMediaAssetsMediaAssetCollectionItemMediaAssetTagOutput struct{ *pulumi.OutputState }

func (GetMediaAssetsMediaAssetCollectionItemMediaAssetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaAssetsMediaAssetCollectionItemMediaAssetTag)(nil)).Elem()
}

func (o GetMediaAssetsMediaAssetCollectionItemMediaAssetTagOutput) ToGetMediaAssetsMediaAssetCollectionItemMediaAssetTagOutput() GetMediaAssetsMediaAssetCollectionItemMediaAssetTagOutput {
	return o
}

func (o GetMediaAssetsMediaAssetCollectionItemMediaAssetTagOutput) ToGetMediaAssetsMediaAssetCollectionItemMediaAssetTagOutputWithContext(ctx context.Context) GetMediaAssetsMediaAssetCollectionItemMediaAssetTagOutput {
	return o
}

// Filter MediaAsset by the asset type.
func (o GetMediaAssetsMediaAssetCollectionItemMediaAssetTagOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetsMediaAssetCollectionItemMediaAssetTag) string { return v.Type }).(pulumi.StringOutput)
}

// Tag of the MediaAsset.
func (o GetMediaAssetsMediaAssetCollectionItemMediaAssetTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetsMediaAssetCollectionItemMediaAssetTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetMediaAssetsMediaAssetCollectionItemMediaAssetTagArrayOutput struct{ *pulumi.OutputState }

func (GetMediaAssetsMediaAssetCollectionItemMediaAssetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaAssetsMediaAssetCollectionItemMediaAssetTag)(nil)).Elem()
}

func (o GetMediaAssetsMediaAssetCollectionItemMediaAssetTagArrayOutput) ToGetMediaAssetsMediaAssetCollectionItemMediaAssetTagArrayOutput() GetMediaAssetsMediaAssetCollectionItemMediaAssetTagArrayOutput {
	return o
}

func (o GetMediaAssetsMediaAssetCollectionItemMediaAssetTagArrayOutput) ToGetMediaAssetsMediaAssetCollectionItemMediaAssetTagArrayOutputWithContext(ctx context.Context) GetMediaAssetsMediaAssetCollectionItemMediaAssetTagArrayOutput {
	return o
}

func (o GetMediaAssetsMediaAssetCollectionItemMediaAssetTagArrayOutput) Index(i pulumi.IntInput) GetMediaAssetsMediaAssetCollectionItemMediaAssetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMediaAssetsMediaAssetCollectionItemMediaAssetTag {
		return vs[0].([]GetMediaAssetsMediaAssetCollectionItemMediaAssetTag)[vs[1].(int)]
	}).(GetMediaAssetsMediaAssetCollectionItemMediaAssetTagOutput)
}

type GetMediaAssetsMediaAssetCollectionItemMetadata struct {
	// JSON string containing the technial metadata for the media asset.
	Metadata string `pulumi:"metadata"`
}

// GetMediaAssetsMediaAssetCollectionItemMetadataInput is an input type that accepts GetMediaAssetsMediaAssetCollectionItemMetadataArgs and GetMediaAssetsMediaAssetCollectionItemMetadataOutput values.
// You can construct a concrete instance of `GetMediaAssetsMediaAssetCollectionItemMetadataInput` via:
//
//	GetMediaAssetsMediaAssetCollectionItemMetadataArgs{...}
type GetMediaAssetsMediaAssetCollectionItemMetadataInput interface {
	pulumi.Input

	ToGetMediaAssetsMediaAssetCollectionItemMetadataOutput() GetMediaAssetsMediaAssetCollectionItemMetadataOutput
	ToGetMediaAssetsMediaAssetCollectionItemMetadataOutputWithContext(context.Context) GetMediaAssetsMediaAssetCollectionItemMetadataOutput
}

type GetMediaAssetsMediaAssetCollectionItemMetadataArgs struct {
	// JSON string containing the technial metadata for the media asset.
	Metadata pulumi.StringInput `pulumi:"metadata"`
}

func (GetMediaAssetsMediaAssetCollectionItemMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaAssetsMediaAssetCollectionItemMetadata)(nil)).Elem()
}

func (i GetMediaAssetsMediaAssetCollectionItemMetadataArgs) ToGetMediaAssetsMediaAssetCollectionItemMetadataOutput() GetMediaAssetsMediaAssetCollectionItemMetadataOutput {
	return i.ToGetMediaAssetsMediaAssetCollectionItemMetadataOutputWithContext(context.Background())
}

func (i GetMediaAssetsMediaAssetCollectionItemMetadataArgs) ToGetMediaAssetsMediaAssetCollectionItemMetadataOutputWithContext(ctx context.Context) GetMediaAssetsMediaAssetCollectionItemMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaAssetsMediaAssetCollectionItemMetadataOutput)
}

// GetMediaAssetsMediaAssetCollectionItemMetadataArrayInput is an input type that accepts GetMediaAssetsMediaAssetCollectionItemMetadataArray and GetMediaAssetsMediaAssetCollectionItemMetadataArrayOutput values.
// You can construct a concrete instance of `GetMediaAssetsMediaAssetCollectionItemMetadataArrayInput` via:
//
//	GetMediaAssetsMediaAssetCollectionItemMetadataArray{ GetMediaAssetsMediaAssetCollectionItemMetadataArgs{...} }
type GetMediaAssetsMediaAssetCollectionItemMetadataArrayInput interface {
	pulumi.Input

	ToGetMediaAssetsMediaAssetCollectionItemMetadataArrayOutput() GetMediaAssetsMediaAssetCollectionItemMetadataArrayOutput
	ToGetMediaAssetsMediaAssetCollectionItemMetadataArrayOutputWithContext(context.Context) GetMediaAssetsMediaAssetCollectionItemMetadataArrayOutput
}

type GetMediaAssetsMediaAssetCollectionItemMetadataArray []GetMediaAssetsMediaAssetCollectionItemMetadataInput

func (GetMediaAssetsMediaAssetCollectionItemMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaAssetsMediaAssetCollectionItemMetadata)(nil)).Elem()
}

func (i GetMediaAssetsMediaAssetCollectionItemMetadataArray) ToGetMediaAssetsMediaAssetCollectionItemMetadataArrayOutput() GetMediaAssetsMediaAssetCollectionItemMetadataArrayOutput {
	return i.ToGetMediaAssetsMediaAssetCollectionItemMetadataArrayOutputWithContext(context.Background())
}

func (i GetMediaAssetsMediaAssetCollectionItemMetadataArray) ToGetMediaAssetsMediaAssetCollectionItemMetadataArrayOutputWithContext(ctx context.Context) GetMediaAssetsMediaAssetCollectionItemMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaAssetsMediaAssetCollectionItemMetadataArrayOutput)
}

type GetMediaAssetsMediaAssetCollectionItemMetadataOutput struct{ *pulumi.OutputState }

func (GetMediaAssetsMediaAssetCollectionItemMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaAssetsMediaAssetCollectionItemMetadata)(nil)).Elem()
}

func (o GetMediaAssetsMediaAssetCollectionItemMetadataOutput) ToGetMediaAssetsMediaAssetCollectionItemMetadataOutput() GetMediaAssetsMediaAssetCollectionItemMetadataOutput {
	return o
}

func (o GetMediaAssetsMediaAssetCollectionItemMetadataOutput) ToGetMediaAssetsMediaAssetCollectionItemMetadataOutputWithContext(ctx context.Context) GetMediaAssetsMediaAssetCollectionItemMetadataOutput {
	return o
}

// JSON string containing the technial metadata for the media asset.
func (o GetMediaAssetsMediaAssetCollectionItemMetadataOutput) Metadata() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaAssetsMediaAssetCollectionItemMetadata) string { return v.Metadata }).(pulumi.StringOutput)
}

type GetMediaAssetsMediaAssetCollectionItemMetadataArrayOutput struct{ *pulumi.OutputState }

func (GetMediaAssetsMediaAssetCollectionItemMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaAssetsMediaAssetCollectionItemMetadata)(nil)).Elem()
}

func (o GetMediaAssetsMediaAssetCollectionItemMetadataArrayOutput) ToGetMediaAssetsMediaAssetCollectionItemMetadataArrayOutput() GetMediaAssetsMediaAssetCollectionItemMetadataArrayOutput {
	return o
}

func (o GetMediaAssetsMediaAssetCollectionItemMetadataArrayOutput) ToGetMediaAssetsMediaAssetCollectionItemMetadataArrayOutputWithContext(ctx context.Context) GetMediaAssetsMediaAssetCollectionItemMetadataArrayOutput {
	return o
}

func (o GetMediaAssetsMediaAssetCollectionItemMetadataArrayOutput) Index(i pulumi.IntInput) GetMediaAssetsMediaAssetCollectionItemMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMediaAssetsMediaAssetCollectionItemMetadata {
		return vs[0].([]GetMediaAssetsMediaAssetCollectionItemMetadata)[vs[1].(int)]
	}).(GetMediaAssetsMediaAssetCollectionItemMetadataOutput)
}

type GetMediaWorkflowConfigurationLock struct {
	// The compartment ID of the lock.
	CompartmentId string `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message string `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId string `pulumi:"relatedResourceId"`
	// The time when the the MediaWorkflowConfiguration was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// Type of the lock.
	Type string `pulumi:"type"`
}

// GetMediaWorkflowConfigurationLockInput is an input type that accepts GetMediaWorkflowConfigurationLockArgs and GetMediaWorkflowConfigurationLockOutput values.
// You can construct a concrete instance of `GetMediaWorkflowConfigurationLockInput` via:
//
//	GetMediaWorkflowConfigurationLockArgs{...}
type GetMediaWorkflowConfigurationLockInput interface {
	pulumi.Input

	ToGetMediaWorkflowConfigurationLockOutput() GetMediaWorkflowConfigurationLockOutput
	ToGetMediaWorkflowConfigurationLockOutputWithContext(context.Context) GetMediaWorkflowConfigurationLockOutput
}

type GetMediaWorkflowConfigurationLockArgs struct {
	// The compartment ID of the lock.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message pulumi.StringInput `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId pulumi.StringInput `pulumi:"relatedResourceId"`
	// The time when the the MediaWorkflowConfiguration was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// Type of the lock.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetMediaWorkflowConfigurationLockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowConfigurationLock)(nil)).Elem()
}

func (i GetMediaWorkflowConfigurationLockArgs) ToGetMediaWorkflowConfigurationLockOutput() GetMediaWorkflowConfigurationLockOutput {
	return i.ToGetMediaWorkflowConfigurationLockOutputWithContext(context.Background())
}

func (i GetMediaWorkflowConfigurationLockArgs) ToGetMediaWorkflowConfigurationLockOutputWithContext(ctx context.Context) GetMediaWorkflowConfigurationLockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowConfigurationLockOutput)
}

// GetMediaWorkflowConfigurationLockArrayInput is an input type that accepts GetMediaWorkflowConfigurationLockArray and GetMediaWorkflowConfigurationLockArrayOutput values.
// You can construct a concrete instance of `GetMediaWorkflowConfigurationLockArrayInput` via:
//
//	GetMediaWorkflowConfigurationLockArray{ GetMediaWorkflowConfigurationLockArgs{...} }
type GetMediaWorkflowConfigurationLockArrayInput interface {
	pulumi.Input

	ToGetMediaWorkflowConfigurationLockArrayOutput() GetMediaWorkflowConfigurationLockArrayOutput
	ToGetMediaWorkflowConfigurationLockArrayOutputWithContext(context.Context) GetMediaWorkflowConfigurationLockArrayOutput
}

type GetMediaWorkflowConfigurationLockArray []GetMediaWorkflowConfigurationLockInput

func (GetMediaWorkflowConfigurationLockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowConfigurationLock)(nil)).Elem()
}

func (i GetMediaWorkflowConfigurationLockArray) ToGetMediaWorkflowConfigurationLockArrayOutput() GetMediaWorkflowConfigurationLockArrayOutput {
	return i.ToGetMediaWorkflowConfigurationLockArrayOutputWithContext(context.Background())
}

func (i GetMediaWorkflowConfigurationLockArray) ToGetMediaWorkflowConfigurationLockArrayOutputWithContext(ctx context.Context) GetMediaWorkflowConfigurationLockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowConfigurationLockArrayOutput)
}

type GetMediaWorkflowConfigurationLockOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowConfigurationLockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowConfigurationLock)(nil)).Elem()
}

func (o GetMediaWorkflowConfigurationLockOutput) ToGetMediaWorkflowConfigurationLockOutput() GetMediaWorkflowConfigurationLockOutput {
	return o
}

func (o GetMediaWorkflowConfigurationLockOutput) ToGetMediaWorkflowConfigurationLockOutputWithContext(ctx context.Context) GetMediaWorkflowConfigurationLockOutput {
	return o
}

// The compartment ID of the lock.
func (o GetMediaWorkflowConfigurationLockOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowConfigurationLock) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
func (o GetMediaWorkflowConfigurationLockOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowConfigurationLock) string { return v.Message }).(pulumi.StringOutput)
}

// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
func (o GetMediaWorkflowConfigurationLockOutput) RelatedResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowConfigurationLock) string { return v.RelatedResourceId }).(pulumi.StringOutput)
}

// The time when the the MediaWorkflowConfiguration was created. An RFC3339 formatted datetime string.
func (o GetMediaWorkflowConfigurationLockOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowConfigurationLock) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Type of the lock.
func (o GetMediaWorkflowConfigurationLockOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowConfigurationLock) string { return v.Type }).(pulumi.StringOutput)
}

type GetMediaWorkflowConfigurationLockArrayOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowConfigurationLockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowConfigurationLock)(nil)).Elem()
}

func (o GetMediaWorkflowConfigurationLockArrayOutput) ToGetMediaWorkflowConfigurationLockArrayOutput() GetMediaWorkflowConfigurationLockArrayOutput {
	return o
}

func (o GetMediaWorkflowConfigurationLockArrayOutput) ToGetMediaWorkflowConfigurationLockArrayOutputWithContext(ctx context.Context) GetMediaWorkflowConfigurationLockArrayOutput {
	return o
}

func (o GetMediaWorkflowConfigurationLockArrayOutput) Index(i pulumi.IntInput) GetMediaWorkflowConfigurationLockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMediaWorkflowConfigurationLock {
		return vs[0].([]GetMediaWorkflowConfigurationLock)[vs[1].(int)]
	}).(GetMediaWorkflowConfigurationLockOutput)
}

type GetMediaWorkflowConfigurationsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetMediaWorkflowConfigurationsFilterInput is an input type that accepts GetMediaWorkflowConfigurationsFilterArgs and GetMediaWorkflowConfigurationsFilterOutput values.
// You can construct a concrete instance of `GetMediaWorkflowConfigurationsFilterInput` via:
//
//	GetMediaWorkflowConfigurationsFilterArgs{...}
type GetMediaWorkflowConfigurationsFilterInput interface {
	pulumi.Input

	ToGetMediaWorkflowConfigurationsFilterOutput() GetMediaWorkflowConfigurationsFilterOutput
	ToGetMediaWorkflowConfigurationsFilterOutputWithContext(context.Context) GetMediaWorkflowConfigurationsFilterOutput
}

type GetMediaWorkflowConfigurationsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetMediaWorkflowConfigurationsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowConfigurationsFilter)(nil)).Elem()
}

func (i GetMediaWorkflowConfigurationsFilterArgs) ToGetMediaWorkflowConfigurationsFilterOutput() GetMediaWorkflowConfigurationsFilterOutput {
	return i.ToGetMediaWorkflowConfigurationsFilterOutputWithContext(context.Background())
}

func (i GetMediaWorkflowConfigurationsFilterArgs) ToGetMediaWorkflowConfigurationsFilterOutputWithContext(ctx context.Context) GetMediaWorkflowConfigurationsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowConfigurationsFilterOutput)
}

// GetMediaWorkflowConfigurationsFilterArrayInput is an input type that accepts GetMediaWorkflowConfigurationsFilterArray and GetMediaWorkflowConfigurationsFilterArrayOutput values.
// You can construct a concrete instance of `GetMediaWorkflowConfigurationsFilterArrayInput` via:
//
//	GetMediaWorkflowConfigurationsFilterArray{ GetMediaWorkflowConfigurationsFilterArgs{...} }
type GetMediaWorkflowConfigurationsFilterArrayInput interface {
	pulumi.Input

	ToGetMediaWorkflowConfigurationsFilterArrayOutput() GetMediaWorkflowConfigurationsFilterArrayOutput
	ToGetMediaWorkflowConfigurationsFilterArrayOutputWithContext(context.Context) GetMediaWorkflowConfigurationsFilterArrayOutput
}

type GetMediaWorkflowConfigurationsFilterArray []GetMediaWorkflowConfigurationsFilterInput

func (GetMediaWorkflowConfigurationsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowConfigurationsFilter)(nil)).Elem()
}

func (i GetMediaWorkflowConfigurationsFilterArray) ToGetMediaWorkflowConfigurationsFilterArrayOutput() GetMediaWorkflowConfigurationsFilterArrayOutput {
	return i.ToGetMediaWorkflowConfigurationsFilterArrayOutputWithContext(context.Background())
}

func (i GetMediaWorkflowConfigurationsFilterArray) ToGetMediaWorkflowConfigurationsFilterArrayOutputWithContext(ctx context.Context) GetMediaWorkflowConfigurationsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowConfigurationsFilterArrayOutput)
}

type GetMediaWorkflowConfigurationsFilterOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowConfigurationsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowConfigurationsFilter)(nil)).Elem()
}

func (o GetMediaWorkflowConfigurationsFilterOutput) ToGetMediaWorkflowConfigurationsFilterOutput() GetMediaWorkflowConfigurationsFilterOutput {
	return o
}

func (o GetMediaWorkflowConfigurationsFilterOutput) ToGetMediaWorkflowConfigurationsFilterOutputWithContext(ctx context.Context) GetMediaWorkflowConfigurationsFilterOutput {
	return o
}

func (o GetMediaWorkflowConfigurationsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowConfigurationsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetMediaWorkflowConfigurationsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetMediaWorkflowConfigurationsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetMediaWorkflowConfigurationsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMediaWorkflowConfigurationsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetMediaWorkflowConfigurationsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowConfigurationsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowConfigurationsFilter)(nil)).Elem()
}

func (o GetMediaWorkflowConfigurationsFilterArrayOutput) ToGetMediaWorkflowConfigurationsFilterArrayOutput() GetMediaWorkflowConfigurationsFilterArrayOutput {
	return o
}

func (o GetMediaWorkflowConfigurationsFilterArrayOutput) ToGetMediaWorkflowConfigurationsFilterArrayOutputWithContext(ctx context.Context) GetMediaWorkflowConfigurationsFilterArrayOutput {
	return o
}

func (o GetMediaWorkflowConfigurationsFilterArrayOutput) Index(i pulumi.IntInput) GetMediaWorkflowConfigurationsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMediaWorkflowConfigurationsFilter {
		return vs[0].([]GetMediaWorkflowConfigurationsFilter)[vs[1].(int)]
	}).(GetMediaWorkflowConfigurationsFilterOutput)
}

type GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollection struct {
	Items []GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItem `pulumi:"items"`
}

// GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionInput is an input type that accepts GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArgs and GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionOutput values.
// You can construct a concrete instance of `GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionInput` via:
//
//	GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArgs{...}
type GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionInput interface {
	pulumi.Input

	ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionOutput() GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionOutput
	ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionOutputWithContext(context.Context) GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionOutput
}

type GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArgs struct {
	Items GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArrayInput `pulumi:"items"`
}

func (GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollection)(nil)).Elem()
}

func (i GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArgs) ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionOutput() GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionOutput {
	return i.ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionOutputWithContext(context.Background())
}

func (i GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArgs) ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionOutputWithContext(ctx context.Context) GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionOutput)
}

// GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArrayInput is an input type that accepts GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArray and GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArrayOutput values.
// You can construct a concrete instance of `GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArrayInput` via:
//
//	GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArray{ GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArgs{...} }
type GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArrayInput interface {
	pulumi.Input

	ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArrayOutput() GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArrayOutput
	ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArrayOutputWithContext(context.Context) GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArrayOutput
}

type GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArray []GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionInput

func (GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollection)(nil)).Elem()
}

func (i GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArray) ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArrayOutput() GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArrayOutput {
	return i.ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArrayOutputWithContext(context.Background())
}

func (i GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArray) ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArrayOutputWithContext(ctx context.Context) GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArrayOutput)
}

type GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollection)(nil)).Elem()
}

func (o GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionOutput) ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionOutput() GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionOutput {
	return o
}

func (o GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionOutput) ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionOutputWithContext(ctx context.Context) GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionOutput {
	return o
}

func (o GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionOutput) Items() GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArrayOutput {
	return o.ApplyT(func(v GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollection) []GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItem {
		return v.Items
	}).(GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArrayOutput)
}

type GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollection)(nil)).Elem()
}

func (o GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArrayOutput) ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArrayOutput() GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArrayOutput {
	return o
}

func (o GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArrayOutput) ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArrayOutputWithContext(ctx context.Context) GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArrayOutput {
	return o
}

func (o GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArrayOutput) Index(i pulumi.IntInput) GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollection {
		return vs[0].([]GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollection)[vs[1].(int)]
	}).(GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionOutput)
}

type GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItem struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A filter to return only the resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Unique MediaWorkflowConfiguration identifier.
	Id             string `pulumi:"id"`
	IsLockOverride bool   `pulumi:"isLockOverride"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecyleDetails string `pulumi:"lifecyleDetails"`
	// Locks associated with this resource.
	Locks []GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLock `pulumi:"locks"`
	// Reuseable parameter values encoded as a JSON; the top and second level JSON elements are objects. Each key of the top level object refer to a task key that is unqiue to the workflow, each of the second level objects' keys refer to the name of a parameter that is unique to the task. taskKey > parameterName > parameterValue
	Parameters string `pulumi:"parameters"`
	// A filter to return only the resources with lifecycleState matching the given lifecycleState.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time when the the MediaWorkflowConfiguration was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time when the MediaWorkflowConfiguration was updated. An RFC3339 formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemInput is an input type that accepts GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArgs and GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemOutput values.
// You can construct a concrete instance of `GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemInput` via:
//
//	GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArgs{...}
type GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemInput interface {
	pulumi.Input

	ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemOutput() GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemOutput
	ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemOutputWithContext(context.Context) GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemOutput
}

type GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// A filter to return only the resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// Unique MediaWorkflowConfiguration identifier.
	Id             pulumi.StringInput `pulumi:"id"`
	IsLockOverride pulumi.BoolInput   `pulumi:"isLockOverride"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecyleDetails pulumi.StringInput `pulumi:"lifecyleDetails"`
	// Locks associated with this resource.
	Locks GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArrayInput `pulumi:"locks"`
	// Reuseable parameter values encoded as a JSON; the top and second level JSON elements are objects. Each key of the top level object refer to a task key that is unqiue to the workflow, each of the second level objects' keys refer to the name of a parameter that is unique to the task. taskKey > parameterName > parameterValue
	Parameters pulumi.StringInput `pulumi:"parameters"`
	// A filter to return only the resources with lifecycleState matching the given lifecycleState.
	State pulumi.StringInput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput `pulumi:"systemTags"`
	// The time when the the MediaWorkflowConfiguration was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time when the MediaWorkflowConfiguration was updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItem)(nil)).Elem()
}

func (i GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArgs) ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemOutput() GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemOutput {
	return i.ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemOutputWithContext(context.Background())
}

func (i GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArgs) ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemOutputWithContext(ctx context.Context) GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemOutput)
}

// GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArrayInput is an input type that accepts GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArray and GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArrayInput` via:
//
//	GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArray{ GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArgs{...} }
type GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArrayInput interface {
	pulumi.Input

	ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArrayOutput() GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArrayOutput
	ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArrayOutputWithContext(context.Context) GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArrayOutput
}

type GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArray []GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemInput

func (GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItem)(nil)).Elem()
}

func (i GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArray) ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArrayOutput() GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArrayOutput {
	return i.ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArray) ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArrayOutputWithContext(ctx context.Context) GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArrayOutput)
}

type GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItem)(nil)).Elem()
}

func (o GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemOutput) ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemOutput() GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemOutput {
	return o
}

func (o GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemOutput) ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemOutputWithContext(ctx context.Context) GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItem) string {
		return v.CompartmentId
	}).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItem) map[string]string {
		return v.DefinedTags
	}).(pulumi.StringMapOutput)
}

// A filter to return only the resources that match the entire display name given.
func (o GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItem) string {
		return v.DisplayName
	}).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItem) map[string]string {
		return v.FreeformTags
	}).(pulumi.StringMapOutput)
}

// Unique MediaWorkflowConfiguration identifier.
func (o GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemOutput) IsLockOverride() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItem) bool {
		return v.IsLockOverride
	}).(pulumi.BoolOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemOutput) LifecyleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItem) string {
		return v.LifecyleDetails
	}).(pulumi.StringOutput)
}

// Locks associated with this resource.
func (o GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemOutput) Locks() GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArrayOutput {
	return o.ApplyT(func(v GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItem) []GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLock {
		return v.Locks
	}).(GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArrayOutput)
}

// Reuseable parameter values encoded as a JSON; the top and second level JSON elements are objects. Each key of the top level object refer to a task key that is unqiue to the workflow, each of the second level objects' keys refer to the name of a parameter that is unique to the task. taskKey > parameterName > parameterValue
func (o GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemOutput) Parameters() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItem) string {
		return v.Parameters
	}).(pulumi.StringOutput)
}

// A filter to return only the resources with lifecycleState matching the given lifecycleState.
func (o GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItem) map[string]string {
		return v.SystemTags
	}).(pulumi.StringMapOutput)
}

// The time when the the MediaWorkflowConfiguration was created. An RFC3339 formatted datetime string.
func (o GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItem) string {
		return v.TimeCreated
	}).(pulumi.StringOutput)
}

// The time when the MediaWorkflowConfiguration was updated. An RFC3339 formatted datetime string.
func (o GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItem) string {
		return v.TimeUpdated
	}).(pulumi.StringOutput)
}

type GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItem)(nil)).Elem()
}

func (o GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArrayOutput) ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArrayOutput() GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArrayOutput {
	return o
}

func (o GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArrayOutput) ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArrayOutputWithContext(ctx context.Context) GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArrayOutput {
	return o
}

func (o GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArrayOutput) Index(i pulumi.IntInput) GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItem {
		return vs[0].([]GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItem)[vs[1].(int)]
	}).(GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemOutput)
}

type GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLock struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message string `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId string `pulumi:"relatedResourceId"`
	// The time when the the MediaWorkflowConfiguration was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// Type of the lock.
	Type string `pulumi:"type"`
}

// GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockInput is an input type that accepts GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArgs and GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockOutput values.
// You can construct a concrete instance of `GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockInput` via:
//
//	GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArgs{...}
type GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockInput interface {
	pulumi.Input

	ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockOutput() GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockOutput
	ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockOutputWithContext(context.Context) GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockOutput
}

type GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message pulumi.StringInput `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId pulumi.StringInput `pulumi:"relatedResourceId"`
	// The time when the the MediaWorkflowConfiguration was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// Type of the lock.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLock)(nil)).Elem()
}

func (i GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArgs) ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockOutput() GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockOutput {
	return i.ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockOutputWithContext(context.Background())
}

func (i GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArgs) ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockOutputWithContext(ctx context.Context) GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockOutput)
}

// GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArrayInput is an input type that accepts GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArray and GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArrayOutput values.
// You can construct a concrete instance of `GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArrayInput` via:
//
//	GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArray{ GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArgs{...} }
type GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArrayInput interface {
	pulumi.Input

	ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArrayOutput() GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArrayOutput
	ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArrayOutputWithContext(context.Context) GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArrayOutput
}

type GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArray []GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockInput

func (GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLock)(nil)).Elem()
}

func (i GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArray) ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArrayOutput() GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArrayOutput {
	return i.ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArrayOutputWithContext(context.Background())
}

func (i GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArray) ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArrayOutputWithContext(ctx context.Context) GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArrayOutput)
}

type GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLock)(nil)).Elem()
}

func (o GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockOutput) ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockOutput() GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockOutput {
	return o
}

func (o GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockOutput) ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockOutputWithContext(ctx context.Context) GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLock) string {
		return v.CompartmentId
	}).(pulumi.StringOutput)
}

// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
func (o GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLock) string {
		return v.Message
	}).(pulumi.StringOutput)
}

// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
func (o GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockOutput) RelatedResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLock) string {
		return v.RelatedResourceId
	}).(pulumi.StringOutput)
}

// The time when the the MediaWorkflowConfiguration was created. An RFC3339 formatted datetime string.
func (o GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLock) string {
		return v.TimeCreated
	}).(pulumi.StringOutput)
}

// Type of the lock.
func (o GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLock) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArrayOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLock)(nil)).Elem()
}

func (o GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArrayOutput) ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArrayOutput() GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArrayOutput {
	return o
}

func (o GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArrayOutput) ToGetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArrayOutputWithContext(ctx context.Context) GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArrayOutput {
	return o
}

func (o GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArrayOutput) Index(i pulumi.IntInput) GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLock {
		return vs[0].([]GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLock)[vs[1].(int)]
	}).(GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockOutput)
}

type GetMediaWorkflowJobFactsFilter struct {
	// Unique name. It is read-only and generated for the fact.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetMediaWorkflowJobFactsFilterInput is an input type that accepts GetMediaWorkflowJobFactsFilterArgs and GetMediaWorkflowJobFactsFilterOutput values.
// You can construct a concrete instance of `GetMediaWorkflowJobFactsFilterInput` via:
//
//	GetMediaWorkflowJobFactsFilterArgs{...}
type GetMediaWorkflowJobFactsFilterInput interface {
	pulumi.Input

	ToGetMediaWorkflowJobFactsFilterOutput() GetMediaWorkflowJobFactsFilterOutput
	ToGetMediaWorkflowJobFactsFilterOutputWithContext(context.Context) GetMediaWorkflowJobFactsFilterOutput
}

type GetMediaWorkflowJobFactsFilterArgs struct {
	// Unique name. It is read-only and generated for the fact.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetMediaWorkflowJobFactsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowJobFactsFilter)(nil)).Elem()
}

func (i GetMediaWorkflowJobFactsFilterArgs) ToGetMediaWorkflowJobFactsFilterOutput() GetMediaWorkflowJobFactsFilterOutput {
	return i.ToGetMediaWorkflowJobFactsFilterOutputWithContext(context.Background())
}

func (i GetMediaWorkflowJobFactsFilterArgs) ToGetMediaWorkflowJobFactsFilterOutputWithContext(ctx context.Context) GetMediaWorkflowJobFactsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowJobFactsFilterOutput)
}

// GetMediaWorkflowJobFactsFilterArrayInput is an input type that accepts GetMediaWorkflowJobFactsFilterArray and GetMediaWorkflowJobFactsFilterArrayOutput values.
// You can construct a concrete instance of `GetMediaWorkflowJobFactsFilterArrayInput` via:
//
//	GetMediaWorkflowJobFactsFilterArray{ GetMediaWorkflowJobFactsFilterArgs{...} }
type GetMediaWorkflowJobFactsFilterArrayInput interface {
	pulumi.Input

	ToGetMediaWorkflowJobFactsFilterArrayOutput() GetMediaWorkflowJobFactsFilterArrayOutput
	ToGetMediaWorkflowJobFactsFilterArrayOutputWithContext(context.Context) GetMediaWorkflowJobFactsFilterArrayOutput
}

type GetMediaWorkflowJobFactsFilterArray []GetMediaWorkflowJobFactsFilterInput

func (GetMediaWorkflowJobFactsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowJobFactsFilter)(nil)).Elem()
}

func (i GetMediaWorkflowJobFactsFilterArray) ToGetMediaWorkflowJobFactsFilterArrayOutput() GetMediaWorkflowJobFactsFilterArrayOutput {
	return i.ToGetMediaWorkflowJobFactsFilterArrayOutputWithContext(context.Background())
}

func (i GetMediaWorkflowJobFactsFilterArray) ToGetMediaWorkflowJobFactsFilterArrayOutputWithContext(ctx context.Context) GetMediaWorkflowJobFactsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowJobFactsFilterArrayOutput)
}

type GetMediaWorkflowJobFactsFilterOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowJobFactsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowJobFactsFilter)(nil)).Elem()
}

func (o GetMediaWorkflowJobFactsFilterOutput) ToGetMediaWorkflowJobFactsFilterOutput() GetMediaWorkflowJobFactsFilterOutput {
	return o
}

func (o GetMediaWorkflowJobFactsFilterOutput) ToGetMediaWorkflowJobFactsFilterOutputWithContext(ctx context.Context) GetMediaWorkflowJobFactsFilterOutput {
	return o
}

// Unique name. It is read-only and generated for the fact.
func (o GetMediaWorkflowJobFactsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobFactsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetMediaWorkflowJobFactsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobFactsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetMediaWorkflowJobFactsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobFactsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetMediaWorkflowJobFactsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowJobFactsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowJobFactsFilter)(nil)).Elem()
}

func (o GetMediaWorkflowJobFactsFilterArrayOutput) ToGetMediaWorkflowJobFactsFilterArrayOutput() GetMediaWorkflowJobFactsFilterArrayOutput {
	return o
}

func (o GetMediaWorkflowJobFactsFilterArrayOutput) ToGetMediaWorkflowJobFactsFilterArrayOutputWithContext(ctx context.Context) GetMediaWorkflowJobFactsFilterArrayOutput {
	return o
}

func (o GetMediaWorkflowJobFactsFilterArrayOutput) Index(i pulumi.IntInput) GetMediaWorkflowJobFactsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMediaWorkflowJobFactsFilter {
		return vs[0].([]GetMediaWorkflowJobFactsFilter)[vs[1].(int)]
	}).(GetMediaWorkflowJobFactsFilterOutput)
}

type GetMediaWorkflowJobFactsMediaWorkflowJobFactCollection struct {
	Items []GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItem `pulumi:"items"`
}

// GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionInput is an input type that accepts GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArgs and GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionOutput values.
// You can construct a concrete instance of `GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionInput` via:
//
//	GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArgs{...}
type GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionInput interface {
	pulumi.Input

	ToGetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionOutput() GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionOutput
	ToGetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionOutputWithContext(context.Context) GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionOutput
}

type GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArgs struct {
	Items GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArrayInput `pulumi:"items"`
}

func (GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowJobFactsMediaWorkflowJobFactCollection)(nil)).Elem()
}

func (i GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArgs) ToGetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionOutput() GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionOutput {
	return i.ToGetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionOutputWithContext(context.Background())
}

func (i GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArgs) ToGetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionOutputWithContext(ctx context.Context) GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionOutput)
}

// GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArrayInput is an input type that accepts GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArray and GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArrayOutput values.
// You can construct a concrete instance of `GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArrayInput` via:
//
//	GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArray{ GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArgs{...} }
type GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArrayInput interface {
	pulumi.Input

	ToGetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArrayOutput() GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArrayOutput
	ToGetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArrayOutputWithContext(context.Context) GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArrayOutput
}

type GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArray []GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionInput

func (GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowJobFactsMediaWorkflowJobFactCollection)(nil)).Elem()
}

func (i GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArray) ToGetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArrayOutput() GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArrayOutput {
	return i.ToGetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArrayOutputWithContext(context.Background())
}

func (i GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArray) ToGetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArrayOutputWithContext(ctx context.Context) GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArrayOutput)
}

type GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowJobFactsMediaWorkflowJobFactCollection)(nil)).Elem()
}

func (o GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionOutput) ToGetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionOutput() GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionOutput {
	return o
}

func (o GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionOutput) ToGetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionOutputWithContext(ctx context.Context) GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionOutput {
	return o
}

func (o GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionOutput) Items() GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArrayOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobFactsMediaWorkflowJobFactCollection) []GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItem {
		return v.Items
	}).(GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArrayOutput)
}

type GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowJobFactsMediaWorkflowJobFactCollection)(nil)).Elem()
}

func (o GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArrayOutput) ToGetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArrayOutput() GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArrayOutput {
	return o
}

func (o GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArrayOutput) ToGetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArrayOutputWithContext(ctx context.Context) GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArrayOutput {
	return o
}

func (o GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArrayOutput) Index(i pulumi.IntInput) GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMediaWorkflowJobFactsMediaWorkflowJobFactCollection {
		return vs[0].([]GetMediaWorkflowJobFactsMediaWorkflowJobFactCollection)[vs[1].(int)]
	}).(GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionOutput)
}

type GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItem struct {
	// The body of the detail captured as JSON.
	Detail string `pulumi:"detail"`
	// Filter by MediaWorkflowJob ID and MediaWorkflowJobFact key.
	Key string `pulumi:"key"`
	// Unique MediaWorkflowJob identifier.
	MediaWorkflowJobId string `pulumi:"mediaWorkflowJobId"`
	// Unique name. It is read-only and generated for the fact.
	Name string `pulumi:"name"`
	// Types of details to include.
	Type string `pulumi:"type"`
}

// GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemInput is an input type that accepts GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArgs and GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemOutput values.
// You can construct a concrete instance of `GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemInput` via:
//
//	GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArgs{...}
type GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemInput interface {
	pulumi.Input

	ToGetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemOutput() GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemOutput
	ToGetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemOutputWithContext(context.Context) GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemOutput
}

type GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArgs struct {
	// The body of the detail captured as JSON.
	Detail pulumi.StringInput `pulumi:"detail"`
	// Filter by MediaWorkflowJob ID and MediaWorkflowJobFact key.
	Key pulumi.StringInput `pulumi:"key"`
	// Unique MediaWorkflowJob identifier.
	MediaWorkflowJobId pulumi.StringInput `pulumi:"mediaWorkflowJobId"`
	// Unique name. It is read-only and generated for the fact.
	Name pulumi.StringInput `pulumi:"name"`
	// Types of details to include.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItem)(nil)).Elem()
}

func (i GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArgs) ToGetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemOutput() GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemOutput {
	return i.ToGetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemOutputWithContext(context.Background())
}

func (i GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArgs) ToGetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemOutputWithContext(ctx context.Context) GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemOutput)
}

// GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArrayInput is an input type that accepts GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArray and GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArrayInput` via:
//
//	GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArray{ GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArgs{...} }
type GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArrayInput interface {
	pulumi.Input

	ToGetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArrayOutput() GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArrayOutput
	ToGetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArrayOutputWithContext(context.Context) GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArrayOutput
}

type GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArray []GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemInput

func (GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItem)(nil)).Elem()
}

func (i GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArray) ToGetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArrayOutput() GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArrayOutput {
	return i.ToGetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArray) ToGetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArrayOutputWithContext(ctx context.Context) GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArrayOutput)
}

type GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItem)(nil)).Elem()
}

func (o GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemOutput) ToGetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemOutput() GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemOutput {
	return o
}

func (o GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemOutput) ToGetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemOutputWithContext(ctx context.Context) GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemOutput {
	return o
}

// The body of the detail captured as JSON.
func (o GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemOutput) Detail() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItem) string { return v.Detail }).(pulumi.StringOutput)
}

// Filter by MediaWorkflowJob ID and MediaWorkflowJobFact key.
func (o GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItem) string { return v.Key }).(pulumi.StringOutput)
}

// Unique MediaWorkflowJob identifier.
func (o GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemOutput) MediaWorkflowJobId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItem) string { return v.MediaWorkflowJobId }).(pulumi.StringOutput)
}

// Unique name. It is read-only and generated for the fact.
func (o GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItem) string { return v.Name }).(pulumi.StringOutput)
}

// Types of details to include.
func (o GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItem) string { return v.Type }).(pulumi.StringOutput)
}

type GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItem)(nil)).Elem()
}

func (o GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArrayOutput) ToGetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArrayOutput() GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArrayOutput {
	return o
}

func (o GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArrayOutput) ToGetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArrayOutputWithContext(ctx context.Context) GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArrayOutput {
	return o
}

func (o GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArrayOutput) Index(i pulumi.IntInput) GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItem {
		return vs[0].([]GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItem)[vs[1].(int)]
	}).(GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemOutput)
}

type GetMediaWorkflowJobLock struct {
	// The compartment ID of the lock.
	CompartmentId string `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message string `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId string `pulumi:"relatedResourceId"`
	// Creation time of the job. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// Type of the lock.
	Type string `pulumi:"type"`
}

// GetMediaWorkflowJobLockInput is an input type that accepts GetMediaWorkflowJobLockArgs and GetMediaWorkflowJobLockOutput values.
// You can construct a concrete instance of `GetMediaWorkflowJobLockInput` via:
//
//	GetMediaWorkflowJobLockArgs{...}
type GetMediaWorkflowJobLockInput interface {
	pulumi.Input

	ToGetMediaWorkflowJobLockOutput() GetMediaWorkflowJobLockOutput
	ToGetMediaWorkflowJobLockOutputWithContext(context.Context) GetMediaWorkflowJobLockOutput
}

type GetMediaWorkflowJobLockArgs struct {
	// The compartment ID of the lock.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message pulumi.StringInput `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId pulumi.StringInput `pulumi:"relatedResourceId"`
	// Creation time of the job. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// Type of the lock.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetMediaWorkflowJobLockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowJobLock)(nil)).Elem()
}

func (i GetMediaWorkflowJobLockArgs) ToGetMediaWorkflowJobLockOutput() GetMediaWorkflowJobLockOutput {
	return i.ToGetMediaWorkflowJobLockOutputWithContext(context.Background())
}

func (i GetMediaWorkflowJobLockArgs) ToGetMediaWorkflowJobLockOutputWithContext(ctx context.Context) GetMediaWorkflowJobLockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowJobLockOutput)
}

// GetMediaWorkflowJobLockArrayInput is an input type that accepts GetMediaWorkflowJobLockArray and GetMediaWorkflowJobLockArrayOutput values.
// You can construct a concrete instance of `GetMediaWorkflowJobLockArrayInput` via:
//
//	GetMediaWorkflowJobLockArray{ GetMediaWorkflowJobLockArgs{...} }
type GetMediaWorkflowJobLockArrayInput interface {
	pulumi.Input

	ToGetMediaWorkflowJobLockArrayOutput() GetMediaWorkflowJobLockArrayOutput
	ToGetMediaWorkflowJobLockArrayOutputWithContext(context.Context) GetMediaWorkflowJobLockArrayOutput
}

type GetMediaWorkflowJobLockArray []GetMediaWorkflowJobLockInput

func (GetMediaWorkflowJobLockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowJobLock)(nil)).Elem()
}

func (i GetMediaWorkflowJobLockArray) ToGetMediaWorkflowJobLockArrayOutput() GetMediaWorkflowJobLockArrayOutput {
	return i.ToGetMediaWorkflowJobLockArrayOutputWithContext(context.Background())
}

func (i GetMediaWorkflowJobLockArray) ToGetMediaWorkflowJobLockArrayOutputWithContext(ctx context.Context) GetMediaWorkflowJobLockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowJobLockArrayOutput)
}

type GetMediaWorkflowJobLockOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowJobLockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowJobLock)(nil)).Elem()
}

func (o GetMediaWorkflowJobLockOutput) ToGetMediaWorkflowJobLockOutput() GetMediaWorkflowJobLockOutput {
	return o
}

func (o GetMediaWorkflowJobLockOutput) ToGetMediaWorkflowJobLockOutputWithContext(ctx context.Context) GetMediaWorkflowJobLockOutput {
	return o
}

// The compartment ID of the lock.
func (o GetMediaWorkflowJobLockOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobLock) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
func (o GetMediaWorkflowJobLockOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobLock) string { return v.Message }).(pulumi.StringOutput)
}

// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
func (o GetMediaWorkflowJobLockOutput) RelatedResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobLock) string { return v.RelatedResourceId }).(pulumi.StringOutput)
}

// Creation time of the job. An RFC3339 formatted datetime string.
func (o GetMediaWorkflowJobLockOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobLock) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Type of the lock.
func (o GetMediaWorkflowJobLockOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobLock) string { return v.Type }).(pulumi.StringOutput)
}

type GetMediaWorkflowJobLockArrayOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowJobLockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowJobLock)(nil)).Elem()
}

func (o GetMediaWorkflowJobLockArrayOutput) ToGetMediaWorkflowJobLockArrayOutput() GetMediaWorkflowJobLockArrayOutput {
	return o
}

func (o GetMediaWorkflowJobLockArrayOutput) ToGetMediaWorkflowJobLockArrayOutputWithContext(ctx context.Context) GetMediaWorkflowJobLockArrayOutput {
	return o
}

func (o GetMediaWorkflowJobLockArrayOutput) Index(i pulumi.IntInput) GetMediaWorkflowJobLockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMediaWorkflowJobLock {
		return vs[0].([]GetMediaWorkflowJobLock)[vs[1].(int)]
	}).(GetMediaWorkflowJobLockOutput)
}

type GetMediaWorkflowJobOutput struct {
	// Type of job output.
	AssetType string `pulumi:"assetType"`
	// The bucket name of the job output.
	Bucket string `pulumi:"bucket"`
	// The ID associated with the job output.
	Id string `pulumi:"id"`
	// The namespace name of the job output.
	Namespace string `pulumi:"namespace"`
	// The object name of the job output.
	Object string `pulumi:"object"`
}

// GetMediaWorkflowJobOutputInput is an input type that accepts GetMediaWorkflowJobOutputArgs and GetMediaWorkflowJobOutputOutput values.
// You can construct a concrete instance of `GetMediaWorkflowJobOutputInput` via:
//
//	GetMediaWorkflowJobOutputArgs{...}
type GetMediaWorkflowJobOutputInput interface {
	pulumi.Input

	ToGetMediaWorkflowJobOutputOutput() GetMediaWorkflowJobOutputOutput
	ToGetMediaWorkflowJobOutputOutputWithContext(context.Context) GetMediaWorkflowJobOutputOutput
}

type GetMediaWorkflowJobOutputArgs struct {
	// Type of job output.
	AssetType pulumi.StringInput `pulumi:"assetType"`
	// The bucket name of the job output.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// The ID associated with the job output.
	Id pulumi.StringInput `pulumi:"id"`
	// The namespace name of the job output.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The object name of the job output.
	Object pulumi.StringInput `pulumi:"object"`
}

func (GetMediaWorkflowJobOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowJobOutput)(nil)).Elem()
}

func (i GetMediaWorkflowJobOutputArgs) ToGetMediaWorkflowJobOutputOutput() GetMediaWorkflowJobOutputOutput {
	return i.ToGetMediaWorkflowJobOutputOutputWithContext(context.Background())
}

func (i GetMediaWorkflowJobOutputArgs) ToGetMediaWorkflowJobOutputOutputWithContext(ctx context.Context) GetMediaWorkflowJobOutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowJobOutputOutput)
}

// GetMediaWorkflowJobOutputArrayInput is an input type that accepts GetMediaWorkflowJobOutputArray and GetMediaWorkflowJobOutputArrayOutput values.
// You can construct a concrete instance of `GetMediaWorkflowJobOutputArrayInput` via:
//
//	GetMediaWorkflowJobOutputArray{ GetMediaWorkflowJobOutputArgs{...} }
type GetMediaWorkflowJobOutputArrayInput interface {
	pulumi.Input

	ToGetMediaWorkflowJobOutputArrayOutput() GetMediaWorkflowJobOutputArrayOutput
	ToGetMediaWorkflowJobOutputArrayOutputWithContext(context.Context) GetMediaWorkflowJobOutputArrayOutput
}

type GetMediaWorkflowJobOutputArray []GetMediaWorkflowJobOutputInput

func (GetMediaWorkflowJobOutputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowJobOutput)(nil)).Elem()
}

func (i GetMediaWorkflowJobOutputArray) ToGetMediaWorkflowJobOutputArrayOutput() GetMediaWorkflowJobOutputArrayOutput {
	return i.ToGetMediaWorkflowJobOutputArrayOutputWithContext(context.Background())
}

func (i GetMediaWorkflowJobOutputArray) ToGetMediaWorkflowJobOutputArrayOutputWithContext(ctx context.Context) GetMediaWorkflowJobOutputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowJobOutputArrayOutput)
}

type GetMediaWorkflowJobOutputOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowJobOutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowJobOutput)(nil)).Elem()
}

func (o GetMediaWorkflowJobOutputOutput) ToGetMediaWorkflowJobOutputOutput() GetMediaWorkflowJobOutputOutput {
	return o
}

func (o GetMediaWorkflowJobOutputOutput) ToGetMediaWorkflowJobOutputOutputWithContext(ctx context.Context) GetMediaWorkflowJobOutputOutput {
	return o
}

// Type of job output.
func (o GetMediaWorkflowJobOutputOutput) AssetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobOutput) string { return v.AssetType }).(pulumi.StringOutput)
}

// The bucket name of the job output.
func (o GetMediaWorkflowJobOutputOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobOutput) string { return v.Bucket }).(pulumi.StringOutput)
}

// The ID associated with the job output.
func (o GetMediaWorkflowJobOutputOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobOutput) string { return v.Id }).(pulumi.StringOutput)
}

// The namespace name of the job output.
func (o GetMediaWorkflowJobOutputOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobOutput) string { return v.Namespace }).(pulumi.StringOutput)
}

// The object name of the job output.
func (o GetMediaWorkflowJobOutputOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobOutput) string { return v.Object }).(pulumi.StringOutput)
}

type GetMediaWorkflowJobOutputArrayOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowJobOutputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowJobOutput)(nil)).Elem()
}

func (o GetMediaWorkflowJobOutputArrayOutput) ToGetMediaWorkflowJobOutputArrayOutput() GetMediaWorkflowJobOutputArrayOutput {
	return o
}

func (o GetMediaWorkflowJobOutputArrayOutput) ToGetMediaWorkflowJobOutputArrayOutputWithContext(ctx context.Context) GetMediaWorkflowJobOutputArrayOutput {
	return o
}

func (o GetMediaWorkflowJobOutputArrayOutput) Index(i pulumi.IntInput) GetMediaWorkflowJobOutputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMediaWorkflowJobOutput {
		return vs[0].([]GetMediaWorkflowJobOutput)[vs[1].(int)]
	}).(GetMediaWorkflowJobOutputOutput)
}

type GetMediaWorkflowJobTaskLifecycleState struct {
	// Unique key within a MediaWorkflowJob for the task.
	Key string `pulumi:"key"`
	// The lifecycle details of MediaWorkflowJob task.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The current state of the MediaWorkflowJob task.
	State string `pulumi:"state"`
}

// GetMediaWorkflowJobTaskLifecycleStateInput is an input type that accepts GetMediaWorkflowJobTaskLifecycleStateArgs and GetMediaWorkflowJobTaskLifecycleStateOutput values.
// You can construct a concrete instance of `GetMediaWorkflowJobTaskLifecycleStateInput` via:
//
//	GetMediaWorkflowJobTaskLifecycleStateArgs{...}
type GetMediaWorkflowJobTaskLifecycleStateInput interface {
	pulumi.Input

	ToGetMediaWorkflowJobTaskLifecycleStateOutput() GetMediaWorkflowJobTaskLifecycleStateOutput
	ToGetMediaWorkflowJobTaskLifecycleStateOutputWithContext(context.Context) GetMediaWorkflowJobTaskLifecycleStateOutput
}

type GetMediaWorkflowJobTaskLifecycleStateArgs struct {
	// Unique key within a MediaWorkflowJob for the task.
	Key pulumi.StringInput `pulumi:"key"`
	// The lifecycle details of MediaWorkflowJob task.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// The current state of the MediaWorkflowJob task.
	State pulumi.StringInput `pulumi:"state"`
}

func (GetMediaWorkflowJobTaskLifecycleStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowJobTaskLifecycleState)(nil)).Elem()
}

func (i GetMediaWorkflowJobTaskLifecycleStateArgs) ToGetMediaWorkflowJobTaskLifecycleStateOutput() GetMediaWorkflowJobTaskLifecycleStateOutput {
	return i.ToGetMediaWorkflowJobTaskLifecycleStateOutputWithContext(context.Background())
}

func (i GetMediaWorkflowJobTaskLifecycleStateArgs) ToGetMediaWorkflowJobTaskLifecycleStateOutputWithContext(ctx context.Context) GetMediaWorkflowJobTaskLifecycleStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowJobTaskLifecycleStateOutput)
}

// GetMediaWorkflowJobTaskLifecycleStateArrayInput is an input type that accepts GetMediaWorkflowJobTaskLifecycleStateArray and GetMediaWorkflowJobTaskLifecycleStateArrayOutput values.
// You can construct a concrete instance of `GetMediaWorkflowJobTaskLifecycleStateArrayInput` via:
//
//	GetMediaWorkflowJobTaskLifecycleStateArray{ GetMediaWorkflowJobTaskLifecycleStateArgs{...} }
type GetMediaWorkflowJobTaskLifecycleStateArrayInput interface {
	pulumi.Input

	ToGetMediaWorkflowJobTaskLifecycleStateArrayOutput() GetMediaWorkflowJobTaskLifecycleStateArrayOutput
	ToGetMediaWorkflowJobTaskLifecycleStateArrayOutputWithContext(context.Context) GetMediaWorkflowJobTaskLifecycleStateArrayOutput
}

type GetMediaWorkflowJobTaskLifecycleStateArray []GetMediaWorkflowJobTaskLifecycleStateInput

func (GetMediaWorkflowJobTaskLifecycleStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowJobTaskLifecycleState)(nil)).Elem()
}

func (i GetMediaWorkflowJobTaskLifecycleStateArray) ToGetMediaWorkflowJobTaskLifecycleStateArrayOutput() GetMediaWorkflowJobTaskLifecycleStateArrayOutput {
	return i.ToGetMediaWorkflowJobTaskLifecycleStateArrayOutputWithContext(context.Background())
}

func (i GetMediaWorkflowJobTaskLifecycleStateArray) ToGetMediaWorkflowJobTaskLifecycleStateArrayOutputWithContext(ctx context.Context) GetMediaWorkflowJobTaskLifecycleStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowJobTaskLifecycleStateArrayOutput)
}

type GetMediaWorkflowJobTaskLifecycleStateOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowJobTaskLifecycleStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowJobTaskLifecycleState)(nil)).Elem()
}

func (o GetMediaWorkflowJobTaskLifecycleStateOutput) ToGetMediaWorkflowJobTaskLifecycleStateOutput() GetMediaWorkflowJobTaskLifecycleStateOutput {
	return o
}

func (o GetMediaWorkflowJobTaskLifecycleStateOutput) ToGetMediaWorkflowJobTaskLifecycleStateOutputWithContext(ctx context.Context) GetMediaWorkflowJobTaskLifecycleStateOutput {
	return o
}

// Unique key within a MediaWorkflowJob for the task.
func (o GetMediaWorkflowJobTaskLifecycleStateOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobTaskLifecycleState) string { return v.Key }).(pulumi.StringOutput)
}

// The lifecycle details of MediaWorkflowJob task.
func (o GetMediaWorkflowJobTaskLifecycleStateOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobTaskLifecycleState) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The current state of the MediaWorkflowJob task.
func (o GetMediaWorkflowJobTaskLifecycleStateOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobTaskLifecycleState) string { return v.State }).(pulumi.StringOutput)
}

type GetMediaWorkflowJobTaskLifecycleStateArrayOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowJobTaskLifecycleStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowJobTaskLifecycleState)(nil)).Elem()
}

func (o GetMediaWorkflowJobTaskLifecycleStateArrayOutput) ToGetMediaWorkflowJobTaskLifecycleStateArrayOutput() GetMediaWorkflowJobTaskLifecycleStateArrayOutput {
	return o
}

func (o GetMediaWorkflowJobTaskLifecycleStateArrayOutput) ToGetMediaWorkflowJobTaskLifecycleStateArrayOutputWithContext(ctx context.Context) GetMediaWorkflowJobTaskLifecycleStateArrayOutput {
	return o
}

func (o GetMediaWorkflowJobTaskLifecycleStateArrayOutput) Index(i pulumi.IntInput) GetMediaWorkflowJobTaskLifecycleStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMediaWorkflowJobTaskLifecycleState {
		return vs[0].([]GetMediaWorkflowJobTaskLifecycleState)[vs[1].(int)]
	}).(GetMediaWorkflowJobTaskLifecycleStateOutput)
}

type GetMediaWorkflowJobsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetMediaWorkflowJobsFilterInput is an input type that accepts GetMediaWorkflowJobsFilterArgs and GetMediaWorkflowJobsFilterOutput values.
// You can construct a concrete instance of `GetMediaWorkflowJobsFilterInput` via:
//
//	GetMediaWorkflowJobsFilterArgs{...}
type GetMediaWorkflowJobsFilterInput interface {
	pulumi.Input

	ToGetMediaWorkflowJobsFilterOutput() GetMediaWorkflowJobsFilterOutput
	ToGetMediaWorkflowJobsFilterOutputWithContext(context.Context) GetMediaWorkflowJobsFilterOutput
}

type GetMediaWorkflowJobsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetMediaWorkflowJobsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowJobsFilter)(nil)).Elem()
}

func (i GetMediaWorkflowJobsFilterArgs) ToGetMediaWorkflowJobsFilterOutput() GetMediaWorkflowJobsFilterOutput {
	return i.ToGetMediaWorkflowJobsFilterOutputWithContext(context.Background())
}

func (i GetMediaWorkflowJobsFilterArgs) ToGetMediaWorkflowJobsFilterOutputWithContext(ctx context.Context) GetMediaWorkflowJobsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowJobsFilterOutput)
}

// GetMediaWorkflowJobsFilterArrayInput is an input type that accepts GetMediaWorkflowJobsFilterArray and GetMediaWorkflowJobsFilterArrayOutput values.
// You can construct a concrete instance of `GetMediaWorkflowJobsFilterArrayInput` via:
//
//	GetMediaWorkflowJobsFilterArray{ GetMediaWorkflowJobsFilterArgs{...} }
type GetMediaWorkflowJobsFilterArrayInput interface {
	pulumi.Input

	ToGetMediaWorkflowJobsFilterArrayOutput() GetMediaWorkflowJobsFilterArrayOutput
	ToGetMediaWorkflowJobsFilterArrayOutputWithContext(context.Context) GetMediaWorkflowJobsFilterArrayOutput
}

type GetMediaWorkflowJobsFilterArray []GetMediaWorkflowJobsFilterInput

func (GetMediaWorkflowJobsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowJobsFilter)(nil)).Elem()
}

func (i GetMediaWorkflowJobsFilterArray) ToGetMediaWorkflowJobsFilterArrayOutput() GetMediaWorkflowJobsFilterArrayOutput {
	return i.ToGetMediaWorkflowJobsFilterArrayOutputWithContext(context.Background())
}

func (i GetMediaWorkflowJobsFilterArray) ToGetMediaWorkflowJobsFilterArrayOutputWithContext(ctx context.Context) GetMediaWorkflowJobsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowJobsFilterArrayOutput)
}

type GetMediaWorkflowJobsFilterOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowJobsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowJobsFilter)(nil)).Elem()
}

func (o GetMediaWorkflowJobsFilterOutput) ToGetMediaWorkflowJobsFilterOutput() GetMediaWorkflowJobsFilterOutput {
	return o
}

func (o GetMediaWorkflowJobsFilterOutput) ToGetMediaWorkflowJobsFilterOutputWithContext(ctx context.Context) GetMediaWorkflowJobsFilterOutput {
	return o
}

func (o GetMediaWorkflowJobsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetMediaWorkflowJobsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetMediaWorkflowJobsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetMediaWorkflowJobsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowJobsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowJobsFilter)(nil)).Elem()
}

func (o GetMediaWorkflowJobsFilterArrayOutput) ToGetMediaWorkflowJobsFilterArrayOutput() GetMediaWorkflowJobsFilterArrayOutput {
	return o
}

func (o GetMediaWorkflowJobsFilterArrayOutput) ToGetMediaWorkflowJobsFilterArrayOutputWithContext(ctx context.Context) GetMediaWorkflowJobsFilterArrayOutput {
	return o
}

func (o GetMediaWorkflowJobsFilterArrayOutput) Index(i pulumi.IntInput) GetMediaWorkflowJobsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMediaWorkflowJobsFilter {
		return vs[0].([]GetMediaWorkflowJobsFilter)[vs[1].(int)]
	}).(GetMediaWorkflowJobsFilterOutput)
}

type GetMediaWorkflowJobsMediaWorkflowJobCollection struct {
	Items []GetMediaWorkflowJobsMediaWorkflowJobCollectionItem `pulumi:"items"`
}

// GetMediaWorkflowJobsMediaWorkflowJobCollectionInput is an input type that accepts GetMediaWorkflowJobsMediaWorkflowJobCollectionArgs and GetMediaWorkflowJobsMediaWorkflowJobCollectionOutput values.
// You can construct a concrete instance of `GetMediaWorkflowJobsMediaWorkflowJobCollectionInput` via:
//
//	GetMediaWorkflowJobsMediaWorkflowJobCollectionArgs{...}
type GetMediaWorkflowJobsMediaWorkflowJobCollectionInput interface {
	pulumi.Input

	ToGetMediaWorkflowJobsMediaWorkflowJobCollectionOutput() GetMediaWorkflowJobsMediaWorkflowJobCollectionOutput
	ToGetMediaWorkflowJobsMediaWorkflowJobCollectionOutputWithContext(context.Context) GetMediaWorkflowJobsMediaWorkflowJobCollectionOutput
}

type GetMediaWorkflowJobsMediaWorkflowJobCollectionArgs struct {
	Items GetMediaWorkflowJobsMediaWorkflowJobCollectionItemArrayInput `pulumi:"items"`
}

func (GetMediaWorkflowJobsMediaWorkflowJobCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowJobsMediaWorkflowJobCollection)(nil)).Elem()
}

func (i GetMediaWorkflowJobsMediaWorkflowJobCollectionArgs) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionOutput() GetMediaWorkflowJobsMediaWorkflowJobCollectionOutput {
	return i.ToGetMediaWorkflowJobsMediaWorkflowJobCollectionOutputWithContext(context.Background())
}

func (i GetMediaWorkflowJobsMediaWorkflowJobCollectionArgs) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionOutputWithContext(ctx context.Context) GetMediaWorkflowJobsMediaWorkflowJobCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowJobsMediaWorkflowJobCollectionOutput)
}

// GetMediaWorkflowJobsMediaWorkflowJobCollectionArrayInput is an input type that accepts GetMediaWorkflowJobsMediaWorkflowJobCollectionArray and GetMediaWorkflowJobsMediaWorkflowJobCollectionArrayOutput values.
// You can construct a concrete instance of `GetMediaWorkflowJobsMediaWorkflowJobCollectionArrayInput` via:
//
//	GetMediaWorkflowJobsMediaWorkflowJobCollectionArray{ GetMediaWorkflowJobsMediaWorkflowJobCollectionArgs{...} }
type GetMediaWorkflowJobsMediaWorkflowJobCollectionArrayInput interface {
	pulumi.Input

	ToGetMediaWorkflowJobsMediaWorkflowJobCollectionArrayOutput() GetMediaWorkflowJobsMediaWorkflowJobCollectionArrayOutput
	ToGetMediaWorkflowJobsMediaWorkflowJobCollectionArrayOutputWithContext(context.Context) GetMediaWorkflowJobsMediaWorkflowJobCollectionArrayOutput
}

type GetMediaWorkflowJobsMediaWorkflowJobCollectionArray []GetMediaWorkflowJobsMediaWorkflowJobCollectionInput

func (GetMediaWorkflowJobsMediaWorkflowJobCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowJobsMediaWorkflowJobCollection)(nil)).Elem()
}

func (i GetMediaWorkflowJobsMediaWorkflowJobCollectionArray) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionArrayOutput() GetMediaWorkflowJobsMediaWorkflowJobCollectionArrayOutput {
	return i.ToGetMediaWorkflowJobsMediaWorkflowJobCollectionArrayOutputWithContext(context.Background())
}

func (i GetMediaWorkflowJobsMediaWorkflowJobCollectionArray) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionArrayOutputWithContext(ctx context.Context) GetMediaWorkflowJobsMediaWorkflowJobCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowJobsMediaWorkflowJobCollectionArrayOutput)
}

type GetMediaWorkflowJobsMediaWorkflowJobCollectionOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowJobsMediaWorkflowJobCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowJobsMediaWorkflowJobCollection)(nil)).Elem()
}

func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionOutput) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionOutput() GetMediaWorkflowJobsMediaWorkflowJobCollectionOutput {
	return o
}

func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionOutput) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionOutputWithContext(ctx context.Context) GetMediaWorkflowJobsMediaWorkflowJobCollectionOutput {
	return o
}

func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionOutput) Items() GetMediaWorkflowJobsMediaWorkflowJobCollectionItemArrayOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsMediaWorkflowJobCollection) []GetMediaWorkflowJobsMediaWorkflowJobCollectionItem {
		return v.Items
	}).(GetMediaWorkflowJobsMediaWorkflowJobCollectionItemArrayOutput)
}

type GetMediaWorkflowJobsMediaWorkflowJobCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowJobsMediaWorkflowJobCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowJobsMediaWorkflowJobCollection)(nil)).Elem()
}

func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionArrayOutput) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionArrayOutput() GetMediaWorkflowJobsMediaWorkflowJobCollectionArrayOutput {
	return o
}

func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionArrayOutput) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionArrayOutputWithContext(ctx context.Context) GetMediaWorkflowJobsMediaWorkflowJobCollectionArrayOutput {
	return o
}

func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionArrayOutput) Index(i pulumi.IntInput) GetMediaWorkflowJobsMediaWorkflowJobCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMediaWorkflowJobsMediaWorkflowJobCollection {
		return vs[0].([]GetMediaWorkflowJobsMediaWorkflowJobCollection)[vs[1].(int)]
	}).(GetMediaWorkflowJobsMediaWorkflowJobCollectionOutput)
}

type GetMediaWorkflowJobsMediaWorkflowJobCollectionItem struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A filter to return only the resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// unique MediaWorkflowJob identifier
	Id             string `pulumi:"id"`
	IsLockOverride bool   `pulumi:"isLockOverride"`
	// The lifecycle details of MediaWorkflowJob task.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Locks associated with this resource.
	Locks []GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLock `pulumi:"locks"`
	// Configurations to be applied to this run of the workflow.
	MediaWorkflowConfigurationIds []string `pulumi:"mediaWorkflowConfigurationIds"`
	// Unique MediaWorkflow identifier.
	MediaWorkflowId   string `pulumi:"mediaWorkflowId"`
	MediaWorkflowName string `pulumi:"mediaWorkflowName"`
	// A list of JobOutput for the workflowJob.
	Outputs []GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputType `pulumi:"outputs"`
	// Parameters that override parameters specified in MediaWorkflowTaskDeclarations, the MediaWorkflow, the MediaWorkflow's MediaWorkflowConfigurations and the MediaWorkflowConfigurations of this MediaWorkflowJob. The parameters are given as JSON.  The top level and 2nd level elements must be JSON objects (vs arrays, scalars, etc). The top level keys refer to a task's key and the 2nd level keys refer to a parameter's name.
	Parameters string `pulumi:"parameters"`
	// A JSON representation of the job as it will be run by the system. All the task declarations, configurations and parameters are merged. Parameter values are all fully resolved.
	Runnable string `pulumi:"runnable"`
	// A filter to return only the resources with lifecycleState matching the given lifecycleState.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// Status of each task.
	TaskLifecycleStates []GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleState `pulumi:"taskLifecycleStates"`
	// Creation time of the job. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// Time when the job finished. An RFC3339 formatted datetime string.
	TimeEnded string `pulumi:"timeEnded"`
	// Time when the job started to execute. An RFC3339 formatted datetime string.
	TimeStarted string `pulumi:"timeStarted"`
	// Updated time of the job. An RFC3339 formatted datetime string.
	TimeUpdated            string `pulumi:"timeUpdated"`
	WorkflowIdentifierType string `pulumi:"workflowIdentifierType"`
}

// GetMediaWorkflowJobsMediaWorkflowJobCollectionItemInput is an input type that accepts GetMediaWorkflowJobsMediaWorkflowJobCollectionItemArgs and GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput values.
// You can construct a concrete instance of `GetMediaWorkflowJobsMediaWorkflowJobCollectionItemInput` via:
//
//	GetMediaWorkflowJobsMediaWorkflowJobCollectionItemArgs{...}
type GetMediaWorkflowJobsMediaWorkflowJobCollectionItemInput interface {
	pulumi.Input

	ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput() GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput
	ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputWithContext(context.Context) GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput
}

type GetMediaWorkflowJobsMediaWorkflowJobCollectionItemArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// A filter to return only the resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// unique MediaWorkflowJob identifier
	Id             pulumi.StringInput `pulumi:"id"`
	IsLockOverride pulumi.BoolInput   `pulumi:"isLockOverride"`
	// The lifecycle details of MediaWorkflowJob task.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// Locks associated with this resource.
	Locks GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArrayInput `pulumi:"locks"`
	// Configurations to be applied to this run of the workflow.
	MediaWorkflowConfigurationIds pulumi.StringArrayInput `pulumi:"mediaWorkflowConfigurationIds"`
	// Unique MediaWorkflow identifier.
	MediaWorkflowId   pulumi.StringInput `pulumi:"mediaWorkflowId"`
	MediaWorkflowName pulumi.StringInput `pulumi:"mediaWorkflowName"`
	// A list of JobOutput for the workflowJob.
	Outputs GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArrayInput `pulumi:"outputs"`
	// Parameters that override parameters specified in MediaWorkflowTaskDeclarations, the MediaWorkflow, the MediaWorkflow's MediaWorkflowConfigurations and the MediaWorkflowConfigurations of this MediaWorkflowJob. The parameters are given as JSON.  The top level and 2nd level elements must be JSON objects (vs arrays, scalars, etc). The top level keys refer to a task's key and the 2nd level keys refer to a parameter's name.
	Parameters pulumi.StringInput `pulumi:"parameters"`
	// A JSON representation of the job as it will be run by the system. All the task declarations, configurations and parameters are merged. Parameter values are all fully resolved.
	Runnable pulumi.StringInput `pulumi:"runnable"`
	// A filter to return only the resources with lifecycleState matching the given lifecycleState.
	State pulumi.StringInput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput `pulumi:"systemTags"`
	// Status of each task.
	TaskLifecycleStates GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArrayInput `pulumi:"taskLifecycleStates"`
	// Creation time of the job. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// Time when the job finished. An RFC3339 formatted datetime string.
	TimeEnded pulumi.StringInput `pulumi:"timeEnded"`
	// Time when the job started to execute. An RFC3339 formatted datetime string.
	TimeStarted pulumi.StringInput `pulumi:"timeStarted"`
	// Updated time of the job. An RFC3339 formatted datetime string.
	TimeUpdated            pulumi.StringInput `pulumi:"timeUpdated"`
	WorkflowIdentifierType pulumi.StringInput `pulumi:"workflowIdentifierType"`
}

func (GetMediaWorkflowJobsMediaWorkflowJobCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowJobsMediaWorkflowJobCollectionItem)(nil)).Elem()
}

func (i GetMediaWorkflowJobsMediaWorkflowJobCollectionItemArgs) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput() GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput {
	return i.ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputWithContext(context.Background())
}

func (i GetMediaWorkflowJobsMediaWorkflowJobCollectionItemArgs) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputWithContext(ctx context.Context) GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput)
}

// GetMediaWorkflowJobsMediaWorkflowJobCollectionItemArrayInput is an input type that accepts GetMediaWorkflowJobsMediaWorkflowJobCollectionItemArray and GetMediaWorkflowJobsMediaWorkflowJobCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetMediaWorkflowJobsMediaWorkflowJobCollectionItemArrayInput` via:
//
//	GetMediaWorkflowJobsMediaWorkflowJobCollectionItemArray{ GetMediaWorkflowJobsMediaWorkflowJobCollectionItemArgs{...} }
type GetMediaWorkflowJobsMediaWorkflowJobCollectionItemArrayInput interface {
	pulumi.Input

	ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemArrayOutput() GetMediaWorkflowJobsMediaWorkflowJobCollectionItemArrayOutput
	ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemArrayOutputWithContext(context.Context) GetMediaWorkflowJobsMediaWorkflowJobCollectionItemArrayOutput
}

type GetMediaWorkflowJobsMediaWorkflowJobCollectionItemArray []GetMediaWorkflowJobsMediaWorkflowJobCollectionItemInput

func (GetMediaWorkflowJobsMediaWorkflowJobCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowJobsMediaWorkflowJobCollectionItem)(nil)).Elem()
}

func (i GetMediaWorkflowJobsMediaWorkflowJobCollectionItemArray) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemArrayOutput() GetMediaWorkflowJobsMediaWorkflowJobCollectionItemArrayOutput {
	return i.ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetMediaWorkflowJobsMediaWorkflowJobCollectionItemArray) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemArrayOutputWithContext(ctx context.Context) GetMediaWorkflowJobsMediaWorkflowJobCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowJobsMediaWorkflowJobCollectionItemArrayOutput)
}

type GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowJobsMediaWorkflowJobCollectionItem)(nil)).Elem()
}

func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput() GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput {
	return o
}

func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputWithContext(ctx context.Context) GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsMediaWorkflowJobCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsMediaWorkflowJobCollectionItem) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A filter to return only the resources that match the entire display name given.
func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsMediaWorkflowJobCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsMediaWorkflowJobCollectionItem) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// unique MediaWorkflowJob identifier
func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsMediaWorkflowJobCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput) IsLockOverride() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsMediaWorkflowJobCollectionItem) bool { return v.IsLockOverride }).(pulumi.BoolOutput)
}

// The lifecycle details of MediaWorkflowJob task.
func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsMediaWorkflowJobCollectionItem) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Locks associated with this resource.
func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput) Locks() GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArrayOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsMediaWorkflowJobCollectionItem) []GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLock {
		return v.Locks
	}).(GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArrayOutput)
}

// Configurations to be applied to this run of the workflow.
func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput) MediaWorkflowConfigurationIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsMediaWorkflowJobCollectionItem) []string {
		return v.MediaWorkflowConfigurationIds
	}).(pulumi.StringArrayOutput)
}

// Unique MediaWorkflow identifier.
func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput) MediaWorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsMediaWorkflowJobCollectionItem) string { return v.MediaWorkflowId }).(pulumi.StringOutput)
}

func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput) MediaWorkflowName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsMediaWorkflowJobCollectionItem) string { return v.MediaWorkflowName }).(pulumi.StringOutput)
}

// A list of JobOutput for the workflowJob.
func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput) Outputs() GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArrayOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsMediaWorkflowJobCollectionItem) []GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputType {
		return v.Outputs
	}).(GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArrayOutput)
}

// Parameters that override parameters specified in MediaWorkflowTaskDeclarations, the MediaWorkflow, the MediaWorkflow's MediaWorkflowConfigurations and the MediaWorkflowConfigurations of this MediaWorkflowJob. The parameters are given as JSON.  The top level and 2nd level elements must be JSON objects (vs arrays, scalars, etc). The top level keys refer to a task's key and the 2nd level keys refer to a parameter's name.
func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput) Parameters() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsMediaWorkflowJobCollectionItem) string { return v.Parameters }).(pulumi.StringOutput)
}

// A JSON representation of the job as it will be run by the system. All the task declarations, configurations and parameters are merged. Parameter values are all fully resolved.
func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput) Runnable() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsMediaWorkflowJobCollectionItem) string { return v.Runnable }).(pulumi.StringOutput)
}

// A filter to return only the resources with lifecycleState matching the given lifecycleState.
func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsMediaWorkflowJobCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsMediaWorkflowJobCollectionItem) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// Status of each task.
func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput) TaskLifecycleStates() GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArrayOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsMediaWorkflowJobCollectionItem) []GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleState {
		return v.TaskLifecycleStates
	}).(GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArrayOutput)
}

// Creation time of the job. An RFC3339 formatted datetime string.
func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsMediaWorkflowJobCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Time when the job finished. An RFC3339 formatted datetime string.
func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput) TimeEnded() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsMediaWorkflowJobCollectionItem) string { return v.TimeEnded }).(pulumi.StringOutput)
}

// Time when the job started to execute. An RFC3339 formatted datetime string.
func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput) TimeStarted() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsMediaWorkflowJobCollectionItem) string { return v.TimeStarted }).(pulumi.StringOutput)
}

// Updated time of the job. An RFC3339 formatted datetime string.
func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsMediaWorkflowJobCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput) WorkflowIdentifierType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsMediaWorkflowJobCollectionItem) string { return v.WorkflowIdentifierType }).(pulumi.StringOutput)
}

type GetMediaWorkflowJobsMediaWorkflowJobCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowJobsMediaWorkflowJobCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowJobsMediaWorkflowJobCollectionItem)(nil)).Elem()
}

func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemArrayOutput) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemArrayOutput() GetMediaWorkflowJobsMediaWorkflowJobCollectionItemArrayOutput {
	return o
}

func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemArrayOutput) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemArrayOutputWithContext(ctx context.Context) GetMediaWorkflowJobsMediaWorkflowJobCollectionItemArrayOutput {
	return o
}

func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemArrayOutput) Index(i pulumi.IntInput) GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMediaWorkflowJobsMediaWorkflowJobCollectionItem {
		return vs[0].([]GetMediaWorkflowJobsMediaWorkflowJobCollectionItem)[vs[1].(int)]
	}).(GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput)
}

type GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLock struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message string `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId string `pulumi:"relatedResourceId"`
	// Creation time of the job. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// Type of the lock.
	Type string `pulumi:"type"`
}

// GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockInput is an input type that accepts GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArgs and GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockOutput values.
// You can construct a concrete instance of `GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockInput` via:
//
//	GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArgs{...}
type GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockInput interface {
	pulumi.Input

	ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockOutput() GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockOutput
	ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockOutputWithContext(context.Context) GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockOutput
}

type GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message pulumi.StringInput `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId pulumi.StringInput `pulumi:"relatedResourceId"`
	// Creation time of the job. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// Type of the lock.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLock)(nil)).Elem()
}

func (i GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArgs) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockOutput() GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockOutput {
	return i.ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockOutputWithContext(context.Background())
}

func (i GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArgs) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockOutputWithContext(ctx context.Context) GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockOutput)
}

// GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArrayInput is an input type that accepts GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArray and GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArrayOutput values.
// You can construct a concrete instance of `GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArrayInput` via:
//
//	GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArray{ GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArgs{...} }
type GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArrayInput interface {
	pulumi.Input

	ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArrayOutput() GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArrayOutput
	ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArrayOutputWithContext(context.Context) GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArrayOutput
}

type GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArray []GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockInput

func (GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLock)(nil)).Elem()
}

func (i GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArray) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArrayOutput() GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArrayOutput {
	return i.ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArrayOutputWithContext(context.Background())
}

func (i GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArray) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArrayOutputWithContext(ctx context.Context) GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArrayOutput)
}

type GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLock)(nil)).Elem()
}

func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockOutput) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockOutput() GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockOutput {
	return o
}

func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockOutput) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockOutputWithContext(ctx context.Context) GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLock) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLock) string { return v.Message }).(pulumi.StringOutput)
}

// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockOutput) RelatedResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLock) string { return v.RelatedResourceId }).(pulumi.StringOutput)
}

// Creation time of the job. An RFC3339 formatted datetime string.
func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLock) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Type of the lock.
func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLock) string { return v.Type }).(pulumi.StringOutput)
}

type GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArrayOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLock)(nil)).Elem()
}

func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArrayOutput) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArrayOutput() GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArrayOutput {
	return o
}

func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArrayOutput) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArrayOutputWithContext(ctx context.Context) GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArrayOutput {
	return o
}

func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArrayOutput) Index(i pulumi.IntInput) GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLock {
		return vs[0].([]GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLock)[vs[1].(int)]
	}).(GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockOutput)
}

type GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputType struct {
	// Type of job output.
	AssetType string `pulumi:"assetType"`
	// The bucket name of the job output.
	Bucket string `pulumi:"bucket"`
	// unique MediaWorkflowJob identifier
	Id string `pulumi:"id"`
	// The namespace name of the job output.
	Namespace string `pulumi:"namespace"`
	// The object name of the job output.
	Object string `pulumi:"object"`
}

// GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeInput is an input type that accepts GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArgs and GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeOutput values.
// You can construct a concrete instance of `GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeInput` via:
//
//	GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArgs{...}
type GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeInput interface {
	pulumi.Input

	ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeOutput() GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeOutput
	ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeOutputWithContext(context.Context) GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeOutput
}

type GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArgs struct {
	// Type of job output.
	AssetType pulumi.StringInput `pulumi:"assetType"`
	// The bucket name of the job output.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// unique MediaWorkflowJob identifier
	Id pulumi.StringInput `pulumi:"id"`
	// The namespace name of the job output.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The object name of the job output.
	Object pulumi.StringInput `pulumi:"object"`
}

func (GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputType)(nil)).Elem()
}

func (i GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArgs) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeOutput() GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeOutput {
	return i.ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeOutputWithContext(context.Background())
}

func (i GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArgs) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeOutputWithContext(ctx context.Context) GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeOutput)
}

// GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArrayInput is an input type that accepts GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArray and GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArrayOutput values.
// You can construct a concrete instance of `GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArrayInput` via:
//
//	GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArray{ GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArgs{...} }
type GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArrayInput interface {
	pulumi.Input

	ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArrayOutput() GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArrayOutput
	ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArrayOutputWithContext(context.Context) GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArrayOutput
}

type GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArray []GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeInput

func (GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputType)(nil)).Elem()
}

func (i GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArray) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArrayOutput() GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArrayOutput {
	return i.ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArrayOutputWithContext(context.Background())
}

func (i GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArray) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArrayOutputWithContext(ctx context.Context) GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArrayOutput)
}

type GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputType)(nil)).Elem()
}

func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeOutput) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeOutput() GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeOutput {
	return o
}

func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeOutput) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeOutputWithContext(ctx context.Context) GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeOutput {
	return o
}

// Type of job output.
func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeOutput) AssetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputType) string { return v.AssetType }).(pulumi.StringOutput)
}

// The bucket name of the job output.
func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputType) string { return v.Bucket }).(pulumi.StringOutput)
}

// unique MediaWorkflowJob identifier
func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputType) string { return v.Id }).(pulumi.StringOutput)
}

// The namespace name of the job output.
func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputType) string { return v.Namespace }).(pulumi.StringOutput)
}

// The object name of the job output.
func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputType) string { return v.Object }).(pulumi.StringOutput)
}

type GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArrayOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputType)(nil)).Elem()
}

func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArrayOutput) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArrayOutput() GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArrayOutput {
	return o
}

func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArrayOutput) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArrayOutputWithContext(ctx context.Context) GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArrayOutput {
	return o
}

func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArrayOutput) Index(i pulumi.IntInput) GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputType {
		return vs[0].([]GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputType)[vs[1].(int)]
	}).(GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeOutput)
}

type GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleState struct {
	// Unique key within a MediaWorkflowJob for the task.
	Key string `pulumi:"key"`
	// The lifecycle details of MediaWorkflowJob task.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// A filter to return only the resources with lifecycleState matching the given lifecycleState.
	State string `pulumi:"state"`
}

// GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateInput is an input type that accepts GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArgs and GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateOutput values.
// You can construct a concrete instance of `GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateInput` via:
//
//	GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArgs{...}
type GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateInput interface {
	pulumi.Input

	ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateOutput() GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateOutput
	ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateOutputWithContext(context.Context) GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateOutput
}

type GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArgs struct {
	// Unique key within a MediaWorkflowJob for the task.
	Key pulumi.StringInput `pulumi:"key"`
	// The lifecycle details of MediaWorkflowJob task.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// A filter to return only the resources with lifecycleState matching the given lifecycleState.
	State pulumi.StringInput `pulumi:"state"`
}

func (GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleState)(nil)).Elem()
}

func (i GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArgs) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateOutput() GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateOutput {
	return i.ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateOutputWithContext(context.Background())
}

func (i GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArgs) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateOutputWithContext(ctx context.Context) GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateOutput)
}

// GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArrayInput is an input type that accepts GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArray and GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArrayOutput values.
// You can construct a concrete instance of `GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArrayInput` via:
//
//	GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArray{ GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArgs{...} }
type GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArrayInput interface {
	pulumi.Input

	ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArrayOutput() GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArrayOutput
	ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArrayOutputWithContext(context.Context) GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArrayOutput
}

type GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArray []GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateInput

func (GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleState)(nil)).Elem()
}

func (i GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArray) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArrayOutput() GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArrayOutput {
	return i.ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArrayOutputWithContext(context.Background())
}

func (i GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArray) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArrayOutputWithContext(ctx context.Context) GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArrayOutput)
}

type GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleState)(nil)).Elem()
}

func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateOutput) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateOutput() GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateOutput {
	return o
}

func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateOutput) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateOutputWithContext(ctx context.Context) GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateOutput {
	return o
}

// Unique key within a MediaWorkflowJob for the task.
func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleState) string { return v.Key }).(pulumi.StringOutput)
}

// The lifecycle details of MediaWorkflowJob task.
func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleState) string {
		return v.LifecycleDetails
	}).(pulumi.StringOutput)
}

// A filter to return only the resources with lifecycleState matching the given lifecycleState.
func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleState) string { return v.State }).(pulumi.StringOutput)
}

type GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArrayOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleState)(nil)).Elem()
}

func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArrayOutput) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArrayOutput() GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArrayOutput {
	return o
}

func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArrayOutput) ToGetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArrayOutputWithContext(ctx context.Context) GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArrayOutput {
	return o
}

func (o GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArrayOutput) Index(i pulumi.IntInput) GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleState {
		return vs[0].([]GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleState)[vs[1].(int)]
	}).(GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateOutput)
}

type GetMediaWorkflowLock struct {
	// The compartment ID of the lock.
	CompartmentId string `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message string `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId string `pulumi:"relatedResourceId"`
	// The time when the MediaWorkflow was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The type of process to run at this task. Refers to the name of a MediaWorkflowTaskDeclaration.
	Type string `pulumi:"type"`
}

// GetMediaWorkflowLockInput is an input type that accepts GetMediaWorkflowLockArgs and GetMediaWorkflowLockOutput values.
// You can construct a concrete instance of `GetMediaWorkflowLockInput` via:
//
//	GetMediaWorkflowLockArgs{...}
type GetMediaWorkflowLockInput interface {
	pulumi.Input

	ToGetMediaWorkflowLockOutput() GetMediaWorkflowLockOutput
	ToGetMediaWorkflowLockOutputWithContext(context.Context) GetMediaWorkflowLockOutput
}

type GetMediaWorkflowLockArgs struct {
	// The compartment ID of the lock.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message pulumi.StringInput `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId pulumi.StringInput `pulumi:"relatedResourceId"`
	// The time when the MediaWorkflow was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The type of process to run at this task. Refers to the name of a MediaWorkflowTaskDeclaration.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetMediaWorkflowLockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowLock)(nil)).Elem()
}

func (i GetMediaWorkflowLockArgs) ToGetMediaWorkflowLockOutput() GetMediaWorkflowLockOutput {
	return i.ToGetMediaWorkflowLockOutputWithContext(context.Background())
}

func (i GetMediaWorkflowLockArgs) ToGetMediaWorkflowLockOutputWithContext(ctx context.Context) GetMediaWorkflowLockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowLockOutput)
}

// GetMediaWorkflowLockArrayInput is an input type that accepts GetMediaWorkflowLockArray and GetMediaWorkflowLockArrayOutput values.
// You can construct a concrete instance of `GetMediaWorkflowLockArrayInput` via:
//
//	GetMediaWorkflowLockArray{ GetMediaWorkflowLockArgs{...} }
type GetMediaWorkflowLockArrayInput interface {
	pulumi.Input

	ToGetMediaWorkflowLockArrayOutput() GetMediaWorkflowLockArrayOutput
	ToGetMediaWorkflowLockArrayOutputWithContext(context.Context) GetMediaWorkflowLockArrayOutput
}

type GetMediaWorkflowLockArray []GetMediaWorkflowLockInput

func (GetMediaWorkflowLockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowLock)(nil)).Elem()
}

func (i GetMediaWorkflowLockArray) ToGetMediaWorkflowLockArrayOutput() GetMediaWorkflowLockArrayOutput {
	return i.ToGetMediaWorkflowLockArrayOutputWithContext(context.Background())
}

func (i GetMediaWorkflowLockArray) ToGetMediaWorkflowLockArrayOutputWithContext(ctx context.Context) GetMediaWorkflowLockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowLockArrayOutput)
}

type GetMediaWorkflowLockOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowLockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowLock)(nil)).Elem()
}

func (o GetMediaWorkflowLockOutput) ToGetMediaWorkflowLockOutput() GetMediaWorkflowLockOutput {
	return o
}

func (o GetMediaWorkflowLockOutput) ToGetMediaWorkflowLockOutputWithContext(ctx context.Context) GetMediaWorkflowLockOutput {
	return o
}

// The compartment ID of the lock.
func (o GetMediaWorkflowLockOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowLock) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
func (o GetMediaWorkflowLockOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowLock) string { return v.Message }).(pulumi.StringOutput)
}

// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
func (o GetMediaWorkflowLockOutput) RelatedResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowLock) string { return v.RelatedResourceId }).(pulumi.StringOutput)
}

// The time when the MediaWorkflow was created. An RFC3339 formatted datetime string.
func (o GetMediaWorkflowLockOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowLock) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The type of process to run at this task. Refers to the name of a MediaWorkflowTaskDeclaration.
func (o GetMediaWorkflowLockOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowLock) string { return v.Type }).(pulumi.StringOutput)
}

type GetMediaWorkflowLockArrayOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowLockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowLock)(nil)).Elem()
}

func (o GetMediaWorkflowLockArrayOutput) ToGetMediaWorkflowLockArrayOutput() GetMediaWorkflowLockArrayOutput {
	return o
}

func (o GetMediaWorkflowLockArrayOutput) ToGetMediaWorkflowLockArrayOutputWithContext(ctx context.Context) GetMediaWorkflowLockArrayOutput {
	return o
}

func (o GetMediaWorkflowLockArrayOutput) Index(i pulumi.IntInput) GetMediaWorkflowLockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMediaWorkflowLock {
		return vs[0].([]GetMediaWorkflowLock)[vs[1].(int)]
	}).(GetMediaWorkflowLockOutput)
}

type GetMediaWorkflowTask struct {
	// Allows this task to be conditionally enabled.  If no value or a blank value is given, the task is unconditionally enbled.  Otherwise the given string specifies a parameter of the job created for this task's workflow using the JSON pointer syntax. The JSON pointer is validated when a job is created from the workflow of this task.
	EnableParameterReference string `pulumi:"enableParameterReference"`
	// Used in conjunction with enableParameterReference to conditionally enable a task.  When a job is created from the workflow of this task, the task will only be enabled if the value of the parameter specified by enableParameterReference is equal to the value of this property. This property must be prenset if and only if a enableParameterReference is given. The value is a JSON node.
	EnableWhenReferencedParameterEquals map[string]string `pulumi:"enableWhenReferencedParameterEquals"`
	// A unique identifier for this task within its workflow. Keys are used to reference a task within workflows and MediaWorkflowJobs. Tasks are referenced as prerequisites and to track output and state.
	Key string `pulumi:"key"`
	// Data specifiying how this task is to be run. The data is a JSON object that must conform to the JSON Schema specified by the parameters of the MediaWorkflowTaskDeclaration this task references. The parameters may contain values or references to other parameters.
	Parameters string `pulumi:"parameters"`
	// Keys to the other tasks in this workflow that must be completed before execution of this task can begin.
	Prerequisites []string `pulumi:"prerequisites"`
	// The type of process to run at this task. Refers to the name of a MediaWorkflowTaskDeclaration.
	Type string `pulumi:"type"`
	// The version of the MediaWorkflow.
	Version string `pulumi:"version"`
}

// GetMediaWorkflowTaskInput is an input type that accepts GetMediaWorkflowTaskArgs and GetMediaWorkflowTaskOutput values.
// You can construct a concrete instance of `GetMediaWorkflowTaskInput` via:
//
//	GetMediaWorkflowTaskArgs{...}
type GetMediaWorkflowTaskInput interface {
	pulumi.Input

	ToGetMediaWorkflowTaskOutput() GetMediaWorkflowTaskOutput
	ToGetMediaWorkflowTaskOutputWithContext(context.Context) GetMediaWorkflowTaskOutput
}

type GetMediaWorkflowTaskArgs struct {
	// Allows this task to be conditionally enabled.  If no value or a blank value is given, the task is unconditionally enbled.  Otherwise the given string specifies a parameter of the job created for this task's workflow using the JSON pointer syntax. The JSON pointer is validated when a job is created from the workflow of this task.
	EnableParameterReference pulumi.StringInput `pulumi:"enableParameterReference"`
	// Used in conjunction with enableParameterReference to conditionally enable a task.  When a job is created from the workflow of this task, the task will only be enabled if the value of the parameter specified by enableParameterReference is equal to the value of this property. This property must be prenset if and only if a enableParameterReference is given. The value is a JSON node.
	EnableWhenReferencedParameterEquals pulumi.StringMapInput `pulumi:"enableWhenReferencedParameterEquals"`
	// A unique identifier for this task within its workflow. Keys are used to reference a task within workflows and MediaWorkflowJobs. Tasks are referenced as prerequisites and to track output and state.
	Key pulumi.StringInput `pulumi:"key"`
	// Data specifiying how this task is to be run. The data is a JSON object that must conform to the JSON Schema specified by the parameters of the MediaWorkflowTaskDeclaration this task references. The parameters may contain values or references to other parameters.
	Parameters pulumi.StringInput `pulumi:"parameters"`
	// Keys to the other tasks in this workflow that must be completed before execution of this task can begin.
	Prerequisites pulumi.StringArrayInput `pulumi:"prerequisites"`
	// The type of process to run at this task. Refers to the name of a MediaWorkflowTaskDeclaration.
	Type pulumi.StringInput `pulumi:"type"`
	// The version of the MediaWorkflow.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetMediaWorkflowTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowTask)(nil)).Elem()
}

func (i GetMediaWorkflowTaskArgs) ToGetMediaWorkflowTaskOutput() GetMediaWorkflowTaskOutput {
	return i.ToGetMediaWorkflowTaskOutputWithContext(context.Background())
}

func (i GetMediaWorkflowTaskArgs) ToGetMediaWorkflowTaskOutputWithContext(ctx context.Context) GetMediaWorkflowTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowTaskOutput)
}

// GetMediaWorkflowTaskArrayInput is an input type that accepts GetMediaWorkflowTaskArray and GetMediaWorkflowTaskArrayOutput values.
// You can construct a concrete instance of `GetMediaWorkflowTaskArrayInput` via:
//
//	GetMediaWorkflowTaskArray{ GetMediaWorkflowTaskArgs{...} }
type GetMediaWorkflowTaskArrayInput interface {
	pulumi.Input

	ToGetMediaWorkflowTaskArrayOutput() GetMediaWorkflowTaskArrayOutput
	ToGetMediaWorkflowTaskArrayOutputWithContext(context.Context) GetMediaWorkflowTaskArrayOutput
}

type GetMediaWorkflowTaskArray []GetMediaWorkflowTaskInput

func (GetMediaWorkflowTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowTask)(nil)).Elem()
}

func (i GetMediaWorkflowTaskArray) ToGetMediaWorkflowTaskArrayOutput() GetMediaWorkflowTaskArrayOutput {
	return i.ToGetMediaWorkflowTaskArrayOutputWithContext(context.Background())
}

func (i GetMediaWorkflowTaskArray) ToGetMediaWorkflowTaskArrayOutputWithContext(ctx context.Context) GetMediaWorkflowTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowTaskArrayOutput)
}

type GetMediaWorkflowTaskOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowTask)(nil)).Elem()
}

func (o GetMediaWorkflowTaskOutput) ToGetMediaWorkflowTaskOutput() GetMediaWorkflowTaskOutput {
	return o
}

func (o GetMediaWorkflowTaskOutput) ToGetMediaWorkflowTaskOutputWithContext(ctx context.Context) GetMediaWorkflowTaskOutput {
	return o
}

// Allows this task to be conditionally enabled.  If no value or a blank value is given, the task is unconditionally enbled.  Otherwise the given string specifies a parameter of the job created for this task's workflow using the JSON pointer syntax. The JSON pointer is validated when a job is created from the workflow of this task.
func (o GetMediaWorkflowTaskOutput) EnableParameterReference() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowTask) string { return v.EnableParameterReference }).(pulumi.StringOutput)
}

// Used in conjunction with enableParameterReference to conditionally enable a task.  When a job is created from the workflow of this task, the task will only be enabled if the value of the parameter specified by enableParameterReference is equal to the value of this property. This property must be prenset if and only if a enableParameterReference is given. The value is a JSON node.
func (o GetMediaWorkflowTaskOutput) EnableWhenReferencedParameterEquals() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMediaWorkflowTask) map[string]string { return v.EnableWhenReferencedParameterEquals }).(pulumi.StringMapOutput)
}

// A unique identifier for this task within its workflow. Keys are used to reference a task within workflows and MediaWorkflowJobs. Tasks are referenced as prerequisites and to track output and state.
func (o GetMediaWorkflowTaskOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowTask) string { return v.Key }).(pulumi.StringOutput)
}

// Data specifiying how this task is to be run. The data is a JSON object that must conform to the JSON Schema specified by the parameters of the MediaWorkflowTaskDeclaration this task references. The parameters may contain values or references to other parameters.
func (o GetMediaWorkflowTaskOutput) Parameters() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowTask) string { return v.Parameters }).(pulumi.StringOutput)
}

// Keys to the other tasks in this workflow that must be completed before execution of this task can begin.
func (o GetMediaWorkflowTaskOutput) Prerequisites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMediaWorkflowTask) []string { return v.Prerequisites }).(pulumi.StringArrayOutput)
}

// The type of process to run at this task. Refers to the name of a MediaWorkflowTaskDeclaration.
func (o GetMediaWorkflowTaskOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowTask) string { return v.Type }).(pulumi.StringOutput)
}

// The version of the MediaWorkflow.
func (o GetMediaWorkflowTaskOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowTask) string { return v.Version }).(pulumi.StringOutput)
}

type GetMediaWorkflowTaskArrayOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowTask)(nil)).Elem()
}

func (o GetMediaWorkflowTaskArrayOutput) ToGetMediaWorkflowTaskArrayOutput() GetMediaWorkflowTaskArrayOutput {
	return o
}

func (o GetMediaWorkflowTaskArrayOutput) ToGetMediaWorkflowTaskArrayOutputWithContext(ctx context.Context) GetMediaWorkflowTaskArrayOutput {
	return o
}

func (o GetMediaWorkflowTaskArrayOutput) Index(i pulumi.IntInput) GetMediaWorkflowTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMediaWorkflowTask {
		return vs[0].([]GetMediaWorkflowTask)[vs[1].(int)]
	}).(GetMediaWorkflowTaskOutput)
}

type GetMediaWorkflowTaskDeclarationItem struct {
	// A filter to return only the resources with their system defined, unique name matching the given name.
	Name string `pulumi:"name"`
	// JSON schema specifying the parameters supported by this type of task. This is used to validate tasks' parameters when jobs are created.
	ParametersSchema string `pulumi:"parametersSchema"`
	// JSON schema similar to the parameterSchema, but permits parameter values to refer to other parameters using the ${/path/to/another/parmeter} syntax.  This is used to validate task parameters when workflows are created.
	ParametersSchemaAllowingReferences string `pulumi:"parametersSchemaAllowingReferences"`
	// A filter to select MediaWorkflowTaskDeclaration by version.
	Version int `pulumi:"version"`
}

// GetMediaWorkflowTaskDeclarationItemInput is an input type that accepts GetMediaWorkflowTaskDeclarationItemArgs and GetMediaWorkflowTaskDeclarationItemOutput values.
// You can construct a concrete instance of `GetMediaWorkflowTaskDeclarationItemInput` via:
//
//	GetMediaWorkflowTaskDeclarationItemArgs{...}
type GetMediaWorkflowTaskDeclarationItemInput interface {
	pulumi.Input

	ToGetMediaWorkflowTaskDeclarationItemOutput() GetMediaWorkflowTaskDeclarationItemOutput
	ToGetMediaWorkflowTaskDeclarationItemOutputWithContext(context.Context) GetMediaWorkflowTaskDeclarationItemOutput
}

type GetMediaWorkflowTaskDeclarationItemArgs struct {
	// A filter to return only the resources with their system defined, unique name matching the given name.
	Name pulumi.StringInput `pulumi:"name"`
	// JSON schema specifying the parameters supported by this type of task. This is used to validate tasks' parameters when jobs are created.
	ParametersSchema pulumi.StringInput `pulumi:"parametersSchema"`
	// JSON schema similar to the parameterSchema, but permits parameter values to refer to other parameters using the ${/path/to/another/parmeter} syntax.  This is used to validate task parameters when workflows are created.
	ParametersSchemaAllowingReferences pulumi.StringInput `pulumi:"parametersSchemaAllowingReferences"`
	// A filter to select MediaWorkflowTaskDeclaration by version.
	Version pulumi.IntInput `pulumi:"version"`
}

func (GetMediaWorkflowTaskDeclarationItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowTaskDeclarationItem)(nil)).Elem()
}

func (i GetMediaWorkflowTaskDeclarationItemArgs) ToGetMediaWorkflowTaskDeclarationItemOutput() GetMediaWorkflowTaskDeclarationItemOutput {
	return i.ToGetMediaWorkflowTaskDeclarationItemOutputWithContext(context.Background())
}

func (i GetMediaWorkflowTaskDeclarationItemArgs) ToGetMediaWorkflowTaskDeclarationItemOutputWithContext(ctx context.Context) GetMediaWorkflowTaskDeclarationItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowTaskDeclarationItemOutput)
}

// GetMediaWorkflowTaskDeclarationItemArrayInput is an input type that accepts GetMediaWorkflowTaskDeclarationItemArray and GetMediaWorkflowTaskDeclarationItemArrayOutput values.
// You can construct a concrete instance of `GetMediaWorkflowTaskDeclarationItemArrayInput` via:
//
//	GetMediaWorkflowTaskDeclarationItemArray{ GetMediaWorkflowTaskDeclarationItemArgs{...} }
type GetMediaWorkflowTaskDeclarationItemArrayInput interface {
	pulumi.Input

	ToGetMediaWorkflowTaskDeclarationItemArrayOutput() GetMediaWorkflowTaskDeclarationItemArrayOutput
	ToGetMediaWorkflowTaskDeclarationItemArrayOutputWithContext(context.Context) GetMediaWorkflowTaskDeclarationItemArrayOutput
}

type GetMediaWorkflowTaskDeclarationItemArray []GetMediaWorkflowTaskDeclarationItemInput

func (GetMediaWorkflowTaskDeclarationItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowTaskDeclarationItem)(nil)).Elem()
}

func (i GetMediaWorkflowTaskDeclarationItemArray) ToGetMediaWorkflowTaskDeclarationItemArrayOutput() GetMediaWorkflowTaskDeclarationItemArrayOutput {
	return i.ToGetMediaWorkflowTaskDeclarationItemArrayOutputWithContext(context.Background())
}

func (i GetMediaWorkflowTaskDeclarationItemArray) ToGetMediaWorkflowTaskDeclarationItemArrayOutputWithContext(ctx context.Context) GetMediaWorkflowTaskDeclarationItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowTaskDeclarationItemArrayOutput)
}

type GetMediaWorkflowTaskDeclarationItemOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowTaskDeclarationItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowTaskDeclarationItem)(nil)).Elem()
}

func (o GetMediaWorkflowTaskDeclarationItemOutput) ToGetMediaWorkflowTaskDeclarationItemOutput() GetMediaWorkflowTaskDeclarationItemOutput {
	return o
}

func (o GetMediaWorkflowTaskDeclarationItemOutput) ToGetMediaWorkflowTaskDeclarationItemOutputWithContext(ctx context.Context) GetMediaWorkflowTaskDeclarationItemOutput {
	return o
}

// A filter to return only the resources with their system defined, unique name matching the given name.
func (o GetMediaWorkflowTaskDeclarationItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowTaskDeclarationItem) string { return v.Name }).(pulumi.StringOutput)
}

// JSON schema specifying the parameters supported by this type of task. This is used to validate tasks' parameters when jobs are created.
func (o GetMediaWorkflowTaskDeclarationItemOutput) ParametersSchema() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowTaskDeclarationItem) string { return v.ParametersSchema }).(pulumi.StringOutput)
}

// JSON schema similar to the parameterSchema, but permits parameter values to refer to other parameters using the ${/path/to/another/parmeter} syntax.  This is used to validate task parameters when workflows are created.
func (o GetMediaWorkflowTaskDeclarationItemOutput) ParametersSchemaAllowingReferences() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowTaskDeclarationItem) string { return v.ParametersSchemaAllowingReferences }).(pulumi.StringOutput)
}

// A filter to select MediaWorkflowTaskDeclaration by version.
func (o GetMediaWorkflowTaskDeclarationItemOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v GetMediaWorkflowTaskDeclarationItem) int { return v.Version }).(pulumi.IntOutput)
}

type GetMediaWorkflowTaskDeclarationItemArrayOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowTaskDeclarationItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowTaskDeclarationItem)(nil)).Elem()
}

func (o GetMediaWorkflowTaskDeclarationItemArrayOutput) ToGetMediaWorkflowTaskDeclarationItemArrayOutput() GetMediaWorkflowTaskDeclarationItemArrayOutput {
	return o
}

func (o GetMediaWorkflowTaskDeclarationItemArrayOutput) ToGetMediaWorkflowTaskDeclarationItemArrayOutputWithContext(ctx context.Context) GetMediaWorkflowTaskDeclarationItemArrayOutput {
	return o
}

func (o GetMediaWorkflowTaskDeclarationItemArrayOutput) Index(i pulumi.IntInput) GetMediaWorkflowTaskDeclarationItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMediaWorkflowTaskDeclarationItem {
		return vs[0].([]GetMediaWorkflowTaskDeclarationItem)[vs[1].(int)]
	}).(GetMediaWorkflowTaskDeclarationItemOutput)
}

type GetMediaWorkflowsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetMediaWorkflowsFilterInput is an input type that accepts GetMediaWorkflowsFilterArgs and GetMediaWorkflowsFilterOutput values.
// You can construct a concrete instance of `GetMediaWorkflowsFilterInput` via:
//
//	GetMediaWorkflowsFilterArgs{...}
type GetMediaWorkflowsFilterInput interface {
	pulumi.Input

	ToGetMediaWorkflowsFilterOutput() GetMediaWorkflowsFilterOutput
	ToGetMediaWorkflowsFilterOutputWithContext(context.Context) GetMediaWorkflowsFilterOutput
}

type GetMediaWorkflowsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetMediaWorkflowsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowsFilter)(nil)).Elem()
}

func (i GetMediaWorkflowsFilterArgs) ToGetMediaWorkflowsFilterOutput() GetMediaWorkflowsFilterOutput {
	return i.ToGetMediaWorkflowsFilterOutputWithContext(context.Background())
}

func (i GetMediaWorkflowsFilterArgs) ToGetMediaWorkflowsFilterOutputWithContext(ctx context.Context) GetMediaWorkflowsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowsFilterOutput)
}

// GetMediaWorkflowsFilterArrayInput is an input type that accepts GetMediaWorkflowsFilterArray and GetMediaWorkflowsFilterArrayOutput values.
// You can construct a concrete instance of `GetMediaWorkflowsFilterArrayInput` via:
//
//	GetMediaWorkflowsFilterArray{ GetMediaWorkflowsFilterArgs{...} }
type GetMediaWorkflowsFilterArrayInput interface {
	pulumi.Input

	ToGetMediaWorkflowsFilterArrayOutput() GetMediaWorkflowsFilterArrayOutput
	ToGetMediaWorkflowsFilterArrayOutputWithContext(context.Context) GetMediaWorkflowsFilterArrayOutput
}

type GetMediaWorkflowsFilterArray []GetMediaWorkflowsFilterInput

func (GetMediaWorkflowsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowsFilter)(nil)).Elem()
}

func (i GetMediaWorkflowsFilterArray) ToGetMediaWorkflowsFilterArrayOutput() GetMediaWorkflowsFilterArrayOutput {
	return i.ToGetMediaWorkflowsFilterArrayOutputWithContext(context.Background())
}

func (i GetMediaWorkflowsFilterArray) ToGetMediaWorkflowsFilterArrayOutputWithContext(ctx context.Context) GetMediaWorkflowsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowsFilterArrayOutput)
}

type GetMediaWorkflowsFilterOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowsFilter)(nil)).Elem()
}

func (o GetMediaWorkflowsFilterOutput) ToGetMediaWorkflowsFilterOutput() GetMediaWorkflowsFilterOutput {
	return o
}

func (o GetMediaWorkflowsFilterOutput) ToGetMediaWorkflowsFilterOutputWithContext(ctx context.Context) GetMediaWorkflowsFilterOutput {
	return o
}

func (o GetMediaWorkflowsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetMediaWorkflowsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetMediaWorkflowsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetMediaWorkflowsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMediaWorkflowsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetMediaWorkflowsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowsFilter)(nil)).Elem()
}

func (o GetMediaWorkflowsFilterArrayOutput) ToGetMediaWorkflowsFilterArrayOutput() GetMediaWorkflowsFilterArrayOutput {
	return o
}

func (o GetMediaWorkflowsFilterArrayOutput) ToGetMediaWorkflowsFilterArrayOutputWithContext(ctx context.Context) GetMediaWorkflowsFilterArrayOutput {
	return o
}

func (o GetMediaWorkflowsFilterArrayOutput) Index(i pulumi.IntInput) GetMediaWorkflowsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMediaWorkflowsFilter {
		return vs[0].([]GetMediaWorkflowsFilter)[vs[1].(int)]
	}).(GetMediaWorkflowsFilterOutput)
}

type GetMediaWorkflowsMediaWorkflowCollection struct {
	Items []GetMediaWorkflowsMediaWorkflowCollectionItem `pulumi:"items"`
}

// GetMediaWorkflowsMediaWorkflowCollectionInput is an input type that accepts GetMediaWorkflowsMediaWorkflowCollectionArgs and GetMediaWorkflowsMediaWorkflowCollectionOutput values.
// You can construct a concrete instance of `GetMediaWorkflowsMediaWorkflowCollectionInput` via:
//
//	GetMediaWorkflowsMediaWorkflowCollectionArgs{...}
type GetMediaWorkflowsMediaWorkflowCollectionInput interface {
	pulumi.Input

	ToGetMediaWorkflowsMediaWorkflowCollectionOutput() GetMediaWorkflowsMediaWorkflowCollectionOutput
	ToGetMediaWorkflowsMediaWorkflowCollectionOutputWithContext(context.Context) GetMediaWorkflowsMediaWorkflowCollectionOutput
}

type GetMediaWorkflowsMediaWorkflowCollectionArgs struct {
	Items GetMediaWorkflowsMediaWorkflowCollectionItemArrayInput `pulumi:"items"`
}

func (GetMediaWorkflowsMediaWorkflowCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowsMediaWorkflowCollection)(nil)).Elem()
}

func (i GetMediaWorkflowsMediaWorkflowCollectionArgs) ToGetMediaWorkflowsMediaWorkflowCollectionOutput() GetMediaWorkflowsMediaWorkflowCollectionOutput {
	return i.ToGetMediaWorkflowsMediaWorkflowCollectionOutputWithContext(context.Background())
}

func (i GetMediaWorkflowsMediaWorkflowCollectionArgs) ToGetMediaWorkflowsMediaWorkflowCollectionOutputWithContext(ctx context.Context) GetMediaWorkflowsMediaWorkflowCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowsMediaWorkflowCollectionOutput)
}

// GetMediaWorkflowsMediaWorkflowCollectionArrayInput is an input type that accepts GetMediaWorkflowsMediaWorkflowCollectionArray and GetMediaWorkflowsMediaWorkflowCollectionArrayOutput values.
// You can construct a concrete instance of `GetMediaWorkflowsMediaWorkflowCollectionArrayInput` via:
//
//	GetMediaWorkflowsMediaWorkflowCollectionArray{ GetMediaWorkflowsMediaWorkflowCollectionArgs{...} }
type GetMediaWorkflowsMediaWorkflowCollectionArrayInput interface {
	pulumi.Input

	ToGetMediaWorkflowsMediaWorkflowCollectionArrayOutput() GetMediaWorkflowsMediaWorkflowCollectionArrayOutput
	ToGetMediaWorkflowsMediaWorkflowCollectionArrayOutputWithContext(context.Context) GetMediaWorkflowsMediaWorkflowCollectionArrayOutput
}

type GetMediaWorkflowsMediaWorkflowCollectionArray []GetMediaWorkflowsMediaWorkflowCollectionInput

func (GetMediaWorkflowsMediaWorkflowCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowsMediaWorkflowCollection)(nil)).Elem()
}

func (i GetMediaWorkflowsMediaWorkflowCollectionArray) ToGetMediaWorkflowsMediaWorkflowCollectionArrayOutput() GetMediaWorkflowsMediaWorkflowCollectionArrayOutput {
	return i.ToGetMediaWorkflowsMediaWorkflowCollectionArrayOutputWithContext(context.Background())
}

func (i GetMediaWorkflowsMediaWorkflowCollectionArray) ToGetMediaWorkflowsMediaWorkflowCollectionArrayOutputWithContext(ctx context.Context) GetMediaWorkflowsMediaWorkflowCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowsMediaWorkflowCollectionArrayOutput)
}

type GetMediaWorkflowsMediaWorkflowCollectionOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowsMediaWorkflowCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowsMediaWorkflowCollection)(nil)).Elem()
}

func (o GetMediaWorkflowsMediaWorkflowCollectionOutput) ToGetMediaWorkflowsMediaWorkflowCollectionOutput() GetMediaWorkflowsMediaWorkflowCollectionOutput {
	return o
}

func (o GetMediaWorkflowsMediaWorkflowCollectionOutput) ToGetMediaWorkflowsMediaWorkflowCollectionOutputWithContext(ctx context.Context) GetMediaWorkflowsMediaWorkflowCollectionOutput {
	return o
}

func (o GetMediaWorkflowsMediaWorkflowCollectionOutput) Items() GetMediaWorkflowsMediaWorkflowCollectionItemArrayOutput {
	return o.ApplyT(func(v GetMediaWorkflowsMediaWorkflowCollection) []GetMediaWorkflowsMediaWorkflowCollectionItem {
		return v.Items
	}).(GetMediaWorkflowsMediaWorkflowCollectionItemArrayOutput)
}

type GetMediaWorkflowsMediaWorkflowCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowsMediaWorkflowCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowsMediaWorkflowCollection)(nil)).Elem()
}

func (o GetMediaWorkflowsMediaWorkflowCollectionArrayOutput) ToGetMediaWorkflowsMediaWorkflowCollectionArrayOutput() GetMediaWorkflowsMediaWorkflowCollectionArrayOutput {
	return o
}

func (o GetMediaWorkflowsMediaWorkflowCollectionArrayOutput) ToGetMediaWorkflowsMediaWorkflowCollectionArrayOutputWithContext(ctx context.Context) GetMediaWorkflowsMediaWorkflowCollectionArrayOutput {
	return o
}

func (o GetMediaWorkflowsMediaWorkflowCollectionArrayOutput) Index(i pulumi.IntInput) GetMediaWorkflowsMediaWorkflowCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMediaWorkflowsMediaWorkflowCollection {
		return vs[0].([]GetMediaWorkflowsMediaWorkflowCollection)[vs[1].(int)]
	}).(GetMediaWorkflowsMediaWorkflowCollectionOutput)
}

type GetMediaWorkflowsMediaWorkflowCollectionItem struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A filter to return only the resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Unique MediaWorkflow identifier.
	Id             string `pulumi:"id"`
	IsLockOverride bool   `pulumi:"isLockOverride"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecyleDetails string `pulumi:"lifecyleDetails"`
	// Locks associated with this resource.
	Locks []GetMediaWorkflowsMediaWorkflowCollectionItemLock `pulumi:"locks"`
	// Configurations to be applied to all the runs of this workflow. Parameters in these configurations are overridden by parameters in the MediaWorkflowConfigurations of the MediaWorkflowJob and the parameters of the MediaWorkflowJob. If the same parameter appears in multiple configurations, the values that appear in the configuration at the highest index will be used.
	MediaWorkflowConfigurationIds []string `pulumi:"mediaWorkflowConfigurationIds"`
	// Data specifiying how this task is to be run. The data is a JSON object that must conform to the JSON Schema specified by the parameters of the MediaWorkflowTaskDeclaration this task references. The parameters may contain values or references to other parameters.
	Parameters string `pulumi:"parameters"`
	// A filter to return only the resources with lifecycleState matching the given lifecycleState.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The processing to be done in this workflow. Each key of the MediaWorkflowTasks in this array is unique within the array.  The order of the items is preserved from the order of the tasks array in CreateMediaWorkflowDetails or UpdateMediaWorkflowDetails.
	Tasks []GetMediaWorkflowsMediaWorkflowCollectionItemTask `pulumi:"tasks"`
	// The time when the MediaWorkflow was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time when the MediaWorkflow was updated. An RFC3339 formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
	// The version of the MediaWorkflow.
	Version string `pulumi:"version"`
}

// GetMediaWorkflowsMediaWorkflowCollectionItemInput is an input type that accepts GetMediaWorkflowsMediaWorkflowCollectionItemArgs and GetMediaWorkflowsMediaWorkflowCollectionItemOutput values.
// You can construct a concrete instance of `GetMediaWorkflowsMediaWorkflowCollectionItemInput` via:
//
//	GetMediaWorkflowsMediaWorkflowCollectionItemArgs{...}
type GetMediaWorkflowsMediaWorkflowCollectionItemInput interface {
	pulumi.Input

	ToGetMediaWorkflowsMediaWorkflowCollectionItemOutput() GetMediaWorkflowsMediaWorkflowCollectionItemOutput
	ToGetMediaWorkflowsMediaWorkflowCollectionItemOutputWithContext(context.Context) GetMediaWorkflowsMediaWorkflowCollectionItemOutput
}

type GetMediaWorkflowsMediaWorkflowCollectionItemArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// A filter to return only the resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// Unique MediaWorkflow identifier.
	Id             pulumi.StringInput `pulumi:"id"`
	IsLockOverride pulumi.BoolInput   `pulumi:"isLockOverride"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecyleDetails pulumi.StringInput `pulumi:"lifecyleDetails"`
	// Locks associated with this resource.
	Locks GetMediaWorkflowsMediaWorkflowCollectionItemLockArrayInput `pulumi:"locks"`
	// Configurations to be applied to all the runs of this workflow. Parameters in these configurations are overridden by parameters in the MediaWorkflowConfigurations of the MediaWorkflowJob and the parameters of the MediaWorkflowJob. If the same parameter appears in multiple configurations, the values that appear in the configuration at the highest index will be used.
	MediaWorkflowConfigurationIds pulumi.StringArrayInput `pulumi:"mediaWorkflowConfigurationIds"`
	// Data specifiying how this task is to be run. The data is a JSON object that must conform to the JSON Schema specified by the parameters of the MediaWorkflowTaskDeclaration this task references. The parameters may contain values or references to other parameters.
	Parameters pulumi.StringInput `pulumi:"parameters"`
	// A filter to return only the resources with lifecycleState matching the given lifecycleState.
	State pulumi.StringInput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput `pulumi:"systemTags"`
	// The processing to be done in this workflow. Each key of the MediaWorkflowTasks in this array is unique within the array.  The order of the items is preserved from the order of the tasks array in CreateMediaWorkflowDetails or UpdateMediaWorkflowDetails.
	Tasks GetMediaWorkflowsMediaWorkflowCollectionItemTaskArrayInput `pulumi:"tasks"`
	// The time when the MediaWorkflow was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time when the MediaWorkflow was updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// The version of the MediaWorkflow.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetMediaWorkflowsMediaWorkflowCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowsMediaWorkflowCollectionItem)(nil)).Elem()
}

func (i GetMediaWorkflowsMediaWorkflowCollectionItemArgs) ToGetMediaWorkflowsMediaWorkflowCollectionItemOutput() GetMediaWorkflowsMediaWorkflowCollectionItemOutput {
	return i.ToGetMediaWorkflowsMediaWorkflowCollectionItemOutputWithContext(context.Background())
}

func (i GetMediaWorkflowsMediaWorkflowCollectionItemArgs) ToGetMediaWorkflowsMediaWorkflowCollectionItemOutputWithContext(ctx context.Context) GetMediaWorkflowsMediaWorkflowCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowsMediaWorkflowCollectionItemOutput)
}

// GetMediaWorkflowsMediaWorkflowCollectionItemArrayInput is an input type that accepts GetMediaWorkflowsMediaWorkflowCollectionItemArray and GetMediaWorkflowsMediaWorkflowCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetMediaWorkflowsMediaWorkflowCollectionItemArrayInput` via:
//
//	GetMediaWorkflowsMediaWorkflowCollectionItemArray{ GetMediaWorkflowsMediaWorkflowCollectionItemArgs{...} }
type GetMediaWorkflowsMediaWorkflowCollectionItemArrayInput interface {
	pulumi.Input

	ToGetMediaWorkflowsMediaWorkflowCollectionItemArrayOutput() GetMediaWorkflowsMediaWorkflowCollectionItemArrayOutput
	ToGetMediaWorkflowsMediaWorkflowCollectionItemArrayOutputWithContext(context.Context) GetMediaWorkflowsMediaWorkflowCollectionItemArrayOutput
}

type GetMediaWorkflowsMediaWorkflowCollectionItemArray []GetMediaWorkflowsMediaWorkflowCollectionItemInput

func (GetMediaWorkflowsMediaWorkflowCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowsMediaWorkflowCollectionItem)(nil)).Elem()
}

func (i GetMediaWorkflowsMediaWorkflowCollectionItemArray) ToGetMediaWorkflowsMediaWorkflowCollectionItemArrayOutput() GetMediaWorkflowsMediaWorkflowCollectionItemArrayOutput {
	return i.ToGetMediaWorkflowsMediaWorkflowCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetMediaWorkflowsMediaWorkflowCollectionItemArray) ToGetMediaWorkflowsMediaWorkflowCollectionItemArrayOutputWithContext(ctx context.Context) GetMediaWorkflowsMediaWorkflowCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowsMediaWorkflowCollectionItemArrayOutput)
}

type GetMediaWorkflowsMediaWorkflowCollectionItemOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowsMediaWorkflowCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowsMediaWorkflowCollectionItem)(nil)).Elem()
}

func (o GetMediaWorkflowsMediaWorkflowCollectionItemOutput) ToGetMediaWorkflowsMediaWorkflowCollectionItemOutput() GetMediaWorkflowsMediaWorkflowCollectionItemOutput {
	return o
}

func (o GetMediaWorkflowsMediaWorkflowCollectionItemOutput) ToGetMediaWorkflowsMediaWorkflowCollectionItemOutputWithContext(ctx context.Context) GetMediaWorkflowsMediaWorkflowCollectionItemOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetMediaWorkflowsMediaWorkflowCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowsMediaWorkflowCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetMediaWorkflowsMediaWorkflowCollectionItemOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMediaWorkflowsMediaWorkflowCollectionItem) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A filter to return only the resources that match the entire display name given.
func (o GetMediaWorkflowsMediaWorkflowCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowsMediaWorkflowCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetMediaWorkflowsMediaWorkflowCollectionItemOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMediaWorkflowsMediaWorkflowCollectionItem) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Unique MediaWorkflow identifier.
func (o GetMediaWorkflowsMediaWorkflowCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowsMediaWorkflowCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetMediaWorkflowsMediaWorkflowCollectionItemOutput) IsLockOverride() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMediaWorkflowsMediaWorkflowCollectionItem) bool { return v.IsLockOverride }).(pulumi.BoolOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetMediaWorkflowsMediaWorkflowCollectionItemOutput) LifecyleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowsMediaWorkflowCollectionItem) string { return v.LifecyleDetails }).(pulumi.StringOutput)
}

// Locks associated with this resource.
func (o GetMediaWorkflowsMediaWorkflowCollectionItemOutput) Locks() GetMediaWorkflowsMediaWorkflowCollectionItemLockArrayOutput {
	return o.ApplyT(func(v GetMediaWorkflowsMediaWorkflowCollectionItem) []GetMediaWorkflowsMediaWorkflowCollectionItemLock {
		return v.Locks
	}).(GetMediaWorkflowsMediaWorkflowCollectionItemLockArrayOutput)
}

// Configurations to be applied to all the runs of this workflow. Parameters in these configurations are overridden by parameters in the MediaWorkflowConfigurations of the MediaWorkflowJob and the parameters of the MediaWorkflowJob. If the same parameter appears in multiple configurations, the values that appear in the configuration at the highest index will be used.
func (o GetMediaWorkflowsMediaWorkflowCollectionItemOutput) MediaWorkflowConfigurationIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMediaWorkflowsMediaWorkflowCollectionItem) []string { return v.MediaWorkflowConfigurationIds }).(pulumi.StringArrayOutput)
}

// Data specifiying how this task is to be run. The data is a JSON object that must conform to the JSON Schema specified by the parameters of the MediaWorkflowTaskDeclaration this task references. The parameters may contain values or references to other parameters.
func (o GetMediaWorkflowsMediaWorkflowCollectionItemOutput) Parameters() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowsMediaWorkflowCollectionItem) string { return v.Parameters }).(pulumi.StringOutput)
}

// A filter to return only the resources with lifecycleState matching the given lifecycleState.
func (o GetMediaWorkflowsMediaWorkflowCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowsMediaWorkflowCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetMediaWorkflowsMediaWorkflowCollectionItemOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMediaWorkflowsMediaWorkflowCollectionItem) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The processing to be done in this workflow. Each key of the MediaWorkflowTasks in this array is unique within the array.  The order of the items is preserved from the order of the tasks array in CreateMediaWorkflowDetails or UpdateMediaWorkflowDetails.
func (o GetMediaWorkflowsMediaWorkflowCollectionItemOutput) Tasks() GetMediaWorkflowsMediaWorkflowCollectionItemTaskArrayOutput {
	return o.ApplyT(func(v GetMediaWorkflowsMediaWorkflowCollectionItem) []GetMediaWorkflowsMediaWorkflowCollectionItemTask {
		return v.Tasks
	}).(GetMediaWorkflowsMediaWorkflowCollectionItemTaskArrayOutput)
}

// The time when the MediaWorkflow was created. An RFC3339 formatted datetime string.
func (o GetMediaWorkflowsMediaWorkflowCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowsMediaWorkflowCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time when the MediaWorkflow was updated. An RFC3339 formatted datetime string.
func (o GetMediaWorkflowsMediaWorkflowCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowsMediaWorkflowCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The version of the MediaWorkflow.
func (o GetMediaWorkflowsMediaWorkflowCollectionItemOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowsMediaWorkflowCollectionItem) string { return v.Version }).(pulumi.StringOutput)
}

type GetMediaWorkflowsMediaWorkflowCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowsMediaWorkflowCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowsMediaWorkflowCollectionItem)(nil)).Elem()
}

func (o GetMediaWorkflowsMediaWorkflowCollectionItemArrayOutput) ToGetMediaWorkflowsMediaWorkflowCollectionItemArrayOutput() GetMediaWorkflowsMediaWorkflowCollectionItemArrayOutput {
	return o
}

func (o GetMediaWorkflowsMediaWorkflowCollectionItemArrayOutput) ToGetMediaWorkflowsMediaWorkflowCollectionItemArrayOutputWithContext(ctx context.Context) GetMediaWorkflowsMediaWorkflowCollectionItemArrayOutput {
	return o
}

func (o GetMediaWorkflowsMediaWorkflowCollectionItemArrayOutput) Index(i pulumi.IntInput) GetMediaWorkflowsMediaWorkflowCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMediaWorkflowsMediaWorkflowCollectionItem {
		return vs[0].([]GetMediaWorkflowsMediaWorkflowCollectionItem)[vs[1].(int)]
	}).(GetMediaWorkflowsMediaWorkflowCollectionItemOutput)
}

type GetMediaWorkflowsMediaWorkflowCollectionItemLock struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message string `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId string `pulumi:"relatedResourceId"`
	// The time when the MediaWorkflow was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The type of process to run at this task. Refers to the name of a MediaWorkflowTaskDeclaration.
	Type string `pulumi:"type"`
}

// GetMediaWorkflowsMediaWorkflowCollectionItemLockInput is an input type that accepts GetMediaWorkflowsMediaWorkflowCollectionItemLockArgs and GetMediaWorkflowsMediaWorkflowCollectionItemLockOutput values.
// You can construct a concrete instance of `GetMediaWorkflowsMediaWorkflowCollectionItemLockInput` via:
//
//	GetMediaWorkflowsMediaWorkflowCollectionItemLockArgs{...}
type GetMediaWorkflowsMediaWorkflowCollectionItemLockInput interface {
	pulumi.Input

	ToGetMediaWorkflowsMediaWorkflowCollectionItemLockOutput() GetMediaWorkflowsMediaWorkflowCollectionItemLockOutput
	ToGetMediaWorkflowsMediaWorkflowCollectionItemLockOutputWithContext(context.Context) GetMediaWorkflowsMediaWorkflowCollectionItemLockOutput
}

type GetMediaWorkflowsMediaWorkflowCollectionItemLockArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message pulumi.StringInput `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId pulumi.StringInput `pulumi:"relatedResourceId"`
	// The time when the MediaWorkflow was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The type of process to run at this task. Refers to the name of a MediaWorkflowTaskDeclaration.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetMediaWorkflowsMediaWorkflowCollectionItemLockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowsMediaWorkflowCollectionItemLock)(nil)).Elem()
}

func (i GetMediaWorkflowsMediaWorkflowCollectionItemLockArgs) ToGetMediaWorkflowsMediaWorkflowCollectionItemLockOutput() GetMediaWorkflowsMediaWorkflowCollectionItemLockOutput {
	return i.ToGetMediaWorkflowsMediaWorkflowCollectionItemLockOutputWithContext(context.Background())
}

func (i GetMediaWorkflowsMediaWorkflowCollectionItemLockArgs) ToGetMediaWorkflowsMediaWorkflowCollectionItemLockOutputWithContext(ctx context.Context) GetMediaWorkflowsMediaWorkflowCollectionItemLockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowsMediaWorkflowCollectionItemLockOutput)
}

// GetMediaWorkflowsMediaWorkflowCollectionItemLockArrayInput is an input type that accepts GetMediaWorkflowsMediaWorkflowCollectionItemLockArray and GetMediaWorkflowsMediaWorkflowCollectionItemLockArrayOutput values.
// You can construct a concrete instance of `GetMediaWorkflowsMediaWorkflowCollectionItemLockArrayInput` via:
//
//	GetMediaWorkflowsMediaWorkflowCollectionItemLockArray{ GetMediaWorkflowsMediaWorkflowCollectionItemLockArgs{...} }
type GetMediaWorkflowsMediaWorkflowCollectionItemLockArrayInput interface {
	pulumi.Input

	ToGetMediaWorkflowsMediaWorkflowCollectionItemLockArrayOutput() GetMediaWorkflowsMediaWorkflowCollectionItemLockArrayOutput
	ToGetMediaWorkflowsMediaWorkflowCollectionItemLockArrayOutputWithContext(context.Context) GetMediaWorkflowsMediaWorkflowCollectionItemLockArrayOutput
}

type GetMediaWorkflowsMediaWorkflowCollectionItemLockArray []GetMediaWorkflowsMediaWorkflowCollectionItemLockInput

func (GetMediaWorkflowsMediaWorkflowCollectionItemLockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowsMediaWorkflowCollectionItemLock)(nil)).Elem()
}

func (i GetMediaWorkflowsMediaWorkflowCollectionItemLockArray) ToGetMediaWorkflowsMediaWorkflowCollectionItemLockArrayOutput() GetMediaWorkflowsMediaWorkflowCollectionItemLockArrayOutput {
	return i.ToGetMediaWorkflowsMediaWorkflowCollectionItemLockArrayOutputWithContext(context.Background())
}

func (i GetMediaWorkflowsMediaWorkflowCollectionItemLockArray) ToGetMediaWorkflowsMediaWorkflowCollectionItemLockArrayOutputWithContext(ctx context.Context) GetMediaWorkflowsMediaWorkflowCollectionItemLockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowsMediaWorkflowCollectionItemLockArrayOutput)
}

type GetMediaWorkflowsMediaWorkflowCollectionItemLockOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowsMediaWorkflowCollectionItemLockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowsMediaWorkflowCollectionItemLock)(nil)).Elem()
}

func (o GetMediaWorkflowsMediaWorkflowCollectionItemLockOutput) ToGetMediaWorkflowsMediaWorkflowCollectionItemLockOutput() GetMediaWorkflowsMediaWorkflowCollectionItemLockOutput {
	return o
}

func (o GetMediaWorkflowsMediaWorkflowCollectionItemLockOutput) ToGetMediaWorkflowsMediaWorkflowCollectionItemLockOutputWithContext(ctx context.Context) GetMediaWorkflowsMediaWorkflowCollectionItemLockOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetMediaWorkflowsMediaWorkflowCollectionItemLockOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowsMediaWorkflowCollectionItemLock) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
func (o GetMediaWorkflowsMediaWorkflowCollectionItemLockOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowsMediaWorkflowCollectionItemLock) string { return v.Message }).(pulumi.StringOutput)
}

// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
func (o GetMediaWorkflowsMediaWorkflowCollectionItemLockOutput) RelatedResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowsMediaWorkflowCollectionItemLock) string { return v.RelatedResourceId }).(pulumi.StringOutput)
}

// The time when the MediaWorkflow was created. An RFC3339 formatted datetime string.
func (o GetMediaWorkflowsMediaWorkflowCollectionItemLockOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowsMediaWorkflowCollectionItemLock) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The type of process to run at this task. Refers to the name of a MediaWorkflowTaskDeclaration.
func (o GetMediaWorkflowsMediaWorkflowCollectionItemLockOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowsMediaWorkflowCollectionItemLock) string { return v.Type }).(pulumi.StringOutput)
}

type GetMediaWorkflowsMediaWorkflowCollectionItemLockArrayOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowsMediaWorkflowCollectionItemLockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowsMediaWorkflowCollectionItemLock)(nil)).Elem()
}

func (o GetMediaWorkflowsMediaWorkflowCollectionItemLockArrayOutput) ToGetMediaWorkflowsMediaWorkflowCollectionItemLockArrayOutput() GetMediaWorkflowsMediaWorkflowCollectionItemLockArrayOutput {
	return o
}

func (o GetMediaWorkflowsMediaWorkflowCollectionItemLockArrayOutput) ToGetMediaWorkflowsMediaWorkflowCollectionItemLockArrayOutputWithContext(ctx context.Context) GetMediaWorkflowsMediaWorkflowCollectionItemLockArrayOutput {
	return o
}

func (o GetMediaWorkflowsMediaWorkflowCollectionItemLockArrayOutput) Index(i pulumi.IntInput) GetMediaWorkflowsMediaWorkflowCollectionItemLockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMediaWorkflowsMediaWorkflowCollectionItemLock {
		return vs[0].([]GetMediaWorkflowsMediaWorkflowCollectionItemLock)[vs[1].(int)]
	}).(GetMediaWorkflowsMediaWorkflowCollectionItemLockOutput)
}

type GetMediaWorkflowsMediaWorkflowCollectionItemTask struct {
	// Allows this task to be conditionally enabled.  If no value or a blank value is given, the task is unconditionally enbled.  Otherwise the given string specifies a parameter of the job created for this task's workflow using the JSON pointer syntax. The JSON pointer is validated when a job is created from the workflow of this task.
	EnableParameterReference string `pulumi:"enableParameterReference"`
	// Used in conjunction with enableParameterReference to conditionally enable a task.  When a job is created from the workflow of this task, the task will only be enabled if the value of the parameter specified by enableParameterReference is equal to the value of this property. This property must be prenset if and only if a enableParameterReference is given. The value is a JSON node.
	EnableWhenReferencedParameterEquals map[string]string `pulumi:"enableWhenReferencedParameterEquals"`
	// A unique identifier for this task within its workflow. Keys are used to reference a task within workflows and MediaWorkflowJobs. Tasks are referenced as prerequisites and to track output and state.
	Key string `pulumi:"key"`
	// Data specifiying how this task is to be run. The data is a JSON object that must conform to the JSON Schema specified by the parameters of the MediaWorkflowTaskDeclaration this task references. The parameters may contain values or references to other parameters.
	Parameters string `pulumi:"parameters"`
	// Keys to the other tasks in this workflow that must be completed before execution of this task can begin.
	Prerequisites []string `pulumi:"prerequisites"`
	// The type of process to run at this task. Refers to the name of a MediaWorkflowTaskDeclaration.
	Type string `pulumi:"type"`
	// The version of the MediaWorkflow.
	Version string `pulumi:"version"`
}

// GetMediaWorkflowsMediaWorkflowCollectionItemTaskInput is an input type that accepts GetMediaWorkflowsMediaWorkflowCollectionItemTaskArgs and GetMediaWorkflowsMediaWorkflowCollectionItemTaskOutput values.
// You can construct a concrete instance of `GetMediaWorkflowsMediaWorkflowCollectionItemTaskInput` via:
//
//	GetMediaWorkflowsMediaWorkflowCollectionItemTaskArgs{...}
type GetMediaWorkflowsMediaWorkflowCollectionItemTaskInput interface {
	pulumi.Input

	ToGetMediaWorkflowsMediaWorkflowCollectionItemTaskOutput() GetMediaWorkflowsMediaWorkflowCollectionItemTaskOutput
	ToGetMediaWorkflowsMediaWorkflowCollectionItemTaskOutputWithContext(context.Context) GetMediaWorkflowsMediaWorkflowCollectionItemTaskOutput
}

type GetMediaWorkflowsMediaWorkflowCollectionItemTaskArgs struct {
	// Allows this task to be conditionally enabled.  If no value or a blank value is given, the task is unconditionally enbled.  Otherwise the given string specifies a parameter of the job created for this task's workflow using the JSON pointer syntax. The JSON pointer is validated when a job is created from the workflow of this task.
	EnableParameterReference pulumi.StringInput `pulumi:"enableParameterReference"`
	// Used in conjunction with enableParameterReference to conditionally enable a task.  When a job is created from the workflow of this task, the task will only be enabled if the value of the parameter specified by enableParameterReference is equal to the value of this property. This property must be prenset if and only if a enableParameterReference is given. The value is a JSON node.
	EnableWhenReferencedParameterEquals pulumi.StringMapInput `pulumi:"enableWhenReferencedParameterEquals"`
	// A unique identifier for this task within its workflow. Keys are used to reference a task within workflows and MediaWorkflowJobs. Tasks are referenced as prerequisites and to track output and state.
	Key pulumi.StringInput `pulumi:"key"`
	// Data specifiying how this task is to be run. The data is a JSON object that must conform to the JSON Schema specified by the parameters of the MediaWorkflowTaskDeclaration this task references. The parameters may contain values or references to other parameters.
	Parameters pulumi.StringInput `pulumi:"parameters"`
	// Keys to the other tasks in this workflow that must be completed before execution of this task can begin.
	Prerequisites pulumi.StringArrayInput `pulumi:"prerequisites"`
	// The type of process to run at this task. Refers to the name of a MediaWorkflowTaskDeclaration.
	Type pulumi.StringInput `pulumi:"type"`
	// The version of the MediaWorkflow.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetMediaWorkflowsMediaWorkflowCollectionItemTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowsMediaWorkflowCollectionItemTask)(nil)).Elem()
}

func (i GetMediaWorkflowsMediaWorkflowCollectionItemTaskArgs) ToGetMediaWorkflowsMediaWorkflowCollectionItemTaskOutput() GetMediaWorkflowsMediaWorkflowCollectionItemTaskOutput {
	return i.ToGetMediaWorkflowsMediaWorkflowCollectionItemTaskOutputWithContext(context.Background())
}

func (i GetMediaWorkflowsMediaWorkflowCollectionItemTaskArgs) ToGetMediaWorkflowsMediaWorkflowCollectionItemTaskOutputWithContext(ctx context.Context) GetMediaWorkflowsMediaWorkflowCollectionItemTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowsMediaWorkflowCollectionItemTaskOutput)
}

// GetMediaWorkflowsMediaWorkflowCollectionItemTaskArrayInput is an input type that accepts GetMediaWorkflowsMediaWorkflowCollectionItemTaskArray and GetMediaWorkflowsMediaWorkflowCollectionItemTaskArrayOutput values.
// You can construct a concrete instance of `GetMediaWorkflowsMediaWorkflowCollectionItemTaskArrayInput` via:
//
//	GetMediaWorkflowsMediaWorkflowCollectionItemTaskArray{ GetMediaWorkflowsMediaWorkflowCollectionItemTaskArgs{...} }
type GetMediaWorkflowsMediaWorkflowCollectionItemTaskArrayInput interface {
	pulumi.Input

	ToGetMediaWorkflowsMediaWorkflowCollectionItemTaskArrayOutput() GetMediaWorkflowsMediaWorkflowCollectionItemTaskArrayOutput
	ToGetMediaWorkflowsMediaWorkflowCollectionItemTaskArrayOutputWithContext(context.Context) GetMediaWorkflowsMediaWorkflowCollectionItemTaskArrayOutput
}

type GetMediaWorkflowsMediaWorkflowCollectionItemTaskArray []GetMediaWorkflowsMediaWorkflowCollectionItemTaskInput

func (GetMediaWorkflowsMediaWorkflowCollectionItemTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowsMediaWorkflowCollectionItemTask)(nil)).Elem()
}

func (i GetMediaWorkflowsMediaWorkflowCollectionItemTaskArray) ToGetMediaWorkflowsMediaWorkflowCollectionItemTaskArrayOutput() GetMediaWorkflowsMediaWorkflowCollectionItemTaskArrayOutput {
	return i.ToGetMediaWorkflowsMediaWorkflowCollectionItemTaskArrayOutputWithContext(context.Background())
}

func (i GetMediaWorkflowsMediaWorkflowCollectionItemTaskArray) ToGetMediaWorkflowsMediaWorkflowCollectionItemTaskArrayOutputWithContext(ctx context.Context) GetMediaWorkflowsMediaWorkflowCollectionItemTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMediaWorkflowsMediaWorkflowCollectionItemTaskArrayOutput)
}

type GetMediaWorkflowsMediaWorkflowCollectionItemTaskOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowsMediaWorkflowCollectionItemTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMediaWorkflowsMediaWorkflowCollectionItemTask)(nil)).Elem()
}

func (o GetMediaWorkflowsMediaWorkflowCollectionItemTaskOutput) ToGetMediaWorkflowsMediaWorkflowCollectionItemTaskOutput() GetMediaWorkflowsMediaWorkflowCollectionItemTaskOutput {
	return o
}

func (o GetMediaWorkflowsMediaWorkflowCollectionItemTaskOutput) ToGetMediaWorkflowsMediaWorkflowCollectionItemTaskOutputWithContext(ctx context.Context) GetMediaWorkflowsMediaWorkflowCollectionItemTaskOutput {
	return o
}

// Allows this task to be conditionally enabled.  If no value or a blank value is given, the task is unconditionally enbled.  Otherwise the given string specifies a parameter of the job created for this task's workflow using the JSON pointer syntax. The JSON pointer is validated when a job is created from the workflow of this task.
func (o GetMediaWorkflowsMediaWorkflowCollectionItemTaskOutput) EnableParameterReference() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowsMediaWorkflowCollectionItemTask) string { return v.EnableParameterReference }).(pulumi.StringOutput)
}

// Used in conjunction with enableParameterReference to conditionally enable a task.  When a job is created from the workflow of this task, the task will only be enabled if the value of the parameter specified by enableParameterReference is equal to the value of this property. This property must be prenset if and only if a enableParameterReference is given. The value is a JSON node.
func (o GetMediaWorkflowsMediaWorkflowCollectionItemTaskOutput) EnableWhenReferencedParameterEquals() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMediaWorkflowsMediaWorkflowCollectionItemTask) map[string]string {
		return v.EnableWhenReferencedParameterEquals
	}).(pulumi.StringMapOutput)
}

// A unique identifier for this task within its workflow. Keys are used to reference a task within workflows and MediaWorkflowJobs. Tasks are referenced as prerequisites and to track output and state.
func (o GetMediaWorkflowsMediaWorkflowCollectionItemTaskOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowsMediaWorkflowCollectionItemTask) string { return v.Key }).(pulumi.StringOutput)
}

// Data specifiying how this task is to be run. The data is a JSON object that must conform to the JSON Schema specified by the parameters of the MediaWorkflowTaskDeclaration this task references. The parameters may contain values or references to other parameters.
func (o GetMediaWorkflowsMediaWorkflowCollectionItemTaskOutput) Parameters() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowsMediaWorkflowCollectionItemTask) string { return v.Parameters }).(pulumi.StringOutput)
}

// Keys to the other tasks in this workflow that must be completed before execution of this task can begin.
func (o GetMediaWorkflowsMediaWorkflowCollectionItemTaskOutput) Prerequisites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMediaWorkflowsMediaWorkflowCollectionItemTask) []string { return v.Prerequisites }).(pulumi.StringArrayOutput)
}

// The type of process to run at this task. Refers to the name of a MediaWorkflowTaskDeclaration.
func (o GetMediaWorkflowsMediaWorkflowCollectionItemTaskOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowsMediaWorkflowCollectionItemTask) string { return v.Type }).(pulumi.StringOutput)
}

// The version of the MediaWorkflow.
func (o GetMediaWorkflowsMediaWorkflowCollectionItemTaskOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetMediaWorkflowsMediaWorkflowCollectionItemTask) string { return v.Version }).(pulumi.StringOutput)
}

type GetMediaWorkflowsMediaWorkflowCollectionItemTaskArrayOutput struct{ *pulumi.OutputState }

func (GetMediaWorkflowsMediaWorkflowCollectionItemTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMediaWorkflowsMediaWorkflowCollectionItemTask)(nil)).Elem()
}

func (o GetMediaWorkflowsMediaWorkflowCollectionItemTaskArrayOutput) ToGetMediaWorkflowsMediaWorkflowCollectionItemTaskArrayOutput() GetMediaWorkflowsMediaWorkflowCollectionItemTaskArrayOutput {
	return o
}

func (o GetMediaWorkflowsMediaWorkflowCollectionItemTaskArrayOutput) ToGetMediaWorkflowsMediaWorkflowCollectionItemTaskArrayOutputWithContext(ctx context.Context) GetMediaWorkflowsMediaWorkflowCollectionItemTaskArrayOutput {
	return o
}

func (o GetMediaWorkflowsMediaWorkflowCollectionItemTaskArrayOutput) Index(i pulumi.IntInput) GetMediaWorkflowsMediaWorkflowCollectionItemTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMediaWorkflowsMediaWorkflowCollectionItemTask {
		return vs[0].([]GetMediaWorkflowsMediaWorkflowCollectionItemTask)[vs[1].(int)]
	}).(GetMediaWorkflowsMediaWorkflowCollectionItemTaskOutput)
}

type GetStreamCdnConfigConfig struct {
	// The hostname of the CDN edge server to use when building CDN URLs.
	EdgeHostname string `pulumi:"edgeHostname"`
	// The path to prepend when building CDN URLs.
	EdgePathPrefix string `pulumi:"edgePathPrefix"`
	// The encryption key to use for edge token authentication.
	EdgeTokenKey string `pulumi:"edgeTokenKey"`
	// Salt to use when encrypting authentication token.
	EdgeTokenSalt string `pulumi:"edgeTokenSalt"`
	// Whether token authentication should be used at the CDN edge.
	IsEdgeTokenAuth bool `pulumi:"isEdgeTokenAuth"`
	// The shared secret key A, two for errorless key rotation.
	OriginAuthSecretKeyA string `pulumi:"originAuthSecretKeyA"`
	// The shared secret key B, two for errorless key rotation.
	OriginAuthSecretKeyB string `pulumi:"originAuthSecretKeyB"`
	// Nonce identifier for originAuthSecretKeyA (used to determine key used to sign).
	OriginAuthSecretKeyNonceA string `pulumi:"originAuthSecretKeyNonceA"`
	// Nonce identifier for originAuthSecretKeyB (used to determine key used to sign).
	OriginAuthSecretKeyNonceB string `pulumi:"originAuthSecretKeyNonceB"`
	// The type of encryption used to compute the signature.
	OriginAuthSignEncryption string `pulumi:"originAuthSignEncryption"`
	// The type of data used to compute the signature.
	OriginAuthSignType string `pulumi:"originAuthSignType"`
	// Type of the lock.
	Type string `pulumi:"type"`
}

// GetStreamCdnConfigConfigInput is an input type that accepts GetStreamCdnConfigConfigArgs and GetStreamCdnConfigConfigOutput values.
// You can construct a concrete instance of `GetStreamCdnConfigConfigInput` via:
//
//	GetStreamCdnConfigConfigArgs{...}
type GetStreamCdnConfigConfigInput interface {
	pulumi.Input

	ToGetStreamCdnConfigConfigOutput() GetStreamCdnConfigConfigOutput
	ToGetStreamCdnConfigConfigOutputWithContext(context.Context) GetStreamCdnConfigConfigOutput
}

type GetStreamCdnConfigConfigArgs struct {
	// The hostname of the CDN edge server to use when building CDN URLs.
	EdgeHostname pulumi.StringInput `pulumi:"edgeHostname"`
	// The path to prepend when building CDN URLs.
	EdgePathPrefix pulumi.StringInput `pulumi:"edgePathPrefix"`
	// The encryption key to use for edge token authentication.
	EdgeTokenKey pulumi.StringInput `pulumi:"edgeTokenKey"`
	// Salt to use when encrypting authentication token.
	EdgeTokenSalt pulumi.StringInput `pulumi:"edgeTokenSalt"`
	// Whether token authentication should be used at the CDN edge.
	IsEdgeTokenAuth pulumi.BoolInput `pulumi:"isEdgeTokenAuth"`
	// The shared secret key A, two for errorless key rotation.
	OriginAuthSecretKeyA pulumi.StringInput `pulumi:"originAuthSecretKeyA"`
	// The shared secret key B, two for errorless key rotation.
	OriginAuthSecretKeyB pulumi.StringInput `pulumi:"originAuthSecretKeyB"`
	// Nonce identifier for originAuthSecretKeyA (used to determine key used to sign).
	OriginAuthSecretKeyNonceA pulumi.StringInput `pulumi:"originAuthSecretKeyNonceA"`
	// Nonce identifier for originAuthSecretKeyB (used to determine key used to sign).
	OriginAuthSecretKeyNonceB pulumi.StringInput `pulumi:"originAuthSecretKeyNonceB"`
	// The type of encryption used to compute the signature.
	OriginAuthSignEncryption pulumi.StringInput `pulumi:"originAuthSignEncryption"`
	// The type of data used to compute the signature.
	OriginAuthSignType pulumi.StringInput `pulumi:"originAuthSignType"`
	// Type of the lock.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetStreamCdnConfigConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamCdnConfigConfig)(nil)).Elem()
}

func (i GetStreamCdnConfigConfigArgs) ToGetStreamCdnConfigConfigOutput() GetStreamCdnConfigConfigOutput {
	return i.ToGetStreamCdnConfigConfigOutputWithContext(context.Background())
}

func (i GetStreamCdnConfigConfigArgs) ToGetStreamCdnConfigConfigOutputWithContext(ctx context.Context) GetStreamCdnConfigConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamCdnConfigConfigOutput)
}

// GetStreamCdnConfigConfigArrayInput is an input type that accepts GetStreamCdnConfigConfigArray and GetStreamCdnConfigConfigArrayOutput values.
// You can construct a concrete instance of `GetStreamCdnConfigConfigArrayInput` via:
//
//	GetStreamCdnConfigConfigArray{ GetStreamCdnConfigConfigArgs{...} }
type GetStreamCdnConfigConfigArrayInput interface {
	pulumi.Input

	ToGetStreamCdnConfigConfigArrayOutput() GetStreamCdnConfigConfigArrayOutput
	ToGetStreamCdnConfigConfigArrayOutputWithContext(context.Context) GetStreamCdnConfigConfigArrayOutput
}

type GetStreamCdnConfigConfigArray []GetStreamCdnConfigConfigInput

func (GetStreamCdnConfigConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamCdnConfigConfig)(nil)).Elem()
}

func (i GetStreamCdnConfigConfigArray) ToGetStreamCdnConfigConfigArrayOutput() GetStreamCdnConfigConfigArrayOutput {
	return i.ToGetStreamCdnConfigConfigArrayOutputWithContext(context.Background())
}

func (i GetStreamCdnConfigConfigArray) ToGetStreamCdnConfigConfigArrayOutputWithContext(ctx context.Context) GetStreamCdnConfigConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamCdnConfigConfigArrayOutput)
}

type GetStreamCdnConfigConfigOutput struct{ *pulumi.OutputState }

func (GetStreamCdnConfigConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamCdnConfigConfig)(nil)).Elem()
}

func (o GetStreamCdnConfigConfigOutput) ToGetStreamCdnConfigConfigOutput() GetStreamCdnConfigConfigOutput {
	return o
}

func (o GetStreamCdnConfigConfigOutput) ToGetStreamCdnConfigConfigOutputWithContext(ctx context.Context) GetStreamCdnConfigConfigOutput {
	return o
}

// The hostname of the CDN edge server to use when building CDN URLs.
func (o GetStreamCdnConfigConfigOutput) EdgeHostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigConfig) string { return v.EdgeHostname }).(pulumi.StringOutput)
}

// The path to prepend when building CDN URLs.
func (o GetStreamCdnConfigConfigOutput) EdgePathPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigConfig) string { return v.EdgePathPrefix }).(pulumi.StringOutput)
}

// The encryption key to use for edge token authentication.
func (o GetStreamCdnConfigConfigOutput) EdgeTokenKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigConfig) string { return v.EdgeTokenKey }).(pulumi.StringOutput)
}

// Salt to use when encrypting authentication token.
func (o GetStreamCdnConfigConfigOutput) EdgeTokenSalt() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigConfig) string { return v.EdgeTokenSalt }).(pulumi.StringOutput)
}

// Whether token authentication should be used at the CDN edge.
func (o GetStreamCdnConfigConfigOutput) IsEdgeTokenAuth() pulumi.BoolOutput {
	return o.ApplyT(func(v GetStreamCdnConfigConfig) bool { return v.IsEdgeTokenAuth }).(pulumi.BoolOutput)
}

// The shared secret key A, two for errorless key rotation.
func (o GetStreamCdnConfigConfigOutput) OriginAuthSecretKeyA() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigConfig) string { return v.OriginAuthSecretKeyA }).(pulumi.StringOutput)
}

// The shared secret key B, two for errorless key rotation.
func (o GetStreamCdnConfigConfigOutput) OriginAuthSecretKeyB() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigConfig) string { return v.OriginAuthSecretKeyB }).(pulumi.StringOutput)
}

// Nonce identifier for originAuthSecretKeyA (used to determine key used to sign).
func (o GetStreamCdnConfigConfigOutput) OriginAuthSecretKeyNonceA() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigConfig) string { return v.OriginAuthSecretKeyNonceA }).(pulumi.StringOutput)
}

// Nonce identifier for originAuthSecretKeyB (used to determine key used to sign).
func (o GetStreamCdnConfigConfigOutput) OriginAuthSecretKeyNonceB() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigConfig) string { return v.OriginAuthSecretKeyNonceB }).(pulumi.StringOutput)
}

// The type of encryption used to compute the signature.
func (o GetStreamCdnConfigConfigOutput) OriginAuthSignEncryption() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigConfig) string { return v.OriginAuthSignEncryption }).(pulumi.StringOutput)
}

// The type of data used to compute the signature.
func (o GetStreamCdnConfigConfigOutput) OriginAuthSignType() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigConfig) string { return v.OriginAuthSignType }).(pulumi.StringOutput)
}

// Type of the lock.
func (o GetStreamCdnConfigConfigOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigConfig) string { return v.Type }).(pulumi.StringOutput)
}

type GetStreamCdnConfigConfigArrayOutput struct{ *pulumi.OutputState }

func (GetStreamCdnConfigConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamCdnConfigConfig)(nil)).Elem()
}

func (o GetStreamCdnConfigConfigArrayOutput) ToGetStreamCdnConfigConfigArrayOutput() GetStreamCdnConfigConfigArrayOutput {
	return o
}

func (o GetStreamCdnConfigConfigArrayOutput) ToGetStreamCdnConfigConfigArrayOutputWithContext(ctx context.Context) GetStreamCdnConfigConfigArrayOutput {
	return o
}

func (o GetStreamCdnConfigConfigArrayOutput) Index(i pulumi.IntInput) GetStreamCdnConfigConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStreamCdnConfigConfig {
		return vs[0].([]GetStreamCdnConfigConfig)[vs[1].(int)]
	}).(GetStreamCdnConfigConfigOutput)
}

type GetStreamCdnConfigLock struct {
	// The compartment ID of the lock.
	CompartmentId string `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message string `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId string `pulumi:"relatedResourceId"`
	// The time when the CDN Config was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// Type of the lock.
	Type string `pulumi:"type"`
}

// GetStreamCdnConfigLockInput is an input type that accepts GetStreamCdnConfigLockArgs and GetStreamCdnConfigLockOutput values.
// You can construct a concrete instance of `GetStreamCdnConfigLockInput` via:
//
//	GetStreamCdnConfigLockArgs{...}
type GetStreamCdnConfigLockInput interface {
	pulumi.Input

	ToGetStreamCdnConfigLockOutput() GetStreamCdnConfigLockOutput
	ToGetStreamCdnConfigLockOutputWithContext(context.Context) GetStreamCdnConfigLockOutput
}

type GetStreamCdnConfigLockArgs struct {
	// The compartment ID of the lock.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message pulumi.StringInput `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId pulumi.StringInput `pulumi:"relatedResourceId"`
	// The time when the CDN Config was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// Type of the lock.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetStreamCdnConfigLockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamCdnConfigLock)(nil)).Elem()
}

func (i GetStreamCdnConfigLockArgs) ToGetStreamCdnConfigLockOutput() GetStreamCdnConfigLockOutput {
	return i.ToGetStreamCdnConfigLockOutputWithContext(context.Background())
}

func (i GetStreamCdnConfigLockArgs) ToGetStreamCdnConfigLockOutputWithContext(ctx context.Context) GetStreamCdnConfigLockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamCdnConfigLockOutput)
}

// GetStreamCdnConfigLockArrayInput is an input type that accepts GetStreamCdnConfigLockArray and GetStreamCdnConfigLockArrayOutput values.
// You can construct a concrete instance of `GetStreamCdnConfigLockArrayInput` via:
//
//	GetStreamCdnConfigLockArray{ GetStreamCdnConfigLockArgs{...} }
type GetStreamCdnConfigLockArrayInput interface {
	pulumi.Input

	ToGetStreamCdnConfigLockArrayOutput() GetStreamCdnConfigLockArrayOutput
	ToGetStreamCdnConfigLockArrayOutputWithContext(context.Context) GetStreamCdnConfigLockArrayOutput
}

type GetStreamCdnConfigLockArray []GetStreamCdnConfigLockInput

func (GetStreamCdnConfigLockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamCdnConfigLock)(nil)).Elem()
}

func (i GetStreamCdnConfigLockArray) ToGetStreamCdnConfigLockArrayOutput() GetStreamCdnConfigLockArrayOutput {
	return i.ToGetStreamCdnConfigLockArrayOutputWithContext(context.Background())
}

func (i GetStreamCdnConfigLockArray) ToGetStreamCdnConfigLockArrayOutputWithContext(ctx context.Context) GetStreamCdnConfigLockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamCdnConfigLockArrayOutput)
}

type GetStreamCdnConfigLockOutput struct{ *pulumi.OutputState }

func (GetStreamCdnConfigLockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamCdnConfigLock)(nil)).Elem()
}

func (o GetStreamCdnConfigLockOutput) ToGetStreamCdnConfigLockOutput() GetStreamCdnConfigLockOutput {
	return o
}

func (o GetStreamCdnConfigLockOutput) ToGetStreamCdnConfigLockOutputWithContext(ctx context.Context) GetStreamCdnConfigLockOutput {
	return o
}

// The compartment ID of the lock.
func (o GetStreamCdnConfigLockOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigLock) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
func (o GetStreamCdnConfigLockOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigLock) string { return v.Message }).(pulumi.StringOutput)
}

// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
func (o GetStreamCdnConfigLockOutput) RelatedResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigLock) string { return v.RelatedResourceId }).(pulumi.StringOutput)
}

// The time when the CDN Config was created. An RFC3339 formatted datetime string.
func (o GetStreamCdnConfigLockOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigLock) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Type of the lock.
func (o GetStreamCdnConfigLockOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigLock) string { return v.Type }).(pulumi.StringOutput)
}

type GetStreamCdnConfigLockArrayOutput struct{ *pulumi.OutputState }

func (GetStreamCdnConfigLockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamCdnConfigLock)(nil)).Elem()
}

func (o GetStreamCdnConfigLockArrayOutput) ToGetStreamCdnConfigLockArrayOutput() GetStreamCdnConfigLockArrayOutput {
	return o
}

func (o GetStreamCdnConfigLockArrayOutput) ToGetStreamCdnConfigLockArrayOutputWithContext(ctx context.Context) GetStreamCdnConfigLockArrayOutput {
	return o
}

func (o GetStreamCdnConfigLockArrayOutput) Index(i pulumi.IntInput) GetStreamCdnConfigLockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStreamCdnConfigLock {
		return vs[0].([]GetStreamCdnConfigLock)[vs[1].(int)]
	}).(GetStreamCdnConfigLockOutput)
}

type GetStreamCdnConfigsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetStreamCdnConfigsFilterInput is an input type that accepts GetStreamCdnConfigsFilterArgs and GetStreamCdnConfigsFilterOutput values.
// You can construct a concrete instance of `GetStreamCdnConfigsFilterInput` via:
//
//	GetStreamCdnConfigsFilterArgs{...}
type GetStreamCdnConfigsFilterInput interface {
	pulumi.Input

	ToGetStreamCdnConfigsFilterOutput() GetStreamCdnConfigsFilterOutput
	ToGetStreamCdnConfigsFilterOutputWithContext(context.Context) GetStreamCdnConfigsFilterOutput
}

type GetStreamCdnConfigsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetStreamCdnConfigsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamCdnConfigsFilter)(nil)).Elem()
}

func (i GetStreamCdnConfigsFilterArgs) ToGetStreamCdnConfigsFilterOutput() GetStreamCdnConfigsFilterOutput {
	return i.ToGetStreamCdnConfigsFilterOutputWithContext(context.Background())
}

func (i GetStreamCdnConfigsFilterArgs) ToGetStreamCdnConfigsFilterOutputWithContext(ctx context.Context) GetStreamCdnConfigsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamCdnConfigsFilterOutput)
}

// GetStreamCdnConfigsFilterArrayInput is an input type that accepts GetStreamCdnConfigsFilterArray and GetStreamCdnConfigsFilterArrayOutput values.
// You can construct a concrete instance of `GetStreamCdnConfigsFilterArrayInput` via:
//
//	GetStreamCdnConfigsFilterArray{ GetStreamCdnConfigsFilterArgs{...} }
type GetStreamCdnConfigsFilterArrayInput interface {
	pulumi.Input

	ToGetStreamCdnConfigsFilterArrayOutput() GetStreamCdnConfigsFilterArrayOutput
	ToGetStreamCdnConfigsFilterArrayOutputWithContext(context.Context) GetStreamCdnConfigsFilterArrayOutput
}

type GetStreamCdnConfigsFilterArray []GetStreamCdnConfigsFilterInput

func (GetStreamCdnConfigsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamCdnConfigsFilter)(nil)).Elem()
}

func (i GetStreamCdnConfigsFilterArray) ToGetStreamCdnConfigsFilterArrayOutput() GetStreamCdnConfigsFilterArrayOutput {
	return i.ToGetStreamCdnConfigsFilterArrayOutputWithContext(context.Background())
}

func (i GetStreamCdnConfigsFilterArray) ToGetStreamCdnConfigsFilterArrayOutputWithContext(ctx context.Context) GetStreamCdnConfigsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamCdnConfigsFilterArrayOutput)
}

type GetStreamCdnConfigsFilterOutput struct{ *pulumi.OutputState }

func (GetStreamCdnConfigsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamCdnConfigsFilter)(nil)).Elem()
}

func (o GetStreamCdnConfigsFilterOutput) ToGetStreamCdnConfigsFilterOutput() GetStreamCdnConfigsFilterOutput {
	return o
}

func (o GetStreamCdnConfigsFilterOutput) ToGetStreamCdnConfigsFilterOutputWithContext(ctx context.Context) GetStreamCdnConfigsFilterOutput {
	return o
}

func (o GetStreamCdnConfigsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetStreamCdnConfigsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetStreamCdnConfigsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetStreamCdnConfigsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetStreamCdnConfigsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamCdnConfigsFilter)(nil)).Elem()
}

func (o GetStreamCdnConfigsFilterArrayOutput) ToGetStreamCdnConfigsFilterArrayOutput() GetStreamCdnConfigsFilterArrayOutput {
	return o
}

func (o GetStreamCdnConfigsFilterArrayOutput) ToGetStreamCdnConfigsFilterArrayOutputWithContext(ctx context.Context) GetStreamCdnConfigsFilterArrayOutput {
	return o
}

func (o GetStreamCdnConfigsFilterArrayOutput) Index(i pulumi.IntInput) GetStreamCdnConfigsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStreamCdnConfigsFilter {
		return vs[0].([]GetStreamCdnConfigsFilter)[vs[1].(int)]
	}).(GetStreamCdnConfigsFilterOutput)
}

type GetStreamCdnConfigsStreamCdnConfigCollection struct {
	Items []GetStreamCdnConfigsStreamCdnConfigCollectionItem `pulumi:"items"`
}

// GetStreamCdnConfigsStreamCdnConfigCollectionInput is an input type that accepts GetStreamCdnConfigsStreamCdnConfigCollectionArgs and GetStreamCdnConfigsStreamCdnConfigCollectionOutput values.
// You can construct a concrete instance of `GetStreamCdnConfigsStreamCdnConfigCollectionInput` via:
//
//	GetStreamCdnConfigsStreamCdnConfigCollectionArgs{...}
type GetStreamCdnConfigsStreamCdnConfigCollectionInput interface {
	pulumi.Input

	ToGetStreamCdnConfigsStreamCdnConfigCollectionOutput() GetStreamCdnConfigsStreamCdnConfigCollectionOutput
	ToGetStreamCdnConfigsStreamCdnConfigCollectionOutputWithContext(context.Context) GetStreamCdnConfigsStreamCdnConfigCollectionOutput
}

type GetStreamCdnConfigsStreamCdnConfigCollectionArgs struct {
	Items GetStreamCdnConfigsStreamCdnConfigCollectionItemArrayInput `pulumi:"items"`
}

func (GetStreamCdnConfigsStreamCdnConfigCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamCdnConfigsStreamCdnConfigCollection)(nil)).Elem()
}

func (i GetStreamCdnConfigsStreamCdnConfigCollectionArgs) ToGetStreamCdnConfigsStreamCdnConfigCollectionOutput() GetStreamCdnConfigsStreamCdnConfigCollectionOutput {
	return i.ToGetStreamCdnConfigsStreamCdnConfigCollectionOutputWithContext(context.Background())
}

func (i GetStreamCdnConfigsStreamCdnConfigCollectionArgs) ToGetStreamCdnConfigsStreamCdnConfigCollectionOutputWithContext(ctx context.Context) GetStreamCdnConfigsStreamCdnConfigCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamCdnConfigsStreamCdnConfigCollectionOutput)
}

// GetStreamCdnConfigsStreamCdnConfigCollectionArrayInput is an input type that accepts GetStreamCdnConfigsStreamCdnConfigCollectionArray and GetStreamCdnConfigsStreamCdnConfigCollectionArrayOutput values.
// You can construct a concrete instance of `GetStreamCdnConfigsStreamCdnConfigCollectionArrayInput` via:
//
//	GetStreamCdnConfigsStreamCdnConfigCollectionArray{ GetStreamCdnConfigsStreamCdnConfigCollectionArgs{...} }
type GetStreamCdnConfigsStreamCdnConfigCollectionArrayInput interface {
	pulumi.Input

	ToGetStreamCdnConfigsStreamCdnConfigCollectionArrayOutput() GetStreamCdnConfigsStreamCdnConfigCollectionArrayOutput
	ToGetStreamCdnConfigsStreamCdnConfigCollectionArrayOutputWithContext(context.Context) GetStreamCdnConfigsStreamCdnConfigCollectionArrayOutput
}

type GetStreamCdnConfigsStreamCdnConfigCollectionArray []GetStreamCdnConfigsStreamCdnConfigCollectionInput

func (GetStreamCdnConfigsStreamCdnConfigCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamCdnConfigsStreamCdnConfigCollection)(nil)).Elem()
}

func (i GetStreamCdnConfigsStreamCdnConfigCollectionArray) ToGetStreamCdnConfigsStreamCdnConfigCollectionArrayOutput() GetStreamCdnConfigsStreamCdnConfigCollectionArrayOutput {
	return i.ToGetStreamCdnConfigsStreamCdnConfigCollectionArrayOutputWithContext(context.Background())
}

func (i GetStreamCdnConfigsStreamCdnConfigCollectionArray) ToGetStreamCdnConfigsStreamCdnConfigCollectionArrayOutputWithContext(ctx context.Context) GetStreamCdnConfigsStreamCdnConfigCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamCdnConfigsStreamCdnConfigCollectionArrayOutput)
}

type GetStreamCdnConfigsStreamCdnConfigCollectionOutput struct{ *pulumi.OutputState }

func (GetStreamCdnConfigsStreamCdnConfigCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamCdnConfigsStreamCdnConfigCollection)(nil)).Elem()
}

func (o GetStreamCdnConfigsStreamCdnConfigCollectionOutput) ToGetStreamCdnConfigsStreamCdnConfigCollectionOutput() GetStreamCdnConfigsStreamCdnConfigCollectionOutput {
	return o
}

func (o GetStreamCdnConfigsStreamCdnConfigCollectionOutput) ToGetStreamCdnConfigsStreamCdnConfigCollectionOutputWithContext(ctx context.Context) GetStreamCdnConfigsStreamCdnConfigCollectionOutput {
	return o
}

func (o GetStreamCdnConfigsStreamCdnConfigCollectionOutput) Items() GetStreamCdnConfigsStreamCdnConfigCollectionItemArrayOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsStreamCdnConfigCollection) []GetStreamCdnConfigsStreamCdnConfigCollectionItem {
		return v.Items
	}).(GetStreamCdnConfigsStreamCdnConfigCollectionItemArrayOutput)
}

type GetStreamCdnConfigsStreamCdnConfigCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetStreamCdnConfigsStreamCdnConfigCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamCdnConfigsStreamCdnConfigCollection)(nil)).Elem()
}

func (o GetStreamCdnConfigsStreamCdnConfigCollectionArrayOutput) ToGetStreamCdnConfigsStreamCdnConfigCollectionArrayOutput() GetStreamCdnConfigsStreamCdnConfigCollectionArrayOutput {
	return o
}

func (o GetStreamCdnConfigsStreamCdnConfigCollectionArrayOutput) ToGetStreamCdnConfigsStreamCdnConfigCollectionArrayOutputWithContext(ctx context.Context) GetStreamCdnConfigsStreamCdnConfigCollectionArrayOutput {
	return o
}

func (o GetStreamCdnConfigsStreamCdnConfigCollectionArrayOutput) Index(i pulumi.IntInput) GetStreamCdnConfigsStreamCdnConfigCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStreamCdnConfigsStreamCdnConfigCollection {
		return vs[0].([]GetStreamCdnConfigsStreamCdnConfigCollection)[vs[1].(int)]
	}).(GetStreamCdnConfigsStreamCdnConfigCollectionOutput)
}

type GetStreamCdnConfigsStreamCdnConfigCollectionItem struct {
	// The compartment ID of the lock.
	CompartmentId string `pulumi:"compartmentId"`
	// Base fields of the StreamCdnConfig configuration object.
	Configs []GetStreamCdnConfigsStreamCdnConfigCollectionItemConfig `pulumi:"configs"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A filter to return only the resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// The Stream Distribution Channel identifier this CdnConfig belongs to.
	DistributionChannelId string `pulumi:"distributionChannelId"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Unique StreamCdnConfig identifier.
	Id string `pulumi:"id"`
	// Whether publishing to CDN is enabled.
	IsEnabled      bool `pulumi:"isEnabled"`
	IsLockOverride bool `pulumi:"isLockOverride"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecyleDetails string `pulumi:"lifecyleDetails"`
	// Locks associated with this resource.
	Locks []GetStreamCdnConfigsStreamCdnConfigCollectionItemLock `pulumi:"locks"`
	// A filter to return only the resources with lifecycleState matching the given lifecycleState.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time when the CDN Config was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time when the CDN Config was updated. An RFC3339 formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetStreamCdnConfigsStreamCdnConfigCollectionItemInput is an input type that accepts GetStreamCdnConfigsStreamCdnConfigCollectionItemArgs and GetStreamCdnConfigsStreamCdnConfigCollectionItemOutput values.
// You can construct a concrete instance of `GetStreamCdnConfigsStreamCdnConfigCollectionItemInput` via:
//
//	GetStreamCdnConfigsStreamCdnConfigCollectionItemArgs{...}
type GetStreamCdnConfigsStreamCdnConfigCollectionItemInput interface {
	pulumi.Input

	ToGetStreamCdnConfigsStreamCdnConfigCollectionItemOutput() GetStreamCdnConfigsStreamCdnConfigCollectionItemOutput
	ToGetStreamCdnConfigsStreamCdnConfigCollectionItemOutputWithContext(context.Context) GetStreamCdnConfigsStreamCdnConfigCollectionItemOutput
}

type GetStreamCdnConfigsStreamCdnConfigCollectionItemArgs struct {
	// The compartment ID of the lock.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Base fields of the StreamCdnConfig configuration object.
	Configs GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArrayInput `pulumi:"configs"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// A filter to return only the resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The Stream Distribution Channel identifier this CdnConfig belongs to.
	DistributionChannelId pulumi.StringInput `pulumi:"distributionChannelId"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// Unique StreamCdnConfig identifier.
	Id pulumi.StringInput `pulumi:"id"`
	// Whether publishing to CDN is enabled.
	IsEnabled      pulumi.BoolInput `pulumi:"isEnabled"`
	IsLockOverride pulumi.BoolInput `pulumi:"isLockOverride"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecyleDetails pulumi.StringInput `pulumi:"lifecyleDetails"`
	// Locks associated with this resource.
	Locks GetStreamCdnConfigsStreamCdnConfigCollectionItemLockArrayInput `pulumi:"locks"`
	// A filter to return only the resources with lifecycleState matching the given lifecycleState.
	State pulumi.StringInput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput `pulumi:"systemTags"`
	// The time when the CDN Config was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time when the CDN Config was updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetStreamCdnConfigsStreamCdnConfigCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamCdnConfigsStreamCdnConfigCollectionItem)(nil)).Elem()
}

func (i GetStreamCdnConfigsStreamCdnConfigCollectionItemArgs) ToGetStreamCdnConfigsStreamCdnConfigCollectionItemOutput() GetStreamCdnConfigsStreamCdnConfigCollectionItemOutput {
	return i.ToGetStreamCdnConfigsStreamCdnConfigCollectionItemOutputWithContext(context.Background())
}

func (i GetStreamCdnConfigsStreamCdnConfigCollectionItemArgs) ToGetStreamCdnConfigsStreamCdnConfigCollectionItemOutputWithContext(ctx context.Context) GetStreamCdnConfigsStreamCdnConfigCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamCdnConfigsStreamCdnConfigCollectionItemOutput)
}

// GetStreamCdnConfigsStreamCdnConfigCollectionItemArrayInput is an input type that accepts GetStreamCdnConfigsStreamCdnConfigCollectionItemArray and GetStreamCdnConfigsStreamCdnConfigCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetStreamCdnConfigsStreamCdnConfigCollectionItemArrayInput` via:
//
//	GetStreamCdnConfigsStreamCdnConfigCollectionItemArray{ GetStreamCdnConfigsStreamCdnConfigCollectionItemArgs{...} }
type GetStreamCdnConfigsStreamCdnConfigCollectionItemArrayInput interface {
	pulumi.Input

	ToGetStreamCdnConfigsStreamCdnConfigCollectionItemArrayOutput() GetStreamCdnConfigsStreamCdnConfigCollectionItemArrayOutput
	ToGetStreamCdnConfigsStreamCdnConfigCollectionItemArrayOutputWithContext(context.Context) GetStreamCdnConfigsStreamCdnConfigCollectionItemArrayOutput
}

type GetStreamCdnConfigsStreamCdnConfigCollectionItemArray []GetStreamCdnConfigsStreamCdnConfigCollectionItemInput

func (GetStreamCdnConfigsStreamCdnConfigCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamCdnConfigsStreamCdnConfigCollectionItem)(nil)).Elem()
}

func (i GetStreamCdnConfigsStreamCdnConfigCollectionItemArray) ToGetStreamCdnConfigsStreamCdnConfigCollectionItemArrayOutput() GetStreamCdnConfigsStreamCdnConfigCollectionItemArrayOutput {
	return i.ToGetStreamCdnConfigsStreamCdnConfigCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetStreamCdnConfigsStreamCdnConfigCollectionItemArray) ToGetStreamCdnConfigsStreamCdnConfigCollectionItemArrayOutputWithContext(ctx context.Context) GetStreamCdnConfigsStreamCdnConfigCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamCdnConfigsStreamCdnConfigCollectionItemArrayOutput)
}

type GetStreamCdnConfigsStreamCdnConfigCollectionItemOutput struct{ *pulumi.OutputState }

func (GetStreamCdnConfigsStreamCdnConfigCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamCdnConfigsStreamCdnConfigCollectionItem)(nil)).Elem()
}

func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemOutput) ToGetStreamCdnConfigsStreamCdnConfigCollectionItemOutput() GetStreamCdnConfigsStreamCdnConfigCollectionItemOutput {
	return o
}

func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemOutput) ToGetStreamCdnConfigsStreamCdnConfigCollectionItemOutputWithContext(ctx context.Context) GetStreamCdnConfigsStreamCdnConfigCollectionItemOutput {
	return o
}

// The compartment ID of the lock.
func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsStreamCdnConfigCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Base fields of the StreamCdnConfig configuration object.
func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemOutput) Configs() GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArrayOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsStreamCdnConfigCollectionItem) []GetStreamCdnConfigsStreamCdnConfigCollectionItemConfig {
		return v.Configs
	}).(GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArrayOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsStreamCdnConfigCollectionItem) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A filter to return only the resources that match the entire display name given.
func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsStreamCdnConfigCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The Stream Distribution Channel identifier this CdnConfig belongs to.
func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemOutput) DistributionChannelId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsStreamCdnConfigCollectionItem) string { return v.DistributionChannelId }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsStreamCdnConfigCollectionItem) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Unique StreamCdnConfig identifier.
func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsStreamCdnConfigCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// Whether publishing to CDN is enabled.
func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsStreamCdnConfigCollectionItem) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemOutput) IsLockOverride() pulumi.BoolOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsStreamCdnConfigCollectionItem) bool { return v.IsLockOverride }).(pulumi.BoolOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemOutput) LifecyleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsStreamCdnConfigCollectionItem) string { return v.LifecyleDetails }).(pulumi.StringOutput)
}

// Locks associated with this resource.
func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemOutput) Locks() GetStreamCdnConfigsStreamCdnConfigCollectionItemLockArrayOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsStreamCdnConfigCollectionItem) []GetStreamCdnConfigsStreamCdnConfigCollectionItemLock {
		return v.Locks
	}).(GetStreamCdnConfigsStreamCdnConfigCollectionItemLockArrayOutput)
}

// A filter to return only the resources with lifecycleState matching the given lifecycleState.
func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsStreamCdnConfigCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsStreamCdnConfigCollectionItem) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The time when the CDN Config was created. An RFC3339 formatted datetime string.
func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsStreamCdnConfigCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time when the CDN Config was updated. An RFC3339 formatted datetime string.
func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsStreamCdnConfigCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetStreamCdnConfigsStreamCdnConfigCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetStreamCdnConfigsStreamCdnConfigCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamCdnConfigsStreamCdnConfigCollectionItem)(nil)).Elem()
}

func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemArrayOutput) ToGetStreamCdnConfigsStreamCdnConfigCollectionItemArrayOutput() GetStreamCdnConfigsStreamCdnConfigCollectionItemArrayOutput {
	return o
}

func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemArrayOutput) ToGetStreamCdnConfigsStreamCdnConfigCollectionItemArrayOutputWithContext(ctx context.Context) GetStreamCdnConfigsStreamCdnConfigCollectionItemArrayOutput {
	return o
}

func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemArrayOutput) Index(i pulumi.IntInput) GetStreamCdnConfigsStreamCdnConfigCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStreamCdnConfigsStreamCdnConfigCollectionItem {
		return vs[0].([]GetStreamCdnConfigsStreamCdnConfigCollectionItem)[vs[1].(int)]
	}).(GetStreamCdnConfigsStreamCdnConfigCollectionItemOutput)
}

type GetStreamCdnConfigsStreamCdnConfigCollectionItemConfig struct {
	// The hostname of the CDN edge server to use when building CDN URLs.
	EdgeHostname string `pulumi:"edgeHostname"`
	// The path to prepend when building CDN URLs.
	EdgePathPrefix string `pulumi:"edgePathPrefix"`
	// The encryption key to use for edge token authentication.
	EdgeTokenKey string `pulumi:"edgeTokenKey"`
	// Salt to use when encrypting authentication token.
	EdgeTokenSalt string `pulumi:"edgeTokenSalt"`
	// Whether token authentication should be used at the CDN edge.
	IsEdgeTokenAuth bool `pulumi:"isEdgeTokenAuth"`
	// The shared secret key A, two for errorless key rotation.
	OriginAuthSecretKeyA string `pulumi:"originAuthSecretKeyA"`
	// The shared secret key B, two for errorless key rotation.
	OriginAuthSecretKeyB string `pulumi:"originAuthSecretKeyB"`
	// Nonce identifier for originAuthSecretKeyA (used to determine key used to sign).
	OriginAuthSecretKeyNonceA string `pulumi:"originAuthSecretKeyNonceA"`
	// Nonce identifier for originAuthSecretKeyB (used to determine key used to sign).
	OriginAuthSecretKeyNonceB string `pulumi:"originAuthSecretKeyNonceB"`
	// The type of encryption used to compute the signature.
	OriginAuthSignEncryption string `pulumi:"originAuthSignEncryption"`
	// The type of data used to compute the signature.
	OriginAuthSignType string `pulumi:"originAuthSignType"`
	// Type of the lock.
	Type string `pulumi:"type"`
}

// GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigInput is an input type that accepts GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArgs and GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigOutput values.
// You can construct a concrete instance of `GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigInput` via:
//
//	GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArgs{...}
type GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigInput interface {
	pulumi.Input

	ToGetStreamCdnConfigsStreamCdnConfigCollectionItemConfigOutput() GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigOutput
	ToGetStreamCdnConfigsStreamCdnConfigCollectionItemConfigOutputWithContext(context.Context) GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigOutput
}

type GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArgs struct {
	// The hostname of the CDN edge server to use when building CDN URLs.
	EdgeHostname pulumi.StringInput `pulumi:"edgeHostname"`
	// The path to prepend when building CDN URLs.
	EdgePathPrefix pulumi.StringInput `pulumi:"edgePathPrefix"`
	// The encryption key to use for edge token authentication.
	EdgeTokenKey pulumi.StringInput `pulumi:"edgeTokenKey"`
	// Salt to use when encrypting authentication token.
	EdgeTokenSalt pulumi.StringInput `pulumi:"edgeTokenSalt"`
	// Whether token authentication should be used at the CDN edge.
	IsEdgeTokenAuth pulumi.BoolInput `pulumi:"isEdgeTokenAuth"`
	// The shared secret key A, two for errorless key rotation.
	OriginAuthSecretKeyA pulumi.StringInput `pulumi:"originAuthSecretKeyA"`
	// The shared secret key B, two for errorless key rotation.
	OriginAuthSecretKeyB pulumi.StringInput `pulumi:"originAuthSecretKeyB"`
	// Nonce identifier for originAuthSecretKeyA (used to determine key used to sign).
	OriginAuthSecretKeyNonceA pulumi.StringInput `pulumi:"originAuthSecretKeyNonceA"`
	// Nonce identifier for originAuthSecretKeyB (used to determine key used to sign).
	OriginAuthSecretKeyNonceB pulumi.StringInput `pulumi:"originAuthSecretKeyNonceB"`
	// The type of encryption used to compute the signature.
	OriginAuthSignEncryption pulumi.StringInput `pulumi:"originAuthSignEncryption"`
	// The type of data used to compute the signature.
	OriginAuthSignType pulumi.StringInput `pulumi:"originAuthSignType"`
	// Type of the lock.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamCdnConfigsStreamCdnConfigCollectionItemConfig)(nil)).Elem()
}

func (i GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArgs) ToGetStreamCdnConfigsStreamCdnConfigCollectionItemConfigOutput() GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigOutput {
	return i.ToGetStreamCdnConfigsStreamCdnConfigCollectionItemConfigOutputWithContext(context.Background())
}

func (i GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArgs) ToGetStreamCdnConfigsStreamCdnConfigCollectionItemConfigOutputWithContext(ctx context.Context) GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigOutput)
}

// GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArrayInput is an input type that accepts GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArray and GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArrayOutput values.
// You can construct a concrete instance of `GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArrayInput` via:
//
//	GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArray{ GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArgs{...} }
type GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArrayInput interface {
	pulumi.Input

	ToGetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArrayOutput() GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArrayOutput
	ToGetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArrayOutputWithContext(context.Context) GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArrayOutput
}

type GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArray []GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigInput

func (GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamCdnConfigsStreamCdnConfigCollectionItemConfig)(nil)).Elem()
}

func (i GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArray) ToGetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArrayOutput() GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArrayOutput {
	return i.ToGetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArrayOutputWithContext(context.Background())
}

func (i GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArray) ToGetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArrayOutputWithContext(ctx context.Context) GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArrayOutput)
}

type GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigOutput struct{ *pulumi.OutputState }

func (GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamCdnConfigsStreamCdnConfigCollectionItemConfig)(nil)).Elem()
}

func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigOutput) ToGetStreamCdnConfigsStreamCdnConfigCollectionItemConfigOutput() GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigOutput {
	return o
}

func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigOutput) ToGetStreamCdnConfigsStreamCdnConfigCollectionItemConfigOutputWithContext(ctx context.Context) GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigOutput {
	return o
}

// The hostname of the CDN edge server to use when building CDN URLs.
func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigOutput) EdgeHostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsStreamCdnConfigCollectionItemConfig) string { return v.EdgeHostname }).(pulumi.StringOutput)
}

// The path to prepend when building CDN URLs.
func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigOutput) EdgePathPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsStreamCdnConfigCollectionItemConfig) string { return v.EdgePathPrefix }).(pulumi.StringOutput)
}

// The encryption key to use for edge token authentication.
func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigOutput) EdgeTokenKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsStreamCdnConfigCollectionItemConfig) string { return v.EdgeTokenKey }).(pulumi.StringOutput)
}

// Salt to use when encrypting authentication token.
func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigOutput) EdgeTokenSalt() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsStreamCdnConfigCollectionItemConfig) string { return v.EdgeTokenSalt }).(pulumi.StringOutput)
}

// Whether token authentication should be used at the CDN edge.
func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigOutput) IsEdgeTokenAuth() pulumi.BoolOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsStreamCdnConfigCollectionItemConfig) bool { return v.IsEdgeTokenAuth }).(pulumi.BoolOutput)
}

// The shared secret key A, two for errorless key rotation.
func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigOutput) OriginAuthSecretKeyA() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsStreamCdnConfigCollectionItemConfig) string { return v.OriginAuthSecretKeyA }).(pulumi.StringOutput)
}

// The shared secret key B, two for errorless key rotation.
func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigOutput) OriginAuthSecretKeyB() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsStreamCdnConfigCollectionItemConfig) string { return v.OriginAuthSecretKeyB }).(pulumi.StringOutput)
}

// Nonce identifier for originAuthSecretKeyA (used to determine key used to sign).
func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigOutput) OriginAuthSecretKeyNonceA() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsStreamCdnConfigCollectionItemConfig) string {
		return v.OriginAuthSecretKeyNonceA
	}).(pulumi.StringOutput)
}

// Nonce identifier for originAuthSecretKeyB (used to determine key used to sign).
func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigOutput) OriginAuthSecretKeyNonceB() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsStreamCdnConfigCollectionItemConfig) string {
		return v.OriginAuthSecretKeyNonceB
	}).(pulumi.StringOutput)
}

// The type of encryption used to compute the signature.
func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigOutput) OriginAuthSignEncryption() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsStreamCdnConfigCollectionItemConfig) string {
		return v.OriginAuthSignEncryption
	}).(pulumi.StringOutput)
}

// The type of data used to compute the signature.
func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigOutput) OriginAuthSignType() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsStreamCdnConfigCollectionItemConfig) string { return v.OriginAuthSignType }).(pulumi.StringOutput)
}

// Type of the lock.
func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsStreamCdnConfigCollectionItemConfig) string { return v.Type }).(pulumi.StringOutput)
}

type GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArrayOutput struct{ *pulumi.OutputState }

func (GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamCdnConfigsStreamCdnConfigCollectionItemConfig)(nil)).Elem()
}

func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArrayOutput) ToGetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArrayOutput() GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArrayOutput {
	return o
}

func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArrayOutput) ToGetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArrayOutputWithContext(ctx context.Context) GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArrayOutput {
	return o
}

func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArrayOutput) Index(i pulumi.IntInput) GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStreamCdnConfigsStreamCdnConfigCollectionItemConfig {
		return vs[0].([]GetStreamCdnConfigsStreamCdnConfigCollectionItemConfig)[vs[1].(int)]
	}).(GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigOutput)
}

type GetStreamCdnConfigsStreamCdnConfigCollectionItemLock struct {
	// The compartment ID of the lock.
	CompartmentId string `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message string `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId string `pulumi:"relatedResourceId"`
	// The time when the CDN Config was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// Type of the lock.
	Type string `pulumi:"type"`
}

// GetStreamCdnConfigsStreamCdnConfigCollectionItemLockInput is an input type that accepts GetStreamCdnConfigsStreamCdnConfigCollectionItemLockArgs and GetStreamCdnConfigsStreamCdnConfigCollectionItemLockOutput values.
// You can construct a concrete instance of `GetStreamCdnConfigsStreamCdnConfigCollectionItemLockInput` via:
//
//	GetStreamCdnConfigsStreamCdnConfigCollectionItemLockArgs{...}
type GetStreamCdnConfigsStreamCdnConfigCollectionItemLockInput interface {
	pulumi.Input

	ToGetStreamCdnConfigsStreamCdnConfigCollectionItemLockOutput() GetStreamCdnConfigsStreamCdnConfigCollectionItemLockOutput
	ToGetStreamCdnConfigsStreamCdnConfigCollectionItemLockOutputWithContext(context.Context) GetStreamCdnConfigsStreamCdnConfigCollectionItemLockOutput
}

type GetStreamCdnConfigsStreamCdnConfigCollectionItemLockArgs struct {
	// The compartment ID of the lock.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message pulumi.StringInput `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId pulumi.StringInput `pulumi:"relatedResourceId"`
	// The time when the CDN Config was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// Type of the lock.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetStreamCdnConfigsStreamCdnConfigCollectionItemLockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamCdnConfigsStreamCdnConfigCollectionItemLock)(nil)).Elem()
}

func (i GetStreamCdnConfigsStreamCdnConfigCollectionItemLockArgs) ToGetStreamCdnConfigsStreamCdnConfigCollectionItemLockOutput() GetStreamCdnConfigsStreamCdnConfigCollectionItemLockOutput {
	return i.ToGetStreamCdnConfigsStreamCdnConfigCollectionItemLockOutputWithContext(context.Background())
}

func (i GetStreamCdnConfigsStreamCdnConfigCollectionItemLockArgs) ToGetStreamCdnConfigsStreamCdnConfigCollectionItemLockOutputWithContext(ctx context.Context) GetStreamCdnConfigsStreamCdnConfigCollectionItemLockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamCdnConfigsStreamCdnConfigCollectionItemLockOutput)
}

// GetStreamCdnConfigsStreamCdnConfigCollectionItemLockArrayInput is an input type that accepts GetStreamCdnConfigsStreamCdnConfigCollectionItemLockArray and GetStreamCdnConfigsStreamCdnConfigCollectionItemLockArrayOutput values.
// You can construct a concrete instance of `GetStreamCdnConfigsStreamCdnConfigCollectionItemLockArrayInput` via:
//
//	GetStreamCdnConfigsStreamCdnConfigCollectionItemLockArray{ GetStreamCdnConfigsStreamCdnConfigCollectionItemLockArgs{...} }
type GetStreamCdnConfigsStreamCdnConfigCollectionItemLockArrayInput interface {
	pulumi.Input

	ToGetStreamCdnConfigsStreamCdnConfigCollectionItemLockArrayOutput() GetStreamCdnConfigsStreamCdnConfigCollectionItemLockArrayOutput
	ToGetStreamCdnConfigsStreamCdnConfigCollectionItemLockArrayOutputWithContext(context.Context) GetStreamCdnConfigsStreamCdnConfigCollectionItemLockArrayOutput
}

type GetStreamCdnConfigsStreamCdnConfigCollectionItemLockArray []GetStreamCdnConfigsStreamCdnConfigCollectionItemLockInput

func (GetStreamCdnConfigsStreamCdnConfigCollectionItemLockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamCdnConfigsStreamCdnConfigCollectionItemLock)(nil)).Elem()
}

func (i GetStreamCdnConfigsStreamCdnConfigCollectionItemLockArray) ToGetStreamCdnConfigsStreamCdnConfigCollectionItemLockArrayOutput() GetStreamCdnConfigsStreamCdnConfigCollectionItemLockArrayOutput {
	return i.ToGetStreamCdnConfigsStreamCdnConfigCollectionItemLockArrayOutputWithContext(context.Background())
}

func (i GetStreamCdnConfigsStreamCdnConfigCollectionItemLockArray) ToGetStreamCdnConfigsStreamCdnConfigCollectionItemLockArrayOutputWithContext(ctx context.Context) GetStreamCdnConfigsStreamCdnConfigCollectionItemLockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamCdnConfigsStreamCdnConfigCollectionItemLockArrayOutput)
}

type GetStreamCdnConfigsStreamCdnConfigCollectionItemLockOutput struct{ *pulumi.OutputState }

func (GetStreamCdnConfigsStreamCdnConfigCollectionItemLockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamCdnConfigsStreamCdnConfigCollectionItemLock)(nil)).Elem()
}

func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemLockOutput) ToGetStreamCdnConfigsStreamCdnConfigCollectionItemLockOutput() GetStreamCdnConfigsStreamCdnConfigCollectionItemLockOutput {
	return o
}

func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemLockOutput) ToGetStreamCdnConfigsStreamCdnConfigCollectionItemLockOutputWithContext(ctx context.Context) GetStreamCdnConfigsStreamCdnConfigCollectionItemLockOutput {
	return o
}

// The compartment ID of the lock.
func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemLockOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsStreamCdnConfigCollectionItemLock) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemLockOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsStreamCdnConfigCollectionItemLock) string { return v.Message }).(pulumi.StringOutput)
}

// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemLockOutput) RelatedResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsStreamCdnConfigCollectionItemLock) string { return v.RelatedResourceId }).(pulumi.StringOutput)
}

// The time when the CDN Config was created. An RFC3339 formatted datetime string.
func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemLockOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsStreamCdnConfigCollectionItemLock) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Type of the lock.
func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemLockOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamCdnConfigsStreamCdnConfigCollectionItemLock) string { return v.Type }).(pulumi.StringOutput)
}

type GetStreamCdnConfigsStreamCdnConfigCollectionItemLockArrayOutput struct{ *pulumi.OutputState }

func (GetStreamCdnConfigsStreamCdnConfigCollectionItemLockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamCdnConfigsStreamCdnConfigCollectionItemLock)(nil)).Elem()
}

func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemLockArrayOutput) ToGetStreamCdnConfigsStreamCdnConfigCollectionItemLockArrayOutput() GetStreamCdnConfigsStreamCdnConfigCollectionItemLockArrayOutput {
	return o
}

func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemLockArrayOutput) ToGetStreamCdnConfigsStreamCdnConfigCollectionItemLockArrayOutputWithContext(ctx context.Context) GetStreamCdnConfigsStreamCdnConfigCollectionItemLockArrayOutput {
	return o
}

func (o GetStreamCdnConfigsStreamCdnConfigCollectionItemLockArrayOutput) Index(i pulumi.IntInput) GetStreamCdnConfigsStreamCdnConfigCollectionItemLockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStreamCdnConfigsStreamCdnConfigCollectionItemLock {
		return vs[0].([]GetStreamCdnConfigsStreamCdnConfigCollectionItemLock)[vs[1].(int)]
	}).(GetStreamCdnConfigsStreamCdnConfigCollectionItemLockOutput)
}

type GetStreamDistributionChannelLock struct {
	// The compartment ID of the lock.
	CompartmentId string `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message string `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId string `pulumi:"relatedResourceId"`
	// The time when the Stream Distribution Channel was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// Type of the lock.
	Type string `pulumi:"type"`
}

// GetStreamDistributionChannelLockInput is an input type that accepts GetStreamDistributionChannelLockArgs and GetStreamDistributionChannelLockOutput values.
// You can construct a concrete instance of `GetStreamDistributionChannelLockInput` via:
//
//	GetStreamDistributionChannelLockArgs{...}
type GetStreamDistributionChannelLockInput interface {
	pulumi.Input

	ToGetStreamDistributionChannelLockOutput() GetStreamDistributionChannelLockOutput
	ToGetStreamDistributionChannelLockOutputWithContext(context.Context) GetStreamDistributionChannelLockOutput
}

type GetStreamDistributionChannelLockArgs struct {
	// The compartment ID of the lock.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message pulumi.StringInput `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId pulumi.StringInput `pulumi:"relatedResourceId"`
	// The time when the Stream Distribution Channel was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// Type of the lock.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetStreamDistributionChannelLockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamDistributionChannelLock)(nil)).Elem()
}

func (i GetStreamDistributionChannelLockArgs) ToGetStreamDistributionChannelLockOutput() GetStreamDistributionChannelLockOutput {
	return i.ToGetStreamDistributionChannelLockOutputWithContext(context.Background())
}

func (i GetStreamDistributionChannelLockArgs) ToGetStreamDistributionChannelLockOutputWithContext(ctx context.Context) GetStreamDistributionChannelLockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamDistributionChannelLockOutput)
}

// GetStreamDistributionChannelLockArrayInput is an input type that accepts GetStreamDistributionChannelLockArray and GetStreamDistributionChannelLockArrayOutput values.
// You can construct a concrete instance of `GetStreamDistributionChannelLockArrayInput` via:
//
//	GetStreamDistributionChannelLockArray{ GetStreamDistributionChannelLockArgs{...} }
type GetStreamDistributionChannelLockArrayInput interface {
	pulumi.Input

	ToGetStreamDistributionChannelLockArrayOutput() GetStreamDistributionChannelLockArrayOutput
	ToGetStreamDistributionChannelLockArrayOutputWithContext(context.Context) GetStreamDistributionChannelLockArrayOutput
}

type GetStreamDistributionChannelLockArray []GetStreamDistributionChannelLockInput

func (GetStreamDistributionChannelLockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamDistributionChannelLock)(nil)).Elem()
}

func (i GetStreamDistributionChannelLockArray) ToGetStreamDistributionChannelLockArrayOutput() GetStreamDistributionChannelLockArrayOutput {
	return i.ToGetStreamDistributionChannelLockArrayOutputWithContext(context.Background())
}

func (i GetStreamDistributionChannelLockArray) ToGetStreamDistributionChannelLockArrayOutputWithContext(ctx context.Context) GetStreamDistributionChannelLockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamDistributionChannelLockArrayOutput)
}

type GetStreamDistributionChannelLockOutput struct{ *pulumi.OutputState }

func (GetStreamDistributionChannelLockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamDistributionChannelLock)(nil)).Elem()
}

func (o GetStreamDistributionChannelLockOutput) ToGetStreamDistributionChannelLockOutput() GetStreamDistributionChannelLockOutput {
	return o
}

func (o GetStreamDistributionChannelLockOutput) ToGetStreamDistributionChannelLockOutputWithContext(ctx context.Context) GetStreamDistributionChannelLockOutput {
	return o
}

// The compartment ID of the lock.
func (o GetStreamDistributionChannelLockOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamDistributionChannelLock) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
func (o GetStreamDistributionChannelLockOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamDistributionChannelLock) string { return v.Message }).(pulumi.StringOutput)
}

// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
func (o GetStreamDistributionChannelLockOutput) RelatedResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamDistributionChannelLock) string { return v.RelatedResourceId }).(pulumi.StringOutput)
}

// The time when the Stream Distribution Channel was created. An RFC3339 formatted datetime string.
func (o GetStreamDistributionChannelLockOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamDistributionChannelLock) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Type of the lock.
func (o GetStreamDistributionChannelLockOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamDistributionChannelLock) string { return v.Type }).(pulumi.StringOutput)
}

type GetStreamDistributionChannelLockArrayOutput struct{ *pulumi.OutputState }

func (GetStreamDistributionChannelLockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamDistributionChannelLock)(nil)).Elem()
}

func (o GetStreamDistributionChannelLockArrayOutput) ToGetStreamDistributionChannelLockArrayOutput() GetStreamDistributionChannelLockArrayOutput {
	return o
}

func (o GetStreamDistributionChannelLockArrayOutput) ToGetStreamDistributionChannelLockArrayOutputWithContext(ctx context.Context) GetStreamDistributionChannelLockArrayOutput {
	return o
}

func (o GetStreamDistributionChannelLockArrayOutput) Index(i pulumi.IntInput) GetStreamDistributionChannelLockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStreamDistributionChannelLock {
		return vs[0].([]GetStreamDistributionChannelLock)[vs[1].(int)]
	}).(GetStreamDistributionChannelLockOutput)
}

type GetStreamDistributionChannelsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetStreamDistributionChannelsFilterInput is an input type that accepts GetStreamDistributionChannelsFilterArgs and GetStreamDistributionChannelsFilterOutput values.
// You can construct a concrete instance of `GetStreamDistributionChannelsFilterInput` via:
//
//	GetStreamDistributionChannelsFilterArgs{...}
type GetStreamDistributionChannelsFilterInput interface {
	pulumi.Input

	ToGetStreamDistributionChannelsFilterOutput() GetStreamDistributionChannelsFilterOutput
	ToGetStreamDistributionChannelsFilterOutputWithContext(context.Context) GetStreamDistributionChannelsFilterOutput
}

type GetStreamDistributionChannelsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetStreamDistributionChannelsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamDistributionChannelsFilter)(nil)).Elem()
}

func (i GetStreamDistributionChannelsFilterArgs) ToGetStreamDistributionChannelsFilterOutput() GetStreamDistributionChannelsFilterOutput {
	return i.ToGetStreamDistributionChannelsFilterOutputWithContext(context.Background())
}

func (i GetStreamDistributionChannelsFilterArgs) ToGetStreamDistributionChannelsFilterOutputWithContext(ctx context.Context) GetStreamDistributionChannelsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamDistributionChannelsFilterOutput)
}

// GetStreamDistributionChannelsFilterArrayInput is an input type that accepts GetStreamDistributionChannelsFilterArray and GetStreamDistributionChannelsFilterArrayOutput values.
// You can construct a concrete instance of `GetStreamDistributionChannelsFilterArrayInput` via:
//
//	GetStreamDistributionChannelsFilterArray{ GetStreamDistributionChannelsFilterArgs{...} }
type GetStreamDistributionChannelsFilterArrayInput interface {
	pulumi.Input

	ToGetStreamDistributionChannelsFilterArrayOutput() GetStreamDistributionChannelsFilterArrayOutput
	ToGetStreamDistributionChannelsFilterArrayOutputWithContext(context.Context) GetStreamDistributionChannelsFilterArrayOutput
}

type GetStreamDistributionChannelsFilterArray []GetStreamDistributionChannelsFilterInput

func (GetStreamDistributionChannelsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamDistributionChannelsFilter)(nil)).Elem()
}

func (i GetStreamDistributionChannelsFilterArray) ToGetStreamDistributionChannelsFilterArrayOutput() GetStreamDistributionChannelsFilterArrayOutput {
	return i.ToGetStreamDistributionChannelsFilterArrayOutputWithContext(context.Background())
}

func (i GetStreamDistributionChannelsFilterArray) ToGetStreamDistributionChannelsFilterArrayOutputWithContext(ctx context.Context) GetStreamDistributionChannelsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamDistributionChannelsFilterArrayOutput)
}

type GetStreamDistributionChannelsFilterOutput struct{ *pulumi.OutputState }

func (GetStreamDistributionChannelsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamDistributionChannelsFilter)(nil)).Elem()
}

func (o GetStreamDistributionChannelsFilterOutput) ToGetStreamDistributionChannelsFilterOutput() GetStreamDistributionChannelsFilterOutput {
	return o
}

func (o GetStreamDistributionChannelsFilterOutput) ToGetStreamDistributionChannelsFilterOutputWithContext(ctx context.Context) GetStreamDistributionChannelsFilterOutput {
	return o
}

func (o GetStreamDistributionChannelsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamDistributionChannelsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetStreamDistributionChannelsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetStreamDistributionChannelsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetStreamDistributionChannelsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStreamDistributionChannelsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetStreamDistributionChannelsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetStreamDistributionChannelsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamDistributionChannelsFilter)(nil)).Elem()
}

func (o GetStreamDistributionChannelsFilterArrayOutput) ToGetStreamDistributionChannelsFilterArrayOutput() GetStreamDistributionChannelsFilterArrayOutput {
	return o
}

func (o GetStreamDistributionChannelsFilterArrayOutput) ToGetStreamDistributionChannelsFilterArrayOutputWithContext(ctx context.Context) GetStreamDistributionChannelsFilterArrayOutput {
	return o
}

func (o GetStreamDistributionChannelsFilterArrayOutput) Index(i pulumi.IntInput) GetStreamDistributionChannelsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStreamDistributionChannelsFilter {
		return vs[0].([]GetStreamDistributionChannelsFilter)[vs[1].(int)]
	}).(GetStreamDistributionChannelsFilterOutput)
}

type GetStreamDistributionChannelsStreamDistributionChannelCollection struct {
	Items []GetStreamDistributionChannelsStreamDistributionChannelCollectionItem `pulumi:"items"`
}

// GetStreamDistributionChannelsStreamDistributionChannelCollectionInput is an input type that accepts GetStreamDistributionChannelsStreamDistributionChannelCollectionArgs and GetStreamDistributionChannelsStreamDistributionChannelCollectionOutput values.
// You can construct a concrete instance of `GetStreamDistributionChannelsStreamDistributionChannelCollectionInput` via:
//
//	GetStreamDistributionChannelsStreamDistributionChannelCollectionArgs{...}
type GetStreamDistributionChannelsStreamDistributionChannelCollectionInput interface {
	pulumi.Input

	ToGetStreamDistributionChannelsStreamDistributionChannelCollectionOutput() GetStreamDistributionChannelsStreamDistributionChannelCollectionOutput
	ToGetStreamDistributionChannelsStreamDistributionChannelCollectionOutputWithContext(context.Context) GetStreamDistributionChannelsStreamDistributionChannelCollectionOutput
}

type GetStreamDistributionChannelsStreamDistributionChannelCollectionArgs struct {
	Items GetStreamDistributionChannelsStreamDistributionChannelCollectionItemArrayInput `pulumi:"items"`
}

func (GetStreamDistributionChannelsStreamDistributionChannelCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamDistributionChannelsStreamDistributionChannelCollection)(nil)).Elem()
}

func (i GetStreamDistributionChannelsStreamDistributionChannelCollectionArgs) ToGetStreamDistributionChannelsStreamDistributionChannelCollectionOutput() GetStreamDistributionChannelsStreamDistributionChannelCollectionOutput {
	return i.ToGetStreamDistributionChannelsStreamDistributionChannelCollectionOutputWithContext(context.Background())
}

func (i GetStreamDistributionChannelsStreamDistributionChannelCollectionArgs) ToGetStreamDistributionChannelsStreamDistributionChannelCollectionOutputWithContext(ctx context.Context) GetStreamDistributionChannelsStreamDistributionChannelCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamDistributionChannelsStreamDistributionChannelCollectionOutput)
}

// GetStreamDistributionChannelsStreamDistributionChannelCollectionArrayInput is an input type that accepts GetStreamDistributionChannelsStreamDistributionChannelCollectionArray and GetStreamDistributionChannelsStreamDistributionChannelCollectionArrayOutput values.
// You can construct a concrete instance of `GetStreamDistributionChannelsStreamDistributionChannelCollectionArrayInput` via:
//
//	GetStreamDistributionChannelsStreamDistributionChannelCollectionArray{ GetStreamDistributionChannelsStreamDistributionChannelCollectionArgs{...} }
type GetStreamDistributionChannelsStreamDistributionChannelCollectionArrayInput interface {
	pulumi.Input

	ToGetStreamDistributionChannelsStreamDistributionChannelCollectionArrayOutput() GetStreamDistributionChannelsStreamDistributionChannelCollectionArrayOutput
	ToGetStreamDistributionChannelsStreamDistributionChannelCollectionArrayOutputWithContext(context.Context) GetStreamDistributionChannelsStreamDistributionChannelCollectionArrayOutput
}

type GetStreamDistributionChannelsStreamDistributionChannelCollectionArray []GetStreamDistributionChannelsStreamDistributionChannelCollectionInput

func (GetStreamDistributionChannelsStreamDistributionChannelCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamDistributionChannelsStreamDistributionChannelCollection)(nil)).Elem()
}

func (i GetStreamDistributionChannelsStreamDistributionChannelCollectionArray) ToGetStreamDistributionChannelsStreamDistributionChannelCollectionArrayOutput() GetStreamDistributionChannelsStreamDistributionChannelCollectionArrayOutput {
	return i.ToGetStreamDistributionChannelsStreamDistributionChannelCollectionArrayOutputWithContext(context.Background())
}

func (i GetStreamDistributionChannelsStreamDistributionChannelCollectionArray) ToGetStreamDistributionChannelsStreamDistributionChannelCollectionArrayOutputWithContext(ctx context.Context) GetStreamDistributionChannelsStreamDistributionChannelCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamDistributionChannelsStreamDistributionChannelCollectionArrayOutput)
}

type GetStreamDistributionChannelsStreamDistributionChannelCollectionOutput struct{ *pulumi.OutputState }

func (GetStreamDistributionChannelsStreamDistributionChannelCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamDistributionChannelsStreamDistributionChannelCollection)(nil)).Elem()
}

func (o GetStreamDistributionChannelsStreamDistributionChannelCollectionOutput) ToGetStreamDistributionChannelsStreamDistributionChannelCollectionOutput() GetStreamDistributionChannelsStreamDistributionChannelCollectionOutput {
	return o
}

func (o GetStreamDistributionChannelsStreamDistributionChannelCollectionOutput) ToGetStreamDistributionChannelsStreamDistributionChannelCollectionOutputWithContext(ctx context.Context) GetStreamDistributionChannelsStreamDistributionChannelCollectionOutput {
	return o
}

func (o GetStreamDistributionChannelsStreamDistributionChannelCollectionOutput) Items() GetStreamDistributionChannelsStreamDistributionChannelCollectionItemArrayOutput {
	return o.ApplyT(func(v GetStreamDistributionChannelsStreamDistributionChannelCollection) []GetStreamDistributionChannelsStreamDistributionChannelCollectionItem {
		return v.Items
	}).(GetStreamDistributionChannelsStreamDistributionChannelCollectionItemArrayOutput)
}

type GetStreamDistributionChannelsStreamDistributionChannelCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetStreamDistributionChannelsStreamDistributionChannelCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamDistributionChannelsStreamDistributionChannelCollection)(nil)).Elem()
}

func (o GetStreamDistributionChannelsStreamDistributionChannelCollectionArrayOutput) ToGetStreamDistributionChannelsStreamDistributionChannelCollectionArrayOutput() GetStreamDistributionChannelsStreamDistributionChannelCollectionArrayOutput {
	return o
}

func (o GetStreamDistributionChannelsStreamDistributionChannelCollectionArrayOutput) ToGetStreamDistributionChannelsStreamDistributionChannelCollectionArrayOutputWithContext(ctx context.Context) GetStreamDistributionChannelsStreamDistributionChannelCollectionArrayOutput {
	return o
}

func (o GetStreamDistributionChannelsStreamDistributionChannelCollectionArrayOutput) Index(i pulumi.IntInput) GetStreamDistributionChannelsStreamDistributionChannelCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStreamDistributionChannelsStreamDistributionChannelCollection {
		return vs[0].([]GetStreamDistributionChannelsStreamDistributionChannelCollection)[vs[1].(int)]
	}).(GetStreamDistributionChannelsStreamDistributionChannelCollectionOutput)
}

type GetStreamDistributionChannelsStreamDistributionChannelCollectionItem struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A filter to return only the resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Unique domain name of the Distribution Channel.
	DomainName string `pulumi:"domainName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Unique Stream Distribution Channel identifier.
	Id             string `pulumi:"id"`
	IsLockOverride bool   `pulumi:"isLockOverride"`
	// Locks associated with this resource.
	Locks []GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLock `pulumi:"locks"`
	// A filter to return only the resources with lifecycleState matching the given lifecycleState.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time when the Stream Distribution Channel was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time when the Stream Distribution Channel was updated. An RFC3339 formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetStreamDistributionChannelsStreamDistributionChannelCollectionItemInput is an input type that accepts GetStreamDistributionChannelsStreamDistributionChannelCollectionItemArgs and GetStreamDistributionChannelsStreamDistributionChannelCollectionItemOutput values.
// You can construct a concrete instance of `GetStreamDistributionChannelsStreamDistributionChannelCollectionItemInput` via:
//
//	GetStreamDistributionChannelsStreamDistributionChannelCollectionItemArgs{...}
type GetStreamDistributionChannelsStreamDistributionChannelCollectionItemInput interface {
	pulumi.Input

	ToGetStreamDistributionChannelsStreamDistributionChannelCollectionItemOutput() GetStreamDistributionChannelsStreamDistributionChannelCollectionItemOutput
	ToGetStreamDistributionChannelsStreamDistributionChannelCollectionItemOutputWithContext(context.Context) GetStreamDistributionChannelsStreamDistributionChannelCollectionItemOutput
}

type GetStreamDistributionChannelsStreamDistributionChannelCollectionItemArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// A filter to return only the resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Unique domain name of the Distribution Channel.
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// Unique Stream Distribution Channel identifier.
	Id             pulumi.StringInput `pulumi:"id"`
	IsLockOverride pulumi.BoolInput   `pulumi:"isLockOverride"`
	// Locks associated with this resource.
	Locks GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArrayInput `pulumi:"locks"`
	// A filter to return only the resources with lifecycleState matching the given lifecycleState.
	State pulumi.StringInput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput `pulumi:"systemTags"`
	// The time when the Stream Distribution Channel was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time when the Stream Distribution Channel was updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetStreamDistributionChannelsStreamDistributionChannelCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamDistributionChannelsStreamDistributionChannelCollectionItem)(nil)).Elem()
}

func (i GetStreamDistributionChannelsStreamDistributionChannelCollectionItemArgs) ToGetStreamDistributionChannelsStreamDistributionChannelCollectionItemOutput() GetStreamDistributionChannelsStreamDistributionChannelCollectionItemOutput {
	return i.ToGetStreamDistributionChannelsStreamDistributionChannelCollectionItemOutputWithContext(context.Background())
}

func (i GetStreamDistributionChannelsStreamDistributionChannelCollectionItemArgs) ToGetStreamDistributionChannelsStreamDistributionChannelCollectionItemOutputWithContext(ctx context.Context) GetStreamDistributionChannelsStreamDistributionChannelCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamDistributionChannelsStreamDistributionChannelCollectionItemOutput)
}

// GetStreamDistributionChannelsStreamDistributionChannelCollectionItemArrayInput is an input type that accepts GetStreamDistributionChannelsStreamDistributionChannelCollectionItemArray and GetStreamDistributionChannelsStreamDistributionChannelCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetStreamDistributionChannelsStreamDistributionChannelCollectionItemArrayInput` via:
//
//	GetStreamDistributionChannelsStreamDistributionChannelCollectionItemArray{ GetStreamDistributionChannelsStreamDistributionChannelCollectionItemArgs{...} }
type GetStreamDistributionChannelsStreamDistributionChannelCollectionItemArrayInput interface {
	pulumi.Input

	ToGetStreamDistributionChannelsStreamDistributionChannelCollectionItemArrayOutput() GetStreamDistributionChannelsStreamDistributionChannelCollectionItemArrayOutput
	ToGetStreamDistributionChannelsStreamDistributionChannelCollectionItemArrayOutputWithContext(context.Context) GetStreamDistributionChannelsStreamDistributionChannelCollectionItemArrayOutput
}

type GetStreamDistributionChannelsStreamDistributionChannelCollectionItemArray []GetStreamDistributionChannelsStreamDistributionChannelCollectionItemInput

func (GetStreamDistributionChannelsStreamDistributionChannelCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamDistributionChannelsStreamDistributionChannelCollectionItem)(nil)).Elem()
}

func (i GetStreamDistributionChannelsStreamDistributionChannelCollectionItemArray) ToGetStreamDistributionChannelsStreamDistributionChannelCollectionItemArrayOutput() GetStreamDistributionChannelsStreamDistributionChannelCollectionItemArrayOutput {
	return i.ToGetStreamDistributionChannelsStreamDistributionChannelCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetStreamDistributionChannelsStreamDistributionChannelCollectionItemArray) ToGetStreamDistributionChannelsStreamDistributionChannelCollectionItemArrayOutputWithContext(ctx context.Context) GetStreamDistributionChannelsStreamDistributionChannelCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamDistributionChannelsStreamDistributionChannelCollectionItemArrayOutput)
}

type GetStreamDistributionChannelsStreamDistributionChannelCollectionItemOutput struct{ *pulumi.OutputState }

func (GetStreamDistributionChannelsStreamDistributionChannelCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamDistributionChannelsStreamDistributionChannelCollectionItem)(nil)).Elem()
}

func (o GetStreamDistributionChannelsStreamDistributionChannelCollectionItemOutput) ToGetStreamDistributionChannelsStreamDistributionChannelCollectionItemOutput() GetStreamDistributionChannelsStreamDistributionChannelCollectionItemOutput {
	return o
}

func (o GetStreamDistributionChannelsStreamDistributionChannelCollectionItemOutput) ToGetStreamDistributionChannelsStreamDistributionChannelCollectionItemOutputWithContext(ctx context.Context) GetStreamDistributionChannelsStreamDistributionChannelCollectionItemOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetStreamDistributionChannelsStreamDistributionChannelCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamDistributionChannelsStreamDistributionChannelCollectionItem) string {
		return v.CompartmentId
	}).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetStreamDistributionChannelsStreamDistributionChannelCollectionItemOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetStreamDistributionChannelsStreamDistributionChannelCollectionItem) map[string]string {
		return v.DefinedTags
	}).(pulumi.StringMapOutput)
}

// A filter to return only the resources that match the entire display name given.
func (o GetStreamDistributionChannelsStreamDistributionChannelCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamDistributionChannelsStreamDistributionChannelCollectionItem) string {
		return v.DisplayName
	}).(pulumi.StringOutput)
}

// Unique domain name of the Distribution Channel.
func (o GetStreamDistributionChannelsStreamDistributionChannelCollectionItemOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamDistributionChannelsStreamDistributionChannelCollectionItem) string {
		return v.DomainName
	}).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetStreamDistributionChannelsStreamDistributionChannelCollectionItemOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetStreamDistributionChannelsStreamDistributionChannelCollectionItem) map[string]string {
		return v.FreeformTags
	}).(pulumi.StringMapOutput)
}

// Unique Stream Distribution Channel identifier.
func (o GetStreamDistributionChannelsStreamDistributionChannelCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamDistributionChannelsStreamDistributionChannelCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetStreamDistributionChannelsStreamDistributionChannelCollectionItemOutput) IsLockOverride() pulumi.BoolOutput {
	return o.ApplyT(func(v GetStreamDistributionChannelsStreamDistributionChannelCollectionItem) bool {
		return v.IsLockOverride
	}).(pulumi.BoolOutput)
}

// Locks associated with this resource.
func (o GetStreamDistributionChannelsStreamDistributionChannelCollectionItemOutput) Locks() GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArrayOutput {
	return o.ApplyT(func(v GetStreamDistributionChannelsStreamDistributionChannelCollectionItem) []GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLock {
		return v.Locks
	}).(GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArrayOutput)
}

// A filter to return only the resources with lifecycleState matching the given lifecycleState.
func (o GetStreamDistributionChannelsStreamDistributionChannelCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamDistributionChannelsStreamDistributionChannelCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetStreamDistributionChannelsStreamDistributionChannelCollectionItemOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetStreamDistributionChannelsStreamDistributionChannelCollectionItem) map[string]string {
		return v.SystemTags
	}).(pulumi.StringMapOutput)
}

// The time when the Stream Distribution Channel was created. An RFC3339 formatted datetime string.
func (o GetStreamDistributionChannelsStreamDistributionChannelCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamDistributionChannelsStreamDistributionChannelCollectionItem) string {
		return v.TimeCreated
	}).(pulumi.StringOutput)
}

// The time when the Stream Distribution Channel was updated. An RFC3339 formatted datetime string.
func (o GetStreamDistributionChannelsStreamDistributionChannelCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamDistributionChannelsStreamDistributionChannelCollectionItem) string {
		return v.TimeUpdated
	}).(pulumi.StringOutput)
}

type GetStreamDistributionChannelsStreamDistributionChannelCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetStreamDistributionChannelsStreamDistributionChannelCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamDistributionChannelsStreamDistributionChannelCollectionItem)(nil)).Elem()
}

func (o GetStreamDistributionChannelsStreamDistributionChannelCollectionItemArrayOutput) ToGetStreamDistributionChannelsStreamDistributionChannelCollectionItemArrayOutput() GetStreamDistributionChannelsStreamDistributionChannelCollectionItemArrayOutput {
	return o
}

func (o GetStreamDistributionChannelsStreamDistributionChannelCollectionItemArrayOutput) ToGetStreamDistributionChannelsStreamDistributionChannelCollectionItemArrayOutputWithContext(ctx context.Context) GetStreamDistributionChannelsStreamDistributionChannelCollectionItemArrayOutput {
	return o
}

func (o GetStreamDistributionChannelsStreamDistributionChannelCollectionItemArrayOutput) Index(i pulumi.IntInput) GetStreamDistributionChannelsStreamDistributionChannelCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStreamDistributionChannelsStreamDistributionChannelCollectionItem {
		return vs[0].([]GetStreamDistributionChannelsStreamDistributionChannelCollectionItem)[vs[1].(int)]
	}).(GetStreamDistributionChannelsStreamDistributionChannelCollectionItemOutput)
}

type GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLock struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message string `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId string `pulumi:"relatedResourceId"`
	// The time when the Stream Distribution Channel was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// Type of the lock.
	Type string `pulumi:"type"`
}

// GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockInput is an input type that accepts GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArgs and GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockOutput values.
// You can construct a concrete instance of `GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockInput` via:
//
//	GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArgs{...}
type GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockInput interface {
	pulumi.Input

	ToGetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockOutput() GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockOutput
	ToGetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockOutputWithContext(context.Context) GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockOutput
}

type GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message pulumi.StringInput `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId pulumi.StringInput `pulumi:"relatedResourceId"`
	// The time when the Stream Distribution Channel was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// Type of the lock.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLock)(nil)).Elem()
}

func (i GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArgs) ToGetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockOutput() GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockOutput {
	return i.ToGetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockOutputWithContext(context.Background())
}

func (i GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArgs) ToGetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockOutputWithContext(ctx context.Context) GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockOutput)
}

// GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArrayInput is an input type that accepts GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArray and GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArrayOutput values.
// You can construct a concrete instance of `GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArrayInput` via:
//
//	GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArray{ GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArgs{...} }
type GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArrayInput interface {
	pulumi.Input

	ToGetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArrayOutput() GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArrayOutput
	ToGetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArrayOutputWithContext(context.Context) GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArrayOutput
}

type GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArray []GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockInput

func (GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLock)(nil)).Elem()
}

func (i GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArray) ToGetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArrayOutput() GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArrayOutput {
	return i.ToGetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArrayOutputWithContext(context.Background())
}

func (i GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArray) ToGetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArrayOutputWithContext(ctx context.Context) GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArrayOutput)
}

type GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockOutput struct{ *pulumi.OutputState }

func (GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLock)(nil)).Elem()
}

func (o GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockOutput) ToGetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockOutput() GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockOutput {
	return o
}

func (o GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockOutput) ToGetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockOutputWithContext(ctx context.Context) GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLock) string {
		return v.CompartmentId
	}).(pulumi.StringOutput)
}

// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
func (o GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLock) string {
		return v.Message
	}).(pulumi.StringOutput)
}

// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
func (o GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockOutput) RelatedResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLock) string {
		return v.RelatedResourceId
	}).(pulumi.StringOutput)
}

// The time when the Stream Distribution Channel was created. An RFC3339 formatted datetime string.
func (o GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLock) string {
		return v.TimeCreated
	}).(pulumi.StringOutput)
}

// Type of the lock.
func (o GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLock) string { return v.Type }).(pulumi.StringOutput)
}

type GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArrayOutput struct{ *pulumi.OutputState }

func (GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLock)(nil)).Elem()
}

func (o GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArrayOutput) ToGetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArrayOutput() GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArrayOutput {
	return o
}

func (o GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArrayOutput) ToGetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArrayOutputWithContext(ctx context.Context) GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArrayOutput {
	return o
}

func (o GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArrayOutput) Index(i pulumi.IntInput) GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLock {
		return vs[0].([]GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLock)[vs[1].(int)]
	}).(GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockOutput)
}

type GetStreamPackagingConfigEncryption struct {
	// The encryption algorithm for the stream packaging configuration.
	Algorithm string `pulumi:"algorithm"`
	// The identifier of the customer managed Vault KMS symmetric encryption key (null if Oracle managed).
	KmsKeyId string `pulumi:"kmsKeyId"`
}

// GetStreamPackagingConfigEncryptionInput is an input type that accepts GetStreamPackagingConfigEncryptionArgs and GetStreamPackagingConfigEncryptionOutput values.
// You can construct a concrete instance of `GetStreamPackagingConfigEncryptionInput` via:
//
//	GetStreamPackagingConfigEncryptionArgs{...}
type GetStreamPackagingConfigEncryptionInput interface {
	pulumi.Input

	ToGetStreamPackagingConfigEncryptionOutput() GetStreamPackagingConfigEncryptionOutput
	ToGetStreamPackagingConfigEncryptionOutputWithContext(context.Context) GetStreamPackagingConfigEncryptionOutput
}

type GetStreamPackagingConfigEncryptionArgs struct {
	// The encryption algorithm for the stream packaging configuration.
	Algorithm pulumi.StringInput `pulumi:"algorithm"`
	// The identifier of the customer managed Vault KMS symmetric encryption key (null if Oracle managed).
	KmsKeyId pulumi.StringInput `pulumi:"kmsKeyId"`
}

func (GetStreamPackagingConfigEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamPackagingConfigEncryption)(nil)).Elem()
}

func (i GetStreamPackagingConfigEncryptionArgs) ToGetStreamPackagingConfigEncryptionOutput() GetStreamPackagingConfigEncryptionOutput {
	return i.ToGetStreamPackagingConfigEncryptionOutputWithContext(context.Background())
}

func (i GetStreamPackagingConfigEncryptionArgs) ToGetStreamPackagingConfigEncryptionOutputWithContext(ctx context.Context) GetStreamPackagingConfigEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamPackagingConfigEncryptionOutput)
}

// GetStreamPackagingConfigEncryptionArrayInput is an input type that accepts GetStreamPackagingConfigEncryptionArray and GetStreamPackagingConfigEncryptionArrayOutput values.
// You can construct a concrete instance of `GetStreamPackagingConfigEncryptionArrayInput` via:
//
//	GetStreamPackagingConfigEncryptionArray{ GetStreamPackagingConfigEncryptionArgs{...} }
type GetStreamPackagingConfigEncryptionArrayInput interface {
	pulumi.Input

	ToGetStreamPackagingConfigEncryptionArrayOutput() GetStreamPackagingConfigEncryptionArrayOutput
	ToGetStreamPackagingConfigEncryptionArrayOutputWithContext(context.Context) GetStreamPackagingConfigEncryptionArrayOutput
}

type GetStreamPackagingConfigEncryptionArray []GetStreamPackagingConfigEncryptionInput

func (GetStreamPackagingConfigEncryptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamPackagingConfigEncryption)(nil)).Elem()
}

func (i GetStreamPackagingConfigEncryptionArray) ToGetStreamPackagingConfigEncryptionArrayOutput() GetStreamPackagingConfigEncryptionArrayOutput {
	return i.ToGetStreamPackagingConfigEncryptionArrayOutputWithContext(context.Background())
}

func (i GetStreamPackagingConfigEncryptionArray) ToGetStreamPackagingConfigEncryptionArrayOutputWithContext(ctx context.Context) GetStreamPackagingConfigEncryptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamPackagingConfigEncryptionArrayOutput)
}

type GetStreamPackagingConfigEncryptionOutput struct{ *pulumi.OutputState }

func (GetStreamPackagingConfigEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamPackagingConfigEncryption)(nil)).Elem()
}

func (o GetStreamPackagingConfigEncryptionOutput) ToGetStreamPackagingConfigEncryptionOutput() GetStreamPackagingConfigEncryptionOutput {
	return o
}

func (o GetStreamPackagingConfigEncryptionOutput) ToGetStreamPackagingConfigEncryptionOutputWithContext(ctx context.Context) GetStreamPackagingConfigEncryptionOutput {
	return o
}

// The encryption algorithm for the stream packaging configuration.
func (o GetStreamPackagingConfigEncryptionOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPackagingConfigEncryption) string { return v.Algorithm }).(pulumi.StringOutput)
}

// The identifier of the customer managed Vault KMS symmetric encryption key (null if Oracle managed).
func (o GetStreamPackagingConfigEncryptionOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPackagingConfigEncryption) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

type GetStreamPackagingConfigEncryptionArrayOutput struct{ *pulumi.OutputState }

func (GetStreamPackagingConfigEncryptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamPackagingConfigEncryption)(nil)).Elem()
}

func (o GetStreamPackagingConfigEncryptionArrayOutput) ToGetStreamPackagingConfigEncryptionArrayOutput() GetStreamPackagingConfigEncryptionArrayOutput {
	return o
}

func (o GetStreamPackagingConfigEncryptionArrayOutput) ToGetStreamPackagingConfigEncryptionArrayOutputWithContext(ctx context.Context) GetStreamPackagingConfigEncryptionArrayOutput {
	return o
}

func (o GetStreamPackagingConfigEncryptionArrayOutput) Index(i pulumi.IntInput) GetStreamPackagingConfigEncryptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStreamPackagingConfigEncryption {
		return vs[0].([]GetStreamPackagingConfigEncryption)[vs[1].(int)]
	}).(GetStreamPackagingConfigEncryptionOutput)
}

type GetStreamPackagingConfigLock struct {
	// The compartment ID of the lock.
	CompartmentId string `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message string `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId string `pulumi:"relatedResourceId"`
	// The time when the Packaging Configuration was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// Type of the lock.
	Type string `pulumi:"type"`
}

// GetStreamPackagingConfigLockInput is an input type that accepts GetStreamPackagingConfigLockArgs and GetStreamPackagingConfigLockOutput values.
// You can construct a concrete instance of `GetStreamPackagingConfigLockInput` via:
//
//	GetStreamPackagingConfigLockArgs{...}
type GetStreamPackagingConfigLockInput interface {
	pulumi.Input

	ToGetStreamPackagingConfigLockOutput() GetStreamPackagingConfigLockOutput
	ToGetStreamPackagingConfigLockOutputWithContext(context.Context) GetStreamPackagingConfigLockOutput
}

type GetStreamPackagingConfigLockArgs struct {
	// The compartment ID of the lock.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message pulumi.StringInput `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId pulumi.StringInput `pulumi:"relatedResourceId"`
	// The time when the Packaging Configuration was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// Type of the lock.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetStreamPackagingConfigLockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamPackagingConfigLock)(nil)).Elem()
}

func (i GetStreamPackagingConfigLockArgs) ToGetStreamPackagingConfigLockOutput() GetStreamPackagingConfigLockOutput {
	return i.ToGetStreamPackagingConfigLockOutputWithContext(context.Background())
}

func (i GetStreamPackagingConfigLockArgs) ToGetStreamPackagingConfigLockOutputWithContext(ctx context.Context) GetStreamPackagingConfigLockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamPackagingConfigLockOutput)
}

// GetStreamPackagingConfigLockArrayInput is an input type that accepts GetStreamPackagingConfigLockArray and GetStreamPackagingConfigLockArrayOutput values.
// You can construct a concrete instance of `GetStreamPackagingConfigLockArrayInput` via:
//
//	GetStreamPackagingConfigLockArray{ GetStreamPackagingConfigLockArgs{...} }
type GetStreamPackagingConfigLockArrayInput interface {
	pulumi.Input

	ToGetStreamPackagingConfigLockArrayOutput() GetStreamPackagingConfigLockArrayOutput
	ToGetStreamPackagingConfigLockArrayOutputWithContext(context.Context) GetStreamPackagingConfigLockArrayOutput
}

type GetStreamPackagingConfigLockArray []GetStreamPackagingConfigLockInput

func (GetStreamPackagingConfigLockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamPackagingConfigLock)(nil)).Elem()
}

func (i GetStreamPackagingConfigLockArray) ToGetStreamPackagingConfigLockArrayOutput() GetStreamPackagingConfigLockArrayOutput {
	return i.ToGetStreamPackagingConfigLockArrayOutputWithContext(context.Background())
}

func (i GetStreamPackagingConfigLockArray) ToGetStreamPackagingConfigLockArrayOutputWithContext(ctx context.Context) GetStreamPackagingConfigLockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamPackagingConfigLockArrayOutput)
}

type GetStreamPackagingConfigLockOutput struct{ *pulumi.OutputState }

func (GetStreamPackagingConfigLockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamPackagingConfigLock)(nil)).Elem()
}

func (o GetStreamPackagingConfigLockOutput) ToGetStreamPackagingConfigLockOutput() GetStreamPackagingConfigLockOutput {
	return o
}

func (o GetStreamPackagingConfigLockOutput) ToGetStreamPackagingConfigLockOutputWithContext(ctx context.Context) GetStreamPackagingConfigLockOutput {
	return o
}

// The compartment ID of the lock.
func (o GetStreamPackagingConfigLockOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPackagingConfigLock) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
func (o GetStreamPackagingConfigLockOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPackagingConfigLock) string { return v.Message }).(pulumi.StringOutput)
}

// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
func (o GetStreamPackagingConfigLockOutput) RelatedResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPackagingConfigLock) string { return v.RelatedResourceId }).(pulumi.StringOutput)
}

// The time when the Packaging Configuration was created. An RFC3339 formatted datetime string.
func (o GetStreamPackagingConfigLockOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPackagingConfigLock) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Type of the lock.
func (o GetStreamPackagingConfigLockOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPackagingConfigLock) string { return v.Type }).(pulumi.StringOutput)
}

type GetStreamPackagingConfigLockArrayOutput struct{ *pulumi.OutputState }

func (GetStreamPackagingConfigLockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamPackagingConfigLock)(nil)).Elem()
}

func (o GetStreamPackagingConfigLockArrayOutput) ToGetStreamPackagingConfigLockArrayOutput() GetStreamPackagingConfigLockArrayOutput {
	return o
}

func (o GetStreamPackagingConfigLockArrayOutput) ToGetStreamPackagingConfigLockArrayOutputWithContext(ctx context.Context) GetStreamPackagingConfigLockArrayOutput {
	return o
}

func (o GetStreamPackagingConfigLockArrayOutput) Index(i pulumi.IntInput) GetStreamPackagingConfigLockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStreamPackagingConfigLock {
		return vs[0].([]GetStreamPackagingConfigLock)[vs[1].(int)]
	}).(GetStreamPackagingConfigLockOutput)
}

type GetStreamPackagingConfigsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetStreamPackagingConfigsFilterInput is an input type that accepts GetStreamPackagingConfigsFilterArgs and GetStreamPackagingConfigsFilterOutput values.
// You can construct a concrete instance of `GetStreamPackagingConfigsFilterInput` via:
//
//	GetStreamPackagingConfigsFilterArgs{...}
type GetStreamPackagingConfigsFilterInput interface {
	pulumi.Input

	ToGetStreamPackagingConfigsFilterOutput() GetStreamPackagingConfigsFilterOutput
	ToGetStreamPackagingConfigsFilterOutputWithContext(context.Context) GetStreamPackagingConfigsFilterOutput
}

type GetStreamPackagingConfigsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetStreamPackagingConfigsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamPackagingConfigsFilter)(nil)).Elem()
}

func (i GetStreamPackagingConfigsFilterArgs) ToGetStreamPackagingConfigsFilterOutput() GetStreamPackagingConfigsFilterOutput {
	return i.ToGetStreamPackagingConfigsFilterOutputWithContext(context.Background())
}

func (i GetStreamPackagingConfigsFilterArgs) ToGetStreamPackagingConfigsFilterOutputWithContext(ctx context.Context) GetStreamPackagingConfigsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamPackagingConfigsFilterOutput)
}

// GetStreamPackagingConfigsFilterArrayInput is an input type that accepts GetStreamPackagingConfigsFilterArray and GetStreamPackagingConfigsFilterArrayOutput values.
// You can construct a concrete instance of `GetStreamPackagingConfigsFilterArrayInput` via:
//
//	GetStreamPackagingConfigsFilterArray{ GetStreamPackagingConfigsFilterArgs{...} }
type GetStreamPackagingConfigsFilterArrayInput interface {
	pulumi.Input

	ToGetStreamPackagingConfigsFilterArrayOutput() GetStreamPackagingConfigsFilterArrayOutput
	ToGetStreamPackagingConfigsFilterArrayOutputWithContext(context.Context) GetStreamPackagingConfigsFilterArrayOutput
}

type GetStreamPackagingConfigsFilterArray []GetStreamPackagingConfigsFilterInput

func (GetStreamPackagingConfigsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamPackagingConfigsFilter)(nil)).Elem()
}

func (i GetStreamPackagingConfigsFilterArray) ToGetStreamPackagingConfigsFilterArrayOutput() GetStreamPackagingConfigsFilterArrayOutput {
	return i.ToGetStreamPackagingConfigsFilterArrayOutputWithContext(context.Background())
}

func (i GetStreamPackagingConfigsFilterArray) ToGetStreamPackagingConfigsFilterArrayOutputWithContext(ctx context.Context) GetStreamPackagingConfigsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamPackagingConfigsFilterArrayOutput)
}

type GetStreamPackagingConfigsFilterOutput struct{ *pulumi.OutputState }

func (GetStreamPackagingConfigsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamPackagingConfigsFilter)(nil)).Elem()
}

func (o GetStreamPackagingConfigsFilterOutput) ToGetStreamPackagingConfigsFilterOutput() GetStreamPackagingConfigsFilterOutput {
	return o
}

func (o GetStreamPackagingConfigsFilterOutput) ToGetStreamPackagingConfigsFilterOutputWithContext(ctx context.Context) GetStreamPackagingConfigsFilterOutput {
	return o
}

func (o GetStreamPackagingConfigsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPackagingConfigsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetStreamPackagingConfigsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetStreamPackagingConfigsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetStreamPackagingConfigsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStreamPackagingConfigsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetStreamPackagingConfigsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetStreamPackagingConfigsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamPackagingConfigsFilter)(nil)).Elem()
}

func (o GetStreamPackagingConfigsFilterArrayOutput) ToGetStreamPackagingConfigsFilterArrayOutput() GetStreamPackagingConfigsFilterArrayOutput {
	return o
}

func (o GetStreamPackagingConfigsFilterArrayOutput) ToGetStreamPackagingConfigsFilterArrayOutputWithContext(ctx context.Context) GetStreamPackagingConfigsFilterArrayOutput {
	return o
}

func (o GetStreamPackagingConfigsFilterArrayOutput) Index(i pulumi.IntInput) GetStreamPackagingConfigsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStreamPackagingConfigsFilter {
		return vs[0].([]GetStreamPackagingConfigsFilter)[vs[1].(int)]
	}).(GetStreamPackagingConfigsFilterOutput)
}

type GetStreamPackagingConfigsStreamPackagingConfigCollection struct {
	Items []GetStreamPackagingConfigsStreamPackagingConfigCollectionItem `pulumi:"items"`
}

// GetStreamPackagingConfigsStreamPackagingConfigCollectionInput is an input type that accepts GetStreamPackagingConfigsStreamPackagingConfigCollectionArgs and GetStreamPackagingConfigsStreamPackagingConfigCollectionOutput values.
// You can construct a concrete instance of `GetStreamPackagingConfigsStreamPackagingConfigCollectionInput` via:
//
//	GetStreamPackagingConfigsStreamPackagingConfigCollectionArgs{...}
type GetStreamPackagingConfigsStreamPackagingConfigCollectionInput interface {
	pulumi.Input

	ToGetStreamPackagingConfigsStreamPackagingConfigCollectionOutput() GetStreamPackagingConfigsStreamPackagingConfigCollectionOutput
	ToGetStreamPackagingConfigsStreamPackagingConfigCollectionOutputWithContext(context.Context) GetStreamPackagingConfigsStreamPackagingConfigCollectionOutput
}

type GetStreamPackagingConfigsStreamPackagingConfigCollectionArgs struct {
	Items GetStreamPackagingConfigsStreamPackagingConfigCollectionItemArrayInput `pulumi:"items"`
}

func (GetStreamPackagingConfigsStreamPackagingConfigCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamPackagingConfigsStreamPackagingConfigCollection)(nil)).Elem()
}

func (i GetStreamPackagingConfigsStreamPackagingConfigCollectionArgs) ToGetStreamPackagingConfigsStreamPackagingConfigCollectionOutput() GetStreamPackagingConfigsStreamPackagingConfigCollectionOutput {
	return i.ToGetStreamPackagingConfigsStreamPackagingConfigCollectionOutputWithContext(context.Background())
}

func (i GetStreamPackagingConfigsStreamPackagingConfigCollectionArgs) ToGetStreamPackagingConfigsStreamPackagingConfigCollectionOutputWithContext(ctx context.Context) GetStreamPackagingConfigsStreamPackagingConfigCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamPackagingConfigsStreamPackagingConfigCollectionOutput)
}

// GetStreamPackagingConfigsStreamPackagingConfigCollectionArrayInput is an input type that accepts GetStreamPackagingConfigsStreamPackagingConfigCollectionArray and GetStreamPackagingConfigsStreamPackagingConfigCollectionArrayOutput values.
// You can construct a concrete instance of `GetStreamPackagingConfigsStreamPackagingConfigCollectionArrayInput` via:
//
//	GetStreamPackagingConfigsStreamPackagingConfigCollectionArray{ GetStreamPackagingConfigsStreamPackagingConfigCollectionArgs{...} }
type GetStreamPackagingConfigsStreamPackagingConfigCollectionArrayInput interface {
	pulumi.Input

	ToGetStreamPackagingConfigsStreamPackagingConfigCollectionArrayOutput() GetStreamPackagingConfigsStreamPackagingConfigCollectionArrayOutput
	ToGetStreamPackagingConfigsStreamPackagingConfigCollectionArrayOutputWithContext(context.Context) GetStreamPackagingConfigsStreamPackagingConfigCollectionArrayOutput
}

type GetStreamPackagingConfigsStreamPackagingConfigCollectionArray []GetStreamPackagingConfigsStreamPackagingConfigCollectionInput

func (GetStreamPackagingConfigsStreamPackagingConfigCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamPackagingConfigsStreamPackagingConfigCollection)(nil)).Elem()
}

func (i GetStreamPackagingConfigsStreamPackagingConfigCollectionArray) ToGetStreamPackagingConfigsStreamPackagingConfigCollectionArrayOutput() GetStreamPackagingConfigsStreamPackagingConfigCollectionArrayOutput {
	return i.ToGetStreamPackagingConfigsStreamPackagingConfigCollectionArrayOutputWithContext(context.Background())
}

func (i GetStreamPackagingConfigsStreamPackagingConfigCollectionArray) ToGetStreamPackagingConfigsStreamPackagingConfigCollectionArrayOutputWithContext(ctx context.Context) GetStreamPackagingConfigsStreamPackagingConfigCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamPackagingConfigsStreamPackagingConfigCollectionArrayOutput)
}

type GetStreamPackagingConfigsStreamPackagingConfigCollectionOutput struct{ *pulumi.OutputState }

func (GetStreamPackagingConfigsStreamPackagingConfigCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamPackagingConfigsStreamPackagingConfigCollection)(nil)).Elem()
}

func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionOutput) ToGetStreamPackagingConfigsStreamPackagingConfigCollectionOutput() GetStreamPackagingConfigsStreamPackagingConfigCollectionOutput {
	return o
}

func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionOutput) ToGetStreamPackagingConfigsStreamPackagingConfigCollectionOutputWithContext(ctx context.Context) GetStreamPackagingConfigsStreamPackagingConfigCollectionOutput {
	return o
}

func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionOutput) Items() GetStreamPackagingConfigsStreamPackagingConfigCollectionItemArrayOutput {
	return o.ApplyT(func(v GetStreamPackagingConfigsStreamPackagingConfigCollection) []GetStreamPackagingConfigsStreamPackagingConfigCollectionItem {
		return v.Items
	}).(GetStreamPackagingConfigsStreamPackagingConfigCollectionItemArrayOutput)
}

type GetStreamPackagingConfigsStreamPackagingConfigCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetStreamPackagingConfigsStreamPackagingConfigCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamPackagingConfigsStreamPackagingConfigCollection)(nil)).Elem()
}

func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionArrayOutput) ToGetStreamPackagingConfigsStreamPackagingConfigCollectionArrayOutput() GetStreamPackagingConfigsStreamPackagingConfigCollectionArrayOutput {
	return o
}

func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionArrayOutput) ToGetStreamPackagingConfigsStreamPackagingConfigCollectionArrayOutputWithContext(ctx context.Context) GetStreamPackagingConfigsStreamPackagingConfigCollectionArrayOutput {
	return o
}

func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionArrayOutput) Index(i pulumi.IntInput) GetStreamPackagingConfigsStreamPackagingConfigCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStreamPackagingConfigsStreamPackagingConfigCollection {
		return vs[0].([]GetStreamPackagingConfigsStreamPackagingConfigCollection)[vs[1].(int)]
	}).(GetStreamPackagingConfigsStreamPackagingConfigCollectionOutput)
}

type GetStreamPackagingConfigsStreamPackagingConfigCollectionItem struct {
	// The compartment ID of the lock.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A filter to return only the resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Unique Stream Distribution Channel identifier.
	DistributionChannelId string `pulumi:"distributionChannelId"`
	// The encryption used by the stream packaging configuration.
	Encryptions []GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryption `pulumi:"encryptions"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Unique identifier that is immutable on creation.
	Id             string `pulumi:"id"`
	IsLockOverride bool   `pulumi:"isLockOverride"`
	// Locks associated with this resource.
	Locks []GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLock `pulumi:"locks"`
	// The duration in seconds for each fragment.
	SegmentTimeInSeconds int `pulumi:"segmentTimeInSeconds"`
	// A filter to return only the resources with lifecycleState matching the given lifecycleState.
	State string `pulumi:"state"`
	// The output format for the package.
	StreamPackagingFormat string `pulumi:"streamPackagingFormat"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time when the Packaging Configuration was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time when the Packaging Configuration was updated. An RFC3339 formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetStreamPackagingConfigsStreamPackagingConfigCollectionItemInput is an input type that accepts GetStreamPackagingConfigsStreamPackagingConfigCollectionItemArgs and GetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutput values.
// You can construct a concrete instance of `GetStreamPackagingConfigsStreamPackagingConfigCollectionItemInput` via:
//
//	GetStreamPackagingConfigsStreamPackagingConfigCollectionItemArgs{...}
type GetStreamPackagingConfigsStreamPackagingConfigCollectionItemInput interface {
	pulumi.Input

	ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutput() GetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutput
	ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutputWithContext(context.Context) GetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutput
}

type GetStreamPackagingConfigsStreamPackagingConfigCollectionItemArgs struct {
	// The compartment ID of the lock.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// A filter to return only the resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Unique Stream Distribution Channel identifier.
	DistributionChannelId pulumi.StringInput `pulumi:"distributionChannelId"`
	// The encryption used by the stream packaging configuration.
	Encryptions GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArrayInput `pulumi:"encryptions"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// Unique identifier that is immutable on creation.
	Id             pulumi.StringInput `pulumi:"id"`
	IsLockOverride pulumi.BoolInput   `pulumi:"isLockOverride"`
	// Locks associated with this resource.
	Locks GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArrayInput `pulumi:"locks"`
	// The duration in seconds for each fragment.
	SegmentTimeInSeconds pulumi.IntInput `pulumi:"segmentTimeInSeconds"`
	// A filter to return only the resources with lifecycleState matching the given lifecycleState.
	State pulumi.StringInput `pulumi:"state"`
	// The output format for the package.
	StreamPackagingFormat pulumi.StringInput `pulumi:"streamPackagingFormat"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput `pulumi:"systemTags"`
	// The time when the Packaging Configuration was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time when the Packaging Configuration was updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetStreamPackagingConfigsStreamPackagingConfigCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamPackagingConfigsStreamPackagingConfigCollectionItem)(nil)).Elem()
}

func (i GetStreamPackagingConfigsStreamPackagingConfigCollectionItemArgs) ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutput() GetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutput {
	return i.ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutputWithContext(context.Background())
}

func (i GetStreamPackagingConfigsStreamPackagingConfigCollectionItemArgs) ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutputWithContext(ctx context.Context) GetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutput)
}

// GetStreamPackagingConfigsStreamPackagingConfigCollectionItemArrayInput is an input type that accepts GetStreamPackagingConfigsStreamPackagingConfigCollectionItemArray and GetStreamPackagingConfigsStreamPackagingConfigCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetStreamPackagingConfigsStreamPackagingConfigCollectionItemArrayInput` via:
//
//	GetStreamPackagingConfigsStreamPackagingConfigCollectionItemArray{ GetStreamPackagingConfigsStreamPackagingConfigCollectionItemArgs{...} }
type GetStreamPackagingConfigsStreamPackagingConfigCollectionItemArrayInput interface {
	pulumi.Input

	ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemArrayOutput() GetStreamPackagingConfigsStreamPackagingConfigCollectionItemArrayOutput
	ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemArrayOutputWithContext(context.Context) GetStreamPackagingConfigsStreamPackagingConfigCollectionItemArrayOutput
}

type GetStreamPackagingConfigsStreamPackagingConfigCollectionItemArray []GetStreamPackagingConfigsStreamPackagingConfigCollectionItemInput

func (GetStreamPackagingConfigsStreamPackagingConfigCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamPackagingConfigsStreamPackagingConfigCollectionItem)(nil)).Elem()
}

func (i GetStreamPackagingConfigsStreamPackagingConfigCollectionItemArray) ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemArrayOutput() GetStreamPackagingConfigsStreamPackagingConfigCollectionItemArrayOutput {
	return i.ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetStreamPackagingConfigsStreamPackagingConfigCollectionItemArray) ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemArrayOutputWithContext(ctx context.Context) GetStreamPackagingConfigsStreamPackagingConfigCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamPackagingConfigsStreamPackagingConfigCollectionItemArrayOutput)
}

type GetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutput struct{ *pulumi.OutputState }

func (GetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamPackagingConfigsStreamPackagingConfigCollectionItem)(nil)).Elem()
}

func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutput) ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutput() GetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutput {
	return o
}

func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutput) ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutputWithContext(ctx context.Context) GetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutput {
	return o
}

// The compartment ID of the lock.
func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPackagingConfigsStreamPackagingConfigCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetStreamPackagingConfigsStreamPackagingConfigCollectionItem) map[string]string {
		return v.DefinedTags
	}).(pulumi.StringMapOutput)
}

// A filter to return only the resources that match the entire display name given.
func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPackagingConfigsStreamPackagingConfigCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Unique Stream Distribution Channel identifier.
func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutput) DistributionChannelId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPackagingConfigsStreamPackagingConfigCollectionItem) string {
		return v.DistributionChannelId
	}).(pulumi.StringOutput)
}

// The encryption used by the stream packaging configuration.
func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutput) Encryptions() GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArrayOutput {
	return o.ApplyT(func(v GetStreamPackagingConfigsStreamPackagingConfigCollectionItem) []GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryption {
		return v.Encryptions
	}).(GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArrayOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetStreamPackagingConfigsStreamPackagingConfigCollectionItem) map[string]string {
		return v.FreeformTags
	}).(pulumi.StringMapOutput)
}

// Unique identifier that is immutable on creation.
func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPackagingConfigsStreamPackagingConfigCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutput) IsLockOverride() pulumi.BoolOutput {
	return o.ApplyT(func(v GetStreamPackagingConfigsStreamPackagingConfigCollectionItem) bool { return v.IsLockOverride }).(pulumi.BoolOutput)
}

// Locks associated with this resource.
func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutput) Locks() GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArrayOutput {
	return o.ApplyT(func(v GetStreamPackagingConfigsStreamPackagingConfigCollectionItem) []GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLock {
		return v.Locks
	}).(GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArrayOutput)
}

// The duration in seconds for each fragment.
func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutput) SegmentTimeInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetStreamPackagingConfigsStreamPackagingConfigCollectionItem) int {
		return v.SegmentTimeInSeconds
	}).(pulumi.IntOutput)
}

// A filter to return only the resources with lifecycleState matching the given lifecycleState.
func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPackagingConfigsStreamPackagingConfigCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// The output format for the package.
func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutput) StreamPackagingFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPackagingConfigsStreamPackagingConfigCollectionItem) string {
		return v.StreamPackagingFormat
	}).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetStreamPackagingConfigsStreamPackagingConfigCollectionItem) map[string]string {
		return v.SystemTags
	}).(pulumi.StringMapOutput)
}

// The time when the Packaging Configuration was created. An RFC3339 formatted datetime string.
func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPackagingConfigsStreamPackagingConfigCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time when the Packaging Configuration was updated. An RFC3339 formatted datetime string.
func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPackagingConfigsStreamPackagingConfigCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetStreamPackagingConfigsStreamPackagingConfigCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetStreamPackagingConfigsStreamPackagingConfigCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamPackagingConfigsStreamPackagingConfigCollectionItem)(nil)).Elem()
}

func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemArrayOutput) ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemArrayOutput() GetStreamPackagingConfigsStreamPackagingConfigCollectionItemArrayOutput {
	return o
}

func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemArrayOutput) ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemArrayOutputWithContext(ctx context.Context) GetStreamPackagingConfigsStreamPackagingConfigCollectionItemArrayOutput {
	return o
}

func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemArrayOutput) Index(i pulumi.IntInput) GetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStreamPackagingConfigsStreamPackagingConfigCollectionItem {
		return vs[0].([]GetStreamPackagingConfigsStreamPackagingConfigCollectionItem)[vs[1].(int)]
	}).(GetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutput)
}

type GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryption struct {
	// The encryption algorithm for the stream packaging configuration.
	Algorithm string `pulumi:"algorithm"`
	// The identifier of the customer managed Vault KMS symmetric encryption key (null if Oracle managed).
	KmsKeyId string `pulumi:"kmsKeyId"`
}

// GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionInput is an input type that accepts GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArgs and GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionOutput values.
// You can construct a concrete instance of `GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionInput` via:
//
//	GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArgs{...}
type GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionInput interface {
	pulumi.Input

	ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionOutput() GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionOutput
	ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionOutputWithContext(context.Context) GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionOutput
}

type GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArgs struct {
	// The encryption algorithm for the stream packaging configuration.
	Algorithm pulumi.StringInput `pulumi:"algorithm"`
	// The identifier of the customer managed Vault KMS symmetric encryption key (null if Oracle managed).
	KmsKeyId pulumi.StringInput `pulumi:"kmsKeyId"`
}

func (GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryption)(nil)).Elem()
}

func (i GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArgs) ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionOutput() GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionOutput {
	return i.ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionOutputWithContext(context.Background())
}

func (i GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArgs) ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionOutputWithContext(ctx context.Context) GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionOutput)
}

// GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArrayInput is an input type that accepts GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArray and GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArrayOutput values.
// You can construct a concrete instance of `GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArrayInput` via:
//
//	GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArray{ GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArgs{...} }
type GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArrayInput interface {
	pulumi.Input

	ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArrayOutput() GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArrayOutput
	ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArrayOutputWithContext(context.Context) GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArrayOutput
}

type GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArray []GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionInput

func (GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryption)(nil)).Elem()
}

func (i GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArray) ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArrayOutput() GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArrayOutput {
	return i.ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArrayOutputWithContext(context.Background())
}

func (i GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArray) ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArrayOutputWithContext(ctx context.Context) GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArrayOutput)
}

type GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionOutput struct{ *pulumi.OutputState }

func (GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryption)(nil)).Elem()
}

func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionOutput) ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionOutput() GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionOutput {
	return o
}

func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionOutput) ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionOutputWithContext(ctx context.Context) GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionOutput {
	return o
}

// The encryption algorithm for the stream packaging configuration.
func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryption) string {
		return v.Algorithm
	}).(pulumi.StringOutput)
}

// The identifier of the customer managed Vault KMS symmetric encryption key (null if Oracle managed).
func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryption) string {
		return v.KmsKeyId
	}).(pulumi.StringOutput)
}

type GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArrayOutput struct{ *pulumi.OutputState }

func (GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryption)(nil)).Elem()
}

func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArrayOutput) ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArrayOutput() GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArrayOutput {
	return o
}

func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArrayOutput) ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArrayOutputWithContext(ctx context.Context) GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArrayOutput {
	return o
}

func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArrayOutput) Index(i pulumi.IntInput) GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryption {
		return vs[0].([]GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryption)[vs[1].(int)]
	}).(GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionOutput)
}

type GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLock struct {
	// The compartment ID of the lock.
	CompartmentId string `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message string `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId string `pulumi:"relatedResourceId"`
	// The time when the Packaging Configuration was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// Type of the lock.
	Type string `pulumi:"type"`
}

// GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockInput is an input type that accepts GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArgs and GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockOutput values.
// You can construct a concrete instance of `GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockInput` via:
//
//	GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArgs{...}
type GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockInput interface {
	pulumi.Input

	ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockOutput() GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockOutput
	ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockOutputWithContext(context.Context) GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockOutput
}

type GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArgs struct {
	// The compartment ID of the lock.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
	Message pulumi.StringInput `pulumi:"message"`
	// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
	RelatedResourceId pulumi.StringInput `pulumi:"relatedResourceId"`
	// The time when the Packaging Configuration was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// Type of the lock.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLock)(nil)).Elem()
}

func (i GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArgs) ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockOutput() GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockOutput {
	return i.ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockOutputWithContext(context.Background())
}

func (i GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArgs) ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockOutputWithContext(ctx context.Context) GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockOutput)
}

// GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArrayInput is an input type that accepts GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArray and GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArrayOutput values.
// You can construct a concrete instance of `GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArrayInput` via:
//
//	GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArray{ GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArgs{...} }
type GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArrayInput interface {
	pulumi.Input

	ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArrayOutput() GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArrayOutput
	ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArrayOutputWithContext(context.Context) GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArrayOutput
}

type GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArray []GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockInput

func (GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLock)(nil)).Elem()
}

func (i GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArray) ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArrayOutput() GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArrayOutput {
	return i.ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArrayOutputWithContext(context.Background())
}

func (i GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArray) ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArrayOutputWithContext(ctx context.Context) GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArrayOutput)
}

type GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockOutput struct{ *pulumi.OutputState }

func (GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLock)(nil)).Elem()
}

func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockOutput) ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockOutput() GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockOutput {
	return o
}

func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockOutput) ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockOutputWithContext(ctx context.Context) GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockOutput {
	return o
}

// The compartment ID of the lock.
func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLock) string {
		return v.CompartmentId
	}).(pulumi.StringOutput)
}

// A message added by the creator of the lock. This is typically used to give an indication of why the resource is locked.
func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLock) string { return v.Message }).(pulumi.StringOutput)
}

// The ID of the resource that is locking this resource. Indicates that deleting this resource will remove the lock.
func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockOutput) RelatedResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLock) string {
		return v.RelatedResourceId
	}).(pulumi.StringOutput)
}

// The time when the Packaging Configuration was created. An RFC3339 formatted datetime string.
func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLock) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Type of the lock.
func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLock) string { return v.Type }).(pulumi.StringOutput)
}

type GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArrayOutput struct{ *pulumi.OutputState }

func (GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLock)(nil)).Elem()
}

func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArrayOutput) ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArrayOutput() GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArrayOutput {
	return o
}

func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArrayOutput) ToGetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArrayOutputWithContext(ctx context.Context) GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArrayOutput {
	return o
}

func (o GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArrayOutput) Index(i pulumi.IntInput) GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLock {
		return vs[0].([]GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLock)[vs[1].(int)]
	}).(GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockOutput)
}

type GetSystemMediaWorkflowItem struct {
	// Description of this workflow's processing and how that processing can be customized by specifying parameter values.
	Description string `pulumi:"description"`
	// A filter to return only the resources with their system defined, unique name matching the given name.
	Name string `pulumi:"name"`
	// Data specifiying how this task is to be run. The data is a JSON object that must conform to the JSON Schema specified by the parameters of the MediaWorkflowTaskDeclaration this task references. The parameters may contain values or references to other parameters.
	Parameters string `pulumi:"parameters"`
	// The processing to be done in this workflow. Each key of the MediaWorkflowTasks in this array is unique within the array. The order of the items is preserved from the order of the tasks array in CreateMediaWorkflowDetails or UpdateMediaWorkflowDetails.
	Tasks []GetSystemMediaWorkflowItemTask `pulumi:"tasks"`
}

// GetSystemMediaWorkflowItemInput is an input type that accepts GetSystemMediaWorkflowItemArgs and GetSystemMediaWorkflowItemOutput values.
// You can construct a concrete instance of `GetSystemMediaWorkflowItemInput` via:
//
//	GetSystemMediaWorkflowItemArgs{...}
type GetSystemMediaWorkflowItemInput interface {
	pulumi.Input

	ToGetSystemMediaWorkflowItemOutput() GetSystemMediaWorkflowItemOutput
	ToGetSystemMediaWorkflowItemOutputWithContext(context.Context) GetSystemMediaWorkflowItemOutput
}

type GetSystemMediaWorkflowItemArgs struct {
	// Description of this workflow's processing and how that processing can be customized by specifying parameter values.
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only the resources with their system defined, unique name matching the given name.
	Name pulumi.StringInput `pulumi:"name"`
	// Data specifiying how this task is to be run. The data is a JSON object that must conform to the JSON Schema specified by the parameters of the MediaWorkflowTaskDeclaration this task references. The parameters may contain values or references to other parameters.
	Parameters pulumi.StringInput `pulumi:"parameters"`
	// The processing to be done in this workflow. Each key of the MediaWorkflowTasks in this array is unique within the array. The order of the items is preserved from the order of the tasks array in CreateMediaWorkflowDetails or UpdateMediaWorkflowDetails.
	Tasks GetSystemMediaWorkflowItemTaskArrayInput `pulumi:"tasks"`
}

func (GetSystemMediaWorkflowItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSystemMediaWorkflowItem)(nil)).Elem()
}

func (i GetSystemMediaWorkflowItemArgs) ToGetSystemMediaWorkflowItemOutput() GetSystemMediaWorkflowItemOutput {
	return i.ToGetSystemMediaWorkflowItemOutputWithContext(context.Background())
}

func (i GetSystemMediaWorkflowItemArgs) ToGetSystemMediaWorkflowItemOutputWithContext(ctx context.Context) GetSystemMediaWorkflowItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSystemMediaWorkflowItemOutput)
}

// GetSystemMediaWorkflowItemArrayInput is an input type that accepts GetSystemMediaWorkflowItemArray and GetSystemMediaWorkflowItemArrayOutput values.
// You can construct a concrete instance of `GetSystemMediaWorkflowItemArrayInput` via:
//
//	GetSystemMediaWorkflowItemArray{ GetSystemMediaWorkflowItemArgs{...} }
type GetSystemMediaWorkflowItemArrayInput interface {
	pulumi.Input

	ToGetSystemMediaWorkflowItemArrayOutput() GetSystemMediaWorkflowItemArrayOutput
	ToGetSystemMediaWorkflowItemArrayOutputWithContext(context.Context) GetSystemMediaWorkflowItemArrayOutput
}

type GetSystemMediaWorkflowItemArray []GetSystemMediaWorkflowItemInput

func (GetSystemMediaWorkflowItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSystemMediaWorkflowItem)(nil)).Elem()
}

func (i GetSystemMediaWorkflowItemArray) ToGetSystemMediaWorkflowItemArrayOutput() GetSystemMediaWorkflowItemArrayOutput {
	return i.ToGetSystemMediaWorkflowItemArrayOutputWithContext(context.Background())
}

func (i GetSystemMediaWorkflowItemArray) ToGetSystemMediaWorkflowItemArrayOutputWithContext(ctx context.Context) GetSystemMediaWorkflowItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSystemMediaWorkflowItemArrayOutput)
}

type GetSystemMediaWorkflowItemOutput struct{ *pulumi.OutputState }

func (GetSystemMediaWorkflowItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSystemMediaWorkflowItem)(nil)).Elem()
}

func (o GetSystemMediaWorkflowItemOutput) ToGetSystemMediaWorkflowItemOutput() GetSystemMediaWorkflowItemOutput {
	return o
}

func (o GetSystemMediaWorkflowItemOutput) ToGetSystemMediaWorkflowItemOutputWithContext(ctx context.Context) GetSystemMediaWorkflowItemOutput {
	return o
}

// Description of this workflow's processing and how that processing can be customized by specifying parameter values.
func (o GetSystemMediaWorkflowItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSystemMediaWorkflowItem) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only the resources with their system defined, unique name matching the given name.
func (o GetSystemMediaWorkflowItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSystemMediaWorkflowItem) string { return v.Name }).(pulumi.StringOutput)
}

// Data specifiying how this task is to be run. The data is a JSON object that must conform to the JSON Schema specified by the parameters of the MediaWorkflowTaskDeclaration this task references. The parameters may contain values or references to other parameters.
func (o GetSystemMediaWorkflowItemOutput) Parameters() pulumi.StringOutput {
	return o.ApplyT(func(v GetSystemMediaWorkflowItem) string { return v.Parameters }).(pulumi.StringOutput)
}

// The processing to be done in this workflow. Each key of the MediaWorkflowTasks in this array is unique within the array. The order of the items is preserved from the order of the tasks array in CreateMediaWorkflowDetails or UpdateMediaWorkflowDetails.
func (o GetSystemMediaWorkflowItemOutput) Tasks() GetSystemMediaWorkflowItemTaskArrayOutput {
	return o.ApplyT(func(v GetSystemMediaWorkflowItem) []GetSystemMediaWorkflowItemTask { return v.Tasks }).(GetSystemMediaWorkflowItemTaskArrayOutput)
}

type GetSystemMediaWorkflowItemArrayOutput struct{ *pulumi.OutputState }

func (GetSystemMediaWorkflowItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSystemMediaWorkflowItem)(nil)).Elem()
}

func (o GetSystemMediaWorkflowItemArrayOutput) ToGetSystemMediaWorkflowItemArrayOutput() GetSystemMediaWorkflowItemArrayOutput {
	return o
}

func (o GetSystemMediaWorkflowItemArrayOutput) ToGetSystemMediaWorkflowItemArrayOutputWithContext(ctx context.Context) GetSystemMediaWorkflowItemArrayOutput {
	return o
}

func (o GetSystemMediaWorkflowItemArrayOutput) Index(i pulumi.IntInput) GetSystemMediaWorkflowItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSystemMediaWorkflowItem {
		return vs[0].([]GetSystemMediaWorkflowItem)[vs[1].(int)]
	}).(GetSystemMediaWorkflowItemOutput)
}

type GetSystemMediaWorkflowItemTask struct {
	// Allows this task to be conditionally enabled.  If no value or a blank value is given, the task is unconditionally enbled.  Otherwise the given string specifies a parameter of the job created for this task's workflow using the JSON pointer syntax. The JSON pointer is validated when a job is created from the workflow of this task.
	EnableParameterReference string `pulumi:"enableParameterReference"`
	// Used in conjunction with enableParameterReference to conditionally enable a task.  When a job is created from the workflow of this task, the task will only be enabled if the value of the parameter specified by enableParameterReference is equal to the value of this property. This property must be prenset if and only if a enableParameterReference is given. The value is a JSON node.
	EnableWhenReferencedParameterEquals map[string]string `pulumi:"enableWhenReferencedParameterEquals"`
	// A unique identifier for this task within its workflow. Keys are used to reference a task within workflows and MediaWorkflowJobs. Tasks are referenced as prerequisites and to track output and state.
	Key string `pulumi:"key"`
	// Data specifiying how this task is to be run. The data is a JSON object that must conform to the JSON Schema specified by the parameters of the MediaWorkflowTaskDeclaration this task references. The parameters may contain values or references to other parameters.
	Parameters string `pulumi:"parameters"`
	// Keys to the other tasks in this workflow that must be completed before execution of this task can begin.
	Prerequisites []string `pulumi:"prerequisites"`
	// The type of process to run at this task. Refers to the name of a MediaWorkflowTaskDeclaration.
	Type string `pulumi:"type"`
	// The version of the MediaWorkflowTaskDeclaration.
	Version string `pulumi:"version"`
}

// GetSystemMediaWorkflowItemTaskInput is an input type that accepts GetSystemMediaWorkflowItemTaskArgs and GetSystemMediaWorkflowItemTaskOutput values.
// You can construct a concrete instance of `GetSystemMediaWorkflowItemTaskInput` via:
//
//	GetSystemMediaWorkflowItemTaskArgs{...}
type GetSystemMediaWorkflowItemTaskInput interface {
	pulumi.Input

	ToGetSystemMediaWorkflowItemTaskOutput() GetSystemMediaWorkflowItemTaskOutput
	ToGetSystemMediaWorkflowItemTaskOutputWithContext(context.Context) GetSystemMediaWorkflowItemTaskOutput
}

type GetSystemMediaWorkflowItemTaskArgs struct {
	// Allows this task to be conditionally enabled.  If no value or a blank value is given, the task is unconditionally enbled.  Otherwise the given string specifies a parameter of the job created for this task's workflow using the JSON pointer syntax. The JSON pointer is validated when a job is created from the workflow of this task.
	EnableParameterReference pulumi.StringInput `pulumi:"enableParameterReference"`
	// Used in conjunction with enableParameterReference to conditionally enable a task.  When a job is created from the workflow of this task, the task will only be enabled if the value of the parameter specified by enableParameterReference is equal to the value of this property. This property must be prenset if and only if a enableParameterReference is given. The value is a JSON node.
	EnableWhenReferencedParameterEquals pulumi.StringMapInput `pulumi:"enableWhenReferencedParameterEquals"`
	// A unique identifier for this task within its workflow. Keys are used to reference a task within workflows and MediaWorkflowJobs. Tasks are referenced as prerequisites and to track output and state.
	Key pulumi.StringInput `pulumi:"key"`
	// Data specifiying how this task is to be run. The data is a JSON object that must conform to the JSON Schema specified by the parameters of the MediaWorkflowTaskDeclaration this task references. The parameters may contain values or references to other parameters.
	Parameters pulumi.StringInput `pulumi:"parameters"`
	// Keys to the other tasks in this workflow that must be completed before execution of this task can begin.
	Prerequisites pulumi.StringArrayInput `pulumi:"prerequisites"`
	// The type of process to run at this task. Refers to the name of a MediaWorkflowTaskDeclaration.
	Type pulumi.StringInput `pulumi:"type"`
	// The version of the MediaWorkflowTaskDeclaration.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetSystemMediaWorkflowItemTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSystemMediaWorkflowItemTask)(nil)).Elem()
}

func (i GetSystemMediaWorkflowItemTaskArgs) ToGetSystemMediaWorkflowItemTaskOutput() GetSystemMediaWorkflowItemTaskOutput {
	return i.ToGetSystemMediaWorkflowItemTaskOutputWithContext(context.Background())
}

func (i GetSystemMediaWorkflowItemTaskArgs) ToGetSystemMediaWorkflowItemTaskOutputWithContext(ctx context.Context) GetSystemMediaWorkflowItemTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSystemMediaWorkflowItemTaskOutput)
}

// GetSystemMediaWorkflowItemTaskArrayInput is an input type that accepts GetSystemMediaWorkflowItemTaskArray and GetSystemMediaWorkflowItemTaskArrayOutput values.
// You can construct a concrete instance of `GetSystemMediaWorkflowItemTaskArrayInput` via:
//
//	GetSystemMediaWorkflowItemTaskArray{ GetSystemMediaWorkflowItemTaskArgs{...} }
type GetSystemMediaWorkflowItemTaskArrayInput interface {
	pulumi.Input

	ToGetSystemMediaWorkflowItemTaskArrayOutput() GetSystemMediaWorkflowItemTaskArrayOutput
	ToGetSystemMediaWorkflowItemTaskArrayOutputWithContext(context.Context) GetSystemMediaWorkflowItemTaskArrayOutput
}

type GetSystemMediaWorkflowItemTaskArray []GetSystemMediaWorkflowItemTaskInput

func (GetSystemMediaWorkflowItemTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSystemMediaWorkflowItemTask)(nil)).Elem()
}

func (i GetSystemMediaWorkflowItemTaskArray) ToGetSystemMediaWorkflowItemTaskArrayOutput() GetSystemMediaWorkflowItemTaskArrayOutput {
	return i.ToGetSystemMediaWorkflowItemTaskArrayOutputWithContext(context.Background())
}

func (i GetSystemMediaWorkflowItemTaskArray) ToGetSystemMediaWorkflowItemTaskArrayOutputWithContext(ctx context.Context) GetSystemMediaWorkflowItemTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSystemMediaWorkflowItemTaskArrayOutput)
}

type GetSystemMediaWorkflowItemTaskOutput struct{ *pulumi.OutputState }

func (GetSystemMediaWorkflowItemTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSystemMediaWorkflowItemTask)(nil)).Elem()
}

func (o GetSystemMediaWorkflowItemTaskOutput) ToGetSystemMediaWorkflowItemTaskOutput() GetSystemMediaWorkflowItemTaskOutput {
	return o
}

func (o GetSystemMediaWorkflowItemTaskOutput) ToGetSystemMediaWorkflowItemTaskOutputWithContext(ctx context.Context) GetSystemMediaWorkflowItemTaskOutput {
	return o
}

// Allows this task to be conditionally enabled.  If no value or a blank value is given, the task is unconditionally enbled.  Otherwise the given string specifies a parameter of the job created for this task's workflow using the JSON pointer syntax. The JSON pointer is validated when a job is created from the workflow of this task.
func (o GetSystemMediaWorkflowItemTaskOutput) EnableParameterReference() pulumi.StringOutput {
	return o.ApplyT(func(v GetSystemMediaWorkflowItemTask) string { return v.EnableParameterReference }).(pulumi.StringOutput)
}

// Used in conjunction with enableParameterReference to conditionally enable a task.  When a job is created from the workflow of this task, the task will only be enabled if the value of the parameter specified by enableParameterReference is equal to the value of this property. This property must be prenset if and only if a enableParameterReference is given. The value is a JSON node.
func (o GetSystemMediaWorkflowItemTaskOutput) EnableWhenReferencedParameterEquals() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetSystemMediaWorkflowItemTask) map[string]string { return v.EnableWhenReferencedParameterEquals }).(pulumi.StringMapOutput)
}

// A unique identifier for this task within its workflow. Keys are used to reference a task within workflows and MediaWorkflowJobs. Tasks are referenced as prerequisites and to track output and state.
func (o GetSystemMediaWorkflowItemTaskOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSystemMediaWorkflowItemTask) string { return v.Key }).(pulumi.StringOutput)
}

// Data specifiying how this task is to be run. The data is a JSON object that must conform to the JSON Schema specified by the parameters of the MediaWorkflowTaskDeclaration this task references. The parameters may contain values or references to other parameters.
func (o GetSystemMediaWorkflowItemTaskOutput) Parameters() pulumi.StringOutput {
	return o.ApplyT(func(v GetSystemMediaWorkflowItemTask) string { return v.Parameters }).(pulumi.StringOutput)
}

// Keys to the other tasks in this workflow that must be completed before execution of this task can begin.
func (o GetSystemMediaWorkflowItemTaskOutput) Prerequisites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSystemMediaWorkflowItemTask) []string { return v.Prerequisites }).(pulumi.StringArrayOutput)
}

// The type of process to run at this task. Refers to the name of a MediaWorkflowTaskDeclaration.
func (o GetSystemMediaWorkflowItemTaskOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetSystemMediaWorkflowItemTask) string { return v.Type }).(pulumi.StringOutput)
}

// The version of the MediaWorkflowTaskDeclaration.
func (o GetSystemMediaWorkflowItemTaskOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetSystemMediaWorkflowItemTask) string { return v.Version }).(pulumi.StringOutput)
}

type GetSystemMediaWorkflowItemTaskArrayOutput struct{ *pulumi.OutputState }

func (GetSystemMediaWorkflowItemTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSystemMediaWorkflowItemTask)(nil)).Elem()
}

func (o GetSystemMediaWorkflowItemTaskArrayOutput) ToGetSystemMediaWorkflowItemTaskArrayOutput() GetSystemMediaWorkflowItemTaskArrayOutput {
	return o
}

func (o GetSystemMediaWorkflowItemTaskArrayOutput) ToGetSystemMediaWorkflowItemTaskArrayOutputWithContext(ctx context.Context) GetSystemMediaWorkflowItemTaskArrayOutput {
	return o
}

func (o GetSystemMediaWorkflowItemTaskArrayOutput) Index(i pulumi.IntInput) GetSystemMediaWorkflowItemTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSystemMediaWorkflowItemTask {
		return vs[0].([]GetSystemMediaWorkflowItemTask)[vs[1].(int)]
	}).(GetSystemMediaWorkflowItemTaskOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MediaAssetLockInput)(nil)).Elem(), MediaAssetLockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MediaAssetLockArrayInput)(nil)).Elem(), MediaAssetLockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MediaAssetMediaAssetTagInput)(nil)).Elem(), MediaAssetMediaAssetTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MediaAssetMediaAssetTagArrayInput)(nil)).Elem(), MediaAssetMediaAssetTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MediaAssetMetadataInput)(nil)).Elem(), MediaAssetMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MediaAssetMetadataArrayInput)(nil)).Elem(), MediaAssetMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MediaWorkflowConfigurationLockInput)(nil)).Elem(), MediaWorkflowConfigurationLockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MediaWorkflowConfigurationLockArrayInput)(nil)).Elem(), MediaWorkflowConfigurationLockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MediaWorkflowJobLockInput)(nil)).Elem(), MediaWorkflowJobLockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MediaWorkflowJobLockArrayInput)(nil)).Elem(), MediaWorkflowJobLockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MediaWorkflowJobOutputTypeInput)(nil)).Elem(), MediaWorkflowJobOutputTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MediaWorkflowJobOutputTypeArrayInput)(nil)).Elem(), MediaWorkflowJobOutputTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MediaWorkflowJobTaskLifecycleStateInput)(nil)).Elem(), MediaWorkflowJobTaskLifecycleStateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MediaWorkflowJobTaskLifecycleStateArrayInput)(nil)).Elem(), MediaWorkflowJobTaskLifecycleStateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MediaWorkflowLockInput)(nil)).Elem(), MediaWorkflowLockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MediaWorkflowLockArrayInput)(nil)).Elem(), MediaWorkflowLockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MediaWorkflowTaskInput)(nil)).Elem(), MediaWorkflowTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MediaWorkflowTaskArrayInput)(nil)).Elem(), MediaWorkflowTaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamCdnConfigConfigInput)(nil)).Elem(), StreamCdnConfigConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamCdnConfigConfigPtrInput)(nil)).Elem(), StreamCdnConfigConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamCdnConfigLockInput)(nil)).Elem(), StreamCdnConfigLockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamCdnConfigLockArrayInput)(nil)).Elem(), StreamCdnConfigLockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamDistributionChannelLockInput)(nil)).Elem(), StreamDistributionChannelLockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamDistributionChannelLockArrayInput)(nil)).Elem(), StreamDistributionChannelLockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamPackagingConfigEncryptionInput)(nil)).Elem(), StreamPackagingConfigEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamPackagingConfigEncryptionPtrInput)(nil)).Elem(), StreamPackagingConfigEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamPackagingConfigLockInput)(nil)).Elem(), StreamPackagingConfigLockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamPackagingConfigLockArrayInput)(nil)).Elem(), StreamPackagingConfigLockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaAssetDistributionChannelAttachmentLockInput)(nil)).Elem(), GetMediaAssetDistributionChannelAttachmentLockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaAssetDistributionChannelAttachmentLockArrayInput)(nil)).Elem(), GetMediaAssetDistributionChannelAttachmentLockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaAssetLockInput)(nil)).Elem(), GetMediaAssetLockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaAssetLockArrayInput)(nil)).Elem(), GetMediaAssetLockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaAssetMediaAssetTagInput)(nil)).Elem(), GetMediaAssetMediaAssetTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaAssetMediaAssetTagArrayInput)(nil)).Elem(), GetMediaAssetMediaAssetTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaAssetMetadataInput)(nil)).Elem(), GetMediaAssetMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaAssetMetadataArrayInput)(nil)).Elem(), GetMediaAssetMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaAssetsFilterInput)(nil)).Elem(), GetMediaAssetsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaAssetsFilterArrayInput)(nil)).Elem(), GetMediaAssetsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaAssetsMediaAssetCollectionInput)(nil)).Elem(), GetMediaAssetsMediaAssetCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaAssetsMediaAssetCollectionArrayInput)(nil)).Elem(), GetMediaAssetsMediaAssetCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaAssetsMediaAssetCollectionItemInput)(nil)).Elem(), GetMediaAssetsMediaAssetCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaAssetsMediaAssetCollectionItemArrayInput)(nil)).Elem(), GetMediaAssetsMediaAssetCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaAssetsMediaAssetCollectionItemLockInput)(nil)).Elem(), GetMediaAssetsMediaAssetCollectionItemLockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaAssetsMediaAssetCollectionItemLockArrayInput)(nil)).Elem(), GetMediaAssetsMediaAssetCollectionItemLockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaAssetsMediaAssetCollectionItemMediaAssetTagInput)(nil)).Elem(), GetMediaAssetsMediaAssetCollectionItemMediaAssetTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaAssetsMediaAssetCollectionItemMediaAssetTagArrayInput)(nil)).Elem(), GetMediaAssetsMediaAssetCollectionItemMediaAssetTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaAssetsMediaAssetCollectionItemMetadataInput)(nil)).Elem(), GetMediaAssetsMediaAssetCollectionItemMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaAssetsMediaAssetCollectionItemMetadataArrayInput)(nil)).Elem(), GetMediaAssetsMediaAssetCollectionItemMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowConfigurationLockInput)(nil)).Elem(), GetMediaWorkflowConfigurationLockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowConfigurationLockArrayInput)(nil)).Elem(), GetMediaWorkflowConfigurationLockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowConfigurationsFilterInput)(nil)).Elem(), GetMediaWorkflowConfigurationsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowConfigurationsFilterArrayInput)(nil)).Elem(), GetMediaWorkflowConfigurationsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionInput)(nil)).Elem(), GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArrayInput)(nil)).Elem(), GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemInput)(nil)).Elem(), GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArrayInput)(nil)).Elem(), GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockInput)(nil)).Elem(), GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArrayInput)(nil)).Elem(), GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowJobFactsFilterInput)(nil)).Elem(), GetMediaWorkflowJobFactsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowJobFactsFilterArrayInput)(nil)).Elem(), GetMediaWorkflowJobFactsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionInput)(nil)).Elem(), GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArrayInput)(nil)).Elem(), GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemInput)(nil)).Elem(), GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArrayInput)(nil)).Elem(), GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowJobLockInput)(nil)).Elem(), GetMediaWorkflowJobLockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowJobLockArrayInput)(nil)).Elem(), GetMediaWorkflowJobLockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowJobOutputInput)(nil)).Elem(), GetMediaWorkflowJobOutputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowJobOutputArrayInput)(nil)).Elem(), GetMediaWorkflowJobOutputArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowJobTaskLifecycleStateInput)(nil)).Elem(), GetMediaWorkflowJobTaskLifecycleStateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowJobTaskLifecycleStateArrayInput)(nil)).Elem(), GetMediaWorkflowJobTaskLifecycleStateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowJobsFilterInput)(nil)).Elem(), GetMediaWorkflowJobsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowJobsFilterArrayInput)(nil)).Elem(), GetMediaWorkflowJobsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowJobsMediaWorkflowJobCollectionInput)(nil)).Elem(), GetMediaWorkflowJobsMediaWorkflowJobCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowJobsMediaWorkflowJobCollectionArrayInput)(nil)).Elem(), GetMediaWorkflowJobsMediaWorkflowJobCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowJobsMediaWorkflowJobCollectionItemInput)(nil)).Elem(), GetMediaWorkflowJobsMediaWorkflowJobCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowJobsMediaWorkflowJobCollectionItemArrayInput)(nil)).Elem(), GetMediaWorkflowJobsMediaWorkflowJobCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockInput)(nil)).Elem(), GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArrayInput)(nil)).Elem(), GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeInput)(nil)).Elem(), GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArrayInput)(nil)).Elem(), GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateInput)(nil)).Elem(), GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArrayInput)(nil)).Elem(), GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowLockInput)(nil)).Elem(), GetMediaWorkflowLockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowLockArrayInput)(nil)).Elem(), GetMediaWorkflowLockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowTaskInput)(nil)).Elem(), GetMediaWorkflowTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowTaskArrayInput)(nil)).Elem(), GetMediaWorkflowTaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowTaskDeclarationItemInput)(nil)).Elem(), GetMediaWorkflowTaskDeclarationItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowTaskDeclarationItemArrayInput)(nil)).Elem(), GetMediaWorkflowTaskDeclarationItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowsFilterInput)(nil)).Elem(), GetMediaWorkflowsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowsFilterArrayInput)(nil)).Elem(), GetMediaWorkflowsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowsMediaWorkflowCollectionInput)(nil)).Elem(), GetMediaWorkflowsMediaWorkflowCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowsMediaWorkflowCollectionArrayInput)(nil)).Elem(), GetMediaWorkflowsMediaWorkflowCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowsMediaWorkflowCollectionItemInput)(nil)).Elem(), GetMediaWorkflowsMediaWorkflowCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowsMediaWorkflowCollectionItemArrayInput)(nil)).Elem(), GetMediaWorkflowsMediaWorkflowCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowsMediaWorkflowCollectionItemLockInput)(nil)).Elem(), GetMediaWorkflowsMediaWorkflowCollectionItemLockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowsMediaWorkflowCollectionItemLockArrayInput)(nil)).Elem(), GetMediaWorkflowsMediaWorkflowCollectionItemLockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowsMediaWorkflowCollectionItemTaskInput)(nil)).Elem(), GetMediaWorkflowsMediaWorkflowCollectionItemTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMediaWorkflowsMediaWorkflowCollectionItemTaskArrayInput)(nil)).Elem(), GetMediaWorkflowsMediaWorkflowCollectionItemTaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamCdnConfigConfigInput)(nil)).Elem(), GetStreamCdnConfigConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamCdnConfigConfigArrayInput)(nil)).Elem(), GetStreamCdnConfigConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamCdnConfigLockInput)(nil)).Elem(), GetStreamCdnConfigLockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamCdnConfigLockArrayInput)(nil)).Elem(), GetStreamCdnConfigLockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamCdnConfigsFilterInput)(nil)).Elem(), GetStreamCdnConfigsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamCdnConfigsFilterArrayInput)(nil)).Elem(), GetStreamCdnConfigsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamCdnConfigsStreamCdnConfigCollectionInput)(nil)).Elem(), GetStreamCdnConfigsStreamCdnConfigCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamCdnConfigsStreamCdnConfigCollectionArrayInput)(nil)).Elem(), GetStreamCdnConfigsStreamCdnConfigCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamCdnConfigsStreamCdnConfigCollectionItemInput)(nil)).Elem(), GetStreamCdnConfigsStreamCdnConfigCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamCdnConfigsStreamCdnConfigCollectionItemArrayInput)(nil)).Elem(), GetStreamCdnConfigsStreamCdnConfigCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigInput)(nil)).Elem(), GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArrayInput)(nil)).Elem(), GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamCdnConfigsStreamCdnConfigCollectionItemLockInput)(nil)).Elem(), GetStreamCdnConfigsStreamCdnConfigCollectionItemLockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamCdnConfigsStreamCdnConfigCollectionItemLockArrayInput)(nil)).Elem(), GetStreamCdnConfigsStreamCdnConfigCollectionItemLockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamDistributionChannelLockInput)(nil)).Elem(), GetStreamDistributionChannelLockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamDistributionChannelLockArrayInput)(nil)).Elem(), GetStreamDistributionChannelLockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamDistributionChannelsFilterInput)(nil)).Elem(), GetStreamDistributionChannelsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamDistributionChannelsFilterArrayInput)(nil)).Elem(), GetStreamDistributionChannelsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamDistributionChannelsStreamDistributionChannelCollectionInput)(nil)).Elem(), GetStreamDistributionChannelsStreamDistributionChannelCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamDistributionChannelsStreamDistributionChannelCollectionArrayInput)(nil)).Elem(), GetStreamDistributionChannelsStreamDistributionChannelCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamDistributionChannelsStreamDistributionChannelCollectionItemInput)(nil)).Elem(), GetStreamDistributionChannelsStreamDistributionChannelCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamDistributionChannelsStreamDistributionChannelCollectionItemArrayInput)(nil)).Elem(), GetStreamDistributionChannelsStreamDistributionChannelCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockInput)(nil)).Elem(), GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArrayInput)(nil)).Elem(), GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamPackagingConfigEncryptionInput)(nil)).Elem(), GetStreamPackagingConfigEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamPackagingConfigEncryptionArrayInput)(nil)).Elem(), GetStreamPackagingConfigEncryptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamPackagingConfigLockInput)(nil)).Elem(), GetStreamPackagingConfigLockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamPackagingConfigLockArrayInput)(nil)).Elem(), GetStreamPackagingConfigLockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamPackagingConfigsFilterInput)(nil)).Elem(), GetStreamPackagingConfigsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamPackagingConfigsFilterArrayInput)(nil)).Elem(), GetStreamPackagingConfigsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamPackagingConfigsStreamPackagingConfigCollectionInput)(nil)).Elem(), GetStreamPackagingConfigsStreamPackagingConfigCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamPackagingConfigsStreamPackagingConfigCollectionArrayInput)(nil)).Elem(), GetStreamPackagingConfigsStreamPackagingConfigCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamPackagingConfigsStreamPackagingConfigCollectionItemInput)(nil)).Elem(), GetStreamPackagingConfigsStreamPackagingConfigCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamPackagingConfigsStreamPackagingConfigCollectionItemArrayInput)(nil)).Elem(), GetStreamPackagingConfigsStreamPackagingConfigCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionInput)(nil)).Elem(), GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArrayInput)(nil)).Elem(), GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockInput)(nil)).Elem(), GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArrayInput)(nil)).Elem(), GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSystemMediaWorkflowItemInput)(nil)).Elem(), GetSystemMediaWorkflowItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSystemMediaWorkflowItemArrayInput)(nil)).Elem(), GetSystemMediaWorkflowItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSystemMediaWorkflowItemTaskInput)(nil)).Elem(), GetSystemMediaWorkflowItemTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSystemMediaWorkflowItemTaskArrayInput)(nil)).Elem(), GetSystemMediaWorkflowItemTaskArray{})
	pulumi.RegisterOutputType(MediaAssetLockOutput{})
	pulumi.RegisterOutputType(MediaAssetLockArrayOutput{})
	pulumi.RegisterOutputType(MediaAssetMediaAssetTagOutput{})
	pulumi.RegisterOutputType(MediaAssetMediaAssetTagArrayOutput{})
	pulumi.RegisterOutputType(MediaAssetMetadataOutput{})
	pulumi.RegisterOutputType(MediaAssetMetadataArrayOutput{})
	pulumi.RegisterOutputType(MediaWorkflowConfigurationLockOutput{})
	pulumi.RegisterOutputType(MediaWorkflowConfigurationLockArrayOutput{})
	pulumi.RegisterOutputType(MediaWorkflowJobLockOutput{})
	pulumi.RegisterOutputType(MediaWorkflowJobLockArrayOutput{})
	pulumi.RegisterOutputType(MediaWorkflowJobOutputTypeOutput{})
	pulumi.RegisterOutputType(MediaWorkflowJobOutputTypeArrayOutput{})
	pulumi.RegisterOutputType(MediaWorkflowJobTaskLifecycleStateOutput{})
	pulumi.RegisterOutputType(MediaWorkflowJobTaskLifecycleStateArrayOutput{})
	pulumi.RegisterOutputType(MediaWorkflowLockOutput{})
	pulumi.RegisterOutputType(MediaWorkflowLockArrayOutput{})
	pulumi.RegisterOutputType(MediaWorkflowTaskOutput{})
	pulumi.RegisterOutputType(MediaWorkflowTaskArrayOutput{})
	pulumi.RegisterOutputType(StreamCdnConfigConfigOutput{})
	pulumi.RegisterOutputType(StreamCdnConfigConfigPtrOutput{})
	pulumi.RegisterOutputType(StreamCdnConfigLockOutput{})
	pulumi.RegisterOutputType(StreamCdnConfigLockArrayOutput{})
	pulumi.RegisterOutputType(StreamDistributionChannelLockOutput{})
	pulumi.RegisterOutputType(StreamDistributionChannelLockArrayOutput{})
	pulumi.RegisterOutputType(StreamPackagingConfigEncryptionOutput{})
	pulumi.RegisterOutputType(StreamPackagingConfigEncryptionPtrOutput{})
	pulumi.RegisterOutputType(StreamPackagingConfigLockOutput{})
	pulumi.RegisterOutputType(StreamPackagingConfigLockArrayOutput{})
	pulumi.RegisterOutputType(GetMediaAssetDistributionChannelAttachmentLockOutput{})
	pulumi.RegisterOutputType(GetMediaAssetDistributionChannelAttachmentLockArrayOutput{})
	pulumi.RegisterOutputType(GetMediaAssetLockOutput{})
	pulumi.RegisterOutputType(GetMediaAssetLockArrayOutput{})
	pulumi.RegisterOutputType(GetMediaAssetMediaAssetTagOutput{})
	pulumi.RegisterOutputType(GetMediaAssetMediaAssetTagArrayOutput{})
	pulumi.RegisterOutputType(GetMediaAssetMetadataOutput{})
	pulumi.RegisterOutputType(GetMediaAssetMetadataArrayOutput{})
	pulumi.RegisterOutputType(GetMediaAssetsFilterOutput{})
	pulumi.RegisterOutputType(GetMediaAssetsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetMediaAssetsMediaAssetCollectionOutput{})
	pulumi.RegisterOutputType(GetMediaAssetsMediaAssetCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetMediaAssetsMediaAssetCollectionItemOutput{})
	pulumi.RegisterOutputType(GetMediaAssetsMediaAssetCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetMediaAssetsMediaAssetCollectionItemLockOutput{})
	pulumi.RegisterOutputType(GetMediaAssetsMediaAssetCollectionItemLockArrayOutput{})
	pulumi.RegisterOutputType(GetMediaAssetsMediaAssetCollectionItemMediaAssetTagOutput{})
	pulumi.RegisterOutputType(GetMediaAssetsMediaAssetCollectionItemMediaAssetTagArrayOutput{})
	pulumi.RegisterOutputType(GetMediaAssetsMediaAssetCollectionItemMetadataOutput{})
	pulumi.RegisterOutputType(GetMediaAssetsMediaAssetCollectionItemMetadataArrayOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowConfigurationLockOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowConfigurationLockArrayOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowConfigurationsFilterOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowConfigurationsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowConfigurationsMediaWorkflowConfigurationCollectionItemLockArrayOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowJobFactsFilterOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowJobFactsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowJobFactsMediaWorkflowJobFactCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowJobLockOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowJobLockArrayOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowJobOutputOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowJobOutputArrayOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowJobTaskLifecycleStateOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowJobTaskLifecycleStateArrayOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowJobsFilterOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowJobsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowJobsMediaWorkflowJobCollectionOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowJobsMediaWorkflowJobCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowJobsMediaWorkflowJobCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowJobsMediaWorkflowJobCollectionItemLockArrayOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowJobsMediaWorkflowJobCollectionItemOutputTypeArrayOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowJobsMediaWorkflowJobCollectionItemTaskLifecycleStateArrayOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowLockOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowLockArrayOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowTaskOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowTaskArrayOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowTaskDeclarationItemOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowTaskDeclarationItemArrayOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowsFilterOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowsMediaWorkflowCollectionOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowsMediaWorkflowCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowsMediaWorkflowCollectionItemOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowsMediaWorkflowCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowsMediaWorkflowCollectionItemLockOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowsMediaWorkflowCollectionItemLockArrayOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowsMediaWorkflowCollectionItemTaskOutput{})
	pulumi.RegisterOutputType(GetMediaWorkflowsMediaWorkflowCollectionItemTaskArrayOutput{})
	pulumi.RegisterOutputType(GetStreamCdnConfigConfigOutput{})
	pulumi.RegisterOutputType(GetStreamCdnConfigConfigArrayOutput{})
	pulumi.RegisterOutputType(GetStreamCdnConfigLockOutput{})
	pulumi.RegisterOutputType(GetStreamCdnConfigLockArrayOutput{})
	pulumi.RegisterOutputType(GetStreamCdnConfigsFilterOutput{})
	pulumi.RegisterOutputType(GetStreamCdnConfigsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetStreamCdnConfigsStreamCdnConfigCollectionOutput{})
	pulumi.RegisterOutputType(GetStreamCdnConfigsStreamCdnConfigCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetStreamCdnConfigsStreamCdnConfigCollectionItemOutput{})
	pulumi.RegisterOutputType(GetStreamCdnConfigsStreamCdnConfigCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigOutput{})
	pulumi.RegisterOutputType(GetStreamCdnConfigsStreamCdnConfigCollectionItemConfigArrayOutput{})
	pulumi.RegisterOutputType(GetStreamCdnConfigsStreamCdnConfigCollectionItemLockOutput{})
	pulumi.RegisterOutputType(GetStreamCdnConfigsStreamCdnConfigCollectionItemLockArrayOutput{})
	pulumi.RegisterOutputType(GetStreamDistributionChannelLockOutput{})
	pulumi.RegisterOutputType(GetStreamDistributionChannelLockArrayOutput{})
	pulumi.RegisterOutputType(GetStreamDistributionChannelsFilterOutput{})
	pulumi.RegisterOutputType(GetStreamDistributionChannelsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetStreamDistributionChannelsStreamDistributionChannelCollectionOutput{})
	pulumi.RegisterOutputType(GetStreamDistributionChannelsStreamDistributionChannelCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetStreamDistributionChannelsStreamDistributionChannelCollectionItemOutput{})
	pulumi.RegisterOutputType(GetStreamDistributionChannelsStreamDistributionChannelCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockOutput{})
	pulumi.RegisterOutputType(GetStreamDistributionChannelsStreamDistributionChannelCollectionItemLockArrayOutput{})
	pulumi.RegisterOutputType(GetStreamPackagingConfigEncryptionOutput{})
	pulumi.RegisterOutputType(GetStreamPackagingConfigEncryptionArrayOutput{})
	pulumi.RegisterOutputType(GetStreamPackagingConfigLockOutput{})
	pulumi.RegisterOutputType(GetStreamPackagingConfigLockArrayOutput{})
	pulumi.RegisterOutputType(GetStreamPackagingConfigsFilterOutput{})
	pulumi.RegisterOutputType(GetStreamPackagingConfigsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetStreamPackagingConfigsStreamPackagingConfigCollectionOutput{})
	pulumi.RegisterOutputType(GetStreamPackagingConfigsStreamPackagingConfigCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetStreamPackagingConfigsStreamPackagingConfigCollectionItemOutput{})
	pulumi.RegisterOutputType(GetStreamPackagingConfigsStreamPackagingConfigCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionOutput{})
	pulumi.RegisterOutputType(GetStreamPackagingConfigsStreamPackagingConfigCollectionItemEncryptionArrayOutput{})
	pulumi.RegisterOutputType(GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockOutput{})
	pulumi.RegisterOutputType(GetStreamPackagingConfigsStreamPackagingConfigCollectionItemLockArrayOutput{})
	pulumi.RegisterOutputType(GetSystemMediaWorkflowItemOutput{})
	pulumi.RegisterOutputType(GetSystemMediaWorkflowItemArrayOutput{})
	pulumi.RegisterOutputType(GetSystemMediaWorkflowItemTaskOutput{})
	pulumi.RegisterOutputType(GetSystemMediaWorkflowItemTaskArrayOutput{})
}
