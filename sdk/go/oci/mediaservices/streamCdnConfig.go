// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mediaservices

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Stream Cdn Config resource in Oracle Cloud Infrastructure Media Services service.
//
// Creates a new CDN Configuration.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/MediaServices"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := MediaServices.NewStreamCdnConfig(ctx, "testStreamCdnConfig", &MediaServices.StreamCdnConfigArgs{
//				Config: &mediaservices.StreamCdnConfigConfigArgs{
//					Type:                      pulumi.Any(_var.Stream_cdn_config_config_type),
//					EdgeHostname:              pulumi.Any(_var.Stream_cdn_config_config_edge_hostname),
//					EdgePathPrefix:            pulumi.Any(_var.Stream_cdn_config_config_edge_path_prefix),
//					EdgeTokenKey:              pulumi.Any(_var.Stream_cdn_config_config_edge_token_key),
//					EdgeTokenSalt:             pulumi.Any(_var.Stream_cdn_config_config_edge_token_salt),
//					IsEdgeTokenAuth:           pulumi.Any(_var.Stream_cdn_config_config_is_edge_token_auth),
//					OriginAuthSecretKeyA:      pulumi.Any(_var.Stream_cdn_config_config_origin_auth_secret_key_a),
//					OriginAuthSecretKeyB:      pulumi.Any(_var.Stream_cdn_config_config_origin_auth_secret_key_b),
//					OriginAuthSecretKeyNonceA: pulumi.Any(_var.Stream_cdn_config_config_origin_auth_secret_key_nonce_a),
//					OriginAuthSecretKeyNonceB: pulumi.Any(_var.Stream_cdn_config_config_origin_auth_secret_key_nonce_b),
//					OriginAuthSignEncryption:  pulumi.Any(_var.Stream_cdn_config_config_origin_auth_sign_encryption),
//					OriginAuthSignType:        pulumi.Any(_var.Stream_cdn_config_config_origin_auth_sign_type),
//				},
//				DisplayName:           pulumi.Any(_var.Stream_cdn_config_display_name),
//				DistributionChannelId: pulumi.Any(oci_mysql_channel.Test_channel.Id),
//				DefinedTags: pulumi.AnyMap{
//					"foo-namespace.bar-key": pulumi.Any("value"),
//				},
//				FreeformTags: pulumi.AnyMap{
//					"bar-key": pulumi.Any("value"),
//				},
//				IsEnabled: pulumi.Any(_var.Stream_cdn_config_is_enabled),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// StreamCdnConfigs can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:MediaServices/streamCdnConfig:StreamCdnConfig test_stream_cdn_config "id"
//
// ```
type StreamCdnConfig struct {
	pulumi.CustomResourceState

	// Compartment Identifier.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Base fields of the StreamCdnConfig configuration object.
	Config StreamCdnConfigConfigOutput `pulumi:"config"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) CDN Config display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Distribution Channel Identifier.
	DistributionChannelId pulumi.StringOutput `pulumi:"distributionChannelId"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// (Updatable) Whether publishing to CDN is enabled.
	IsEnabled pulumi.BoolOutput `pulumi:"isEnabled"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecyleDetails pulumi.StringOutput `pulumi:"lifecyleDetails"`
	// The current state of the CDN Configuration.
	State pulumi.StringOutput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// The time when the CDN Config was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time when the CDN Config was updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewStreamCdnConfig registers a new resource with the given unique name, arguments, and options.
func NewStreamCdnConfig(ctx *pulumi.Context,
	name string, args *StreamCdnConfigArgs, opts ...pulumi.ResourceOption) (*StreamCdnConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Config == nil {
		return nil, errors.New("invalid value for required argument 'Config'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.DistributionChannelId == nil {
		return nil, errors.New("invalid value for required argument 'DistributionChannelId'")
	}
	var resource StreamCdnConfig
	err := ctx.RegisterResource("oci:MediaServices/streamCdnConfig:StreamCdnConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStreamCdnConfig gets an existing StreamCdnConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStreamCdnConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StreamCdnConfigState, opts ...pulumi.ResourceOption) (*StreamCdnConfig, error) {
	var resource StreamCdnConfig
	err := ctx.ReadResource("oci:MediaServices/streamCdnConfig:StreamCdnConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StreamCdnConfig resources.
type streamCdnConfigState struct {
	// Compartment Identifier.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Base fields of the StreamCdnConfig configuration object.
	Config *StreamCdnConfigConfig `pulumi:"config"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) CDN Config display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// Distribution Channel Identifier.
	DistributionChannelId *string `pulumi:"distributionChannelId"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Whether publishing to CDN is enabled.
	IsEnabled *bool `pulumi:"isEnabled"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecyleDetails *string `pulumi:"lifecyleDetails"`
	// The current state of the CDN Configuration.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time when the CDN Config was created. An RFC3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time when the CDN Config was updated. An RFC3339 formatted datetime string.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type StreamCdnConfigState struct {
	// Compartment Identifier.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Base fields of the StreamCdnConfig configuration object.
	Config StreamCdnConfigConfigPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) CDN Config display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// Distribution Channel Identifier.
	DistributionChannelId pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) Whether publishing to CDN is enabled.
	IsEnabled pulumi.BoolPtrInput
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecyleDetails pulumi.StringPtrInput
	// The current state of the CDN Configuration.
	State pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// The time when the CDN Config was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput
	// The time when the CDN Config was updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringPtrInput
}

func (StreamCdnConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*streamCdnConfigState)(nil)).Elem()
}

type streamCdnConfigArgs struct {
	// (Updatable) Base fields of the StreamCdnConfig configuration object.
	Config StreamCdnConfigConfig `pulumi:"config"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) CDN Config display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// Distribution Channel Identifier.
	DistributionChannelId string `pulumi:"distributionChannelId"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Whether publishing to CDN is enabled.
	IsEnabled *bool `pulumi:"isEnabled"`
}

// The set of arguments for constructing a StreamCdnConfig resource.
type StreamCdnConfigArgs struct {
	// (Updatable) Base fields of the StreamCdnConfig configuration object.
	Config StreamCdnConfigConfigInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) CDN Config display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
	DisplayName pulumi.StringInput
	// Distribution Channel Identifier.
	DistributionChannelId pulumi.StringInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) Whether publishing to CDN is enabled.
	IsEnabled pulumi.BoolPtrInput
}

func (StreamCdnConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*streamCdnConfigArgs)(nil)).Elem()
}

type StreamCdnConfigInput interface {
	pulumi.Input

	ToStreamCdnConfigOutput() StreamCdnConfigOutput
	ToStreamCdnConfigOutputWithContext(ctx context.Context) StreamCdnConfigOutput
}

func (*StreamCdnConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamCdnConfig)(nil)).Elem()
}

func (i *StreamCdnConfig) ToStreamCdnConfigOutput() StreamCdnConfigOutput {
	return i.ToStreamCdnConfigOutputWithContext(context.Background())
}

func (i *StreamCdnConfig) ToStreamCdnConfigOutputWithContext(ctx context.Context) StreamCdnConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamCdnConfigOutput)
}

// StreamCdnConfigArrayInput is an input type that accepts StreamCdnConfigArray and StreamCdnConfigArrayOutput values.
// You can construct a concrete instance of `StreamCdnConfigArrayInput` via:
//
//	StreamCdnConfigArray{ StreamCdnConfigArgs{...} }
type StreamCdnConfigArrayInput interface {
	pulumi.Input

	ToStreamCdnConfigArrayOutput() StreamCdnConfigArrayOutput
	ToStreamCdnConfigArrayOutputWithContext(context.Context) StreamCdnConfigArrayOutput
}

type StreamCdnConfigArray []StreamCdnConfigInput

func (StreamCdnConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StreamCdnConfig)(nil)).Elem()
}

func (i StreamCdnConfigArray) ToStreamCdnConfigArrayOutput() StreamCdnConfigArrayOutput {
	return i.ToStreamCdnConfigArrayOutputWithContext(context.Background())
}

func (i StreamCdnConfigArray) ToStreamCdnConfigArrayOutputWithContext(ctx context.Context) StreamCdnConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamCdnConfigArrayOutput)
}

// StreamCdnConfigMapInput is an input type that accepts StreamCdnConfigMap and StreamCdnConfigMapOutput values.
// You can construct a concrete instance of `StreamCdnConfigMapInput` via:
//
//	StreamCdnConfigMap{ "key": StreamCdnConfigArgs{...} }
type StreamCdnConfigMapInput interface {
	pulumi.Input

	ToStreamCdnConfigMapOutput() StreamCdnConfigMapOutput
	ToStreamCdnConfigMapOutputWithContext(context.Context) StreamCdnConfigMapOutput
}

type StreamCdnConfigMap map[string]StreamCdnConfigInput

func (StreamCdnConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StreamCdnConfig)(nil)).Elem()
}

func (i StreamCdnConfigMap) ToStreamCdnConfigMapOutput() StreamCdnConfigMapOutput {
	return i.ToStreamCdnConfigMapOutputWithContext(context.Background())
}

func (i StreamCdnConfigMap) ToStreamCdnConfigMapOutputWithContext(ctx context.Context) StreamCdnConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamCdnConfigMapOutput)
}

type StreamCdnConfigOutput struct{ *pulumi.OutputState }

func (StreamCdnConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamCdnConfig)(nil)).Elem()
}

func (o StreamCdnConfigOutput) ToStreamCdnConfigOutput() StreamCdnConfigOutput {
	return o
}

func (o StreamCdnConfigOutput) ToStreamCdnConfigOutputWithContext(ctx context.Context) StreamCdnConfigOutput {
	return o
}

// Compartment Identifier.
func (o StreamCdnConfigOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *StreamCdnConfig) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Base fields of the StreamCdnConfig configuration object.
func (o StreamCdnConfigOutput) Config() StreamCdnConfigConfigOutput {
	return o.ApplyT(func(v *StreamCdnConfig) StreamCdnConfigConfigOutput { return v.Config }).(StreamCdnConfigConfigOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o StreamCdnConfigOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *StreamCdnConfig) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) CDN Config display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
func (o StreamCdnConfigOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *StreamCdnConfig) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Distribution Channel Identifier.
func (o StreamCdnConfigOutput) DistributionChannelId() pulumi.StringOutput {
	return o.ApplyT(func(v *StreamCdnConfig) pulumi.StringOutput { return v.DistributionChannelId }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o StreamCdnConfigOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *StreamCdnConfig) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// (Updatable) Whether publishing to CDN is enabled.
func (o StreamCdnConfigOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *StreamCdnConfig) pulumi.BoolOutput { return v.IsEnabled }).(pulumi.BoolOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o StreamCdnConfigOutput) LifecyleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *StreamCdnConfig) pulumi.StringOutput { return v.LifecyleDetails }).(pulumi.StringOutput)
}

// The current state of the CDN Configuration.
func (o StreamCdnConfigOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *StreamCdnConfig) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o StreamCdnConfigOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v *StreamCdnConfig) pulumi.MapOutput { return v.SystemTags }).(pulumi.MapOutput)
}

// The time when the CDN Config was created. An RFC3339 formatted datetime string.
func (o StreamCdnConfigOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *StreamCdnConfig) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time when the CDN Config was updated. An RFC3339 formatted datetime string.
func (o StreamCdnConfigOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *StreamCdnConfig) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type StreamCdnConfigArrayOutput struct{ *pulumi.OutputState }

func (StreamCdnConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StreamCdnConfig)(nil)).Elem()
}

func (o StreamCdnConfigArrayOutput) ToStreamCdnConfigArrayOutput() StreamCdnConfigArrayOutput {
	return o
}

func (o StreamCdnConfigArrayOutput) ToStreamCdnConfigArrayOutputWithContext(ctx context.Context) StreamCdnConfigArrayOutput {
	return o
}

func (o StreamCdnConfigArrayOutput) Index(i pulumi.IntInput) StreamCdnConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *StreamCdnConfig {
		return vs[0].([]*StreamCdnConfig)[vs[1].(int)]
	}).(StreamCdnConfigOutput)
}

type StreamCdnConfigMapOutput struct{ *pulumi.OutputState }

func (StreamCdnConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StreamCdnConfig)(nil)).Elem()
}

func (o StreamCdnConfigMapOutput) ToStreamCdnConfigMapOutput() StreamCdnConfigMapOutput {
	return o
}

func (o StreamCdnConfigMapOutput) ToStreamCdnConfigMapOutputWithContext(ctx context.Context) StreamCdnConfigMapOutput {
	return o
}

func (o StreamCdnConfigMapOutput) MapIndex(k pulumi.StringInput) StreamCdnConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *StreamCdnConfig {
		return vs[0].(map[string]*StreamCdnConfig)[vs[1].(string)]
	}).(StreamCdnConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StreamCdnConfigInput)(nil)).Elem(), &StreamCdnConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamCdnConfigArrayInput)(nil)).Elem(), StreamCdnConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamCdnConfigMapInput)(nil)).Elem(), StreamCdnConfigMap{})
	pulumi.RegisterOutputType(StreamCdnConfigOutput{})
	pulumi.RegisterOutputType(StreamCdnConfigArrayOutput{})
	pulumi.RegisterOutputType(StreamCdnConfigMapOutput{})
}
