// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mediaservices

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Stream Distribution Channel resource in Oracle Cloud Infrastructure Media Services service.
//
// Creates a new Stream Distribution Channel.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/MediaServices"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := MediaServices.NewStreamDistributionChannel(ctx, "testStreamDistributionChannel", &MediaServices.StreamDistributionChannelArgs{
//				CompartmentId: pulumi.Any(_var.Compartment_id),
//				DisplayName:   pulumi.Any(_var.Stream_distribution_channel_display_name),
//				DefinedTags: pulumi.Map{
//					"foo-namespace.bar-key": pulumi.Any("value"),
//				},
//				FreeformTags: pulumi.Map{
//					"bar-key": pulumi.Any("value"),
//				},
//				Locks: mediaservices.StreamDistributionChannelLockArray{
//					&mediaservices.StreamDistributionChannelLockArgs{
//						CompartmentId:     pulumi.Any(_var.Compartment_id),
//						Type:              pulumi.Any(_var.Stream_distribution_channel_locks_type),
//						Message:           pulumi.Any(_var.Stream_distribution_channel_locks_message),
//						RelatedResourceId: pulumi.Any(oci_usage_proxy_resource.Test_resource.Id),
//						TimeCreated:       pulumi.Any(_var.Stream_distribution_channel_locks_time_created),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// StreamDistributionChannels can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:MediaServices/streamDistributionChannel:StreamDistributionChannel test_stream_distribution_channel "id"
// ```
type StreamDistributionChannel struct {
	pulumi.CustomResourceState

	// (Updatable) The compartment ID of the lock.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) Stream Distribution Channel display name. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Unique domain name of the Distribution Channel.
	DomainName pulumi.StringOutput `pulumi:"domainName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags   pulumi.MapOutput  `pulumi:"freeformTags"`
	IsLockOverride pulumi.BoolOutput `pulumi:"isLockOverride"`
	// Locks associated with this resource.
	Locks StreamDistributionChannelLockArrayOutput `pulumi:"locks"`
	// The current state of the Stream Distribution Channel.
	State pulumi.StringOutput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// When the lock was created.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time when the Stream Distribution Channel was updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewStreamDistributionChannel registers a new resource with the given unique name, arguments, and options.
func NewStreamDistributionChannel(ctx *pulumi.Context,
	name string, args *StreamDistributionChannelArgs, opts ...pulumi.ResourceOption) (*StreamDistributionChannel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource StreamDistributionChannel
	err := ctx.RegisterResource("oci:MediaServices/streamDistributionChannel:StreamDistributionChannel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStreamDistributionChannel gets an existing StreamDistributionChannel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStreamDistributionChannel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StreamDistributionChannelState, opts ...pulumi.ResourceOption) (*StreamDistributionChannel, error) {
	var resource StreamDistributionChannel
	err := ctx.ReadResource("oci:MediaServices/streamDistributionChannel:StreamDistributionChannel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StreamDistributionChannel resources.
type streamDistributionChannelState struct {
	// (Updatable) The compartment ID of the lock.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Stream Distribution Channel display name. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// Unique domain name of the Distribution Channel.
	DomainName *string `pulumi:"domainName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags   map[string]interface{} `pulumi:"freeformTags"`
	IsLockOverride *bool                  `pulumi:"isLockOverride"`
	// Locks associated with this resource.
	Locks []StreamDistributionChannelLock `pulumi:"locks"`
	// The current state of the Stream Distribution Channel.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// When the lock was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time when the Stream Distribution Channel was updated. An RFC3339 formatted datetime string.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type StreamDistributionChannelState struct {
	// (Updatable) The compartment ID of the lock.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Stream Distribution Channel display name. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// Unique domain name of the Distribution Channel.
	DomainName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags   pulumi.MapInput
	IsLockOverride pulumi.BoolPtrInput
	// Locks associated with this resource.
	Locks StreamDistributionChannelLockArrayInput
	// The current state of the Stream Distribution Channel.
	State pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// When the lock was created.
	TimeCreated pulumi.StringPtrInput
	// The time when the Stream Distribution Channel was updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringPtrInput
}

func (StreamDistributionChannelState) ElementType() reflect.Type {
	return reflect.TypeOf((*streamDistributionChannelState)(nil)).Elem()
}

type streamDistributionChannelArgs struct {
	// (Updatable) The compartment ID of the lock.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Stream Distribution Channel display name. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags   map[string]interface{} `pulumi:"freeformTags"`
	IsLockOverride *bool                  `pulumi:"isLockOverride"`
	// Locks associated with this resource.
	Locks []StreamDistributionChannelLock `pulumi:"locks"`
}

// The set of arguments for constructing a StreamDistributionChannel resource.
type StreamDistributionChannelArgs struct {
	// (Updatable) The compartment ID of the lock.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Stream Distribution Channel display name. Avoid entering confidential information.
	DisplayName pulumi.StringInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags   pulumi.MapInput
	IsLockOverride pulumi.BoolPtrInput
	// Locks associated with this resource.
	Locks StreamDistributionChannelLockArrayInput
}

func (StreamDistributionChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*streamDistributionChannelArgs)(nil)).Elem()
}

type StreamDistributionChannelInput interface {
	pulumi.Input

	ToStreamDistributionChannelOutput() StreamDistributionChannelOutput
	ToStreamDistributionChannelOutputWithContext(ctx context.Context) StreamDistributionChannelOutput
}

func (*StreamDistributionChannel) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamDistributionChannel)(nil)).Elem()
}

func (i *StreamDistributionChannel) ToStreamDistributionChannelOutput() StreamDistributionChannelOutput {
	return i.ToStreamDistributionChannelOutputWithContext(context.Background())
}

func (i *StreamDistributionChannel) ToStreamDistributionChannelOutputWithContext(ctx context.Context) StreamDistributionChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamDistributionChannelOutput)
}

// StreamDistributionChannelArrayInput is an input type that accepts StreamDistributionChannelArray and StreamDistributionChannelArrayOutput values.
// You can construct a concrete instance of `StreamDistributionChannelArrayInput` via:
//
//	StreamDistributionChannelArray{ StreamDistributionChannelArgs{...} }
type StreamDistributionChannelArrayInput interface {
	pulumi.Input

	ToStreamDistributionChannelArrayOutput() StreamDistributionChannelArrayOutput
	ToStreamDistributionChannelArrayOutputWithContext(context.Context) StreamDistributionChannelArrayOutput
}

type StreamDistributionChannelArray []StreamDistributionChannelInput

func (StreamDistributionChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StreamDistributionChannel)(nil)).Elem()
}

func (i StreamDistributionChannelArray) ToStreamDistributionChannelArrayOutput() StreamDistributionChannelArrayOutput {
	return i.ToStreamDistributionChannelArrayOutputWithContext(context.Background())
}

func (i StreamDistributionChannelArray) ToStreamDistributionChannelArrayOutputWithContext(ctx context.Context) StreamDistributionChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamDistributionChannelArrayOutput)
}

// StreamDistributionChannelMapInput is an input type that accepts StreamDistributionChannelMap and StreamDistributionChannelMapOutput values.
// You can construct a concrete instance of `StreamDistributionChannelMapInput` via:
//
//	StreamDistributionChannelMap{ "key": StreamDistributionChannelArgs{...} }
type StreamDistributionChannelMapInput interface {
	pulumi.Input

	ToStreamDistributionChannelMapOutput() StreamDistributionChannelMapOutput
	ToStreamDistributionChannelMapOutputWithContext(context.Context) StreamDistributionChannelMapOutput
}

type StreamDistributionChannelMap map[string]StreamDistributionChannelInput

func (StreamDistributionChannelMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StreamDistributionChannel)(nil)).Elem()
}

func (i StreamDistributionChannelMap) ToStreamDistributionChannelMapOutput() StreamDistributionChannelMapOutput {
	return i.ToStreamDistributionChannelMapOutputWithContext(context.Background())
}

func (i StreamDistributionChannelMap) ToStreamDistributionChannelMapOutputWithContext(ctx context.Context) StreamDistributionChannelMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamDistributionChannelMapOutput)
}

type StreamDistributionChannelOutput struct{ *pulumi.OutputState }

func (StreamDistributionChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamDistributionChannel)(nil)).Elem()
}

func (o StreamDistributionChannelOutput) ToStreamDistributionChannelOutput() StreamDistributionChannelOutput {
	return o
}

func (o StreamDistributionChannelOutput) ToStreamDistributionChannelOutputWithContext(ctx context.Context) StreamDistributionChannelOutput {
	return o
}

// (Updatable) The compartment ID of the lock.
func (o StreamDistributionChannelOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *StreamDistributionChannel) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o StreamDistributionChannelOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *StreamDistributionChannel) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) Stream Distribution Channel display name. Avoid entering confidential information.
func (o StreamDistributionChannelOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *StreamDistributionChannel) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Unique domain name of the Distribution Channel.
func (o StreamDistributionChannelOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *StreamDistributionChannel) pulumi.StringOutput { return v.DomainName }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o StreamDistributionChannelOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *StreamDistributionChannel) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

func (o StreamDistributionChannelOutput) IsLockOverride() pulumi.BoolOutput {
	return o.ApplyT(func(v *StreamDistributionChannel) pulumi.BoolOutput { return v.IsLockOverride }).(pulumi.BoolOutput)
}

// Locks associated with this resource.
func (o StreamDistributionChannelOutput) Locks() StreamDistributionChannelLockArrayOutput {
	return o.ApplyT(func(v *StreamDistributionChannel) StreamDistributionChannelLockArrayOutput { return v.Locks }).(StreamDistributionChannelLockArrayOutput)
}

// The current state of the Stream Distribution Channel.
func (o StreamDistributionChannelOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *StreamDistributionChannel) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o StreamDistributionChannelOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v *StreamDistributionChannel) pulumi.MapOutput { return v.SystemTags }).(pulumi.MapOutput)
}

// When the lock was created.
func (o StreamDistributionChannelOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *StreamDistributionChannel) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time when the Stream Distribution Channel was updated. An RFC3339 formatted datetime string.
func (o StreamDistributionChannelOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *StreamDistributionChannel) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type StreamDistributionChannelArrayOutput struct{ *pulumi.OutputState }

func (StreamDistributionChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StreamDistributionChannel)(nil)).Elem()
}

func (o StreamDistributionChannelArrayOutput) ToStreamDistributionChannelArrayOutput() StreamDistributionChannelArrayOutput {
	return o
}

func (o StreamDistributionChannelArrayOutput) ToStreamDistributionChannelArrayOutputWithContext(ctx context.Context) StreamDistributionChannelArrayOutput {
	return o
}

func (o StreamDistributionChannelArrayOutput) Index(i pulumi.IntInput) StreamDistributionChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *StreamDistributionChannel {
		return vs[0].([]*StreamDistributionChannel)[vs[1].(int)]
	}).(StreamDistributionChannelOutput)
}

type StreamDistributionChannelMapOutput struct{ *pulumi.OutputState }

func (StreamDistributionChannelMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StreamDistributionChannel)(nil)).Elem()
}

func (o StreamDistributionChannelMapOutput) ToStreamDistributionChannelMapOutput() StreamDistributionChannelMapOutput {
	return o
}

func (o StreamDistributionChannelMapOutput) ToStreamDistributionChannelMapOutputWithContext(ctx context.Context) StreamDistributionChannelMapOutput {
	return o
}

func (o StreamDistributionChannelMapOutput) MapIndex(k pulumi.StringInput) StreamDistributionChannelOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *StreamDistributionChannel {
		return vs[0].(map[string]*StreamDistributionChannel)[vs[1].(string)]
	}).(StreamDistributionChannelOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StreamDistributionChannelInput)(nil)).Elem(), &StreamDistributionChannel{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamDistributionChannelArrayInput)(nil)).Elem(), StreamDistributionChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamDistributionChannelMapInput)(nil)).Elem(), StreamDistributionChannelMap{})
	pulumi.RegisterOutputType(StreamDistributionChannelOutput{})
	pulumi.RegisterOutputType(StreamDistributionChannelArrayOutput{})
	pulumi.RegisterOutputType(StreamDistributionChannelMapOutput{})
}
