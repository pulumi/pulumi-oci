// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package meteringcomputation

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Queries in Oracle Cloud Infrastructure Metering Computation service.
//
// Returns the saved query list.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/meteringcomputation"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := meteringcomputation.GetQueries(ctx, &meteringcomputation.GetQueriesArgs{
//				CompartmentId: compartmentId,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetQueries(ctx *pulumi.Context, args *GetQueriesArgs, opts ...pulumi.InvokeOption) (*GetQueriesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetQueriesResult
	err := ctx.Invoke("oci:MeteringComputation/getQueries:getQueries", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getQueries.
type GetQueriesArgs struct {
	// The compartment ID in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// The filter object for query usage.
	Filters []GetQueriesFilter `pulumi:"filters"`
}

// A collection of values returned by getQueries.
type GetQueriesResult struct {
	// The compartment OCID.
	CompartmentId string `pulumi:"compartmentId"`
	// The filter object for query usage.
	Filters []GetQueriesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of query_collection.
	QueryCollections []GetQueriesQueryCollection `pulumi:"queryCollections"`
}

func GetQueriesOutput(ctx *pulumi.Context, args GetQueriesOutputArgs, opts ...pulumi.InvokeOption) GetQueriesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetQueriesResultOutput, error) {
			args := v.(GetQueriesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:MeteringComputation/getQueries:getQueries", args, GetQueriesResultOutput{}, options).(GetQueriesResultOutput), nil
		}).(GetQueriesResultOutput)
}

// A collection of arguments for invoking getQueries.
type GetQueriesOutputArgs struct {
	// The compartment ID in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The filter object for query usage.
	Filters GetQueriesFilterArrayInput `pulumi:"filters"`
}

func (GetQueriesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueriesArgs)(nil)).Elem()
}

// A collection of values returned by getQueries.
type GetQueriesResultOutput struct{ *pulumi.OutputState }

func (GetQueriesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueriesResult)(nil)).Elem()
}

func (o GetQueriesResultOutput) ToGetQueriesResultOutput() GetQueriesResultOutput {
	return o
}

func (o GetQueriesResultOutput) ToGetQueriesResultOutputWithContext(ctx context.Context) GetQueriesResultOutput {
	return o
}

// The compartment OCID.
func (o GetQueriesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueriesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The filter object for query usage.
func (o GetQueriesResultOutput) Filters() GetQueriesFilterArrayOutput {
	return o.ApplyT(func(v GetQueriesResult) []GetQueriesFilter { return v.Filters }).(GetQueriesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetQueriesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueriesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of query_collection.
func (o GetQueriesResultOutput) QueryCollections() GetQueriesQueryCollectionArrayOutput {
	return o.ApplyT(func(v GetQueriesResult) []GetQueriesQueryCollection { return v.QueryCollections }).(GetQueriesQueryCollectionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetQueriesResultOutput{})
}
