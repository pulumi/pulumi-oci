// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package meteringcomputation

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Schedule resource in Oracle Cloud Infrastructure Metering Computation service.
//
// Returns the saved schedule.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/MeteringComputation"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := MeteringComputation.GetSchedule(ctx, &meteringcomputation.GetScheduleArgs{
// 			ScheduleId: oci_metering_computation_schedule.Test_schedule.Id,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupSchedule(ctx *pulumi.Context, args *LookupScheduleArgs, opts ...pulumi.InvokeOption) (*LookupScheduleResult, error) {
	var rv LookupScheduleResult
	err := ctx.Invoke("oci:MeteringComputation/getSchedule:getSchedule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSchedule.
type LookupScheduleArgs struct {
	// The schedule unique OCID.
	ScheduleId string `pulumi:"scheduleId"`
}

// A collection of values returned by getSchedule.
type LookupScheduleResult struct {
	// The tenancy of the customer
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID representing unique shedule
	Id string `pulumi:"id"`
	// The unique name of the schedule created by the user
	Name string `pulumi:"name"`
	// The query properties.
	QueryProperties []GetScheduleQueryProperty `pulumi:"queryProperties"`
	// The location where usage/cost CSVs will be uploaded defined by `locationType`, which corresponds with type-specific characteristics.
	ResultLocations []GetScheduleResultLocation `pulumi:"resultLocations"`
	ScheduleId      string                      `pulumi:"scheduleId"`
	// In x-obmcs-recurring-time format shown here: https://datatracker.ietf.org/doc/html/rfc5545#section-3.3.10 Describes the frequency of when the schedule will be run
	ScheduleRecurrences string `pulumi:"scheduleRecurrences"`
	// The lifecycle state of the schedule
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The date and time of when the schedule was created
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time of the first time job execution
	TimeScheduled string `pulumi:"timeScheduled"`
}

func LookupScheduleOutput(ctx *pulumi.Context, args LookupScheduleOutputArgs, opts ...pulumi.InvokeOption) LookupScheduleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupScheduleResult, error) {
			args := v.(LookupScheduleArgs)
			r, err := LookupSchedule(ctx, &args, opts...)
			var s LookupScheduleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupScheduleResultOutput)
}

// A collection of arguments for invoking getSchedule.
type LookupScheduleOutputArgs struct {
	// The schedule unique OCID.
	ScheduleId pulumi.StringInput `pulumi:"scheduleId"`
}

func (LookupScheduleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupScheduleArgs)(nil)).Elem()
}

// A collection of values returned by getSchedule.
type LookupScheduleResultOutput struct{ *pulumi.OutputState }

func (LookupScheduleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupScheduleResult)(nil)).Elem()
}

func (o LookupScheduleResultOutput) ToLookupScheduleResultOutput() LookupScheduleResultOutput {
	return o
}

func (o LookupScheduleResultOutput) ToLookupScheduleResultOutputWithContext(ctx context.Context) LookupScheduleResultOutput {
	return o
}

// The tenancy of the customer
func (o LookupScheduleResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupScheduleResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupScheduleResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
func (o LookupScheduleResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupScheduleResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The OCID representing unique shedule
func (o LookupScheduleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.Id }).(pulumi.StringOutput)
}

// The unique name of the schedule created by the user
func (o LookupScheduleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.Name }).(pulumi.StringOutput)
}

// The query properties.
func (o LookupScheduleResultOutput) QueryProperties() GetScheduleQueryPropertyArrayOutput {
	return o.ApplyT(func(v LookupScheduleResult) []GetScheduleQueryProperty { return v.QueryProperties }).(GetScheduleQueryPropertyArrayOutput)
}

// The location where usage/cost CSVs will be uploaded defined by `locationType`, which corresponds with type-specific characteristics.
func (o LookupScheduleResultOutput) ResultLocations() GetScheduleResultLocationArrayOutput {
	return o.ApplyT(func(v LookupScheduleResult) []GetScheduleResultLocation { return v.ResultLocations }).(GetScheduleResultLocationArrayOutput)
}

func (o LookupScheduleResultOutput) ScheduleId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.ScheduleId }).(pulumi.StringOutput)
}

// In x-obmcs-recurring-time format shown here: https://datatracker.ietf.org/doc/html/rfc5545#section-3.3.10 Describes the frequency of when the schedule will be run
func (o LookupScheduleResultOutput) ScheduleRecurrences() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.ScheduleRecurrences }).(pulumi.StringOutput)
}

// The lifecycle state of the schedule
func (o LookupScheduleResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupScheduleResultOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupScheduleResult) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The date and time of when the schedule was created
func (o LookupScheduleResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time of the first time job execution
func (o LookupScheduleResultOutput) TimeScheduled() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.TimeScheduled }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupScheduleResultOutput{})
}
