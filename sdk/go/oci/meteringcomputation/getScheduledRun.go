// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package meteringcomputation

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Scheduled Run resource in Oracle Cloud Infrastructure Metering Computation service.
//
// Returns the saved schedule run.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/MeteringComputation"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := MeteringComputation.GetScheduledRun(ctx, &meteringcomputation.GetScheduledRunArgs{
//				ScheduledRunId: oci_metering_computation_scheduled_run.Test_scheduled_run.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetScheduledRun(ctx *pulumi.Context, args *GetScheduledRunArgs, opts ...pulumi.InvokeOption) (*GetScheduledRunResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetScheduledRunResult
	err := ctx.Invoke("oci:MeteringComputation/getScheduledRun:getScheduledRun", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getScheduledRun.
type GetScheduledRunArgs struct {
	// The scheduledRun unique OCID.
	ScheduledRunId string `pulumi:"scheduledRunId"`
}

// A collection of values returned by getScheduledRun.
type GetScheduledRunResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Additional details about scheduled run failure
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The ocid representing unique shedule
	ScheduleId     string `pulumi:"scheduleId"`
	ScheduledRunId string `pulumi:"scheduledRunId"`
	// Specifies if the schedule job was run successfully or not.
	State string `pulumi:"state"`
	// The time when schedule started executing
	TimeCreated string `pulumi:"timeCreated"`
	// The time when schedule finished executing
	TimeFinished string `pulumi:"timeFinished"`
}

func GetScheduledRunOutput(ctx *pulumi.Context, args GetScheduledRunOutputArgs, opts ...pulumi.InvokeOption) GetScheduledRunResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetScheduledRunResult, error) {
			args := v.(GetScheduledRunArgs)
			r, err := GetScheduledRun(ctx, &args, opts...)
			var s GetScheduledRunResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetScheduledRunResultOutput)
}

// A collection of arguments for invoking getScheduledRun.
type GetScheduledRunOutputArgs struct {
	// The scheduledRun unique OCID.
	ScheduledRunId pulumi.StringInput `pulumi:"scheduledRunId"`
}

func (GetScheduledRunOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScheduledRunArgs)(nil)).Elem()
}

// A collection of values returned by getScheduledRun.
type GetScheduledRunResultOutput struct{ *pulumi.OutputState }

func (GetScheduledRunResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScheduledRunResult)(nil)).Elem()
}

func (o GetScheduledRunResultOutput) ToGetScheduledRunResultOutput() GetScheduledRunResultOutput {
	return o
}

func (o GetScheduledRunResultOutput) ToGetScheduledRunResultOutputWithContext(ctx context.Context) GetScheduledRunResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetScheduledRunResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetScheduledRunResult) string { return v.Id }).(pulumi.StringOutput)
}

// Additional details about scheduled run failure
func (o GetScheduledRunResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetScheduledRunResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The ocid representing unique shedule
func (o GetScheduledRunResultOutput) ScheduleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetScheduledRunResult) string { return v.ScheduleId }).(pulumi.StringOutput)
}

func (o GetScheduledRunResultOutput) ScheduledRunId() pulumi.StringOutput {
	return o.ApplyT(func(v GetScheduledRunResult) string { return v.ScheduledRunId }).(pulumi.StringOutput)
}

// Specifies if the schedule job was run successfully or not.
func (o GetScheduledRunResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetScheduledRunResult) string { return v.State }).(pulumi.StringOutput)
}

// The time when schedule started executing
func (o GetScheduledRunResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetScheduledRunResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time when schedule finished executing
func (o GetScheduledRunResultOutput) TimeFinished() pulumi.StringOutput {
	return o.ApplyT(func(v GetScheduledRunResult) string { return v.TimeFinished }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetScheduledRunResultOutput{})
}
