// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package meteringcomputation

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Usage Statement Email Recipients Group resource in Oracle Cloud Infrastructure Metering Computation service.
//
// Returns the saved usage statement email recipients group.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/meteringcomputation"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := meteringcomputation.GetUsageStatementEmailRecipientsGroup(ctx, &meteringcomputation.GetUsageStatementEmailRecipientsGroupArgs{
//				CompartmentId:          compartmentId,
//				EmailRecipientsGroupId: testGroup.Id,
//				SubscriptionId:         testSubscription.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupUsageStatementEmailRecipientsGroup(ctx *pulumi.Context, args *LookupUsageStatementEmailRecipientsGroupArgs, opts ...pulumi.InvokeOption) (*LookupUsageStatementEmailRecipientsGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupUsageStatementEmailRecipientsGroupResult
	err := ctx.Invoke("oci:MeteringComputation/getUsageStatementEmailRecipientsGroup:getUsageStatementEmailRecipientsGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUsageStatementEmailRecipientsGroup.
type LookupUsageStatementEmailRecipientsGroupArgs struct {
	// The compartment ID in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// The email recipients group OCID.
	EmailRecipientsGroupId string `pulumi:"emailRecipientsGroupId"`
	// The usage statement subscription unique OCID.
	SubscriptionId string `pulumi:"subscriptionId"`
}

// A collection of values returned by getUsageStatementEmailRecipientsGroup.
type LookupUsageStatementEmailRecipientsGroupResult struct {
	// The customer tenancy OCID.
	CompartmentId          string `pulumi:"compartmentId"`
	EmailRecipientsGroupId string `pulumi:"emailRecipientsGroupId"`
	// The usage statement email recipients group OCID.
	Id string `pulumi:"id"`
	// The list of recipients that will receive usage statement emails.
	RecipientsLists []GetUsageStatementEmailRecipientsGroupRecipientsList `pulumi:"recipientsLists"`
	// The email recipients group lifecycle state.
	State          string `pulumi:"state"`
	SubscriptionId string `pulumi:"subscriptionId"`
}

func LookupUsageStatementEmailRecipientsGroupOutput(ctx *pulumi.Context, args LookupUsageStatementEmailRecipientsGroupOutputArgs, opts ...pulumi.InvokeOption) LookupUsageStatementEmailRecipientsGroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupUsageStatementEmailRecipientsGroupResultOutput, error) {
			args := v.(LookupUsageStatementEmailRecipientsGroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:MeteringComputation/getUsageStatementEmailRecipientsGroup:getUsageStatementEmailRecipientsGroup", args, LookupUsageStatementEmailRecipientsGroupResultOutput{}, options).(LookupUsageStatementEmailRecipientsGroupResultOutput), nil
		}).(LookupUsageStatementEmailRecipientsGroupResultOutput)
}

// A collection of arguments for invoking getUsageStatementEmailRecipientsGroup.
type LookupUsageStatementEmailRecipientsGroupOutputArgs struct {
	// The compartment ID in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The email recipients group OCID.
	EmailRecipientsGroupId pulumi.StringInput `pulumi:"emailRecipientsGroupId"`
	// The usage statement subscription unique OCID.
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
}

func (LookupUsageStatementEmailRecipientsGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUsageStatementEmailRecipientsGroupArgs)(nil)).Elem()
}

// A collection of values returned by getUsageStatementEmailRecipientsGroup.
type LookupUsageStatementEmailRecipientsGroupResultOutput struct{ *pulumi.OutputState }

func (LookupUsageStatementEmailRecipientsGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUsageStatementEmailRecipientsGroupResult)(nil)).Elem()
}

func (o LookupUsageStatementEmailRecipientsGroupResultOutput) ToLookupUsageStatementEmailRecipientsGroupResultOutput() LookupUsageStatementEmailRecipientsGroupResultOutput {
	return o
}

func (o LookupUsageStatementEmailRecipientsGroupResultOutput) ToLookupUsageStatementEmailRecipientsGroupResultOutputWithContext(ctx context.Context) LookupUsageStatementEmailRecipientsGroupResultOutput {
	return o
}

// The customer tenancy OCID.
func (o LookupUsageStatementEmailRecipientsGroupResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUsageStatementEmailRecipientsGroupResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o LookupUsageStatementEmailRecipientsGroupResultOutput) EmailRecipientsGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUsageStatementEmailRecipientsGroupResult) string { return v.EmailRecipientsGroupId }).(pulumi.StringOutput)
}

// The usage statement email recipients group OCID.
func (o LookupUsageStatementEmailRecipientsGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUsageStatementEmailRecipientsGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of recipients that will receive usage statement emails.
func (o LookupUsageStatementEmailRecipientsGroupResultOutput) RecipientsLists() GetUsageStatementEmailRecipientsGroupRecipientsListArrayOutput {
	return o.ApplyT(func(v LookupUsageStatementEmailRecipientsGroupResult) []GetUsageStatementEmailRecipientsGroupRecipientsList {
		return v.RecipientsLists
	}).(GetUsageStatementEmailRecipientsGroupRecipientsListArrayOutput)
}

// The email recipients group lifecycle state.
func (o LookupUsageStatementEmailRecipientsGroupResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUsageStatementEmailRecipientsGroupResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupUsageStatementEmailRecipientsGroupResultOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUsageStatementEmailRecipientsGroupResult) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupUsageStatementEmailRecipientsGroupResultOutput{})
}
