// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package meteringcomputation

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CustomTableSavedCustomTable struct {
	// (Updatable) The column groupBy key list. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
	ColumnGroupBies []string `pulumi:"columnGroupBies"`
	// (Updatable) The compartment depth level.
	CompartmentDepth *float64 `pulumi:"compartmentDepth"`
	// (Updatable) The name of the custom table.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only one tag in the list is supported. For example: `[{"namespace":"oracle", "key":"createdBy"]`
	GroupByTags []CustomTableSavedCustomTableGroupByTag `pulumi:"groupByTags"`
	// (Updatable) The row groupBy key list. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
	RowGroupBies []string `pulumi:"rowGroupBies"`
	// (Updatable) The version of the custom table.
	Version *float64 `pulumi:"version"`
}

// CustomTableSavedCustomTableInput is an input type that accepts CustomTableSavedCustomTableArgs and CustomTableSavedCustomTableOutput values.
// You can construct a concrete instance of `CustomTableSavedCustomTableInput` via:
//
//          CustomTableSavedCustomTableArgs{...}
type CustomTableSavedCustomTableInput interface {
	pulumi.Input

	ToCustomTableSavedCustomTableOutput() CustomTableSavedCustomTableOutput
	ToCustomTableSavedCustomTableOutputWithContext(context.Context) CustomTableSavedCustomTableOutput
}

type CustomTableSavedCustomTableArgs struct {
	// (Updatable) The column groupBy key list. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
	ColumnGroupBies pulumi.StringArrayInput `pulumi:"columnGroupBies"`
	// (Updatable) The compartment depth level.
	CompartmentDepth pulumi.Float64PtrInput `pulumi:"compartmentDepth"`
	// (Updatable) The name of the custom table.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// (Updatable) GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only one tag in the list is supported. For example: `[{"namespace":"oracle", "key":"createdBy"]`
	GroupByTags CustomTableSavedCustomTableGroupByTagArrayInput `pulumi:"groupByTags"`
	// (Updatable) The row groupBy key list. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
	RowGroupBies pulumi.StringArrayInput `pulumi:"rowGroupBies"`
	// (Updatable) The version of the custom table.
	Version pulumi.Float64PtrInput `pulumi:"version"`
}

func (CustomTableSavedCustomTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomTableSavedCustomTable)(nil)).Elem()
}

func (i CustomTableSavedCustomTableArgs) ToCustomTableSavedCustomTableOutput() CustomTableSavedCustomTableOutput {
	return i.ToCustomTableSavedCustomTableOutputWithContext(context.Background())
}

func (i CustomTableSavedCustomTableArgs) ToCustomTableSavedCustomTableOutputWithContext(ctx context.Context) CustomTableSavedCustomTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomTableSavedCustomTableOutput)
}

func (i CustomTableSavedCustomTableArgs) ToCustomTableSavedCustomTablePtrOutput() CustomTableSavedCustomTablePtrOutput {
	return i.ToCustomTableSavedCustomTablePtrOutputWithContext(context.Background())
}

func (i CustomTableSavedCustomTableArgs) ToCustomTableSavedCustomTablePtrOutputWithContext(ctx context.Context) CustomTableSavedCustomTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomTableSavedCustomTableOutput).ToCustomTableSavedCustomTablePtrOutputWithContext(ctx)
}

// CustomTableSavedCustomTablePtrInput is an input type that accepts CustomTableSavedCustomTableArgs, CustomTableSavedCustomTablePtr and CustomTableSavedCustomTablePtrOutput values.
// You can construct a concrete instance of `CustomTableSavedCustomTablePtrInput` via:
//
//          CustomTableSavedCustomTableArgs{...}
//
//  or:
//
//          nil
type CustomTableSavedCustomTablePtrInput interface {
	pulumi.Input

	ToCustomTableSavedCustomTablePtrOutput() CustomTableSavedCustomTablePtrOutput
	ToCustomTableSavedCustomTablePtrOutputWithContext(context.Context) CustomTableSavedCustomTablePtrOutput
}

type customTableSavedCustomTablePtrType CustomTableSavedCustomTableArgs

func CustomTableSavedCustomTablePtr(v *CustomTableSavedCustomTableArgs) CustomTableSavedCustomTablePtrInput {
	return (*customTableSavedCustomTablePtrType)(v)
}

func (*customTableSavedCustomTablePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomTableSavedCustomTable)(nil)).Elem()
}

func (i *customTableSavedCustomTablePtrType) ToCustomTableSavedCustomTablePtrOutput() CustomTableSavedCustomTablePtrOutput {
	return i.ToCustomTableSavedCustomTablePtrOutputWithContext(context.Background())
}

func (i *customTableSavedCustomTablePtrType) ToCustomTableSavedCustomTablePtrOutputWithContext(ctx context.Context) CustomTableSavedCustomTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomTableSavedCustomTablePtrOutput)
}

type CustomTableSavedCustomTableOutput struct{ *pulumi.OutputState }

func (CustomTableSavedCustomTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomTableSavedCustomTable)(nil)).Elem()
}

func (o CustomTableSavedCustomTableOutput) ToCustomTableSavedCustomTableOutput() CustomTableSavedCustomTableOutput {
	return o
}

func (o CustomTableSavedCustomTableOutput) ToCustomTableSavedCustomTableOutputWithContext(ctx context.Context) CustomTableSavedCustomTableOutput {
	return o
}

func (o CustomTableSavedCustomTableOutput) ToCustomTableSavedCustomTablePtrOutput() CustomTableSavedCustomTablePtrOutput {
	return o.ToCustomTableSavedCustomTablePtrOutputWithContext(context.Background())
}

func (o CustomTableSavedCustomTableOutput) ToCustomTableSavedCustomTablePtrOutputWithContext(ctx context.Context) CustomTableSavedCustomTablePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomTableSavedCustomTable) *CustomTableSavedCustomTable {
		return &v
	}).(CustomTableSavedCustomTablePtrOutput)
}

// (Updatable) The column groupBy key list. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
func (o CustomTableSavedCustomTableOutput) ColumnGroupBies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomTableSavedCustomTable) []string { return v.ColumnGroupBies }).(pulumi.StringArrayOutput)
}

// (Updatable) The compartment depth level.
func (o CustomTableSavedCustomTableOutput) CompartmentDepth() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v CustomTableSavedCustomTable) *float64 { return v.CompartmentDepth }).(pulumi.Float64PtrOutput)
}

// (Updatable) The name of the custom table.
func (o CustomTableSavedCustomTableOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v CustomTableSavedCustomTable) string { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only one tag in the list is supported. For example: `[{"namespace":"oracle", "key":"createdBy"]`
func (o CustomTableSavedCustomTableOutput) GroupByTags() CustomTableSavedCustomTableGroupByTagArrayOutput {
	return o.ApplyT(func(v CustomTableSavedCustomTable) []CustomTableSavedCustomTableGroupByTag { return v.GroupByTags }).(CustomTableSavedCustomTableGroupByTagArrayOutput)
}

// (Updatable) The row groupBy key list. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
func (o CustomTableSavedCustomTableOutput) RowGroupBies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomTableSavedCustomTable) []string { return v.RowGroupBies }).(pulumi.StringArrayOutput)
}

// (Updatable) The version of the custom table.
func (o CustomTableSavedCustomTableOutput) Version() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v CustomTableSavedCustomTable) *float64 { return v.Version }).(pulumi.Float64PtrOutput)
}

type CustomTableSavedCustomTablePtrOutput struct{ *pulumi.OutputState }

func (CustomTableSavedCustomTablePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomTableSavedCustomTable)(nil)).Elem()
}

func (o CustomTableSavedCustomTablePtrOutput) ToCustomTableSavedCustomTablePtrOutput() CustomTableSavedCustomTablePtrOutput {
	return o
}

func (o CustomTableSavedCustomTablePtrOutput) ToCustomTableSavedCustomTablePtrOutputWithContext(ctx context.Context) CustomTableSavedCustomTablePtrOutput {
	return o
}

func (o CustomTableSavedCustomTablePtrOutput) Elem() CustomTableSavedCustomTableOutput {
	return o.ApplyT(func(v *CustomTableSavedCustomTable) CustomTableSavedCustomTable {
		if v != nil {
			return *v
		}
		var ret CustomTableSavedCustomTable
		return ret
	}).(CustomTableSavedCustomTableOutput)
}

// (Updatable) The column groupBy key list. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
func (o CustomTableSavedCustomTablePtrOutput) ColumnGroupBies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CustomTableSavedCustomTable) []string {
		if v == nil {
			return nil
		}
		return v.ColumnGroupBies
	}).(pulumi.StringArrayOutput)
}

// (Updatable) The compartment depth level.
func (o CustomTableSavedCustomTablePtrOutput) CompartmentDepth() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *CustomTableSavedCustomTable) *float64 {
		if v == nil {
			return nil
		}
		return v.CompartmentDepth
	}).(pulumi.Float64PtrOutput)
}

// (Updatable) The name of the custom table.
func (o CustomTableSavedCustomTablePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomTableSavedCustomTable) *string {
		if v == nil {
			return nil
		}
		return &v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// (Updatable) GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only one tag in the list is supported. For example: `[{"namespace":"oracle", "key":"createdBy"]`
func (o CustomTableSavedCustomTablePtrOutput) GroupByTags() CustomTableSavedCustomTableGroupByTagArrayOutput {
	return o.ApplyT(func(v *CustomTableSavedCustomTable) []CustomTableSavedCustomTableGroupByTag {
		if v == nil {
			return nil
		}
		return v.GroupByTags
	}).(CustomTableSavedCustomTableGroupByTagArrayOutput)
}

// (Updatable) The row groupBy key list. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
func (o CustomTableSavedCustomTablePtrOutput) RowGroupBies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CustomTableSavedCustomTable) []string {
		if v == nil {
			return nil
		}
		return v.RowGroupBies
	}).(pulumi.StringArrayOutput)
}

// (Updatable) The version of the custom table.
func (o CustomTableSavedCustomTablePtrOutput) Version() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *CustomTableSavedCustomTable) *float64 {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.Float64PtrOutput)
}

type CustomTableSavedCustomTableGroupByTag struct {
	// (Updatable) The tag key.
	Key *string `pulumi:"key"`
	// (Updatable) The tag namespace.
	Namespace *string `pulumi:"namespace"`
	// (Updatable) The tag value.
	Value *string `pulumi:"value"`
}

// CustomTableSavedCustomTableGroupByTagInput is an input type that accepts CustomTableSavedCustomTableGroupByTagArgs and CustomTableSavedCustomTableGroupByTagOutput values.
// You can construct a concrete instance of `CustomTableSavedCustomTableGroupByTagInput` via:
//
//          CustomTableSavedCustomTableGroupByTagArgs{...}
type CustomTableSavedCustomTableGroupByTagInput interface {
	pulumi.Input

	ToCustomTableSavedCustomTableGroupByTagOutput() CustomTableSavedCustomTableGroupByTagOutput
	ToCustomTableSavedCustomTableGroupByTagOutputWithContext(context.Context) CustomTableSavedCustomTableGroupByTagOutput
}

type CustomTableSavedCustomTableGroupByTagArgs struct {
	// (Updatable) The tag key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// (Updatable) The tag namespace.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// (Updatable) The tag value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (CustomTableSavedCustomTableGroupByTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomTableSavedCustomTableGroupByTag)(nil)).Elem()
}

func (i CustomTableSavedCustomTableGroupByTagArgs) ToCustomTableSavedCustomTableGroupByTagOutput() CustomTableSavedCustomTableGroupByTagOutput {
	return i.ToCustomTableSavedCustomTableGroupByTagOutputWithContext(context.Background())
}

func (i CustomTableSavedCustomTableGroupByTagArgs) ToCustomTableSavedCustomTableGroupByTagOutputWithContext(ctx context.Context) CustomTableSavedCustomTableGroupByTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomTableSavedCustomTableGroupByTagOutput)
}

// CustomTableSavedCustomTableGroupByTagArrayInput is an input type that accepts CustomTableSavedCustomTableGroupByTagArray and CustomTableSavedCustomTableGroupByTagArrayOutput values.
// You can construct a concrete instance of `CustomTableSavedCustomTableGroupByTagArrayInput` via:
//
//          CustomTableSavedCustomTableGroupByTagArray{ CustomTableSavedCustomTableGroupByTagArgs{...} }
type CustomTableSavedCustomTableGroupByTagArrayInput interface {
	pulumi.Input

	ToCustomTableSavedCustomTableGroupByTagArrayOutput() CustomTableSavedCustomTableGroupByTagArrayOutput
	ToCustomTableSavedCustomTableGroupByTagArrayOutputWithContext(context.Context) CustomTableSavedCustomTableGroupByTagArrayOutput
}

type CustomTableSavedCustomTableGroupByTagArray []CustomTableSavedCustomTableGroupByTagInput

func (CustomTableSavedCustomTableGroupByTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomTableSavedCustomTableGroupByTag)(nil)).Elem()
}

func (i CustomTableSavedCustomTableGroupByTagArray) ToCustomTableSavedCustomTableGroupByTagArrayOutput() CustomTableSavedCustomTableGroupByTagArrayOutput {
	return i.ToCustomTableSavedCustomTableGroupByTagArrayOutputWithContext(context.Background())
}

func (i CustomTableSavedCustomTableGroupByTagArray) ToCustomTableSavedCustomTableGroupByTagArrayOutputWithContext(ctx context.Context) CustomTableSavedCustomTableGroupByTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomTableSavedCustomTableGroupByTagArrayOutput)
}

type CustomTableSavedCustomTableGroupByTagOutput struct{ *pulumi.OutputState }

func (CustomTableSavedCustomTableGroupByTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomTableSavedCustomTableGroupByTag)(nil)).Elem()
}

func (o CustomTableSavedCustomTableGroupByTagOutput) ToCustomTableSavedCustomTableGroupByTagOutput() CustomTableSavedCustomTableGroupByTagOutput {
	return o
}

func (o CustomTableSavedCustomTableGroupByTagOutput) ToCustomTableSavedCustomTableGroupByTagOutputWithContext(ctx context.Context) CustomTableSavedCustomTableGroupByTagOutput {
	return o
}

// (Updatable) The tag key.
func (o CustomTableSavedCustomTableGroupByTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomTableSavedCustomTableGroupByTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// (Updatable) The tag namespace.
func (o CustomTableSavedCustomTableGroupByTagOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomTableSavedCustomTableGroupByTag) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// (Updatable) The tag value.
func (o CustomTableSavedCustomTableGroupByTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomTableSavedCustomTableGroupByTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type CustomTableSavedCustomTableGroupByTagArrayOutput struct{ *pulumi.OutputState }

func (CustomTableSavedCustomTableGroupByTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomTableSavedCustomTableGroupByTag)(nil)).Elem()
}

func (o CustomTableSavedCustomTableGroupByTagArrayOutput) ToCustomTableSavedCustomTableGroupByTagArrayOutput() CustomTableSavedCustomTableGroupByTagArrayOutput {
	return o
}

func (o CustomTableSavedCustomTableGroupByTagArrayOutput) ToCustomTableSavedCustomTableGroupByTagArrayOutputWithContext(ctx context.Context) CustomTableSavedCustomTableGroupByTagArrayOutput {
	return o
}

func (o CustomTableSavedCustomTableGroupByTagArrayOutput) Index(i pulumi.IntInput) CustomTableSavedCustomTableGroupByTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomTableSavedCustomTableGroupByTag {
		return vs[0].([]CustomTableSavedCustomTableGroupByTag)[vs[1].(int)]
	}).(CustomTableSavedCustomTableGroupByTagOutput)
}

type QueryQueryDefinition struct {
	// (Updatable) The common fields for Cost Analysis UI rendering.
	CostAnalysisUi QueryQueryDefinitionCostAnalysisUi `pulumi:"costAnalysisUi"`
	// (Updatable) The query display name. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) The request of the generated Cost Analysis report.
	ReportQuery QueryQueryDefinitionReportQuery `pulumi:"reportQuery"`
	// (Updatable) The saved query version.
	Version float64 `pulumi:"version"`
}

// QueryQueryDefinitionInput is an input type that accepts QueryQueryDefinitionArgs and QueryQueryDefinitionOutput values.
// You can construct a concrete instance of `QueryQueryDefinitionInput` via:
//
//          QueryQueryDefinitionArgs{...}
type QueryQueryDefinitionInput interface {
	pulumi.Input

	ToQueryQueryDefinitionOutput() QueryQueryDefinitionOutput
	ToQueryQueryDefinitionOutputWithContext(context.Context) QueryQueryDefinitionOutput
}

type QueryQueryDefinitionArgs struct {
	// (Updatable) The common fields for Cost Analysis UI rendering.
	CostAnalysisUi QueryQueryDefinitionCostAnalysisUiInput `pulumi:"costAnalysisUi"`
	// (Updatable) The query display name. Avoid entering confidential information.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// (Updatable) The request of the generated Cost Analysis report.
	ReportQuery QueryQueryDefinitionReportQueryInput `pulumi:"reportQuery"`
	// (Updatable) The saved query version.
	Version pulumi.Float64Input `pulumi:"version"`
}

func (QueryQueryDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryQueryDefinition)(nil)).Elem()
}

func (i QueryQueryDefinitionArgs) ToQueryQueryDefinitionOutput() QueryQueryDefinitionOutput {
	return i.ToQueryQueryDefinitionOutputWithContext(context.Background())
}

func (i QueryQueryDefinitionArgs) ToQueryQueryDefinitionOutputWithContext(ctx context.Context) QueryQueryDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueryQueryDefinitionOutput)
}

func (i QueryQueryDefinitionArgs) ToQueryQueryDefinitionPtrOutput() QueryQueryDefinitionPtrOutput {
	return i.ToQueryQueryDefinitionPtrOutputWithContext(context.Background())
}

func (i QueryQueryDefinitionArgs) ToQueryQueryDefinitionPtrOutputWithContext(ctx context.Context) QueryQueryDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueryQueryDefinitionOutput).ToQueryQueryDefinitionPtrOutputWithContext(ctx)
}

// QueryQueryDefinitionPtrInput is an input type that accepts QueryQueryDefinitionArgs, QueryQueryDefinitionPtr and QueryQueryDefinitionPtrOutput values.
// You can construct a concrete instance of `QueryQueryDefinitionPtrInput` via:
//
//          QueryQueryDefinitionArgs{...}
//
//  or:
//
//          nil
type QueryQueryDefinitionPtrInput interface {
	pulumi.Input

	ToQueryQueryDefinitionPtrOutput() QueryQueryDefinitionPtrOutput
	ToQueryQueryDefinitionPtrOutputWithContext(context.Context) QueryQueryDefinitionPtrOutput
}

type queryQueryDefinitionPtrType QueryQueryDefinitionArgs

func QueryQueryDefinitionPtr(v *QueryQueryDefinitionArgs) QueryQueryDefinitionPtrInput {
	return (*queryQueryDefinitionPtrType)(v)
}

func (*queryQueryDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QueryQueryDefinition)(nil)).Elem()
}

func (i *queryQueryDefinitionPtrType) ToQueryQueryDefinitionPtrOutput() QueryQueryDefinitionPtrOutput {
	return i.ToQueryQueryDefinitionPtrOutputWithContext(context.Background())
}

func (i *queryQueryDefinitionPtrType) ToQueryQueryDefinitionPtrOutputWithContext(ctx context.Context) QueryQueryDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueryQueryDefinitionPtrOutput)
}

type QueryQueryDefinitionOutput struct{ *pulumi.OutputState }

func (QueryQueryDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryQueryDefinition)(nil)).Elem()
}

func (o QueryQueryDefinitionOutput) ToQueryQueryDefinitionOutput() QueryQueryDefinitionOutput {
	return o
}

func (o QueryQueryDefinitionOutput) ToQueryQueryDefinitionOutputWithContext(ctx context.Context) QueryQueryDefinitionOutput {
	return o
}

func (o QueryQueryDefinitionOutput) ToQueryQueryDefinitionPtrOutput() QueryQueryDefinitionPtrOutput {
	return o.ToQueryQueryDefinitionPtrOutputWithContext(context.Background())
}

func (o QueryQueryDefinitionOutput) ToQueryQueryDefinitionPtrOutputWithContext(ctx context.Context) QueryQueryDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QueryQueryDefinition) *QueryQueryDefinition {
		return &v
	}).(QueryQueryDefinitionPtrOutput)
}

// (Updatable) The common fields for Cost Analysis UI rendering.
func (o QueryQueryDefinitionOutput) CostAnalysisUi() QueryQueryDefinitionCostAnalysisUiOutput {
	return o.ApplyT(func(v QueryQueryDefinition) QueryQueryDefinitionCostAnalysisUi { return v.CostAnalysisUi }).(QueryQueryDefinitionCostAnalysisUiOutput)
}

// (Updatable) The query display name. Avoid entering confidential information.
func (o QueryQueryDefinitionOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v QueryQueryDefinition) string { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) The request of the generated Cost Analysis report.
func (o QueryQueryDefinitionOutput) ReportQuery() QueryQueryDefinitionReportQueryOutput {
	return o.ApplyT(func(v QueryQueryDefinition) QueryQueryDefinitionReportQuery { return v.ReportQuery }).(QueryQueryDefinitionReportQueryOutput)
}

// (Updatable) The saved query version.
func (o QueryQueryDefinitionOutput) Version() pulumi.Float64Output {
	return o.ApplyT(func(v QueryQueryDefinition) float64 { return v.Version }).(pulumi.Float64Output)
}

type QueryQueryDefinitionPtrOutput struct{ *pulumi.OutputState }

func (QueryQueryDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueryQueryDefinition)(nil)).Elem()
}

func (o QueryQueryDefinitionPtrOutput) ToQueryQueryDefinitionPtrOutput() QueryQueryDefinitionPtrOutput {
	return o
}

func (o QueryQueryDefinitionPtrOutput) ToQueryQueryDefinitionPtrOutputWithContext(ctx context.Context) QueryQueryDefinitionPtrOutput {
	return o
}

func (o QueryQueryDefinitionPtrOutput) Elem() QueryQueryDefinitionOutput {
	return o.ApplyT(func(v *QueryQueryDefinition) QueryQueryDefinition {
		if v != nil {
			return *v
		}
		var ret QueryQueryDefinition
		return ret
	}).(QueryQueryDefinitionOutput)
}

// (Updatable) The common fields for Cost Analysis UI rendering.
func (o QueryQueryDefinitionPtrOutput) CostAnalysisUi() QueryQueryDefinitionCostAnalysisUiPtrOutput {
	return o.ApplyT(func(v *QueryQueryDefinition) *QueryQueryDefinitionCostAnalysisUi {
		if v == nil {
			return nil
		}
		return &v.CostAnalysisUi
	}).(QueryQueryDefinitionCostAnalysisUiPtrOutput)
}

// (Updatable) The query display name. Avoid entering confidential information.
func (o QueryQueryDefinitionPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueryQueryDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The request of the generated Cost Analysis report.
func (o QueryQueryDefinitionPtrOutput) ReportQuery() QueryQueryDefinitionReportQueryPtrOutput {
	return o.ApplyT(func(v *QueryQueryDefinition) *QueryQueryDefinitionReportQuery {
		if v == nil {
			return nil
		}
		return &v.ReportQuery
	}).(QueryQueryDefinitionReportQueryPtrOutput)
}

// (Updatable) The saved query version.
func (o QueryQueryDefinitionPtrOutput) Version() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *QueryQueryDefinition) *float64 {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.Float64PtrOutput)
}

type QueryQueryDefinitionCostAnalysisUi struct {
	// (Updatable) The graph type.
	Graph *string `pulumi:"graph"`
	// (Updatable) A cumulative graph.
	IsCumulativeGraph *bool `pulumi:"isCumulativeGraph"`
}

// QueryQueryDefinitionCostAnalysisUiInput is an input type that accepts QueryQueryDefinitionCostAnalysisUiArgs and QueryQueryDefinitionCostAnalysisUiOutput values.
// You can construct a concrete instance of `QueryQueryDefinitionCostAnalysisUiInput` via:
//
//          QueryQueryDefinitionCostAnalysisUiArgs{...}
type QueryQueryDefinitionCostAnalysisUiInput interface {
	pulumi.Input

	ToQueryQueryDefinitionCostAnalysisUiOutput() QueryQueryDefinitionCostAnalysisUiOutput
	ToQueryQueryDefinitionCostAnalysisUiOutputWithContext(context.Context) QueryQueryDefinitionCostAnalysisUiOutput
}

type QueryQueryDefinitionCostAnalysisUiArgs struct {
	// (Updatable) The graph type.
	Graph pulumi.StringPtrInput `pulumi:"graph"`
	// (Updatable) A cumulative graph.
	IsCumulativeGraph pulumi.BoolPtrInput `pulumi:"isCumulativeGraph"`
}

func (QueryQueryDefinitionCostAnalysisUiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryQueryDefinitionCostAnalysisUi)(nil)).Elem()
}

func (i QueryQueryDefinitionCostAnalysisUiArgs) ToQueryQueryDefinitionCostAnalysisUiOutput() QueryQueryDefinitionCostAnalysisUiOutput {
	return i.ToQueryQueryDefinitionCostAnalysisUiOutputWithContext(context.Background())
}

func (i QueryQueryDefinitionCostAnalysisUiArgs) ToQueryQueryDefinitionCostAnalysisUiOutputWithContext(ctx context.Context) QueryQueryDefinitionCostAnalysisUiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueryQueryDefinitionCostAnalysisUiOutput)
}

func (i QueryQueryDefinitionCostAnalysisUiArgs) ToQueryQueryDefinitionCostAnalysisUiPtrOutput() QueryQueryDefinitionCostAnalysisUiPtrOutput {
	return i.ToQueryQueryDefinitionCostAnalysisUiPtrOutputWithContext(context.Background())
}

func (i QueryQueryDefinitionCostAnalysisUiArgs) ToQueryQueryDefinitionCostAnalysisUiPtrOutputWithContext(ctx context.Context) QueryQueryDefinitionCostAnalysisUiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueryQueryDefinitionCostAnalysisUiOutput).ToQueryQueryDefinitionCostAnalysisUiPtrOutputWithContext(ctx)
}

// QueryQueryDefinitionCostAnalysisUiPtrInput is an input type that accepts QueryQueryDefinitionCostAnalysisUiArgs, QueryQueryDefinitionCostAnalysisUiPtr and QueryQueryDefinitionCostAnalysisUiPtrOutput values.
// You can construct a concrete instance of `QueryQueryDefinitionCostAnalysisUiPtrInput` via:
//
//          QueryQueryDefinitionCostAnalysisUiArgs{...}
//
//  or:
//
//          nil
type QueryQueryDefinitionCostAnalysisUiPtrInput interface {
	pulumi.Input

	ToQueryQueryDefinitionCostAnalysisUiPtrOutput() QueryQueryDefinitionCostAnalysisUiPtrOutput
	ToQueryQueryDefinitionCostAnalysisUiPtrOutputWithContext(context.Context) QueryQueryDefinitionCostAnalysisUiPtrOutput
}

type queryQueryDefinitionCostAnalysisUiPtrType QueryQueryDefinitionCostAnalysisUiArgs

func QueryQueryDefinitionCostAnalysisUiPtr(v *QueryQueryDefinitionCostAnalysisUiArgs) QueryQueryDefinitionCostAnalysisUiPtrInput {
	return (*queryQueryDefinitionCostAnalysisUiPtrType)(v)
}

func (*queryQueryDefinitionCostAnalysisUiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QueryQueryDefinitionCostAnalysisUi)(nil)).Elem()
}

func (i *queryQueryDefinitionCostAnalysisUiPtrType) ToQueryQueryDefinitionCostAnalysisUiPtrOutput() QueryQueryDefinitionCostAnalysisUiPtrOutput {
	return i.ToQueryQueryDefinitionCostAnalysisUiPtrOutputWithContext(context.Background())
}

func (i *queryQueryDefinitionCostAnalysisUiPtrType) ToQueryQueryDefinitionCostAnalysisUiPtrOutputWithContext(ctx context.Context) QueryQueryDefinitionCostAnalysisUiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueryQueryDefinitionCostAnalysisUiPtrOutput)
}

type QueryQueryDefinitionCostAnalysisUiOutput struct{ *pulumi.OutputState }

func (QueryQueryDefinitionCostAnalysisUiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryQueryDefinitionCostAnalysisUi)(nil)).Elem()
}

func (o QueryQueryDefinitionCostAnalysisUiOutput) ToQueryQueryDefinitionCostAnalysisUiOutput() QueryQueryDefinitionCostAnalysisUiOutput {
	return o
}

func (o QueryQueryDefinitionCostAnalysisUiOutput) ToQueryQueryDefinitionCostAnalysisUiOutputWithContext(ctx context.Context) QueryQueryDefinitionCostAnalysisUiOutput {
	return o
}

func (o QueryQueryDefinitionCostAnalysisUiOutput) ToQueryQueryDefinitionCostAnalysisUiPtrOutput() QueryQueryDefinitionCostAnalysisUiPtrOutput {
	return o.ToQueryQueryDefinitionCostAnalysisUiPtrOutputWithContext(context.Background())
}

func (o QueryQueryDefinitionCostAnalysisUiOutput) ToQueryQueryDefinitionCostAnalysisUiPtrOutputWithContext(ctx context.Context) QueryQueryDefinitionCostAnalysisUiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QueryQueryDefinitionCostAnalysisUi) *QueryQueryDefinitionCostAnalysisUi {
		return &v
	}).(QueryQueryDefinitionCostAnalysisUiPtrOutput)
}

// (Updatable) The graph type.
func (o QueryQueryDefinitionCostAnalysisUiOutput) Graph() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueryQueryDefinitionCostAnalysisUi) *string { return v.Graph }).(pulumi.StringPtrOutput)
}

// (Updatable) A cumulative graph.
func (o QueryQueryDefinitionCostAnalysisUiOutput) IsCumulativeGraph() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v QueryQueryDefinitionCostAnalysisUi) *bool { return v.IsCumulativeGraph }).(pulumi.BoolPtrOutput)
}

type QueryQueryDefinitionCostAnalysisUiPtrOutput struct{ *pulumi.OutputState }

func (QueryQueryDefinitionCostAnalysisUiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueryQueryDefinitionCostAnalysisUi)(nil)).Elem()
}

func (o QueryQueryDefinitionCostAnalysisUiPtrOutput) ToQueryQueryDefinitionCostAnalysisUiPtrOutput() QueryQueryDefinitionCostAnalysisUiPtrOutput {
	return o
}

func (o QueryQueryDefinitionCostAnalysisUiPtrOutput) ToQueryQueryDefinitionCostAnalysisUiPtrOutputWithContext(ctx context.Context) QueryQueryDefinitionCostAnalysisUiPtrOutput {
	return o
}

func (o QueryQueryDefinitionCostAnalysisUiPtrOutput) Elem() QueryQueryDefinitionCostAnalysisUiOutput {
	return o.ApplyT(func(v *QueryQueryDefinitionCostAnalysisUi) QueryQueryDefinitionCostAnalysisUi {
		if v != nil {
			return *v
		}
		var ret QueryQueryDefinitionCostAnalysisUi
		return ret
	}).(QueryQueryDefinitionCostAnalysisUiOutput)
}

// (Updatable) The graph type.
func (o QueryQueryDefinitionCostAnalysisUiPtrOutput) Graph() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueryQueryDefinitionCostAnalysisUi) *string {
		if v == nil {
			return nil
		}
		return v.Graph
	}).(pulumi.StringPtrOutput)
}

// (Updatable) A cumulative graph.
func (o QueryQueryDefinitionCostAnalysisUiPtrOutput) IsCumulativeGraph() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *QueryQueryDefinitionCostAnalysisUi) *bool {
		if v == nil {
			return nil
		}
		return v.IsCumulativeGraph
	}).(pulumi.BoolPtrOutput)
}

type QueryQueryDefinitionReportQuery struct {
	// (Updatable) The compartment depth level.
	CompartmentDepth *float64 `pulumi:"compartmentDepth"`
	// (Updatable) The UI date range, for example, LAST_THREE_MONTHS. Conflicts with timeUsageStarted and timeUsageEnded.
	DateRangeName *string `pulumi:"dateRangeName"`
	// (Updatable)
	Filter *string `pulumi:"filter"`
	// (Updatable) Forecast configuration of usage/cost.
	Forecast *QueryQueryDefinitionReportQueryForecast `pulumi:"forecast"`
	// (Updatable) The usage granularity. HOURLY - Hourly data aggregation. DAILY - Daily data aggregation. MONTHLY - Monthly data aggregation. TOTAL - Not yet supported.
	Granularity string `pulumi:"granularity"`
	// (Updatable) Aggregate the result by. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
	GroupBies []string `pulumi:"groupBies"`
	// (Updatable) GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only supports one tag in the list. For example: `[{"namespace":"oracle", "key":"createdBy"]`
	GroupByTags []QueryQueryDefinitionReportQueryGroupByTag `pulumi:"groupByTags"`
	// (Updatable) Whether aggregated by time. If isAggregateByTime is true, all usage/cost over the query time period will be added up.
	IsAggregateByTime *bool `pulumi:"isAggregateByTime"`
	// (Updatable) The query usage type. COST by default if it is missing. Usage - Query the usage data. Cost - Query the cost/billing data. Credit - Query the credit adjustments data. ExpiredCredit - Query the expired credits data AllCredit - Query the credit adjustments and expired credit
	QueryType *string `pulumi:"queryType"`
	// (Updatable) Tenant ID.
	TenantId string `pulumi:"tenantId"`
	// (Updatable) The usage end time.
	TimeUsageEnded *string `pulumi:"timeUsageEnded"`
	// (Updatable) The usage start time.
	TimeUsageStarted *string `pulumi:"timeUsageStarted"`
}

// QueryQueryDefinitionReportQueryInput is an input type that accepts QueryQueryDefinitionReportQueryArgs and QueryQueryDefinitionReportQueryOutput values.
// You can construct a concrete instance of `QueryQueryDefinitionReportQueryInput` via:
//
//          QueryQueryDefinitionReportQueryArgs{...}
type QueryQueryDefinitionReportQueryInput interface {
	pulumi.Input

	ToQueryQueryDefinitionReportQueryOutput() QueryQueryDefinitionReportQueryOutput
	ToQueryQueryDefinitionReportQueryOutputWithContext(context.Context) QueryQueryDefinitionReportQueryOutput
}

type QueryQueryDefinitionReportQueryArgs struct {
	// (Updatable) The compartment depth level.
	CompartmentDepth pulumi.Float64PtrInput `pulumi:"compartmentDepth"`
	// (Updatable) The UI date range, for example, LAST_THREE_MONTHS. Conflicts with timeUsageStarted and timeUsageEnded.
	DateRangeName pulumi.StringPtrInput `pulumi:"dateRangeName"`
	// (Updatable)
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// (Updatable) Forecast configuration of usage/cost.
	Forecast QueryQueryDefinitionReportQueryForecastPtrInput `pulumi:"forecast"`
	// (Updatable) The usage granularity. HOURLY - Hourly data aggregation. DAILY - Daily data aggregation. MONTHLY - Monthly data aggregation. TOTAL - Not yet supported.
	Granularity pulumi.StringInput `pulumi:"granularity"`
	// (Updatable) Aggregate the result by. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
	GroupBies pulumi.StringArrayInput `pulumi:"groupBies"`
	// (Updatable) GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only supports one tag in the list. For example: `[{"namespace":"oracle", "key":"createdBy"]`
	GroupByTags QueryQueryDefinitionReportQueryGroupByTagArrayInput `pulumi:"groupByTags"`
	// (Updatable) Whether aggregated by time. If isAggregateByTime is true, all usage/cost over the query time period will be added up.
	IsAggregateByTime pulumi.BoolPtrInput `pulumi:"isAggregateByTime"`
	// (Updatable) The query usage type. COST by default if it is missing. Usage - Query the usage data. Cost - Query the cost/billing data. Credit - Query the credit adjustments data. ExpiredCredit - Query the expired credits data AllCredit - Query the credit adjustments and expired credit
	QueryType pulumi.StringPtrInput `pulumi:"queryType"`
	// (Updatable) Tenant ID.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// (Updatable) The usage end time.
	TimeUsageEnded pulumi.StringPtrInput `pulumi:"timeUsageEnded"`
	// (Updatable) The usage start time.
	TimeUsageStarted pulumi.StringPtrInput `pulumi:"timeUsageStarted"`
}

func (QueryQueryDefinitionReportQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryQueryDefinitionReportQuery)(nil)).Elem()
}

func (i QueryQueryDefinitionReportQueryArgs) ToQueryQueryDefinitionReportQueryOutput() QueryQueryDefinitionReportQueryOutput {
	return i.ToQueryQueryDefinitionReportQueryOutputWithContext(context.Background())
}

func (i QueryQueryDefinitionReportQueryArgs) ToQueryQueryDefinitionReportQueryOutputWithContext(ctx context.Context) QueryQueryDefinitionReportQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueryQueryDefinitionReportQueryOutput)
}

func (i QueryQueryDefinitionReportQueryArgs) ToQueryQueryDefinitionReportQueryPtrOutput() QueryQueryDefinitionReportQueryPtrOutput {
	return i.ToQueryQueryDefinitionReportQueryPtrOutputWithContext(context.Background())
}

func (i QueryQueryDefinitionReportQueryArgs) ToQueryQueryDefinitionReportQueryPtrOutputWithContext(ctx context.Context) QueryQueryDefinitionReportQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueryQueryDefinitionReportQueryOutput).ToQueryQueryDefinitionReportQueryPtrOutputWithContext(ctx)
}

// QueryQueryDefinitionReportQueryPtrInput is an input type that accepts QueryQueryDefinitionReportQueryArgs, QueryQueryDefinitionReportQueryPtr and QueryQueryDefinitionReportQueryPtrOutput values.
// You can construct a concrete instance of `QueryQueryDefinitionReportQueryPtrInput` via:
//
//          QueryQueryDefinitionReportQueryArgs{...}
//
//  or:
//
//          nil
type QueryQueryDefinitionReportQueryPtrInput interface {
	pulumi.Input

	ToQueryQueryDefinitionReportQueryPtrOutput() QueryQueryDefinitionReportQueryPtrOutput
	ToQueryQueryDefinitionReportQueryPtrOutputWithContext(context.Context) QueryQueryDefinitionReportQueryPtrOutput
}

type queryQueryDefinitionReportQueryPtrType QueryQueryDefinitionReportQueryArgs

func QueryQueryDefinitionReportQueryPtr(v *QueryQueryDefinitionReportQueryArgs) QueryQueryDefinitionReportQueryPtrInput {
	return (*queryQueryDefinitionReportQueryPtrType)(v)
}

func (*queryQueryDefinitionReportQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QueryQueryDefinitionReportQuery)(nil)).Elem()
}

func (i *queryQueryDefinitionReportQueryPtrType) ToQueryQueryDefinitionReportQueryPtrOutput() QueryQueryDefinitionReportQueryPtrOutput {
	return i.ToQueryQueryDefinitionReportQueryPtrOutputWithContext(context.Background())
}

func (i *queryQueryDefinitionReportQueryPtrType) ToQueryQueryDefinitionReportQueryPtrOutputWithContext(ctx context.Context) QueryQueryDefinitionReportQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueryQueryDefinitionReportQueryPtrOutput)
}

type QueryQueryDefinitionReportQueryOutput struct{ *pulumi.OutputState }

func (QueryQueryDefinitionReportQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryQueryDefinitionReportQuery)(nil)).Elem()
}

func (o QueryQueryDefinitionReportQueryOutput) ToQueryQueryDefinitionReportQueryOutput() QueryQueryDefinitionReportQueryOutput {
	return o
}

func (o QueryQueryDefinitionReportQueryOutput) ToQueryQueryDefinitionReportQueryOutputWithContext(ctx context.Context) QueryQueryDefinitionReportQueryOutput {
	return o
}

func (o QueryQueryDefinitionReportQueryOutput) ToQueryQueryDefinitionReportQueryPtrOutput() QueryQueryDefinitionReportQueryPtrOutput {
	return o.ToQueryQueryDefinitionReportQueryPtrOutputWithContext(context.Background())
}

func (o QueryQueryDefinitionReportQueryOutput) ToQueryQueryDefinitionReportQueryPtrOutputWithContext(ctx context.Context) QueryQueryDefinitionReportQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QueryQueryDefinitionReportQuery) *QueryQueryDefinitionReportQuery {
		return &v
	}).(QueryQueryDefinitionReportQueryPtrOutput)
}

// (Updatable) The compartment depth level.
func (o QueryQueryDefinitionReportQueryOutput) CompartmentDepth() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v QueryQueryDefinitionReportQuery) *float64 { return v.CompartmentDepth }).(pulumi.Float64PtrOutput)
}

// (Updatable) The UI date range, for example, LAST_THREE_MONTHS. Conflicts with timeUsageStarted and timeUsageEnded.
func (o QueryQueryDefinitionReportQueryOutput) DateRangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueryQueryDefinitionReportQuery) *string { return v.DateRangeName }).(pulumi.StringPtrOutput)
}

// (Updatable)
func (o QueryQueryDefinitionReportQueryOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueryQueryDefinitionReportQuery) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// (Updatable) Forecast configuration of usage/cost.
func (o QueryQueryDefinitionReportQueryOutput) Forecast() QueryQueryDefinitionReportQueryForecastPtrOutput {
	return o.ApplyT(func(v QueryQueryDefinitionReportQuery) *QueryQueryDefinitionReportQueryForecast { return v.Forecast }).(QueryQueryDefinitionReportQueryForecastPtrOutput)
}

// (Updatable) The usage granularity. HOURLY - Hourly data aggregation. DAILY - Daily data aggregation. MONTHLY - Monthly data aggregation. TOTAL - Not yet supported.
func (o QueryQueryDefinitionReportQueryOutput) Granularity() pulumi.StringOutput {
	return o.ApplyT(func(v QueryQueryDefinitionReportQuery) string { return v.Granularity }).(pulumi.StringOutput)
}

// (Updatable) Aggregate the result by. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
func (o QueryQueryDefinitionReportQueryOutput) GroupBies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v QueryQueryDefinitionReportQuery) []string { return v.GroupBies }).(pulumi.StringArrayOutput)
}

// (Updatable) GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only supports one tag in the list. For example: `[{"namespace":"oracle", "key":"createdBy"]`
func (o QueryQueryDefinitionReportQueryOutput) GroupByTags() QueryQueryDefinitionReportQueryGroupByTagArrayOutput {
	return o.ApplyT(func(v QueryQueryDefinitionReportQuery) []QueryQueryDefinitionReportQueryGroupByTag {
		return v.GroupByTags
	}).(QueryQueryDefinitionReportQueryGroupByTagArrayOutput)
}

// (Updatable) Whether aggregated by time. If isAggregateByTime is true, all usage/cost over the query time period will be added up.
func (o QueryQueryDefinitionReportQueryOutput) IsAggregateByTime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v QueryQueryDefinitionReportQuery) *bool { return v.IsAggregateByTime }).(pulumi.BoolPtrOutput)
}

// (Updatable) The query usage type. COST by default if it is missing. Usage - Query the usage data. Cost - Query the cost/billing data. Credit - Query the credit adjustments data. ExpiredCredit - Query the expired credits data AllCredit - Query the credit adjustments and expired credit
func (o QueryQueryDefinitionReportQueryOutput) QueryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueryQueryDefinitionReportQuery) *string { return v.QueryType }).(pulumi.StringPtrOutput)
}

// (Updatable) Tenant ID.
func (o QueryQueryDefinitionReportQueryOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v QueryQueryDefinitionReportQuery) string { return v.TenantId }).(pulumi.StringOutput)
}

// (Updatable) The usage end time.
func (o QueryQueryDefinitionReportQueryOutput) TimeUsageEnded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueryQueryDefinitionReportQuery) *string { return v.TimeUsageEnded }).(pulumi.StringPtrOutput)
}

// (Updatable) The usage start time.
func (o QueryQueryDefinitionReportQueryOutput) TimeUsageStarted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueryQueryDefinitionReportQuery) *string { return v.TimeUsageStarted }).(pulumi.StringPtrOutput)
}

type QueryQueryDefinitionReportQueryPtrOutput struct{ *pulumi.OutputState }

func (QueryQueryDefinitionReportQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueryQueryDefinitionReportQuery)(nil)).Elem()
}

func (o QueryQueryDefinitionReportQueryPtrOutput) ToQueryQueryDefinitionReportQueryPtrOutput() QueryQueryDefinitionReportQueryPtrOutput {
	return o
}

func (o QueryQueryDefinitionReportQueryPtrOutput) ToQueryQueryDefinitionReportQueryPtrOutputWithContext(ctx context.Context) QueryQueryDefinitionReportQueryPtrOutput {
	return o
}

func (o QueryQueryDefinitionReportQueryPtrOutput) Elem() QueryQueryDefinitionReportQueryOutput {
	return o.ApplyT(func(v *QueryQueryDefinitionReportQuery) QueryQueryDefinitionReportQuery {
		if v != nil {
			return *v
		}
		var ret QueryQueryDefinitionReportQuery
		return ret
	}).(QueryQueryDefinitionReportQueryOutput)
}

// (Updatable) The compartment depth level.
func (o QueryQueryDefinitionReportQueryPtrOutput) CompartmentDepth() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *QueryQueryDefinitionReportQuery) *float64 {
		if v == nil {
			return nil
		}
		return v.CompartmentDepth
	}).(pulumi.Float64PtrOutput)
}

// (Updatable) The UI date range, for example, LAST_THREE_MONTHS. Conflicts with timeUsageStarted and timeUsageEnded.
func (o QueryQueryDefinitionReportQueryPtrOutput) DateRangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueryQueryDefinitionReportQuery) *string {
		if v == nil {
			return nil
		}
		return v.DateRangeName
	}).(pulumi.StringPtrOutput)
}

// (Updatable)
func (o QueryQueryDefinitionReportQueryPtrOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueryQueryDefinitionReportQuery) *string {
		if v == nil {
			return nil
		}
		return v.Filter
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Forecast configuration of usage/cost.
func (o QueryQueryDefinitionReportQueryPtrOutput) Forecast() QueryQueryDefinitionReportQueryForecastPtrOutput {
	return o.ApplyT(func(v *QueryQueryDefinitionReportQuery) *QueryQueryDefinitionReportQueryForecast {
		if v == nil {
			return nil
		}
		return v.Forecast
	}).(QueryQueryDefinitionReportQueryForecastPtrOutput)
}

// (Updatable) The usage granularity. HOURLY - Hourly data aggregation. DAILY - Daily data aggregation. MONTHLY - Monthly data aggregation. TOTAL - Not yet supported.
func (o QueryQueryDefinitionReportQueryPtrOutput) Granularity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueryQueryDefinitionReportQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Granularity
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Aggregate the result by. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
func (o QueryQueryDefinitionReportQueryPtrOutput) GroupBies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *QueryQueryDefinitionReportQuery) []string {
		if v == nil {
			return nil
		}
		return v.GroupBies
	}).(pulumi.StringArrayOutput)
}

// (Updatable) GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only supports one tag in the list. For example: `[{"namespace":"oracle", "key":"createdBy"]`
func (o QueryQueryDefinitionReportQueryPtrOutput) GroupByTags() QueryQueryDefinitionReportQueryGroupByTagArrayOutput {
	return o.ApplyT(func(v *QueryQueryDefinitionReportQuery) []QueryQueryDefinitionReportQueryGroupByTag {
		if v == nil {
			return nil
		}
		return v.GroupByTags
	}).(QueryQueryDefinitionReportQueryGroupByTagArrayOutput)
}

// (Updatable) Whether aggregated by time. If isAggregateByTime is true, all usage/cost over the query time period will be added up.
func (o QueryQueryDefinitionReportQueryPtrOutput) IsAggregateByTime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *QueryQueryDefinitionReportQuery) *bool {
		if v == nil {
			return nil
		}
		return v.IsAggregateByTime
	}).(pulumi.BoolPtrOutput)
}

// (Updatable) The query usage type. COST by default if it is missing. Usage - Query the usage data. Cost - Query the cost/billing data. Credit - Query the credit adjustments data. ExpiredCredit - Query the expired credits data AllCredit - Query the credit adjustments and expired credit
func (o QueryQueryDefinitionReportQueryPtrOutput) QueryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueryQueryDefinitionReportQuery) *string {
		if v == nil {
			return nil
		}
		return v.QueryType
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Tenant ID.
func (o QueryQueryDefinitionReportQueryPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueryQueryDefinitionReportQuery) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The usage end time.
func (o QueryQueryDefinitionReportQueryPtrOutput) TimeUsageEnded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueryQueryDefinitionReportQuery) *string {
		if v == nil {
			return nil
		}
		return v.TimeUsageEnded
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The usage start time.
func (o QueryQueryDefinitionReportQueryPtrOutput) TimeUsageStarted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueryQueryDefinitionReportQuery) *string {
		if v == nil {
			return nil
		}
		return v.TimeUsageStarted
	}).(pulumi.StringPtrOutput)
}

type QueryQueryDefinitionReportQueryForecast struct {
	// (Updatable) BASIC uses the exponential smoothing (ETS) model to project future usage/costs based on history data. The basis for projections is a periodic set of equivalent historical days for which the projection is being made.
	ForecastType *string `pulumi:"forecastType"`
	// (Updatable) The forecast end time.
	TimeForecastEnded string `pulumi:"timeForecastEnded"`
	// (Updatable) The forecast start time. Defaults to UTC-1 if not specified.
	TimeForecastStarted *string `pulumi:"timeForecastStarted"`
}

// QueryQueryDefinitionReportQueryForecastInput is an input type that accepts QueryQueryDefinitionReportQueryForecastArgs and QueryQueryDefinitionReportQueryForecastOutput values.
// You can construct a concrete instance of `QueryQueryDefinitionReportQueryForecastInput` via:
//
//          QueryQueryDefinitionReportQueryForecastArgs{...}
type QueryQueryDefinitionReportQueryForecastInput interface {
	pulumi.Input

	ToQueryQueryDefinitionReportQueryForecastOutput() QueryQueryDefinitionReportQueryForecastOutput
	ToQueryQueryDefinitionReportQueryForecastOutputWithContext(context.Context) QueryQueryDefinitionReportQueryForecastOutput
}

type QueryQueryDefinitionReportQueryForecastArgs struct {
	// (Updatable) BASIC uses the exponential smoothing (ETS) model to project future usage/costs based on history data. The basis for projections is a periodic set of equivalent historical days for which the projection is being made.
	ForecastType pulumi.StringPtrInput `pulumi:"forecastType"`
	// (Updatable) The forecast end time.
	TimeForecastEnded pulumi.StringInput `pulumi:"timeForecastEnded"`
	// (Updatable) The forecast start time. Defaults to UTC-1 if not specified.
	TimeForecastStarted pulumi.StringPtrInput `pulumi:"timeForecastStarted"`
}

func (QueryQueryDefinitionReportQueryForecastArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryQueryDefinitionReportQueryForecast)(nil)).Elem()
}

func (i QueryQueryDefinitionReportQueryForecastArgs) ToQueryQueryDefinitionReportQueryForecastOutput() QueryQueryDefinitionReportQueryForecastOutput {
	return i.ToQueryQueryDefinitionReportQueryForecastOutputWithContext(context.Background())
}

func (i QueryQueryDefinitionReportQueryForecastArgs) ToQueryQueryDefinitionReportQueryForecastOutputWithContext(ctx context.Context) QueryQueryDefinitionReportQueryForecastOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueryQueryDefinitionReportQueryForecastOutput)
}

func (i QueryQueryDefinitionReportQueryForecastArgs) ToQueryQueryDefinitionReportQueryForecastPtrOutput() QueryQueryDefinitionReportQueryForecastPtrOutput {
	return i.ToQueryQueryDefinitionReportQueryForecastPtrOutputWithContext(context.Background())
}

func (i QueryQueryDefinitionReportQueryForecastArgs) ToQueryQueryDefinitionReportQueryForecastPtrOutputWithContext(ctx context.Context) QueryQueryDefinitionReportQueryForecastPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueryQueryDefinitionReportQueryForecastOutput).ToQueryQueryDefinitionReportQueryForecastPtrOutputWithContext(ctx)
}

// QueryQueryDefinitionReportQueryForecastPtrInput is an input type that accepts QueryQueryDefinitionReportQueryForecastArgs, QueryQueryDefinitionReportQueryForecastPtr and QueryQueryDefinitionReportQueryForecastPtrOutput values.
// You can construct a concrete instance of `QueryQueryDefinitionReportQueryForecastPtrInput` via:
//
//          QueryQueryDefinitionReportQueryForecastArgs{...}
//
//  or:
//
//          nil
type QueryQueryDefinitionReportQueryForecastPtrInput interface {
	pulumi.Input

	ToQueryQueryDefinitionReportQueryForecastPtrOutput() QueryQueryDefinitionReportQueryForecastPtrOutput
	ToQueryQueryDefinitionReportQueryForecastPtrOutputWithContext(context.Context) QueryQueryDefinitionReportQueryForecastPtrOutput
}

type queryQueryDefinitionReportQueryForecastPtrType QueryQueryDefinitionReportQueryForecastArgs

func QueryQueryDefinitionReportQueryForecastPtr(v *QueryQueryDefinitionReportQueryForecastArgs) QueryQueryDefinitionReportQueryForecastPtrInput {
	return (*queryQueryDefinitionReportQueryForecastPtrType)(v)
}

func (*queryQueryDefinitionReportQueryForecastPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QueryQueryDefinitionReportQueryForecast)(nil)).Elem()
}

func (i *queryQueryDefinitionReportQueryForecastPtrType) ToQueryQueryDefinitionReportQueryForecastPtrOutput() QueryQueryDefinitionReportQueryForecastPtrOutput {
	return i.ToQueryQueryDefinitionReportQueryForecastPtrOutputWithContext(context.Background())
}

func (i *queryQueryDefinitionReportQueryForecastPtrType) ToQueryQueryDefinitionReportQueryForecastPtrOutputWithContext(ctx context.Context) QueryQueryDefinitionReportQueryForecastPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueryQueryDefinitionReportQueryForecastPtrOutput)
}

type QueryQueryDefinitionReportQueryForecastOutput struct{ *pulumi.OutputState }

func (QueryQueryDefinitionReportQueryForecastOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryQueryDefinitionReportQueryForecast)(nil)).Elem()
}

func (o QueryQueryDefinitionReportQueryForecastOutput) ToQueryQueryDefinitionReportQueryForecastOutput() QueryQueryDefinitionReportQueryForecastOutput {
	return o
}

func (o QueryQueryDefinitionReportQueryForecastOutput) ToQueryQueryDefinitionReportQueryForecastOutputWithContext(ctx context.Context) QueryQueryDefinitionReportQueryForecastOutput {
	return o
}

func (o QueryQueryDefinitionReportQueryForecastOutput) ToQueryQueryDefinitionReportQueryForecastPtrOutput() QueryQueryDefinitionReportQueryForecastPtrOutput {
	return o.ToQueryQueryDefinitionReportQueryForecastPtrOutputWithContext(context.Background())
}

func (o QueryQueryDefinitionReportQueryForecastOutput) ToQueryQueryDefinitionReportQueryForecastPtrOutputWithContext(ctx context.Context) QueryQueryDefinitionReportQueryForecastPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QueryQueryDefinitionReportQueryForecast) *QueryQueryDefinitionReportQueryForecast {
		return &v
	}).(QueryQueryDefinitionReportQueryForecastPtrOutput)
}

// (Updatable) BASIC uses the exponential smoothing (ETS) model to project future usage/costs based on history data. The basis for projections is a periodic set of equivalent historical days for which the projection is being made.
func (o QueryQueryDefinitionReportQueryForecastOutput) ForecastType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueryQueryDefinitionReportQueryForecast) *string { return v.ForecastType }).(pulumi.StringPtrOutput)
}

// (Updatable) The forecast end time.
func (o QueryQueryDefinitionReportQueryForecastOutput) TimeForecastEnded() pulumi.StringOutput {
	return o.ApplyT(func(v QueryQueryDefinitionReportQueryForecast) string { return v.TimeForecastEnded }).(pulumi.StringOutput)
}

// (Updatable) The forecast start time. Defaults to UTC-1 if not specified.
func (o QueryQueryDefinitionReportQueryForecastOutput) TimeForecastStarted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueryQueryDefinitionReportQueryForecast) *string { return v.TimeForecastStarted }).(pulumi.StringPtrOutput)
}

type QueryQueryDefinitionReportQueryForecastPtrOutput struct{ *pulumi.OutputState }

func (QueryQueryDefinitionReportQueryForecastPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueryQueryDefinitionReportQueryForecast)(nil)).Elem()
}

func (o QueryQueryDefinitionReportQueryForecastPtrOutput) ToQueryQueryDefinitionReportQueryForecastPtrOutput() QueryQueryDefinitionReportQueryForecastPtrOutput {
	return o
}

func (o QueryQueryDefinitionReportQueryForecastPtrOutput) ToQueryQueryDefinitionReportQueryForecastPtrOutputWithContext(ctx context.Context) QueryQueryDefinitionReportQueryForecastPtrOutput {
	return o
}

func (o QueryQueryDefinitionReportQueryForecastPtrOutput) Elem() QueryQueryDefinitionReportQueryForecastOutput {
	return o.ApplyT(func(v *QueryQueryDefinitionReportQueryForecast) QueryQueryDefinitionReportQueryForecast {
		if v != nil {
			return *v
		}
		var ret QueryQueryDefinitionReportQueryForecast
		return ret
	}).(QueryQueryDefinitionReportQueryForecastOutput)
}

// (Updatable) BASIC uses the exponential smoothing (ETS) model to project future usage/costs based on history data. The basis for projections is a periodic set of equivalent historical days for which the projection is being made.
func (o QueryQueryDefinitionReportQueryForecastPtrOutput) ForecastType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueryQueryDefinitionReportQueryForecast) *string {
		if v == nil {
			return nil
		}
		return v.ForecastType
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The forecast end time.
func (o QueryQueryDefinitionReportQueryForecastPtrOutput) TimeForecastEnded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueryQueryDefinitionReportQueryForecast) *string {
		if v == nil {
			return nil
		}
		return &v.TimeForecastEnded
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The forecast start time. Defaults to UTC-1 if not specified.
func (o QueryQueryDefinitionReportQueryForecastPtrOutput) TimeForecastStarted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueryQueryDefinitionReportQueryForecast) *string {
		if v == nil {
			return nil
		}
		return v.TimeForecastStarted
	}).(pulumi.StringPtrOutput)
}

type QueryQueryDefinitionReportQueryGroupByTag struct {
	// (Updatable) The tag key.
	Key *string `pulumi:"key"`
	// (Updatable) The tag namespace.
	Namespace *string `pulumi:"namespace"`
	// (Updatable) The tag value.
	Value *string `pulumi:"value"`
}

// QueryQueryDefinitionReportQueryGroupByTagInput is an input type that accepts QueryQueryDefinitionReportQueryGroupByTagArgs and QueryQueryDefinitionReportQueryGroupByTagOutput values.
// You can construct a concrete instance of `QueryQueryDefinitionReportQueryGroupByTagInput` via:
//
//          QueryQueryDefinitionReportQueryGroupByTagArgs{...}
type QueryQueryDefinitionReportQueryGroupByTagInput interface {
	pulumi.Input

	ToQueryQueryDefinitionReportQueryGroupByTagOutput() QueryQueryDefinitionReportQueryGroupByTagOutput
	ToQueryQueryDefinitionReportQueryGroupByTagOutputWithContext(context.Context) QueryQueryDefinitionReportQueryGroupByTagOutput
}

type QueryQueryDefinitionReportQueryGroupByTagArgs struct {
	// (Updatable) The tag key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// (Updatable) The tag namespace.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// (Updatable) The tag value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (QueryQueryDefinitionReportQueryGroupByTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryQueryDefinitionReportQueryGroupByTag)(nil)).Elem()
}

func (i QueryQueryDefinitionReportQueryGroupByTagArgs) ToQueryQueryDefinitionReportQueryGroupByTagOutput() QueryQueryDefinitionReportQueryGroupByTagOutput {
	return i.ToQueryQueryDefinitionReportQueryGroupByTagOutputWithContext(context.Background())
}

func (i QueryQueryDefinitionReportQueryGroupByTagArgs) ToQueryQueryDefinitionReportQueryGroupByTagOutputWithContext(ctx context.Context) QueryQueryDefinitionReportQueryGroupByTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueryQueryDefinitionReportQueryGroupByTagOutput)
}

// QueryQueryDefinitionReportQueryGroupByTagArrayInput is an input type that accepts QueryQueryDefinitionReportQueryGroupByTagArray and QueryQueryDefinitionReportQueryGroupByTagArrayOutput values.
// You can construct a concrete instance of `QueryQueryDefinitionReportQueryGroupByTagArrayInput` via:
//
//          QueryQueryDefinitionReportQueryGroupByTagArray{ QueryQueryDefinitionReportQueryGroupByTagArgs{...} }
type QueryQueryDefinitionReportQueryGroupByTagArrayInput interface {
	pulumi.Input

	ToQueryQueryDefinitionReportQueryGroupByTagArrayOutput() QueryQueryDefinitionReportQueryGroupByTagArrayOutput
	ToQueryQueryDefinitionReportQueryGroupByTagArrayOutputWithContext(context.Context) QueryQueryDefinitionReportQueryGroupByTagArrayOutput
}

type QueryQueryDefinitionReportQueryGroupByTagArray []QueryQueryDefinitionReportQueryGroupByTagInput

func (QueryQueryDefinitionReportQueryGroupByTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QueryQueryDefinitionReportQueryGroupByTag)(nil)).Elem()
}

func (i QueryQueryDefinitionReportQueryGroupByTagArray) ToQueryQueryDefinitionReportQueryGroupByTagArrayOutput() QueryQueryDefinitionReportQueryGroupByTagArrayOutput {
	return i.ToQueryQueryDefinitionReportQueryGroupByTagArrayOutputWithContext(context.Background())
}

func (i QueryQueryDefinitionReportQueryGroupByTagArray) ToQueryQueryDefinitionReportQueryGroupByTagArrayOutputWithContext(ctx context.Context) QueryQueryDefinitionReportQueryGroupByTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueryQueryDefinitionReportQueryGroupByTagArrayOutput)
}

type QueryQueryDefinitionReportQueryGroupByTagOutput struct{ *pulumi.OutputState }

func (QueryQueryDefinitionReportQueryGroupByTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryQueryDefinitionReportQueryGroupByTag)(nil)).Elem()
}

func (o QueryQueryDefinitionReportQueryGroupByTagOutput) ToQueryQueryDefinitionReportQueryGroupByTagOutput() QueryQueryDefinitionReportQueryGroupByTagOutput {
	return o
}

func (o QueryQueryDefinitionReportQueryGroupByTagOutput) ToQueryQueryDefinitionReportQueryGroupByTagOutputWithContext(ctx context.Context) QueryQueryDefinitionReportQueryGroupByTagOutput {
	return o
}

// (Updatable) The tag key.
func (o QueryQueryDefinitionReportQueryGroupByTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueryQueryDefinitionReportQueryGroupByTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// (Updatable) The tag namespace.
func (o QueryQueryDefinitionReportQueryGroupByTagOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueryQueryDefinitionReportQueryGroupByTag) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// (Updatable) The tag value.
func (o QueryQueryDefinitionReportQueryGroupByTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueryQueryDefinitionReportQueryGroupByTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type QueryQueryDefinitionReportQueryGroupByTagArrayOutput struct{ *pulumi.OutputState }

func (QueryQueryDefinitionReportQueryGroupByTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QueryQueryDefinitionReportQueryGroupByTag)(nil)).Elem()
}

func (o QueryQueryDefinitionReportQueryGroupByTagArrayOutput) ToQueryQueryDefinitionReportQueryGroupByTagArrayOutput() QueryQueryDefinitionReportQueryGroupByTagArrayOutput {
	return o
}

func (o QueryQueryDefinitionReportQueryGroupByTagArrayOutput) ToQueryQueryDefinitionReportQueryGroupByTagArrayOutputWithContext(ctx context.Context) QueryQueryDefinitionReportQueryGroupByTagArrayOutput {
	return o
}

func (o QueryQueryDefinitionReportQueryGroupByTagArrayOutput) Index(i pulumi.IntInput) QueryQueryDefinitionReportQueryGroupByTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) QueryQueryDefinitionReportQueryGroupByTag {
		return vs[0].([]QueryQueryDefinitionReportQueryGroupByTag)[vs[1].(int)]
	}).(QueryQueryDefinitionReportQueryGroupByTagOutput)
}

type UsageForecast struct {
	// BASIC uses the exponential smoothing (ETS) model to project future usage/costs based on history data. The basis for projections is a periodic set of equivalent historical days for which the projection is being made.
	ForecastType *string `pulumi:"forecastType"`
	// The forecast end time.
	TimeForecastEnded string `pulumi:"timeForecastEnded"`
	// The forecast start time. Defaults to UTC-1 if not specified.
	TimeForecastStarted *string `pulumi:"timeForecastStarted"`
}

// UsageForecastInput is an input type that accepts UsageForecastArgs and UsageForecastOutput values.
// You can construct a concrete instance of `UsageForecastInput` via:
//
//          UsageForecastArgs{...}
type UsageForecastInput interface {
	pulumi.Input

	ToUsageForecastOutput() UsageForecastOutput
	ToUsageForecastOutputWithContext(context.Context) UsageForecastOutput
}

type UsageForecastArgs struct {
	// BASIC uses the exponential smoothing (ETS) model to project future usage/costs based on history data. The basis for projections is a periodic set of equivalent historical days for which the projection is being made.
	ForecastType pulumi.StringPtrInput `pulumi:"forecastType"`
	// The forecast end time.
	TimeForecastEnded pulumi.StringInput `pulumi:"timeForecastEnded"`
	// The forecast start time. Defaults to UTC-1 if not specified.
	TimeForecastStarted pulumi.StringPtrInput `pulumi:"timeForecastStarted"`
}

func (UsageForecastArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UsageForecast)(nil)).Elem()
}

func (i UsageForecastArgs) ToUsageForecastOutput() UsageForecastOutput {
	return i.ToUsageForecastOutputWithContext(context.Background())
}

func (i UsageForecastArgs) ToUsageForecastOutputWithContext(ctx context.Context) UsageForecastOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsageForecastOutput)
}

func (i UsageForecastArgs) ToUsageForecastPtrOutput() UsageForecastPtrOutput {
	return i.ToUsageForecastPtrOutputWithContext(context.Background())
}

func (i UsageForecastArgs) ToUsageForecastPtrOutputWithContext(ctx context.Context) UsageForecastPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsageForecastOutput).ToUsageForecastPtrOutputWithContext(ctx)
}

// UsageForecastPtrInput is an input type that accepts UsageForecastArgs, UsageForecastPtr and UsageForecastPtrOutput values.
// You can construct a concrete instance of `UsageForecastPtrInput` via:
//
//          UsageForecastArgs{...}
//
//  or:
//
//          nil
type UsageForecastPtrInput interface {
	pulumi.Input

	ToUsageForecastPtrOutput() UsageForecastPtrOutput
	ToUsageForecastPtrOutputWithContext(context.Context) UsageForecastPtrOutput
}

type usageForecastPtrType UsageForecastArgs

func UsageForecastPtr(v *UsageForecastArgs) UsageForecastPtrInput {
	return (*usageForecastPtrType)(v)
}

func (*usageForecastPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UsageForecast)(nil)).Elem()
}

func (i *usageForecastPtrType) ToUsageForecastPtrOutput() UsageForecastPtrOutput {
	return i.ToUsageForecastPtrOutputWithContext(context.Background())
}

func (i *usageForecastPtrType) ToUsageForecastPtrOutputWithContext(ctx context.Context) UsageForecastPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsageForecastPtrOutput)
}

type UsageForecastOutput struct{ *pulumi.OutputState }

func (UsageForecastOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UsageForecast)(nil)).Elem()
}

func (o UsageForecastOutput) ToUsageForecastOutput() UsageForecastOutput {
	return o
}

func (o UsageForecastOutput) ToUsageForecastOutputWithContext(ctx context.Context) UsageForecastOutput {
	return o
}

func (o UsageForecastOutput) ToUsageForecastPtrOutput() UsageForecastPtrOutput {
	return o.ToUsageForecastPtrOutputWithContext(context.Background())
}

func (o UsageForecastOutput) ToUsageForecastPtrOutputWithContext(ctx context.Context) UsageForecastPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UsageForecast) *UsageForecast {
		return &v
	}).(UsageForecastPtrOutput)
}

// BASIC uses the exponential smoothing (ETS) model to project future usage/costs based on history data. The basis for projections is a periodic set of equivalent historical days for which the projection is being made.
func (o UsageForecastOutput) ForecastType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsageForecast) *string { return v.ForecastType }).(pulumi.StringPtrOutput)
}

// The forecast end time.
func (o UsageForecastOutput) TimeForecastEnded() pulumi.StringOutput {
	return o.ApplyT(func(v UsageForecast) string { return v.TimeForecastEnded }).(pulumi.StringOutput)
}

// The forecast start time. Defaults to UTC-1 if not specified.
func (o UsageForecastOutput) TimeForecastStarted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsageForecast) *string { return v.TimeForecastStarted }).(pulumi.StringPtrOutput)
}

type UsageForecastPtrOutput struct{ *pulumi.OutputState }

func (UsageForecastPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UsageForecast)(nil)).Elem()
}

func (o UsageForecastPtrOutput) ToUsageForecastPtrOutput() UsageForecastPtrOutput {
	return o
}

func (o UsageForecastPtrOutput) ToUsageForecastPtrOutputWithContext(ctx context.Context) UsageForecastPtrOutput {
	return o
}

func (o UsageForecastPtrOutput) Elem() UsageForecastOutput {
	return o.ApplyT(func(v *UsageForecast) UsageForecast {
		if v != nil {
			return *v
		}
		var ret UsageForecast
		return ret
	}).(UsageForecastOutput)
}

// BASIC uses the exponential smoothing (ETS) model to project future usage/costs based on history data. The basis for projections is a periodic set of equivalent historical days for which the projection is being made.
func (o UsageForecastPtrOutput) ForecastType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UsageForecast) *string {
		if v == nil {
			return nil
		}
		return v.ForecastType
	}).(pulumi.StringPtrOutput)
}

// The forecast end time.
func (o UsageForecastPtrOutput) TimeForecastEnded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UsageForecast) *string {
		if v == nil {
			return nil
		}
		return &v.TimeForecastEnded
	}).(pulumi.StringPtrOutput)
}

// The forecast start time. Defaults to UTC-1 if not specified.
func (o UsageForecastPtrOutput) TimeForecastStarted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UsageForecast) *string {
		if v == nil {
			return nil
		}
		return v.TimeForecastStarted
	}).(pulumi.StringPtrOutput)
}

type UsageGroupByTag struct {
	// The tag key.
	Key *string `pulumi:"key"`
	// The tag namespace.
	Namespace *string `pulumi:"namespace"`
	// The tag value.
	Value *string `pulumi:"value"`
}

// UsageGroupByTagInput is an input type that accepts UsageGroupByTagArgs and UsageGroupByTagOutput values.
// You can construct a concrete instance of `UsageGroupByTagInput` via:
//
//          UsageGroupByTagArgs{...}
type UsageGroupByTagInput interface {
	pulumi.Input

	ToUsageGroupByTagOutput() UsageGroupByTagOutput
	ToUsageGroupByTagOutputWithContext(context.Context) UsageGroupByTagOutput
}

type UsageGroupByTagArgs struct {
	// The tag key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The tag namespace.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The tag value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (UsageGroupByTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UsageGroupByTag)(nil)).Elem()
}

func (i UsageGroupByTagArgs) ToUsageGroupByTagOutput() UsageGroupByTagOutput {
	return i.ToUsageGroupByTagOutputWithContext(context.Background())
}

func (i UsageGroupByTagArgs) ToUsageGroupByTagOutputWithContext(ctx context.Context) UsageGroupByTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsageGroupByTagOutput)
}

// UsageGroupByTagArrayInput is an input type that accepts UsageGroupByTagArray and UsageGroupByTagArrayOutput values.
// You can construct a concrete instance of `UsageGroupByTagArrayInput` via:
//
//          UsageGroupByTagArray{ UsageGroupByTagArgs{...} }
type UsageGroupByTagArrayInput interface {
	pulumi.Input

	ToUsageGroupByTagArrayOutput() UsageGroupByTagArrayOutput
	ToUsageGroupByTagArrayOutputWithContext(context.Context) UsageGroupByTagArrayOutput
}

type UsageGroupByTagArray []UsageGroupByTagInput

func (UsageGroupByTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UsageGroupByTag)(nil)).Elem()
}

func (i UsageGroupByTagArray) ToUsageGroupByTagArrayOutput() UsageGroupByTagArrayOutput {
	return i.ToUsageGroupByTagArrayOutputWithContext(context.Background())
}

func (i UsageGroupByTagArray) ToUsageGroupByTagArrayOutputWithContext(ctx context.Context) UsageGroupByTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsageGroupByTagArrayOutput)
}

type UsageGroupByTagOutput struct{ *pulumi.OutputState }

func (UsageGroupByTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UsageGroupByTag)(nil)).Elem()
}

func (o UsageGroupByTagOutput) ToUsageGroupByTagOutput() UsageGroupByTagOutput {
	return o
}

func (o UsageGroupByTagOutput) ToUsageGroupByTagOutputWithContext(ctx context.Context) UsageGroupByTagOutput {
	return o
}

// The tag key.
func (o UsageGroupByTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsageGroupByTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The tag namespace.
func (o UsageGroupByTagOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsageGroupByTag) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The tag value.
func (o UsageGroupByTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsageGroupByTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type UsageGroupByTagArrayOutput struct{ *pulumi.OutputState }

func (UsageGroupByTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UsageGroupByTag)(nil)).Elem()
}

func (o UsageGroupByTagArrayOutput) ToUsageGroupByTagArrayOutput() UsageGroupByTagArrayOutput {
	return o
}

func (o UsageGroupByTagArrayOutput) ToUsageGroupByTagArrayOutputWithContext(ctx context.Context) UsageGroupByTagArrayOutput {
	return o
}

func (o UsageGroupByTagArrayOutput) Index(i pulumi.IntInput) UsageGroupByTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UsageGroupByTag {
		return vs[0].([]UsageGroupByTag)[vs[1].(int)]
	}).(UsageGroupByTagOutput)
}

type UsageItem struct {
	// The availability domain of the usage.
	Ad *string `pulumi:"ad"`
	// The compartment OCID.
	CompartmentId *string `pulumi:"compartmentId"`
	// The compartment name.
	CompartmentName *string `pulumi:"compartmentName"`
	// The compartment path, starting from root.
	CompartmentPath *string `pulumi:"compartmentPath"`
	// The computed cost.
	ComputedAmount *float64 `pulumi:"computedAmount"`
	// The usage number.
	ComputedQuantity *float64 `pulumi:"computedQuantity"`
	// The price currency.
	Currency *string `pulumi:"currency"`
	// The discretionary discount applied to the SKU.
	Discount *float64 `pulumi:"discount"`
	// The forecasted data.
	IsForecast *bool `pulumi:"isForecast"`
	// The SKU list rate (not discount).
	ListRate *float64 `pulumi:"listRate"`
	// The overage usage.
	Overage *string `pulumi:"overage"`
	// The SPM OverageFlag.
	OveragesFlag *string `pulumi:"overagesFlag"`
	// Platform for the cost.
	Platform *string `pulumi:"platform"`
	// The region of the usage.
	Region *string `pulumi:"region"`
	// The resource OCID that is incurring the cost.
	ResourceId *string `pulumi:"resourceId"`
	// The resource name that is incurring the cost.
	ResourceName *string `pulumi:"resourceName"`
	// The service name that is incurring the cost.
	Service *string `pulumi:"service"`
	// The resource shape.
	Shape *string `pulumi:"shape"`
	// The SKU friendly name.
	SkuName *string `pulumi:"skuName"`
	// The SKU part number.
	SkuPartNumber *string `pulumi:"skuPartNumber"`
	// The subscription ID.
	SubscriptionId *string `pulumi:"subscriptionId"`
	// For grouping, a tag definition. For filtering, a definition and key.
	Tags []UsageItemTag `pulumi:"tags"`
	// Tenant ID.
	TenantId *string `pulumi:"tenantId"`
	// The tenancy name.
	TenantName *string `pulumi:"tenantName"`
	// The usage end time.
	TimeUsageEnded *string `pulumi:"timeUsageEnded"`
	// The usage start time.
	TimeUsageStarted *string `pulumi:"timeUsageStarted"`
	// The usage unit.
	Unit *string `pulumi:"unit"`
	// The price per unit.
	UnitPrice *float64 `pulumi:"unitPrice"`
	// The resource size being metered.
	Weight *float64 `pulumi:"weight"`
}

// UsageItemInput is an input type that accepts UsageItemArgs and UsageItemOutput values.
// You can construct a concrete instance of `UsageItemInput` via:
//
//          UsageItemArgs{...}
type UsageItemInput interface {
	pulumi.Input

	ToUsageItemOutput() UsageItemOutput
	ToUsageItemOutputWithContext(context.Context) UsageItemOutput
}

type UsageItemArgs struct {
	// The availability domain of the usage.
	Ad pulumi.StringPtrInput `pulumi:"ad"`
	// The compartment OCID.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// The compartment name.
	CompartmentName pulumi.StringPtrInput `pulumi:"compartmentName"`
	// The compartment path, starting from root.
	CompartmentPath pulumi.StringPtrInput `pulumi:"compartmentPath"`
	// The computed cost.
	ComputedAmount pulumi.Float64PtrInput `pulumi:"computedAmount"`
	// The usage number.
	ComputedQuantity pulumi.Float64PtrInput `pulumi:"computedQuantity"`
	// The price currency.
	Currency pulumi.StringPtrInput `pulumi:"currency"`
	// The discretionary discount applied to the SKU.
	Discount pulumi.Float64PtrInput `pulumi:"discount"`
	// The forecasted data.
	IsForecast pulumi.BoolPtrInput `pulumi:"isForecast"`
	// The SKU list rate (not discount).
	ListRate pulumi.Float64PtrInput `pulumi:"listRate"`
	// The overage usage.
	Overage pulumi.StringPtrInput `pulumi:"overage"`
	// The SPM OverageFlag.
	OveragesFlag pulumi.StringPtrInput `pulumi:"overagesFlag"`
	// Platform for the cost.
	Platform pulumi.StringPtrInput `pulumi:"platform"`
	// The region of the usage.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// The resource OCID that is incurring the cost.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
	// The resource name that is incurring the cost.
	ResourceName pulumi.StringPtrInput `pulumi:"resourceName"`
	// The service name that is incurring the cost.
	Service pulumi.StringPtrInput `pulumi:"service"`
	// The resource shape.
	Shape pulumi.StringPtrInput `pulumi:"shape"`
	// The SKU friendly name.
	SkuName pulumi.StringPtrInput `pulumi:"skuName"`
	// The SKU part number.
	SkuPartNumber pulumi.StringPtrInput `pulumi:"skuPartNumber"`
	// The subscription ID.
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
	// For grouping, a tag definition. For filtering, a definition and key.
	Tags UsageItemTagArrayInput `pulumi:"tags"`
	// Tenant ID.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// The tenancy name.
	TenantName pulumi.StringPtrInput `pulumi:"tenantName"`
	// The usage end time.
	TimeUsageEnded pulumi.StringPtrInput `pulumi:"timeUsageEnded"`
	// The usage start time.
	TimeUsageStarted pulumi.StringPtrInput `pulumi:"timeUsageStarted"`
	// The usage unit.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
	// The price per unit.
	UnitPrice pulumi.Float64PtrInput `pulumi:"unitPrice"`
	// The resource size being metered.
	Weight pulumi.Float64PtrInput `pulumi:"weight"`
}

func (UsageItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UsageItem)(nil)).Elem()
}

func (i UsageItemArgs) ToUsageItemOutput() UsageItemOutput {
	return i.ToUsageItemOutputWithContext(context.Background())
}

func (i UsageItemArgs) ToUsageItemOutputWithContext(ctx context.Context) UsageItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsageItemOutput)
}

// UsageItemArrayInput is an input type that accepts UsageItemArray and UsageItemArrayOutput values.
// You can construct a concrete instance of `UsageItemArrayInput` via:
//
//          UsageItemArray{ UsageItemArgs{...} }
type UsageItemArrayInput interface {
	pulumi.Input

	ToUsageItemArrayOutput() UsageItemArrayOutput
	ToUsageItemArrayOutputWithContext(context.Context) UsageItemArrayOutput
}

type UsageItemArray []UsageItemInput

func (UsageItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UsageItem)(nil)).Elem()
}

func (i UsageItemArray) ToUsageItemArrayOutput() UsageItemArrayOutput {
	return i.ToUsageItemArrayOutputWithContext(context.Background())
}

func (i UsageItemArray) ToUsageItemArrayOutputWithContext(ctx context.Context) UsageItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsageItemArrayOutput)
}

type UsageItemOutput struct{ *pulumi.OutputState }

func (UsageItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UsageItem)(nil)).Elem()
}

func (o UsageItemOutput) ToUsageItemOutput() UsageItemOutput {
	return o
}

func (o UsageItemOutput) ToUsageItemOutputWithContext(ctx context.Context) UsageItemOutput {
	return o
}

// The availability domain of the usage.
func (o UsageItemOutput) Ad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsageItem) *string { return v.Ad }).(pulumi.StringPtrOutput)
}

// The compartment OCID.
func (o UsageItemOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsageItem) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// The compartment name.
func (o UsageItemOutput) CompartmentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsageItem) *string { return v.CompartmentName }).(pulumi.StringPtrOutput)
}

// The compartment path, starting from root.
func (o UsageItemOutput) CompartmentPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsageItem) *string { return v.CompartmentPath }).(pulumi.StringPtrOutput)
}

// The computed cost.
func (o UsageItemOutput) ComputedAmount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v UsageItem) *float64 { return v.ComputedAmount }).(pulumi.Float64PtrOutput)
}

// The usage number.
func (o UsageItemOutput) ComputedQuantity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v UsageItem) *float64 { return v.ComputedQuantity }).(pulumi.Float64PtrOutput)
}

// The price currency.
func (o UsageItemOutput) Currency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsageItem) *string { return v.Currency }).(pulumi.StringPtrOutput)
}

// The discretionary discount applied to the SKU.
func (o UsageItemOutput) Discount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v UsageItem) *float64 { return v.Discount }).(pulumi.Float64PtrOutput)
}

// The forecasted data.
func (o UsageItemOutput) IsForecast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UsageItem) *bool { return v.IsForecast }).(pulumi.BoolPtrOutput)
}

// The SKU list rate (not discount).
func (o UsageItemOutput) ListRate() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v UsageItem) *float64 { return v.ListRate }).(pulumi.Float64PtrOutput)
}

// The overage usage.
func (o UsageItemOutput) Overage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsageItem) *string { return v.Overage }).(pulumi.StringPtrOutput)
}

// The SPM OverageFlag.
func (o UsageItemOutput) OveragesFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsageItem) *string { return v.OveragesFlag }).(pulumi.StringPtrOutput)
}

// Platform for the cost.
func (o UsageItemOutput) Platform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsageItem) *string { return v.Platform }).(pulumi.StringPtrOutput)
}

// The region of the usage.
func (o UsageItemOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsageItem) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// The resource OCID that is incurring the cost.
func (o UsageItemOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsageItem) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// The resource name that is incurring the cost.
func (o UsageItemOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsageItem) *string { return v.ResourceName }).(pulumi.StringPtrOutput)
}

// The service name that is incurring the cost.
func (o UsageItemOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsageItem) *string { return v.Service }).(pulumi.StringPtrOutput)
}

// The resource shape.
func (o UsageItemOutput) Shape() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsageItem) *string { return v.Shape }).(pulumi.StringPtrOutput)
}

// The SKU friendly name.
func (o UsageItemOutput) SkuName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsageItem) *string { return v.SkuName }).(pulumi.StringPtrOutput)
}

// The SKU part number.
func (o UsageItemOutput) SkuPartNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsageItem) *string { return v.SkuPartNumber }).(pulumi.StringPtrOutput)
}

// The subscription ID.
func (o UsageItemOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsageItem) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

// For grouping, a tag definition. For filtering, a definition and key.
func (o UsageItemOutput) Tags() UsageItemTagArrayOutput {
	return o.ApplyT(func(v UsageItem) []UsageItemTag { return v.Tags }).(UsageItemTagArrayOutput)
}

// Tenant ID.
func (o UsageItemOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsageItem) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The tenancy name.
func (o UsageItemOutput) TenantName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsageItem) *string { return v.TenantName }).(pulumi.StringPtrOutput)
}

// The usage end time.
func (o UsageItemOutput) TimeUsageEnded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsageItem) *string { return v.TimeUsageEnded }).(pulumi.StringPtrOutput)
}

// The usage start time.
func (o UsageItemOutput) TimeUsageStarted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsageItem) *string { return v.TimeUsageStarted }).(pulumi.StringPtrOutput)
}

// The usage unit.
func (o UsageItemOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsageItem) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

// The price per unit.
func (o UsageItemOutput) UnitPrice() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v UsageItem) *float64 { return v.UnitPrice }).(pulumi.Float64PtrOutput)
}

// The resource size being metered.
func (o UsageItemOutput) Weight() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v UsageItem) *float64 { return v.Weight }).(pulumi.Float64PtrOutput)
}

type UsageItemArrayOutput struct{ *pulumi.OutputState }

func (UsageItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UsageItem)(nil)).Elem()
}

func (o UsageItemArrayOutput) ToUsageItemArrayOutput() UsageItemArrayOutput {
	return o
}

func (o UsageItemArrayOutput) ToUsageItemArrayOutputWithContext(ctx context.Context) UsageItemArrayOutput {
	return o
}

func (o UsageItemArrayOutput) Index(i pulumi.IntInput) UsageItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UsageItem {
		return vs[0].([]UsageItem)[vs[1].(int)]
	}).(UsageItemOutput)
}

type UsageItemTag struct {
	// The tag key.
	Key *string `pulumi:"key"`
	// The tag namespace.
	Namespace *string `pulumi:"namespace"`
	// The tag value.
	Value *string `pulumi:"value"`
}

// UsageItemTagInput is an input type that accepts UsageItemTagArgs and UsageItemTagOutput values.
// You can construct a concrete instance of `UsageItemTagInput` via:
//
//          UsageItemTagArgs{...}
type UsageItemTagInput interface {
	pulumi.Input

	ToUsageItemTagOutput() UsageItemTagOutput
	ToUsageItemTagOutputWithContext(context.Context) UsageItemTagOutput
}

type UsageItemTagArgs struct {
	// The tag key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The tag namespace.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The tag value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (UsageItemTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UsageItemTag)(nil)).Elem()
}

func (i UsageItemTagArgs) ToUsageItemTagOutput() UsageItemTagOutput {
	return i.ToUsageItemTagOutputWithContext(context.Background())
}

func (i UsageItemTagArgs) ToUsageItemTagOutputWithContext(ctx context.Context) UsageItemTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsageItemTagOutput)
}

// UsageItemTagArrayInput is an input type that accepts UsageItemTagArray and UsageItemTagArrayOutput values.
// You can construct a concrete instance of `UsageItemTagArrayInput` via:
//
//          UsageItemTagArray{ UsageItemTagArgs{...} }
type UsageItemTagArrayInput interface {
	pulumi.Input

	ToUsageItemTagArrayOutput() UsageItemTagArrayOutput
	ToUsageItemTagArrayOutputWithContext(context.Context) UsageItemTagArrayOutput
}

type UsageItemTagArray []UsageItemTagInput

func (UsageItemTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UsageItemTag)(nil)).Elem()
}

func (i UsageItemTagArray) ToUsageItemTagArrayOutput() UsageItemTagArrayOutput {
	return i.ToUsageItemTagArrayOutputWithContext(context.Background())
}

func (i UsageItemTagArray) ToUsageItemTagArrayOutputWithContext(ctx context.Context) UsageItemTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsageItemTagArrayOutput)
}

type UsageItemTagOutput struct{ *pulumi.OutputState }

func (UsageItemTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UsageItemTag)(nil)).Elem()
}

func (o UsageItemTagOutput) ToUsageItemTagOutput() UsageItemTagOutput {
	return o
}

func (o UsageItemTagOutput) ToUsageItemTagOutputWithContext(ctx context.Context) UsageItemTagOutput {
	return o
}

// The tag key.
func (o UsageItemTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsageItemTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The tag namespace.
func (o UsageItemTagOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsageItemTag) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The tag value.
func (o UsageItemTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsageItemTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type UsageItemTagArrayOutput struct{ *pulumi.OutputState }

func (UsageItemTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UsageItemTag)(nil)).Elem()
}

func (o UsageItemTagArrayOutput) ToUsageItemTagArrayOutput() UsageItemTagArrayOutput {
	return o
}

func (o UsageItemTagArrayOutput) ToUsageItemTagArrayOutputWithContext(ctx context.Context) UsageItemTagArrayOutput {
	return o
}

func (o UsageItemTagArrayOutput) Index(i pulumi.IntInput) UsageItemTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UsageItemTag {
		return vs[0].([]UsageItemTag)[vs[1].(int)]
	}).(UsageItemTagOutput)
}

type GetConfigurationItem struct {
	// The configuration key.
	Key string `pulumi:"key"`
	// The configuration value.
	Values []string `pulumi:"values"`
}

// GetConfigurationItemInput is an input type that accepts GetConfigurationItemArgs and GetConfigurationItemOutput values.
// You can construct a concrete instance of `GetConfigurationItemInput` via:
//
//          GetConfigurationItemArgs{...}
type GetConfigurationItemInput interface {
	pulumi.Input

	ToGetConfigurationItemOutput() GetConfigurationItemOutput
	ToGetConfigurationItemOutputWithContext(context.Context) GetConfigurationItemOutput
}

type GetConfigurationItemArgs struct {
	// The configuration key.
	Key pulumi.StringInput `pulumi:"key"`
	// The configuration value.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetConfigurationItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationItem)(nil)).Elem()
}

func (i GetConfigurationItemArgs) ToGetConfigurationItemOutput() GetConfigurationItemOutput {
	return i.ToGetConfigurationItemOutputWithContext(context.Background())
}

func (i GetConfigurationItemArgs) ToGetConfigurationItemOutputWithContext(ctx context.Context) GetConfigurationItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationItemOutput)
}

// GetConfigurationItemArrayInput is an input type that accepts GetConfigurationItemArray and GetConfigurationItemArrayOutput values.
// You can construct a concrete instance of `GetConfigurationItemArrayInput` via:
//
//          GetConfigurationItemArray{ GetConfigurationItemArgs{...} }
type GetConfigurationItemArrayInput interface {
	pulumi.Input

	ToGetConfigurationItemArrayOutput() GetConfigurationItemArrayOutput
	ToGetConfigurationItemArrayOutputWithContext(context.Context) GetConfigurationItemArrayOutput
}

type GetConfigurationItemArray []GetConfigurationItemInput

func (GetConfigurationItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigurationItem)(nil)).Elem()
}

func (i GetConfigurationItemArray) ToGetConfigurationItemArrayOutput() GetConfigurationItemArrayOutput {
	return i.ToGetConfigurationItemArrayOutputWithContext(context.Background())
}

func (i GetConfigurationItemArray) ToGetConfigurationItemArrayOutputWithContext(ctx context.Context) GetConfigurationItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationItemArrayOutput)
}

type GetConfigurationItemOutput struct{ *pulumi.OutputState }

func (GetConfigurationItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationItem)(nil)).Elem()
}

func (o GetConfigurationItemOutput) ToGetConfigurationItemOutput() GetConfigurationItemOutput {
	return o
}

func (o GetConfigurationItemOutput) ToGetConfigurationItemOutputWithContext(ctx context.Context) GetConfigurationItemOutput {
	return o
}

// The configuration key.
func (o GetConfigurationItemOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationItem) string { return v.Key }).(pulumi.StringOutput)
}

// The configuration value.
func (o GetConfigurationItemOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConfigurationItem) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetConfigurationItemArrayOutput struct{ *pulumi.OutputState }

func (GetConfigurationItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigurationItem)(nil)).Elem()
}

func (o GetConfigurationItemArrayOutput) ToGetConfigurationItemArrayOutput() GetConfigurationItemArrayOutput {
	return o
}

func (o GetConfigurationItemArrayOutput) ToGetConfigurationItemArrayOutputWithContext(ctx context.Context) GetConfigurationItemArrayOutput {
	return o
}

func (o GetConfigurationItemArrayOutput) Index(i pulumi.IntInput) GetConfigurationItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConfigurationItem {
		return vs[0].([]GetConfigurationItem)[vs[1].(int)]
	}).(GetConfigurationItemOutput)
}

type GetCustomTableSavedCustomTable struct {
	// The column groupBy key list. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
	ColumnGroupBies []string `pulumi:"columnGroupBies"`
	// The compartment depth level.
	CompartmentDepth float64 `pulumi:"compartmentDepth"`
	// The name of the custom table.
	DisplayName string `pulumi:"displayName"`
	// GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only one tag in the list is supported. For example: `[{"namespace":"oracle", "key":"createdBy"]`
	GroupByTags []GetCustomTableSavedCustomTableGroupByTag `pulumi:"groupByTags"`
	// The row groupBy key list. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
	RowGroupBies []string `pulumi:"rowGroupBies"`
	// The version of the custom table.
	Version float64 `pulumi:"version"`
}

// GetCustomTableSavedCustomTableInput is an input type that accepts GetCustomTableSavedCustomTableArgs and GetCustomTableSavedCustomTableOutput values.
// You can construct a concrete instance of `GetCustomTableSavedCustomTableInput` via:
//
//          GetCustomTableSavedCustomTableArgs{...}
type GetCustomTableSavedCustomTableInput interface {
	pulumi.Input

	ToGetCustomTableSavedCustomTableOutput() GetCustomTableSavedCustomTableOutput
	ToGetCustomTableSavedCustomTableOutputWithContext(context.Context) GetCustomTableSavedCustomTableOutput
}

type GetCustomTableSavedCustomTableArgs struct {
	// The column groupBy key list. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
	ColumnGroupBies pulumi.StringArrayInput `pulumi:"columnGroupBies"`
	// The compartment depth level.
	CompartmentDepth pulumi.Float64Input `pulumi:"compartmentDepth"`
	// The name of the custom table.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only one tag in the list is supported. For example: `[{"namespace":"oracle", "key":"createdBy"]`
	GroupByTags GetCustomTableSavedCustomTableGroupByTagArrayInput `pulumi:"groupByTags"`
	// The row groupBy key list. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
	RowGroupBies pulumi.StringArrayInput `pulumi:"rowGroupBies"`
	// The version of the custom table.
	Version pulumi.Float64Input `pulumi:"version"`
}

func (GetCustomTableSavedCustomTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomTableSavedCustomTable)(nil)).Elem()
}

func (i GetCustomTableSavedCustomTableArgs) ToGetCustomTableSavedCustomTableOutput() GetCustomTableSavedCustomTableOutput {
	return i.ToGetCustomTableSavedCustomTableOutputWithContext(context.Background())
}

func (i GetCustomTableSavedCustomTableArgs) ToGetCustomTableSavedCustomTableOutputWithContext(ctx context.Context) GetCustomTableSavedCustomTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomTableSavedCustomTableOutput)
}

// GetCustomTableSavedCustomTableArrayInput is an input type that accepts GetCustomTableSavedCustomTableArray and GetCustomTableSavedCustomTableArrayOutput values.
// You can construct a concrete instance of `GetCustomTableSavedCustomTableArrayInput` via:
//
//          GetCustomTableSavedCustomTableArray{ GetCustomTableSavedCustomTableArgs{...} }
type GetCustomTableSavedCustomTableArrayInput interface {
	pulumi.Input

	ToGetCustomTableSavedCustomTableArrayOutput() GetCustomTableSavedCustomTableArrayOutput
	ToGetCustomTableSavedCustomTableArrayOutputWithContext(context.Context) GetCustomTableSavedCustomTableArrayOutput
}

type GetCustomTableSavedCustomTableArray []GetCustomTableSavedCustomTableInput

func (GetCustomTableSavedCustomTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomTableSavedCustomTable)(nil)).Elem()
}

func (i GetCustomTableSavedCustomTableArray) ToGetCustomTableSavedCustomTableArrayOutput() GetCustomTableSavedCustomTableArrayOutput {
	return i.ToGetCustomTableSavedCustomTableArrayOutputWithContext(context.Background())
}

func (i GetCustomTableSavedCustomTableArray) ToGetCustomTableSavedCustomTableArrayOutputWithContext(ctx context.Context) GetCustomTableSavedCustomTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomTableSavedCustomTableArrayOutput)
}

type GetCustomTableSavedCustomTableOutput struct{ *pulumi.OutputState }

func (GetCustomTableSavedCustomTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomTableSavedCustomTable)(nil)).Elem()
}

func (o GetCustomTableSavedCustomTableOutput) ToGetCustomTableSavedCustomTableOutput() GetCustomTableSavedCustomTableOutput {
	return o
}

func (o GetCustomTableSavedCustomTableOutput) ToGetCustomTableSavedCustomTableOutputWithContext(ctx context.Context) GetCustomTableSavedCustomTableOutput {
	return o
}

// The column groupBy key list. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
func (o GetCustomTableSavedCustomTableOutput) ColumnGroupBies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCustomTableSavedCustomTable) []string { return v.ColumnGroupBies }).(pulumi.StringArrayOutput)
}

// The compartment depth level.
func (o GetCustomTableSavedCustomTableOutput) CompartmentDepth() pulumi.Float64Output {
	return o.ApplyT(func(v GetCustomTableSavedCustomTable) float64 { return v.CompartmentDepth }).(pulumi.Float64Output)
}

// The name of the custom table.
func (o GetCustomTableSavedCustomTableOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomTableSavedCustomTable) string { return v.DisplayName }).(pulumi.StringOutput)
}

// GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only one tag in the list is supported. For example: `[{"namespace":"oracle", "key":"createdBy"]`
func (o GetCustomTableSavedCustomTableOutput) GroupByTags() GetCustomTableSavedCustomTableGroupByTagArrayOutput {
	return o.ApplyT(func(v GetCustomTableSavedCustomTable) []GetCustomTableSavedCustomTableGroupByTag {
		return v.GroupByTags
	}).(GetCustomTableSavedCustomTableGroupByTagArrayOutput)
}

// The row groupBy key list. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
func (o GetCustomTableSavedCustomTableOutput) RowGroupBies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCustomTableSavedCustomTable) []string { return v.RowGroupBies }).(pulumi.StringArrayOutput)
}

// The version of the custom table.
func (o GetCustomTableSavedCustomTableOutput) Version() pulumi.Float64Output {
	return o.ApplyT(func(v GetCustomTableSavedCustomTable) float64 { return v.Version }).(pulumi.Float64Output)
}

type GetCustomTableSavedCustomTableArrayOutput struct{ *pulumi.OutputState }

func (GetCustomTableSavedCustomTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomTableSavedCustomTable)(nil)).Elem()
}

func (o GetCustomTableSavedCustomTableArrayOutput) ToGetCustomTableSavedCustomTableArrayOutput() GetCustomTableSavedCustomTableArrayOutput {
	return o
}

func (o GetCustomTableSavedCustomTableArrayOutput) ToGetCustomTableSavedCustomTableArrayOutputWithContext(ctx context.Context) GetCustomTableSavedCustomTableArrayOutput {
	return o
}

func (o GetCustomTableSavedCustomTableArrayOutput) Index(i pulumi.IntInput) GetCustomTableSavedCustomTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomTableSavedCustomTable {
		return vs[0].([]GetCustomTableSavedCustomTable)[vs[1].(int)]
	}).(GetCustomTableSavedCustomTableOutput)
}

type GetCustomTableSavedCustomTableGroupByTag struct {
	// The tag key.
	Key string `pulumi:"key"`
	// The tag namespace.
	Namespace string `pulumi:"namespace"`
	// The tag value.
	Value string `pulumi:"value"`
}

// GetCustomTableSavedCustomTableGroupByTagInput is an input type that accepts GetCustomTableSavedCustomTableGroupByTagArgs and GetCustomTableSavedCustomTableGroupByTagOutput values.
// You can construct a concrete instance of `GetCustomTableSavedCustomTableGroupByTagInput` via:
//
//          GetCustomTableSavedCustomTableGroupByTagArgs{...}
type GetCustomTableSavedCustomTableGroupByTagInput interface {
	pulumi.Input

	ToGetCustomTableSavedCustomTableGroupByTagOutput() GetCustomTableSavedCustomTableGroupByTagOutput
	ToGetCustomTableSavedCustomTableGroupByTagOutputWithContext(context.Context) GetCustomTableSavedCustomTableGroupByTagOutput
}

type GetCustomTableSavedCustomTableGroupByTagArgs struct {
	// The tag key.
	Key pulumi.StringInput `pulumi:"key"`
	// The tag namespace.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The tag value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetCustomTableSavedCustomTableGroupByTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomTableSavedCustomTableGroupByTag)(nil)).Elem()
}

func (i GetCustomTableSavedCustomTableGroupByTagArgs) ToGetCustomTableSavedCustomTableGroupByTagOutput() GetCustomTableSavedCustomTableGroupByTagOutput {
	return i.ToGetCustomTableSavedCustomTableGroupByTagOutputWithContext(context.Background())
}

func (i GetCustomTableSavedCustomTableGroupByTagArgs) ToGetCustomTableSavedCustomTableGroupByTagOutputWithContext(ctx context.Context) GetCustomTableSavedCustomTableGroupByTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomTableSavedCustomTableGroupByTagOutput)
}

// GetCustomTableSavedCustomTableGroupByTagArrayInput is an input type that accepts GetCustomTableSavedCustomTableGroupByTagArray and GetCustomTableSavedCustomTableGroupByTagArrayOutput values.
// You can construct a concrete instance of `GetCustomTableSavedCustomTableGroupByTagArrayInput` via:
//
//          GetCustomTableSavedCustomTableGroupByTagArray{ GetCustomTableSavedCustomTableGroupByTagArgs{...} }
type GetCustomTableSavedCustomTableGroupByTagArrayInput interface {
	pulumi.Input

	ToGetCustomTableSavedCustomTableGroupByTagArrayOutput() GetCustomTableSavedCustomTableGroupByTagArrayOutput
	ToGetCustomTableSavedCustomTableGroupByTagArrayOutputWithContext(context.Context) GetCustomTableSavedCustomTableGroupByTagArrayOutput
}

type GetCustomTableSavedCustomTableGroupByTagArray []GetCustomTableSavedCustomTableGroupByTagInput

func (GetCustomTableSavedCustomTableGroupByTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomTableSavedCustomTableGroupByTag)(nil)).Elem()
}

func (i GetCustomTableSavedCustomTableGroupByTagArray) ToGetCustomTableSavedCustomTableGroupByTagArrayOutput() GetCustomTableSavedCustomTableGroupByTagArrayOutput {
	return i.ToGetCustomTableSavedCustomTableGroupByTagArrayOutputWithContext(context.Background())
}

func (i GetCustomTableSavedCustomTableGroupByTagArray) ToGetCustomTableSavedCustomTableGroupByTagArrayOutputWithContext(ctx context.Context) GetCustomTableSavedCustomTableGroupByTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomTableSavedCustomTableGroupByTagArrayOutput)
}

type GetCustomTableSavedCustomTableGroupByTagOutput struct{ *pulumi.OutputState }

func (GetCustomTableSavedCustomTableGroupByTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomTableSavedCustomTableGroupByTag)(nil)).Elem()
}

func (o GetCustomTableSavedCustomTableGroupByTagOutput) ToGetCustomTableSavedCustomTableGroupByTagOutput() GetCustomTableSavedCustomTableGroupByTagOutput {
	return o
}

func (o GetCustomTableSavedCustomTableGroupByTagOutput) ToGetCustomTableSavedCustomTableGroupByTagOutputWithContext(ctx context.Context) GetCustomTableSavedCustomTableGroupByTagOutput {
	return o
}

// The tag key.
func (o GetCustomTableSavedCustomTableGroupByTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomTableSavedCustomTableGroupByTag) string { return v.Key }).(pulumi.StringOutput)
}

// The tag namespace.
func (o GetCustomTableSavedCustomTableGroupByTagOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomTableSavedCustomTableGroupByTag) string { return v.Namespace }).(pulumi.StringOutput)
}

// The tag value.
func (o GetCustomTableSavedCustomTableGroupByTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomTableSavedCustomTableGroupByTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetCustomTableSavedCustomTableGroupByTagArrayOutput struct{ *pulumi.OutputState }

func (GetCustomTableSavedCustomTableGroupByTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomTableSavedCustomTableGroupByTag)(nil)).Elem()
}

func (o GetCustomTableSavedCustomTableGroupByTagArrayOutput) ToGetCustomTableSavedCustomTableGroupByTagArrayOutput() GetCustomTableSavedCustomTableGroupByTagArrayOutput {
	return o
}

func (o GetCustomTableSavedCustomTableGroupByTagArrayOutput) ToGetCustomTableSavedCustomTableGroupByTagArrayOutputWithContext(ctx context.Context) GetCustomTableSavedCustomTableGroupByTagArrayOutput {
	return o
}

func (o GetCustomTableSavedCustomTableGroupByTagArrayOutput) Index(i pulumi.IntInput) GetCustomTableSavedCustomTableGroupByTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomTableSavedCustomTableGroupByTag {
		return vs[0].([]GetCustomTableSavedCustomTableGroupByTag)[vs[1].(int)]
	}).(GetCustomTableSavedCustomTableGroupByTagOutput)
}

type GetCustomTablesCustomTableCollection struct {
	Items []GetCustomTablesCustomTableCollectionItem `pulumi:"items"`
}

// GetCustomTablesCustomTableCollectionInput is an input type that accepts GetCustomTablesCustomTableCollectionArgs and GetCustomTablesCustomTableCollectionOutput values.
// You can construct a concrete instance of `GetCustomTablesCustomTableCollectionInput` via:
//
//          GetCustomTablesCustomTableCollectionArgs{...}
type GetCustomTablesCustomTableCollectionInput interface {
	pulumi.Input

	ToGetCustomTablesCustomTableCollectionOutput() GetCustomTablesCustomTableCollectionOutput
	ToGetCustomTablesCustomTableCollectionOutputWithContext(context.Context) GetCustomTablesCustomTableCollectionOutput
}

type GetCustomTablesCustomTableCollectionArgs struct {
	Items GetCustomTablesCustomTableCollectionItemArrayInput `pulumi:"items"`
}

func (GetCustomTablesCustomTableCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomTablesCustomTableCollection)(nil)).Elem()
}

func (i GetCustomTablesCustomTableCollectionArgs) ToGetCustomTablesCustomTableCollectionOutput() GetCustomTablesCustomTableCollectionOutput {
	return i.ToGetCustomTablesCustomTableCollectionOutputWithContext(context.Background())
}

func (i GetCustomTablesCustomTableCollectionArgs) ToGetCustomTablesCustomTableCollectionOutputWithContext(ctx context.Context) GetCustomTablesCustomTableCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomTablesCustomTableCollectionOutput)
}

// GetCustomTablesCustomTableCollectionArrayInput is an input type that accepts GetCustomTablesCustomTableCollectionArray and GetCustomTablesCustomTableCollectionArrayOutput values.
// You can construct a concrete instance of `GetCustomTablesCustomTableCollectionArrayInput` via:
//
//          GetCustomTablesCustomTableCollectionArray{ GetCustomTablesCustomTableCollectionArgs{...} }
type GetCustomTablesCustomTableCollectionArrayInput interface {
	pulumi.Input

	ToGetCustomTablesCustomTableCollectionArrayOutput() GetCustomTablesCustomTableCollectionArrayOutput
	ToGetCustomTablesCustomTableCollectionArrayOutputWithContext(context.Context) GetCustomTablesCustomTableCollectionArrayOutput
}

type GetCustomTablesCustomTableCollectionArray []GetCustomTablesCustomTableCollectionInput

func (GetCustomTablesCustomTableCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomTablesCustomTableCollection)(nil)).Elem()
}

func (i GetCustomTablesCustomTableCollectionArray) ToGetCustomTablesCustomTableCollectionArrayOutput() GetCustomTablesCustomTableCollectionArrayOutput {
	return i.ToGetCustomTablesCustomTableCollectionArrayOutputWithContext(context.Background())
}

func (i GetCustomTablesCustomTableCollectionArray) ToGetCustomTablesCustomTableCollectionArrayOutputWithContext(ctx context.Context) GetCustomTablesCustomTableCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomTablesCustomTableCollectionArrayOutput)
}

type GetCustomTablesCustomTableCollectionOutput struct{ *pulumi.OutputState }

func (GetCustomTablesCustomTableCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomTablesCustomTableCollection)(nil)).Elem()
}

func (o GetCustomTablesCustomTableCollectionOutput) ToGetCustomTablesCustomTableCollectionOutput() GetCustomTablesCustomTableCollectionOutput {
	return o
}

func (o GetCustomTablesCustomTableCollectionOutput) ToGetCustomTablesCustomTableCollectionOutputWithContext(ctx context.Context) GetCustomTablesCustomTableCollectionOutput {
	return o
}

func (o GetCustomTablesCustomTableCollectionOutput) Items() GetCustomTablesCustomTableCollectionItemArrayOutput {
	return o.ApplyT(func(v GetCustomTablesCustomTableCollection) []GetCustomTablesCustomTableCollectionItem {
		return v.Items
	}).(GetCustomTablesCustomTableCollectionItemArrayOutput)
}

type GetCustomTablesCustomTableCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetCustomTablesCustomTableCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomTablesCustomTableCollection)(nil)).Elem()
}

func (o GetCustomTablesCustomTableCollectionArrayOutput) ToGetCustomTablesCustomTableCollectionArrayOutput() GetCustomTablesCustomTableCollectionArrayOutput {
	return o
}

func (o GetCustomTablesCustomTableCollectionArrayOutput) ToGetCustomTablesCustomTableCollectionArrayOutputWithContext(ctx context.Context) GetCustomTablesCustomTableCollectionArrayOutput {
	return o
}

func (o GetCustomTablesCustomTableCollectionArrayOutput) Index(i pulumi.IntInput) GetCustomTablesCustomTableCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomTablesCustomTableCollection {
		return vs[0].([]GetCustomTablesCustomTableCollection)[vs[1].(int)]
	}).(GetCustomTablesCustomTableCollectionOutput)
}

type GetCustomTablesCustomTableCollectionItem struct {
	// The compartment ID in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// The custom table OCID.
	Id string `pulumi:"id"`
	// The custom table for Cost Analysis UI rendering.
	SavedCustomTables []GetCustomTablesCustomTableCollectionItemSavedCustomTable `pulumi:"savedCustomTables"`
	// The saved report ID in which to list resources.
	SavedReportId string `pulumi:"savedReportId"`
}

// GetCustomTablesCustomTableCollectionItemInput is an input type that accepts GetCustomTablesCustomTableCollectionItemArgs and GetCustomTablesCustomTableCollectionItemOutput values.
// You can construct a concrete instance of `GetCustomTablesCustomTableCollectionItemInput` via:
//
//          GetCustomTablesCustomTableCollectionItemArgs{...}
type GetCustomTablesCustomTableCollectionItemInput interface {
	pulumi.Input

	ToGetCustomTablesCustomTableCollectionItemOutput() GetCustomTablesCustomTableCollectionItemOutput
	ToGetCustomTablesCustomTableCollectionItemOutputWithContext(context.Context) GetCustomTablesCustomTableCollectionItemOutput
}

type GetCustomTablesCustomTableCollectionItemArgs struct {
	// The compartment ID in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The custom table OCID.
	Id pulumi.StringInput `pulumi:"id"`
	// The custom table for Cost Analysis UI rendering.
	SavedCustomTables GetCustomTablesCustomTableCollectionItemSavedCustomTableArrayInput `pulumi:"savedCustomTables"`
	// The saved report ID in which to list resources.
	SavedReportId pulumi.StringInput `pulumi:"savedReportId"`
}

func (GetCustomTablesCustomTableCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomTablesCustomTableCollectionItem)(nil)).Elem()
}

func (i GetCustomTablesCustomTableCollectionItemArgs) ToGetCustomTablesCustomTableCollectionItemOutput() GetCustomTablesCustomTableCollectionItemOutput {
	return i.ToGetCustomTablesCustomTableCollectionItemOutputWithContext(context.Background())
}

func (i GetCustomTablesCustomTableCollectionItemArgs) ToGetCustomTablesCustomTableCollectionItemOutputWithContext(ctx context.Context) GetCustomTablesCustomTableCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomTablesCustomTableCollectionItemOutput)
}

// GetCustomTablesCustomTableCollectionItemArrayInput is an input type that accepts GetCustomTablesCustomTableCollectionItemArray and GetCustomTablesCustomTableCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetCustomTablesCustomTableCollectionItemArrayInput` via:
//
//          GetCustomTablesCustomTableCollectionItemArray{ GetCustomTablesCustomTableCollectionItemArgs{...} }
type GetCustomTablesCustomTableCollectionItemArrayInput interface {
	pulumi.Input

	ToGetCustomTablesCustomTableCollectionItemArrayOutput() GetCustomTablesCustomTableCollectionItemArrayOutput
	ToGetCustomTablesCustomTableCollectionItemArrayOutputWithContext(context.Context) GetCustomTablesCustomTableCollectionItemArrayOutput
}

type GetCustomTablesCustomTableCollectionItemArray []GetCustomTablesCustomTableCollectionItemInput

func (GetCustomTablesCustomTableCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomTablesCustomTableCollectionItem)(nil)).Elem()
}

func (i GetCustomTablesCustomTableCollectionItemArray) ToGetCustomTablesCustomTableCollectionItemArrayOutput() GetCustomTablesCustomTableCollectionItemArrayOutput {
	return i.ToGetCustomTablesCustomTableCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetCustomTablesCustomTableCollectionItemArray) ToGetCustomTablesCustomTableCollectionItemArrayOutputWithContext(ctx context.Context) GetCustomTablesCustomTableCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomTablesCustomTableCollectionItemArrayOutput)
}

type GetCustomTablesCustomTableCollectionItemOutput struct{ *pulumi.OutputState }

func (GetCustomTablesCustomTableCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomTablesCustomTableCollectionItem)(nil)).Elem()
}

func (o GetCustomTablesCustomTableCollectionItemOutput) ToGetCustomTablesCustomTableCollectionItemOutput() GetCustomTablesCustomTableCollectionItemOutput {
	return o
}

func (o GetCustomTablesCustomTableCollectionItemOutput) ToGetCustomTablesCustomTableCollectionItemOutputWithContext(ctx context.Context) GetCustomTablesCustomTableCollectionItemOutput {
	return o
}

// The compartment ID in which to list resources.
func (o GetCustomTablesCustomTableCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomTablesCustomTableCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The custom table OCID.
func (o GetCustomTablesCustomTableCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomTablesCustomTableCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// The custom table for Cost Analysis UI rendering.
func (o GetCustomTablesCustomTableCollectionItemOutput) SavedCustomTables() GetCustomTablesCustomTableCollectionItemSavedCustomTableArrayOutput {
	return o.ApplyT(func(v GetCustomTablesCustomTableCollectionItem) []GetCustomTablesCustomTableCollectionItemSavedCustomTable {
		return v.SavedCustomTables
	}).(GetCustomTablesCustomTableCollectionItemSavedCustomTableArrayOutput)
}

// The saved report ID in which to list resources.
func (o GetCustomTablesCustomTableCollectionItemOutput) SavedReportId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomTablesCustomTableCollectionItem) string { return v.SavedReportId }).(pulumi.StringOutput)
}

type GetCustomTablesCustomTableCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetCustomTablesCustomTableCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomTablesCustomTableCollectionItem)(nil)).Elem()
}

func (o GetCustomTablesCustomTableCollectionItemArrayOutput) ToGetCustomTablesCustomTableCollectionItemArrayOutput() GetCustomTablesCustomTableCollectionItemArrayOutput {
	return o
}

func (o GetCustomTablesCustomTableCollectionItemArrayOutput) ToGetCustomTablesCustomTableCollectionItemArrayOutputWithContext(ctx context.Context) GetCustomTablesCustomTableCollectionItemArrayOutput {
	return o
}

func (o GetCustomTablesCustomTableCollectionItemArrayOutput) Index(i pulumi.IntInput) GetCustomTablesCustomTableCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomTablesCustomTableCollectionItem {
		return vs[0].([]GetCustomTablesCustomTableCollectionItem)[vs[1].(int)]
	}).(GetCustomTablesCustomTableCollectionItemOutput)
}

type GetCustomTablesCustomTableCollectionItemSavedCustomTable struct {
	// The column groupBy key list. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
	ColumnGroupBies []string `pulumi:"columnGroupBies"`
	// The compartment depth level.
	CompartmentDepth float64 `pulumi:"compartmentDepth"`
	// The name of the custom table.
	DisplayName string `pulumi:"displayName"`
	// GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only one tag in the list is supported. For example: `[{"namespace":"oracle", "key":"createdBy"]`
	GroupByTags []GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTag `pulumi:"groupByTags"`
	// The row groupBy key list. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
	RowGroupBies []string `pulumi:"rowGroupBies"`
	// The version of the custom table.
	Version float64 `pulumi:"version"`
}

// GetCustomTablesCustomTableCollectionItemSavedCustomTableInput is an input type that accepts GetCustomTablesCustomTableCollectionItemSavedCustomTableArgs and GetCustomTablesCustomTableCollectionItemSavedCustomTableOutput values.
// You can construct a concrete instance of `GetCustomTablesCustomTableCollectionItemSavedCustomTableInput` via:
//
//          GetCustomTablesCustomTableCollectionItemSavedCustomTableArgs{...}
type GetCustomTablesCustomTableCollectionItemSavedCustomTableInput interface {
	pulumi.Input

	ToGetCustomTablesCustomTableCollectionItemSavedCustomTableOutput() GetCustomTablesCustomTableCollectionItemSavedCustomTableOutput
	ToGetCustomTablesCustomTableCollectionItemSavedCustomTableOutputWithContext(context.Context) GetCustomTablesCustomTableCollectionItemSavedCustomTableOutput
}

type GetCustomTablesCustomTableCollectionItemSavedCustomTableArgs struct {
	// The column groupBy key list. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
	ColumnGroupBies pulumi.StringArrayInput `pulumi:"columnGroupBies"`
	// The compartment depth level.
	CompartmentDepth pulumi.Float64Input `pulumi:"compartmentDepth"`
	// The name of the custom table.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only one tag in the list is supported. For example: `[{"namespace":"oracle", "key":"createdBy"]`
	GroupByTags GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArrayInput `pulumi:"groupByTags"`
	// The row groupBy key list. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
	RowGroupBies pulumi.StringArrayInput `pulumi:"rowGroupBies"`
	// The version of the custom table.
	Version pulumi.Float64Input `pulumi:"version"`
}

func (GetCustomTablesCustomTableCollectionItemSavedCustomTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomTablesCustomTableCollectionItemSavedCustomTable)(nil)).Elem()
}

func (i GetCustomTablesCustomTableCollectionItemSavedCustomTableArgs) ToGetCustomTablesCustomTableCollectionItemSavedCustomTableOutput() GetCustomTablesCustomTableCollectionItemSavedCustomTableOutput {
	return i.ToGetCustomTablesCustomTableCollectionItemSavedCustomTableOutputWithContext(context.Background())
}

func (i GetCustomTablesCustomTableCollectionItemSavedCustomTableArgs) ToGetCustomTablesCustomTableCollectionItemSavedCustomTableOutputWithContext(ctx context.Context) GetCustomTablesCustomTableCollectionItemSavedCustomTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomTablesCustomTableCollectionItemSavedCustomTableOutput)
}

// GetCustomTablesCustomTableCollectionItemSavedCustomTableArrayInput is an input type that accepts GetCustomTablesCustomTableCollectionItemSavedCustomTableArray and GetCustomTablesCustomTableCollectionItemSavedCustomTableArrayOutput values.
// You can construct a concrete instance of `GetCustomTablesCustomTableCollectionItemSavedCustomTableArrayInput` via:
//
//          GetCustomTablesCustomTableCollectionItemSavedCustomTableArray{ GetCustomTablesCustomTableCollectionItemSavedCustomTableArgs{...} }
type GetCustomTablesCustomTableCollectionItemSavedCustomTableArrayInput interface {
	pulumi.Input

	ToGetCustomTablesCustomTableCollectionItemSavedCustomTableArrayOutput() GetCustomTablesCustomTableCollectionItemSavedCustomTableArrayOutput
	ToGetCustomTablesCustomTableCollectionItemSavedCustomTableArrayOutputWithContext(context.Context) GetCustomTablesCustomTableCollectionItemSavedCustomTableArrayOutput
}

type GetCustomTablesCustomTableCollectionItemSavedCustomTableArray []GetCustomTablesCustomTableCollectionItemSavedCustomTableInput

func (GetCustomTablesCustomTableCollectionItemSavedCustomTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomTablesCustomTableCollectionItemSavedCustomTable)(nil)).Elem()
}

func (i GetCustomTablesCustomTableCollectionItemSavedCustomTableArray) ToGetCustomTablesCustomTableCollectionItemSavedCustomTableArrayOutput() GetCustomTablesCustomTableCollectionItemSavedCustomTableArrayOutput {
	return i.ToGetCustomTablesCustomTableCollectionItemSavedCustomTableArrayOutputWithContext(context.Background())
}

func (i GetCustomTablesCustomTableCollectionItemSavedCustomTableArray) ToGetCustomTablesCustomTableCollectionItemSavedCustomTableArrayOutputWithContext(ctx context.Context) GetCustomTablesCustomTableCollectionItemSavedCustomTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomTablesCustomTableCollectionItemSavedCustomTableArrayOutput)
}

type GetCustomTablesCustomTableCollectionItemSavedCustomTableOutput struct{ *pulumi.OutputState }

func (GetCustomTablesCustomTableCollectionItemSavedCustomTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomTablesCustomTableCollectionItemSavedCustomTable)(nil)).Elem()
}

func (o GetCustomTablesCustomTableCollectionItemSavedCustomTableOutput) ToGetCustomTablesCustomTableCollectionItemSavedCustomTableOutput() GetCustomTablesCustomTableCollectionItemSavedCustomTableOutput {
	return o
}

func (o GetCustomTablesCustomTableCollectionItemSavedCustomTableOutput) ToGetCustomTablesCustomTableCollectionItemSavedCustomTableOutputWithContext(ctx context.Context) GetCustomTablesCustomTableCollectionItemSavedCustomTableOutput {
	return o
}

// The column groupBy key list. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
func (o GetCustomTablesCustomTableCollectionItemSavedCustomTableOutput) ColumnGroupBies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCustomTablesCustomTableCollectionItemSavedCustomTable) []string { return v.ColumnGroupBies }).(pulumi.StringArrayOutput)
}

// The compartment depth level.
func (o GetCustomTablesCustomTableCollectionItemSavedCustomTableOutput) CompartmentDepth() pulumi.Float64Output {
	return o.ApplyT(func(v GetCustomTablesCustomTableCollectionItemSavedCustomTable) float64 { return v.CompartmentDepth }).(pulumi.Float64Output)
}

// The name of the custom table.
func (o GetCustomTablesCustomTableCollectionItemSavedCustomTableOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomTablesCustomTableCollectionItemSavedCustomTable) string { return v.DisplayName }).(pulumi.StringOutput)
}

// GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only one tag in the list is supported. For example: `[{"namespace":"oracle", "key":"createdBy"]`
func (o GetCustomTablesCustomTableCollectionItemSavedCustomTableOutput) GroupByTags() GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArrayOutput {
	return o.ApplyT(func(v GetCustomTablesCustomTableCollectionItemSavedCustomTable) []GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTag {
		return v.GroupByTags
	}).(GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArrayOutput)
}

// The row groupBy key list. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
func (o GetCustomTablesCustomTableCollectionItemSavedCustomTableOutput) RowGroupBies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCustomTablesCustomTableCollectionItemSavedCustomTable) []string { return v.RowGroupBies }).(pulumi.StringArrayOutput)
}

// The version of the custom table.
func (o GetCustomTablesCustomTableCollectionItemSavedCustomTableOutput) Version() pulumi.Float64Output {
	return o.ApplyT(func(v GetCustomTablesCustomTableCollectionItemSavedCustomTable) float64 { return v.Version }).(pulumi.Float64Output)
}

type GetCustomTablesCustomTableCollectionItemSavedCustomTableArrayOutput struct{ *pulumi.OutputState }

func (GetCustomTablesCustomTableCollectionItemSavedCustomTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomTablesCustomTableCollectionItemSavedCustomTable)(nil)).Elem()
}

func (o GetCustomTablesCustomTableCollectionItemSavedCustomTableArrayOutput) ToGetCustomTablesCustomTableCollectionItemSavedCustomTableArrayOutput() GetCustomTablesCustomTableCollectionItemSavedCustomTableArrayOutput {
	return o
}

func (o GetCustomTablesCustomTableCollectionItemSavedCustomTableArrayOutput) ToGetCustomTablesCustomTableCollectionItemSavedCustomTableArrayOutputWithContext(ctx context.Context) GetCustomTablesCustomTableCollectionItemSavedCustomTableArrayOutput {
	return o
}

func (o GetCustomTablesCustomTableCollectionItemSavedCustomTableArrayOutput) Index(i pulumi.IntInput) GetCustomTablesCustomTableCollectionItemSavedCustomTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomTablesCustomTableCollectionItemSavedCustomTable {
		return vs[0].([]GetCustomTablesCustomTableCollectionItemSavedCustomTable)[vs[1].(int)]
	}).(GetCustomTablesCustomTableCollectionItemSavedCustomTableOutput)
}

type GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTag struct {
	// The tag key.
	Key string `pulumi:"key"`
	// The tag namespace.
	Namespace string `pulumi:"namespace"`
	// The tag value.
	Value string `pulumi:"value"`
}

// GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagInput is an input type that accepts GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArgs and GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagOutput values.
// You can construct a concrete instance of `GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagInput` via:
//
//          GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArgs{...}
type GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagInput interface {
	pulumi.Input

	ToGetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagOutput() GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagOutput
	ToGetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagOutputWithContext(context.Context) GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagOutput
}

type GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArgs struct {
	// The tag key.
	Key pulumi.StringInput `pulumi:"key"`
	// The tag namespace.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The tag value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTag)(nil)).Elem()
}

func (i GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArgs) ToGetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagOutput() GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagOutput {
	return i.ToGetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagOutputWithContext(context.Background())
}

func (i GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArgs) ToGetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagOutputWithContext(ctx context.Context) GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagOutput)
}

// GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArrayInput is an input type that accepts GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArray and GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArrayOutput values.
// You can construct a concrete instance of `GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArrayInput` via:
//
//          GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArray{ GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArgs{...} }
type GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArrayInput interface {
	pulumi.Input

	ToGetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArrayOutput() GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArrayOutput
	ToGetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArrayOutputWithContext(context.Context) GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArrayOutput
}

type GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArray []GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagInput

func (GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTag)(nil)).Elem()
}

func (i GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArray) ToGetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArrayOutput() GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArrayOutput {
	return i.ToGetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArrayOutputWithContext(context.Background())
}

func (i GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArray) ToGetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArrayOutputWithContext(ctx context.Context) GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArrayOutput)
}

type GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagOutput struct{ *pulumi.OutputState }

func (GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTag)(nil)).Elem()
}

func (o GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagOutput) ToGetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagOutput() GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagOutput {
	return o
}

func (o GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagOutput) ToGetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagOutputWithContext(ctx context.Context) GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagOutput {
	return o
}

// The tag key.
func (o GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTag) string { return v.Key }).(pulumi.StringOutput)
}

// The tag namespace.
func (o GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTag) string { return v.Namespace }).(pulumi.StringOutput)
}

// The tag value.
func (o GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArrayOutput struct{ *pulumi.OutputState }

func (GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTag)(nil)).Elem()
}

func (o GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArrayOutput) ToGetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArrayOutput() GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArrayOutput {
	return o
}

func (o GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArrayOutput) ToGetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArrayOutputWithContext(ctx context.Context) GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArrayOutput {
	return o
}

func (o GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArrayOutput) Index(i pulumi.IntInput) GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTag {
		return vs[0].([]GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTag)[vs[1].(int)]
	}).(GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagOutput)
}

type GetCustomTablesFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetCustomTablesFilterInput is an input type that accepts GetCustomTablesFilterArgs and GetCustomTablesFilterOutput values.
// You can construct a concrete instance of `GetCustomTablesFilterInput` via:
//
//          GetCustomTablesFilterArgs{...}
type GetCustomTablesFilterInput interface {
	pulumi.Input

	ToGetCustomTablesFilterOutput() GetCustomTablesFilterOutput
	ToGetCustomTablesFilterOutputWithContext(context.Context) GetCustomTablesFilterOutput
}

type GetCustomTablesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetCustomTablesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomTablesFilter)(nil)).Elem()
}

func (i GetCustomTablesFilterArgs) ToGetCustomTablesFilterOutput() GetCustomTablesFilterOutput {
	return i.ToGetCustomTablesFilterOutputWithContext(context.Background())
}

func (i GetCustomTablesFilterArgs) ToGetCustomTablesFilterOutputWithContext(ctx context.Context) GetCustomTablesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomTablesFilterOutput)
}

// GetCustomTablesFilterArrayInput is an input type that accepts GetCustomTablesFilterArray and GetCustomTablesFilterArrayOutput values.
// You can construct a concrete instance of `GetCustomTablesFilterArrayInput` via:
//
//          GetCustomTablesFilterArray{ GetCustomTablesFilterArgs{...} }
type GetCustomTablesFilterArrayInput interface {
	pulumi.Input

	ToGetCustomTablesFilterArrayOutput() GetCustomTablesFilterArrayOutput
	ToGetCustomTablesFilterArrayOutputWithContext(context.Context) GetCustomTablesFilterArrayOutput
}

type GetCustomTablesFilterArray []GetCustomTablesFilterInput

func (GetCustomTablesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomTablesFilter)(nil)).Elem()
}

func (i GetCustomTablesFilterArray) ToGetCustomTablesFilterArrayOutput() GetCustomTablesFilterArrayOutput {
	return i.ToGetCustomTablesFilterArrayOutputWithContext(context.Background())
}

func (i GetCustomTablesFilterArray) ToGetCustomTablesFilterArrayOutputWithContext(ctx context.Context) GetCustomTablesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomTablesFilterArrayOutput)
}

type GetCustomTablesFilterOutput struct{ *pulumi.OutputState }

func (GetCustomTablesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomTablesFilter)(nil)).Elem()
}

func (o GetCustomTablesFilterOutput) ToGetCustomTablesFilterOutput() GetCustomTablesFilterOutput {
	return o
}

func (o GetCustomTablesFilterOutput) ToGetCustomTablesFilterOutputWithContext(ctx context.Context) GetCustomTablesFilterOutput {
	return o
}

func (o GetCustomTablesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomTablesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetCustomTablesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCustomTablesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetCustomTablesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCustomTablesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetCustomTablesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetCustomTablesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomTablesFilter)(nil)).Elem()
}

func (o GetCustomTablesFilterArrayOutput) ToGetCustomTablesFilterArrayOutput() GetCustomTablesFilterArrayOutput {
	return o
}

func (o GetCustomTablesFilterArrayOutput) ToGetCustomTablesFilterArrayOutputWithContext(ctx context.Context) GetCustomTablesFilterArrayOutput {
	return o
}

func (o GetCustomTablesFilterArrayOutput) Index(i pulumi.IntInput) GetCustomTablesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomTablesFilter {
		return vs[0].([]GetCustomTablesFilter)[vs[1].(int)]
	}).(GetCustomTablesFilterOutput)
}

type GetQueriesFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetQueriesFilterInput is an input type that accepts GetQueriesFilterArgs and GetQueriesFilterOutput values.
// You can construct a concrete instance of `GetQueriesFilterInput` via:
//
//          GetQueriesFilterArgs{...}
type GetQueriesFilterInput interface {
	pulumi.Input

	ToGetQueriesFilterOutput() GetQueriesFilterOutput
	ToGetQueriesFilterOutputWithContext(context.Context) GetQueriesFilterOutput
}

type GetQueriesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetQueriesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueriesFilter)(nil)).Elem()
}

func (i GetQueriesFilterArgs) ToGetQueriesFilterOutput() GetQueriesFilterOutput {
	return i.ToGetQueriesFilterOutputWithContext(context.Background())
}

func (i GetQueriesFilterArgs) ToGetQueriesFilterOutputWithContext(ctx context.Context) GetQueriesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueriesFilterOutput)
}

// GetQueriesFilterArrayInput is an input type that accepts GetQueriesFilterArray and GetQueriesFilterArrayOutput values.
// You can construct a concrete instance of `GetQueriesFilterArrayInput` via:
//
//          GetQueriesFilterArray{ GetQueriesFilterArgs{...} }
type GetQueriesFilterArrayInput interface {
	pulumi.Input

	ToGetQueriesFilterArrayOutput() GetQueriesFilterArrayOutput
	ToGetQueriesFilterArrayOutputWithContext(context.Context) GetQueriesFilterArrayOutput
}

type GetQueriesFilterArray []GetQueriesFilterInput

func (GetQueriesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueriesFilter)(nil)).Elem()
}

func (i GetQueriesFilterArray) ToGetQueriesFilterArrayOutput() GetQueriesFilterArrayOutput {
	return i.ToGetQueriesFilterArrayOutputWithContext(context.Background())
}

func (i GetQueriesFilterArray) ToGetQueriesFilterArrayOutputWithContext(ctx context.Context) GetQueriesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueriesFilterArrayOutput)
}

type GetQueriesFilterOutput struct{ *pulumi.OutputState }

func (GetQueriesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueriesFilter)(nil)).Elem()
}

func (o GetQueriesFilterOutput) ToGetQueriesFilterOutput() GetQueriesFilterOutput {
	return o
}

func (o GetQueriesFilterOutput) ToGetQueriesFilterOutputWithContext(ctx context.Context) GetQueriesFilterOutput {
	return o
}

func (o GetQueriesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueriesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetQueriesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetQueriesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetQueriesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetQueriesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetQueriesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetQueriesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueriesFilter)(nil)).Elem()
}

func (o GetQueriesFilterArrayOutput) ToGetQueriesFilterArrayOutput() GetQueriesFilterArrayOutput {
	return o
}

func (o GetQueriesFilterArrayOutput) ToGetQueriesFilterArrayOutputWithContext(ctx context.Context) GetQueriesFilterArrayOutput {
	return o
}

func (o GetQueriesFilterArrayOutput) Index(i pulumi.IntInput) GetQueriesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQueriesFilter {
		return vs[0].([]GetQueriesFilter)[vs[1].(int)]
	}).(GetQueriesFilterOutput)
}

type GetQueriesQueryCollection struct {
	Items []GetQueriesQueryCollectionItem `pulumi:"items"`
}

// GetQueriesQueryCollectionInput is an input type that accepts GetQueriesQueryCollectionArgs and GetQueriesQueryCollectionOutput values.
// You can construct a concrete instance of `GetQueriesQueryCollectionInput` via:
//
//          GetQueriesQueryCollectionArgs{...}
type GetQueriesQueryCollectionInput interface {
	pulumi.Input

	ToGetQueriesQueryCollectionOutput() GetQueriesQueryCollectionOutput
	ToGetQueriesQueryCollectionOutputWithContext(context.Context) GetQueriesQueryCollectionOutput
}

type GetQueriesQueryCollectionArgs struct {
	Items GetQueriesQueryCollectionItemArrayInput `pulumi:"items"`
}

func (GetQueriesQueryCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueriesQueryCollection)(nil)).Elem()
}

func (i GetQueriesQueryCollectionArgs) ToGetQueriesQueryCollectionOutput() GetQueriesQueryCollectionOutput {
	return i.ToGetQueriesQueryCollectionOutputWithContext(context.Background())
}

func (i GetQueriesQueryCollectionArgs) ToGetQueriesQueryCollectionOutputWithContext(ctx context.Context) GetQueriesQueryCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueriesQueryCollectionOutput)
}

// GetQueriesQueryCollectionArrayInput is an input type that accepts GetQueriesQueryCollectionArray and GetQueriesQueryCollectionArrayOutput values.
// You can construct a concrete instance of `GetQueriesQueryCollectionArrayInput` via:
//
//          GetQueriesQueryCollectionArray{ GetQueriesQueryCollectionArgs{...} }
type GetQueriesQueryCollectionArrayInput interface {
	pulumi.Input

	ToGetQueriesQueryCollectionArrayOutput() GetQueriesQueryCollectionArrayOutput
	ToGetQueriesQueryCollectionArrayOutputWithContext(context.Context) GetQueriesQueryCollectionArrayOutput
}

type GetQueriesQueryCollectionArray []GetQueriesQueryCollectionInput

func (GetQueriesQueryCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueriesQueryCollection)(nil)).Elem()
}

func (i GetQueriesQueryCollectionArray) ToGetQueriesQueryCollectionArrayOutput() GetQueriesQueryCollectionArrayOutput {
	return i.ToGetQueriesQueryCollectionArrayOutputWithContext(context.Background())
}

func (i GetQueriesQueryCollectionArray) ToGetQueriesQueryCollectionArrayOutputWithContext(ctx context.Context) GetQueriesQueryCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueriesQueryCollectionArrayOutput)
}

type GetQueriesQueryCollectionOutput struct{ *pulumi.OutputState }

func (GetQueriesQueryCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueriesQueryCollection)(nil)).Elem()
}

func (o GetQueriesQueryCollectionOutput) ToGetQueriesQueryCollectionOutput() GetQueriesQueryCollectionOutput {
	return o
}

func (o GetQueriesQueryCollectionOutput) ToGetQueriesQueryCollectionOutputWithContext(ctx context.Context) GetQueriesQueryCollectionOutput {
	return o
}

func (o GetQueriesQueryCollectionOutput) Items() GetQueriesQueryCollectionItemArrayOutput {
	return o.ApplyT(func(v GetQueriesQueryCollection) []GetQueriesQueryCollectionItem { return v.Items }).(GetQueriesQueryCollectionItemArrayOutput)
}

type GetQueriesQueryCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetQueriesQueryCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueriesQueryCollection)(nil)).Elem()
}

func (o GetQueriesQueryCollectionArrayOutput) ToGetQueriesQueryCollectionArrayOutput() GetQueriesQueryCollectionArrayOutput {
	return o
}

func (o GetQueriesQueryCollectionArrayOutput) ToGetQueriesQueryCollectionArrayOutputWithContext(ctx context.Context) GetQueriesQueryCollectionArrayOutput {
	return o
}

func (o GetQueriesQueryCollectionArrayOutput) Index(i pulumi.IntInput) GetQueriesQueryCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQueriesQueryCollection {
		return vs[0].([]GetQueriesQueryCollection)[vs[1].(int)]
	}).(GetQueriesQueryCollectionOutput)
}

type GetQueriesQueryCollectionItem struct {
	// The compartment ID in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// The query OCID.
	Id string `pulumi:"id"`
	// The common fields for queries.
	QueryDefinitions []GetQueriesQueryCollectionItemQueryDefinition `pulumi:"queryDefinitions"`
}

// GetQueriesQueryCollectionItemInput is an input type that accepts GetQueriesQueryCollectionItemArgs and GetQueriesQueryCollectionItemOutput values.
// You can construct a concrete instance of `GetQueriesQueryCollectionItemInput` via:
//
//          GetQueriesQueryCollectionItemArgs{...}
type GetQueriesQueryCollectionItemInput interface {
	pulumi.Input

	ToGetQueriesQueryCollectionItemOutput() GetQueriesQueryCollectionItemOutput
	ToGetQueriesQueryCollectionItemOutputWithContext(context.Context) GetQueriesQueryCollectionItemOutput
}

type GetQueriesQueryCollectionItemArgs struct {
	// The compartment ID in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The query OCID.
	Id pulumi.StringInput `pulumi:"id"`
	// The common fields for queries.
	QueryDefinitions GetQueriesQueryCollectionItemQueryDefinitionArrayInput `pulumi:"queryDefinitions"`
}

func (GetQueriesQueryCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueriesQueryCollectionItem)(nil)).Elem()
}

func (i GetQueriesQueryCollectionItemArgs) ToGetQueriesQueryCollectionItemOutput() GetQueriesQueryCollectionItemOutput {
	return i.ToGetQueriesQueryCollectionItemOutputWithContext(context.Background())
}

func (i GetQueriesQueryCollectionItemArgs) ToGetQueriesQueryCollectionItemOutputWithContext(ctx context.Context) GetQueriesQueryCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueriesQueryCollectionItemOutput)
}

// GetQueriesQueryCollectionItemArrayInput is an input type that accepts GetQueriesQueryCollectionItemArray and GetQueriesQueryCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetQueriesQueryCollectionItemArrayInput` via:
//
//          GetQueriesQueryCollectionItemArray{ GetQueriesQueryCollectionItemArgs{...} }
type GetQueriesQueryCollectionItemArrayInput interface {
	pulumi.Input

	ToGetQueriesQueryCollectionItemArrayOutput() GetQueriesQueryCollectionItemArrayOutput
	ToGetQueriesQueryCollectionItemArrayOutputWithContext(context.Context) GetQueriesQueryCollectionItemArrayOutput
}

type GetQueriesQueryCollectionItemArray []GetQueriesQueryCollectionItemInput

func (GetQueriesQueryCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueriesQueryCollectionItem)(nil)).Elem()
}

func (i GetQueriesQueryCollectionItemArray) ToGetQueriesQueryCollectionItemArrayOutput() GetQueriesQueryCollectionItemArrayOutput {
	return i.ToGetQueriesQueryCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetQueriesQueryCollectionItemArray) ToGetQueriesQueryCollectionItemArrayOutputWithContext(ctx context.Context) GetQueriesQueryCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueriesQueryCollectionItemArrayOutput)
}

type GetQueriesQueryCollectionItemOutput struct{ *pulumi.OutputState }

func (GetQueriesQueryCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueriesQueryCollectionItem)(nil)).Elem()
}

func (o GetQueriesQueryCollectionItemOutput) ToGetQueriesQueryCollectionItemOutput() GetQueriesQueryCollectionItemOutput {
	return o
}

func (o GetQueriesQueryCollectionItemOutput) ToGetQueriesQueryCollectionItemOutputWithContext(ctx context.Context) GetQueriesQueryCollectionItemOutput {
	return o
}

// The compartment ID in which to list resources.
func (o GetQueriesQueryCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueriesQueryCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The query OCID.
func (o GetQueriesQueryCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueriesQueryCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// The common fields for queries.
func (o GetQueriesQueryCollectionItemOutput) QueryDefinitions() GetQueriesQueryCollectionItemQueryDefinitionArrayOutput {
	return o.ApplyT(func(v GetQueriesQueryCollectionItem) []GetQueriesQueryCollectionItemQueryDefinition {
		return v.QueryDefinitions
	}).(GetQueriesQueryCollectionItemQueryDefinitionArrayOutput)
}

type GetQueriesQueryCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetQueriesQueryCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueriesQueryCollectionItem)(nil)).Elem()
}

func (o GetQueriesQueryCollectionItemArrayOutput) ToGetQueriesQueryCollectionItemArrayOutput() GetQueriesQueryCollectionItemArrayOutput {
	return o
}

func (o GetQueriesQueryCollectionItemArrayOutput) ToGetQueriesQueryCollectionItemArrayOutputWithContext(ctx context.Context) GetQueriesQueryCollectionItemArrayOutput {
	return o
}

func (o GetQueriesQueryCollectionItemArrayOutput) Index(i pulumi.IntInput) GetQueriesQueryCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQueriesQueryCollectionItem {
		return vs[0].([]GetQueriesQueryCollectionItem)[vs[1].(int)]
	}).(GetQueriesQueryCollectionItemOutput)
}

type GetQueriesQueryCollectionItemQueryDefinition struct {
	// The common fields for Cost Analysis UI rendering.
	CostAnalysisUis []GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUi `pulumi:"costAnalysisUis"`
	// The query display name. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// The request of the generated Cost Analysis report.
	ReportQueries []GetQueriesQueryCollectionItemQueryDefinitionReportQuery `pulumi:"reportQueries"`
	// The saved query version.
	Version float64 `pulumi:"version"`
}

// GetQueriesQueryCollectionItemQueryDefinitionInput is an input type that accepts GetQueriesQueryCollectionItemQueryDefinitionArgs and GetQueriesQueryCollectionItemQueryDefinitionOutput values.
// You can construct a concrete instance of `GetQueriesQueryCollectionItemQueryDefinitionInput` via:
//
//          GetQueriesQueryCollectionItemQueryDefinitionArgs{...}
type GetQueriesQueryCollectionItemQueryDefinitionInput interface {
	pulumi.Input

	ToGetQueriesQueryCollectionItemQueryDefinitionOutput() GetQueriesQueryCollectionItemQueryDefinitionOutput
	ToGetQueriesQueryCollectionItemQueryDefinitionOutputWithContext(context.Context) GetQueriesQueryCollectionItemQueryDefinitionOutput
}

type GetQueriesQueryCollectionItemQueryDefinitionArgs struct {
	// The common fields for Cost Analysis UI rendering.
	CostAnalysisUis GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArrayInput `pulumi:"costAnalysisUis"`
	// The query display name. Avoid entering confidential information.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The request of the generated Cost Analysis report.
	ReportQueries GetQueriesQueryCollectionItemQueryDefinitionReportQueryArrayInput `pulumi:"reportQueries"`
	// The saved query version.
	Version pulumi.Float64Input `pulumi:"version"`
}

func (GetQueriesQueryCollectionItemQueryDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueriesQueryCollectionItemQueryDefinition)(nil)).Elem()
}

func (i GetQueriesQueryCollectionItemQueryDefinitionArgs) ToGetQueriesQueryCollectionItemQueryDefinitionOutput() GetQueriesQueryCollectionItemQueryDefinitionOutput {
	return i.ToGetQueriesQueryCollectionItemQueryDefinitionOutputWithContext(context.Background())
}

func (i GetQueriesQueryCollectionItemQueryDefinitionArgs) ToGetQueriesQueryCollectionItemQueryDefinitionOutputWithContext(ctx context.Context) GetQueriesQueryCollectionItemQueryDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueriesQueryCollectionItemQueryDefinitionOutput)
}

// GetQueriesQueryCollectionItemQueryDefinitionArrayInput is an input type that accepts GetQueriesQueryCollectionItemQueryDefinitionArray and GetQueriesQueryCollectionItemQueryDefinitionArrayOutput values.
// You can construct a concrete instance of `GetQueriesQueryCollectionItemQueryDefinitionArrayInput` via:
//
//          GetQueriesQueryCollectionItemQueryDefinitionArray{ GetQueriesQueryCollectionItemQueryDefinitionArgs{...} }
type GetQueriesQueryCollectionItemQueryDefinitionArrayInput interface {
	pulumi.Input

	ToGetQueriesQueryCollectionItemQueryDefinitionArrayOutput() GetQueriesQueryCollectionItemQueryDefinitionArrayOutput
	ToGetQueriesQueryCollectionItemQueryDefinitionArrayOutputWithContext(context.Context) GetQueriesQueryCollectionItemQueryDefinitionArrayOutput
}

type GetQueriesQueryCollectionItemQueryDefinitionArray []GetQueriesQueryCollectionItemQueryDefinitionInput

func (GetQueriesQueryCollectionItemQueryDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueriesQueryCollectionItemQueryDefinition)(nil)).Elem()
}

func (i GetQueriesQueryCollectionItemQueryDefinitionArray) ToGetQueriesQueryCollectionItemQueryDefinitionArrayOutput() GetQueriesQueryCollectionItemQueryDefinitionArrayOutput {
	return i.ToGetQueriesQueryCollectionItemQueryDefinitionArrayOutputWithContext(context.Background())
}

func (i GetQueriesQueryCollectionItemQueryDefinitionArray) ToGetQueriesQueryCollectionItemQueryDefinitionArrayOutputWithContext(ctx context.Context) GetQueriesQueryCollectionItemQueryDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueriesQueryCollectionItemQueryDefinitionArrayOutput)
}

type GetQueriesQueryCollectionItemQueryDefinitionOutput struct{ *pulumi.OutputState }

func (GetQueriesQueryCollectionItemQueryDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueriesQueryCollectionItemQueryDefinition)(nil)).Elem()
}

func (o GetQueriesQueryCollectionItemQueryDefinitionOutput) ToGetQueriesQueryCollectionItemQueryDefinitionOutput() GetQueriesQueryCollectionItemQueryDefinitionOutput {
	return o
}

func (o GetQueriesQueryCollectionItemQueryDefinitionOutput) ToGetQueriesQueryCollectionItemQueryDefinitionOutputWithContext(ctx context.Context) GetQueriesQueryCollectionItemQueryDefinitionOutput {
	return o
}

// The common fields for Cost Analysis UI rendering.
func (o GetQueriesQueryCollectionItemQueryDefinitionOutput) CostAnalysisUis() GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArrayOutput {
	return o.ApplyT(func(v GetQueriesQueryCollectionItemQueryDefinition) []GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUi {
		return v.CostAnalysisUis
	}).(GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArrayOutput)
}

// The query display name. Avoid entering confidential information.
func (o GetQueriesQueryCollectionItemQueryDefinitionOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueriesQueryCollectionItemQueryDefinition) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The request of the generated Cost Analysis report.
func (o GetQueriesQueryCollectionItemQueryDefinitionOutput) ReportQueries() GetQueriesQueryCollectionItemQueryDefinitionReportQueryArrayOutput {
	return o.ApplyT(func(v GetQueriesQueryCollectionItemQueryDefinition) []GetQueriesQueryCollectionItemQueryDefinitionReportQuery {
		return v.ReportQueries
	}).(GetQueriesQueryCollectionItemQueryDefinitionReportQueryArrayOutput)
}

// The saved query version.
func (o GetQueriesQueryCollectionItemQueryDefinitionOutput) Version() pulumi.Float64Output {
	return o.ApplyT(func(v GetQueriesQueryCollectionItemQueryDefinition) float64 { return v.Version }).(pulumi.Float64Output)
}

type GetQueriesQueryCollectionItemQueryDefinitionArrayOutput struct{ *pulumi.OutputState }

func (GetQueriesQueryCollectionItemQueryDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueriesQueryCollectionItemQueryDefinition)(nil)).Elem()
}

func (o GetQueriesQueryCollectionItemQueryDefinitionArrayOutput) ToGetQueriesQueryCollectionItemQueryDefinitionArrayOutput() GetQueriesQueryCollectionItemQueryDefinitionArrayOutput {
	return o
}

func (o GetQueriesQueryCollectionItemQueryDefinitionArrayOutput) ToGetQueriesQueryCollectionItemQueryDefinitionArrayOutputWithContext(ctx context.Context) GetQueriesQueryCollectionItemQueryDefinitionArrayOutput {
	return o
}

func (o GetQueriesQueryCollectionItemQueryDefinitionArrayOutput) Index(i pulumi.IntInput) GetQueriesQueryCollectionItemQueryDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQueriesQueryCollectionItemQueryDefinition {
		return vs[0].([]GetQueriesQueryCollectionItemQueryDefinition)[vs[1].(int)]
	}).(GetQueriesQueryCollectionItemQueryDefinitionOutput)
}

type GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUi struct {
	// The graph type.
	Graph string `pulumi:"graph"`
	// A cumulative graph.
	IsCumulativeGraph bool `pulumi:"isCumulativeGraph"`
}

// GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiInput is an input type that accepts GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArgs and GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiOutput values.
// You can construct a concrete instance of `GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiInput` via:
//
//          GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArgs{...}
type GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiInput interface {
	pulumi.Input

	ToGetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiOutput() GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiOutput
	ToGetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiOutputWithContext(context.Context) GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiOutput
}

type GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArgs struct {
	// The graph type.
	Graph pulumi.StringInput `pulumi:"graph"`
	// A cumulative graph.
	IsCumulativeGraph pulumi.BoolInput `pulumi:"isCumulativeGraph"`
}

func (GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUi)(nil)).Elem()
}

func (i GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArgs) ToGetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiOutput() GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiOutput {
	return i.ToGetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiOutputWithContext(context.Background())
}

func (i GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArgs) ToGetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiOutputWithContext(ctx context.Context) GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiOutput)
}

// GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArrayInput is an input type that accepts GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArray and GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArrayOutput values.
// You can construct a concrete instance of `GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArrayInput` via:
//
//          GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArray{ GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArgs{...} }
type GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArrayInput interface {
	pulumi.Input

	ToGetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArrayOutput() GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArrayOutput
	ToGetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArrayOutputWithContext(context.Context) GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArrayOutput
}

type GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArray []GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiInput

func (GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUi)(nil)).Elem()
}

func (i GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArray) ToGetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArrayOutput() GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArrayOutput {
	return i.ToGetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArrayOutputWithContext(context.Background())
}

func (i GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArray) ToGetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArrayOutputWithContext(ctx context.Context) GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArrayOutput)
}

type GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiOutput struct{ *pulumi.OutputState }

func (GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUi)(nil)).Elem()
}

func (o GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiOutput) ToGetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiOutput() GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiOutput {
	return o
}

func (o GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiOutput) ToGetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiOutputWithContext(ctx context.Context) GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiOutput {
	return o
}

// The graph type.
func (o GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiOutput) Graph() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUi) string { return v.Graph }).(pulumi.StringOutput)
}

// A cumulative graph.
func (o GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiOutput) IsCumulativeGraph() pulumi.BoolOutput {
	return o.ApplyT(func(v GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUi) bool { return v.IsCumulativeGraph }).(pulumi.BoolOutput)
}

type GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArrayOutput struct{ *pulumi.OutputState }

func (GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUi)(nil)).Elem()
}

func (o GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArrayOutput) ToGetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArrayOutput() GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArrayOutput {
	return o
}

func (o GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArrayOutput) ToGetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArrayOutputWithContext(ctx context.Context) GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArrayOutput {
	return o
}

func (o GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArrayOutput) Index(i pulumi.IntInput) GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUi {
		return vs[0].([]GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUi)[vs[1].(int)]
	}).(GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiOutput)
}

type GetQueriesQueryCollectionItemQueryDefinitionReportQuery struct {
	// The compartment depth level.
	CompartmentDepth float64 `pulumi:"compartmentDepth"`
	// The UI date range, for example, LAST_THREE_MONTHS. Conflicts with timeUsageStarted and timeUsageEnded.
	DateRangeName string `pulumi:"dateRangeName"`
	Filter        string `pulumi:"filter"`
	// Forecast configuration of usage/cost.
	Forecasts []GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecast `pulumi:"forecasts"`
	// The usage granularity. HOURLY - Hourly data aggregation. DAILY - Daily data aggregation. MONTHLY - Monthly data aggregation. TOTAL - Not yet supported.
	Granularity string `pulumi:"granularity"`
	// Aggregate the result by. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
	GroupBies []string `pulumi:"groupBies"`
	// GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only supports one tag in the list. For example: `[{"namespace":"oracle", "key":"createdBy"]`
	GroupByTags []GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTag `pulumi:"groupByTags"`
	// Whether aggregated by time. If isAggregateByTime is true, all usage/cost over the query time period will be added up.
	IsAggregateByTime bool `pulumi:"isAggregateByTime"`
	// The query usage type. COST by default if it is missing. Usage - Query the usage data. Cost - Query the cost/billing data. Credit - Query the credit adjustments data. ExpiredCredit - Query the expired credits data AllCredit - Query the credit adjustments and expired credit
	QueryType string `pulumi:"queryType"`
	// Tenant ID.
	TenantId string `pulumi:"tenantId"`
	// The usage end time.
	TimeUsageEnded string `pulumi:"timeUsageEnded"`
	// The usage start time.
	TimeUsageStarted string `pulumi:"timeUsageStarted"`
}

// GetQueriesQueryCollectionItemQueryDefinitionReportQueryInput is an input type that accepts GetQueriesQueryCollectionItemQueryDefinitionReportQueryArgs and GetQueriesQueryCollectionItemQueryDefinitionReportQueryOutput values.
// You can construct a concrete instance of `GetQueriesQueryCollectionItemQueryDefinitionReportQueryInput` via:
//
//          GetQueriesQueryCollectionItemQueryDefinitionReportQueryArgs{...}
type GetQueriesQueryCollectionItemQueryDefinitionReportQueryInput interface {
	pulumi.Input

	ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryOutput() GetQueriesQueryCollectionItemQueryDefinitionReportQueryOutput
	ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryOutputWithContext(context.Context) GetQueriesQueryCollectionItemQueryDefinitionReportQueryOutput
}

type GetQueriesQueryCollectionItemQueryDefinitionReportQueryArgs struct {
	// The compartment depth level.
	CompartmentDepth pulumi.Float64Input `pulumi:"compartmentDepth"`
	// The UI date range, for example, LAST_THREE_MONTHS. Conflicts with timeUsageStarted and timeUsageEnded.
	DateRangeName pulumi.StringInput `pulumi:"dateRangeName"`
	Filter        pulumi.StringInput `pulumi:"filter"`
	// Forecast configuration of usage/cost.
	Forecasts GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArrayInput `pulumi:"forecasts"`
	// The usage granularity. HOURLY - Hourly data aggregation. DAILY - Daily data aggregation. MONTHLY - Monthly data aggregation. TOTAL - Not yet supported.
	Granularity pulumi.StringInput `pulumi:"granularity"`
	// Aggregate the result by. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
	GroupBies pulumi.StringArrayInput `pulumi:"groupBies"`
	// GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only supports one tag in the list. For example: `[{"namespace":"oracle", "key":"createdBy"]`
	GroupByTags GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArrayInput `pulumi:"groupByTags"`
	// Whether aggregated by time. If isAggregateByTime is true, all usage/cost over the query time period will be added up.
	IsAggregateByTime pulumi.BoolInput `pulumi:"isAggregateByTime"`
	// The query usage type. COST by default if it is missing. Usage - Query the usage data. Cost - Query the cost/billing data. Credit - Query the credit adjustments data. ExpiredCredit - Query the expired credits data AllCredit - Query the credit adjustments and expired credit
	QueryType pulumi.StringInput `pulumi:"queryType"`
	// Tenant ID.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The usage end time.
	TimeUsageEnded pulumi.StringInput `pulumi:"timeUsageEnded"`
	// The usage start time.
	TimeUsageStarted pulumi.StringInput `pulumi:"timeUsageStarted"`
}

func (GetQueriesQueryCollectionItemQueryDefinitionReportQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueriesQueryCollectionItemQueryDefinitionReportQuery)(nil)).Elem()
}

func (i GetQueriesQueryCollectionItemQueryDefinitionReportQueryArgs) ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryOutput() GetQueriesQueryCollectionItemQueryDefinitionReportQueryOutput {
	return i.ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryOutputWithContext(context.Background())
}

func (i GetQueriesQueryCollectionItemQueryDefinitionReportQueryArgs) ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryOutputWithContext(ctx context.Context) GetQueriesQueryCollectionItemQueryDefinitionReportQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueriesQueryCollectionItemQueryDefinitionReportQueryOutput)
}

// GetQueriesQueryCollectionItemQueryDefinitionReportQueryArrayInput is an input type that accepts GetQueriesQueryCollectionItemQueryDefinitionReportQueryArray and GetQueriesQueryCollectionItemQueryDefinitionReportQueryArrayOutput values.
// You can construct a concrete instance of `GetQueriesQueryCollectionItemQueryDefinitionReportQueryArrayInput` via:
//
//          GetQueriesQueryCollectionItemQueryDefinitionReportQueryArray{ GetQueriesQueryCollectionItemQueryDefinitionReportQueryArgs{...} }
type GetQueriesQueryCollectionItemQueryDefinitionReportQueryArrayInput interface {
	pulumi.Input

	ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryArrayOutput() GetQueriesQueryCollectionItemQueryDefinitionReportQueryArrayOutput
	ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryArrayOutputWithContext(context.Context) GetQueriesQueryCollectionItemQueryDefinitionReportQueryArrayOutput
}

type GetQueriesQueryCollectionItemQueryDefinitionReportQueryArray []GetQueriesQueryCollectionItemQueryDefinitionReportQueryInput

func (GetQueriesQueryCollectionItemQueryDefinitionReportQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueriesQueryCollectionItemQueryDefinitionReportQuery)(nil)).Elem()
}

func (i GetQueriesQueryCollectionItemQueryDefinitionReportQueryArray) ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryArrayOutput() GetQueriesQueryCollectionItemQueryDefinitionReportQueryArrayOutput {
	return i.ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryArrayOutputWithContext(context.Background())
}

func (i GetQueriesQueryCollectionItemQueryDefinitionReportQueryArray) ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryArrayOutputWithContext(ctx context.Context) GetQueriesQueryCollectionItemQueryDefinitionReportQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueriesQueryCollectionItemQueryDefinitionReportQueryArrayOutput)
}

type GetQueriesQueryCollectionItemQueryDefinitionReportQueryOutput struct{ *pulumi.OutputState }

func (GetQueriesQueryCollectionItemQueryDefinitionReportQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueriesQueryCollectionItemQueryDefinitionReportQuery)(nil)).Elem()
}

func (o GetQueriesQueryCollectionItemQueryDefinitionReportQueryOutput) ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryOutput() GetQueriesQueryCollectionItemQueryDefinitionReportQueryOutput {
	return o
}

func (o GetQueriesQueryCollectionItemQueryDefinitionReportQueryOutput) ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryOutputWithContext(ctx context.Context) GetQueriesQueryCollectionItemQueryDefinitionReportQueryOutput {
	return o
}

// The compartment depth level.
func (o GetQueriesQueryCollectionItemQueryDefinitionReportQueryOutput) CompartmentDepth() pulumi.Float64Output {
	return o.ApplyT(func(v GetQueriesQueryCollectionItemQueryDefinitionReportQuery) float64 { return v.CompartmentDepth }).(pulumi.Float64Output)
}

// The UI date range, for example, LAST_THREE_MONTHS. Conflicts with timeUsageStarted and timeUsageEnded.
func (o GetQueriesQueryCollectionItemQueryDefinitionReportQueryOutput) DateRangeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueriesQueryCollectionItemQueryDefinitionReportQuery) string { return v.DateRangeName }).(pulumi.StringOutput)
}

func (o GetQueriesQueryCollectionItemQueryDefinitionReportQueryOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueriesQueryCollectionItemQueryDefinitionReportQuery) string { return v.Filter }).(pulumi.StringOutput)
}

// Forecast configuration of usage/cost.
func (o GetQueriesQueryCollectionItemQueryDefinitionReportQueryOutput) Forecasts() GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArrayOutput {
	return o.ApplyT(func(v GetQueriesQueryCollectionItemQueryDefinitionReportQuery) []GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecast {
		return v.Forecasts
	}).(GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArrayOutput)
}

// The usage granularity. HOURLY - Hourly data aggregation. DAILY - Daily data aggregation. MONTHLY - Monthly data aggregation. TOTAL - Not yet supported.
func (o GetQueriesQueryCollectionItemQueryDefinitionReportQueryOutput) Granularity() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueriesQueryCollectionItemQueryDefinitionReportQuery) string { return v.Granularity }).(pulumi.StringOutput)
}

// Aggregate the result by. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
func (o GetQueriesQueryCollectionItemQueryDefinitionReportQueryOutput) GroupBies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetQueriesQueryCollectionItemQueryDefinitionReportQuery) []string { return v.GroupBies }).(pulumi.StringArrayOutput)
}

// GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only supports one tag in the list. For example: `[{"namespace":"oracle", "key":"createdBy"]`
func (o GetQueriesQueryCollectionItemQueryDefinitionReportQueryOutput) GroupByTags() GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArrayOutput {
	return o.ApplyT(func(v GetQueriesQueryCollectionItemQueryDefinitionReportQuery) []GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTag {
		return v.GroupByTags
	}).(GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArrayOutput)
}

// Whether aggregated by time. If isAggregateByTime is true, all usage/cost over the query time period will be added up.
func (o GetQueriesQueryCollectionItemQueryDefinitionReportQueryOutput) IsAggregateByTime() pulumi.BoolOutput {
	return o.ApplyT(func(v GetQueriesQueryCollectionItemQueryDefinitionReportQuery) bool { return v.IsAggregateByTime }).(pulumi.BoolOutput)
}

// The query usage type. COST by default if it is missing. Usage - Query the usage data. Cost - Query the cost/billing data. Credit - Query the credit adjustments data. ExpiredCredit - Query the expired credits data AllCredit - Query the credit adjustments and expired credit
func (o GetQueriesQueryCollectionItemQueryDefinitionReportQueryOutput) QueryType() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueriesQueryCollectionItemQueryDefinitionReportQuery) string { return v.QueryType }).(pulumi.StringOutput)
}

// Tenant ID.
func (o GetQueriesQueryCollectionItemQueryDefinitionReportQueryOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueriesQueryCollectionItemQueryDefinitionReportQuery) string { return v.TenantId }).(pulumi.StringOutput)
}

// The usage end time.
func (o GetQueriesQueryCollectionItemQueryDefinitionReportQueryOutput) TimeUsageEnded() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueriesQueryCollectionItemQueryDefinitionReportQuery) string { return v.TimeUsageEnded }).(pulumi.StringOutput)
}

// The usage start time.
func (o GetQueriesQueryCollectionItemQueryDefinitionReportQueryOutput) TimeUsageStarted() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueriesQueryCollectionItemQueryDefinitionReportQuery) string { return v.TimeUsageStarted }).(pulumi.StringOutput)
}

type GetQueriesQueryCollectionItemQueryDefinitionReportQueryArrayOutput struct{ *pulumi.OutputState }

func (GetQueriesQueryCollectionItemQueryDefinitionReportQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueriesQueryCollectionItemQueryDefinitionReportQuery)(nil)).Elem()
}

func (o GetQueriesQueryCollectionItemQueryDefinitionReportQueryArrayOutput) ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryArrayOutput() GetQueriesQueryCollectionItemQueryDefinitionReportQueryArrayOutput {
	return o
}

func (o GetQueriesQueryCollectionItemQueryDefinitionReportQueryArrayOutput) ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryArrayOutputWithContext(ctx context.Context) GetQueriesQueryCollectionItemQueryDefinitionReportQueryArrayOutput {
	return o
}

func (o GetQueriesQueryCollectionItemQueryDefinitionReportQueryArrayOutput) Index(i pulumi.IntInput) GetQueriesQueryCollectionItemQueryDefinitionReportQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQueriesQueryCollectionItemQueryDefinitionReportQuery {
		return vs[0].([]GetQueriesQueryCollectionItemQueryDefinitionReportQuery)[vs[1].(int)]
	}).(GetQueriesQueryCollectionItemQueryDefinitionReportQueryOutput)
}

type GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecast struct {
	// BASIC uses the exponential smoothing (ETS) model to project future usage/costs based on history data. The basis for projections is a periodic set of equivalent historical days for which the projection is being made.
	ForecastType string `pulumi:"forecastType"`
	// The forecast end time.
	TimeForecastEnded string `pulumi:"timeForecastEnded"`
	// The forecast start time. Defaults to UTC-1 if not specified.
	TimeForecastStarted string `pulumi:"timeForecastStarted"`
}

// GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastInput is an input type that accepts GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArgs and GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastOutput values.
// You can construct a concrete instance of `GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastInput` via:
//
//          GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArgs{...}
type GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastInput interface {
	pulumi.Input

	ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastOutput() GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastOutput
	ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastOutputWithContext(context.Context) GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastOutput
}

type GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArgs struct {
	// BASIC uses the exponential smoothing (ETS) model to project future usage/costs based on history data. The basis for projections is a periodic set of equivalent historical days for which the projection is being made.
	ForecastType pulumi.StringInput `pulumi:"forecastType"`
	// The forecast end time.
	TimeForecastEnded pulumi.StringInput `pulumi:"timeForecastEnded"`
	// The forecast start time. Defaults to UTC-1 if not specified.
	TimeForecastStarted pulumi.StringInput `pulumi:"timeForecastStarted"`
}

func (GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecast)(nil)).Elem()
}

func (i GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArgs) ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastOutput() GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastOutput {
	return i.ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastOutputWithContext(context.Background())
}

func (i GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArgs) ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastOutputWithContext(ctx context.Context) GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastOutput)
}

// GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArrayInput is an input type that accepts GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArray and GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArrayOutput values.
// You can construct a concrete instance of `GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArrayInput` via:
//
//          GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArray{ GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArgs{...} }
type GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArrayInput interface {
	pulumi.Input

	ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArrayOutput() GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArrayOutput
	ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArrayOutputWithContext(context.Context) GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArrayOutput
}

type GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArray []GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastInput

func (GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecast)(nil)).Elem()
}

func (i GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArray) ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArrayOutput() GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArrayOutput {
	return i.ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArrayOutputWithContext(context.Background())
}

func (i GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArray) ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArrayOutputWithContext(ctx context.Context) GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArrayOutput)
}

type GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastOutput struct{ *pulumi.OutputState }

func (GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecast)(nil)).Elem()
}

func (o GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastOutput) ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastOutput() GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastOutput {
	return o
}

func (o GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastOutput) ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastOutputWithContext(ctx context.Context) GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastOutput {
	return o
}

// BASIC uses the exponential smoothing (ETS) model to project future usage/costs based on history data. The basis for projections is a periodic set of equivalent historical days for which the projection is being made.
func (o GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastOutput) ForecastType() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecast) string { return v.ForecastType }).(pulumi.StringOutput)
}

// The forecast end time.
func (o GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastOutput) TimeForecastEnded() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecast) string {
		return v.TimeForecastEnded
	}).(pulumi.StringOutput)
}

// The forecast start time. Defaults to UTC-1 if not specified.
func (o GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastOutput) TimeForecastStarted() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecast) string {
		return v.TimeForecastStarted
	}).(pulumi.StringOutput)
}

type GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArrayOutput struct{ *pulumi.OutputState }

func (GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecast)(nil)).Elem()
}

func (o GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArrayOutput) ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArrayOutput() GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArrayOutput {
	return o
}

func (o GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArrayOutput) ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArrayOutputWithContext(ctx context.Context) GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArrayOutput {
	return o
}

func (o GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArrayOutput) Index(i pulumi.IntInput) GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecast {
		return vs[0].([]GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecast)[vs[1].(int)]
	}).(GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastOutput)
}

type GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTag struct {
	// The tag key.
	Key string `pulumi:"key"`
	// The tag namespace.
	Namespace string `pulumi:"namespace"`
	// The tag value.
	Value string `pulumi:"value"`
}

// GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagInput is an input type that accepts GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArgs and GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagOutput values.
// You can construct a concrete instance of `GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagInput` via:
//
//          GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArgs{...}
type GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagInput interface {
	pulumi.Input

	ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagOutput() GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagOutput
	ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagOutputWithContext(context.Context) GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagOutput
}

type GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArgs struct {
	// The tag key.
	Key pulumi.StringInput `pulumi:"key"`
	// The tag namespace.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The tag value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTag)(nil)).Elem()
}

func (i GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArgs) ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagOutput() GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagOutput {
	return i.ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagOutputWithContext(context.Background())
}

func (i GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArgs) ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagOutputWithContext(ctx context.Context) GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagOutput)
}

// GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArrayInput is an input type that accepts GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArray and GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArrayOutput values.
// You can construct a concrete instance of `GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArrayInput` via:
//
//          GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArray{ GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArgs{...} }
type GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArrayInput interface {
	pulumi.Input

	ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArrayOutput() GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArrayOutput
	ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArrayOutputWithContext(context.Context) GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArrayOutput
}

type GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArray []GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagInput

func (GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTag)(nil)).Elem()
}

func (i GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArray) ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArrayOutput() GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArrayOutput {
	return i.ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArrayOutputWithContext(context.Background())
}

func (i GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArray) ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArrayOutputWithContext(ctx context.Context) GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArrayOutput)
}

type GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagOutput struct{ *pulumi.OutputState }

func (GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTag)(nil)).Elem()
}

func (o GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagOutput) ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagOutput() GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagOutput {
	return o
}

func (o GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagOutput) ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagOutputWithContext(ctx context.Context) GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagOutput {
	return o
}

// The tag key.
func (o GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTag) string { return v.Key }).(pulumi.StringOutput)
}

// The tag namespace.
func (o GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTag) string { return v.Namespace }).(pulumi.StringOutput)
}

// The tag value.
func (o GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArrayOutput struct{ *pulumi.OutputState }

func (GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTag)(nil)).Elem()
}

func (o GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArrayOutput) ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArrayOutput() GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArrayOutput {
	return o
}

func (o GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArrayOutput) ToGetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArrayOutputWithContext(ctx context.Context) GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArrayOutput {
	return o
}

func (o GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArrayOutput) Index(i pulumi.IntInput) GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTag {
		return vs[0].([]GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTag)[vs[1].(int)]
	}).(GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagOutput)
}

type GetQueryQueryDefinition struct {
	// The common fields for Cost Analysis UI rendering.
	CostAnalysisUis []GetQueryQueryDefinitionCostAnalysisUi `pulumi:"costAnalysisUis"`
	// The query display name. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// The request of the generated Cost Analysis report.
	ReportQueries []GetQueryQueryDefinitionReportQuery `pulumi:"reportQueries"`
	// The saved query version.
	Version float64 `pulumi:"version"`
}

// GetQueryQueryDefinitionInput is an input type that accepts GetQueryQueryDefinitionArgs and GetQueryQueryDefinitionOutput values.
// You can construct a concrete instance of `GetQueryQueryDefinitionInput` via:
//
//          GetQueryQueryDefinitionArgs{...}
type GetQueryQueryDefinitionInput interface {
	pulumi.Input

	ToGetQueryQueryDefinitionOutput() GetQueryQueryDefinitionOutput
	ToGetQueryQueryDefinitionOutputWithContext(context.Context) GetQueryQueryDefinitionOutput
}

type GetQueryQueryDefinitionArgs struct {
	// The common fields for Cost Analysis UI rendering.
	CostAnalysisUis GetQueryQueryDefinitionCostAnalysisUiArrayInput `pulumi:"costAnalysisUis"`
	// The query display name. Avoid entering confidential information.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The request of the generated Cost Analysis report.
	ReportQueries GetQueryQueryDefinitionReportQueryArrayInput `pulumi:"reportQueries"`
	// The saved query version.
	Version pulumi.Float64Input `pulumi:"version"`
}

func (GetQueryQueryDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueryQueryDefinition)(nil)).Elem()
}

func (i GetQueryQueryDefinitionArgs) ToGetQueryQueryDefinitionOutput() GetQueryQueryDefinitionOutput {
	return i.ToGetQueryQueryDefinitionOutputWithContext(context.Background())
}

func (i GetQueryQueryDefinitionArgs) ToGetQueryQueryDefinitionOutputWithContext(ctx context.Context) GetQueryQueryDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueryQueryDefinitionOutput)
}

// GetQueryQueryDefinitionArrayInput is an input type that accepts GetQueryQueryDefinitionArray and GetQueryQueryDefinitionArrayOutput values.
// You can construct a concrete instance of `GetQueryQueryDefinitionArrayInput` via:
//
//          GetQueryQueryDefinitionArray{ GetQueryQueryDefinitionArgs{...} }
type GetQueryQueryDefinitionArrayInput interface {
	pulumi.Input

	ToGetQueryQueryDefinitionArrayOutput() GetQueryQueryDefinitionArrayOutput
	ToGetQueryQueryDefinitionArrayOutputWithContext(context.Context) GetQueryQueryDefinitionArrayOutput
}

type GetQueryQueryDefinitionArray []GetQueryQueryDefinitionInput

func (GetQueryQueryDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueryQueryDefinition)(nil)).Elem()
}

func (i GetQueryQueryDefinitionArray) ToGetQueryQueryDefinitionArrayOutput() GetQueryQueryDefinitionArrayOutput {
	return i.ToGetQueryQueryDefinitionArrayOutputWithContext(context.Background())
}

func (i GetQueryQueryDefinitionArray) ToGetQueryQueryDefinitionArrayOutputWithContext(ctx context.Context) GetQueryQueryDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueryQueryDefinitionArrayOutput)
}

type GetQueryQueryDefinitionOutput struct{ *pulumi.OutputState }

func (GetQueryQueryDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueryQueryDefinition)(nil)).Elem()
}

func (o GetQueryQueryDefinitionOutput) ToGetQueryQueryDefinitionOutput() GetQueryQueryDefinitionOutput {
	return o
}

func (o GetQueryQueryDefinitionOutput) ToGetQueryQueryDefinitionOutputWithContext(ctx context.Context) GetQueryQueryDefinitionOutput {
	return o
}

// The common fields for Cost Analysis UI rendering.
func (o GetQueryQueryDefinitionOutput) CostAnalysisUis() GetQueryQueryDefinitionCostAnalysisUiArrayOutput {
	return o.ApplyT(func(v GetQueryQueryDefinition) []GetQueryQueryDefinitionCostAnalysisUi { return v.CostAnalysisUis }).(GetQueryQueryDefinitionCostAnalysisUiArrayOutput)
}

// The query display name. Avoid entering confidential information.
func (o GetQueryQueryDefinitionOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueryQueryDefinition) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The request of the generated Cost Analysis report.
func (o GetQueryQueryDefinitionOutput) ReportQueries() GetQueryQueryDefinitionReportQueryArrayOutput {
	return o.ApplyT(func(v GetQueryQueryDefinition) []GetQueryQueryDefinitionReportQuery { return v.ReportQueries }).(GetQueryQueryDefinitionReportQueryArrayOutput)
}

// The saved query version.
func (o GetQueryQueryDefinitionOutput) Version() pulumi.Float64Output {
	return o.ApplyT(func(v GetQueryQueryDefinition) float64 { return v.Version }).(pulumi.Float64Output)
}

type GetQueryQueryDefinitionArrayOutput struct{ *pulumi.OutputState }

func (GetQueryQueryDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueryQueryDefinition)(nil)).Elem()
}

func (o GetQueryQueryDefinitionArrayOutput) ToGetQueryQueryDefinitionArrayOutput() GetQueryQueryDefinitionArrayOutput {
	return o
}

func (o GetQueryQueryDefinitionArrayOutput) ToGetQueryQueryDefinitionArrayOutputWithContext(ctx context.Context) GetQueryQueryDefinitionArrayOutput {
	return o
}

func (o GetQueryQueryDefinitionArrayOutput) Index(i pulumi.IntInput) GetQueryQueryDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQueryQueryDefinition {
		return vs[0].([]GetQueryQueryDefinition)[vs[1].(int)]
	}).(GetQueryQueryDefinitionOutput)
}

type GetQueryQueryDefinitionCostAnalysisUi struct {
	// The graph type.
	Graph string `pulumi:"graph"`
	// A cumulative graph.
	IsCumulativeGraph bool `pulumi:"isCumulativeGraph"`
}

// GetQueryQueryDefinitionCostAnalysisUiInput is an input type that accepts GetQueryQueryDefinitionCostAnalysisUiArgs and GetQueryQueryDefinitionCostAnalysisUiOutput values.
// You can construct a concrete instance of `GetQueryQueryDefinitionCostAnalysisUiInput` via:
//
//          GetQueryQueryDefinitionCostAnalysisUiArgs{...}
type GetQueryQueryDefinitionCostAnalysisUiInput interface {
	pulumi.Input

	ToGetQueryQueryDefinitionCostAnalysisUiOutput() GetQueryQueryDefinitionCostAnalysisUiOutput
	ToGetQueryQueryDefinitionCostAnalysisUiOutputWithContext(context.Context) GetQueryQueryDefinitionCostAnalysisUiOutput
}

type GetQueryQueryDefinitionCostAnalysisUiArgs struct {
	// The graph type.
	Graph pulumi.StringInput `pulumi:"graph"`
	// A cumulative graph.
	IsCumulativeGraph pulumi.BoolInput `pulumi:"isCumulativeGraph"`
}

func (GetQueryQueryDefinitionCostAnalysisUiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueryQueryDefinitionCostAnalysisUi)(nil)).Elem()
}

func (i GetQueryQueryDefinitionCostAnalysisUiArgs) ToGetQueryQueryDefinitionCostAnalysisUiOutput() GetQueryQueryDefinitionCostAnalysisUiOutput {
	return i.ToGetQueryQueryDefinitionCostAnalysisUiOutputWithContext(context.Background())
}

func (i GetQueryQueryDefinitionCostAnalysisUiArgs) ToGetQueryQueryDefinitionCostAnalysisUiOutputWithContext(ctx context.Context) GetQueryQueryDefinitionCostAnalysisUiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueryQueryDefinitionCostAnalysisUiOutput)
}

// GetQueryQueryDefinitionCostAnalysisUiArrayInput is an input type that accepts GetQueryQueryDefinitionCostAnalysisUiArray and GetQueryQueryDefinitionCostAnalysisUiArrayOutput values.
// You can construct a concrete instance of `GetQueryQueryDefinitionCostAnalysisUiArrayInput` via:
//
//          GetQueryQueryDefinitionCostAnalysisUiArray{ GetQueryQueryDefinitionCostAnalysisUiArgs{...} }
type GetQueryQueryDefinitionCostAnalysisUiArrayInput interface {
	pulumi.Input

	ToGetQueryQueryDefinitionCostAnalysisUiArrayOutput() GetQueryQueryDefinitionCostAnalysisUiArrayOutput
	ToGetQueryQueryDefinitionCostAnalysisUiArrayOutputWithContext(context.Context) GetQueryQueryDefinitionCostAnalysisUiArrayOutput
}

type GetQueryQueryDefinitionCostAnalysisUiArray []GetQueryQueryDefinitionCostAnalysisUiInput

func (GetQueryQueryDefinitionCostAnalysisUiArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueryQueryDefinitionCostAnalysisUi)(nil)).Elem()
}

func (i GetQueryQueryDefinitionCostAnalysisUiArray) ToGetQueryQueryDefinitionCostAnalysisUiArrayOutput() GetQueryQueryDefinitionCostAnalysisUiArrayOutput {
	return i.ToGetQueryQueryDefinitionCostAnalysisUiArrayOutputWithContext(context.Background())
}

func (i GetQueryQueryDefinitionCostAnalysisUiArray) ToGetQueryQueryDefinitionCostAnalysisUiArrayOutputWithContext(ctx context.Context) GetQueryQueryDefinitionCostAnalysisUiArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueryQueryDefinitionCostAnalysisUiArrayOutput)
}

type GetQueryQueryDefinitionCostAnalysisUiOutput struct{ *pulumi.OutputState }

func (GetQueryQueryDefinitionCostAnalysisUiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueryQueryDefinitionCostAnalysisUi)(nil)).Elem()
}

func (o GetQueryQueryDefinitionCostAnalysisUiOutput) ToGetQueryQueryDefinitionCostAnalysisUiOutput() GetQueryQueryDefinitionCostAnalysisUiOutput {
	return o
}

func (o GetQueryQueryDefinitionCostAnalysisUiOutput) ToGetQueryQueryDefinitionCostAnalysisUiOutputWithContext(ctx context.Context) GetQueryQueryDefinitionCostAnalysisUiOutput {
	return o
}

// The graph type.
func (o GetQueryQueryDefinitionCostAnalysisUiOutput) Graph() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueryQueryDefinitionCostAnalysisUi) string { return v.Graph }).(pulumi.StringOutput)
}

// A cumulative graph.
func (o GetQueryQueryDefinitionCostAnalysisUiOutput) IsCumulativeGraph() pulumi.BoolOutput {
	return o.ApplyT(func(v GetQueryQueryDefinitionCostAnalysisUi) bool { return v.IsCumulativeGraph }).(pulumi.BoolOutput)
}

type GetQueryQueryDefinitionCostAnalysisUiArrayOutput struct{ *pulumi.OutputState }

func (GetQueryQueryDefinitionCostAnalysisUiArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueryQueryDefinitionCostAnalysisUi)(nil)).Elem()
}

func (o GetQueryQueryDefinitionCostAnalysisUiArrayOutput) ToGetQueryQueryDefinitionCostAnalysisUiArrayOutput() GetQueryQueryDefinitionCostAnalysisUiArrayOutput {
	return o
}

func (o GetQueryQueryDefinitionCostAnalysisUiArrayOutput) ToGetQueryQueryDefinitionCostAnalysisUiArrayOutputWithContext(ctx context.Context) GetQueryQueryDefinitionCostAnalysisUiArrayOutput {
	return o
}

func (o GetQueryQueryDefinitionCostAnalysisUiArrayOutput) Index(i pulumi.IntInput) GetQueryQueryDefinitionCostAnalysisUiOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQueryQueryDefinitionCostAnalysisUi {
		return vs[0].([]GetQueryQueryDefinitionCostAnalysisUi)[vs[1].(int)]
	}).(GetQueryQueryDefinitionCostAnalysisUiOutput)
}

type GetQueryQueryDefinitionReportQuery struct {
	// The compartment depth level.
	CompartmentDepth float64 `pulumi:"compartmentDepth"`
	// The UI date range, for example, LAST_THREE_MONTHS. Conflicts with timeUsageStarted and timeUsageEnded.
	DateRangeName string `pulumi:"dateRangeName"`
	Filter        string `pulumi:"filter"`
	// Forecast configuration of usage/cost.
	Forecasts []GetQueryQueryDefinitionReportQueryForecast `pulumi:"forecasts"`
	// The usage granularity. HOURLY - Hourly data aggregation. DAILY - Daily data aggregation. MONTHLY - Monthly data aggregation. TOTAL - Not yet supported.
	Granularity string `pulumi:"granularity"`
	// Aggregate the result by. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
	GroupBies []string `pulumi:"groupBies"`
	// GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only supports one tag in the list. For example: `[{"namespace":"oracle", "key":"createdBy"]`
	GroupByTags []GetQueryQueryDefinitionReportQueryGroupByTag `pulumi:"groupByTags"`
	// Whether aggregated by time. If isAggregateByTime is true, all usage/cost over the query time period will be added up.
	IsAggregateByTime bool `pulumi:"isAggregateByTime"`
	// The query usage type. COST by default if it is missing. Usage - Query the usage data. Cost - Query the cost/billing data. Credit - Query the credit adjustments data. ExpiredCredit - Query the expired credits data AllCredit - Query the credit adjustments and expired credit
	QueryType string `pulumi:"queryType"`
	// Tenant ID.
	TenantId string `pulumi:"tenantId"`
	// The usage end time.
	TimeUsageEnded string `pulumi:"timeUsageEnded"`
	// The usage start time.
	TimeUsageStarted string `pulumi:"timeUsageStarted"`
}

// GetQueryQueryDefinitionReportQueryInput is an input type that accepts GetQueryQueryDefinitionReportQueryArgs and GetQueryQueryDefinitionReportQueryOutput values.
// You can construct a concrete instance of `GetQueryQueryDefinitionReportQueryInput` via:
//
//          GetQueryQueryDefinitionReportQueryArgs{...}
type GetQueryQueryDefinitionReportQueryInput interface {
	pulumi.Input

	ToGetQueryQueryDefinitionReportQueryOutput() GetQueryQueryDefinitionReportQueryOutput
	ToGetQueryQueryDefinitionReportQueryOutputWithContext(context.Context) GetQueryQueryDefinitionReportQueryOutput
}

type GetQueryQueryDefinitionReportQueryArgs struct {
	// The compartment depth level.
	CompartmentDepth pulumi.Float64Input `pulumi:"compartmentDepth"`
	// The UI date range, for example, LAST_THREE_MONTHS. Conflicts with timeUsageStarted and timeUsageEnded.
	DateRangeName pulumi.StringInput `pulumi:"dateRangeName"`
	Filter        pulumi.StringInput `pulumi:"filter"`
	// Forecast configuration of usage/cost.
	Forecasts GetQueryQueryDefinitionReportQueryForecastArrayInput `pulumi:"forecasts"`
	// The usage granularity. HOURLY - Hourly data aggregation. DAILY - Daily data aggregation. MONTHLY - Monthly data aggregation. TOTAL - Not yet supported.
	Granularity pulumi.StringInput `pulumi:"granularity"`
	// Aggregate the result by. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
	GroupBies pulumi.StringArrayInput `pulumi:"groupBies"`
	// GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only supports one tag in the list. For example: `[{"namespace":"oracle", "key":"createdBy"]`
	GroupByTags GetQueryQueryDefinitionReportQueryGroupByTagArrayInput `pulumi:"groupByTags"`
	// Whether aggregated by time. If isAggregateByTime is true, all usage/cost over the query time period will be added up.
	IsAggregateByTime pulumi.BoolInput `pulumi:"isAggregateByTime"`
	// The query usage type. COST by default if it is missing. Usage - Query the usage data. Cost - Query the cost/billing data. Credit - Query the credit adjustments data. ExpiredCredit - Query the expired credits data AllCredit - Query the credit adjustments and expired credit
	QueryType pulumi.StringInput `pulumi:"queryType"`
	// Tenant ID.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The usage end time.
	TimeUsageEnded pulumi.StringInput `pulumi:"timeUsageEnded"`
	// The usage start time.
	TimeUsageStarted pulumi.StringInput `pulumi:"timeUsageStarted"`
}

func (GetQueryQueryDefinitionReportQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueryQueryDefinitionReportQuery)(nil)).Elem()
}

func (i GetQueryQueryDefinitionReportQueryArgs) ToGetQueryQueryDefinitionReportQueryOutput() GetQueryQueryDefinitionReportQueryOutput {
	return i.ToGetQueryQueryDefinitionReportQueryOutputWithContext(context.Background())
}

func (i GetQueryQueryDefinitionReportQueryArgs) ToGetQueryQueryDefinitionReportQueryOutputWithContext(ctx context.Context) GetQueryQueryDefinitionReportQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueryQueryDefinitionReportQueryOutput)
}

// GetQueryQueryDefinitionReportQueryArrayInput is an input type that accepts GetQueryQueryDefinitionReportQueryArray and GetQueryQueryDefinitionReportQueryArrayOutput values.
// You can construct a concrete instance of `GetQueryQueryDefinitionReportQueryArrayInput` via:
//
//          GetQueryQueryDefinitionReportQueryArray{ GetQueryQueryDefinitionReportQueryArgs{...} }
type GetQueryQueryDefinitionReportQueryArrayInput interface {
	pulumi.Input

	ToGetQueryQueryDefinitionReportQueryArrayOutput() GetQueryQueryDefinitionReportQueryArrayOutput
	ToGetQueryQueryDefinitionReportQueryArrayOutputWithContext(context.Context) GetQueryQueryDefinitionReportQueryArrayOutput
}

type GetQueryQueryDefinitionReportQueryArray []GetQueryQueryDefinitionReportQueryInput

func (GetQueryQueryDefinitionReportQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueryQueryDefinitionReportQuery)(nil)).Elem()
}

func (i GetQueryQueryDefinitionReportQueryArray) ToGetQueryQueryDefinitionReportQueryArrayOutput() GetQueryQueryDefinitionReportQueryArrayOutput {
	return i.ToGetQueryQueryDefinitionReportQueryArrayOutputWithContext(context.Background())
}

func (i GetQueryQueryDefinitionReportQueryArray) ToGetQueryQueryDefinitionReportQueryArrayOutputWithContext(ctx context.Context) GetQueryQueryDefinitionReportQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueryQueryDefinitionReportQueryArrayOutput)
}

type GetQueryQueryDefinitionReportQueryOutput struct{ *pulumi.OutputState }

func (GetQueryQueryDefinitionReportQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueryQueryDefinitionReportQuery)(nil)).Elem()
}

func (o GetQueryQueryDefinitionReportQueryOutput) ToGetQueryQueryDefinitionReportQueryOutput() GetQueryQueryDefinitionReportQueryOutput {
	return o
}

func (o GetQueryQueryDefinitionReportQueryOutput) ToGetQueryQueryDefinitionReportQueryOutputWithContext(ctx context.Context) GetQueryQueryDefinitionReportQueryOutput {
	return o
}

// The compartment depth level.
func (o GetQueryQueryDefinitionReportQueryOutput) CompartmentDepth() pulumi.Float64Output {
	return o.ApplyT(func(v GetQueryQueryDefinitionReportQuery) float64 { return v.CompartmentDepth }).(pulumi.Float64Output)
}

// The UI date range, for example, LAST_THREE_MONTHS. Conflicts with timeUsageStarted and timeUsageEnded.
func (o GetQueryQueryDefinitionReportQueryOutput) DateRangeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueryQueryDefinitionReportQuery) string { return v.DateRangeName }).(pulumi.StringOutput)
}

func (o GetQueryQueryDefinitionReportQueryOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueryQueryDefinitionReportQuery) string { return v.Filter }).(pulumi.StringOutput)
}

// Forecast configuration of usage/cost.
func (o GetQueryQueryDefinitionReportQueryOutput) Forecasts() GetQueryQueryDefinitionReportQueryForecastArrayOutput {
	return o.ApplyT(func(v GetQueryQueryDefinitionReportQuery) []GetQueryQueryDefinitionReportQueryForecast {
		return v.Forecasts
	}).(GetQueryQueryDefinitionReportQueryForecastArrayOutput)
}

// The usage granularity. HOURLY - Hourly data aggregation. DAILY - Daily data aggregation. MONTHLY - Monthly data aggregation. TOTAL - Not yet supported.
func (o GetQueryQueryDefinitionReportQueryOutput) Granularity() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueryQueryDefinitionReportQuery) string { return v.Granularity }).(pulumi.StringOutput)
}

// Aggregate the result by. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
func (o GetQueryQueryDefinitionReportQueryOutput) GroupBies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetQueryQueryDefinitionReportQuery) []string { return v.GroupBies }).(pulumi.StringArrayOutput)
}

// GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only supports one tag in the list. For example: `[{"namespace":"oracle", "key":"createdBy"]`
func (o GetQueryQueryDefinitionReportQueryOutput) GroupByTags() GetQueryQueryDefinitionReportQueryGroupByTagArrayOutput {
	return o.ApplyT(func(v GetQueryQueryDefinitionReportQuery) []GetQueryQueryDefinitionReportQueryGroupByTag {
		return v.GroupByTags
	}).(GetQueryQueryDefinitionReportQueryGroupByTagArrayOutput)
}

// Whether aggregated by time. If isAggregateByTime is true, all usage/cost over the query time period will be added up.
func (o GetQueryQueryDefinitionReportQueryOutput) IsAggregateByTime() pulumi.BoolOutput {
	return o.ApplyT(func(v GetQueryQueryDefinitionReportQuery) bool { return v.IsAggregateByTime }).(pulumi.BoolOutput)
}

// The query usage type. COST by default if it is missing. Usage - Query the usage data. Cost - Query the cost/billing data. Credit - Query the credit adjustments data. ExpiredCredit - Query the expired credits data AllCredit - Query the credit adjustments and expired credit
func (o GetQueryQueryDefinitionReportQueryOutput) QueryType() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueryQueryDefinitionReportQuery) string { return v.QueryType }).(pulumi.StringOutput)
}

// Tenant ID.
func (o GetQueryQueryDefinitionReportQueryOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueryQueryDefinitionReportQuery) string { return v.TenantId }).(pulumi.StringOutput)
}

// The usage end time.
func (o GetQueryQueryDefinitionReportQueryOutput) TimeUsageEnded() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueryQueryDefinitionReportQuery) string { return v.TimeUsageEnded }).(pulumi.StringOutput)
}

// The usage start time.
func (o GetQueryQueryDefinitionReportQueryOutput) TimeUsageStarted() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueryQueryDefinitionReportQuery) string { return v.TimeUsageStarted }).(pulumi.StringOutput)
}

type GetQueryQueryDefinitionReportQueryArrayOutput struct{ *pulumi.OutputState }

func (GetQueryQueryDefinitionReportQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueryQueryDefinitionReportQuery)(nil)).Elem()
}

func (o GetQueryQueryDefinitionReportQueryArrayOutput) ToGetQueryQueryDefinitionReportQueryArrayOutput() GetQueryQueryDefinitionReportQueryArrayOutput {
	return o
}

func (o GetQueryQueryDefinitionReportQueryArrayOutput) ToGetQueryQueryDefinitionReportQueryArrayOutputWithContext(ctx context.Context) GetQueryQueryDefinitionReportQueryArrayOutput {
	return o
}

func (o GetQueryQueryDefinitionReportQueryArrayOutput) Index(i pulumi.IntInput) GetQueryQueryDefinitionReportQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQueryQueryDefinitionReportQuery {
		return vs[0].([]GetQueryQueryDefinitionReportQuery)[vs[1].(int)]
	}).(GetQueryQueryDefinitionReportQueryOutput)
}

type GetQueryQueryDefinitionReportQueryForecast struct {
	// BASIC uses the exponential smoothing (ETS) model to project future usage/costs based on history data. The basis for projections is a periodic set of equivalent historical days for which the projection is being made.
	ForecastType string `pulumi:"forecastType"`
	// The forecast end time.
	TimeForecastEnded string `pulumi:"timeForecastEnded"`
	// The forecast start time. Defaults to UTC-1 if not specified.
	TimeForecastStarted string `pulumi:"timeForecastStarted"`
}

// GetQueryQueryDefinitionReportQueryForecastInput is an input type that accepts GetQueryQueryDefinitionReportQueryForecastArgs and GetQueryQueryDefinitionReportQueryForecastOutput values.
// You can construct a concrete instance of `GetQueryQueryDefinitionReportQueryForecastInput` via:
//
//          GetQueryQueryDefinitionReportQueryForecastArgs{...}
type GetQueryQueryDefinitionReportQueryForecastInput interface {
	pulumi.Input

	ToGetQueryQueryDefinitionReportQueryForecastOutput() GetQueryQueryDefinitionReportQueryForecastOutput
	ToGetQueryQueryDefinitionReportQueryForecastOutputWithContext(context.Context) GetQueryQueryDefinitionReportQueryForecastOutput
}

type GetQueryQueryDefinitionReportQueryForecastArgs struct {
	// BASIC uses the exponential smoothing (ETS) model to project future usage/costs based on history data. The basis for projections is a periodic set of equivalent historical days for which the projection is being made.
	ForecastType pulumi.StringInput `pulumi:"forecastType"`
	// The forecast end time.
	TimeForecastEnded pulumi.StringInput `pulumi:"timeForecastEnded"`
	// The forecast start time. Defaults to UTC-1 if not specified.
	TimeForecastStarted pulumi.StringInput `pulumi:"timeForecastStarted"`
}

func (GetQueryQueryDefinitionReportQueryForecastArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueryQueryDefinitionReportQueryForecast)(nil)).Elem()
}

func (i GetQueryQueryDefinitionReportQueryForecastArgs) ToGetQueryQueryDefinitionReportQueryForecastOutput() GetQueryQueryDefinitionReportQueryForecastOutput {
	return i.ToGetQueryQueryDefinitionReportQueryForecastOutputWithContext(context.Background())
}

func (i GetQueryQueryDefinitionReportQueryForecastArgs) ToGetQueryQueryDefinitionReportQueryForecastOutputWithContext(ctx context.Context) GetQueryQueryDefinitionReportQueryForecastOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueryQueryDefinitionReportQueryForecastOutput)
}

// GetQueryQueryDefinitionReportQueryForecastArrayInput is an input type that accepts GetQueryQueryDefinitionReportQueryForecastArray and GetQueryQueryDefinitionReportQueryForecastArrayOutput values.
// You can construct a concrete instance of `GetQueryQueryDefinitionReportQueryForecastArrayInput` via:
//
//          GetQueryQueryDefinitionReportQueryForecastArray{ GetQueryQueryDefinitionReportQueryForecastArgs{...} }
type GetQueryQueryDefinitionReportQueryForecastArrayInput interface {
	pulumi.Input

	ToGetQueryQueryDefinitionReportQueryForecastArrayOutput() GetQueryQueryDefinitionReportQueryForecastArrayOutput
	ToGetQueryQueryDefinitionReportQueryForecastArrayOutputWithContext(context.Context) GetQueryQueryDefinitionReportQueryForecastArrayOutput
}

type GetQueryQueryDefinitionReportQueryForecastArray []GetQueryQueryDefinitionReportQueryForecastInput

func (GetQueryQueryDefinitionReportQueryForecastArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueryQueryDefinitionReportQueryForecast)(nil)).Elem()
}

func (i GetQueryQueryDefinitionReportQueryForecastArray) ToGetQueryQueryDefinitionReportQueryForecastArrayOutput() GetQueryQueryDefinitionReportQueryForecastArrayOutput {
	return i.ToGetQueryQueryDefinitionReportQueryForecastArrayOutputWithContext(context.Background())
}

func (i GetQueryQueryDefinitionReportQueryForecastArray) ToGetQueryQueryDefinitionReportQueryForecastArrayOutputWithContext(ctx context.Context) GetQueryQueryDefinitionReportQueryForecastArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueryQueryDefinitionReportQueryForecastArrayOutput)
}

type GetQueryQueryDefinitionReportQueryForecastOutput struct{ *pulumi.OutputState }

func (GetQueryQueryDefinitionReportQueryForecastOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueryQueryDefinitionReportQueryForecast)(nil)).Elem()
}

func (o GetQueryQueryDefinitionReportQueryForecastOutput) ToGetQueryQueryDefinitionReportQueryForecastOutput() GetQueryQueryDefinitionReportQueryForecastOutput {
	return o
}

func (o GetQueryQueryDefinitionReportQueryForecastOutput) ToGetQueryQueryDefinitionReportQueryForecastOutputWithContext(ctx context.Context) GetQueryQueryDefinitionReportQueryForecastOutput {
	return o
}

// BASIC uses the exponential smoothing (ETS) model to project future usage/costs based on history data. The basis for projections is a periodic set of equivalent historical days for which the projection is being made.
func (o GetQueryQueryDefinitionReportQueryForecastOutput) ForecastType() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueryQueryDefinitionReportQueryForecast) string { return v.ForecastType }).(pulumi.StringOutput)
}

// The forecast end time.
func (o GetQueryQueryDefinitionReportQueryForecastOutput) TimeForecastEnded() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueryQueryDefinitionReportQueryForecast) string { return v.TimeForecastEnded }).(pulumi.StringOutput)
}

// The forecast start time. Defaults to UTC-1 if not specified.
func (o GetQueryQueryDefinitionReportQueryForecastOutput) TimeForecastStarted() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueryQueryDefinitionReportQueryForecast) string { return v.TimeForecastStarted }).(pulumi.StringOutput)
}

type GetQueryQueryDefinitionReportQueryForecastArrayOutput struct{ *pulumi.OutputState }

func (GetQueryQueryDefinitionReportQueryForecastArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueryQueryDefinitionReportQueryForecast)(nil)).Elem()
}

func (o GetQueryQueryDefinitionReportQueryForecastArrayOutput) ToGetQueryQueryDefinitionReportQueryForecastArrayOutput() GetQueryQueryDefinitionReportQueryForecastArrayOutput {
	return o
}

func (o GetQueryQueryDefinitionReportQueryForecastArrayOutput) ToGetQueryQueryDefinitionReportQueryForecastArrayOutputWithContext(ctx context.Context) GetQueryQueryDefinitionReportQueryForecastArrayOutput {
	return o
}

func (o GetQueryQueryDefinitionReportQueryForecastArrayOutput) Index(i pulumi.IntInput) GetQueryQueryDefinitionReportQueryForecastOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQueryQueryDefinitionReportQueryForecast {
		return vs[0].([]GetQueryQueryDefinitionReportQueryForecast)[vs[1].(int)]
	}).(GetQueryQueryDefinitionReportQueryForecastOutput)
}

type GetQueryQueryDefinitionReportQueryGroupByTag struct {
	// The tag key.
	Key string `pulumi:"key"`
	// The tag namespace.
	Namespace string `pulumi:"namespace"`
	// The tag value.
	Value string `pulumi:"value"`
}

// GetQueryQueryDefinitionReportQueryGroupByTagInput is an input type that accepts GetQueryQueryDefinitionReportQueryGroupByTagArgs and GetQueryQueryDefinitionReportQueryGroupByTagOutput values.
// You can construct a concrete instance of `GetQueryQueryDefinitionReportQueryGroupByTagInput` via:
//
//          GetQueryQueryDefinitionReportQueryGroupByTagArgs{...}
type GetQueryQueryDefinitionReportQueryGroupByTagInput interface {
	pulumi.Input

	ToGetQueryQueryDefinitionReportQueryGroupByTagOutput() GetQueryQueryDefinitionReportQueryGroupByTagOutput
	ToGetQueryQueryDefinitionReportQueryGroupByTagOutputWithContext(context.Context) GetQueryQueryDefinitionReportQueryGroupByTagOutput
}

type GetQueryQueryDefinitionReportQueryGroupByTagArgs struct {
	// The tag key.
	Key pulumi.StringInput `pulumi:"key"`
	// The tag namespace.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The tag value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetQueryQueryDefinitionReportQueryGroupByTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueryQueryDefinitionReportQueryGroupByTag)(nil)).Elem()
}

func (i GetQueryQueryDefinitionReportQueryGroupByTagArgs) ToGetQueryQueryDefinitionReportQueryGroupByTagOutput() GetQueryQueryDefinitionReportQueryGroupByTagOutput {
	return i.ToGetQueryQueryDefinitionReportQueryGroupByTagOutputWithContext(context.Background())
}

func (i GetQueryQueryDefinitionReportQueryGroupByTagArgs) ToGetQueryQueryDefinitionReportQueryGroupByTagOutputWithContext(ctx context.Context) GetQueryQueryDefinitionReportQueryGroupByTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueryQueryDefinitionReportQueryGroupByTagOutput)
}

// GetQueryQueryDefinitionReportQueryGroupByTagArrayInput is an input type that accepts GetQueryQueryDefinitionReportQueryGroupByTagArray and GetQueryQueryDefinitionReportQueryGroupByTagArrayOutput values.
// You can construct a concrete instance of `GetQueryQueryDefinitionReportQueryGroupByTagArrayInput` via:
//
//          GetQueryQueryDefinitionReportQueryGroupByTagArray{ GetQueryQueryDefinitionReportQueryGroupByTagArgs{...} }
type GetQueryQueryDefinitionReportQueryGroupByTagArrayInput interface {
	pulumi.Input

	ToGetQueryQueryDefinitionReportQueryGroupByTagArrayOutput() GetQueryQueryDefinitionReportQueryGroupByTagArrayOutput
	ToGetQueryQueryDefinitionReportQueryGroupByTagArrayOutputWithContext(context.Context) GetQueryQueryDefinitionReportQueryGroupByTagArrayOutput
}

type GetQueryQueryDefinitionReportQueryGroupByTagArray []GetQueryQueryDefinitionReportQueryGroupByTagInput

func (GetQueryQueryDefinitionReportQueryGroupByTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueryQueryDefinitionReportQueryGroupByTag)(nil)).Elem()
}

func (i GetQueryQueryDefinitionReportQueryGroupByTagArray) ToGetQueryQueryDefinitionReportQueryGroupByTagArrayOutput() GetQueryQueryDefinitionReportQueryGroupByTagArrayOutput {
	return i.ToGetQueryQueryDefinitionReportQueryGroupByTagArrayOutputWithContext(context.Background())
}

func (i GetQueryQueryDefinitionReportQueryGroupByTagArray) ToGetQueryQueryDefinitionReportQueryGroupByTagArrayOutputWithContext(ctx context.Context) GetQueryQueryDefinitionReportQueryGroupByTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueryQueryDefinitionReportQueryGroupByTagArrayOutput)
}

type GetQueryQueryDefinitionReportQueryGroupByTagOutput struct{ *pulumi.OutputState }

func (GetQueryQueryDefinitionReportQueryGroupByTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueryQueryDefinitionReportQueryGroupByTag)(nil)).Elem()
}

func (o GetQueryQueryDefinitionReportQueryGroupByTagOutput) ToGetQueryQueryDefinitionReportQueryGroupByTagOutput() GetQueryQueryDefinitionReportQueryGroupByTagOutput {
	return o
}

func (o GetQueryQueryDefinitionReportQueryGroupByTagOutput) ToGetQueryQueryDefinitionReportQueryGroupByTagOutputWithContext(ctx context.Context) GetQueryQueryDefinitionReportQueryGroupByTagOutput {
	return o
}

// The tag key.
func (o GetQueryQueryDefinitionReportQueryGroupByTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueryQueryDefinitionReportQueryGroupByTag) string { return v.Key }).(pulumi.StringOutput)
}

// The tag namespace.
func (o GetQueryQueryDefinitionReportQueryGroupByTagOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueryQueryDefinitionReportQueryGroupByTag) string { return v.Namespace }).(pulumi.StringOutput)
}

// The tag value.
func (o GetQueryQueryDefinitionReportQueryGroupByTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueryQueryDefinitionReportQueryGroupByTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetQueryQueryDefinitionReportQueryGroupByTagArrayOutput struct{ *pulumi.OutputState }

func (GetQueryQueryDefinitionReportQueryGroupByTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueryQueryDefinitionReportQueryGroupByTag)(nil)).Elem()
}

func (o GetQueryQueryDefinitionReportQueryGroupByTagArrayOutput) ToGetQueryQueryDefinitionReportQueryGroupByTagArrayOutput() GetQueryQueryDefinitionReportQueryGroupByTagArrayOutput {
	return o
}

func (o GetQueryQueryDefinitionReportQueryGroupByTagArrayOutput) ToGetQueryQueryDefinitionReportQueryGroupByTagArrayOutputWithContext(ctx context.Context) GetQueryQueryDefinitionReportQueryGroupByTagArrayOutput {
	return o
}

func (o GetQueryQueryDefinitionReportQueryGroupByTagArrayOutput) Index(i pulumi.IntInput) GetQueryQueryDefinitionReportQueryGroupByTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQueryQueryDefinitionReportQueryGroupByTag {
		return vs[0].([]GetQueryQueryDefinitionReportQueryGroupByTag)[vs[1].(int)]
	}).(GetQueryQueryDefinitionReportQueryGroupByTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomTableSavedCustomTableInput)(nil)).Elem(), CustomTableSavedCustomTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomTableSavedCustomTablePtrInput)(nil)).Elem(), CustomTableSavedCustomTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomTableSavedCustomTableGroupByTagInput)(nil)).Elem(), CustomTableSavedCustomTableGroupByTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomTableSavedCustomTableGroupByTagArrayInput)(nil)).Elem(), CustomTableSavedCustomTableGroupByTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueryQueryDefinitionInput)(nil)).Elem(), QueryQueryDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueryQueryDefinitionPtrInput)(nil)).Elem(), QueryQueryDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueryQueryDefinitionCostAnalysisUiInput)(nil)).Elem(), QueryQueryDefinitionCostAnalysisUiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueryQueryDefinitionCostAnalysisUiPtrInput)(nil)).Elem(), QueryQueryDefinitionCostAnalysisUiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueryQueryDefinitionReportQueryInput)(nil)).Elem(), QueryQueryDefinitionReportQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueryQueryDefinitionReportQueryPtrInput)(nil)).Elem(), QueryQueryDefinitionReportQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueryQueryDefinitionReportQueryForecastInput)(nil)).Elem(), QueryQueryDefinitionReportQueryForecastArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueryQueryDefinitionReportQueryForecastPtrInput)(nil)).Elem(), QueryQueryDefinitionReportQueryForecastArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueryQueryDefinitionReportQueryGroupByTagInput)(nil)).Elem(), QueryQueryDefinitionReportQueryGroupByTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueryQueryDefinitionReportQueryGroupByTagArrayInput)(nil)).Elem(), QueryQueryDefinitionReportQueryGroupByTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UsageForecastInput)(nil)).Elem(), UsageForecastArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UsageForecastPtrInput)(nil)).Elem(), UsageForecastArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UsageGroupByTagInput)(nil)).Elem(), UsageGroupByTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UsageGroupByTagArrayInput)(nil)).Elem(), UsageGroupByTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UsageItemInput)(nil)).Elem(), UsageItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UsageItemArrayInput)(nil)).Elem(), UsageItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UsageItemTagInput)(nil)).Elem(), UsageItemTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UsageItemTagArrayInput)(nil)).Elem(), UsageItemTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigurationItemInput)(nil)).Elem(), GetConfigurationItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigurationItemArrayInput)(nil)).Elem(), GetConfigurationItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomTableSavedCustomTableInput)(nil)).Elem(), GetCustomTableSavedCustomTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomTableSavedCustomTableArrayInput)(nil)).Elem(), GetCustomTableSavedCustomTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomTableSavedCustomTableGroupByTagInput)(nil)).Elem(), GetCustomTableSavedCustomTableGroupByTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomTableSavedCustomTableGroupByTagArrayInput)(nil)).Elem(), GetCustomTableSavedCustomTableGroupByTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomTablesCustomTableCollectionInput)(nil)).Elem(), GetCustomTablesCustomTableCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomTablesCustomTableCollectionArrayInput)(nil)).Elem(), GetCustomTablesCustomTableCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomTablesCustomTableCollectionItemInput)(nil)).Elem(), GetCustomTablesCustomTableCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomTablesCustomTableCollectionItemArrayInput)(nil)).Elem(), GetCustomTablesCustomTableCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomTablesCustomTableCollectionItemSavedCustomTableInput)(nil)).Elem(), GetCustomTablesCustomTableCollectionItemSavedCustomTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomTablesCustomTableCollectionItemSavedCustomTableArrayInput)(nil)).Elem(), GetCustomTablesCustomTableCollectionItemSavedCustomTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagInput)(nil)).Elem(), GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArrayInput)(nil)).Elem(), GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomTablesFilterInput)(nil)).Elem(), GetCustomTablesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomTablesFilterArrayInput)(nil)).Elem(), GetCustomTablesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueriesFilterInput)(nil)).Elem(), GetQueriesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueriesFilterArrayInput)(nil)).Elem(), GetQueriesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueriesQueryCollectionInput)(nil)).Elem(), GetQueriesQueryCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueriesQueryCollectionArrayInput)(nil)).Elem(), GetQueriesQueryCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueriesQueryCollectionItemInput)(nil)).Elem(), GetQueriesQueryCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueriesQueryCollectionItemArrayInput)(nil)).Elem(), GetQueriesQueryCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueriesQueryCollectionItemQueryDefinitionInput)(nil)).Elem(), GetQueriesQueryCollectionItemQueryDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueriesQueryCollectionItemQueryDefinitionArrayInput)(nil)).Elem(), GetQueriesQueryCollectionItemQueryDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiInput)(nil)).Elem(), GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArrayInput)(nil)).Elem(), GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueriesQueryCollectionItemQueryDefinitionReportQueryInput)(nil)).Elem(), GetQueriesQueryCollectionItemQueryDefinitionReportQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueriesQueryCollectionItemQueryDefinitionReportQueryArrayInput)(nil)).Elem(), GetQueriesQueryCollectionItemQueryDefinitionReportQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastInput)(nil)).Elem(), GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArrayInput)(nil)).Elem(), GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagInput)(nil)).Elem(), GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArrayInput)(nil)).Elem(), GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueryQueryDefinitionInput)(nil)).Elem(), GetQueryQueryDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueryQueryDefinitionArrayInput)(nil)).Elem(), GetQueryQueryDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueryQueryDefinitionCostAnalysisUiInput)(nil)).Elem(), GetQueryQueryDefinitionCostAnalysisUiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueryQueryDefinitionCostAnalysisUiArrayInput)(nil)).Elem(), GetQueryQueryDefinitionCostAnalysisUiArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueryQueryDefinitionReportQueryInput)(nil)).Elem(), GetQueryQueryDefinitionReportQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueryQueryDefinitionReportQueryArrayInput)(nil)).Elem(), GetQueryQueryDefinitionReportQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueryQueryDefinitionReportQueryForecastInput)(nil)).Elem(), GetQueryQueryDefinitionReportQueryForecastArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueryQueryDefinitionReportQueryForecastArrayInput)(nil)).Elem(), GetQueryQueryDefinitionReportQueryForecastArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueryQueryDefinitionReportQueryGroupByTagInput)(nil)).Elem(), GetQueryQueryDefinitionReportQueryGroupByTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueryQueryDefinitionReportQueryGroupByTagArrayInput)(nil)).Elem(), GetQueryQueryDefinitionReportQueryGroupByTagArray{})
	pulumi.RegisterOutputType(CustomTableSavedCustomTableOutput{})
	pulumi.RegisterOutputType(CustomTableSavedCustomTablePtrOutput{})
	pulumi.RegisterOutputType(CustomTableSavedCustomTableGroupByTagOutput{})
	pulumi.RegisterOutputType(CustomTableSavedCustomTableGroupByTagArrayOutput{})
	pulumi.RegisterOutputType(QueryQueryDefinitionOutput{})
	pulumi.RegisterOutputType(QueryQueryDefinitionPtrOutput{})
	pulumi.RegisterOutputType(QueryQueryDefinitionCostAnalysisUiOutput{})
	pulumi.RegisterOutputType(QueryQueryDefinitionCostAnalysisUiPtrOutput{})
	pulumi.RegisterOutputType(QueryQueryDefinitionReportQueryOutput{})
	pulumi.RegisterOutputType(QueryQueryDefinitionReportQueryPtrOutput{})
	pulumi.RegisterOutputType(QueryQueryDefinitionReportQueryForecastOutput{})
	pulumi.RegisterOutputType(QueryQueryDefinitionReportQueryForecastPtrOutput{})
	pulumi.RegisterOutputType(QueryQueryDefinitionReportQueryGroupByTagOutput{})
	pulumi.RegisterOutputType(QueryQueryDefinitionReportQueryGroupByTagArrayOutput{})
	pulumi.RegisterOutputType(UsageForecastOutput{})
	pulumi.RegisterOutputType(UsageForecastPtrOutput{})
	pulumi.RegisterOutputType(UsageGroupByTagOutput{})
	pulumi.RegisterOutputType(UsageGroupByTagArrayOutput{})
	pulumi.RegisterOutputType(UsageItemOutput{})
	pulumi.RegisterOutputType(UsageItemArrayOutput{})
	pulumi.RegisterOutputType(UsageItemTagOutput{})
	pulumi.RegisterOutputType(UsageItemTagArrayOutput{})
	pulumi.RegisterOutputType(GetConfigurationItemOutput{})
	pulumi.RegisterOutputType(GetConfigurationItemArrayOutput{})
	pulumi.RegisterOutputType(GetCustomTableSavedCustomTableOutput{})
	pulumi.RegisterOutputType(GetCustomTableSavedCustomTableArrayOutput{})
	pulumi.RegisterOutputType(GetCustomTableSavedCustomTableGroupByTagOutput{})
	pulumi.RegisterOutputType(GetCustomTableSavedCustomTableGroupByTagArrayOutput{})
	pulumi.RegisterOutputType(GetCustomTablesCustomTableCollectionOutput{})
	pulumi.RegisterOutputType(GetCustomTablesCustomTableCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetCustomTablesCustomTableCollectionItemOutput{})
	pulumi.RegisterOutputType(GetCustomTablesCustomTableCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetCustomTablesCustomTableCollectionItemSavedCustomTableOutput{})
	pulumi.RegisterOutputType(GetCustomTablesCustomTableCollectionItemSavedCustomTableArrayOutput{})
	pulumi.RegisterOutputType(GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagOutput{})
	pulumi.RegisterOutputType(GetCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTagArrayOutput{})
	pulumi.RegisterOutputType(GetCustomTablesFilterOutput{})
	pulumi.RegisterOutputType(GetCustomTablesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetQueriesFilterOutput{})
	pulumi.RegisterOutputType(GetQueriesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetQueriesQueryCollectionOutput{})
	pulumi.RegisterOutputType(GetQueriesQueryCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetQueriesQueryCollectionItemOutput{})
	pulumi.RegisterOutputType(GetQueriesQueryCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetQueriesQueryCollectionItemQueryDefinitionOutput{})
	pulumi.RegisterOutputType(GetQueriesQueryCollectionItemQueryDefinitionArrayOutput{})
	pulumi.RegisterOutputType(GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiOutput{})
	pulumi.RegisterOutputType(GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUiArrayOutput{})
	pulumi.RegisterOutputType(GetQueriesQueryCollectionItemQueryDefinitionReportQueryOutput{})
	pulumi.RegisterOutputType(GetQueriesQueryCollectionItemQueryDefinitionReportQueryArrayOutput{})
	pulumi.RegisterOutputType(GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastOutput{})
	pulumi.RegisterOutputType(GetQueriesQueryCollectionItemQueryDefinitionReportQueryForecastArrayOutput{})
	pulumi.RegisterOutputType(GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagOutput{})
	pulumi.RegisterOutputType(GetQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTagArrayOutput{})
	pulumi.RegisterOutputType(GetQueryQueryDefinitionOutput{})
	pulumi.RegisterOutputType(GetQueryQueryDefinitionArrayOutput{})
	pulumi.RegisterOutputType(GetQueryQueryDefinitionCostAnalysisUiOutput{})
	pulumi.RegisterOutputType(GetQueryQueryDefinitionCostAnalysisUiArrayOutput{})
	pulumi.RegisterOutputType(GetQueryQueryDefinitionReportQueryOutput{})
	pulumi.RegisterOutputType(GetQueryQueryDefinitionReportQueryArrayOutput{})
	pulumi.RegisterOutputType(GetQueryQueryDefinitionReportQueryForecastOutput{})
	pulumi.RegisterOutputType(GetQueryQueryDefinitionReportQueryForecastArrayOutput{})
	pulumi.RegisterOutputType(GetQueryQueryDefinitionReportQueryGroupByTagOutput{})
	pulumi.RegisterOutputType(GetQueryQueryDefinitionReportQueryGroupByTagArrayOutput{})
}
