// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package monitoring

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Alarm Suppression resource in Oracle Cloud Infrastructure Monitoring service.
//
// Creates a dimension-specific suppression for an alarm.
//
// For important limits information, see
// [Limits on Monitoring](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Concepts/monitoringoverview.htm#limits).
//
// This call is subject to a Monitoring limit that applies to the total number of requests across all alarm operations.
// Monitoring might throttle this call to reject an otherwise valid request when the total rate of alarm operations exceeds 10 requests,
// or transactions, per second (TPS) for a given tenancy.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Monitoring"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Monitoring.NewAlarmSuppression(ctx, "testAlarmSuppression", &Monitoring.AlarmSuppressionArgs{
//				AlarmSuppressionTarget: &monitoring.AlarmSuppressionAlarmSuppressionTargetArgs{
//					AlarmId:    pulumi.Any(oci_monitoring_alarm.Test_alarm.Id),
//					TargetType: pulumi.Any(_var.Alarm_suppression_alarm_suppression_target_target_type),
//				},
//				Dimensions:        pulumi.Any(_var.Alarm_suppression_dimensions),
//				DisplayName:       pulumi.Any(_var.Alarm_suppression_display_name),
//				TimeSuppressFrom:  pulumi.Any(_var.Alarm_suppression_time_suppress_from),
//				TimeSuppressUntil: pulumi.Any(_var.Alarm_suppression_time_suppress_until),
//				DefinedTags: pulumi.Map{
//					"Operations.CostCenter": pulumi.Any("42"),
//				},
//				Description: pulumi.Any(_var.Alarm_suppression_description),
//				FreeformTags: pulumi.Map{
//					"Department": pulumi.Any("Finance"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// AlarmSuppressions can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Monitoring/alarmSuppression:AlarmSuppression test_alarm_suppression "id"
// ```
type AlarmSuppression struct {
	pulumi.CustomResourceState

	// The target of the alarm suppression.
	AlarmSuppressionTarget AlarmSuppressionAlarmSuppressionTargetOutput `pulumi:"alarmSuppressionTarget"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the alarm suppression.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// Human-readable reason for this alarm suppression. It does not have to be unique, and it's changeable. Avoid entering confidential information.
	//
	// Oracle recommends including tracking information for the event or associated work, such as a ticket number.
	//
	// Example: `Planned outage due to change IT-1234.`
	Description pulumi.StringOutput `pulumi:"description"`
	// A filter to suppress only alarm state entries that include the set of specified dimension key-value pairs. If you specify {"availabilityDomain": "phx-ad-1"} and the alarm state entry corresponds to the set {"availabilityDomain": "phx-ad-1" and "resourceId": "instance.region1.phx.exampleuniqueID"}, then this alarm will be included for suppression.
	//
	// The value cannot be an empty object. Only a single value is allowed per key. No grouping of multiple values is allowed under the same key. Maximum characters (after serialization): 4000. This maximum satisfies typical use cases. The response for an exceeded maximum is `HTTP 400` with an "dimensions values are too long" message.
	Dimensions pulumi.MapOutput `pulumi:"dimensions"`
	// A user-friendly name for the alarm suppression. It does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The current lifecycle state of the alarm suppression.  Example: `DELETED`
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the alarm suppression was created. Format defined by RFC3339.  Example: `2018-02-01T01:02:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The start date and time for the suppression to take place, inclusive. Format defined by RFC3339.  Example: `2023-02-01T01:02:29.600Z`
	TimeSuppressFrom pulumi.StringOutput `pulumi:"timeSuppressFrom"`
	// The end date and time for the suppression to take place, inclusive. Format defined by RFC3339.  Example: `2023-02-01T02:02:29.600Z`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TimeSuppressUntil pulumi.StringOutput `pulumi:"timeSuppressUntil"`
	// The date and time the alarm suppression was last updated (deleted). Format defined by RFC3339.  Example: `2018-02-03T01:02:29.600Z`
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewAlarmSuppression registers a new resource with the given unique name, arguments, and options.
func NewAlarmSuppression(ctx *pulumi.Context,
	name string, args *AlarmSuppressionArgs, opts ...pulumi.ResourceOption) (*AlarmSuppression, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AlarmSuppressionTarget == nil {
		return nil, errors.New("invalid value for required argument 'AlarmSuppressionTarget'")
	}
	if args.Dimensions == nil {
		return nil, errors.New("invalid value for required argument 'Dimensions'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.TimeSuppressFrom == nil {
		return nil, errors.New("invalid value for required argument 'TimeSuppressFrom'")
	}
	if args.TimeSuppressUntil == nil {
		return nil, errors.New("invalid value for required argument 'TimeSuppressUntil'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AlarmSuppression
	err := ctx.RegisterResource("oci:Monitoring/alarmSuppression:AlarmSuppression", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlarmSuppression gets an existing AlarmSuppression resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlarmSuppression(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AlarmSuppressionState, opts ...pulumi.ResourceOption) (*AlarmSuppression, error) {
	var resource AlarmSuppression
	err := ctx.ReadResource("oci:Monitoring/alarmSuppression:AlarmSuppression", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AlarmSuppression resources.
type alarmSuppressionState struct {
	// The target of the alarm suppression.
	AlarmSuppressionTarget *AlarmSuppressionAlarmSuppressionTarget `pulumi:"alarmSuppressionTarget"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the alarm suppression.
	CompartmentId *string `pulumi:"compartmentId"`
	// Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Human-readable reason for this alarm suppression. It does not have to be unique, and it's changeable. Avoid entering confidential information.
	//
	// Oracle recommends including tracking information for the event or associated work, such as a ticket number.
	//
	// Example: `Planned outage due to change IT-1234.`
	Description *string `pulumi:"description"`
	// A filter to suppress only alarm state entries that include the set of specified dimension key-value pairs. If you specify {"availabilityDomain": "phx-ad-1"} and the alarm state entry corresponds to the set {"availabilityDomain": "phx-ad-1" and "resourceId": "instance.region1.phx.exampleuniqueID"}, then this alarm will be included for suppression.
	//
	// The value cannot be an empty object. Only a single value is allowed per key. No grouping of multiple values is allowed under the same key. Maximum characters (after serialization): 4000. This maximum satisfies typical use cases. The response for an exceeded maximum is `HTTP 400` with an "dimensions values are too long" message.
	Dimensions map[string]interface{} `pulumi:"dimensions"`
	// A user-friendly name for the alarm suppression. It does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The current lifecycle state of the alarm suppression.  Example: `DELETED`
	State *string `pulumi:"state"`
	// The date and time the alarm suppression was created. Format defined by RFC3339.  Example: `2018-02-01T01:02:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
	// The start date and time for the suppression to take place, inclusive. Format defined by RFC3339.  Example: `2023-02-01T01:02:29.600Z`
	TimeSuppressFrom *string `pulumi:"timeSuppressFrom"`
	// The end date and time for the suppression to take place, inclusive. Format defined by RFC3339.  Example: `2023-02-01T02:02:29.600Z`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TimeSuppressUntil *string `pulumi:"timeSuppressUntil"`
	// The date and time the alarm suppression was last updated (deleted). Format defined by RFC3339.  Example: `2018-02-03T01:02:29.600Z`
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type AlarmSuppressionState struct {
	// The target of the alarm suppression.
	AlarmSuppressionTarget AlarmSuppressionAlarmSuppressionTargetPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the alarm suppression.
	CompartmentId pulumi.StringPtrInput
	// Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// Human-readable reason for this alarm suppression. It does not have to be unique, and it's changeable. Avoid entering confidential information.
	//
	// Oracle recommends including tracking information for the event or associated work, such as a ticket number.
	//
	// Example: `Planned outage due to change IT-1234.`
	Description pulumi.StringPtrInput
	// A filter to suppress only alarm state entries that include the set of specified dimension key-value pairs. If you specify {"availabilityDomain": "phx-ad-1"} and the alarm state entry corresponds to the set {"availabilityDomain": "phx-ad-1" and "resourceId": "instance.region1.phx.exampleuniqueID"}, then this alarm will be included for suppression.
	//
	// The value cannot be an empty object. Only a single value is allowed per key. No grouping of multiple values is allowed under the same key. Maximum characters (after serialization): 4000. This maximum satisfies typical use cases. The response for an exceeded maximum is `HTTP 400` with an "dimensions values are too long" message.
	Dimensions pulumi.MapInput
	// A user-friendly name for the alarm suppression. It does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The current lifecycle state of the alarm suppression.  Example: `DELETED`
	State pulumi.StringPtrInput
	// The date and time the alarm suppression was created. Format defined by RFC3339.  Example: `2018-02-01T01:02:29.600Z`
	TimeCreated pulumi.StringPtrInput
	// The start date and time for the suppression to take place, inclusive. Format defined by RFC3339.  Example: `2023-02-01T01:02:29.600Z`
	TimeSuppressFrom pulumi.StringPtrInput
	// The end date and time for the suppression to take place, inclusive. Format defined by RFC3339.  Example: `2023-02-01T02:02:29.600Z`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TimeSuppressUntil pulumi.StringPtrInput
	// The date and time the alarm suppression was last updated (deleted). Format defined by RFC3339.  Example: `2018-02-03T01:02:29.600Z`
	TimeUpdated pulumi.StringPtrInput
}

func (AlarmSuppressionState) ElementType() reflect.Type {
	return reflect.TypeOf((*alarmSuppressionState)(nil)).Elem()
}

type alarmSuppressionArgs struct {
	// The target of the alarm suppression.
	AlarmSuppressionTarget AlarmSuppressionAlarmSuppressionTarget `pulumi:"alarmSuppressionTarget"`
	// Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Human-readable reason for this alarm suppression. It does not have to be unique, and it's changeable. Avoid entering confidential information.
	//
	// Oracle recommends including tracking information for the event or associated work, such as a ticket number.
	//
	// Example: `Planned outage due to change IT-1234.`
	Description *string `pulumi:"description"`
	// A filter to suppress only alarm state entries that include the set of specified dimension key-value pairs. If you specify {"availabilityDomain": "phx-ad-1"} and the alarm state entry corresponds to the set {"availabilityDomain": "phx-ad-1" and "resourceId": "instance.region1.phx.exampleuniqueID"}, then this alarm will be included for suppression.
	//
	// The value cannot be an empty object. Only a single value is allowed per key. No grouping of multiple values is allowed under the same key. Maximum characters (after serialization): 4000. This maximum satisfies typical use cases. The response for an exceeded maximum is `HTTP 400` with an "dimensions values are too long" message.
	Dimensions map[string]interface{} `pulumi:"dimensions"`
	// A user-friendly name for the alarm suppression. It does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The start date and time for the suppression to take place, inclusive. Format defined by RFC3339.  Example: `2023-02-01T01:02:29.600Z`
	TimeSuppressFrom string `pulumi:"timeSuppressFrom"`
	// The end date and time for the suppression to take place, inclusive. Format defined by RFC3339.  Example: `2023-02-01T02:02:29.600Z`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TimeSuppressUntil string `pulumi:"timeSuppressUntil"`
}

// The set of arguments for constructing a AlarmSuppression resource.
type AlarmSuppressionArgs struct {
	// The target of the alarm suppression.
	AlarmSuppressionTarget AlarmSuppressionAlarmSuppressionTargetInput
	// Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// Human-readable reason for this alarm suppression. It does not have to be unique, and it's changeable. Avoid entering confidential information.
	//
	// Oracle recommends including tracking information for the event or associated work, such as a ticket number.
	//
	// Example: `Planned outage due to change IT-1234.`
	Description pulumi.StringPtrInput
	// A filter to suppress only alarm state entries that include the set of specified dimension key-value pairs. If you specify {"availabilityDomain": "phx-ad-1"} and the alarm state entry corresponds to the set {"availabilityDomain": "phx-ad-1" and "resourceId": "instance.region1.phx.exampleuniqueID"}, then this alarm will be included for suppression.
	//
	// The value cannot be an empty object. Only a single value is allowed per key. No grouping of multiple values is allowed under the same key. Maximum characters (after serialization): 4000. This maximum satisfies typical use cases. The response for an exceeded maximum is `HTTP 400` with an "dimensions values are too long" message.
	Dimensions pulumi.MapInput
	// A user-friendly name for the alarm suppression. It does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringInput
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The start date and time for the suppression to take place, inclusive. Format defined by RFC3339.  Example: `2023-02-01T01:02:29.600Z`
	TimeSuppressFrom pulumi.StringInput
	// The end date and time for the suppression to take place, inclusive. Format defined by RFC3339.  Example: `2023-02-01T02:02:29.600Z`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TimeSuppressUntil pulumi.StringInput
}

func (AlarmSuppressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*alarmSuppressionArgs)(nil)).Elem()
}

type AlarmSuppressionInput interface {
	pulumi.Input

	ToAlarmSuppressionOutput() AlarmSuppressionOutput
	ToAlarmSuppressionOutputWithContext(ctx context.Context) AlarmSuppressionOutput
}

func (*AlarmSuppression) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmSuppression)(nil)).Elem()
}

func (i *AlarmSuppression) ToAlarmSuppressionOutput() AlarmSuppressionOutput {
	return i.ToAlarmSuppressionOutputWithContext(context.Background())
}

func (i *AlarmSuppression) ToAlarmSuppressionOutputWithContext(ctx context.Context) AlarmSuppressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmSuppressionOutput)
}

// AlarmSuppressionArrayInput is an input type that accepts AlarmSuppressionArray and AlarmSuppressionArrayOutput values.
// You can construct a concrete instance of `AlarmSuppressionArrayInput` via:
//
//	AlarmSuppressionArray{ AlarmSuppressionArgs{...} }
type AlarmSuppressionArrayInput interface {
	pulumi.Input

	ToAlarmSuppressionArrayOutput() AlarmSuppressionArrayOutput
	ToAlarmSuppressionArrayOutputWithContext(context.Context) AlarmSuppressionArrayOutput
}

type AlarmSuppressionArray []AlarmSuppressionInput

func (AlarmSuppressionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlarmSuppression)(nil)).Elem()
}

func (i AlarmSuppressionArray) ToAlarmSuppressionArrayOutput() AlarmSuppressionArrayOutput {
	return i.ToAlarmSuppressionArrayOutputWithContext(context.Background())
}

func (i AlarmSuppressionArray) ToAlarmSuppressionArrayOutputWithContext(ctx context.Context) AlarmSuppressionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmSuppressionArrayOutput)
}

// AlarmSuppressionMapInput is an input type that accepts AlarmSuppressionMap and AlarmSuppressionMapOutput values.
// You can construct a concrete instance of `AlarmSuppressionMapInput` via:
//
//	AlarmSuppressionMap{ "key": AlarmSuppressionArgs{...} }
type AlarmSuppressionMapInput interface {
	pulumi.Input

	ToAlarmSuppressionMapOutput() AlarmSuppressionMapOutput
	ToAlarmSuppressionMapOutputWithContext(context.Context) AlarmSuppressionMapOutput
}

type AlarmSuppressionMap map[string]AlarmSuppressionInput

func (AlarmSuppressionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlarmSuppression)(nil)).Elem()
}

func (i AlarmSuppressionMap) ToAlarmSuppressionMapOutput() AlarmSuppressionMapOutput {
	return i.ToAlarmSuppressionMapOutputWithContext(context.Background())
}

func (i AlarmSuppressionMap) ToAlarmSuppressionMapOutputWithContext(ctx context.Context) AlarmSuppressionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmSuppressionMapOutput)
}

type AlarmSuppressionOutput struct{ *pulumi.OutputState }

func (AlarmSuppressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmSuppression)(nil)).Elem()
}

func (o AlarmSuppressionOutput) ToAlarmSuppressionOutput() AlarmSuppressionOutput {
	return o
}

func (o AlarmSuppressionOutput) ToAlarmSuppressionOutputWithContext(ctx context.Context) AlarmSuppressionOutput {
	return o
}

// The target of the alarm suppression.
func (o AlarmSuppressionOutput) AlarmSuppressionTarget() AlarmSuppressionAlarmSuppressionTargetOutput {
	return o.ApplyT(func(v *AlarmSuppression) AlarmSuppressionAlarmSuppressionTargetOutput {
		return v.AlarmSuppressionTarget
	}).(AlarmSuppressionAlarmSuppressionTargetOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the alarm suppression.
func (o AlarmSuppressionOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *AlarmSuppression) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"Operations.CostCenter": "42"}`
func (o AlarmSuppressionOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *AlarmSuppression) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// Human-readable reason for this alarm suppression. It does not have to be unique, and it's changeable. Avoid entering confidential information.
//
// Oracle recommends including tracking information for the event or associated work, such as a ticket number.
//
// Example: `Planned outage due to change IT-1234.`
func (o AlarmSuppressionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *AlarmSuppression) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// A filter to suppress only alarm state entries that include the set of specified dimension key-value pairs. If you specify {"availabilityDomain": "phx-ad-1"} and the alarm state entry corresponds to the set {"availabilityDomain": "phx-ad-1" and "resourceId": "instance.region1.phx.exampleuniqueID"}, then this alarm will be included for suppression.
//
// The value cannot be an empty object. Only a single value is allowed per key. No grouping of multiple values is allowed under the same key. Maximum characters (after serialization): 4000. This maximum satisfies typical use cases. The response for an exceeded maximum is `HTTP 400` with an "dimensions values are too long" message.
func (o AlarmSuppressionOutput) Dimensions() pulumi.MapOutput {
	return o.ApplyT(func(v *AlarmSuppression) pulumi.MapOutput { return v.Dimensions }).(pulumi.MapOutput)
}

// A user-friendly name for the alarm suppression. It does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o AlarmSuppressionOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *AlarmSuppression) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"Department": "Finance"}`
func (o AlarmSuppressionOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *AlarmSuppression) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// The current lifecycle state of the alarm suppression.  Example: `DELETED`
func (o AlarmSuppressionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *AlarmSuppression) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The date and time the alarm suppression was created. Format defined by RFC3339.  Example: `2018-02-01T01:02:29.600Z`
func (o AlarmSuppressionOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *AlarmSuppression) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The start date and time for the suppression to take place, inclusive. Format defined by RFC3339.  Example: `2023-02-01T01:02:29.600Z`
func (o AlarmSuppressionOutput) TimeSuppressFrom() pulumi.StringOutput {
	return o.ApplyT(func(v *AlarmSuppression) pulumi.StringOutput { return v.TimeSuppressFrom }).(pulumi.StringOutput)
}

// The end date and time for the suppression to take place, inclusive. Format defined by RFC3339.  Example: `2023-02-01T02:02:29.600Z`
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o AlarmSuppressionOutput) TimeSuppressUntil() pulumi.StringOutput {
	return o.ApplyT(func(v *AlarmSuppression) pulumi.StringOutput { return v.TimeSuppressUntil }).(pulumi.StringOutput)
}

// The date and time the alarm suppression was last updated (deleted). Format defined by RFC3339.  Example: `2018-02-03T01:02:29.600Z`
func (o AlarmSuppressionOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *AlarmSuppression) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type AlarmSuppressionArrayOutput struct{ *pulumi.OutputState }

func (AlarmSuppressionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlarmSuppression)(nil)).Elem()
}

func (o AlarmSuppressionArrayOutput) ToAlarmSuppressionArrayOutput() AlarmSuppressionArrayOutput {
	return o
}

func (o AlarmSuppressionArrayOutput) ToAlarmSuppressionArrayOutputWithContext(ctx context.Context) AlarmSuppressionArrayOutput {
	return o
}

func (o AlarmSuppressionArrayOutput) Index(i pulumi.IntInput) AlarmSuppressionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AlarmSuppression {
		return vs[0].([]*AlarmSuppression)[vs[1].(int)]
	}).(AlarmSuppressionOutput)
}

type AlarmSuppressionMapOutput struct{ *pulumi.OutputState }

func (AlarmSuppressionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlarmSuppression)(nil)).Elem()
}

func (o AlarmSuppressionMapOutput) ToAlarmSuppressionMapOutput() AlarmSuppressionMapOutput {
	return o
}

func (o AlarmSuppressionMapOutput) ToAlarmSuppressionMapOutputWithContext(ctx context.Context) AlarmSuppressionMapOutput {
	return o
}

func (o AlarmSuppressionMapOutput) MapIndex(k pulumi.StringInput) AlarmSuppressionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AlarmSuppression {
		return vs[0].(map[string]*AlarmSuppression)[vs[1].(string)]
	}).(AlarmSuppressionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmSuppressionInput)(nil)).Elem(), &AlarmSuppression{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmSuppressionArrayInput)(nil)).Elem(), AlarmSuppressionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmSuppressionMapInput)(nil)).Elem(), AlarmSuppressionMap{})
	pulumi.RegisterOutputType(AlarmSuppressionOutput{})
	pulumi.RegisterOutputType(AlarmSuppressionArrayOutput{})
	pulumi.RegisterOutputType(AlarmSuppressionMapOutput{})
}
