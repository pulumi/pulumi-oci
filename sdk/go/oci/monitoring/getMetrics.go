// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package monitoring

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Metrics in Oracle Cloud Infrastructure Monitoring service.
//
// Returns metric definitions that match the criteria specified in the request. Compartment OCID required.
// For more information, see
// [Listing Metric Definitions](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Tasks/list-metric.htm).
// For information about metrics, see
// [Metrics Overview](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Concepts/monitoringoverview.htm#MetricsOverview).
// For important limits information, see
// [Limits on Monitoring](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Concepts/monitoringoverview.htm#limits).
//
// Transactions Per Second (TPS) per-tenancy limit for this operation: 10.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Monitoring"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Monitoring.GetMetrics(ctx, &monitoring.GetMetricsArgs{
//				CompartmentId:          compartmentId,
//				CompartmentIdInSubtree: pulumi.BoolRef(metricCompartmentIdInSubtree),
//				DimensionFilters:       metricDimensionFilters,
//				GroupBies:              metricGroupBy,
//				Name:                   pulumi.StringRef(metricName),
//				Namespace:              pulumi.StringRef(metricNamespace),
//				ResourceGroup:          pulumi.StringRef(metricResourceGroup),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetMetrics(ctx *pulumi.Context, args *GetMetricsArgs, opts ...pulumi.InvokeOption) (*GetMetricsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetMetricsResult
	err := ctx.Invoke("oci:Monitoring/getMetrics:getMetrics", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMetrics.
type GetMetricsArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the resources monitored by the metric that you are searching for. Use tenancyId to search in the root compartment.  Example: `ocid1.compartment.oc1..exampleuniqueID`
	CompartmentId string `pulumi:"compartmentId"`
	// When true, returns resources from all compartments and subcompartments. The parameter can only be set to true when compartmentId is the tenancy OCID (the tenancy is the root compartment). A true value requires the user to have tenancy-level permissions. If this requirement is not met, then the call is rejected. When false, returns resources from only the compartment specified in compartmentId. Default is false.
	CompartmentIdInSubtree *bool `pulumi:"compartmentIdInSubtree"`
	// Qualifiers that you want to use when searching for metric definitions. Available dimensions vary by metric namespace. Each dimension takes the form of a key-value pair.  Example: `{"resourceId": "instance.region1.phx.exampleuniqueID"}`
	DimensionFilters map[string]interface{} `pulumi:"dimensionFilters"`
	Filters          []GetMetricsFilter     `pulumi:"filters"`
	// Group metrics by these fields in the response. For example, to list all metric namespaces available in a compartment, groupBy the "namespace" field. Supported fields: namespace, name, resourceGroup. If `groupBy` is used, then `dimensionFilters` is ignored.
	//
	// Example - group by namespace: `[ "namespace" ]`
	GroupBies []string `pulumi:"groupBies"`
	// The metric name to use when searching for metric definitions.  Example: `CpuUtilization`
	Name *string `pulumi:"name"`
	// The source service or application to use when searching for metric definitions.  Example: `ociComputeagent`
	Namespace *string `pulumi:"namespace"`
	// Resource group that you want to match. A null value returns only metric data that has no resource groups. The specified resource group must exist in the definition of the posted metric. Only one resource group can be applied per metric. A valid resourceGroup value starts with an alphabetical character and includes only alphanumeric characters, periods (.), underscores (_), hyphens (-), and dollar signs ($).  Example: `frontend-fleet`
	ResourceGroup *string `pulumi:"resourceGroup"`
}

// A collection of values returned by getMetrics.
type GetMetricsResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the resources monitored by the metric.
	CompartmentId          string                 `pulumi:"compartmentId"`
	CompartmentIdInSubtree *bool                  `pulumi:"compartmentIdInSubtree"`
	DimensionFilters       map[string]interface{} `pulumi:"dimensionFilters"`
	Filters                []GetMetricsFilter     `pulumi:"filters"`
	GroupBies              []string               `pulumi:"groupBies"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of metrics.
	Metrics []GetMetricsMetric `pulumi:"metrics"`
	// The name of the metric.  Example: `CpuUtilization`
	Name *string `pulumi:"name"`
	// The source service or application emitting the metric.  Example: `ociComputeagent`
	Namespace *string `pulumi:"namespace"`
	// Resource group provided with the posted metric. A resource group is a custom string that you can match when retrieving custom metrics. Only one resource group can be applied per metric. A valid resourceGroup value starts with an alphabetical character and includes only alphanumeric characters, periods (.), underscores (_), hyphens (-), and dollar signs ($).  Example: `frontend-fleet`
	ResourceGroup *string `pulumi:"resourceGroup"`
}

func GetMetricsOutput(ctx *pulumi.Context, args GetMetricsOutputArgs, opts ...pulumi.InvokeOption) GetMetricsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetMetricsResult, error) {
			args := v.(GetMetricsArgs)
			r, err := GetMetrics(ctx, &args, opts...)
			var s GetMetricsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetMetricsResultOutput)
}

// A collection of arguments for invoking getMetrics.
type GetMetricsOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the resources monitored by the metric that you are searching for. Use tenancyId to search in the root compartment.  Example: `ocid1.compartment.oc1..exampleuniqueID`
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// When true, returns resources from all compartments and subcompartments. The parameter can only be set to true when compartmentId is the tenancy OCID (the tenancy is the root compartment). A true value requires the user to have tenancy-level permissions. If this requirement is not met, then the call is rejected. When false, returns resources from only the compartment specified in compartmentId. Default is false.
	CompartmentIdInSubtree pulumi.BoolPtrInput `pulumi:"compartmentIdInSubtree"`
	// Qualifiers that you want to use when searching for metric definitions. Available dimensions vary by metric namespace. Each dimension takes the form of a key-value pair.  Example: `{"resourceId": "instance.region1.phx.exampleuniqueID"}`
	DimensionFilters pulumi.MapInput            `pulumi:"dimensionFilters"`
	Filters          GetMetricsFilterArrayInput `pulumi:"filters"`
	// Group metrics by these fields in the response. For example, to list all metric namespaces available in a compartment, groupBy the "namespace" field. Supported fields: namespace, name, resourceGroup. If `groupBy` is used, then `dimensionFilters` is ignored.
	//
	// Example - group by namespace: `[ "namespace" ]`
	GroupBies pulumi.StringArrayInput `pulumi:"groupBies"`
	// The metric name to use when searching for metric definitions.  Example: `CpuUtilization`
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The source service or application to use when searching for metric definitions.  Example: `ociComputeagent`
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Resource group that you want to match. A null value returns only metric data that has no resource groups. The specified resource group must exist in the definition of the posted metric. Only one resource group can be applied per metric. A valid resourceGroup value starts with an alphabetical character and includes only alphanumeric characters, periods (.), underscores (_), hyphens (-), and dollar signs ($).  Example: `frontend-fleet`
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
}

func (GetMetricsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetricsArgs)(nil)).Elem()
}

// A collection of values returned by getMetrics.
type GetMetricsResultOutput struct{ *pulumi.OutputState }

func (GetMetricsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetricsResult)(nil)).Elem()
}

func (o GetMetricsResultOutput) ToGetMetricsResultOutput() GetMetricsResultOutput {
	return o
}

func (o GetMetricsResultOutput) ToGetMetricsResultOutputWithContext(ctx context.Context) GetMetricsResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the resources monitored by the metric.
func (o GetMetricsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetMetricsResultOutput) CompartmentIdInSubtree() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetMetricsResult) *bool { return v.CompartmentIdInSubtree }).(pulumi.BoolPtrOutput)
}

func (o GetMetricsResultOutput) DimensionFilters() pulumi.MapOutput {
	return o.ApplyT(func(v GetMetricsResult) map[string]interface{} { return v.DimensionFilters }).(pulumi.MapOutput)
}

func (o GetMetricsResultOutput) Filters() GetMetricsFilterArrayOutput {
	return o.ApplyT(func(v GetMetricsResult) []GetMetricsFilter { return v.Filters }).(GetMetricsFilterArrayOutput)
}

func (o GetMetricsResultOutput) GroupBies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMetricsResult) []string { return v.GroupBies }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetMetricsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of metrics.
func (o GetMetricsResultOutput) Metrics() GetMetricsMetricArrayOutput {
	return o.ApplyT(func(v GetMetricsResult) []GetMetricsMetric { return v.Metrics }).(GetMetricsMetricArrayOutput)
}

// The name of the metric.  Example: `CpuUtilization`
func (o GetMetricsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMetricsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The source service or application emitting the metric.  Example: `ociComputeagent`
func (o GetMetricsResultOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMetricsResult) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Resource group provided with the posted metric. A resource group is a custom string that you can match when retrieving custom metrics. Only one resource group can be applied per metric. A valid resourceGroup value starts with an alphabetical character and includes only alphanumeric characters, periods (.), underscores (_), hyphens (-), and dollar signs ($).  Example: `frontend-fleet`
func (o GetMetricsResultOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMetricsResult) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMetricsResultOutput{})
}
