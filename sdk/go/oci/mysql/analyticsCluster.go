// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mysql

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Analytics Cluster resource in Oracle Cloud Infrastructure MySQL Database service.
//
// DEPRECATED -- please use HeatWave API instead.
// Updates the Analytics Cluster.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Mysql"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Mysql.NewAnalyticsCluster(ctx, "testAnalyticsCluster", &Mysql.AnalyticsClusterArgs{
//				DbSystemId:  pulumi.Any(oci_database_db_system.Test_db_system.Id),
//				ClusterSize: pulumi.Any(_var.Analytics_cluster_cluster_size),
//				ShapeName:   pulumi.Any(oci_mysql_shape.Test_shape.Name),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// AnalyticsCluster can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:Mysql/analyticsCluster:AnalyticsCluster test_analytics_cluster "dbSystems/{dbSystemId}/analyticsCluster"
//
// ```
type AnalyticsCluster struct {
	pulumi.CustomResourceState

	// An Analytics Cluster Node is a compute host that is part of an Analytics Cluster.
	ClusterNodes AnalyticsClusterClusterNodeArrayOutput `pulumi:"clusterNodes"`
	// (Updatable) A change to the number of nodes in the Analytics Cluster will result in the entire cluster being torn down and re-created with the new cluster of nodes. This may result in a significant downtime for the analytics capability while the Analytics Cluster is re-provisioned.
	ClusterSize pulumi.IntOutput `pulumi:"clusterSize"`
	// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId pulumi.StringOutput `pulumi:"dbSystemId"`
	// Additional information about the current lifecycleState.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// (Updatable) A change to the shape of the nodes in the Analytics Cluster will result in the entire cluster being torn down and re-created with Compute instances of the new Shape. This may result in significant downtime for the analytics capability while the Analytics Cluster is re-provisioned.
	ShapeName pulumi.StringOutput `pulumi:"shapeName"`
	// (Updatable) The target state for the Analytics Cluster. Could be set to `ACTIVE` or `INACTIVE`.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the Analytics Cluster was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time the Analytics Cluster was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewAnalyticsCluster registers a new resource with the given unique name, arguments, and options.
func NewAnalyticsCluster(ctx *pulumi.Context,
	name string, args *AnalyticsClusterArgs, opts ...pulumi.ResourceOption) (*AnalyticsCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterSize == nil {
		return nil, errors.New("invalid value for required argument 'ClusterSize'")
	}
	if args.DbSystemId == nil {
		return nil, errors.New("invalid value for required argument 'DbSystemId'")
	}
	if args.ShapeName == nil {
		return nil, errors.New("invalid value for required argument 'ShapeName'")
	}
	var resource AnalyticsCluster
	err := ctx.RegisterResource("oci:Mysql/analyticsCluster:AnalyticsCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAnalyticsCluster gets an existing AnalyticsCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAnalyticsCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AnalyticsClusterState, opts ...pulumi.ResourceOption) (*AnalyticsCluster, error) {
	var resource AnalyticsCluster
	err := ctx.ReadResource("oci:Mysql/analyticsCluster:AnalyticsCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AnalyticsCluster resources.
type analyticsClusterState struct {
	// An Analytics Cluster Node is a compute host that is part of an Analytics Cluster.
	ClusterNodes []AnalyticsClusterClusterNode `pulumi:"clusterNodes"`
	// (Updatable) A change to the number of nodes in the Analytics Cluster will result in the entire cluster being torn down and re-created with the new cluster of nodes. This may result in a significant downtime for the analytics capability while the Analytics Cluster is re-provisioned.
	ClusterSize *int `pulumi:"clusterSize"`
	// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId *string `pulumi:"dbSystemId"`
	// Additional information about the current lifecycleState.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// (Updatable) A change to the shape of the nodes in the Analytics Cluster will result in the entire cluster being torn down and re-created with Compute instances of the new Shape. This may result in significant downtime for the analytics capability while the Analytics Cluster is re-provisioned.
	ShapeName *string `pulumi:"shapeName"`
	// (Updatable) The target state for the Analytics Cluster. Could be set to `ACTIVE` or `INACTIVE`.
	State *string `pulumi:"state"`
	// The date and time the Analytics Cluster was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the Analytics Cluster was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type AnalyticsClusterState struct {
	// An Analytics Cluster Node is a compute host that is part of an Analytics Cluster.
	ClusterNodes AnalyticsClusterClusterNodeArrayInput
	// (Updatable) A change to the number of nodes in the Analytics Cluster will result in the entire cluster being torn down and re-created with the new cluster of nodes. This may result in a significant downtime for the analytics capability while the Analytics Cluster is re-provisioned.
	ClusterSize pulumi.IntPtrInput
	// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId pulumi.StringPtrInput
	// Additional information about the current lifecycleState.
	LifecycleDetails pulumi.StringPtrInput
	// (Updatable) A change to the shape of the nodes in the Analytics Cluster will result in the entire cluster being torn down and re-created with Compute instances of the new Shape. This may result in significant downtime for the analytics capability while the Analytics Cluster is re-provisioned.
	ShapeName pulumi.StringPtrInput
	// (Updatable) The target state for the Analytics Cluster. Could be set to `ACTIVE` or `INACTIVE`.
	State pulumi.StringPtrInput
	// The date and time the Analytics Cluster was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeCreated pulumi.StringPtrInput
	// The time the Analytics Cluster was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeUpdated pulumi.StringPtrInput
}

func (AnalyticsClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*analyticsClusterState)(nil)).Elem()
}

type analyticsClusterArgs struct {
	// (Updatable) A change to the number of nodes in the Analytics Cluster will result in the entire cluster being torn down and re-created with the new cluster of nodes. This may result in a significant downtime for the analytics capability while the Analytics Cluster is re-provisioned.
	ClusterSize int `pulumi:"clusterSize"`
	// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId string `pulumi:"dbSystemId"`
	// (Updatable) A change to the shape of the nodes in the Analytics Cluster will result in the entire cluster being torn down and re-created with Compute instances of the new Shape. This may result in significant downtime for the analytics capability while the Analytics Cluster is re-provisioned.
	ShapeName string `pulumi:"shapeName"`
	// (Updatable) The target state for the Analytics Cluster. Could be set to `ACTIVE` or `INACTIVE`.
	State *string `pulumi:"state"`
}

// The set of arguments for constructing a AnalyticsCluster resource.
type AnalyticsClusterArgs struct {
	// (Updatable) A change to the number of nodes in the Analytics Cluster will result in the entire cluster being torn down and re-created with the new cluster of nodes. This may result in a significant downtime for the analytics capability while the Analytics Cluster is re-provisioned.
	ClusterSize pulumi.IntInput
	// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId pulumi.StringInput
	// (Updatable) A change to the shape of the nodes in the Analytics Cluster will result in the entire cluster being torn down and re-created with Compute instances of the new Shape. This may result in significant downtime for the analytics capability while the Analytics Cluster is re-provisioned.
	ShapeName pulumi.StringInput
	// (Updatable) The target state for the Analytics Cluster. Could be set to `ACTIVE` or `INACTIVE`.
	State pulumi.StringPtrInput
}

func (AnalyticsClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*analyticsClusterArgs)(nil)).Elem()
}

type AnalyticsClusterInput interface {
	pulumi.Input

	ToAnalyticsClusterOutput() AnalyticsClusterOutput
	ToAnalyticsClusterOutputWithContext(ctx context.Context) AnalyticsClusterOutput
}

func (*AnalyticsCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsCluster)(nil)).Elem()
}

func (i *AnalyticsCluster) ToAnalyticsClusterOutput() AnalyticsClusterOutput {
	return i.ToAnalyticsClusterOutputWithContext(context.Background())
}

func (i *AnalyticsCluster) ToAnalyticsClusterOutputWithContext(ctx context.Context) AnalyticsClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsClusterOutput)
}

// AnalyticsClusterArrayInput is an input type that accepts AnalyticsClusterArray and AnalyticsClusterArrayOutput values.
// You can construct a concrete instance of `AnalyticsClusterArrayInput` via:
//
//	AnalyticsClusterArray{ AnalyticsClusterArgs{...} }
type AnalyticsClusterArrayInput interface {
	pulumi.Input

	ToAnalyticsClusterArrayOutput() AnalyticsClusterArrayOutput
	ToAnalyticsClusterArrayOutputWithContext(context.Context) AnalyticsClusterArrayOutput
}

type AnalyticsClusterArray []AnalyticsClusterInput

func (AnalyticsClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AnalyticsCluster)(nil)).Elem()
}

func (i AnalyticsClusterArray) ToAnalyticsClusterArrayOutput() AnalyticsClusterArrayOutput {
	return i.ToAnalyticsClusterArrayOutputWithContext(context.Background())
}

func (i AnalyticsClusterArray) ToAnalyticsClusterArrayOutputWithContext(ctx context.Context) AnalyticsClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsClusterArrayOutput)
}

// AnalyticsClusterMapInput is an input type that accepts AnalyticsClusterMap and AnalyticsClusterMapOutput values.
// You can construct a concrete instance of `AnalyticsClusterMapInput` via:
//
//	AnalyticsClusterMap{ "key": AnalyticsClusterArgs{...} }
type AnalyticsClusterMapInput interface {
	pulumi.Input

	ToAnalyticsClusterMapOutput() AnalyticsClusterMapOutput
	ToAnalyticsClusterMapOutputWithContext(context.Context) AnalyticsClusterMapOutput
}

type AnalyticsClusterMap map[string]AnalyticsClusterInput

func (AnalyticsClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AnalyticsCluster)(nil)).Elem()
}

func (i AnalyticsClusterMap) ToAnalyticsClusterMapOutput() AnalyticsClusterMapOutput {
	return i.ToAnalyticsClusterMapOutputWithContext(context.Background())
}

func (i AnalyticsClusterMap) ToAnalyticsClusterMapOutputWithContext(ctx context.Context) AnalyticsClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsClusterMapOutput)
}

type AnalyticsClusterOutput struct{ *pulumi.OutputState }

func (AnalyticsClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsCluster)(nil)).Elem()
}

func (o AnalyticsClusterOutput) ToAnalyticsClusterOutput() AnalyticsClusterOutput {
	return o
}

func (o AnalyticsClusterOutput) ToAnalyticsClusterOutputWithContext(ctx context.Context) AnalyticsClusterOutput {
	return o
}

// An Analytics Cluster Node is a compute host that is part of an Analytics Cluster.
func (o AnalyticsClusterOutput) ClusterNodes() AnalyticsClusterClusterNodeArrayOutput {
	return o.ApplyT(func(v *AnalyticsCluster) AnalyticsClusterClusterNodeArrayOutput { return v.ClusterNodes }).(AnalyticsClusterClusterNodeArrayOutput)
}

// (Updatable) A change to the number of nodes in the Analytics Cluster will result in the entire cluster being torn down and re-created with the new cluster of nodes. This may result in a significant downtime for the analytics capability while the Analytics Cluster is re-provisioned.
func (o AnalyticsClusterOutput) ClusterSize() pulumi.IntOutput {
	return o.ApplyT(func(v *AnalyticsCluster) pulumi.IntOutput { return v.ClusterSize }).(pulumi.IntOutput)
}

// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o AnalyticsClusterOutput) DbSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v *AnalyticsCluster) pulumi.StringOutput { return v.DbSystemId }).(pulumi.StringOutput)
}

// Additional information about the current lifecycleState.
func (o AnalyticsClusterOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *AnalyticsCluster) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// (Updatable) A change to the shape of the nodes in the Analytics Cluster will result in the entire cluster being torn down and re-created with Compute instances of the new Shape. This may result in significant downtime for the analytics capability while the Analytics Cluster is re-provisioned.
func (o AnalyticsClusterOutput) ShapeName() pulumi.StringOutput {
	return o.ApplyT(func(v *AnalyticsCluster) pulumi.StringOutput { return v.ShapeName }).(pulumi.StringOutput)
}

// (Updatable) The target state for the Analytics Cluster. Could be set to `ACTIVE` or `INACTIVE`.
func (o AnalyticsClusterOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *AnalyticsCluster) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The date and time the Analytics Cluster was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o AnalyticsClusterOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *AnalyticsCluster) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the Analytics Cluster was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o AnalyticsClusterOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *AnalyticsCluster) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type AnalyticsClusterArrayOutput struct{ *pulumi.OutputState }

func (AnalyticsClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AnalyticsCluster)(nil)).Elem()
}

func (o AnalyticsClusterArrayOutput) ToAnalyticsClusterArrayOutput() AnalyticsClusterArrayOutput {
	return o
}

func (o AnalyticsClusterArrayOutput) ToAnalyticsClusterArrayOutputWithContext(ctx context.Context) AnalyticsClusterArrayOutput {
	return o
}

func (o AnalyticsClusterArrayOutput) Index(i pulumi.IntInput) AnalyticsClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AnalyticsCluster {
		return vs[0].([]*AnalyticsCluster)[vs[1].(int)]
	}).(AnalyticsClusterOutput)
}

type AnalyticsClusterMapOutput struct{ *pulumi.OutputState }

func (AnalyticsClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AnalyticsCluster)(nil)).Elem()
}

func (o AnalyticsClusterMapOutput) ToAnalyticsClusterMapOutput() AnalyticsClusterMapOutput {
	return o
}

func (o AnalyticsClusterMapOutput) ToAnalyticsClusterMapOutputWithContext(ctx context.Context) AnalyticsClusterMapOutput {
	return o
}

func (o AnalyticsClusterMapOutput) MapIndex(k pulumi.StringInput) AnalyticsClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AnalyticsCluster {
		return vs[0].(map[string]*AnalyticsCluster)[vs[1].(string)]
	}).(AnalyticsClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsClusterInput)(nil)).Elem(), &AnalyticsCluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsClusterArrayInput)(nil)).Elem(), AnalyticsClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsClusterMapInput)(nil)).Elem(), AnalyticsClusterMap{})
	pulumi.RegisterOutputType(AnalyticsClusterOutput{})
	pulumi.RegisterOutputType(AnalyticsClusterArrayOutput{})
	pulumi.RegisterOutputType(AnalyticsClusterMapOutput{})
}
