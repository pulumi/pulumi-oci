// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mysql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Mysql Backup resource in Oracle Cloud Infrastructure MySQL Database service.
//
// # Get information about the specified Backup
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Mysql"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Mysql.GetMysqlBackup(ctx, &mysql.GetMysqlBackupArgs{
//				BackupId: testBackup.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupMysqlBackup(ctx *pulumi.Context, args *LookupMysqlBackupArgs, opts ...pulumi.InvokeOption) (*LookupMysqlBackupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMysqlBackupResult
	err := ctx.Invoke("oci:Mysql/getMysqlBackup:getMysqlBackup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMysqlBackup.
type LookupMysqlBackupArgs struct {
	// The OCID of the Backup
	BackupId string `pulumi:"backupId"`
}

// A collection of values returned by getMysqlBackup.
type LookupMysqlBackupResult struct {
	BackupId string `pulumi:"backupId"`
	// The size of the backup in base-2 (IEC) gibibytes. (GiB).
	BackupSizeInGbs int `pulumi:"backupSizeInGbs"`
	// The type of backup.
	BackupType string `pulumi:"backupType"`
	// The OCID of the compartment the DB System belongs in.
	CompartmentId string `pulumi:"compartmentId"`
	// Indicates how the backup was created: manually, automatic, or by an Operator.
	CreationType string `pulumi:"creationType"`
	// Initial size of the data volume in GiBs that will be created and attached.
	DataStorageSizeInGb int `pulumi:"dataStorageSizeInGb"`
	// The OCID of the DB System the backup is associated with.
	DbSystemId                string                                  `pulumi:"dbSystemId"`
	DbSystemSnapshotSummaries []GetMysqlBackupDbSystemSnapshotSummary `pulumi:"dbSystemSnapshotSummaries"`
	// Snapshot of the DbSystem details at the time of the backup
	DbSystemSnapshots []GetMysqlBackupDbSystemSnapshot `pulumi:"dbSystemSnapshots"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A user-supplied description for the backup.
	Description string `pulumi:"description"`
	// A user-supplied display name for the backup.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// OCID of the backup itself
	Id string `pulumi:"id"`
	// The OCID of the immediate source DB system backup from which this DB system backup was copied.
	ImmediateSourceBackupId string `pulumi:"immediateSourceBackupId"`
	// Additional information about the current lifecycleState.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The MySQL server version of the DB System used for backup.
	MysqlVersion string `pulumi:"mysqlVersion"`
	// The OCID of the original source DB system backup from which this DB system backup was copied.
	OriginalSourceBackupId string `pulumi:"originalSourceBackupId"`
	// Number of days to retain this backup.
	RetentionInDays int `pulumi:"retentionInDays"`
	// The shape of the DB System instance used for backup.
	ShapeName     string                       `pulumi:"shapeName"`
	SourceDetails []GetMysqlBackupSourceDetail `pulumi:"sourceDetails"`
	// The state of the backup.
	State string `pulumi:"state"`
	// The date and time the DB system backup copy was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeCopyCreated string `pulumi:"timeCopyCreated"`
	// The time the backup record was created.
	TimeCreated string `pulumi:"timeCreated"`
	// The time at which the backup was updated.
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupMysqlBackupOutput(ctx *pulumi.Context, args LookupMysqlBackupOutputArgs, opts ...pulumi.InvokeOption) LookupMysqlBackupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMysqlBackupResult, error) {
			args := v.(LookupMysqlBackupArgs)
			r, err := LookupMysqlBackup(ctx, &args, opts...)
			var s LookupMysqlBackupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMysqlBackupResultOutput)
}

// A collection of arguments for invoking getMysqlBackup.
type LookupMysqlBackupOutputArgs struct {
	// The OCID of the Backup
	BackupId pulumi.StringInput `pulumi:"backupId"`
}

func (LookupMysqlBackupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMysqlBackupArgs)(nil)).Elem()
}

// A collection of values returned by getMysqlBackup.
type LookupMysqlBackupResultOutput struct{ *pulumi.OutputState }

func (LookupMysqlBackupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMysqlBackupResult)(nil)).Elem()
}

func (o LookupMysqlBackupResultOutput) ToLookupMysqlBackupResultOutput() LookupMysqlBackupResultOutput {
	return o
}

func (o LookupMysqlBackupResultOutput) ToLookupMysqlBackupResultOutputWithContext(ctx context.Context) LookupMysqlBackupResultOutput {
	return o
}

func (o LookupMysqlBackupResultOutput) BackupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlBackupResult) string { return v.BackupId }).(pulumi.StringOutput)
}

// The size of the backup in base-2 (IEC) gibibytes. (GiB).
func (o LookupMysqlBackupResultOutput) BackupSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v LookupMysqlBackupResult) int { return v.BackupSizeInGbs }).(pulumi.IntOutput)
}

// The type of backup.
func (o LookupMysqlBackupResultOutput) BackupType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlBackupResult) string { return v.BackupType }).(pulumi.StringOutput)
}

// The OCID of the compartment the DB System belongs in.
func (o LookupMysqlBackupResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlBackupResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Indicates how the backup was created: manually, automatic, or by an Operator.
func (o LookupMysqlBackupResultOutput) CreationType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlBackupResult) string { return v.CreationType }).(pulumi.StringOutput)
}

// Initial size of the data volume in GiBs that will be created and attached.
func (o LookupMysqlBackupResultOutput) DataStorageSizeInGb() pulumi.IntOutput {
	return o.ApplyT(func(v LookupMysqlBackupResult) int { return v.DataStorageSizeInGb }).(pulumi.IntOutput)
}

// The OCID of the DB System the backup is associated with.
func (o LookupMysqlBackupResultOutput) DbSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlBackupResult) string { return v.DbSystemId }).(pulumi.StringOutput)
}

func (o LookupMysqlBackupResultOutput) DbSystemSnapshotSummaries() GetMysqlBackupDbSystemSnapshotSummaryArrayOutput {
	return o.ApplyT(func(v LookupMysqlBackupResult) []GetMysqlBackupDbSystemSnapshotSummary {
		return v.DbSystemSnapshotSummaries
	}).(GetMysqlBackupDbSystemSnapshotSummaryArrayOutput)
}

// Snapshot of the DbSystem details at the time of the backup
func (o LookupMysqlBackupResultOutput) DbSystemSnapshots() GetMysqlBackupDbSystemSnapshotArrayOutput {
	return o.ApplyT(func(v LookupMysqlBackupResult) []GetMysqlBackupDbSystemSnapshot { return v.DbSystemSnapshots }).(GetMysqlBackupDbSystemSnapshotArrayOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupMysqlBackupResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMysqlBackupResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A user-supplied description for the backup.
func (o LookupMysqlBackupResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlBackupResult) string { return v.Description }).(pulumi.StringOutput)
}

// A user-supplied display name for the backup.
func (o LookupMysqlBackupResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlBackupResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupMysqlBackupResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMysqlBackupResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// OCID of the backup itself
func (o LookupMysqlBackupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlBackupResult) string { return v.Id }).(pulumi.StringOutput)
}

// The OCID of the immediate source DB system backup from which this DB system backup was copied.
func (o LookupMysqlBackupResultOutput) ImmediateSourceBackupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlBackupResult) string { return v.ImmediateSourceBackupId }).(pulumi.StringOutput)
}

// Additional information about the current lifecycleState.
func (o LookupMysqlBackupResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlBackupResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The MySQL server version of the DB System used for backup.
func (o LookupMysqlBackupResultOutput) MysqlVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlBackupResult) string { return v.MysqlVersion }).(pulumi.StringOutput)
}

// The OCID of the original source DB system backup from which this DB system backup was copied.
func (o LookupMysqlBackupResultOutput) OriginalSourceBackupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlBackupResult) string { return v.OriginalSourceBackupId }).(pulumi.StringOutput)
}

// Number of days to retain this backup.
func (o LookupMysqlBackupResultOutput) RetentionInDays() pulumi.IntOutput {
	return o.ApplyT(func(v LookupMysqlBackupResult) int { return v.RetentionInDays }).(pulumi.IntOutput)
}

// The shape of the DB System instance used for backup.
func (o LookupMysqlBackupResultOutput) ShapeName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlBackupResult) string { return v.ShapeName }).(pulumi.StringOutput)
}

func (o LookupMysqlBackupResultOutput) SourceDetails() GetMysqlBackupSourceDetailArrayOutput {
	return o.ApplyT(func(v LookupMysqlBackupResult) []GetMysqlBackupSourceDetail { return v.SourceDetails }).(GetMysqlBackupSourceDetailArrayOutput)
}

// The state of the backup.
func (o LookupMysqlBackupResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlBackupResult) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the DB system backup copy was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o LookupMysqlBackupResultOutput) TimeCopyCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlBackupResult) string { return v.TimeCopyCreated }).(pulumi.StringOutput)
}

// The time the backup record was created.
func (o LookupMysqlBackupResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlBackupResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time at which the backup was updated.
func (o LookupMysqlBackupResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlBackupResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMysqlBackupResultOutput{})
}
