// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mysql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Mysql Configuration resource in Oracle Cloud Infrastructure MySQL Database service.
//
// Get the full details of the specified Configuration, including the list of MySQL Variables and their values.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Mysql"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Mysql.GetMysqlConfiguration(ctx, &mysql.GetMysqlConfigurationArgs{
//				ConfigurationId: mysqlConfigurationId,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupMysqlConfiguration(ctx *pulumi.Context, args *LookupMysqlConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupMysqlConfigurationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMysqlConfigurationResult
	err := ctx.Invoke("oci:Mysql/getMysqlConfiguration:getMysqlConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMysqlConfiguration.
type LookupMysqlConfigurationArgs struct {
	// The OCID of the Configuration.
	ConfigurationId string `pulumi:"configurationId"`
}

// A collection of values returned by getMysqlConfiguration.
type LookupMysqlConfigurationResult struct {
	// OCID of the Compartment the Configuration exists in.
	CompartmentId   string `pulumi:"compartmentId"`
	ConfigurationId string `pulumi:"configurationId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// User-provided data about the Configuration.
	Description string `pulumi:"description"`
	// The display name of the Configuration.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the Configuration.
	Id string `pulumi:"id"`
	// User-defined service variables set only at DB system initialization. These variables cannot be changed later at runtime.
	InitVariables []GetMysqlConfigurationInitVariable `pulumi:"initVariables"`
	// The OCID of the Configuration from which this Configuration is "derived". This is entirely a metadata relationship. There is no relation between the values in this Configuration and its parent.
	ParentConfigurationId string `pulumi:"parentConfigurationId"`
	// The name of the associated Shape.
	ShapeName string `pulumi:"shapeName"`
	// The current state of the Configuration.
	State string `pulumi:"state"`
	// The date and time the Configuration was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the Configuration was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeUpdated string `pulumi:"timeUpdated"`
	// The Configuration type, DEFAULT or CUSTOM.
	Type string `pulumi:"type"`
	// User-defined service variables.
	Variables []GetMysqlConfigurationVariable `pulumi:"variables"`
}

func LookupMysqlConfigurationOutput(ctx *pulumi.Context, args LookupMysqlConfigurationOutputArgs, opts ...pulumi.InvokeOption) LookupMysqlConfigurationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMysqlConfigurationResult, error) {
			args := v.(LookupMysqlConfigurationArgs)
			r, err := LookupMysqlConfiguration(ctx, &args, opts...)
			var s LookupMysqlConfigurationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMysqlConfigurationResultOutput)
}

// A collection of arguments for invoking getMysqlConfiguration.
type LookupMysqlConfigurationOutputArgs struct {
	// The OCID of the Configuration.
	ConfigurationId pulumi.StringInput `pulumi:"configurationId"`
}

func (LookupMysqlConfigurationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMysqlConfigurationArgs)(nil)).Elem()
}

// A collection of values returned by getMysqlConfiguration.
type LookupMysqlConfigurationResultOutput struct{ *pulumi.OutputState }

func (LookupMysqlConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMysqlConfigurationResult)(nil)).Elem()
}

func (o LookupMysqlConfigurationResultOutput) ToLookupMysqlConfigurationResultOutput() LookupMysqlConfigurationResultOutput {
	return o
}

func (o LookupMysqlConfigurationResultOutput) ToLookupMysqlConfigurationResultOutputWithContext(ctx context.Context) LookupMysqlConfigurationResultOutput {
	return o
}

// OCID of the Compartment the Configuration exists in.
func (o LookupMysqlConfigurationResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlConfigurationResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o LookupMysqlConfigurationResultOutput) ConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlConfigurationResult) string { return v.ConfigurationId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupMysqlConfigurationResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupMysqlConfigurationResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// User-provided data about the Configuration.
func (o LookupMysqlConfigurationResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlConfigurationResult) string { return v.Description }).(pulumi.StringOutput)
}

// The display name of the Configuration.
func (o LookupMysqlConfigurationResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlConfigurationResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupMysqlConfigurationResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupMysqlConfigurationResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The OCID of the Configuration.
func (o LookupMysqlConfigurationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlConfigurationResult) string { return v.Id }).(pulumi.StringOutput)
}

// User-defined service variables set only at DB system initialization. These variables cannot be changed later at runtime.
func (o LookupMysqlConfigurationResultOutput) InitVariables() GetMysqlConfigurationInitVariableArrayOutput {
	return o.ApplyT(func(v LookupMysqlConfigurationResult) []GetMysqlConfigurationInitVariable { return v.InitVariables }).(GetMysqlConfigurationInitVariableArrayOutput)
}

// The OCID of the Configuration from which this Configuration is "derived". This is entirely a metadata relationship. There is no relation between the values in this Configuration and its parent.
func (o LookupMysqlConfigurationResultOutput) ParentConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlConfigurationResult) string { return v.ParentConfigurationId }).(pulumi.StringOutput)
}

// The name of the associated Shape.
func (o LookupMysqlConfigurationResultOutput) ShapeName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlConfigurationResult) string { return v.ShapeName }).(pulumi.StringOutput)
}

// The current state of the Configuration.
func (o LookupMysqlConfigurationResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlConfigurationResult) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the Configuration was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o LookupMysqlConfigurationResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlConfigurationResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the Configuration was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o LookupMysqlConfigurationResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlConfigurationResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The Configuration type, DEFAULT or CUSTOM.
func (o LookupMysqlConfigurationResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlConfigurationResult) string { return v.Type }).(pulumi.StringOutput)
}

// User-defined service variables.
func (o LookupMysqlConfigurationResultOutput) Variables() GetMysqlConfigurationVariableArrayOutput {
	return o.ApplyT(func(v LookupMysqlConfigurationResult) []GetMysqlConfigurationVariable { return v.Variables }).(GetMysqlConfigurationVariableArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMysqlConfigurationResultOutput{})
}
