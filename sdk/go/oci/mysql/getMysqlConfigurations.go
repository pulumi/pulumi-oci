// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mysql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Mysql Configurations in Oracle Cloud Infrastructure MySQL Database service.
//
// Lists the Configurations available when creating a DB System.
//
// This may include DEFAULT configurations per Shape and CUSTOM configurations.
//
// The default sort order is a multi-part sort by:
//   - shapeName, ascending
//   - DEFAULT-before-CUSTOM
//   - displayName ascending
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Mysql"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Mysql.GetMysqlConfigurations(ctx, &mysql.GetMysqlConfigurationsArgs{
//				CompartmentId:   compartmentId,
//				ConfigurationId: pulumi.StringRef(mysqlConfigurationId),
//				DisplayName:     pulumi.StringRef(mysqlConfigurationDisplayName),
//				ShapeName:       pulumi.StringRef(mysqlShapeName),
//				State:           pulumi.StringRef(mysqlConfigurationState),
//				Types:           mysqlConfigurationType,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetMysqlConfigurations(ctx *pulumi.Context, args *GetMysqlConfigurationsArgs, opts ...pulumi.InvokeOption) (*GetMysqlConfigurationsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetMysqlConfigurationsResult
	err := ctx.Invoke("oci:Mysql/getMysqlConfigurations:getMysqlConfigurations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMysqlConfigurations.
type GetMysqlConfigurationsArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// The requested Configuration instance.
	ConfigurationId *string `pulumi:"configurationId"`
	// A filter to return only the resource matching the given display name exactly.
	DisplayName *string                        `pulumi:"displayName"`
	Filters     []GetMysqlConfigurationsFilter `pulumi:"filters"`
	// The requested Shape name.
	ShapeName *string `pulumi:"shapeName"`
	// Configuration Lifecycle State
	State *string `pulumi:"state"`
	// The requested Configuration types.
	Types []string `pulumi:"types"`
}

// A collection of values returned by getMysqlConfigurations.
type GetMysqlConfigurationsResult struct {
	// OCID of the Compartment the Configuration exists in.
	CompartmentId   string  `pulumi:"compartmentId"`
	ConfigurationId *string `pulumi:"configurationId"`
	// The list of configurations.
	Configurations []GetMysqlConfigurationsConfiguration `pulumi:"configurations"`
	// The display name of the Configuration.
	DisplayName *string                        `pulumi:"displayName"`
	Filters     []GetMysqlConfigurationsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The name of the associated Shape.
	ShapeName *string `pulumi:"shapeName"`
	// The current state of the Configuration.
	State *string `pulumi:"state"`
	// The Configuration type, DEFAULT or CUSTOM.
	Types []string `pulumi:"types"`
}

func GetMysqlConfigurationsOutput(ctx *pulumi.Context, args GetMysqlConfigurationsOutputArgs, opts ...pulumi.InvokeOption) GetMysqlConfigurationsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetMysqlConfigurationsResult, error) {
			args := v.(GetMysqlConfigurationsArgs)
			r, err := GetMysqlConfigurations(ctx, &args, opts...)
			var s GetMysqlConfigurationsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetMysqlConfigurationsResultOutput)
}

// A collection of arguments for invoking getMysqlConfigurations.
type GetMysqlConfigurationsOutputArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The requested Configuration instance.
	ConfigurationId pulumi.StringPtrInput `pulumi:"configurationId"`
	// A filter to return only the resource matching the given display name exactly.
	DisplayName pulumi.StringPtrInput                  `pulumi:"displayName"`
	Filters     GetMysqlConfigurationsFilterArrayInput `pulumi:"filters"`
	// The requested Shape name.
	ShapeName pulumi.StringPtrInput `pulumi:"shapeName"`
	// Configuration Lifecycle State
	State pulumi.StringPtrInput `pulumi:"state"`
	// The requested Configuration types.
	Types pulumi.StringArrayInput `pulumi:"types"`
}

func (GetMysqlConfigurationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlConfigurationsArgs)(nil)).Elem()
}

// A collection of values returned by getMysqlConfigurations.
type GetMysqlConfigurationsResultOutput struct{ *pulumi.OutputState }

func (GetMysqlConfigurationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlConfigurationsResult)(nil)).Elem()
}

func (o GetMysqlConfigurationsResultOutput) ToGetMysqlConfigurationsResultOutput() GetMysqlConfigurationsResultOutput {
	return o
}

func (o GetMysqlConfigurationsResultOutput) ToGetMysqlConfigurationsResultOutputWithContext(ctx context.Context) GetMysqlConfigurationsResultOutput {
	return o
}

// OCID of the Compartment the Configuration exists in.
func (o GetMysqlConfigurationsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetMysqlConfigurationsResultOutput) ConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsResult) *string { return v.ConfigurationId }).(pulumi.StringPtrOutput)
}

// The list of configurations.
func (o GetMysqlConfigurationsResultOutput) Configurations() GetMysqlConfigurationsConfigurationArrayOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsResult) []GetMysqlConfigurationsConfiguration { return v.Configurations }).(GetMysqlConfigurationsConfigurationArrayOutput)
}

// The display name of the Configuration.
func (o GetMysqlConfigurationsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetMysqlConfigurationsResultOutput) Filters() GetMysqlConfigurationsFilterArrayOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsResult) []GetMysqlConfigurationsFilter { return v.Filters }).(GetMysqlConfigurationsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetMysqlConfigurationsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the associated Shape.
func (o GetMysqlConfigurationsResultOutput) ShapeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsResult) *string { return v.ShapeName }).(pulumi.StringPtrOutput)
}

// The current state of the Configuration.
func (o GetMysqlConfigurationsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The Configuration type, DEFAULT or CUSTOM.
func (o GetMysqlConfigurationsResultOutput) Types() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsResult) []string { return v.Types }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMysqlConfigurationsResultOutput{})
}
