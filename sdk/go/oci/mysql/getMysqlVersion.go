// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mysql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Mysql Versions in Oracle Cloud Infrastructure MySQL Database service.
//
// Get a list of supported and available MySQL database major versions.
//
// The list is sorted by version family.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Mysql"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Mysql.GetMysqlVersion(ctx, &mysql.GetMysqlVersionArgs{
//				CompartmentId: compartmentId,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetMysqlVersion(ctx *pulumi.Context, args *GetMysqlVersionArgs, opts ...pulumi.InvokeOption) (*GetMysqlVersionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetMysqlVersionResult
	err := ctx.Invoke("oci:Mysql/getMysqlVersion:getMysqlVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMysqlVersion.
type GetMysqlVersionArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string                  `pulumi:"compartmentId"`
	Filters       []GetMysqlVersionFilter `pulumi:"filters"`
}

// A collection of values returned by getMysqlVersion.
type GetMysqlVersionResult struct {
	CompartmentId string                  `pulumi:"compartmentId"`
	Filters       []GetMysqlVersionFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of supported MySQL Versions.
	Versions []GetMysqlVersionVersion `pulumi:"versions"`
}

func GetMysqlVersionOutput(ctx *pulumi.Context, args GetMysqlVersionOutputArgs, opts ...pulumi.InvokeOption) GetMysqlVersionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetMysqlVersionResultOutput, error) {
			args := v.(GetMysqlVersionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Mysql/getMysqlVersion:getMysqlVersion", args, GetMysqlVersionResultOutput{}, options).(GetMysqlVersionResultOutput), nil
		}).(GetMysqlVersionResultOutput)
}

// A collection of arguments for invoking getMysqlVersion.
type GetMysqlVersionOutputArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput              `pulumi:"compartmentId"`
	Filters       GetMysqlVersionFilterArrayInput `pulumi:"filters"`
}

func (GetMysqlVersionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlVersionArgs)(nil)).Elem()
}

// A collection of values returned by getMysqlVersion.
type GetMysqlVersionResultOutput struct{ *pulumi.OutputState }

func (GetMysqlVersionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlVersionResult)(nil)).Elem()
}

func (o GetMysqlVersionResultOutput) ToGetMysqlVersionResultOutput() GetMysqlVersionResultOutput {
	return o
}

func (o GetMysqlVersionResultOutput) ToGetMysqlVersionResultOutputWithContext(ctx context.Context) GetMysqlVersionResultOutput {
	return o
}

func (o GetMysqlVersionResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlVersionResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetMysqlVersionResultOutput) Filters() GetMysqlVersionFilterArrayOutput {
	return o.ApplyT(func(v GetMysqlVersionResult) []GetMysqlVersionFilter { return v.Filters }).(GetMysqlVersionFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetMysqlVersionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlVersionResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of supported MySQL Versions.
func (o GetMysqlVersionResultOutput) Versions() GetMysqlVersionVersionArrayOutput {
	return o.ApplyT(func(v GetMysqlVersionResult) []GetMysqlVersionVersion { return v.Versions }).(GetMysqlVersionVersionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMysqlVersionResultOutput{})
}
