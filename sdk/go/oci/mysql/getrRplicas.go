// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mysql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Replicas in Oracle Cloud Infrastructure MySQL Database service.
//
// Lists all the read replicas that match the specified filters.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Mysql"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Mysql.GetrRplicas(ctx, &mysql.GetrRplicasArgs{
//				CompartmentId: _var.Compartment_id,
//				DbSystemId:    pulumi.StringRef(oci_mysql_mysql_db_system.Test_mysql_db_system.Id),
//				DisplayName:   pulumi.StringRef(_var.Replica_display_name),
//				ReplicaId:     pulumi.StringRef(oci_mysql_replica.Test_replica.Id),
//				State:         pulumi.StringRef(_var.Replica_state),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetrRplicas(ctx *pulumi.Context, args *GetrRplicasArgs, opts ...pulumi.InvokeOption) (*GetrRplicasResult, error) {
	var rv GetrRplicasResult
	err := ctx.Invoke("oci:Mysql/getrRplicas:getrRplicas", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getrRplicas.
type GetrRplicasArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId *string `pulumi:"dbSystemId"`
	// A filter to return only the resource matching the given display name exactly.
	DisplayName *string             `pulumi:"displayName"`
	Filters     []GetrRplicasFilter `pulumi:"filters"`
	// The read replica [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ReplicaId *string `pulumi:"replicaId"`
	// The LifecycleState of the read replica.
	State *string `pulumi:"state"`
}

// A collection of values returned by getrRplicas.
type GetrRplicasResult struct {
	// The OCID of the compartment that contains the read replica.
	CompartmentId string `pulumi:"compartmentId"`
	// The OCID of the DB System the read replica is associated with.
	DbSystemId *string `pulumi:"dbSystemId"`
	// The user-friendly name for the read replica. It does not have to be unique.
	DisplayName *string             `pulumi:"displayName"`
	Filters     []GetrRplicasFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id        string  `pulumi:"id"`
	ReplicaId *string `pulumi:"replicaId"`
	// The list of replicas.
	Replicas []GetrRplicasReplica `pulumi:"replicas"`
	// The state of the read replica.
	State *string `pulumi:"state"`
}

func GetrRplicasOutput(ctx *pulumi.Context, args GetrRplicasOutputArgs, opts ...pulumi.InvokeOption) GetrRplicasResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetrRplicasResult, error) {
			args := v.(GetrRplicasArgs)
			r, err := GetrRplicas(ctx, &args, opts...)
			var s GetrRplicasResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetrRplicasResultOutput)
}

// A collection of arguments for invoking getrRplicas.
type GetrRplicasOutputArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId pulumi.StringPtrInput `pulumi:"dbSystemId"`
	// A filter to return only the resource matching the given display name exactly.
	DisplayName pulumi.StringPtrInput       `pulumi:"displayName"`
	Filters     GetrRplicasFilterArrayInput `pulumi:"filters"`
	// The read replica [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ReplicaId pulumi.StringPtrInput `pulumi:"replicaId"`
	// The LifecycleState of the read replica.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetrRplicasOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetrRplicasArgs)(nil)).Elem()
}

// A collection of values returned by getrRplicas.
type GetrRplicasResultOutput struct{ *pulumi.OutputState }

func (GetrRplicasResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetrRplicasResult)(nil)).Elem()
}

func (o GetrRplicasResultOutput) ToGetrRplicasResultOutput() GetrRplicasResultOutput {
	return o
}

func (o GetrRplicasResultOutput) ToGetrRplicasResultOutputWithContext(ctx context.Context) GetrRplicasResultOutput {
	return o
}

// The OCID of the compartment that contains the read replica.
func (o GetrRplicasResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetrRplicasResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The OCID of the DB System the read replica is associated with.
func (o GetrRplicasResultOutput) DbSystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetrRplicasResult) *string { return v.DbSystemId }).(pulumi.StringPtrOutput)
}

// The user-friendly name for the read replica. It does not have to be unique.
func (o GetrRplicasResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetrRplicasResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetrRplicasResultOutput) Filters() GetrRplicasFilterArrayOutput {
	return o.ApplyT(func(v GetrRplicasResult) []GetrRplicasFilter { return v.Filters }).(GetrRplicasFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetrRplicasResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetrRplicasResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetrRplicasResultOutput) ReplicaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetrRplicasResult) *string { return v.ReplicaId }).(pulumi.StringPtrOutput)
}

// The list of replicas.
func (o GetrRplicasResultOutput) Replicas() GetrRplicasReplicaArrayOutput {
	return o.ApplyT(func(v GetrRplicasResult) []GetrRplicasReplica { return v.Replicas }).(GetrRplicasReplicaArrayOutput)
}

// The state of the read replica.
func (o GetrRplicasResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetrRplicasResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetrRplicasResultOutput{})
}
