// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mysql

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Mysql Configuration resource in Oracle Cloud Infrastructure MySQL Database service.
//
// Creates a new Configuration.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/mysql"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := mysql.NewMysqlConfiguration(ctx, "test_mysql_configuration", &mysql.MysqlConfigurationArgs{
//				CompartmentId: pulumi.Any(compartmentId),
//				ShapeName:     pulumi.Any(testShape.Name),
//				DefinedTags: pulumi.StringMap{
//					"foo-namespace.bar-key": pulumi.String("value"),
//				},
//				Description: pulumi.Any(mysqlConfigurationDescription),
//				DisplayName: pulumi.Any(mysqlConfigurationDisplayName),
//				FreeformTags: pulumi.StringMap{
//					"bar-key": pulumi.String("value"),
//				},
//				InitVariables: &mysql.MysqlConfigurationInitVariablesArgs{
//					LowerCaseTableNames: pulumi.Any(mysqlConfigurationInitVariablesLowerCaseTableNames),
//				},
//				ParentConfigurationId: pulumi.Any(testConfiguration.Id),
//				Variables: &mysql.MysqlConfigurationVariablesArgs{
//					AutoIncrementIncrement:                 pulumi.Any(mysqlConfigurationVariablesAutoIncrementIncrement),
//					AutoIncrementOffset:                    pulumi.Any(mysqlConfigurationVariablesAutoIncrementOffset),
//					Autocommit:                             pulumi.Any(mysqlConfigurationVariablesAutocommit),
//					BigTables:                              pulumi.Any(mysqlConfigurationVariablesBigTables),
//					BinlogExpireLogsSeconds:                pulumi.Any(mysqlConfigurationVariablesBinlogExpireLogsSeconds),
//					BinlogGroupCommitSyncDelay:             pulumi.Any(mysqlConfigurationVariablesBinlogGroupCommitSyncDelay),
//					BinlogGroupCommitSyncNoDelayCount:      pulumi.Any(mysqlConfigurationVariablesBinlogGroupCommitSyncNoDelayCount),
//					BinlogRowMetadata:                      pulumi.Any(mysqlConfigurationVariablesBinlogRowMetadata),
//					BinlogRowValueOptions:                  pulumi.Any(mysqlConfigurationVariablesBinlogRowValueOptions),
//					BinlogTransactionCompression:           pulumi.Any(mysqlConfigurationVariablesBinlogTransactionCompression),
//					BlockEncryptionMode:                    pulumi.Any(mysqlConfigurationVariablesBlockEncryptionMode),
//					CharacterSetServer:                     pulumi.Any(mysqlConfigurationVariablesCharacterSetServer),
//					CollationServer:                        pulumi.Any(mysqlConfigurationVariablesCollationServer),
//					CompletionType:                         pulumi.Any(mysqlConfigurationVariablesCompletionType),
//					ConnectTimeout:                         pulumi.Any(mysqlConfigurationVariablesConnectTimeout),
//					ConnectionMemoryChunkSize:              pulumi.Any(mysqlConfigurationVariablesConnectionMemoryChunkSize),
//					ConnectionMemoryLimit:                  pulumi.Any(mysqlConfigurationVariablesConnectionMemoryLimit),
//					CteMaxRecursionDepth:                   pulumi.Any(mysqlConfigurationVariablesCteMaxRecursionDepth),
//					DefaultAuthenticationPlugin:            pulumi.Any(mysqlConfigurationVariablesDefaultAuthenticationPlugin),
//					ExplainFormat:                          pulumi.Any(mysqlConfigurationVariablesExplainFormat),
//					ExplicitDefaultsForTimestamp:           pulumi.Any(mysqlConfigurationVariablesExplicitDefaultsForTimestamp),
//					ForeignKeyChecks:                       pulumi.Any(mysqlConfigurationVariablesForeignKeyChecks),
//					GeneratedRandomPasswordLength:          pulumi.Any(mysqlConfigurationVariablesGeneratedRandomPasswordLength),
//					GlobalConnectionMemoryLimit:            pulumi.Any(mysqlConfigurationVariablesGlobalConnectionMemoryLimit),
//					GlobalConnectionMemoryTracking:         pulumi.Any(mysqlConfigurationVariablesGlobalConnectionMemoryTracking),
//					GroupConcatMaxLen:                      pulumi.Any(mysqlConfigurationVariablesGroupConcatMaxLen),
//					GroupReplicationConsistency:            pulumi.Any(mysqlConfigurationVariablesGroupReplicationConsistency),
//					InformationSchemaStatsExpiry:           pulumi.Any(mysqlConfigurationVariablesInformationSchemaStatsExpiry),
//					InnodbAdaptiveHashIndex:                pulumi.Any(mysqlConfigurationVariablesInnodbAdaptiveHashIndex),
//					InnodbAutoincLockMode:                  pulumi.Any(mysqlConfigurationVariablesInnodbAutoincLockMode),
//					InnodbBufferPoolDumpPct:                pulumi.Any(mysqlConfigurationVariablesInnodbBufferPoolDumpPct),
//					InnodbBufferPoolInstances:              pulumi.Any(mysqlConfigurationVariablesInnodbBufferPoolInstances),
//					InnodbBufferPoolSize:                   pulumi.Any(mysqlConfigurationVariablesInnodbBufferPoolSize),
//					InnodbChangeBuffering:                  pulumi.Any(mysqlConfigurationVariablesInnodbChangeBuffering),
//					InnodbDdlBufferSize:                    pulumi.Any(mysqlConfigurationVariablesInnodbDdlBufferSize),
//					InnodbDdlThreads:                       pulumi.Any(mysqlConfigurationVariablesInnodbDdlThreads),
//					InnodbFtEnableStopword:                 pulumi.Any(mysqlConfigurationVariablesInnodbFtEnableStopword),
//					InnodbFtMaxTokenSize:                   pulumi.Any(mysqlConfigurationVariablesInnodbFtMaxTokenSize),
//					InnodbFtMinTokenSize:                   pulumi.Any(mysqlConfigurationVariablesInnodbFtMinTokenSize),
//					InnodbFtNumWordOptimize:                pulumi.Any(mysqlConfigurationVariablesInnodbFtNumWordOptimize),
//					InnodbFtResultCacheLimit:               pulumi.Any(mysqlConfigurationVariablesInnodbFtResultCacheLimit),
//					InnodbFtServerStopwordTable:            pulumi.Any(mysqlConfigurationVariablesInnodbFtServerStopwordTable),
//					InnodbLockWaitTimeout:                  pulumi.Any(mysqlConfigurationVariablesInnodbLockWaitTimeout),
//					InnodbLogWriterThreads:                 pulumi.Any(mysqlConfigurationVariablesInnodbLogWriterThreads),
//					InnodbMaxPurgeLag:                      pulumi.Any(mysqlConfigurationVariablesInnodbMaxPurgeLag),
//					InnodbMaxPurgeLagDelay:                 pulumi.Any(mysqlConfigurationVariablesInnodbMaxPurgeLagDelay),
//					InnodbNumaInterleave:                   pulumi.Any(mysqlConfigurationVariablesInnodbNumaInterleave),
//					InnodbOnlineAlterLogMaxSize:            pulumi.Any(mysqlConfigurationVariablesInnodbOnlineAlterLogMaxSize),
//					InnodbRedoLogCapacity:                  pulumi.Any(mysqlConfigurationVariablesInnodbRedoLogCapacity),
//					InnodbRollbackOnTimeout:                pulumi.Any(mysqlConfigurationVariablesInnodbRollbackOnTimeout),
//					InnodbSortBufferSize:                   pulumi.Any(mysqlConfigurationVariablesInnodbSortBufferSize),
//					InnodbStatsPersistentSamplePages:       pulumi.Any(mysqlConfigurationVariablesInnodbStatsPersistentSamplePages),
//					InnodbStatsTransientSamplePages:        pulumi.Any(mysqlConfigurationVariablesInnodbStatsTransientSamplePages),
//					InnodbStrictMode:                       pulumi.Any(mysqlConfigurationVariablesInnodbStrictMode),
//					InnodbUndoLogTruncate:                  pulumi.Any(mysqlConfigurationVariablesInnodbUndoLogTruncate),
//					InteractiveTimeout:                     pulumi.Any(mysqlConfigurationVariablesInteractiveTimeout),
//					JoinBufferSize:                         pulumi.Any(mysqlConfigurationVariablesJoinBufferSize),
//					LocalInfile:                            pulumi.Any(mysqlConfigurationVariablesLocalInfile),
//					LongQueryTime:                          pulumi.Any(mysqlConfigurationVariablesLongQueryTime),
//					MandatoryRoles:                         pulumi.Any(mysqlConfigurationVariablesMandatoryRoles),
//					MaxAllowedPacket:                       pulumi.Any(mysqlConfigurationVariablesMaxAllowedPacket),
//					MaxBinlogCacheSize:                     pulumi.Any(mysqlConfigurationVariablesMaxBinlogCacheSize),
//					MaxConnectErrors:                       pulumi.Any(mysqlConfigurationVariablesMaxConnectErrors),
//					MaxConnections:                         pulumi.Any(mysqlConfigurationVariablesMaxConnections),
//					MaxExecutionTime:                       pulumi.Any(mysqlConfigurationVariablesMaxExecutionTime),
//					MaxHeapTableSize:                       pulumi.Any(mysqlConfigurationVariablesMaxHeapTableSize),
//					MaxPreparedStmtCount:                   pulumi.Any(mysqlConfigurationVariablesMaxPreparedStmtCount),
//					MaxSeeksForKey:                         pulumi.Any(mysqlConfigurationVariablesMaxSeeksForKey),
//					MaxUserConnections:                     pulumi.Any(mysqlConfigurationVariablesMaxUserConnections),
//					MysqlFirewallMode:                      pulumi.Any(mysqlConfigurationVariablesMysqlFirewallMode),
//					MysqlZstdDefaultCompressionLevel:       pulumi.Any(mysqlConfigurationVariablesMysqlZstdDefaultCompressionLevel),
//					MysqlxConnectTimeout:                   pulumi.Any(mysqlConfigurationVariablesMysqlxConnectTimeout),
//					MysqlxDeflateDefaultCompressionLevel:   pulumi.Any(mysqlConfigurationVariablesMysqlxDeflateDefaultCompressionLevel),
//					MysqlxDeflateMaxClientCompressionLevel: pulumi.Any(mysqlConfigurationVariablesMysqlxDeflateMaxClientCompressionLevel),
//					MysqlxDocumentIdUniquePrefix:           pulumi.Any(mysqlConfigurationVariablesMysqlxDocumentIdUniquePrefix),
//					MysqlxEnableHelloNotice:                pulumi.Any(mysqlConfigurationVariablesMysqlxEnableHelloNotice),
//					MysqlxIdleWorkerThreadTimeout:          pulumi.Any(mysqlConfigurationVariablesMysqlxIdleWorkerThreadTimeout),
//					MysqlxInteractiveTimeout:               pulumi.Any(mysqlConfigurationVariablesMysqlxInteractiveTimeout),
//					MysqlxLz4defaultCompressionLevel:       pulumi.Any(mysqlConfigurationVariablesMysqlxLz4defaultCompressionLevel),
//					MysqlxLz4maxClientCompressionLevel:     pulumi.Any(mysqlConfigurationVariablesMysqlxLz4maxClientCompressionLevel),
//					MysqlxMaxAllowedPacket:                 pulumi.Any(mysqlConfigurationVariablesMysqlxMaxAllowedPacket),
//					MysqlxMinWorkerThreads:                 pulumi.Any(mysqlConfigurationVariablesMysqlxMinWorkerThreads),
//					MysqlxReadTimeout:                      pulumi.Any(mysqlConfigurationVariablesMysqlxReadTimeout),
//					MysqlxWaitTimeout:                      pulumi.Any(mysqlConfigurationVariablesMysqlxWaitTimeout),
//					MysqlxWriteTimeout:                     pulumi.Any(mysqlConfigurationVariablesMysqlxWriteTimeout),
//					MysqlxZstdDefaultCompressionLevel:      pulumi.Any(mysqlConfigurationVariablesMysqlxZstdDefaultCompressionLevel),
//					MysqlxZstdMaxClientCompressionLevel:    pulumi.Any(mysqlConfigurationVariablesMysqlxZstdMaxClientCompressionLevel),
//					NetReadTimeout:                         pulumi.Any(mysqlConfigurationVariablesNetReadTimeout),
//					NetWriteTimeout:                        pulumi.Any(mysqlConfigurationVariablesNetWriteTimeout),
//					OptimizerSwitch:                        pulumi.Any(mysqlConfigurationVariablesOptimizerSwitch),
//					ParserMaxMemSize:                       pulumi.Any(mysqlConfigurationVariablesParserMaxMemSize),
//					QueryAllocBlockSize:                    pulumi.Any(mysqlConfigurationVariablesQueryAllocBlockSize),
//					QueryPreallocSize:                      pulumi.Any(mysqlConfigurationVariablesQueryPreallocSize),
//					RangeOptimizerMaxMemSize:               pulumi.Any(mysqlConfigurationVariablesRangeOptimizerMaxMemSize),
//					RegexpTimeLimit:                        pulumi.Any(mysqlConfigurationVariablesRegexpTimeLimit),
//					RelayLogSpaceLimit:                     pulumi.Any(mysqlConfigurationVariablesRelayLogSpaceLimit),
//					ReplicaNetTimeout:                      pulumi.Any(mysqlConfigurationVariablesReplicaNetTimeout),
//					ReplicaParallelWorkers:                 pulumi.Any(mysqlConfigurationVariablesReplicaParallelWorkers),
//					ReplicaTypeConversions:                 pulumi.Any(mysqlConfigurationVariablesReplicaTypeConversions),
//					RequireSecureTransport:                 pulumi.Any(mysqlConfigurationVariablesRequireSecureTransport),
//					SkipNameResolve:                        pulumi.Any(mysqlConfigurationVariablesSkipNameResolve),
//					SortBufferSize:                         pulumi.Any(mysqlConfigurationVariablesSortBufferSize),
//					SqlGenerateInvisiblePrimaryKey:         pulumi.Any(mysqlConfigurationVariablesSqlGenerateInvisiblePrimaryKey),
//					SqlMode:                                pulumi.Any(mysqlConfigurationVariablesSqlMode),
//					SqlRequirePrimaryKey:                   pulumi.Any(mysqlConfigurationVariablesSqlRequirePrimaryKey),
//					SqlWarnings:                            pulumi.Any(mysqlConfigurationVariablesSqlWarnings),
//					TableDefinitionCache:                   pulumi.Any(mysqlConfigurationVariablesTableDefinitionCache),
//					TableOpenCache:                         pulumi.Any(mysqlConfigurationVariablesTableOpenCache),
//					TemptableMaxRam:                        pulumi.Any(mysqlConfigurationVariablesTemptableMaxRam),
//					ThreadPoolDedicatedListeners:           pulumi.Any(mysqlConfigurationVariablesThreadPoolDedicatedListeners),
//					ThreadPoolMaxTransactionsLimit:         pulumi.Any(mysqlConfigurationVariablesThreadPoolMaxTransactionsLimit),
//					ThreadPoolQueryThreadsPerGroup:         pulumi.Any(mysqlConfigurationVariablesThreadPoolQueryThreadsPerGroup),
//					ThreadPoolSize:                         pulumi.Any(mysqlConfigurationVariablesThreadPoolSize),
//					ThreadPoolTransactionDelay:             pulumi.Any(mysqlConfigurationVariablesThreadPoolTransactionDelay),
//					TimeZone:                               pulumi.Any(mysqlConfigurationVariablesTimeZone),
//					TmpTableSize:                           pulumi.Any(mysqlConfigurationVariablesTmpTableSize),
//					TransactionIsolation:                   pulumi.Any(mysqlConfigurationVariablesTransactionIsolation),
//					WaitTimeout:                            pulumi.Any(mysqlConfigurationVariablesWaitTimeout),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// MysqlConfigurations can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Mysql/mysqlConfiguration:MysqlConfiguration test_mysql_configuration "configurations/{configurationId}"
// ```
type MysqlConfiguration struct {
	pulumi.CustomResourceState

	// The OCID of the compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) User-provided data about the Configuration.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) The display name of the Configuration.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// User-defined service variables set only at DB system initialization. These variables cannot be changed later at runtime.
	InitVariables MysqlConfigurationInitVariablesOutput `pulumi:"initVariables"`
	// The OCID of the Configuration from which the new Configuration is derived. The values in CreateConfigurationDetails.variables supersede the variables of the parent Configuration.
	ParentConfigurationId pulumi.StringOutput `pulumi:"parentConfigurationId"`
	// The name of the associated Shape.
	ShapeName pulumi.StringOutput `pulumi:"shapeName"`
	// The current state of the Configuration.
	State pulumi.StringOutput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// The date and time the Configuration was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The date and time the Configuration was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// The Configuration type, DEFAULT or CUSTOM.
	Type pulumi.StringOutput `pulumi:"type"`
	// User-defined service variables.
	Variables MysqlConfigurationVariablesOutput `pulumi:"variables"`
}

// NewMysqlConfiguration registers a new resource with the given unique name, arguments, and options.
func NewMysqlConfiguration(ctx *pulumi.Context,
	name string, args *MysqlConfigurationArgs, opts ...pulumi.ResourceOption) (*MysqlConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.ShapeName == nil {
		return nil, errors.New("invalid value for required argument 'ShapeName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MysqlConfiguration
	err := ctx.RegisterResource("oci:Mysql/mysqlConfiguration:MysqlConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMysqlConfiguration gets an existing MysqlConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMysqlConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MysqlConfigurationState, opts ...pulumi.ResourceOption) (*MysqlConfiguration, error) {
	var resource MysqlConfiguration
	err := ctx.ReadResource("oci:Mysql/mysqlConfiguration:MysqlConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MysqlConfiguration resources.
type mysqlConfigurationState struct {
	// The OCID of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) User-provided data about the Configuration.
	Description *string `pulumi:"description"`
	// (Updatable) The display name of the Configuration.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// User-defined service variables set only at DB system initialization. These variables cannot be changed later at runtime.
	InitVariables *MysqlConfigurationInitVariables `pulumi:"initVariables"`
	// The OCID of the Configuration from which the new Configuration is derived. The values in CreateConfigurationDetails.variables supersede the variables of the parent Configuration.
	ParentConfigurationId *string `pulumi:"parentConfigurationId"`
	// The name of the associated Shape.
	ShapeName *string `pulumi:"shapeName"`
	// The current state of the Configuration.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time the Configuration was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the Configuration was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeUpdated *string `pulumi:"timeUpdated"`
	// The Configuration type, DEFAULT or CUSTOM.
	Type *string `pulumi:"type"`
	// User-defined service variables.
	Variables *MysqlConfigurationVariables `pulumi:"variables"`
}

type MysqlConfigurationState struct {
	// The OCID of the compartment.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) User-provided data about the Configuration.
	Description pulumi.StringPtrInput
	// (Updatable) The display name of the Configuration.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// User-defined service variables set only at DB system initialization. These variables cannot be changed later at runtime.
	InitVariables MysqlConfigurationInitVariablesPtrInput
	// The OCID of the Configuration from which the new Configuration is derived. The values in CreateConfigurationDetails.variables supersede the variables of the parent Configuration.
	ParentConfigurationId pulumi.StringPtrInput
	// The name of the associated Shape.
	ShapeName pulumi.StringPtrInput
	// The current state of the Configuration.
	State pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput
	// The date and time the Configuration was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeCreated pulumi.StringPtrInput
	// The date and time the Configuration was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeUpdated pulumi.StringPtrInput
	// The Configuration type, DEFAULT or CUSTOM.
	Type pulumi.StringPtrInput
	// User-defined service variables.
	Variables MysqlConfigurationVariablesPtrInput
}

func (MysqlConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*mysqlConfigurationState)(nil)).Elem()
}

type mysqlConfigurationArgs struct {
	// The OCID of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) User-provided data about the Configuration.
	Description *string `pulumi:"description"`
	// (Updatable) The display name of the Configuration.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// User-defined service variables set only at DB system initialization. These variables cannot be changed later at runtime.
	InitVariables *MysqlConfigurationInitVariables `pulumi:"initVariables"`
	// The OCID of the Configuration from which the new Configuration is derived. The values in CreateConfigurationDetails.variables supersede the variables of the parent Configuration.
	ParentConfigurationId *string `pulumi:"parentConfigurationId"`
	// The name of the associated Shape.
	ShapeName string `pulumi:"shapeName"`
	// User-defined service variables.
	Variables *MysqlConfigurationVariables `pulumi:"variables"`
}

// The set of arguments for constructing a MysqlConfiguration resource.
type MysqlConfigurationArgs struct {
	// The OCID of the compartment.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) User-provided data about the Configuration.
	Description pulumi.StringPtrInput
	// (Updatable) The display name of the Configuration.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// User-defined service variables set only at DB system initialization. These variables cannot be changed later at runtime.
	InitVariables MysqlConfigurationInitVariablesPtrInput
	// The OCID of the Configuration from which the new Configuration is derived. The values in CreateConfigurationDetails.variables supersede the variables of the parent Configuration.
	ParentConfigurationId pulumi.StringPtrInput
	// The name of the associated Shape.
	ShapeName pulumi.StringInput
	// User-defined service variables.
	Variables MysqlConfigurationVariablesPtrInput
}

func (MysqlConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mysqlConfigurationArgs)(nil)).Elem()
}

type MysqlConfigurationInput interface {
	pulumi.Input

	ToMysqlConfigurationOutput() MysqlConfigurationOutput
	ToMysqlConfigurationOutputWithContext(ctx context.Context) MysqlConfigurationOutput
}

func (*MysqlConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlConfiguration)(nil)).Elem()
}

func (i *MysqlConfiguration) ToMysqlConfigurationOutput() MysqlConfigurationOutput {
	return i.ToMysqlConfigurationOutputWithContext(context.Background())
}

func (i *MysqlConfiguration) ToMysqlConfigurationOutputWithContext(ctx context.Context) MysqlConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlConfigurationOutput)
}

// MysqlConfigurationArrayInput is an input type that accepts MysqlConfigurationArray and MysqlConfigurationArrayOutput values.
// You can construct a concrete instance of `MysqlConfigurationArrayInput` via:
//
//	MysqlConfigurationArray{ MysqlConfigurationArgs{...} }
type MysqlConfigurationArrayInput interface {
	pulumi.Input

	ToMysqlConfigurationArrayOutput() MysqlConfigurationArrayOutput
	ToMysqlConfigurationArrayOutputWithContext(context.Context) MysqlConfigurationArrayOutput
}

type MysqlConfigurationArray []MysqlConfigurationInput

func (MysqlConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MysqlConfiguration)(nil)).Elem()
}

func (i MysqlConfigurationArray) ToMysqlConfigurationArrayOutput() MysqlConfigurationArrayOutput {
	return i.ToMysqlConfigurationArrayOutputWithContext(context.Background())
}

func (i MysqlConfigurationArray) ToMysqlConfigurationArrayOutputWithContext(ctx context.Context) MysqlConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlConfigurationArrayOutput)
}

// MysqlConfigurationMapInput is an input type that accepts MysqlConfigurationMap and MysqlConfigurationMapOutput values.
// You can construct a concrete instance of `MysqlConfigurationMapInput` via:
//
//	MysqlConfigurationMap{ "key": MysqlConfigurationArgs{...} }
type MysqlConfigurationMapInput interface {
	pulumi.Input

	ToMysqlConfigurationMapOutput() MysqlConfigurationMapOutput
	ToMysqlConfigurationMapOutputWithContext(context.Context) MysqlConfigurationMapOutput
}

type MysqlConfigurationMap map[string]MysqlConfigurationInput

func (MysqlConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MysqlConfiguration)(nil)).Elem()
}

func (i MysqlConfigurationMap) ToMysqlConfigurationMapOutput() MysqlConfigurationMapOutput {
	return i.ToMysqlConfigurationMapOutputWithContext(context.Background())
}

func (i MysqlConfigurationMap) ToMysqlConfigurationMapOutputWithContext(ctx context.Context) MysqlConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlConfigurationMapOutput)
}

type MysqlConfigurationOutput struct{ *pulumi.OutputState }

func (MysqlConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlConfiguration)(nil)).Elem()
}

func (o MysqlConfigurationOutput) ToMysqlConfigurationOutput() MysqlConfigurationOutput {
	return o
}

func (o MysqlConfigurationOutput) ToMysqlConfigurationOutputWithContext(ctx context.Context) MysqlConfigurationOutput {
	return o
}

// The OCID of the compartment.
func (o MysqlConfigurationOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlConfiguration) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o MysqlConfigurationOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MysqlConfiguration) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) User-provided data about the Configuration.
func (o MysqlConfigurationOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlConfiguration) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) The display name of the Configuration.
func (o MysqlConfigurationOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlConfiguration) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o MysqlConfigurationOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MysqlConfiguration) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// User-defined service variables set only at DB system initialization. These variables cannot be changed later at runtime.
func (o MysqlConfigurationOutput) InitVariables() MysqlConfigurationInitVariablesOutput {
	return o.ApplyT(func(v *MysqlConfiguration) MysqlConfigurationInitVariablesOutput { return v.InitVariables }).(MysqlConfigurationInitVariablesOutput)
}

// The OCID of the Configuration from which the new Configuration is derived. The values in CreateConfigurationDetails.variables supersede the variables of the parent Configuration.
func (o MysqlConfigurationOutput) ParentConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlConfiguration) pulumi.StringOutput { return v.ParentConfigurationId }).(pulumi.StringOutput)
}

// The name of the associated Shape.
func (o MysqlConfigurationOutput) ShapeName() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlConfiguration) pulumi.StringOutput { return v.ShapeName }).(pulumi.StringOutput)
}

// The current state of the Configuration.
func (o MysqlConfigurationOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlConfiguration) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o MysqlConfigurationOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MysqlConfiguration) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The date and time the Configuration was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o MysqlConfigurationOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlConfiguration) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the Configuration was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o MysqlConfigurationOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlConfiguration) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The Configuration type, DEFAULT or CUSTOM.
func (o MysqlConfigurationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlConfiguration) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// User-defined service variables.
func (o MysqlConfigurationOutput) Variables() MysqlConfigurationVariablesOutput {
	return o.ApplyT(func(v *MysqlConfiguration) MysqlConfigurationVariablesOutput { return v.Variables }).(MysqlConfigurationVariablesOutput)
}

type MysqlConfigurationArrayOutput struct{ *pulumi.OutputState }

func (MysqlConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MysqlConfiguration)(nil)).Elem()
}

func (o MysqlConfigurationArrayOutput) ToMysqlConfigurationArrayOutput() MysqlConfigurationArrayOutput {
	return o
}

func (o MysqlConfigurationArrayOutput) ToMysqlConfigurationArrayOutputWithContext(ctx context.Context) MysqlConfigurationArrayOutput {
	return o
}

func (o MysqlConfigurationArrayOutput) Index(i pulumi.IntInput) MysqlConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MysqlConfiguration {
		return vs[0].([]*MysqlConfiguration)[vs[1].(int)]
	}).(MysqlConfigurationOutput)
}

type MysqlConfigurationMapOutput struct{ *pulumi.OutputState }

func (MysqlConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MysqlConfiguration)(nil)).Elem()
}

func (o MysqlConfigurationMapOutput) ToMysqlConfigurationMapOutput() MysqlConfigurationMapOutput {
	return o
}

func (o MysqlConfigurationMapOutput) ToMysqlConfigurationMapOutputWithContext(ctx context.Context) MysqlConfigurationMapOutput {
	return o
}

func (o MysqlConfigurationMapOutput) MapIndex(k pulumi.StringInput) MysqlConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MysqlConfiguration {
		return vs[0].(map[string]*MysqlConfiguration)[vs[1].(string)]
	}).(MysqlConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlConfigurationInput)(nil)).Elem(), &MysqlConfiguration{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlConfigurationArrayInput)(nil)).Elem(), MysqlConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlConfigurationMapInput)(nil)).Elem(), MysqlConfigurationMap{})
	pulumi.RegisterOutputType(MysqlConfigurationOutput{})
	pulumi.RegisterOutputType(MysqlConfigurationArrayOutput{})
	pulumi.RegisterOutputType(MysqlConfigurationMapOutput{})
}
