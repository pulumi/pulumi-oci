// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mysql

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Mysql Db System resource in Oracle Cloud Infrastructure MySQL Database service.
//
// Creates and launches a DB System.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Mysql"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Mysql.NewMysqlDbSystem(ctx, "test_mysql_db_system", &Mysql.MysqlDbSystemArgs{
//				AvailabilityDomain: pulumi.Any(mysqlDbSystemAvailabilityDomain),
//				CompartmentId:      pulumi.Any(compartmentId),
//				ShapeName:          pulumi.Any(mysqlShapeName),
//				SubnetId:           pulumi.Any(testSubnet.Id),
//				AdminPassword:      pulumi.Any(mysqlDbSystemAdminPassword),
//				AdminUsername:      pulumi.Any(mysqlDbSystemAdminUsername),
//				BackupPolicy: &mysql.MysqlDbSystemBackupPolicyArgs{
//					DefinedTags: pulumi.StringMap{
//						"foo-namespace.bar-key": pulumi.String("value"),
//					},
//					FreeformTags: pulumi.StringMap{
//						"bar-key": pulumi.String("value"),
//					},
//					IsEnabled: pulumi.Any(mysqlDbSystemBackupPolicyIsEnabled),
//					PitrPolicy: &mysql.MysqlDbSystemBackupPolicyPitrPolicyArgs{
//						IsEnabled: pulumi.Any(mysqlDbSystemBackupPolicyPitrPolicyIsEnabled),
//					},
//					RetentionInDays: pulumi.Any(mysqlDbSystemBackupPolicyRetentionInDays),
//					WindowStartTime: pulumi.Any(mysqlDbSystemBackupPolicyWindowStartTime),
//				},
//				ConfigurationId: pulumi.Any(testConfiguration.Id),
//				CrashRecovery:   pulumi.Any(mysqlDbSystemCrashRecovery),
//				CustomerContacts: mysql.MysqlDbSystemCustomerContactArray{
//					&mysql.MysqlDbSystemCustomerContactArgs{
//						Email: pulumi.Any(mysqlDbSystemCustomerContactsEmail),
//					},
//				},
//				DataStorage: &mysql.MysqlDbSystemDataStorageArgs{
//					IsAutoExpandStorageEnabled: pulumi.Any(mysqlDbSystemDataStorageIsAutoExpandStorageEnabled),
//					MaxStorageSizeInGbs:        pulumi.Any(mysqlDbSystemDataStorageMaxStorageSizeInGbs),
//				},
//				DataStorageSizeInGb: pulumi.Any(mysqlDbSystemDataStorageSizeInGb),
//				DatabaseManagement:  pulumi.Any(mysqlDbSystemDatabaseManagement),
//				DefinedTags: pulumi.StringMap{
//					"foo-namespace.bar-key": pulumi.String("value"),
//				},
//				DeletionPolicies: mysql.MysqlDbSystemDeletionPolicyArray{
//					&mysql.MysqlDbSystemDeletionPolicyArgs{
//						AutomaticBackupRetention: pulumi.Any(mysqlDbSystemDeletionPolicyAutomaticBackupRetention),
//						FinalBackup:              pulumi.Any(mysqlDbSystemDeletionPolicyFinalBackup),
//						IsDeleteProtected:        pulumi.Any(mysqlDbSystemDeletionPolicyIsDeleteProtected),
//					},
//				},
//				Description: pulumi.Any(mysqlDbSystemDescription),
//				DisplayName: pulumi.Any(mysqlDbSystemDisplayName),
//				FaultDomain: pulumi.Any(mysqlDbSystemFaultDomain),
//				FreeformTags: pulumi.StringMap{
//					"bar-key": pulumi.String("value"),
//				},
//				HostnameLabel:     pulumi.Any(mysqlDbSystemHostnameLabel),
//				IpAddress:         pulumi.Any(mysqlDbSystemIpAddress),
//				IsHighlyAvailable: pulumi.Any(mysqlDbSystemIsHighlyAvailable),
//				Maintenance: &mysql.MysqlDbSystemMaintenanceArgs{
//					WindowStartTime: pulumi.Any(mysqlDbSystemMaintenanceWindowStartTime),
//				},
//				Port:  pulumi.Any(mysqlDbSystemPort),
//				PortX: pulumi.Any(mysqlDbSystemPortX),
//				SecureConnections: &mysql.MysqlDbSystemSecureConnectionsArgs{
//					CertificateGenerationType: pulumi.Any(mysqlDbSystemSecureConnectionsCertificateGenerationType),
//					CertificateId:             pulumi.Any(testCertificate.Id),
//				},
//				Source: &mysql.MysqlDbSystemSourceArgs{
//					SourceType: pulumi.Any(mysqlDbSystemSourceSourceType),
//					BackupId:   pulumi.Any(testBackup.Id),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// MysqlDbSystems can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Mysql/mysqlDbSystem:MysqlDbSystem test_mysql_db_system "id"
// ```
type MysqlDbSystem struct {
	pulumi.CustomResourceState

	// The password for the administrative user. The password must be between 8 and 32 characters long, and must contain at least 1 numeric character, 1 lowercase character, 1 uppercase character, and 1 special (nonalphanumeric) character.
	AdminPassword pulumi.StringOutput `pulumi:"adminPassword"`
	// The username for the administrative user.
	AdminUsername pulumi.StringOutput `pulumi:"adminUsername"`
	// The availability domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	//
	// In a failover scenario, the Read/Write endpoint is redirected to one of the other availability domains and the MySQL instance in that domain is promoted to the primary instance. This redirection does not affect the IP address of the DB System in any way.
	//
	// For a standalone DB System, this defines the availability domain in which the DB System is placed.
	AvailabilityDomain pulumi.StringOutput `pulumi:"availabilityDomain"`
	// (Updatable) Backup policy as optionally used for DB System Creation.
	BackupPolicy MysqlDbSystemBackupPolicyOutput `pulumi:"backupPolicy"`
	// A list with a summary of all the Channels attached to the DB System.
	Channels MysqlDbSystemChannelArrayOutput `pulumi:"channels"`
	// The OCID of the compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) The OCID of the Configuration to be used for this DB System.
	ConfigurationId pulumi.StringOutput `pulumi:"configurationId"`
	// (Updatable) Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
	CrashRecovery pulumi.StringOutput `pulumi:"crashRecovery"`
	// The availability domain and fault domain a DB System is placed in.
	CurrentPlacements MysqlDbSystemCurrentPlacementArrayOutput `pulumi:"currentPlacements"`
	// (Updatable) The list of customer email addresses that receive information from Oracle about the specified Oracle Cloud Infrastructure DB System resource.  Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators.  Up to 10 email addresses can be added to the customer contacts for a DB System.
	CustomerContacts MysqlDbSystemCustomerContactArrayOutput `pulumi:"customerContacts"`
	// (Updatable) Data Storage configuration properties.
	DataStorage MysqlDbSystemDataStorageOutput `pulumi:"dataStorage"`
	// (Updatable) Initial size of the data volume in GBs that will be created and attached. Keep in mind that this only specifies the size of the database data volume, the log volume for the database will be scaled appropriately with its shape. It is required if you are creating a new database. It cannot be set if you are creating a database from a backup.
	DataStorageSizeInGb pulumi.IntOutput `pulumi:"dataStorageSizeInGb"`
	// (Updatable) Whether to enable monitoring via the Database Management service.
	DatabaseManagement pulumi.StringOutput `pulumi:"databaseManagement"`
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) Policy for how the DB System and related resources should be handled at the time of its deletion.
	DeletionPolicies MysqlDbSystemDeletionPolicyArrayOutput `pulumi:"deletionPolicies"`
	// (Updatable) User-provided data about the DB System.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) The user-friendly name for the DB System. It does not have to be unique.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The network endpoints available for this DB System.
	Endpoints MysqlDbSystemEndpointArrayOutput `pulumi:"endpoints"`
	// The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	//
	// In a failover scenario, the Read/Write endpoint is redirected to one of the other fault domains and the MySQL instance in that domain is promoted to the primary instance. This redirection does not affect the IP address of the DB System in any way.
	//
	// For a standalone DB System, this defines the fault domain in which the DB System is placed.
	FaultDomain pulumi.StringOutput `pulumi:"faultDomain"`
	// (Updatable) Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// A summary of a HeatWave cluster.
	HeatWaveClusters MysqlDbSystemHeatWaveClusterArrayOutput `pulumi:"heatWaveClusters"`
	// The hostname for the primary endpoint of the DB System. Used for DNS.
	//
	// The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com").
	//
	// Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
	HostnameLabel pulumi.StringOutput `pulumi:"hostnameLabel"`
	// The IP address the DB System is configured to listen on. A private IP address of your choice to assign to the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
	IpAddress pulumi.StringOutput `pulumi:"ipAddress"`
	// If the DB System has a HeatWave Cluster attached.
	IsHeatWaveClusterAttached pulumi.BoolOutput `pulumi:"isHeatWaveClusterAttached"`
	// (Updatable) Specifies if the DB System is highly available.
	//
	// When creating a DB System with High Availability, three instances are created and placed according to your region- and subnet-type. The secondaries are placed automatically in the other two availability or fault domains.  You can choose the preferred location of your primary instance, only.
	IsHighlyAvailable pulumi.BoolOutput `pulumi:"isHighlyAvailable"`
	// Additional information about the current lifecycleState.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// (Updatable) The Maintenance Policy for the DB System or Read Replica that this model is included in. `maintenance` and `backupPolicy` cannot be updated in the same request.
	Maintenance MysqlDbSystemMaintenanceOutput `pulumi:"maintenance"`
	// The specific MySQL version identifier.
	MysqlVersion pulumi.StringOutput `pulumi:"mysqlVersion"`
	// Point-in-time Recovery details like earliest and latest recovery time point for the DB System.
	PointInTimeRecoveryDetails MysqlDbSystemPointInTimeRecoveryDetailArrayOutput `pulumi:"pointInTimeRecoveryDetails"`
	// The port for primary endpoint of the DB System to listen on.
	Port pulumi.IntOutput `pulumi:"port"`
	// The TCP network port on which X Plugin listens for connections. This is the X Plugin equivalent of port.
	PortX pulumi.IntOutput `pulumi:"portX"`
	// (Updatable) Secure connection configuration details.
	SecureConnections MysqlDbSystemSecureConnectionsOutput `pulumi:"secureConnections"`
	// (Updatable) The name of the shape. The shape determines the resources allocated
	// * CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
	ShapeName pulumi.StringOutput `pulumi:"shapeName"`
	// It is applicable only for stopping a DB System. Could be set to `FAST`, `SLOW` or `IMMEDIATE`. Default value is `FAST`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ShutdownType pulumi.StringPtrOutput `pulumi:"shutdownType"`
	// Parameters detailing how to provision the initial data of the system.
	Source MysqlDbSystemSourceOutput `pulumi:"source"`
	// (Updatable) The target state for the DB System. Could be set to `ACTIVE` or `INACTIVE`.
	State pulumi.StringOutput `pulumi:"state"`
	// The OCID of the subnet the DB System is associated with.
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// The date and time the DB System was created.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewMysqlDbSystem registers a new resource with the given unique name, arguments, and options.
func NewMysqlDbSystem(ctx *pulumi.Context,
	name string, args *MysqlDbSystemArgs, opts ...pulumi.ResourceOption) (*MysqlDbSystem, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AvailabilityDomain == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityDomain'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.ShapeName == nil {
		return nil, errors.New("invalid value for required argument 'ShapeName'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	if args.AdminPassword != nil {
		args.AdminPassword = pulumi.ToSecret(args.AdminPassword).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"adminPassword",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MysqlDbSystem
	err := ctx.RegisterResource("oci:Mysql/mysqlDbSystem:MysqlDbSystem", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMysqlDbSystem gets an existing MysqlDbSystem resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMysqlDbSystem(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MysqlDbSystemState, opts ...pulumi.ResourceOption) (*MysqlDbSystem, error) {
	var resource MysqlDbSystem
	err := ctx.ReadResource("oci:Mysql/mysqlDbSystem:MysqlDbSystem", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MysqlDbSystem resources.
type mysqlDbSystemState struct {
	// The password for the administrative user. The password must be between 8 and 32 characters long, and must contain at least 1 numeric character, 1 lowercase character, 1 uppercase character, and 1 special (nonalphanumeric) character.
	AdminPassword *string `pulumi:"adminPassword"`
	// The username for the administrative user.
	AdminUsername *string `pulumi:"adminUsername"`
	// The availability domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	//
	// In a failover scenario, the Read/Write endpoint is redirected to one of the other availability domains and the MySQL instance in that domain is promoted to the primary instance. This redirection does not affect the IP address of the DB System in any way.
	//
	// For a standalone DB System, this defines the availability domain in which the DB System is placed.
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// (Updatable) Backup policy as optionally used for DB System Creation.
	BackupPolicy *MysqlDbSystemBackupPolicy `pulumi:"backupPolicy"`
	// A list with a summary of all the Channels attached to the DB System.
	Channels []MysqlDbSystemChannel `pulumi:"channels"`
	// The OCID of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) The OCID of the Configuration to be used for this DB System.
	ConfigurationId *string `pulumi:"configurationId"`
	// (Updatable) Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
	CrashRecovery *string `pulumi:"crashRecovery"`
	// The availability domain and fault domain a DB System is placed in.
	CurrentPlacements []MysqlDbSystemCurrentPlacement `pulumi:"currentPlacements"`
	// (Updatable) The list of customer email addresses that receive information from Oracle about the specified Oracle Cloud Infrastructure DB System resource.  Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators.  Up to 10 email addresses can be added to the customer contacts for a DB System.
	CustomerContacts []MysqlDbSystemCustomerContact `pulumi:"customerContacts"`
	// (Updatable) Data Storage configuration properties.
	DataStorage *MysqlDbSystemDataStorage `pulumi:"dataStorage"`
	// (Updatable) Initial size of the data volume in GBs that will be created and attached. Keep in mind that this only specifies the size of the database data volume, the log volume for the database will be scaled appropriately with its shape. It is required if you are creating a new database. It cannot be set if you are creating a database from a backup.
	DataStorageSizeInGb *int `pulumi:"dataStorageSizeInGb"`
	// (Updatable) Whether to enable monitoring via the Database Management service.
	DatabaseManagement *string `pulumi:"databaseManagement"`
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) Policy for how the DB System and related resources should be handled at the time of its deletion.
	DeletionPolicies []MysqlDbSystemDeletionPolicy `pulumi:"deletionPolicies"`
	// (Updatable) User-provided data about the DB System.
	Description *string `pulumi:"description"`
	// (Updatable) The user-friendly name for the DB System. It does not have to be unique.
	DisplayName *string `pulumi:"displayName"`
	// The network endpoints available for this DB System.
	Endpoints []MysqlDbSystemEndpoint `pulumi:"endpoints"`
	// The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	//
	// In a failover scenario, the Read/Write endpoint is redirected to one of the other fault domains and the MySQL instance in that domain is promoted to the primary instance. This redirection does not affect the IP address of the DB System in any way.
	//
	// For a standalone DB System, this defines the fault domain in which the DB System is placed.
	FaultDomain *string `pulumi:"faultDomain"`
	// (Updatable) Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// A summary of a HeatWave cluster.
	HeatWaveClusters []MysqlDbSystemHeatWaveCluster `pulumi:"heatWaveClusters"`
	// The hostname for the primary endpoint of the DB System. Used for DNS.
	//
	// The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com").
	//
	// Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
	HostnameLabel *string `pulumi:"hostnameLabel"`
	// The IP address the DB System is configured to listen on. A private IP address of your choice to assign to the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
	IpAddress *string `pulumi:"ipAddress"`
	// If the DB System has a HeatWave Cluster attached.
	IsHeatWaveClusterAttached *bool `pulumi:"isHeatWaveClusterAttached"`
	// (Updatable) Specifies if the DB System is highly available.
	//
	// When creating a DB System with High Availability, three instances are created and placed according to your region- and subnet-type. The secondaries are placed automatically in the other two availability or fault domains.  You can choose the preferred location of your primary instance, only.
	IsHighlyAvailable *bool `pulumi:"isHighlyAvailable"`
	// Additional information about the current lifecycleState.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// (Updatable) The Maintenance Policy for the DB System or Read Replica that this model is included in. `maintenance` and `backupPolicy` cannot be updated in the same request.
	Maintenance *MysqlDbSystemMaintenance `pulumi:"maintenance"`
	// The specific MySQL version identifier.
	MysqlVersion *string `pulumi:"mysqlVersion"`
	// Point-in-time Recovery details like earliest and latest recovery time point for the DB System.
	PointInTimeRecoveryDetails []MysqlDbSystemPointInTimeRecoveryDetail `pulumi:"pointInTimeRecoveryDetails"`
	// The port for primary endpoint of the DB System to listen on.
	Port *int `pulumi:"port"`
	// The TCP network port on which X Plugin listens for connections. This is the X Plugin equivalent of port.
	PortX *int `pulumi:"portX"`
	// (Updatable) Secure connection configuration details.
	SecureConnections *MysqlDbSystemSecureConnections `pulumi:"secureConnections"`
	// (Updatable) The name of the shape. The shape determines the resources allocated
	// * CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
	ShapeName *string `pulumi:"shapeName"`
	// It is applicable only for stopping a DB System. Could be set to `FAST`, `SLOW` or `IMMEDIATE`. Default value is `FAST`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ShutdownType *string `pulumi:"shutdownType"`
	// Parameters detailing how to provision the initial data of the system.
	Source *MysqlDbSystemSource `pulumi:"source"`
	// (Updatable) The target state for the DB System. Could be set to `ACTIVE` or `INACTIVE`.
	State *string `pulumi:"state"`
	// The OCID of the subnet the DB System is associated with.
	SubnetId *string `pulumi:"subnetId"`
	// The date and time the DB System was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type MysqlDbSystemState struct {
	// The password for the administrative user. The password must be between 8 and 32 characters long, and must contain at least 1 numeric character, 1 lowercase character, 1 uppercase character, and 1 special (nonalphanumeric) character.
	AdminPassword pulumi.StringPtrInput
	// The username for the administrative user.
	AdminUsername pulumi.StringPtrInput
	// The availability domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	//
	// In a failover scenario, the Read/Write endpoint is redirected to one of the other availability domains and the MySQL instance in that domain is promoted to the primary instance. This redirection does not affect the IP address of the DB System in any way.
	//
	// For a standalone DB System, this defines the availability domain in which the DB System is placed.
	AvailabilityDomain pulumi.StringPtrInput
	// (Updatable) Backup policy as optionally used for DB System Creation.
	BackupPolicy MysqlDbSystemBackupPolicyPtrInput
	// A list with a summary of all the Channels attached to the DB System.
	Channels MysqlDbSystemChannelArrayInput
	// The OCID of the compartment.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) The OCID of the Configuration to be used for this DB System.
	ConfigurationId pulumi.StringPtrInput
	// (Updatable) Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
	CrashRecovery pulumi.StringPtrInput
	// The availability domain and fault domain a DB System is placed in.
	CurrentPlacements MysqlDbSystemCurrentPlacementArrayInput
	// (Updatable) The list of customer email addresses that receive information from Oracle about the specified Oracle Cloud Infrastructure DB System resource.  Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators.  Up to 10 email addresses can be added to the customer contacts for a DB System.
	CustomerContacts MysqlDbSystemCustomerContactArrayInput
	// (Updatable) Data Storage configuration properties.
	DataStorage MysqlDbSystemDataStoragePtrInput
	// (Updatable) Initial size of the data volume in GBs that will be created and attached. Keep in mind that this only specifies the size of the database data volume, the log volume for the database will be scaled appropriately with its shape. It is required if you are creating a new database. It cannot be set if you are creating a database from a backup.
	DataStorageSizeInGb pulumi.IntPtrInput
	// (Updatable) Whether to enable monitoring via the Database Management service.
	DatabaseManagement pulumi.StringPtrInput
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) Policy for how the DB System and related resources should be handled at the time of its deletion.
	DeletionPolicies MysqlDbSystemDeletionPolicyArrayInput
	// (Updatable) User-provided data about the DB System.
	Description pulumi.StringPtrInput
	// (Updatable) The user-friendly name for the DB System. It does not have to be unique.
	DisplayName pulumi.StringPtrInput
	// The network endpoints available for this DB System.
	Endpoints MysqlDbSystemEndpointArrayInput
	// The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	//
	// In a failover scenario, the Read/Write endpoint is redirected to one of the other fault domains and the MySQL instance in that domain is promoted to the primary instance. This redirection does not affect the IP address of the DB System in any way.
	//
	// For a standalone DB System, this defines the fault domain in which the DB System is placed.
	FaultDomain pulumi.StringPtrInput
	// (Updatable) Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// A summary of a HeatWave cluster.
	HeatWaveClusters MysqlDbSystemHeatWaveClusterArrayInput
	// The hostname for the primary endpoint of the DB System. Used for DNS.
	//
	// The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com").
	//
	// Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
	HostnameLabel pulumi.StringPtrInput
	// The IP address the DB System is configured to listen on. A private IP address of your choice to assign to the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
	IpAddress pulumi.StringPtrInput
	// If the DB System has a HeatWave Cluster attached.
	IsHeatWaveClusterAttached pulumi.BoolPtrInput
	// (Updatable) Specifies if the DB System is highly available.
	//
	// When creating a DB System with High Availability, three instances are created and placed according to your region- and subnet-type. The secondaries are placed automatically in the other two availability or fault domains.  You can choose the preferred location of your primary instance, only.
	IsHighlyAvailable pulumi.BoolPtrInput
	// Additional information about the current lifecycleState.
	LifecycleDetails pulumi.StringPtrInput
	// (Updatable) The Maintenance Policy for the DB System or Read Replica that this model is included in. `maintenance` and `backupPolicy` cannot be updated in the same request.
	Maintenance MysqlDbSystemMaintenancePtrInput
	// The specific MySQL version identifier.
	MysqlVersion pulumi.StringPtrInput
	// Point-in-time Recovery details like earliest and latest recovery time point for the DB System.
	PointInTimeRecoveryDetails MysqlDbSystemPointInTimeRecoveryDetailArrayInput
	// The port for primary endpoint of the DB System to listen on.
	Port pulumi.IntPtrInput
	// The TCP network port on which X Plugin listens for connections. This is the X Plugin equivalent of port.
	PortX pulumi.IntPtrInput
	// (Updatable) Secure connection configuration details.
	SecureConnections MysqlDbSystemSecureConnectionsPtrInput
	// (Updatable) The name of the shape. The shape determines the resources allocated
	// * CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
	ShapeName pulumi.StringPtrInput
	// It is applicable only for stopping a DB System. Could be set to `FAST`, `SLOW` or `IMMEDIATE`. Default value is `FAST`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ShutdownType pulumi.StringPtrInput
	// Parameters detailing how to provision the initial data of the system.
	Source MysqlDbSystemSourcePtrInput
	// (Updatable) The target state for the DB System. Could be set to `ACTIVE` or `INACTIVE`.
	State pulumi.StringPtrInput
	// The OCID of the subnet the DB System is associated with.
	SubnetId pulumi.StringPtrInput
	// The date and time the DB System was created.
	TimeCreated pulumi.StringPtrInput
	// The time the DB System was last updated.
	TimeUpdated pulumi.StringPtrInput
}

func (MysqlDbSystemState) ElementType() reflect.Type {
	return reflect.TypeOf((*mysqlDbSystemState)(nil)).Elem()
}

type mysqlDbSystemArgs struct {
	// The password for the administrative user. The password must be between 8 and 32 characters long, and must contain at least 1 numeric character, 1 lowercase character, 1 uppercase character, and 1 special (nonalphanumeric) character.
	AdminPassword *string `pulumi:"adminPassword"`
	// The username for the administrative user.
	AdminUsername *string `pulumi:"adminUsername"`
	// The availability domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	//
	// In a failover scenario, the Read/Write endpoint is redirected to one of the other availability domains and the MySQL instance in that domain is promoted to the primary instance. This redirection does not affect the IP address of the DB System in any way.
	//
	// For a standalone DB System, this defines the availability domain in which the DB System is placed.
	AvailabilityDomain string `pulumi:"availabilityDomain"`
	// (Updatable) Backup policy as optionally used for DB System Creation.
	BackupPolicy *MysqlDbSystemBackupPolicy `pulumi:"backupPolicy"`
	// The OCID of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) The OCID of the Configuration to be used for this DB System.
	ConfigurationId *string `pulumi:"configurationId"`
	// (Updatable) Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
	CrashRecovery *string `pulumi:"crashRecovery"`
	// (Updatable) The list of customer email addresses that receive information from Oracle about the specified Oracle Cloud Infrastructure DB System resource.  Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators.  Up to 10 email addresses can be added to the customer contacts for a DB System.
	CustomerContacts []MysqlDbSystemCustomerContact `pulumi:"customerContacts"`
	// (Updatable) Data Storage configuration properties.
	DataStorage *MysqlDbSystemDataStorage `pulumi:"dataStorage"`
	// (Updatable) Initial size of the data volume in GBs that will be created and attached. Keep in mind that this only specifies the size of the database data volume, the log volume for the database will be scaled appropriately with its shape. It is required if you are creating a new database. It cannot be set if you are creating a database from a backup.
	DataStorageSizeInGb *int `pulumi:"dataStorageSizeInGb"`
	// (Updatable) Whether to enable monitoring via the Database Management service.
	DatabaseManagement *string `pulumi:"databaseManagement"`
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) Policy for how the DB System and related resources should be handled at the time of its deletion.
	DeletionPolicies []MysqlDbSystemDeletionPolicy `pulumi:"deletionPolicies"`
	// (Updatable) User-provided data about the DB System.
	Description *string `pulumi:"description"`
	// (Updatable) The user-friendly name for the DB System. It does not have to be unique.
	DisplayName *string `pulumi:"displayName"`
	// The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	//
	// In a failover scenario, the Read/Write endpoint is redirected to one of the other fault domains and the MySQL instance in that domain is promoted to the primary instance. This redirection does not affect the IP address of the DB System in any way.
	//
	// For a standalone DB System, this defines the fault domain in which the DB System is placed.
	FaultDomain *string `pulumi:"faultDomain"`
	// (Updatable) Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The hostname for the primary endpoint of the DB System. Used for DNS.
	//
	// The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com").
	//
	// Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
	HostnameLabel *string `pulumi:"hostnameLabel"`
	// The IP address the DB System is configured to listen on. A private IP address of your choice to assign to the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
	IpAddress *string `pulumi:"ipAddress"`
	// (Updatable) Specifies if the DB System is highly available.
	//
	// When creating a DB System with High Availability, three instances are created and placed according to your region- and subnet-type. The secondaries are placed automatically in the other two availability or fault domains.  You can choose the preferred location of your primary instance, only.
	IsHighlyAvailable *bool `pulumi:"isHighlyAvailable"`
	// (Updatable) The Maintenance Policy for the DB System or Read Replica that this model is included in. `maintenance` and `backupPolicy` cannot be updated in the same request.
	Maintenance *MysqlDbSystemMaintenance `pulumi:"maintenance"`
	// The specific MySQL version identifier.
	MysqlVersion *string `pulumi:"mysqlVersion"`
	// The port for primary endpoint of the DB System to listen on.
	Port *int `pulumi:"port"`
	// The TCP network port on which X Plugin listens for connections. This is the X Plugin equivalent of port.
	PortX *int `pulumi:"portX"`
	// (Updatable) Secure connection configuration details.
	SecureConnections *MysqlDbSystemSecureConnections `pulumi:"secureConnections"`
	// (Updatable) The name of the shape. The shape determines the resources allocated
	// * CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
	ShapeName string `pulumi:"shapeName"`
	// It is applicable only for stopping a DB System. Could be set to `FAST`, `SLOW` or `IMMEDIATE`. Default value is `FAST`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ShutdownType *string `pulumi:"shutdownType"`
	// Parameters detailing how to provision the initial data of the system.
	Source *MysqlDbSystemSource `pulumi:"source"`
	// (Updatable) The target state for the DB System. Could be set to `ACTIVE` or `INACTIVE`.
	State *string `pulumi:"state"`
	// The OCID of the subnet the DB System is associated with.
	SubnetId string `pulumi:"subnetId"`
}

// The set of arguments for constructing a MysqlDbSystem resource.
type MysqlDbSystemArgs struct {
	// The password for the administrative user. The password must be between 8 and 32 characters long, and must contain at least 1 numeric character, 1 lowercase character, 1 uppercase character, and 1 special (nonalphanumeric) character.
	AdminPassword pulumi.StringPtrInput
	// The username for the administrative user.
	AdminUsername pulumi.StringPtrInput
	// The availability domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	//
	// In a failover scenario, the Read/Write endpoint is redirected to one of the other availability domains and the MySQL instance in that domain is promoted to the primary instance. This redirection does not affect the IP address of the DB System in any way.
	//
	// For a standalone DB System, this defines the availability domain in which the DB System is placed.
	AvailabilityDomain pulumi.StringInput
	// (Updatable) Backup policy as optionally used for DB System Creation.
	BackupPolicy MysqlDbSystemBackupPolicyPtrInput
	// The OCID of the compartment.
	CompartmentId pulumi.StringInput
	// (Updatable) The OCID of the Configuration to be used for this DB System.
	ConfigurationId pulumi.StringPtrInput
	// (Updatable) Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
	CrashRecovery pulumi.StringPtrInput
	// (Updatable) The list of customer email addresses that receive information from Oracle about the specified Oracle Cloud Infrastructure DB System resource.  Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators.  Up to 10 email addresses can be added to the customer contacts for a DB System.
	CustomerContacts MysqlDbSystemCustomerContactArrayInput
	// (Updatable) Data Storage configuration properties.
	DataStorage MysqlDbSystemDataStoragePtrInput
	// (Updatable) Initial size of the data volume in GBs that will be created and attached. Keep in mind that this only specifies the size of the database data volume, the log volume for the database will be scaled appropriately with its shape. It is required if you are creating a new database. It cannot be set if you are creating a database from a backup.
	DataStorageSizeInGb pulumi.IntPtrInput
	// (Updatable) Whether to enable monitoring via the Database Management service.
	DatabaseManagement pulumi.StringPtrInput
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) Policy for how the DB System and related resources should be handled at the time of its deletion.
	DeletionPolicies MysqlDbSystemDeletionPolicyArrayInput
	// (Updatable) User-provided data about the DB System.
	Description pulumi.StringPtrInput
	// (Updatable) The user-friendly name for the DB System. It does not have to be unique.
	DisplayName pulumi.StringPtrInput
	// The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	//
	// In a failover scenario, the Read/Write endpoint is redirected to one of the other fault domains and the MySQL instance in that domain is promoted to the primary instance. This redirection does not affect the IP address of the DB System in any way.
	//
	// For a standalone DB System, this defines the fault domain in which the DB System is placed.
	FaultDomain pulumi.StringPtrInput
	// (Updatable) Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// The hostname for the primary endpoint of the DB System. Used for DNS.
	//
	// The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com").
	//
	// Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
	HostnameLabel pulumi.StringPtrInput
	// The IP address the DB System is configured to listen on. A private IP address of your choice to assign to the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
	IpAddress pulumi.StringPtrInput
	// (Updatable) Specifies if the DB System is highly available.
	//
	// When creating a DB System with High Availability, three instances are created and placed according to your region- and subnet-type. The secondaries are placed automatically in the other two availability or fault domains.  You can choose the preferred location of your primary instance, only.
	IsHighlyAvailable pulumi.BoolPtrInput
	// (Updatable) The Maintenance Policy for the DB System or Read Replica that this model is included in. `maintenance` and `backupPolicy` cannot be updated in the same request.
	Maintenance MysqlDbSystemMaintenancePtrInput
	// The specific MySQL version identifier.
	MysqlVersion pulumi.StringPtrInput
	// The port for primary endpoint of the DB System to listen on.
	Port pulumi.IntPtrInput
	// The TCP network port on which X Plugin listens for connections. This is the X Plugin equivalent of port.
	PortX pulumi.IntPtrInput
	// (Updatable) Secure connection configuration details.
	SecureConnections MysqlDbSystemSecureConnectionsPtrInput
	// (Updatable) The name of the shape. The shape determines the resources allocated
	// * CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
	ShapeName pulumi.StringInput
	// It is applicable only for stopping a DB System. Could be set to `FAST`, `SLOW` or `IMMEDIATE`. Default value is `FAST`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ShutdownType pulumi.StringPtrInput
	// Parameters detailing how to provision the initial data of the system.
	Source MysqlDbSystemSourcePtrInput
	// (Updatable) The target state for the DB System. Could be set to `ACTIVE` or `INACTIVE`.
	State pulumi.StringPtrInput
	// The OCID of the subnet the DB System is associated with.
	SubnetId pulumi.StringInput
}

func (MysqlDbSystemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mysqlDbSystemArgs)(nil)).Elem()
}

type MysqlDbSystemInput interface {
	pulumi.Input

	ToMysqlDbSystemOutput() MysqlDbSystemOutput
	ToMysqlDbSystemOutputWithContext(ctx context.Context) MysqlDbSystemOutput
}

func (*MysqlDbSystem) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlDbSystem)(nil)).Elem()
}

func (i *MysqlDbSystem) ToMysqlDbSystemOutput() MysqlDbSystemOutput {
	return i.ToMysqlDbSystemOutputWithContext(context.Background())
}

func (i *MysqlDbSystem) ToMysqlDbSystemOutputWithContext(ctx context.Context) MysqlDbSystemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemOutput)
}

// MysqlDbSystemArrayInput is an input type that accepts MysqlDbSystemArray and MysqlDbSystemArrayOutput values.
// You can construct a concrete instance of `MysqlDbSystemArrayInput` via:
//
//	MysqlDbSystemArray{ MysqlDbSystemArgs{...} }
type MysqlDbSystemArrayInput interface {
	pulumi.Input

	ToMysqlDbSystemArrayOutput() MysqlDbSystemArrayOutput
	ToMysqlDbSystemArrayOutputWithContext(context.Context) MysqlDbSystemArrayOutput
}

type MysqlDbSystemArray []MysqlDbSystemInput

func (MysqlDbSystemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MysqlDbSystem)(nil)).Elem()
}

func (i MysqlDbSystemArray) ToMysqlDbSystemArrayOutput() MysqlDbSystemArrayOutput {
	return i.ToMysqlDbSystemArrayOutputWithContext(context.Background())
}

func (i MysqlDbSystemArray) ToMysqlDbSystemArrayOutputWithContext(ctx context.Context) MysqlDbSystemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemArrayOutput)
}

// MysqlDbSystemMapInput is an input type that accepts MysqlDbSystemMap and MysqlDbSystemMapOutput values.
// You can construct a concrete instance of `MysqlDbSystemMapInput` via:
//
//	MysqlDbSystemMap{ "key": MysqlDbSystemArgs{...} }
type MysqlDbSystemMapInput interface {
	pulumi.Input

	ToMysqlDbSystemMapOutput() MysqlDbSystemMapOutput
	ToMysqlDbSystemMapOutputWithContext(context.Context) MysqlDbSystemMapOutput
}

type MysqlDbSystemMap map[string]MysqlDbSystemInput

func (MysqlDbSystemMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MysqlDbSystem)(nil)).Elem()
}

func (i MysqlDbSystemMap) ToMysqlDbSystemMapOutput() MysqlDbSystemMapOutput {
	return i.ToMysqlDbSystemMapOutputWithContext(context.Background())
}

func (i MysqlDbSystemMap) ToMysqlDbSystemMapOutputWithContext(ctx context.Context) MysqlDbSystemMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemMapOutput)
}

type MysqlDbSystemOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlDbSystem)(nil)).Elem()
}

func (o MysqlDbSystemOutput) ToMysqlDbSystemOutput() MysqlDbSystemOutput {
	return o
}

func (o MysqlDbSystemOutput) ToMysqlDbSystemOutputWithContext(ctx context.Context) MysqlDbSystemOutput {
	return o
}

// The password for the administrative user. The password must be between 8 and 32 characters long, and must contain at least 1 numeric character, 1 lowercase character, 1 uppercase character, and 1 special (nonalphanumeric) character.
func (o MysqlDbSystemOutput) AdminPassword() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlDbSystem) pulumi.StringOutput { return v.AdminPassword }).(pulumi.StringOutput)
}

// The username for the administrative user.
func (o MysqlDbSystemOutput) AdminUsername() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlDbSystem) pulumi.StringOutput { return v.AdminUsername }).(pulumi.StringOutput)
}

// The availability domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
//
// In a failover scenario, the Read/Write endpoint is redirected to one of the other availability domains and the MySQL instance in that domain is promoted to the primary instance. This redirection does not affect the IP address of the DB System in any way.
//
// For a standalone DB System, this defines the availability domain in which the DB System is placed.
func (o MysqlDbSystemOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlDbSystem) pulumi.StringOutput { return v.AvailabilityDomain }).(pulumi.StringOutput)
}

// (Updatable) Backup policy as optionally used for DB System Creation.
func (o MysqlDbSystemOutput) BackupPolicy() MysqlDbSystemBackupPolicyOutput {
	return o.ApplyT(func(v *MysqlDbSystem) MysqlDbSystemBackupPolicyOutput { return v.BackupPolicy }).(MysqlDbSystemBackupPolicyOutput)
}

// A list with a summary of all the Channels attached to the DB System.
func (o MysqlDbSystemOutput) Channels() MysqlDbSystemChannelArrayOutput {
	return o.ApplyT(func(v *MysqlDbSystem) MysqlDbSystemChannelArrayOutput { return v.Channels }).(MysqlDbSystemChannelArrayOutput)
}

// The OCID of the compartment.
func (o MysqlDbSystemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlDbSystem) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) The OCID of the Configuration to be used for this DB System.
func (o MysqlDbSystemOutput) ConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlDbSystem) pulumi.StringOutput { return v.ConfigurationId }).(pulumi.StringOutput)
}

// (Updatable) Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
func (o MysqlDbSystemOutput) CrashRecovery() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlDbSystem) pulumi.StringOutput { return v.CrashRecovery }).(pulumi.StringOutput)
}

// The availability domain and fault domain a DB System is placed in.
func (o MysqlDbSystemOutput) CurrentPlacements() MysqlDbSystemCurrentPlacementArrayOutput {
	return o.ApplyT(func(v *MysqlDbSystem) MysqlDbSystemCurrentPlacementArrayOutput { return v.CurrentPlacements }).(MysqlDbSystemCurrentPlacementArrayOutput)
}

// (Updatable) The list of customer email addresses that receive information from Oracle about the specified Oracle Cloud Infrastructure DB System resource.  Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators.  Up to 10 email addresses can be added to the customer contacts for a DB System.
func (o MysqlDbSystemOutput) CustomerContacts() MysqlDbSystemCustomerContactArrayOutput {
	return o.ApplyT(func(v *MysqlDbSystem) MysqlDbSystemCustomerContactArrayOutput { return v.CustomerContacts }).(MysqlDbSystemCustomerContactArrayOutput)
}

// (Updatable) Data Storage configuration properties.
func (o MysqlDbSystemOutput) DataStorage() MysqlDbSystemDataStorageOutput {
	return o.ApplyT(func(v *MysqlDbSystem) MysqlDbSystemDataStorageOutput { return v.DataStorage }).(MysqlDbSystemDataStorageOutput)
}

// (Updatable) Initial size of the data volume in GBs that will be created and attached. Keep in mind that this only specifies the size of the database data volume, the log volume for the database will be scaled appropriately with its shape. It is required if you are creating a new database. It cannot be set if you are creating a database from a backup.
func (o MysqlDbSystemOutput) DataStorageSizeInGb() pulumi.IntOutput {
	return o.ApplyT(func(v *MysqlDbSystem) pulumi.IntOutput { return v.DataStorageSizeInGb }).(pulumi.IntOutput)
}

// (Updatable) Whether to enable monitoring via the Database Management service.
func (o MysqlDbSystemOutput) DatabaseManagement() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlDbSystem) pulumi.StringOutput { return v.DatabaseManagement }).(pulumi.StringOutput)
}

// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
func (o MysqlDbSystemOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MysqlDbSystem) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) Policy for how the DB System and related resources should be handled at the time of its deletion.
func (o MysqlDbSystemOutput) DeletionPolicies() MysqlDbSystemDeletionPolicyArrayOutput {
	return o.ApplyT(func(v *MysqlDbSystem) MysqlDbSystemDeletionPolicyArrayOutput { return v.DeletionPolicies }).(MysqlDbSystemDeletionPolicyArrayOutput)
}

// (Updatable) User-provided data about the DB System.
func (o MysqlDbSystemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlDbSystem) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) The user-friendly name for the DB System. It does not have to be unique.
func (o MysqlDbSystemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlDbSystem) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// The network endpoints available for this DB System.
func (o MysqlDbSystemOutput) Endpoints() MysqlDbSystemEndpointArrayOutput {
	return o.ApplyT(func(v *MysqlDbSystem) MysqlDbSystemEndpointArrayOutput { return v.Endpoints }).(MysqlDbSystemEndpointArrayOutput)
}

// The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
//
// In a failover scenario, the Read/Write endpoint is redirected to one of the other fault domains and the MySQL instance in that domain is promoted to the primary instance. This redirection does not affect the IP address of the DB System in any way.
//
// For a standalone DB System, this defines the fault domain in which the DB System is placed.
func (o MysqlDbSystemOutput) FaultDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlDbSystem) pulumi.StringOutput { return v.FaultDomain }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o MysqlDbSystemOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MysqlDbSystem) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// A summary of a HeatWave cluster.
func (o MysqlDbSystemOutput) HeatWaveClusters() MysqlDbSystemHeatWaveClusterArrayOutput {
	return o.ApplyT(func(v *MysqlDbSystem) MysqlDbSystemHeatWaveClusterArrayOutput { return v.HeatWaveClusters }).(MysqlDbSystemHeatWaveClusterArrayOutput)
}

// The hostname for the primary endpoint of the DB System. Used for DNS.
//
// The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com").
//
// Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
func (o MysqlDbSystemOutput) HostnameLabel() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlDbSystem) pulumi.StringOutput { return v.HostnameLabel }).(pulumi.StringOutput)
}

// The IP address the DB System is configured to listen on. A private IP address of your choice to assign to the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
func (o MysqlDbSystemOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlDbSystem) pulumi.StringOutput { return v.IpAddress }).(pulumi.StringOutput)
}

// If the DB System has a HeatWave Cluster attached.
func (o MysqlDbSystemOutput) IsHeatWaveClusterAttached() pulumi.BoolOutput {
	return o.ApplyT(func(v *MysqlDbSystem) pulumi.BoolOutput { return v.IsHeatWaveClusterAttached }).(pulumi.BoolOutput)
}

// (Updatable) Specifies if the DB System is highly available.
//
// When creating a DB System with High Availability, three instances are created and placed according to your region- and subnet-type. The secondaries are placed automatically in the other two availability or fault domains.  You can choose the preferred location of your primary instance, only.
func (o MysqlDbSystemOutput) IsHighlyAvailable() pulumi.BoolOutput {
	return o.ApplyT(func(v *MysqlDbSystem) pulumi.BoolOutput { return v.IsHighlyAvailable }).(pulumi.BoolOutput)
}

// Additional information about the current lifecycleState.
func (o MysqlDbSystemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlDbSystem) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// (Updatable) The Maintenance Policy for the DB System or Read Replica that this model is included in. `maintenance` and `backupPolicy` cannot be updated in the same request.
func (o MysqlDbSystemOutput) Maintenance() MysqlDbSystemMaintenanceOutput {
	return o.ApplyT(func(v *MysqlDbSystem) MysqlDbSystemMaintenanceOutput { return v.Maintenance }).(MysqlDbSystemMaintenanceOutput)
}

// The specific MySQL version identifier.
func (o MysqlDbSystemOutput) MysqlVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlDbSystem) pulumi.StringOutput { return v.MysqlVersion }).(pulumi.StringOutput)
}

// Point-in-time Recovery details like earliest and latest recovery time point for the DB System.
func (o MysqlDbSystemOutput) PointInTimeRecoveryDetails() MysqlDbSystemPointInTimeRecoveryDetailArrayOutput {
	return o.ApplyT(func(v *MysqlDbSystem) MysqlDbSystemPointInTimeRecoveryDetailArrayOutput {
		return v.PointInTimeRecoveryDetails
	}).(MysqlDbSystemPointInTimeRecoveryDetailArrayOutput)
}

// The port for primary endpoint of the DB System to listen on.
func (o MysqlDbSystemOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v *MysqlDbSystem) pulumi.IntOutput { return v.Port }).(pulumi.IntOutput)
}

// The TCP network port on which X Plugin listens for connections. This is the X Plugin equivalent of port.
func (o MysqlDbSystemOutput) PortX() pulumi.IntOutput {
	return o.ApplyT(func(v *MysqlDbSystem) pulumi.IntOutput { return v.PortX }).(pulumi.IntOutput)
}

// (Updatable) Secure connection configuration details.
func (o MysqlDbSystemOutput) SecureConnections() MysqlDbSystemSecureConnectionsOutput {
	return o.ApplyT(func(v *MysqlDbSystem) MysqlDbSystemSecureConnectionsOutput { return v.SecureConnections }).(MysqlDbSystemSecureConnectionsOutput)
}

// (Updatable) The name of the shape. The shape determines the resources allocated
// * CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
func (o MysqlDbSystemOutput) ShapeName() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlDbSystem) pulumi.StringOutput { return v.ShapeName }).(pulumi.StringOutput)
}

// It is applicable only for stopping a DB System. Could be set to `FAST`, `SLOW` or `IMMEDIATE`. Default value is `FAST`.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o MysqlDbSystemOutput) ShutdownType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystem) pulumi.StringPtrOutput { return v.ShutdownType }).(pulumi.StringPtrOutput)
}

// Parameters detailing how to provision the initial data of the system.
func (o MysqlDbSystemOutput) Source() MysqlDbSystemSourceOutput {
	return o.ApplyT(func(v *MysqlDbSystem) MysqlDbSystemSourceOutput { return v.Source }).(MysqlDbSystemSourceOutput)
}

// (Updatable) The target state for the DB System. Could be set to `ACTIVE` or `INACTIVE`.
func (o MysqlDbSystemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlDbSystem) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The OCID of the subnet the DB System is associated with.
func (o MysqlDbSystemOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlDbSystem) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

// The date and time the DB System was created.
func (o MysqlDbSystemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlDbSystem) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the DB System was last updated.
func (o MysqlDbSystemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlDbSystem) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type MysqlDbSystemArrayOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MysqlDbSystem)(nil)).Elem()
}

func (o MysqlDbSystemArrayOutput) ToMysqlDbSystemArrayOutput() MysqlDbSystemArrayOutput {
	return o
}

func (o MysqlDbSystemArrayOutput) ToMysqlDbSystemArrayOutputWithContext(ctx context.Context) MysqlDbSystemArrayOutput {
	return o
}

func (o MysqlDbSystemArrayOutput) Index(i pulumi.IntInput) MysqlDbSystemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MysqlDbSystem {
		return vs[0].([]*MysqlDbSystem)[vs[1].(int)]
	}).(MysqlDbSystemOutput)
}

type MysqlDbSystemMapOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MysqlDbSystem)(nil)).Elem()
}

func (o MysqlDbSystemMapOutput) ToMysqlDbSystemMapOutput() MysqlDbSystemMapOutput {
	return o
}

func (o MysqlDbSystemMapOutput) ToMysqlDbSystemMapOutputWithContext(ctx context.Context) MysqlDbSystemMapOutput {
	return o
}

func (o MysqlDbSystemMapOutput) MapIndex(k pulumi.StringInput) MysqlDbSystemOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MysqlDbSystem {
		return vs[0].(map[string]*MysqlDbSystem)[vs[1].(string)]
	}).(MysqlDbSystemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemInput)(nil)).Elem(), &MysqlDbSystem{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemArrayInput)(nil)).Elem(), MysqlDbSystemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemMapInput)(nil)).Elem(), MysqlDbSystemMap{})
	pulumi.RegisterOutputType(MysqlDbSystemOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemArrayOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemMapOutput{})
}
