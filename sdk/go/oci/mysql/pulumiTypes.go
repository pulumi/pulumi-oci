// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package mysql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AnalyticsClusterClusterNode struct {
	// The ID of the node within MySQL Analytics Cluster.
	NodeId *string `pulumi:"nodeId"`
	// (Updatable) The target state for the Analytics Cluster. Could be set to `ACTIVE` or `INACTIVE`.
	State *string `pulumi:"state"`
	// The date and time the Analytics Cluster was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the Analytics Cluster was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeUpdated *string `pulumi:"timeUpdated"`
}

// AnalyticsClusterClusterNodeInput is an input type that accepts AnalyticsClusterClusterNodeArgs and AnalyticsClusterClusterNodeOutput values.
// You can construct a concrete instance of `AnalyticsClusterClusterNodeInput` via:
//
//          AnalyticsClusterClusterNodeArgs{...}
type AnalyticsClusterClusterNodeInput interface {
	pulumi.Input

	ToAnalyticsClusterClusterNodeOutput() AnalyticsClusterClusterNodeOutput
	ToAnalyticsClusterClusterNodeOutputWithContext(context.Context) AnalyticsClusterClusterNodeOutput
}

type AnalyticsClusterClusterNodeArgs struct {
	// The ID of the node within MySQL Analytics Cluster.
	NodeId pulumi.StringPtrInput `pulumi:"nodeId"`
	// (Updatable) The target state for the Analytics Cluster. Could be set to `ACTIVE` or `INACTIVE`.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The date and time the Analytics Cluster was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The time the Analytics Cluster was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeUpdated pulumi.StringPtrInput `pulumi:"timeUpdated"`
}

func (AnalyticsClusterClusterNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsClusterClusterNode)(nil)).Elem()
}

func (i AnalyticsClusterClusterNodeArgs) ToAnalyticsClusterClusterNodeOutput() AnalyticsClusterClusterNodeOutput {
	return i.ToAnalyticsClusterClusterNodeOutputWithContext(context.Background())
}

func (i AnalyticsClusterClusterNodeArgs) ToAnalyticsClusterClusterNodeOutputWithContext(ctx context.Context) AnalyticsClusterClusterNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsClusterClusterNodeOutput)
}

// AnalyticsClusterClusterNodeArrayInput is an input type that accepts AnalyticsClusterClusterNodeArray and AnalyticsClusterClusterNodeArrayOutput values.
// You can construct a concrete instance of `AnalyticsClusterClusterNodeArrayInput` via:
//
//          AnalyticsClusterClusterNodeArray{ AnalyticsClusterClusterNodeArgs{...} }
type AnalyticsClusterClusterNodeArrayInput interface {
	pulumi.Input

	ToAnalyticsClusterClusterNodeArrayOutput() AnalyticsClusterClusterNodeArrayOutput
	ToAnalyticsClusterClusterNodeArrayOutputWithContext(context.Context) AnalyticsClusterClusterNodeArrayOutput
}

type AnalyticsClusterClusterNodeArray []AnalyticsClusterClusterNodeInput

func (AnalyticsClusterClusterNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsClusterClusterNode)(nil)).Elem()
}

func (i AnalyticsClusterClusterNodeArray) ToAnalyticsClusterClusterNodeArrayOutput() AnalyticsClusterClusterNodeArrayOutput {
	return i.ToAnalyticsClusterClusterNodeArrayOutputWithContext(context.Background())
}

func (i AnalyticsClusterClusterNodeArray) ToAnalyticsClusterClusterNodeArrayOutputWithContext(ctx context.Context) AnalyticsClusterClusterNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsClusterClusterNodeArrayOutput)
}

type AnalyticsClusterClusterNodeOutput struct{ *pulumi.OutputState }

func (AnalyticsClusterClusterNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsClusterClusterNode)(nil)).Elem()
}

func (o AnalyticsClusterClusterNodeOutput) ToAnalyticsClusterClusterNodeOutput() AnalyticsClusterClusterNodeOutput {
	return o
}

func (o AnalyticsClusterClusterNodeOutput) ToAnalyticsClusterClusterNodeOutputWithContext(ctx context.Context) AnalyticsClusterClusterNodeOutput {
	return o
}

// The ID of the node within MySQL Analytics Cluster.
func (o AnalyticsClusterClusterNodeOutput) NodeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsClusterClusterNode) *string { return v.NodeId }).(pulumi.StringPtrOutput)
}

// (Updatable) The target state for the Analytics Cluster. Could be set to `ACTIVE` or `INACTIVE`.
func (o AnalyticsClusterClusterNodeOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsClusterClusterNode) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The date and time the Analytics Cluster was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o AnalyticsClusterClusterNodeOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsClusterClusterNode) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The time the Analytics Cluster was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o AnalyticsClusterClusterNodeOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsClusterClusterNode) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

type AnalyticsClusterClusterNodeArrayOutput struct{ *pulumi.OutputState }

func (AnalyticsClusterClusterNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsClusterClusterNode)(nil)).Elem()
}

func (o AnalyticsClusterClusterNodeArrayOutput) ToAnalyticsClusterClusterNodeArrayOutput() AnalyticsClusterClusterNodeArrayOutput {
	return o
}

func (o AnalyticsClusterClusterNodeArrayOutput) ToAnalyticsClusterClusterNodeArrayOutputWithContext(ctx context.Context) AnalyticsClusterClusterNodeArrayOutput {
	return o
}

func (o AnalyticsClusterClusterNodeArrayOutput) Index(i pulumi.IntInput) AnalyticsClusterClusterNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalyticsClusterClusterNode {
		return vs[0].([]AnalyticsClusterClusterNode)[vs[1].(int)]
	}).(AnalyticsClusterClusterNodeOutput)
}

type ChannelSource struct {
	// (Updatable) The network address of the MySQL instance.
	Hostname string `pulumi:"hostname"`
	// (Updatable) The password for the replication user. The password must be between 8 and 32 characters long, and must contain at least 1 numeric character, 1 lowercase character, 1 uppercase character, and 1 special (nonalphanumeric) character.
	Password string `pulumi:"password"`
	// (Updatable) The port the source MySQL instance listens on.
	Port *int `pulumi:"port"`
	// (Updatable) The specific source identifier.
	SourceType string `pulumi:"sourceType"`
	// (Updatable) The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
	SslCaCertificate *ChannelSourceSslCaCertificate `pulumi:"sslCaCertificate"`
	// (Updatable) The SSL mode of the Channel.
	SslMode string `pulumi:"sslMode"`
	// (Updatable) The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
	Username string `pulumi:"username"`
}

// ChannelSourceInput is an input type that accepts ChannelSourceArgs and ChannelSourceOutput values.
// You can construct a concrete instance of `ChannelSourceInput` via:
//
//          ChannelSourceArgs{...}
type ChannelSourceInput interface {
	pulumi.Input

	ToChannelSourceOutput() ChannelSourceOutput
	ToChannelSourceOutputWithContext(context.Context) ChannelSourceOutput
}

type ChannelSourceArgs struct {
	// (Updatable) The network address of the MySQL instance.
	Hostname pulumi.StringInput `pulumi:"hostname"`
	// (Updatable) The password for the replication user. The password must be between 8 and 32 characters long, and must contain at least 1 numeric character, 1 lowercase character, 1 uppercase character, and 1 special (nonalphanumeric) character.
	Password pulumi.StringInput `pulumi:"password"`
	// (Updatable) The port the source MySQL instance listens on.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// (Updatable) The specific source identifier.
	SourceType pulumi.StringInput `pulumi:"sourceType"`
	// (Updatable) The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
	SslCaCertificate ChannelSourceSslCaCertificatePtrInput `pulumi:"sslCaCertificate"`
	// (Updatable) The SSL mode of the Channel.
	SslMode pulumi.StringInput `pulumi:"sslMode"`
	// (Updatable) The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
	Username pulumi.StringInput `pulumi:"username"`
}

func (ChannelSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelSource)(nil)).Elem()
}

func (i ChannelSourceArgs) ToChannelSourceOutput() ChannelSourceOutput {
	return i.ToChannelSourceOutputWithContext(context.Background())
}

func (i ChannelSourceArgs) ToChannelSourceOutputWithContext(ctx context.Context) ChannelSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelSourceOutput)
}

func (i ChannelSourceArgs) ToChannelSourcePtrOutput() ChannelSourcePtrOutput {
	return i.ToChannelSourcePtrOutputWithContext(context.Background())
}

func (i ChannelSourceArgs) ToChannelSourcePtrOutputWithContext(ctx context.Context) ChannelSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelSourceOutput).ToChannelSourcePtrOutputWithContext(ctx)
}

// ChannelSourcePtrInput is an input type that accepts ChannelSourceArgs, ChannelSourcePtr and ChannelSourcePtrOutput values.
// You can construct a concrete instance of `ChannelSourcePtrInput` via:
//
//          ChannelSourceArgs{...}
//
//  or:
//
//          nil
type ChannelSourcePtrInput interface {
	pulumi.Input

	ToChannelSourcePtrOutput() ChannelSourcePtrOutput
	ToChannelSourcePtrOutputWithContext(context.Context) ChannelSourcePtrOutput
}

type channelSourcePtrType ChannelSourceArgs

func ChannelSourcePtr(v *ChannelSourceArgs) ChannelSourcePtrInput {
	return (*channelSourcePtrType)(v)
}

func (*channelSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelSource)(nil)).Elem()
}

func (i *channelSourcePtrType) ToChannelSourcePtrOutput() ChannelSourcePtrOutput {
	return i.ToChannelSourcePtrOutputWithContext(context.Background())
}

func (i *channelSourcePtrType) ToChannelSourcePtrOutputWithContext(ctx context.Context) ChannelSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelSourcePtrOutput)
}

type ChannelSourceOutput struct{ *pulumi.OutputState }

func (ChannelSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelSource)(nil)).Elem()
}

func (o ChannelSourceOutput) ToChannelSourceOutput() ChannelSourceOutput {
	return o
}

func (o ChannelSourceOutput) ToChannelSourceOutputWithContext(ctx context.Context) ChannelSourceOutput {
	return o
}

func (o ChannelSourceOutput) ToChannelSourcePtrOutput() ChannelSourcePtrOutput {
	return o.ToChannelSourcePtrOutputWithContext(context.Background())
}

func (o ChannelSourceOutput) ToChannelSourcePtrOutputWithContext(ctx context.Context) ChannelSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelSource) *ChannelSource {
		return &v
	}).(ChannelSourcePtrOutput)
}

// (Updatable) The network address of the MySQL instance.
func (o ChannelSourceOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelSource) string { return v.Hostname }).(pulumi.StringOutput)
}

// (Updatable) The password for the replication user. The password must be between 8 and 32 characters long, and must contain at least 1 numeric character, 1 lowercase character, 1 uppercase character, and 1 special (nonalphanumeric) character.
func (o ChannelSourceOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelSource) string { return v.Password }).(pulumi.StringOutput)
}

// (Updatable) The port the source MySQL instance listens on.
func (o ChannelSourceOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelSource) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// (Updatable) The specific source identifier.
func (o ChannelSourceOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelSource) string { return v.SourceType }).(pulumi.StringOutput)
}

// (Updatable) The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
func (o ChannelSourceOutput) SslCaCertificate() ChannelSourceSslCaCertificatePtrOutput {
	return o.ApplyT(func(v ChannelSource) *ChannelSourceSslCaCertificate { return v.SslCaCertificate }).(ChannelSourceSslCaCertificatePtrOutput)
}

// (Updatable) The SSL mode of the Channel.
func (o ChannelSourceOutput) SslMode() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelSource) string { return v.SslMode }).(pulumi.StringOutput)
}

// (Updatable) The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
func (o ChannelSourceOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelSource) string { return v.Username }).(pulumi.StringOutput)
}

type ChannelSourcePtrOutput struct{ *pulumi.OutputState }

func (ChannelSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelSource)(nil)).Elem()
}

func (o ChannelSourcePtrOutput) ToChannelSourcePtrOutput() ChannelSourcePtrOutput {
	return o
}

func (o ChannelSourcePtrOutput) ToChannelSourcePtrOutputWithContext(ctx context.Context) ChannelSourcePtrOutput {
	return o
}

func (o ChannelSourcePtrOutput) Elem() ChannelSourceOutput {
	return o.ApplyT(func(v *ChannelSource) ChannelSource {
		if v != nil {
			return *v
		}
		var ret ChannelSource
		return ret
	}).(ChannelSourceOutput)
}

// (Updatable) The network address of the MySQL instance.
func (o ChannelSourcePtrOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelSource) *string {
		if v == nil {
			return nil
		}
		return &v.Hostname
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The password for the replication user. The password must be between 8 and 32 characters long, and must contain at least 1 numeric character, 1 lowercase character, 1 uppercase character, and 1 special (nonalphanumeric) character.
func (o ChannelSourcePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelSource) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The port the source MySQL instance listens on.
func (o ChannelSourcePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelSource) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// (Updatable) The specific source identifier.
func (o ChannelSourcePtrOutput) SourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelSource) *string {
		if v == nil {
			return nil
		}
		return &v.SourceType
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
func (o ChannelSourcePtrOutput) SslCaCertificate() ChannelSourceSslCaCertificatePtrOutput {
	return o.ApplyT(func(v *ChannelSource) *ChannelSourceSslCaCertificate {
		if v == nil {
			return nil
		}
		return v.SslCaCertificate
	}).(ChannelSourceSslCaCertificatePtrOutput)
}

// (Updatable) The SSL mode of the Channel.
func (o ChannelSourcePtrOutput) SslMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelSource) *string {
		if v == nil {
			return nil
		}
		return &v.SslMode
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
func (o ChannelSourcePtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelSource) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type ChannelSourceSslCaCertificate struct {
	// (Updatable) The type of CA certificate.
	CertificateType string `pulumi:"certificateType"`
	// (Updatable) The string containing the CA certificate in PEM format.
	Contents string `pulumi:"contents"`
}

// ChannelSourceSslCaCertificateInput is an input type that accepts ChannelSourceSslCaCertificateArgs and ChannelSourceSslCaCertificateOutput values.
// You can construct a concrete instance of `ChannelSourceSslCaCertificateInput` via:
//
//          ChannelSourceSslCaCertificateArgs{...}
type ChannelSourceSslCaCertificateInput interface {
	pulumi.Input

	ToChannelSourceSslCaCertificateOutput() ChannelSourceSslCaCertificateOutput
	ToChannelSourceSslCaCertificateOutputWithContext(context.Context) ChannelSourceSslCaCertificateOutput
}

type ChannelSourceSslCaCertificateArgs struct {
	// (Updatable) The type of CA certificate.
	CertificateType pulumi.StringInput `pulumi:"certificateType"`
	// (Updatable) The string containing the CA certificate in PEM format.
	Contents pulumi.StringInput `pulumi:"contents"`
}

func (ChannelSourceSslCaCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelSourceSslCaCertificate)(nil)).Elem()
}

func (i ChannelSourceSslCaCertificateArgs) ToChannelSourceSslCaCertificateOutput() ChannelSourceSslCaCertificateOutput {
	return i.ToChannelSourceSslCaCertificateOutputWithContext(context.Background())
}

func (i ChannelSourceSslCaCertificateArgs) ToChannelSourceSslCaCertificateOutputWithContext(ctx context.Context) ChannelSourceSslCaCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelSourceSslCaCertificateOutput)
}

func (i ChannelSourceSslCaCertificateArgs) ToChannelSourceSslCaCertificatePtrOutput() ChannelSourceSslCaCertificatePtrOutput {
	return i.ToChannelSourceSslCaCertificatePtrOutputWithContext(context.Background())
}

func (i ChannelSourceSslCaCertificateArgs) ToChannelSourceSslCaCertificatePtrOutputWithContext(ctx context.Context) ChannelSourceSslCaCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelSourceSslCaCertificateOutput).ToChannelSourceSslCaCertificatePtrOutputWithContext(ctx)
}

// ChannelSourceSslCaCertificatePtrInput is an input type that accepts ChannelSourceSslCaCertificateArgs, ChannelSourceSslCaCertificatePtr and ChannelSourceSslCaCertificatePtrOutput values.
// You can construct a concrete instance of `ChannelSourceSslCaCertificatePtrInput` via:
//
//          ChannelSourceSslCaCertificateArgs{...}
//
//  or:
//
//          nil
type ChannelSourceSslCaCertificatePtrInput interface {
	pulumi.Input

	ToChannelSourceSslCaCertificatePtrOutput() ChannelSourceSslCaCertificatePtrOutput
	ToChannelSourceSslCaCertificatePtrOutputWithContext(context.Context) ChannelSourceSslCaCertificatePtrOutput
}

type channelSourceSslCaCertificatePtrType ChannelSourceSslCaCertificateArgs

func ChannelSourceSslCaCertificatePtr(v *ChannelSourceSslCaCertificateArgs) ChannelSourceSslCaCertificatePtrInput {
	return (*channelSourceSslCaCertificatePtrType)(v)
}

func (*channelSourceSslCaCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelSourceSslCaCertificate)(nil)).Elem()
}

func (i *channelSourceSslCaCertificatePtrType) ToChannelSourceSslCaCertificatePtrOutput() ChannelSourceSslCaCertificatePtrOutput {
	return i.ToChannelSourceSslCaCertificatePtrOutputWithContext(context.Background())
}

func (i *channelSourceSslCaCertificatePtrType) ToChannelSourceSslCaCertificatePtrOutputWithContext(ctx context.Context) ChannelSourceSslCaCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelSourceSslCaCertificatePtrOutput)
}

type ChannelSourceSslCaCertificateOutput struct{ *pulumi.OutputState }

func (ChannelSourceSslCaCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelSourceSslCaCertificate)(nil)).Elem()
}

func (o ChannelSourceSslCaCertificateOutput) ToChannelSourceSslCaCertificateOutput() ChannelSourceSslCaCertificateOutput {
	return o
}

func (o ChannelSourceSslCaCertificateOutput) ToChannelSourceSslCaCertificateOutputWithContext(ctx context.Context) ChannelSourceSslCaCertificateOutput {
	return o
}

func (o ChannelSourceSslCaCertificateOutput) ToChannelSourceSslCaCertificatePtrOutput() ChannelSourceSslCaCertificatePtrOutput {
	return o.ToChannelSourceSslCaCertificatePtrOutputWithContext(context.Background())
}

func (o ChannelSourceSslCaCertificateOutput) ToChannelSourceSslCaCertificatePtrOutputWithContext(ctx context.Context) ChannelSourceSslCaCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelSourceSslCaCertificate) *ChannelSourceSslCaCertificate {
		return &v
	}).(ChannelSourceSslCaCertificatePtrOutput)
}

// (Updatable) The type of CA certificate.
func (o ChannelSourceSslCaCertificateOutput) CertificateType() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelSourceSslCaCertificate) string { return v.CertificateType }).(pulumi.StringOutput)
}

// (Updatable) The string containing the CA certificate in PEM format.
func (o ChannelSourceSslCaCertificateOutput) Contents() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelSourceSslCaCertificate) string { return v.Contents }).(pulumi.StringOutput)
}

type ChannelSourceSslCaCertificatePtrOutput struct{ *pulumi.OutputState }

func (ChannelSourceSslCaCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelSourceSslCaCertificate)(nil)).Elem()
}

func (o ChannelSourceSslCaCertificatePtrOutput) ToChannelSourceSslCaCertificatePtrOutput() ChannelSourceSslCaCertificatePtrOutput {
	return o
}

func (o ChannelSourceSslCaCertificatePtrOutput) ToChannelSourceSslCaCertificatePtrOutputWithContext(ctx context.Context) ChannelSourceSslCaCertificatePtrOutput {
	return o
}

func (o ChannelSourceSslCaCertificatePtrOutput) Elem() ChannelSourceSslCaCertificateOutput {
	return o.ApplyT(func(v *ChannelSourceSslCaCertificate) ChannelSourceSslCaCertificate {
		if v != nil {
			return *v
		}
		var ret ChannelSourceSslCaCertificate
		return ret
	}).(ChannelSourceSslCaCertificateOutput)
}

// (Updatable) The type of CA certificate.
func (o ChannelSourceSslCaCertificatePtrOutput) CertificateType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelSourceSslCaCertificate) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateType
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The string containing the CA certificate in PEM format.
func (o ChannelSourceSslCaCertificatePtrOutput) Contents() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelSourceSslCaCertificate) *string {
		if v == nil {
			return nil
		}
		return &v.Contents
	}).(pulumi.StringPtrOutput)
}

type ChannelTarget struct {
	// (Updatable) The username for the replication applier of the target MySQL DB System.
	ApplierUsername *string `pulumi:"applierUsername"`
	// (Updatable) The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
	ChannelName *string `pulumi:"channelName"`
	// The OCID of the target DB System.
	DbSystemId string `pulumi:"dbSystemId"`
	// (Updatable) The specific target identifier.
	TargetType string `pulumi:"targetType"`
}

// ChannelTargetInput is an input type that accepts ChannelTargetArgs and ChannelTargetOutput values.
// You can construct a concrete instance of `ChannelTargetInput` via:
//
//          ChannelTargetArgs{...}
type ChannelTargetInput interface {
	pulumi.Input

	ToChannelTargetOutput() ChannelTargetOutput
	ToChannelTargetOutputWithContext(context.Context) ChannelTargetOutput
}

type ChannelTargetArgs struct {
	// (Updatable) The username for the replication applier of the target MySQL DB System.
	ApplierUsername pulumi.StringPtrInput `pulumi:"applierUsername"`
	// (Updatable) The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
	ChannelName pulumi.StringPtrInput `pulumi:"channelName"`
	// The OCID of the target DB System.
	DbSystemId pulumi.StringInput `pulumi:"dbSystemId"`
	// (Updatable) The specific target identifier.
	TargetType pulumi.StringInput `pulumi:"targetType"`
}

func (ChannelTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelTarget)(nil)).Elem()
}

func (i ChannelTargetArgs) ToChannelTargetOutput() ChannelTargetOutput {
	return i.ToChannelTargetOutputWithContext(context.Background())
}

func (i ChannelTargetArgs) ToChannelTargetOutputWithContext(ctx context.Context) ChannelTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelTargetOutput)
}

func (i ChannelTargetArgs) ToChannelTargetPtrOutput() ChannelTargetPtrOutput {
	return i.ToChannelTargetPtrOutputWithContext(context.Background())
}

func (i ChannelTargetArgs) ToChannelTargetPtrOutputWithContext(ctx context.Context) ChannelTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelTargetOutput).ToChannelTargetPtrOutputWithContext(ctx)
}

// ChannelTargetPtrInput is an input type that accepts ChannelTargetArgs, ChannelTargetPtr and ChannelTargetPtrOutput values.
// You can construct a concrete instance of `ChannelTargetPtrInput` via:
//
//          ChannelTargetArgs{...}
//
//  or:
//
//          nil
type ChannelTargetPtrInput interface {
	pulumi.Input

	ToChannelTargetPtrOutput() ChannelTargetPtrOutput
	ToChannelTargetPtrOutputWithContext(context.Context) ChannelTargetPtrOutput
}

type channelTargetPtrType ChannelTargetArgs

func ChannelTargetPtr(v *ChannelTargetArgs) ChannelTargetPtrInput {
	return (*channelTargetPtrType)(v)
}

func (*channelTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelTarget)(nil)).Elem()
}

func (i *channelTargetPtrType) ToChannelTargetPtrOutput() ChannelTargetPtrOutput {
	return i.ToChannelTargetPtrOutputWithContext(context.Background())
}

func (i *channelTargetPtrType) ToChannelTargetPtrOutputWithContext(ctx context.Context) ChannelTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelTargetPtrOutput)
}

type ChannelTargetOutput struct{ *pulumi.OutputState }

func (ChannelTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelTarget)(nil)).Elem()
}

func (o ChannelTargetOutput) ToChannelTargetOutput() ChannelTargetOutput {
	return o
}

func (o ChannelTargetOutput) ToChannelTargetOutputWithContext(ctx context.Context) ChannelTargetOutput {
	return o
}

func (o ChannelTargetOutput) ToChannelTargetPtrOutput() ChannelTargetPtrOutput {
	return o.ToChannelTargetPtrOutputWithContext(context.Background())
}

func (o ChannelTargetOutput) ToChannelTargetPtrOutputWithContext(ctx context.Context) ChannelTargetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelTarget) *ChannelTarget {
		return &v
	}).(ChannelTargetPtrOutput)
}

// (Updatable) The username for the replication applier of the target MySQL DB System.
func (o ChannelTargetOutput) ApplierUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelTarget) *string { return v.ApplierUsername }).(pulumi.StringPtrOutput)
}

// (Updatable) The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
func (o ChannelTargetOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelTarget) *string { return v.ChannelName }).(pulumi.StringPtrOutput)
}

// The OCID of the target DB System.
func (o ChannelTargetOutput) DbSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelTarget) string { return v.DbSystemId }).(pulumi.StringOutput)
}

// (Updatable) The specific target identifier.
func (o ChannelTargetOutput) TargetType() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelTarget) string { return v.TargetType }).(pulumi.StringOutput)
}

type ChannelTargetPtrOutput struct{ *pulumi.OutputState }

func (ChannelTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelTarget)(nil)).Elem()
}

func (o ChannelTargetPtrOutput) ToChannelTargetPtrOutput() ChannelTargetPtrOutput {
	return o
}

func (o ChannelTargetPtrOutput) ToChannelTargetPtrOutputWithContext(ctx context.Context) ChannelTargetPtrOutput {
	return o
}

func (o ChannelTargetPtrOutput) Elem() ChannelTargetOutput {
	return o.ApplyT(func(v *ChannelTarget) ChannelTarget {
		if v != nil {
			return *v
		}
		var ret ChannelTarget
		return ret
	}).(ChannelTargetOutput)
}

// (Updatable) The username for the replication applier of the target MySQL DB System.
func (o ChannelTargetPtrOutput) ApplierUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelTarget) *string {
		if v == nil {
			return nil
		}
		return v.ApplierUsername
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
func (o ChannelTargetPtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelTarget) *string {
		if v == nil {
			return nil
		}
		return v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// The OCID of the target DB System.
func (o ChannelTargetPtrOutput) DbSystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelTarget) *string {
		if v == nil {
			return nil
		}
		return &v.DbSystemId
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The specific target identifier.
func (o ChannelTargetPtrOutput) TargetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelTarget) *string {
		if v == nil {
			return nil
		}
		return &v.TargetType
	}).(pulumi.StringPtrOutput)
}

type HeatWaveClusterClusterNode struct {
	// The ID of the node within MySQL HeatWave cluster.
	NodeId *string `pulumi:"nodeId"`
	// (Updatable) The target state for the HeatWave cluster. Could be set to `ACTIVE` or `INACTIVE`.
	State *string `pulumi:"state"`
	// The date and time the HeatWave cluster was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the HeatWave cluster was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeUpdated *string `pulumi:"timeUpdated"`
}

// HeatWaveClusterClusterNodeInput is an input type that accepts HeatWaveClusterClusterNodeArgs and HeatWaveClusterClusterNodeOutput values.
// You can construct a concrete instance of `HeatWaveClusterClusterNodeInput` via:
//
//          HeatWaveClusterClusterNodeArgs{...}
type HeatWaveClusterClusterNodeInput interface {
	pulumi.Input

	ToHeatWaveClusterClusterNodeOutput() HeatWaveClusterClusterNodeOutput
	ToHeatWaveClusterClusterNodeOutputWithContext(context.Context) HeatWaveClusterClusterNodeOutput
}

type HeatWaveClusterClusterNodeArgs struct {
	// The ID of the node within MySQL HeatWave cluster.
	NodeId pulumi.StringPtrInput `pulumi:"nodeId"`
	// (Updatable) The target state for the HeatWave cluster. Could be set to `ACTIVE` or `INACTIVE`.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The date and time the HeatWave cluster was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The time the HeatWave cluster was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeUpdated pulumi.StringPtrInput `pulumi:"timeUpdated"`
}

func (HeatWaveClusterClusterNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HeatWaveClusterClusterNode)(nil)).Elem()
}

func (i HeatWaveClusterClusterNodeArgs) ToHeatWaveClusterClusterNodeOutput() HeatWaveClusterClusterNodeOutput {
	return i.ToHeatWaveClusterClusterNodeOutputWithContext(context.Background())
}

func (i HeatWaveClusterClusterNodeArgs) ToHeatWaveClusterClusterNodeOutputWithContext(ctx context.Context) HeatWaveClusterClusterNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HeatWaveClusterClusterNodeOutput)
}

// HeatWaveClusterClusterNodeArrayInput is an input type that accepts HeatWaveClusterClusterNodeArray and HeatWaveClusterClusterNodeArrayOutput values.
// You can construct a concrete instance of `HeatWaveClusterClusterNodeArrayInput` via:
//
//          HeatWaveClusterClusterNodeArray{ HeatWaveClusterClusterNodeArgs{...} }
type HeatWaveClusterClusterNodeArrayInput interface {
	pulumi.Input

	ToHeatWaveClusterClusterNodeArrayOutput() HeatWaveClusterClusterNodeArrayOutput
	ToHeatWaveClusterClusterNodeArrayOutputWithContext(context.Context) HeatWaveClusterClusterNodeArrayOutput
}

type HeatWaveClusterClusterNodeArray []HeatWaveClusterClusterNodeInput

func (HeatWaveClusterClusterNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HeatWaveClusterClusterNode)(nil)).Elem()
}

func (i HeatWaveClusterClusterNodeArray) ToHeatWaveClusterClusterNodeArrayOutput() HeatWaveClusterClusterNodeArrayOutput {
	return i.ToHeatWaveClusterClusterNodeArrayOutputWithContext(context.Background())
}

func (i HeatWaveClusterClusterNodeArray) ToHeatWaveClusterClusterNodeArrayOutputWithContext(ctx context.Context) HeatWaveClusterClusterNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HeatWaveClusterClusterNodeArrayOutput)
}

type HeatWaveClusterClusterNodeOutput struct{ *pulumi.OutputState }

func (HeatWaveClusterClusterNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HeatWaveClusterClusterNode)(nil)).Elem()
}

func (o HeatWaveClusterClusterNodeOutput) ToHeatWaveClusterClusterNodeOutput() HeatWaveClusterClusterNodeOutput {
	return o
}

func (o HeatWaveClusterClusterNodeOutput) ToHeatWaveClusterClusterNodeOutputWithContext(ctx context.Context) HeatWaveClusterClusterNodeOutput {
	return o
}

// The ID of the node within MySQL HeatWave cluster.
func (o HeatWaveClusterClusterNodeOutput) NodeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HeatWaveClusterClusterNode) *string { return v.NodeId }).(pulumi.StringPtrOutput)
}

// (Updatable) The target state for the HeatWave cluster. Could be set to `ACTIVE` or `INACTIVE`.
func (o HeatWaveClusterClusterNodeOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HeatWaveClusterClusterNode) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The date and time the HeatWave cluster was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o HeatWaveClusterClusterNodeOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HeatWaveClusterClusterNode) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The time the HeatWave cluster was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o HeatWaveClusterClusterNodeOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HeatWaveClusterClusterNode) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

type HeatWaveClusterClusterNodeArrayOutput struct{ *pulumi.OutputState }

func (HeatWaveClusterClusterNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HeatWaveClusterClusterNode)(nil)).Elem()
}

func (o HeatWaveClusterClusterNodeArrayOutput) ToHeatWaveClusterClusterNodeArrayOutput() HeatWaveClusterClusterNodeArrayOutput {
	return o
}

func (o HeatWaveClusterClusterNodeArrayOutput) ToHeatWaveClusterClusterNodeArrayOutputWithContext(ctx context.Context) HeatWaveClusterClusterNodeArrayOutput {
	return o
}

func (o HeatWaveClusterClusterNodeArrayOutput) Index(i pulumi.IntInput) HeatWaveClusterClusterNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HeatWaveClusterClusterNode {
		return vs[0].([]HeatWaveClusterClusterNode)[vs[1].(int)]
	}).(HeatWaveClusterClusterNodeOutput)
}

type MysqlBackupDbSystemSnapshot struct {
	// The username for the administrative user.
	AdminUsername *string `pulumi:"adminUsername"`
	// The Availability Domain where the primary DB System should be located.
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// The Backup policy for the DB System.
	BackupPolicies []MysqlBackupDbSystemSnapshotBackupPolicy `pulumi:"backupPolicies"`
	// (Updatable) The OCID of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// The OCID of the Configuration to be used for Instances in this DB System.
	ConfigurationId *string `pulumi:"configurationId"`
	// Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
	CrashRecovery *string `pulumi:"crashRecovery"`
	// Initial size of the data volume in GiBs that will be created and attached.
	DataStorageSizeInGb *int `pulumi:"dataStorageSizeInGb"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The Deletion policy for the DB System.
	DeletionPolicies []MysqlBackupDbSystemSnapshotDeletionPolicy `pulumi:"deletionPolicies"`
	// (Updatable) A user-supplied description for the backup.
	Description *string `pulumi:"description"`
	// (Updatable) A user-supplied display name for the backup.
	DisplayName *string `pulumi:"displayName"`
	// The network endpoints available for this DB System.
	Endpoints []MysqlBackupDbSystemSnapshotEndpoint `pulumi:"endpoints"`
	// The name of the Fault Domain the DB System is located in.
	FaultDomain *string `pulumi:"faultDomain"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The hostname for the primary endpoint of the DB System. Used for DNS. The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com"). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
	HostnameLabel *string `pulumi:"hostnameLabel"`
	// OCID of the backup itself
	Id *string `pulumi:"id"`
	// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
	IpAddress *string `pulumi:"ipAddress"`
	// Specifies if the DB System is highly available.
	IsHighlyAvailable *bool `pulumi:"isHighlyAvailable"`
	// The Maintenance Policy for the DB System.
	Maintenances []MysqlBackupDbSystemSnapshotMaintenance `pulumi:"maintenances"`
	// The MySQL server version of the DB System used for backup.
	MysqlVersion *string `pulumi:"mysqlVersion"`
	// The port for primary endpoint of the DB System to listen on.
	Port *int `pulumi:"port"`
	// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
	PortX *int `pulumi:"portX"`
	// The shape of the DB System instance used for backup.
	ShapeName *string `pulumi:"shapeName"`
	// The OCID of the subnet the DB System is associated with.
	SubnetId *string `pulumi:"subnetId"`
}

// MysqlBackupDbSystemSnapshotInput is an input type that accepts MysqlBackupDbSystemSnapshotArgs and MysqlBackupDbSystemSnapshotOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotInput` via:
//
//          MysqlBackupDbSystemSnapshotArgs{...}
type MysqlBackupDbSystemSnapshotInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotOutput() MysqlBackupDbSystemSnapshotOutput
	ToMysqlBackupDbSystemSnapshotOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotOutput
}

type MysqlBackupDbSystemSnapshotArgs struct {
	// The username for the administrative user.
	AdminUsername pulumi.StringPtrInput `pulumi:"adminUsername"`
	// The Availability Domain where the primary DB System should be located.
	AvailabilityDomain pulumi.StringPtrInput `pulumi:"availabilityDomain"`
	// The Backup policy for the DB System.
	BackupPolicies MysqlBackupDbSystemSnapshotBackupPolicyArrayInput `pulumi:"backupPolicies"`
	// (Updatable) The OCID of the compartment.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// The OCID of the Configuration to be used for Instances in this DB System.
	ConfigurationId pulumi.StringPtrInput `pulumi:"configurationId"`
	// Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
	CrashRecovery pulumi.StringPtrInput `pulumi:"crashRecovery"`
	// Initial size of the data volume in GiBs that will be created and attached.
	DataStorageSizeInGb pulumi.IntPtrInput `pulumi:"dataStorageSizeInGb"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// The Deletion policy for the DB System.
	DeletionPolicies MysqlBackupDbSystemSnapshotDeletionPolicyArrayInput `pulumi:"deletionPolicies"`
	// (Updatable) A user-supplied description for the backup.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Updatable) A user-supplied display name for the backup.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The network endpoints available for this DB System.
	Endpoints MysqlBackupDbSystemSnapshotEndpointArrayInput `pulumi:"endpoints"`
	// The name of the Fault Domain the DB System is located in.
	FaultDomain pulumi.StringPtrInput `pulumi:"faultDomain"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The hostname for the primary endpoint of the DB System. Used for DNS. The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com"). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
	HostnameLabel pulumi.StringPtrInput `pulumi:"hostnameLabel"`
	// OCID of the backup itself
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// Specifies if the DB System is highly available.
	IsHighlyAvailable pulumi.BoolPtrInput `pulumi:"isHighlyAvailable"`
	// The Maintenance Policy for the DB System.
	Maintenances MysqlBackupDbSystemSnapshotMaintenanceArrayInput `pulumi:"maintenances"`
	// The MySQL server version of the DB System used for backup.
	MysqlVersion pulumi.StringPtrInput `pulumi:"mysqlVersion"`
	// The port for primary endpoint of the DB System to listen on.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
	PortX pulumi.IntPtrInput `pulumi:"portX"`
	// The shape of the DB System instance used for backup.
	ShapeName pulumi.StringPtrInput `pulumi:"shapeName"`
	// The OCID of the subnet the DB System is associated with.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
}

func (MysqlBackupDbSystemSnapshotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshot)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotArgs) ToMysqlBackupDbSystemSnapshotOutput() MysqlBackupDbSystemSnapshotOutput {
	return i.ToMysqlBackupDbSystemSnapshotOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotArgs) ToMysqlBackupDbSystemSnapshotOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotOutput)
}

// MysqlBackupDbSystemSnapshotArrayInput is an input type that accepts MysqlBackupDbSystemSnapshotArray and MysqlBackupDbSystemSnapshotArrayOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotArrayInput` via:
//
//          MysqlBackupDbSystemSnapshotArray{ MysqlBackupDbSystemSnapshotArgs{...} }
type MysqlBackupDbSystemSnapshotArrayInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotArrayOutput() MysqlBackupDbSystemSnapshotArrayOutput
	ToMysqlBackupDbSystemSnapshotArrayOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotArrayOutput
}

type MysqlBackupDbSystemSnapshotArray []MysqlBackupDbSystemSnapshotInput

func (MysqlBackupDbSystemSnapshotArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshot)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotArray) ToMysqlBackupDbSystemSnapshotArrayOutput() MysqlBackupDbSystemSnapshotArrayOutput {
	return i.ToMysqlBackupDbSystemSnapshotArrayOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotArray) ToMysqlBackupDbSystemSnapshotArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotArrayOutput)
}

type MysqlBackupDbSystemSnapshotOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshot)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotOutput) ToMysqlBackupDbSystemSnapshotOutput() MysqlBackupDbSystemSnapshotOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotOutput) ToMysqlBackupDbSystemSnapshotOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotOutput {
	return o
}

// The username for the administrative user.
func (o MysqlBackupDbSystemSnapshotOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *string { return v.AdminUsername }).(pulumi.StringPtrOutput)
}

// The Availability Domain where the primary DB System should be located.
func (o MysqlBackupDbSystemSnapshotOutput) AvailabilityDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *string { return v.AvailabilityDomain }).(pulumi.StringPtrOutput)
}

// The Backup policy for the DB System.
func (o MysqlBackupDbSystemSnapshotOutput) BackupPolicies() MysqlBackupDbSystemSnapshotBackupPolicyArrayOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) []MysqlBackupDbSystemSnapshotBackupPolicy { return v.BackupPolicies }).(MysqlBackupDbSystemSnapshotBackupPolicyArrayOutput)
}

// (Updatable) The OCID of the compartment.
func (o MysqlBackupDbSystemSnapshotOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// The OCID of the Configuration to be used for Instances in this DB System.
func (o MysqlBackupDbSystemSnapshotOutput) ConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *string { return v.ConfigurationId }).(pulumi.StringPtrOutput)
}

// Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
func (o MysqlBackupDbSystemSnapshotOutput) CrashRecovery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *string { return v.CrashRecovery }).(pulumi.StringPtrOutput)
}

// Initial size of the data volume in GiBs that will be created and attached.
func (o MysqlBackupDbSystemSnapshotOutput) DataStorageSizeInGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *int { return v.DataStorageSizeInGb }).(pulumi.IntPtrOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o MysqlBackupDbSystemSnapshotOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// The Deletion policy for the DB System.
func (o MysqlBackupDbSystemSnapshotOutput) DeletionPolicies() MysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) []MysqlBackupDbSystemSnapshotDeletionPolicy {
		return v.DeletionPolicies
	}).(MysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput)
}

// (Updatable) A user-supplied description for the backup.
func (o MysqlBackupDbSystemSnapshotOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Updatable) A user-supplied display name for the backup.
func (o MysqlBackupDbSystemSnapshotOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The network endpoints available for this DB System.
func (o MysqlBackupDbSystemSnapshotOutput) Endpoints() MysqlBackupDbSystemSnapshotEndpointArrayOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) []MysqlBackupDbSystemSnapshotEndpoint { return v.Endpoints }).(MysqlBackupDbSystemSnapshotEndpointArrayOutput)
}

// The name of the Fault Domain the DB System is located in.
func (o MysqlBackupDbSystemSnapshotOutput) FaultDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *string { return v.FaultDomain }).(pulumi.StringPtrOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o MysqlBackupDbSystemSnapshotOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The hostname for the primary endpoint of the DB System. Used for DNS. The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com"). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
func (o MysqlBackupDbSystemSnapshotOutput) HostnameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *string { return v.HostnameLabel }).(pulumi.StringPtrOutput)
}

// OCID of the backup itself
func (o MysqlBackupDbSystemSnapshotOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
func (o MysqlBackupDbSystemSnapshotOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// Specifies if the DB System is highly available.
func (o MysqlBackupDbSystemSnapshotOutput) IsHighlyAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *bool { return v.IsHighlyAvailable }).(pulumi.BoolPtrOutput)
}

// The Maintenance Policy for the DB System.
func (o MysqlBackupDbSystemSnapshotOutput) Maintenances() MysqlBackupDbSystemSnapshotMaintenanceArrayOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) []MysqlBackupDbSystemSnapshotMaintenance { return v.Maintenances }).(MysqlBackupDbSystemSnapshotMaintenanceArrayOutput)
}

// The MySQL server version of the DB System used for backup.
func (o MysqlBackupDbSystemSnapshotOutput) MysqlVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *string { return v.MysqlVersion }).(pulumi.StringPtrOutput)
}

// The port for primary endpoint of the DB System to listen on.
func (o MysqlBackupDbSystemSnapshotOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
func (o MysqlBackupDbSystemSnapshotOutput) PortX() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *int { return v.PortX }).(pulumi.IntPtrOutput)
}

// The shape of the DB System instance used for backup.
func (o MysqlBackupDbSystemSnapshotOutput) ShapeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *string { return v.ShapeName }).(pulumi.StringPtrOutput)
}

// The OCID of the subnet the DB System is associated with.
func (o MysqlBackupDbSystemSnapshotOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type MysqlBackupDbSystemSnapshotArrayOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshot)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotArrayOutput) ToMysqlBackupDbSystemSnapshotArrayOutput() MysqlBackupDbSystemSnapshotArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotArrayOutput) ToMysqlBackupDbSystemSnapshotArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotArrayOutput) Index(i pulumi.IntInput) MysqlBackupDbSystemSnapshotOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlBackupDbSystemSnapshot {
		return vs[0].([]MysqlBackupDbSystemSnapshot)[vs[1].(int)]
	}).(MysqlBackupDbSystemSnapshotOutput)
}

type MysqlBackupDbSystemSnapshotBackupPolicy struct {
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Specifies if PITR is enabled or disabled.
	IsEnabled *bool `pulumi:"isEnabled"`
	// The PITR policy for the DB System.
	PitrPolicies []MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy `pulumi:"pitrPolicies"`
	// (Updatable) Number of days to retain this backup.
	RetentionInDays *int `pulumi:"retentionInDays"`
	// The start time of the maintenance window.
	WindowStartTime *string `pulumi:"windowStartTime"`
}

// MysqlBackupDbSystemSnapshotBackupPolicyInput is an input type that accepts MysqlBackupDbSystemSnapshotBackupPolicyArgs and MysqlBackupDbSystemSnapshotBackupPolicyOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotBackupPolicyInput` via:
//
//          MysqlBackupDbSystemSnapshotBackupPolicyArgs{...}
type MysqlBackupDbSystemSnapshotBackupPolicyInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotBackupPolicyOutput() MysqlBackupDbSystemSnapshotBackupPolicyOutput
	ToMysqlBackupDbSystemSnapshotBackupPolicyOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotBackupPolicyOutput
}

type MysqlBackupDbSystemSnapshotBackupPolicyArgs struct {
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// Specifies if PITR is enabled or disabled.
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// The PITR policy for the DB System.
	PitrPolicies MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayInput `pulumi:"pitrPolicies"`
	// (Updatable) Number of days to retain this backup.
	RetentionInDays pulumi.IntPtrInput `pulumi:"retentionInDays"`
	// The start time of the maintenance window.
	WindowStartTime pulumi.StringPtrInput `pulumi:"windowStartTime"`
}

func (MysqlBackupDbSystemSnapshotBackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshotBackupPolicy)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotBackupPolicyArgs) ToMysqlBackupDbSystemSnapshotBackupPolicyOutput() MysqlBackupDbSystemSnapshotBackupPolicyOutput {
	return i.ToMysqlBackupDbSystemSnapshotBackupPolicyOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotBackupPolicyArgs) ToMysqlBackupDbSystemSnapshotBackupPolicyOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotBackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotBackupPolicyOutput)
}

// MysqlBackupDbSystemSnapshotBackupPolicyArrayInput is an input type that accepts MysqlBackupDbSystemSnapshotBackupPolicyArray and MysqlBackupDbSystemSnapshotBackupPolicyArrayOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotBackupPolicyArrayInput` via:
//
//          MysqlBackupDbSystemSnapshotBackupPolicyArray{ MysqlBackupDbSystemSnapshotBackupPolicyArgs{...} }
type MysqlBackupDbSystemSnapshotBackupPolicyArrayInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput() MysqlBackupDbSystemSnapshotBackupPolicyArrayOutput
	ToMysqlBackupDbSystemSnapshotBackupPolicyArrayOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotBackupPolicyArrayOutput
}

type MysqlBackupDbSystemSnapshotBackupPolicyArray []MysqlBackupDbSystemSnapshotBackupPolicyInput

func (MysqlBackupDbSystemSnapshotBackupPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshotBackupPolicy)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotBackupPolicyArray) ToMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput() MysqlBackupDbSystemSnapshotBackupPolicyArrayOutput {
	return i.ToMysqlBackupDbSystemSnapshotBackupPolicyArrayOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotBackupPolicyArray) ToMysqlBackupDbSystemSnapshotBackupPolicyArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotBackupPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotBackupPolicyArrayOutput)
}

type MysqlBackupDbSystemSnapshotBackupPolicyOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotBackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshotBackupPolicy)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotBackupPolicyOutput) ToMysqlBackupDbSystemSnapshotBackupPolicyOutput() MysqlBackupDbSystemSnapshotBackupPolicyOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotBackupPolicyOutput) ToMysqlBackupDbSystemSnapshotBackupPolicyOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotBackupPolicyOutput {
	return o
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o MysqlBackupDbSystemSnapshotBackupPolicyOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotBackupPolicy) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o MysqlBackupDbSystemSnapshotBackupPolicyOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotBackupPolicy) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// Specifies if PITR is enabled or disabled.
func (o MysqlBackupDbSystemSnapshotBackupPolicyOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotBackupPolicy) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// The PITR policy for the DB System.
func (o MysqlBackupDbSystemSnapshotBackupPolicyOutput) PitrPolicies() MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotBackupPolicy) []MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy {
		return v.PitrPolicies
	}).(MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput)
}

// (Updatable) Number of days to retain this backup.
func (o MysqlBackupDbSystemSnapshotBackupPolicyOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotBackupPolicy) *int { return v.RetentionInDays }).(pulumi.IntPtrOutput)
}

// The start time of the maintenance window.
func (o MysqlBackupDbSystemSnapshotBackupPolicyOutput) WindowStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotBackupPolicy) *string { return v.WindowStartTime }).(pulumi.StringPtrOutput)
}

type MysqlBackupDbSystemSnapshotBackupPolicyArrayOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotBackupPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshotBackupPolicy)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotBackupPolicyArrayOutput) ToMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput() MysqlBackupDbSystemSnapshotBackupPolicyArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotBackupPolicyArrayOutput) ToMysqlBackupDbSystemSnapshotBackupPolicyArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotBackupPolicyArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotBackupPolicyArrayOutput) Index(i pulumi.IntInput) MysqlBackupDbSystemSnapshotBackupPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlBackupDbSystemSnapshotBackupPolicy {
		return vs[0].([]MysqlBackupDbSystemSnapshotBackupPolicy)[vs[1].(int)]
	}).(MysqlBackupDbSystemSnapshotBackupPolicyOutput)
}

type MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy struct {
	// Specifies if PITR is enabled or disabled.
	IsEnabled *bool `pulumi:"isEnabled"`
}

// MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyInput is an input type that accepts MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs and MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyInput` via:
//
//          MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs{...}
type MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput() MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput
	ToMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput
}

type MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs struct {
	// Specifies if PITR is enabled or disabled.
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
}

func (MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs) ToMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput() MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput {
	return i.ToMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs) ToMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput)
}

// MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayInput is an input type that accepts MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArray and MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayInput` via:
//
//          MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArray{ MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs{...} }
type MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput() MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput
	ToMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput
}

type MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArray []MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyInput

func (MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArray) ToMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput() MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput {
	return i.ToMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArray) ToMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput)
}

type MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput) ToMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput() MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput) ToMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput {
	return o
}

// Specifies if PITR is enabled or disabled.
func (o MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

type MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput) ToMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput() MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput) ToMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput) Index(i pulumi.IntInput) MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy {
		return vs[0].([]MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy)[vs[1].(int)]
	}).(MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput)
}

type MysqlBackupDbSystemSnapshotDeletionPolicy struct {
	// Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
	AutomaticBackupRetention *string `pulumi:"automaticBackupRetention"`
	// Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
	FinalBackup *string `pulumi:"finalBackup"`
	// Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
	IsDeleteProtected *bool `pulumi:"isDeleteProtected"`
}

// MysqlBackupDbSystemSnapshotDeletionPolicyInput is an input type that accepts MysqlBackupDbSystemSnapshotDeletionPolicyArgs and MysqlBackupDbSystemSnapshotDeletionPolicyOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotDeletionPolicyInput` via:
//
//          MysqlBackupDbSystemSnapshotDeletionPolicyArgs{...}
type MysqlBackupDbSystemSnapshotDeletionPolicyInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotDeletionPolicyOutput() MysqlBackupDbSystemSnapshotDeletionPolicyOutput
	ToMysqlBackupDbSystemSnapshotDeletionPolicyOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotDeletionPolicyOutput
}

type MysqlBackupDbSystemSnapshotDeletionPolicyArgs struct {
	// Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
	AutomaticBackupRetention pulumi.StringPtrInput `pulumi:"automaticBackupRetention"`
	// Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
	FinalBackup pulumi.StringPtrInput `pulumi:"finalBackup"`
	// Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
	IsDeleteProtected pulumi.BoolPtrInput `pulumi:"isDeleteProtected"`
}

func (MysqlBackupDbSystemSnapshotDeletionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshotDeletionPolicy)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotDeletionPolicyArgs) ToMysqlBackupDbSystemSnapshotDeletionPolicyOutput() MysqlBackupDbSystemSnapshotDeletionPolicyOutput {
	return i.ToMysqlBackupDbSystemSnapshotDeletionPolicyOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotDeletionPolicyArgs) ToMysqlBackupDbSystemSnapshotDeletionPolicyOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotDeletionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotDeletionPolicyOutput)
}

// MysqlBackupDbSystemSnapshotDeletionPolicyArrayInput is an input type that accepts MysqlBackupDbSystemSnapshotDeletionPolicyArray and MysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotDeletionPolicyArrayInput` via:
//
//          MysqlBackupDbSystemSnapshotDeletionPolicyArray{ MysqlBackupDbSystemSnapshotDeletionPolicyArgs{...} }
type MysqlBackupDbSystemSnapshotDeletionPolicyArrayInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput() MysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput
	ToMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput
}

type MysqlBackupDbSystemSnapshotDeletionPolicyArray []MysqlBackupDbSystemSnapshotDeletionPolicyInput

func (MysqlBackupDbSystemSnapshotDeletionPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshotDeletionPolicy)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotDeletionPolicyArray) ToMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput() MysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput {
	return i.ToMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotDeletionPolicyArray) ToMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput)
}

type MysqlBackupDbSystemSnapshotDeletionPolicyOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotDeletionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshotDeletionPolicy)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotDeletionPolicyOutput) ToMysqlBackupDbSystemSnapshotDeletionPolicyOutput() MysqlBackupDbSystemSnapshotDeletionPolicyOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotDeletionPolicyOutput) ToMysqlBackupDbSystemSnapshotDeletionPolicyOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotDeletionPolicyOutput {
	return o
}

// Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
func (o MysqlBackupDbSystemSnapshotDeletionPolicyOutput) AutomaticBackupRetention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotDeletionPolicy) *string { return v.AutomaticBackupRetention }).(pulumi.StringPtrOutput)
}

// Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
func (o MysqlBackupDbSystemSnapshotDeletionPolicyOutput) FinalBackup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotDeletionPolicy) *string { return v.FinalBackup }).(pulumi.StringPtrOutput)
}

// Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
func (o MysqlBackupDbSystemSnapshotDeletionPolicyOutput) IsDeleteProtected() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotDeletionPolicy) *bool { return v.IsDeleteProtected }).(pulumi.BoolPtrOutput)
}

type MysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshotDeletionPolicy)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput) ToMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput() MysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput) ToMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput) Index(i pulumi.IntInput) MysqlBackupDbSystemSnapshotDeletionPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlBackupDbSystemSnapshotDeletionPolicy {
		return vs[0].([]MysqlBackupDbSystemSnapshotDeletionPolicy)[vs[1].(int)]
	}).(MysqlBackupDbSystemSnapshotDeletionPolicyOutput)
}

type MysqlBackupDbSystemSnapshotEndpoint struct {
	// The network address of the DB System.
	Hostname *string `pulumi:"hostname"`
	// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
	IpAddress *string `pulumi:"ipAddress"`
	// The access modes from the client that this endpoint supports.
	Modes []string `pulumi:"modes"`
	// The port for primary endpoint of the DB System to listen on.
	Port *int `pulumi:"port"`
	// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
	PortX *int `pulumi:"portX"`
	// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
	Status *string `pulumi:"status"`
	// Additional information about the current endpoint status.
	StatusDetails *string `pulumi:"statusDetails"`
}

// MysqlBackupDbSystemSnapshotEndpointInput is an input type that accepts MysqlBackupDbSystemSnapshotEndpointArgs and MysqlBackupDbSystemSnapshotEndpointOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotEndpointInput` via:
//
//          MysqlBackupDbSystemSnapshotEndpointArgs{...}
type MysqlBackupDbSystemSnapshotEndpointInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotEndpointOutput() MysqlBackupDbSystemSnapshotEndpointOutput
	ToMysqlBackupDbSystemSnapshotEndpointOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotEndpointOutput
}

type MysqlBackupDbSystemSnapshotEndpointArgs struct {
	// The network address of the DB System.
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The access modes from the client that this endpoint supports.
	Modes pulumi.StringArrayInput `pulumi:"modes"`
	// The port for primary endpoint of the DB System to listen on.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
	PortX pulumi.IntPtrInput `pulumi:"portX"`
	// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Additional information about the current endpoint status.
	StatusDetails pulumi.StringPtrInput `pulumi:"statusDetails"`
}

func (MysqlBackupDbSystemSnapshotEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshotEndpoint)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotEndpointArgs) ToMysqlBackupDbSystemSnapshotEndpointOutput() MysqlBackupDbSystemSnapshotEndpointOutput {
	return i.ToMysqlBackupDbSystemSnapshotEndpointOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotEndpointArgs) ToMysqlBackupDbSystemSnapshotEndpointOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotEndpointOutput)
}

// MysqlBackupDbSystemSnapshotEndpointArrayInput is an input type that accepts MysqlBackupDbSystemSnapshotEndpointArray and MysqlBackupDbSystemSnapshotEndpointArrayOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotEndpointArrayInput` via:
//
//          MysqlBackupDbSystemSnapshotEndpointArray{ MysqlBackupDbSystemSnapshotEndpointArgs{...} }
type MysqlBackupDbSystemSnapshotEndpointArrayInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotEndpointArrayOutput() MysqlBackupDbSystemSnapshotEndpointArrayOutput
	ToMysqlBackupDbSystemSnapshotEndpointArrayOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotEndpointArrayOutput
}

type MysqlBackupDbSystemSnapshotEndpointArray []MysqlBackupDbSystemSnapshotEndpointInput

func (MysqlBackupDbSystemSnapshotEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshotEndpoint)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotEndpointArray) ToMysqlBackupDbSystemSnapshotEndpointArrayOutput() MysqlBackupDbSystemSnapshotEndpointArrayOutput {
	return i.ToMysqlBackupDbSystemSnapshotEndpointArrayOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotEndpointArray) ToMysqlBackupDbSystemSnapshotEndpointArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotEndpointArrayOutput)
}

type MysqlBackupDbSystemSnapshotEndpointOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshotEndpoint)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotEndpointOutput) ToMysqlBackupDbSystemSnapshotEndpointOutput() MysqlBackupDbSystemSnapshotEndpointOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotEndpointOutput) ToMysqlBackupDbSystemSnapshotEndpointOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotEndpointOutput {
	return o
}

// The network address of the DB System.
func (o MysqlBackupDbSystemSnapshotEndpointOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotEndpoint) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
func (o MysqlBackupDbSystemSnapshotEndpointOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotEndpoint) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The access modes from the client that this endpoint supports.
func (o MysqlBackupDbSystemSnapshotEndpointOutput) Modes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotEndpoint) []string { return v.Modes }).(pulumi.StringArrayOutput)
}

// The port for primary endpoint of the DB System to listen on.
func (o MysqlBackupDbSystemSnapshotEndpointOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotEndpoint) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
func (o MysqlBackupDbSystemSnapshotEndpointOutput) PortX() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotEndpoint) *int { return v.PortX }).(pulumi.IntPtrOutput)
}

// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
func (o MysqlBackupDbSystemSnapshotEndpointOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotEndpoint) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Additional information about the current endpoint status.
func (o MysqlBackupDbSystemSnapshotEndpointOutput) StatusDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotEndpoint) *string { return v.StatusDetails }).(pulumi.StringPtrOutput)
}

type MysqlBackupDbSystemSnapshotEndpointArrayOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshotEndpoint)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotEndpointArrayOutput) ToMysqlBackupDbSystemSnapshotEndpointArrayOutput() MysqlBackupDbSystemSnapshotEndpointArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotEndpointArrayOutput) ToMysqlBackupDbSystemSnapshotEndpointArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotEndpointArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotEndpointArrayOutput) Index(i pulumi.IntInput) MysqlBackupDbSystemSnapshotEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlBackupDbSystemSnapshotEndpoint {
		return vs[0].([]MysqlBackupDbSystemSnapshotEndpoint)[vs[1].(int)]
	}).(MysqlBackupDbSystemSnapshotEndpointOutput)
}

type MysqlBackupDbSystemSnapshotMaintenance struct {
	// The start time of the maintenance window.
	WindowStartTime *string `pulumi:"windowStartTime"`
}

// MysqlBackupDbSystemSnapshotMaintenanceInput is an input type that accepts MysqlBackupDbSystemSnapshotMaintenanceArgs and MysqlBackupDbSystemSnapshotMaintenanceOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotMaintenanceInput` via:
//
//          MysqlBackupDbSystemSnapshotMaintenanceArgs{...}
type MysqlBackupDbSystemSnapshotMaintenanceInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotMaintenanceOutput() MysqlBackupDbSystemSnapshotMaintenanceOutput
	ToMysqlBackupDbSystemSnapshotMaintenanceOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotMaintenanceOutput
}

type MysqlBackupDbSystemSnapshotMaintenanceArgs struct {
	// The start time of the maintenance window.
	WindowStartTime pulumi.StringPtrInput `pulumi:"windowStartTime"`
}

func (MysqlBackupDbSystemSnapshotMaintenanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshotMaintenance)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotMaintenanceArgs) ToMysqlBackupDbSystemSnapshotMaintenanceOutput() MysqlBackupDbSystemSnapshotMaintenanceOutput {
	return i.ToMysqlBackupDbSystemSnapshotMaintenanceOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotMaintenanceArgs) ToMysqlBackupDbSystemSnapshotMaintenanceOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotMaintenanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotMaintenanceOutput)
}

// MysqlBackupDbSystemSnapshotMaintenanceArrayInput is an input type that accepts MysqlBackupDbSystemSnapshotMaintenanceArray and MysqlBackupDbSystemSnapshotMaintenanceArrayOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotMaintenanceArrayInput` via:
//
//          MysqlBackupDbSystemSnapshotMaintenanceArray{ MysqlBackupDbSystemSnapshotMaintenanceArgs{...} }
type MysqlBackupDbSystemSnapshotMaintenanceArrayInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotMaintenanceArrayOutput() MysqlBackupDbSystemSnapshotMaintenanceArrayOutput
	ToMysqlBackupDbSystemSnapshotMaintenanceArrayOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotMaintenanceArrayOutput
}

type MysqlBackupDbSystemSnapshotMaintenanceArray []MysqlBackupDbSystemSnapshotMaintenanceInput

func (MysqlBackupDbSystemSnapshotMaintenanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshotMaintenance)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotMaintenanceArray) ToMysqlBackupDbSystemSnapshotMaintenanceArrayOutput() MysqlBackupDbSystemSnapshotMaintenanceArrayOutput {
	return i.ToMysqlBackupDbSystemSnapshotMaintenanceArrayOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotMaintenanceArray) ToMysqlBackupDbSystemSnapshotMaintenanceArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotMaintenanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotMaintenanceArrayOutput)
}

type MysqlBackupDbSystemSnapshotMaintenanceOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotMaintenanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshotMaintenance)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotMaintenanceOutput) ToMysqlBackupDbSystemSnapshotMaintenanceOutput() MysqlBackupDbSystemSnapshotMaintenanceOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotMaintenanceOutput) ToMysqlBackupDbSystemSnapshotMaintenanceOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotMaintenanceOutput {
	return o
}

// The start time of the maintenance window.
func (o MysqlBackupDbSystemSnapshotMaintenanceOutput) WindowStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotMaintenance) *string { return v.WindowStartTime }).(pulumi.StringPtrOutput)
}

type MysqlBackupDbSystemSnapshotMaintenanceArrayOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotMaintenanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshotMaintenance)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotMaintenanceArrayOutput) ToMysqlBackupDbSystemSnapshotMaintenanceArrayOutput() MysqlBackupDbSystemSnapshotMaintenanceArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotMaintenanceArrayOutput) ToMysqlBackupDbSystemSnapshotMaintenanceArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotMaintenanceArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotMaintenanceArrayOutput) Index(i pulumi.IntInput) MysqlBackupDbSystemSnapshotMaintenanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlBackupDbSystemSnapshotMaintenance {
		return vs[0].([]MysqlBackupDbSystemSnapshotMaintenance)[vs[1].(int)]
	}).(MysqlBackupDbSystemSnapshotMaintenanceOutput)
}

type MysqlDbSystemAnalyticsCluster struct {
	// The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
	ClusterSize *int `pulumi:"clusterSize"`
	// The name of the shape. The shape determines the resources allocated
	// * CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
	ShapeName *string `pulumi:"shapeName"`
	// (Updatable) The target state for the DB System. Could be set to `ACTIVE` or `INACTIVE`.
	State *string `pulumi:"state"`
	// The date and time the DB System was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

// MysqlDbSystemAnalyticsClusterInput is an input type that accepts MysqlDbSystemAnalyticsClusterArgs and MysqlDbSystemAnalyticsClusterOutput values.
// You can construct a concrete instance of `MysqlDbSystemAnalyticsClusterInput` via:
//
//          MysqlDbSystemAnalyticsClusterArgs{...}
type MysqlDbSystemAnalyticsClusterInput interface {
	pulumi.Input

	ToMysqlDbSystemAnalyticsClusterOutput() MysqlDbSystemAnalyticsClusterOutput
	ToMysqlDbSystemAnalyticsClusterOutputWithContext(context.Context) MysqlDbSystemAnalyticsClusterOutput
}

type MysqlDbSystemAnalyticsClusterArgs struct {
	// The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
	ClusterSize pulumi.IntPtrInput `pulumi:"clusterSize"`
	// The name of the shape. The shape determines the resources allocated
	// * CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
	ShapeName pulumi.StringPtrInput `pulumi:"shapeName"`
	// (Updatable) The target state for the DB System. Could be set to `ACTIVE` or `INACTIVE`.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The date and time the DB System was created.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated pulumi.StringPtrInput `pulumi:"timeUpdated"`
}

func (MysqlDbSystemAnalyticsClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemAnalyticsCluster)(nil)).Elem()
}

func (i MysqlDbSystemAnalyticsClusterArgs) ToMysqlDbSystemAnalyticsClusterOutput() MysqlDbSystemAnalyticsClusterOutput {
	return i.ToMysqlDbSystemAnalyticsClusterOutputWithContext(context.Background())
}

func (i MysqlDbSystemAnalyticsClusterArgs) ToMysqlDbSystemAnalyticsClusterOutputWithContext(ctx context.Context) MysqlDbSystemAnalyticsClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemAnalyticsClusterOutput)
}

// MysqlDbSystemAnalyticsClusterArrayInput is an input type that accepts MysqlDbSystemAnalyticsClusterArray and MysqlDbSystemAnalyticsClusterArrayOutput values.
// You can construct a concrete instance of `MysqlDbSystemAnalyticsClusterArrayInput` via:
//
//          MysqlDbSystemAnalyticsClusterArray{ MysqlDbSystemAnalyticsClusterArgs{...} }
type MysqlDbSystemAnalyticsClusterArrayInput interface {
	pulumi.Input

	ToMysqlDbSystemAnalyticsClusterArrayOutput() MysqlDbSystemAnalyticsClusterArrayOutput
	ToMysqlDbSystemAnalyticsClusterArrayOutputWithContext(context.Context) MysqlDbSystemAnalyticsClusterArrayOutput
}

type MysqlDbSystemAnalyticsClusterArray []MysqlDbSystemAnalyticsClusterInput

func (MysqlDbSystemAnalyticsClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemAnalyticsCluster)(nil)).Elem()
}

func (i MysqlDbSystemAnalyticsClusterArray) ToMysqlDbSystemAnalyticsClusterArrayOutput() MysqlDbSystemAnalyticsClusterArrayOutput {
	return i.ToMysqlDbSystemAnalyticsClusterArrayOutputWithContext(context.Background())
}

func (i MysqlDbSystemAnalyticsClusterArray) ToMysqlDbSystemAnalyticsClusterArrayOutputWithContext(ctx context.Context) MysqlDbSystemAnalyticsClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemAnalyticsClusterArrayOutput)
}

type MysqlDbSystemAnalyticsClusterOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemAnalyticsClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemAnalyticsCluster)(nil)).Elem()
}

func (o MysqlDbSystemAnalyticsClusterOutput) ToMysqlDbSystemAnalyticsClusterOutput() MysqlDbSystemAnalyticsClusterOutput {
	return o
}

func (o MysqlDbSystemAnalyticsClusterOutput) ToMysqlDbSystemAnalyticsClusterOutputWithContext(ctx context.Context) MysqlDbSystemAnalyticsClusterOutput {
	return o
}

// The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
func (o MysqlDbSystemAnalyticsClusterOutput) ClusterSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemAnalyticsCluster) *int { return v.ClusterSize }).(pulumi.IntPtrOutput)
}

// The name of the shape. The shape determines the resources allocated
// * CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
func (o MysqlDbSystemAnalyticsClusterOutput) ShapeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemAnalyticsCluster) *string { return v.ShapeName }).(pulumi.StringPtrOutput)
}

// (Updatable) The target state for the DB System. Could be set to `ACTIVE` or `INACTIVE`.
func (o MysqlDbSystemAnalyticsClusterOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemAnalyticsCluster) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The date and time the DB System was created.
func (o MysqlDbSystemAnalyticsClusterOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemAnalyticsCluster) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The time the DB System was last updated.
func (o MysqlDbSystemAnalyticsClusterOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemAnalyticsCluster) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

type MysqlDbSystemAnalyticsClusterArrayOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemAnalyticsClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemAnalyticsCluster)(nil)).Elem()
}

func (o MysqlDbSystemAnalyticsClusterArrayOutput) ToMysqlDbSystemAnalyticsClusterArrayOutput() MysqlDbSystemAnalyticsClusterArrayOutput {
	return o
}

func (o MysqlDbSystemAnalyticsClusterArrayOutput) ToMysqlDbSystemAnalyticsClusterArrayOutputWithContext(ctx context.Context) MysqlDbSystemAnalyticsClusterArrayOutput {
	return o
}

func (o MysqlDbSystemAnalyticsClusterArrayOutput) Index(i pulumi.IntInput) MysqlDbSystemAnalyticsClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlDbSystemAnalyticsCluster {
		return vs[0].([]MysqlDbSystemAnalyticsCluster)[vs[1].(int)]
	}).(MysqlDbSystemAnalyticsClusterOutput)
}

type MysqlDbSystemBackupPolicy struct {
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Specifies if PITR is enabled or disabled.
	IsEnabled *bool `pulumi:"isEnabled"`
	// (Updatable) The PITR policy for the DB System.
	PitrPolicy *MysqlDbSystemBackupPolicyPitrPolicy `pulumi:"pitrPolicy"`
	// (Updatable) Number of days to retain an automatic backup.
	RetentionInDays *int `pulumi:"retentionInDays"`
	// (Updatable) The start of the 2 hour maintenance window.
	WindowStartTime *string `pulumi:"windowStartTime"`
}

// MysqlDbSystemBackupPolicyInput is an input type that accepts MysqlDbSystemBackupPolicyArgs and MysqlDbSystemBackupPolicyOutput values.
// You can construct a concrete instance of `MysqlDbSystemBackupPolicyInput` via:
//
//          MysqlDbSystemBackupPolicyArgs{...}
type MysqlDbSystemBackupPolicyInput interface {
	pulumi.Input

	ToMysqlDbSystemBackupPolicyOutput() MysqlDbSystemBackupPolicyOutput
	ToMysqlDbSystemBackupPolicyOutputWithContext(context.Context) MysqlDbSystemBackupPolicyOutput
}

type MysqlDbSystemBackupPolicyArgs struct {
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// (Updatable) Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// (Updatable) Specifies if PITR is enabled or disabled.
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// (Updatable) The PITR policy for the DB System.
	PitrPolicy MysqlDbSystemBackupPolicyPitrPolicyPtrInput `pulumi:"pitrPolicy"`
	// (Updatable) Number of days to retain an automatic backup.
	RetentionInDays pulumi.IntPtrInput `pulumi:"retentionInDays"`
	// (Updatable) The start of the 2 hour maintenance window.
	WindowStartTime pulumi.StringPtrInput `pulumi:"windowStartTime"`
}

func (MysqlDbSystemBackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemBackupPolicy)(nil)).Elem()
}

func (i MysqlDbSystemBackupPolicyArgs) ToMysqlDbSystemBackupPolicyOutput() MysqlDbSystemBackupPolicyOutput {
	return i.ToMysqlDbSystemBackupPolicyOutputWithContext(context.Background())
}

func (i MysqlDbSystemBackupPolicyArgs) ToMysqlDbSystemBackupPolicyOutputWithContext(ctx context.Context) MysqlDbSystemBackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemBackupPolicyOutput)
}

func (i MysqlDbSystemBackupPolicyArgs) ToMysqlDbSystemBackupPolicyPtrOutput() MysqlDbSystemBackupPolicyPtrOutput {
	return i.ToMysqlDbSystemBackupPolicyPtrOutputWithContext(context.Background())
}

func (i MysqlDbSystemBackupPolicyArgs) ToMysqlDbSystemBackupPolicyPtrOutputWithContext(ctx context.Context) MysqlDbSystemBackupPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemBackupPolicyOutput).ToMysqlDbSystemBackupPolicyPtrOutputWithContext(ctx)
}

// MysqlDbSystemBackupPolicyPtrInput is an input type that accepts MysqlDbSystemBackupPolicyArgs, MysqlDbSystemBackupPolicyPtr and MysqlDbSystemBackupPolicyPtrOutput values.
// You can construct a concrete instance of `MysqlDbSystemBackupPolicyPtrInput` via:
//
//          MysqlDbSystemBackupPolicyArgs{...}
//
//  or:
//
//          nil
type MysqlDbSystemBackupPolicyPtrInput interface {
	pulumi.Input

	ToMysqlDbSystemBackupPolicyPtrOutput() MysqlDbSystemBackupPolicyPtrOutput
	ToMysqlDbSystemBackupPolicyPtrOutputWithContext(context.Context) MysqlDbSystemBackupPolicyPtrOutput
}

type mysqlDbSystemBackupPolicyPtrType MysqlDbSystemBackupPolicyArgs

func MysqlDbSystemBackupPolicyPtr(v *MysqlDbSystemBackupPolicyArgs) MysqlDbSystemBackupPolicyPtrInput {
	return (*mysqlDbSystemBackupPolicyPtrType)(v)
}

func (*mysqlDbSystemBackupPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlDbSystemBackupPolicy)(nil)).Elem()
}

func (i *mysqlDbSystemBackupPolicyPtrType) ToMysqlDbSystemBackupPolicyPtrOutput() MysqlDbSystemBackupPolicyPtrOutput {
	return i.ToMysqlDbSystemBackupPolicyPtrOutputWithContext(context.Background())
}

func (i *mysqlDbSystemBackupPolicyPtrType) ToMysqlDbSystemBackupPolicyPtrOutputWithContext(ctx context.Context) MysqlDbSystemBackupPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemBackupPolicyPtrOutput)
}

type MysqlDbSystemBackupPolicyOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemBackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemBackupPolicy)(nil)).Elem()
}

func (o MysqlDbSystemBackupPolicyOutput) ToMysqlDbSystemBackupPolicyOutput() MysqlDbSystemBackupPolicyOutput {
	return o
}

func (o MysqlDbSystemBackupPolicyOutput) ToMysqlDbSystemBackupPolicyOutputWithContext(ctx context.Context) MysqlDbSystemBackupPolicyOutput {
	return o
}

func (o MysqlDbSystemBackupPolicyOutput) ToMysqlDbSystemBackupPolicyPtrOutput() MysqlDbSystemBackupPolicyPtrOutput {
	return o.ToMysqlDbSystemBackupPolicyPtrOutputWithContext(context.Background())
}

func (o MysqlDbSystemBackupPolicyOutput) ToMysqlDbSystemBackupPolicyPtrOutputWithContext(ctx context.Context) MysqlDbSystemBackupPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MysqlDbSystemBackupPolicy) *MysqlDbSystemBackupPolicy {
		return &v
	}).(MysqlDbSystemBackupPolicyPtrOutput)
}

// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
func (o MysqlDbSystemBackupPolicyOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v MysqlDbSystemBackupPolicy) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o MysqlDbSystemBackupPolicyOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v MysqlDbSystemBackupPolicy) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// (Updatable) Specifies if PITR is enabled or disabled.
func (o MysqlDbSystemBackupPolicyOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemBackupPolicy) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// (Updatable) The PITR policy for the DB System.
func (o MysqlDbSystemBackupPolicyOutput) PitrPolicy() MysqlDbSystemBackupPolicyPitrPolicyPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemBackupPolicy) *MysqlDbSystemBackupPolicyPitrPolicy { return v.PitrPolicy }).(MysqlDbSystemBackupPolicyPitrPolicyPtrOutput)
}

// (Updatable) Number of days to retain an automatic backup.
func (o MysqlDbSystemBackupPolicyOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemBackupPolicy) *int { return v.RetentionInDays }).(pulumi.IntPtrOutput)
}

// (Updatable) The start of the 2 hour maintenance window.
func (o MysqlDbSystemBackupPolicyOutput) WindowStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemBackupPolicy) *string { return v.WindowStartTime }).(pulumi.StringPtrOutput)
}

type MysqlDbSystemBackupPolicyPtrOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemBackupPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlDbSystemBackupPolicy)(nil)).Elem()
}

func (o MysqlDbSystemBackupPolicyPtrOutput) ToMysqlDbSystemBackupPolicyPtrOutput() MysqlDbSystemBackupPolicyPtrOutput {
	return o
}

func (o MysqlDbSystemBackupPolicyPtrOutput) ToMysqlDbSystemBackupPolicyPtrOutputWithContext(ctx context.Context) MysqlDbSystemBackupPolicyPtrOutput {
	return o
}

func (o MysqlDbSystemBackupPolicyPtrOutput) Elem() MysqlDbSystemBackupPolicyOutput {
	return o.ApplyT(func(v *MysqlDbSystemBackupPolicy) MysqlDbSystemBackupPolicy {
		if v != nil {
			return *v
		}
		var ret MysqlDbSystemBackupPolicy
		return ret
	}).(MysqlDbSystemBackupPolicyOutput)
}

// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
func (o MysqlDbSystemBackupPolicyPtrOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *MysqlDbSystemBackupPolicy) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.DefinedTags
	}).(pulumi.MapOutput)
}

// (Updatable) Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o MysqlDbSystemBackupPolicyPtrOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *MysqlDbSystemBackupPolicy) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.FreeformTags
	}).(pulumi.MapOutput)
}

// (Updatable) Specifies if PITR is enabled or disabled.
func (o MysqlDbSystemBackupPolicyPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystemBackupPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// (Updatable) The PITR policy for the DB System.
func (o MysqlDbSystemBackupPolicyPtrOutput) PitrPolicy() MysqlDbSystemBackupPolicyPitrPolicyPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystemBackupPolicy) *MysqlDbSystemBackupPolicyPitrPolicy {
		if v == nil {
			return nil
		}
		return v.PitrPolicy
	}).(MysqlDbSystemBackupPolicyPitrPolicyPtrOutput)
}

// (Updatable) Number of days to retain an automatic backup.
func (o MysqlDbSystemBackupPolicyPtrOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystemBackupPolicy) *int {
		if v == nil {
			return nil
		}
		return v.RetentionInDays
	}).(pulumi.IntPtrOutput)
}

// (Updatable) The start of the 2 hour maintenance window.
func (o MysqlDbSystemBackupPolicyPtrOutput) WindowStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystemBackupPolicy) *string {
		if v == nil {
			return nil
		}
		return v.WindowStartTime
	}).(pulumi.StringPtrOutput)
}

type MysqlDbSystemBackupPolicyPitrPolicy struct {
	// (Updatable) Specifies if PITR is enabled or disabled.
	IsEnabled *bool `pulumi:"isEnabled"`
}

// MysqlDbSystemBackupPolicyPitrPolicyInput is an input type that accepts MysqlDbSystemBackupPolicyPitrPolicyArgs and MysqlDbSystemBackupPolicyPitrPolicyOutput values.
// You can construct a concrete instance of `MysqlDbSystemBackupPolicyPitrPolicyInput` via:
//
//          MysqlDbSystemBackupPolicyPitrPolicyArgs{...}
type MysqlDbSystemBackupPolicyPitrPolicyInput interface {
	pulumi.Input

	ToMysqlDbSystemBackupPolicyPitrPolicyOutput() MysqlDbSystemBackupPolicyPitrPolicyOutput
	ToMysqlDbSystemBackupPolicyPitrPolicyOutputWithContext(context.Context) MysqlDbSystemBackupPolicyPitrPolicyOutput
}

type MysqlDbSystemBackupPolicyPitrPolicyArgs struct {
	// (Updatable) Specifies if PITR is enabled or disabled.
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
}

func (MysqlDbSystemBackupPolicyPitrPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemBackupPolicyPitrPolicy)(nil)).Elem()
}

func (i MysqlDbSystemBackupPolicyPitrPolicyArgs) ToMysqlDbSystemBackupPolicyPitrPolicyOutput() MysqlDbSystemBackupPolicyPitrPolicyOutput {
	return i.ToMysqlDbSystemBackupPolicyPitrPolicyOutputWithContext(context.Background())
}

func (i MysqlDbSystemBackupPolicyPitrPolicyArgs) ToMysqlDbSystemBackupPolicyPitrPolicyOutputWithContext(ctx context.Context) MysqlDbSystemBackupPolicyPitrPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemBackupPolicyPitrPolicyOutput)
}

func (i MysqlDbSystemBackupPolicyPitrPolicyArgs) ToMysqlDbSystemBackupPolicyPitrPolicyPtrOutput() MysqlDbSystemBackupPolicyPitrPolicyPtrOutput {
	return i.ToMysqlDbSystemBackupPolicyPitrPolicyPtrOutputWithContext(context.Background())
}

func (i MysqlDbSystemBackupPolicyPitrPolicyArgs) ToMysqlDbSystemBackupPolicyPitrPolicyPtrOutputWithContext(ctx context.Context) MysqlDbSystemBackupPolicyPitrPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemBackupPolicyPitrPolicyOutput).ToMysqlDbSystemBackupPolicyPitrPolicyPtrOutputWithContext(ctx)
}

// MysqlDbSystemBackupPolicyPitrPolicyPtrInput is an input type that accepts MysqlDbSystemBackupPolicyPitrPolicyArgs, MysqlDbSystemBackupPolicyPitrPolicyPtr and MysqlDbSystemBackupPolicyPitrPolicyPtrOutput values.
// You can construct a concrete instance of `MysqlDbSystemBackupPolicyPitrPolicyPtrInput` via:
//
//          MysqlDbSystemBackupPolicyPitrPolicyArgs{...}
//
//  or:
//
//          nil
type MysqlDbSystemBackupPolicyPitrPolicyPtrInput interface {
	pulumi.Input

	ToMysqlDbSystemBackupPolicyPitrPolicyPtrOutput() MysqlDbSystemBackupPolicyPitrPolicyPtrOutput
	ToMysqlDbSystemBackupPolicyPitrPolicyPtrOutputWithContext(context.Context) MysqlDbSystemBackupPolicyPitrPolicyPtrOutput
}

type mysqlDbSystemBackupPolicyPitrPolicyPtrType MysqlDbSystemBackupPolicyPitrPolicyArgs

func MysqlDbSystemBackupPolicyPitrPolicyPtr(v *MysqlDbSystemBackupPolicyPitrPolicyArgs) MysqlDbSystemBackupPolicyPitrPolicyPtrInput {
	return (*mysqlDbSystemBackupPolicyPitrPolicyPtrType)(v)
}

func (*mysqlDbSystemBackupPolicyPitrPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlDbSystemBackupPolicyPitrPolicy)(nil)).Elem()
}

func (i *mysqlDbSystemBackupPolicyPitrPolicyPtrType) ToMysqlDbSystemBackupPolicyPitrPolicyPtrOutput() MysqlDbSystemBackupPolicyPitrPolicyPtrOutput {
	return i.ToMysqlDbSystemBackupPolicyPitrPolicyPtrOutputWithContext(context.Background())
}

func (i *mysqlDbSystemBackupPolicyPitrPolicyPtrType) ToMysqlDbSystemBackupPolicyPitrPolicyPtrOutputWithContext(ctx context.Context) MysqlDbSystemBackupPolicyPitrPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemBackupPolicyPitrPolicyPtrOutput)
}

type MysqlDbSystemBackupPolicyPitrPolicyOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemBackupPolicyPitrPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemBackupPolicyPitrPolicy)(nil)).Elem()
}

func (o MysqlDbSystemBackupPolicyPitrPolicyOutput) ToMysqlDbSystemBackupPolicyPitrPolicyOutput() MysqlDbSystemBackupPolicyPitrPolicyOutput {
	return o
}

func (o MysqlDbSystemBackupPolicyPitrPolicyOutput) ToMysqlDbSystemBackupPolicyPitrPolicyOutputWithContext(ctx context.Context) MysqlDbSystemBackupPolicyPitrPolicyOutput {
	return o
}

func (o MysqlDbSystemBackupPolicyPitrPolicyOutput) ToMysqlDbSystemBackupPolicyPitrPolicyPtrOutput() MysqlDbSystemBackupPolicyPitrPolicyPtrOutput {
	return o.ToMysqlDbSystemBackupPolicyPitrPolicyPtrOutputWithContext(context.Background())
}

func (o MysqlDbSystemBackupPolicyPitrPolicyOutput) ToMysqlDbSystemBackupPolicyPitrPolicyPtrOutputWithContext(ctx context.Context) MysqlDbSystemBackupPolicyPitrPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MysqlDbSystemBackupPolicyPitrPolicy) *MysqlDbSystemBackupPolicyPitrPolicy {
		return &v
	}).(MysqlDbSystemBackupPolicyPitrPolicyPtrOutput)
}

// (Updatable) Specifies if PITR is enabled or disabled.
func (o MysqlDbSystemBackupPolicyPitrPolicyOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemBackupPolicyPitrPolicy) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

type MysqlDbSystemBackupPolicyPitrPolicyPtrOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemBackupPolicyPitrPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlDbSystemBackupPolicyPitrPolicy)(nil)).Elem()
}

func (o MysqlDbSystemBackupPolicyPitrPolicyPtrOutput) ToMysqlDbSystemBackupPolicyPitrPolicyPtrOutput() MysqlDbSystemBackupPolicyPitrPolicyPtrOutput {
	return o
}

func (o MysqlDbSystemBackupPolicyPitrPolicyPtrOutput) ToMysqlDbSystemBackupPolicyPitrPolicyPtrOutputWithContext(ctx context.Context) MysqlDbSystemBackupPolicyPitrPolicyPtrOutput {
	return o
}

func (o MysqlDbSystemBackupPolicyPitrPolicyPtrOutput) Elem() MysqlDbSystemBackupPolicyPitrPolicyOutput {
	return o.ApplyT(func(v *MysqlDbSystemBackupPolicyPitrPolicy) MysqlDbSystemBackupPolicyPitrPolicy {
		if v != nil {
			return *v
		}
		var ret MysqlDbSystemBackupPolicyPitrPolicy
		return ret
	}).(MysqlDbSystemBackupPolicyPitrPolicyOutput)
}

// (Updatable) Specifies if PITR is enabled or disabled.
func (o MysqlDbSystemBackupPolicyPitrPolicyPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystemBackupPolicyPitrPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

type MysqlDbSystemChannel struct {
	// The OCID of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The user-friendly name for the DB System. It does not have to be unique.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the DB System.
	Id *string `pulumi:"id"`
	// (Updatable) Specifies if PITR is enabled or disabled.
	IsEnabled *bool `pulumi:"isEnabled"`
	// Additional information about the current lifecycleState.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// Parameters detailing how to provision the initial data of the system.
	Sources []MysqlDbSystemChannelSource `pulumi:"sources"`
	// (Updatable) The target state for the DB System. Could be set to `ACTIVE` or `INACTIVE`.
	State *string `pulumi:"state"`
	// Details about the Channel target.
	Targets []MysqlDbSystemChannelTarget `pulumi:"targets"`
	// The date and time the DB System was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

// MysqlDbSystemChannelInput is an input type that accepts MysqlDbSystemChannelArgs and MysqlDbSystemChannelOutput values.
// You can construct a concrete instance of `MysqlDbSystemChannelInput` via:
//
//          MysqlDbSystemChannelArgs{...}
type MysqlDbSystemChannelInput interface {
	pulumi.Input

	ToMysqlDbSystemChannelOutput() MysqlDbSystemChannelOutput
	ToMysqlDbSystemChannelOutputWithContext(context.Context) MysqlDbSystemChannelOutput
}

type MysqlDbSystemChannelArgs struct {
	// The OCID of the compartment.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// (Updatable) The user-friendly name for the DB System. It does not have to be unique.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The OCID of the DB System.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// (Updatable) Specifies if PITR is enabled or disabled.
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// Additional information about the current lifecycleState.
	LifecycleDetails pulumi.StringPtrInput `pulumi:"lifecycleDetails"`
	// Parameters detailing how to provision the initial data of the system.
	Sources MysqlDbSystemChannelSourceArrayInput `pulumi:"sources"`
	// (Updatable) The target state for the DB System. Could be set to `ACTIVE` or `INACTIVE`.
	State pulumi.StringPtrInput `pulumi:"state"`
	// Details about the Channel target.
	Targets MysqlDbSystemChannelTargetArrayInput `pulumi:"targets"`
	// The date and time the DB System was created.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated pulumi.StringPtrInput `pulumi:"timeUpdated"`
}

func (MysqlDbSystemChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemChannel)(nil)).Elem()
}

func (i MysqlDbSystemChannelArgs) ToMysqlDbSystemChannelOutput() MysqlDbSystemChannelOutput {
	return i.ToMysqlDbSystemChannelOutputWithContext(context.Background())
}

func (i MysqlDbSystemChannelArgs) ToMysqlDbSystemChannelOutputWithContext(ctx context.Context) MysqlDbSystemChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemChannelOutput)
}

// MysqlDbSystemChannelArrayInput is an input type that accepts MysqlDbSystemChannelArray and MysqlDbSystemChannelArrayOutput values.
// You can construct a concrete instance of `MysqlDbSystemChannelArrayInput` via:
//
//          MysqlDbSystemChannelArray{ MysqlDbSystemChannelArgs{...} }
type MysqlDbSystemChannelArrayInput interface {
	pulumi.Input

	ToMysqlDbSystemChannelArrayOutput() MysqlDbSystemChannelArrayOutput
	ToMysqlDbSystemChannelArrayOutputWithContext(context.Context) MysqlDbSystemChannelArrayOutput
}

type MysqlDbSystemChannelArray []MysqlDbSystemChannelInput

func (MysqlDbSystemChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemChannel)(nil)).Elem()
}

func (i MysqlDbSystemChannelArray) ToMysqlDbSystemChannelArrayOutput() MysqlDbSystemChannelArrayOutput {
	return i.ToMysqlDbSystemChannelArrayOutputWithContext(context.Background())
}

func (i MysqlDbSystemChannelArray) ToMysqlDbSystemChannelArrayOutputWithContext(ctx context.Context) MysqlDbSystemChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemChannelArrayOutput)
}

type MysqlDbSystemChannelOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemChannel)(nil)).Elem()
}

func (o MysqlDbSystemChannelOutput) ToMysqlDbSystemChannelOutput() MysqlDbSystemChannelOutput {
	return o
}

func (o MysqlDbSystemChannelOutput) ToMysqlDbSystemChannelOutputWithContext(ctx context.Context) MysqlDbSystemChannelOutput {
	return o
}

// The OCID of the compartment.
func (o MysqlDbSystemChannelOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannel) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
func (o MysqlDbSystemChannelOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v MysqlDbSystemChannel) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) The user-friendly name for the DB System. It does not have to be unique.
func (o MysqlDbSystemChannelOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannel) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// (Updatable) Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o MysqlDbSystemChannelOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v MysqlDbSystemChannel) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The OCID of the DB System.
func (o MysqlDbSystemChannelOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannel) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// (Updatable) Specifies if PITR is enabled or disabled.
func (o MysqlDbSystemChannelOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannel) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// Additional information about the current lifecycleState.
func (o MysqlDbSystemChannelOutput) LifecycleDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannel) *string { return v.LifecycleDetails }).(pulumi.StringPtrOutput)
}

// Parameters detailing how to provision the initial data of the system.
func (o MysqlDbSystemChannelOutput) Sources() MysqlDbSystemChannelSourceArrayOutput {
	return o.ApplyT(func(v MysqlDbSystemChannel) []MysqlDbSystemChannelSource { return v.Sources }).(MysqlDbSystemChannelSourceArrayOutput)
}

// (Updatable) The target state for the DB System. Could be set to `ACTIVE` or `INACTIVE`.
func (o MysqlDbSystemChannelOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannel) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Details about the Channel target.
func (o MysqlDbSystemChannelOutput) Targets() MysqlDbSystemChannelTargetArrayOutput {
	return o.ApplyT(func(v MysqlDbSystemChannel) []MysqlDbSystemChannelTarget { return v.Targets }).(MysqlDbSystemChannelTargetArrayOutput)
}

// The date and time the DB System was created.
func (o MysqlDbSystemChannelOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannel) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The time the DB System was last updated.
func (o MysqlDbSystemChannelOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannel) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

type MysqlDbSystemChannelArrayOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemChannel)(nil)).Elem()
}

func (o MysqlDbSystemChannelArrayOutput) ToMysqlDbSystemChannelArrayOutput() MysqlDbSystemChannelArrayOutput {
	return o
}

func (o MysqlDbSystemChannelArrayOutput) ToMysqlDbSystemChannelArrayOutputWithContext(ctx context.Context) MysqlDbSystemChannelArrayOutput {
	return o
}

func (o MysqlDbSystemChannelArrayOutput) Index(i pulumi.IntInput) MysqlDbSystemChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlDbSystemChannel {
		return vs[0].([]MysqlDbSystemChannel)[vs[1].(int)]
	}).(MysqlDbSystemChannelOutput)
}

type MysqlDbSystemChannelSource struct {
	// The network address of the DB System.
	Hostname *string `pulumi:"hostname"`
	// The port for primary endpoint of the DB System to listen on.
	Port *int `pulumi:"port"`
	// The specific source identifier. Use `BACKUP` for creating a new database by restoring from a backup.
	SourceType *string `pulumi:"sourceType"`
	// The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
	SslCaCertificates []MysqlDbSystemChannelSourceSslCaCertificate `pulumi:"sslCaCertificates"`
	// The SSL mode of the Channel.
	SslMode *string `pulumi:"sslMode"`
	// The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
	Username *string `pulumi:"username"`
}

// MysqlDbSystemChannelSourceInput is an input type that accepts MysqlDbSystemChannelSourceArgs and MysqlDbSystemChannelSourceOutput values.
// You can construct a concrete instance of `MysqlDbSystemChannelSourceInput` via:
//
//          MysqlDbSystemChannelSourceArgs{...}
type MysqlDbSystemChannelSourceInput interface {
	pulumi.Input

	ToMysqlDbSystemChannelSourceOutput() MysqlDbSystemChannelSourceOutput
	ToMysqlDbSystemChannelSourceOutputWithContext(context.Context) MysqlDbSystemChannelSourceOutput
}

type MysqlDbSystemChannelSourceArgs struct {
	// The network address of the DB System.
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	// The port for primary endpoint of the DB System to listen on.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The specific source identifier. Use `BACKUP` for creating a new database by restoring from a backup.
	SourceType pulumi.StringPtrInput `pulumi:"sourceType"`
	// The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
	SslCaCertificates MysqlDbSystemChannelSourceSslCaCertificateArrayInput `pulumi:"sslCaCertificates"`
	// The SSL mode of the Channel.
	SslMode pulumi.StringPtrInput `pulumi:"sslMode"`
	// The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (MysqlDbSystemChannelSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemChannelSource)(nil)).Elem()
}

func (i MysqlDbSystemChannelSourceArgs) ToMysqlDbSystemChannelSourceOutput() MysqlDbSystemChannelSourceOutput {
	return i.ToMysqlDbSystemChannelSourceOutputWithContext(context.Background())
}

func (i MysqlDbSystemChannelSourceArgs) ToMysqlDbSystemChannelSourceOutputWithContext(ctx context.Context) MysqlDbSystemChannelSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemChannelSourceOutput)
}

// MysqlDbSystemChannelSourceArrayInput is an input type that accepts MysqlDbSystemChannelSourceArray and MysqlDbSystemChannelSourceArrayOutput values.
// You can construct a concrete instance of `MysqlDbSystemChannelSourceArrayInput` via:
//
//          MysqlDbSystemChannelSourceArray{ MysqlDbSystemChannelSourceArgs{...} }
type MysqlDbSystemChannelSourceArrayInput interface {
	pulumi.Input

	ToMysqlDbSystemChannelSourceArrayOutput() MysqlDbSystemChannelSourceArrayOutput
	ToMysqlDbSystemChannelSourceArrayOutputWithContext(context.Context) MysqlDbSystemChannelSourceArrayOutput
}

type MysqlDbSystemChannelSourceArray []MysqlDbSystemChannelSourceInput

func (MysqlDbSystemChannelSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemChannelSource)(nil)).Elem()
}

func (i MysqlDbSystemChannelSourceArray) ToMysqlDbSystemChannelSourceArrayOutput() MysqlDbSystemChannelSourceArrayOutput {
	return i.ToMysqlDbSystemChannelSourceArrayOutputWithContext(context.Background())
}

func (i MysqlDbSystemChannelSourceArray) ToMysqlDbSystemChannelSourceArrayOutputWithContext(ctx context.Context) MysqlDbSystemChannelSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemChannelSourceArrayOutput)
}

type MysqlDbSystemChannelSourceOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemChannelSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemChannelSource)(nil)).Elem()
}

func (o MysqlDbSystemChannelSourceOutput) ToMysqlDbSystemChannelSourceOutput() MysqlDbSystemChannelSourceOutput {
	return o
}

func (o MysqlDbSystemChannelSourceOutput) ToMysqlDbSystemChannelSourceOutputWithContext(ctx context.Context) MysqlDbSystemChannelSourceOutput {
	return o
}

// The network address of the DB System.
func (o MysqlDbSystemChannelSourceOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannelSource) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// The port for primary endpoint of the DB System to listen on.
func (o MysqlDbSystemChannelSourceOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannelSource) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The specific source identifier. Use `BACKUP` for creating a new database by restoring from a backup.
func (o MysqlDbSystemChannelSourceOutput) SourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannelSource) *string { return v.SourceType }).(pulumi.StringPtrOutput)
}

// The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
func (o MysqlDbSystemChannelSourceOutput) SslCaCertificates() MysqlDbSystemChannelSourceSslCaCertificateArrayOutput {
	return o.ApplyT(func(v MysqlDbSystemChannelSource) []MysqlDbSystemChannelSourceSslCaCertificate {
		return v.SslCaCertificates
	}).(MysqlDbSystemChannelSourceSslCaCertificateArrayOutput)
}

// The SSL mode of the Channel.
func (o MysqlDbSystemChannelSourceOutput) SslMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannelSource) *string { return v.SslMode }).(pulumi.StringPtrOutput)
}

// The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
func (o MysqlDbSystemChannelSourceOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannelSource) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type MysqlDbSystemChannelSourceArrayOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemChannelSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemChannelSource)(nil)).Elem()
}

func (o MysqlDbSystemChannelSourceArrayOutput) ToMysqlDbSystemChannelSourceArrayOutput() MysqlDbSystemChannelSourceArrayOutput {
	return o
}

func (o MysqlDbSystemChannelSourceArrayOutput) ToMysqlDbSystemChannelSourceArrayOutputWithContext(ctx context.Context) MysqlDbSystemChannelSourceArrayOutput {
	return o
}

func (o MysqlDbSystemChannelSourceArrayOutput) Index(i pulumi.IntInput) MysqlDbSystemChannelSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlDbSystemChannelSource {
		return vs[0].([]MysqlDbSystemChannelSource)[vs[1].(int)]
	}).(MysqlDbSystemChannelSourceOutput)
}

type MysqlDbSystemChannelSourceSslCaCertificate struct {
	// The type of CA certificate.
	CertificateType *string `pulumi:"certificateType"`
	// The string containing the CA certificate in PEM format.
	Contents *string `pulumi:"contents"`
}

// MysqlDbSystemChannelSourceSslCaCertificateInput is an input type that accepts MysqlDbSystemChannelSourceSslCaCertificateArgs and MysqlDbSystemChannelSourceSslCaCertificateOutput values.
// You can construct a concrete instance of `MysqlDbSystemChannelSourceSslCaCertificateInput` via:
//
//          MysqlDbSystemChannelSourceSslCaCertificateArgs{...}
type MysqlDbSystemChannelSourceSslCaCertificateInput interface {
	pulumi.Input

	ToMysqlDbSystemChannelSourceSslCaCertificateOutput() MysqlDbSystemChannelSourceSslCaCertificateOutput
	ToMysqlDbSystemChannelSourceSslCaCertificateOutputWithContext(context.Context) MysqlDbSystemChannelSourceSslCaCertificateOutput
}

type MysqlDbSystemChannelSourceSslCaCertificateArgs struct {
	// The type of CA certificate.
	CertificateType pulumi.StringPtrInput `pulumi:"certificateType"`
	// The string containing the CA certificate in PEM format.
	Contents pulumi.StringPtrInput `pulumi:"contents"`
}

func (MysqlDbSystemChannelSourceSslCaCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemChannelSourceSslCaCertificate)(nil)).Elem()
}

func (i MysqlDbSystemChannelSourceSslCaCertificateArgs) ToMysqlDbSystemChannelSourceSslCaCertificateOutput() MysqlDbSystemChannelSourceSslCaCertificateOutput {
	return i.ToMysqlDbSystemChannelSourceSslCaCertificateOutputWithContext(context.Background())
}

func (i MysqlDbSystemChannelSourceSslCaCertificateArgs) ToMysqlDbSystemChannelSourceSslCaCertificateOutputWithContext(ctx context.Context) MysqlDbSystemChannelSourceSslCaCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemChannelSourceSslCaCertificateOutput)
}

// MysqlDbSystemChannelSourceSslCaCertificateArrayInput is an input type that accepts MysqlDbSystemChannelSourceSslCaCertificateArray and MysqlDbSystemChannelSourceSslCaCertificateArrayOutput values.
// You can construct a concrete instance of `MysqlDbSystemChannelSourceSslCaCertificateArrayInput` via:
//
//          MysqlDbSystemChannelSourceSslCaCertificateArray{ MysqlDbSystemChannelSourceSslCaCertificateArgs{...} }
type MysqlDbSystemChannelSourceSslCaCertificateArrayInput interface {
	pulumi.Input

	ToMysqlDbSystemChannelSourceSslCaCertificateArrayOutput() MysqlDbSystemChannelSourceSslCaCertificateArrayOutput
	ToMysqlDbSystemChannelSourceSslCaCertificateArrayOutputWithContext(context.Context) MysqlDbSystemChannelSourceSslCaCertificateArrayOutput
}

type MysqlDbSystemChannelSourceSslCaCertificateArray []MysqlDbSystemChannelSourceSslCaCertificateInput

func (MysqlDbSystemChannelSourceSslCaCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemChannelSourceSslCaCertificate)(nil)).Elem()
}

func (i MysqlDbSystemChannelSourceSslCaCertificateArray) ToMysqlDbSystemChannelSourceSslCaCertificateArrayOutput() MysqlDbSystemChannelSourceSslCaCertificateArrayOutput {
	return i.ToMysqlDbSystemChannelSourceSslCaCertificateArrayOutputWithContext(context.Background())
}

func (i MysqlDbSystemChannelSourceSslCaCertificateArray) ToMysqlDbSystemChannelSourceSslCaCertificateArrayOutputWithContext(ctx context.Context) MysqlDbSystemChannelSourceSslCaCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemChannelSourceSslCaCertificateArrayOutput)
}

type MysqlDbSystemChannelSourceSslCaCertificateOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemChannelSourceSslCaCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemChannelSourceSslCaCertificate)(nil)).Elem()
}

func (o MysqlDbSystemChannelSourceSslCaCertificateOutput) ToMysqlDbSystemChannelSourceSslCaCertificateOutput() MysqlDbSystemChannelSourceSslCaCertificateOutput {
	return o
}

func (o MysqlDbSystemChannelSourceSslCaCertificateOutput) ToMysqlDbSystemChannelSourceSslCaCertificateOutputWithContext(ctx context.Context) MysqlDbSystemChannelSourceSslCaCertificateOutput {
	return o
}

// The type of CA certificate.
func (o MysqlDbSystemChannelSourceSslCaCertificateOutput) CertificateType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannelSourceSslCaCertificate) *string { return v.CertificateType }).(pulumi.StringPtrOutput)
}

// The string containing the CA certificate in PEM format.
func (o MysqlDbSystemChannelSourceSslCaCertificateOutput) Contents() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannelSourceSslCaCertificate) *string { return v.Contents }).(pulumi.StringPtrOutput)
}

type MysqlDbSystemChannelSourceSslCaCertificateArrayOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemChannelSourceSslCaCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemChannelSourceSslCaCertificate)(nil)).Elem()
}

func (o MysqlDbSystemChannelSourceSslCaCertificateArrayOutput) ToMysqlDbSystemChannelSourceSslCaCertificateArrayOutput() MysqlDbSystemChannelSourceSslCaCertificateArrayOutput {
	return o
}

func (o MysqlDbSystemChannelSourceSslCaCertificateArrayOutput) ToMysqlDbSystemChannelSourceSslCaCertificateArrayOutputWithContext(ctx context.Context) MysqlDbSystemChannelSourceSslCaCertificateArrayOutput {
	return o
}

func (o MysqlDbSystemChannelSourceSslCaCertificateArrayOutput) Index(i pulumi.IntInput) MysqlDbSystemChannelSourceSslCaCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlDbSystemChannelSourceSslCaCertificate {
		return vs[0].([]MysqlDbSystemChannelSourceSslCaCertificate)[vs[1].(int)]
	}).(MysqlDbSystemChannelSourceSslCaCertificateOutput)
}

type MysqlDbSystemChannelTarget struct {
	// The username for the replication applier of the target MySQL DB System.
	ApplierUsername *string `pulumi:"applierUsername"`
	// The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
	ChannelName *string `pulumi:"channelName"`
	// The OCID of the DB System from which a backup shall be selected to be restored when creating the new DB System. Use this together with recovery point to perform a point in time recovery operation.
	DbSystemId *string `pulumi:"dbSystemId"`
	// The specific target identifier.
	TargetType *string `pulumi:"targetType"`
}

// MysqlDbSystemChannelTargetInput is an input type that accepts MysqlDbSystemChannelTargetArgs and MysqlDbSystemChannelTargetOutput values.
// You can construct a concrete instance of `MysqlDbSystemChannelTargetInput` via:
//
//          MysqlDbSystemChannelTargetArgs{...}
type MysqlDbSystemChannelTargetInput interface {
	pulumi.Input

	ToMysqlDbSystemChannelTargetOutput() MysqlDbSystemChannelTargetOutput
	ToMysqlDbSystemChannelTargetOutputWithContext(context.Context) MysqlDbSystemChannelTargetOutput
}

type MysqlDbSystemChannelTargetArgs struct {
	// The username for the replication applier of the target MySQL DB System.
	ApplierUsername pulumi.StringPtrInput `pulumi:"applierUsername"`
	// The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
	ChannelName pulumi.StringPtrInput `pulumi:"channelName"`
	// The OCID of the DB System from which a backup shall be selected to be restored when creating the new DB System. Use this together with recovery point to perform a point in time recovery operation.
	DbSystemId pulumi.StringPtrInput `pulumi:"dbSystemId"`
	// The specific target identifier.
	TargetType pulumi.StringPtrInput `pulumi:"targetType"`
}

func (MysqlDbSystemChannelTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemChannelTarget)(nil)).Elem()
}

func (i MysqlDbSystemChannelTargetArgs) ToMysqlDbSystemChannelTargetOutput() MysqlDbSystemChannelTargetOutput {
	return i.ToMysqlDbSystemChannelTargetOutputWithContext(context.Background())
}

func (i MysqlDbSystemChannelTargetArgs) ToMysqlDbSystemChannelTargetOutputWithContext(ctx context.Context) MysqlDbSystemChannelTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemChannelTargetOutput)
}

// MysqlDbSystemChannelTargetArrayInput is an input type that accepts MysqlDbSystemChannelTargetArray and MysqlDbSystemChannelTargetArrayOutput values.
// You can construct a concrete instance of `MysqlDbSystemChannelTargetArrayInput` via:
//
//          MysqlDbSystemChannelTargetArray{ MysqlDbSystemChannelTargetArgs{...} }
type MysqlDbSystemChannelTargetArrayInput interface {
	pulumi.Input

	ToMysqlDbSystemChannelTargetArrayOutput() MysqlDbSystemChannelTargetArrayOutput
	ToMysqlDbSystemChannelTargetArrayOutputWithContext(context.Context) MysqlDbSystemChannelTargetArrayOutput
}

type MysqlDbSystemChannelTargetArray []MysqlDbSystemChannelTargetInput

func (MysqlDbSystemChannelTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemChannelTarget)(nil)).Elem()
}

func (i MysqlDbSystemChannelTargetArray) ToMysqlDbSystemChannelTargetArrayOutput() MysqlDbSystemChannelTargetArrayOutput {
	return i.ToMysqlDbSystemChannelTargetArrayOutputWithContext(context.Background())
}

func (i MysqlDbSystemChannelTargetArray) ToMysqlDbSystemChannelTargetArrayOutputWithContext(ctx context.Context) MysqlDbSystemChannelTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemChannelTargetArrayOutput)
}

type MysqlDbSystemChannelTargetOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemChannelTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemChannelTarget)(nil)).Elem()
}

func (o MysqlDbSystemChannelTargetOutput) ToMysqlDbSystemChannelTargetOutput() MysqlDbSystemChannelTargetOutput {
	return o
}

func (o MysqlDbSystemChannelTargetOutput) ToMysqlDbSystemChannelTargetOutputWithContext(ctx context.Context) MysqlDbSystemChannelTargetOutput {
	return o
}

// The username for the replication applier of the target MySQL DB System.
func (o MysqlDbSystemChannelTargetOutput) ApplierUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannelTarget) *string { return v.ApplierUsername }).(pulumi.StringPtrOutput)
}

// The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
func (o MysqlDbSystemChannelTargetOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannelTarget) *string { return v.ChannelName }).(pulumi.StringPtrOutput)
}

// The OCID of the DB System from which a backup shall be selected to be restored when creating the new DB System. Use this together with recovery point to perform a point in time recovery operation.
func (o MysqlDbSystemChannelTargetOutput) DbSystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannelTarget) *string { return v.DbSystemId }).(pulumi.StringPtrOutput)
}

// The specific target identifier.
func (o MysqlDbSystemChannelTargetOutput) TargetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannelTarget) *string { return v.TargetType }).(pulumi.StringPtrOutput)
}

type MysqlDbSystemChannelTargetArrayOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemChannelTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemChannelTarget)(nil)).Elem()
}

func (o MysqlDbSystemChannelTargetArrayOutput) ToMysqlDbSystemChannelTargetArrayOutput() MysqlDbSystemChannelTargetArrayOutput {
	return o
}

func (o MysqlDbSystemChannelTargetArrayOutput) ToMysqlDbSystemChannelTargetArrayOutputWithContext(ctx context.Context) MysqlDbSystemChannelTargetArrayOutput {
	return o
}

func (o MysqlDbSystemChannelTargetArrayOutput) Index(i pulumi.IntInput) MysqlDbSystemChannelTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlDbSystemChannelTarget {
		return vs[0].([]MysqlDbSystemChannelTarget)[vs[1].(int)]
	}).(MysqlDbSystemChannelTargetOutput)
}

type MysqlDbSystemCurrentPlacement struct {
	// The availability domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	FaultDomain *string `pulumi:"faultDomain"`
}

// MysqlDbSystemCurrentPlacementInput is an input type that accepts MysqlDbSystemCurrentPlacementArgs and MysqlDbSystemCurrentPlacementOutput values.
// You can construct a concrete instance of `MysqlDbSystemCurrentPlacementInput` via:
//
//          MysqlDbSystemCurrentPlacementArgs{...}
type MysqlDbSystemCurrentPlacementInput interface {
	pulumi.Input

	ToMysqlDbSystemCurrentPlacementOutput() MysqlDbSystemCurrentPlacementOutput
	ToMysqlDbSystemCurrentPlacementOutputWithContext(context.Context) MysqlDbSystemCurrentPlacementOutput
}

type MysqlDbSystemCurrentPlacementArgs struct {
	// The availability domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	AvailabilityDomain pulumi.StringPtrInput `pulumi:"availabilityDomain"`
	// The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	FaultDomain pulumi.StringPtrInput `pulumi:"faultDomain"`
}

func (MysqlDbSystemCurrentPlacementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemCurrentPlacement)(nil)).Elem()
}

func (i MysqlDbSystemCurrentPlacementArgs) ToMysqlDbSystemCurrentPlacementOutput() MysqlDbSystemCurrentPlacementOutput {
	return i.ToMysqlDbSystemCurrentPlacementOutputWithContext(context.Background())
}

func (i MysqlDbSystemCurrentPlacementArgs) ToMysqlDbSystemCurrentPlacementOutputWithContext(ctx context.Context) MysqlDbSystemCurrentPlacementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemCurrentPlacementOutput)
}

// MysqlDbSystemCurrentPlacementArrayInput is an input type that accepts MysqlDbSystemCurrentPlacementArray and MysqlDbSystemCurrentPlacementArrayOutput values.
// You can construct a concrete instance of `MysqlDbSystemCurrentPlacementArrayInput` via:
//
//          MysqlDbSystemCurrentPlacementArray{ MysqlDbSystemCurrentPlacementArgs{...} }
type MysqlDbSystemCurrentPlacementArrayInput interface {
	pulumi.Input

	ToMysqlDbSystemCurrentPlacementArrayOutput() MysqlDbSystemCurrentPlacementArrayOutput
	ToMysqlDbSystemCurrentPlacementArrayOutputWithContext(context.Context) MysqlDbSystemCurrentPlacementArrayOutput
}

type MysqlDbSystemCurrentPlacementArray []MysqlDbSystemCurrentPlacementInput

func (MysqlDbSystemCurrentPlacementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemCurrentPlacement)(nil)).Elem()
}

func (i MysqlDbSystemCurrentPlacementArray) ToMysqlDbSystemCurrentPlacementArrayOutput() MysqlDbSystemCurrentPlacementArrayOutput {
	return i.ToMysqlDbSystemCurrentPlacementArrayOutputWithContext(context.Background())
}

func (i MysqlDbSystemCurrentPlacementArray) ToMysqlDbSystemCurrentPlacementArrayOutputWithContext(ctx context.Context) MysqlDbSystemCurrentPlacementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemCurrentPlacementArrayOutput)
}

type MysqlDbSystemCurrentPlacementOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemCurrentPlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemCurrentPlacement)(nil)).Elem()
}

func (o MysqlDbSystemCurrentPlacementOutput) ToMysqlDbSystemCurrentPlacementOutput() MysqlDbSystemCurrentPlacementOutput {
	return o
}

func (o MysqlDbSystemCurrentPlacementOutput) ToMysqlDbSystemCurrentPlacementOutputWithContext(ctx context.Context) MysqlDbSystemCurrentPlacementOutput {
	return o
}

// The availability domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
func (o MysqlDbSystemCurrentPlacementOutput) AvailabilityDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemCurrentPlacement) *string { return v.AvailabilityDomain }).(pulumi.StringPtrOutput)
}

// The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
func (o MysqlDbSystemCurrentPlacementOutput) FaultDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemCurrentPlacement) *string { return v.FaultDomain }).(pulumi.StringPtrOutput)
}

type MysqlDbSystemCurrentPlacementArrayOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemCurrentPlacementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemCurrentPlacement)(nil)).Elem()
}

func (o MysqlDbSystemCurrentPlacementArrayOutput) ToMysqlDbSystemCurrentPlacementArrayOutput() MysqlDbSystemCurrentPlacementArrayOutput {
	return o
}

func (o MysqlDbSystemCurrentPlacementArrayOutput) ToMysqlDbSystemCurrentPlacementArrayOutputWithContext(ctx context.Context) MysqlDbSystemCurrentPlacementArrayOutput {
	return o
}

func (o MysqlDbSystemCurrentPlacementArrayOutput) Index(i pulumi.IntInput) MysqlDbSystemCurrentPlacementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlDbSystemCurrentPlacement {
		return vs[0].([]MysqlDbSystemCurrentPlacement)[vs[1].(int)]
	}).(MysqlDbSystemCurrentPlacementOutput)
}

type MysqlDbSystemDeletionPolicy struct {
	// (Updatable) Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
	AutomaticBackupRetention *string `pulumi:"automaticBackupRetention"`
	// (Updatable) Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
	FinalBackup *string `pulumi:"finalBackup"`
	// (Updatable) Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
	IsDeleteProtected *bool `pulumi:"isDeleteProtected"`
}

// MysqlDbSystemDeletionPolicyInput is an input type that accepts MysqlDbSystemDeletionPolicyArgs and MysqlDbSystemDeletionPolicyOutput values.
// You can construct a concrete instance of `MysqlDbSystemDeletionPolicyInput` via:
//
//          MysqlDbSystemDeletionPolicyArgs{...}
type MysqlDbSystemDeletionPolicyInput interface {
	pulumi.Input

	ToMysqlDbSystemDeletionPolicyOutput() MysqlDbSystemDeletionPolicyOutput
	ToMysqlDbSystemDeletionPolicyOutputWithContext(context.Context) MysqlDbSystemDeletionPolicyOutput
}

type MysqlDbSystemDeletionPolicyArgs struct {
	// (Updatable) Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
	AutomaticBackupRetention pulumi.StringPtrInput `pulumi:"automaticBackupRetention"`
	// (Updatable) Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
	FinalBackup pulumi.StringPtrInput `pulumi:"finalBackup"`
	// (Updatable) Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
	IsDeleteProtected pulumi.BoolPtrInput `pulumi:"isDeleteProtected"`
}

func (MysqlDbSystemDeletionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemDeletionPolicy)(nil)).Elem()
}

func (i MysqlDbSystemDeletionPolicyArgs) ToMysqlDbSystemDeletionPolicyOutput() MysqlDbSystemDeletionPolicyOutput {
	return i.ToMysqlDbSystemDeletionPolicyOutputWithContext(context.Background())
}

func (i MysqlDbSystemDeletionPolicyArgs) ToMysqlDbSystemDeletionPolicyOutputWithContext(ctx context.Context) MysqlDbSystemDeletionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemDeletionPolicyOutput)
}

// MysqlDbSystemDeletionPolicyArrayInput is an input type that accepts MysqlDbSystemDeletionPolicyArray and MysqlDbSystemDeletionPolicyArrayOutput values.
// You can construct a concrete instance of `MysqlDbSystemDeletionPolicyArrayInput` via:
//
//          MysqlDbSystemDeletionPolicyArray{ MysqlDbSystemDeletionPolicyArgs{...} }
type MysqlDbSystemDeletionPolicyArrayInput interface {
	pulumi.Input

	ToMysqlDbSystemDeletionPolicyArrayOutput() MysqlDbSystemDeletionPolicyArrayOutput
	ToMysqlDbSystemDeletionPolicyArrayOutputWithContext(context.Context) MysqlDbSystemDeletionPolicyArrayOutput
}

type MysqlDbSystemDeletionPolicyArray []MysqlDbSystemDeletionPolicyInput

func (MysqlDbSystemDeletionPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemDeletionPolicy)(nil)).Elem()
}

func (i MysqlDbSystemDeletionPolicyArray) ToMysqlDbSystemDeletionPolicyArrayOutput() MysqlDbSystemDeletionPolicyArrayOutput {
	return i.ToMysqlDbSystemDeletionPolicyArrayOutputWithContext(context.Background())
}

func (i MysqlDbSystemDeletionPolicyArray) ToMysqlDbSystemDeletionPolicyArrayOutputWithContext(ctx context.Context) MysqlDbSystemDeletionPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemDeletionPolicyArrayOutput)
}

type MysqlDbSystemDeletionPolicyOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemDeletionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemDeletionPolicy)(nil)).Elem()
}

func (o MysqlDbSystemDeletionPolicyOutput) ToMysqlDbSystemDeletionPolicyOutput() MysqlDbSystemDeletionPolicyOutput {
	return o
}

func (o MysqlDbSystemDeletionPolicyOutput) ToMysqlDbSystemDeletionPolicyOutputWithContext(ctx context.Context) MysqlDbSystemDeletionPolicyOutput {
	return o
}

// (Updatable) Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
func (o MysqlDbSystemDeletionPolicyOutput) AutomaticBackupRetention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemDeletionPolicy) *string { return v.AutomaticBackupRetention }).(pulumi.StringPtrOutput)
}

// (Updatable) Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
func (o MysqlDbSystemDeletionPolicyOutput) FinalBackup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemDeletionPolicy) *string { return v.FinalBackup }).(pulumi.StringPtrOutput)
}

// (Updatable) Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
func (o MysqlDbSystemDeletionPolicyOutput) IsDeleteProtected() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemDeletionPolicy) *bool { return v.IsDeleteProtected }).(pulumi.BoolPtrOutput)
}

type MysqlDbSystemDeletionPolicyArrayOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemDeletionPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemDeletionPolicy)(nil)).Elem()
}

func (o MysqlDbSystemDeletionPolicyArrayOutput) ToMysqlDbSystemDeletionPolicyArrayOutput() MysqlDbSystemDeletionPolicyArrayOutput {
	return o
}

func (o MysqlDbSystemDeletionPolicyArrayOutput) ToMysqlDbSystemDeletionPolicyArrayOutputWithContext(ctx context.Context) MysqlDbSystemDeletionPolicyArrayOutput {
	return o
}

func (o MysqlDbSystemDeletionPolicyArrayOutput) Index(i pulumi.IntInput) MysqlDbSystemDeletionPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlDbSystemDeletionPolicy {
		return vs[0].([]MysqlDbSystemDeletionPolicy)[vs[1].(int)]
	}).(MysqlDbSystemDeletionPolicyOutput)
}

type MysqlDbSystemEndpoint struct {
	// The network address of the DB System.
	Hostname *string `pulumi:"hostname"`
	// The IP address the DB System is configured to listen on. A private IP address of your choice to assign to the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
	IpAddress *string `pulumi:"ipAddress"`
	// The access modes from the client that this endpoint supports.
	Modes []string `pulumi:"modes"`
	// The port for primary endpoint of the DB System to listen on.
	Port *int `pulumi:"port"`
	// The TCP network port on which X Plugin listens for connections. This is the X Plugin equivalent of port.
	PortX *int `pulumi:"portX"`
	// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
	Status *string `pulumi:"status"`
	// Additional information about the current endpoint status.
	StatusDetails *string `pulumi:"statusDetails"`
}

// MysqlDbSystemEndpointInput is an input type that accepts MysqlDbSystemEndpointArgs and MysqlDbSystemEndpointOutput values.
// You can construct a concrete instance of `MysqlDbSystemEndpointInput` via:
//
//          MysqlDbSystemEndpointArgs{...}
type MysqlDbSystemEndpointInput interface {
	pulumi.Input

	ToMysqlDbSystemEndpointOutput() MysqlDbSystemEndpointOutput
	ToMysqlDbSystemEndpointOutputWithContext(context.Context) MysqlDbSystemEndpointOutput
}

type MysqlDbSystemEndpointArgs struct {
	// The network address of the DB System.
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	// The IP address the DB System is configured to listen on. A private IP address of your choice to assign to the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The access modes from the client that this endpoint supports.
	Modes pulumi.StringArrayInput `pulumi:"modes"`
	// The port for primary endpoint of the DB System to listen on.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The TCP network port on which X Plugin listens for connections. This is the X Plugin equivalent of port.
	PortX pulumi.IntPtrInput `pulumi:"portX"`
	// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Additional information about the current endpoint status.
	StatusDetails pulumi.StringPtrInput `pulumi:"statusDetails"`
}

func (MysqlDbSystemEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemEndpoint)(nil)).Elem()
}

func (i MysqlDbSystemEndpointArgs) ToMysqlDbSystemEndpointOutput() MysqlDbSystemEndpointOutput {
	return i.ToMysqlDbSystemEndpointOutputWithContext(context.Background())
}

func (i MysqlDbSystemEndpointArgs) ToMysqlDbSystemEndpointOutputWithContext(ctx context.Context) MysqlDbSystemEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemEndpointOutput)
}

// MysqlDbSystemEndpointArrayInput is an input type that accepts MysqlDbSystemEndpointArray and MysqlDbSystemEndpointArrayOutput values.
// You can construct a concrete instance of `MysqlDbSystemEndpointArrayInput` via:
//
//          MysqlDbSystemEndpointArray{ MysqlDbSystemEndpointArgs{...} }
type MysqlDbSystemEndpointArrayInput interface {
	pulumi.Input

	ToMysqlDbSystemEndpointArrayOutput() MysqlDbSystemEndpointArrayOutput
	ToMysqlDbSystemEndpointArrayOutputWithContext(context.Context) MysqlDbSystemEndpointArrayOutput
}

type MysqlDbSystemEndpointArray []MysqlDbSystemEndpointInput

func (MysqlDbSystemEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemEndpoint)(nil)).Elem()
}

func (i MysqlDbSystemEndpointArray) ToMysqlDbSystemEndpointArrayOutput() MysqlDbSystemEndpointArrayOutput {
	return i.ToMysqlDbSystemEndpointArrayOutputWithContext(context.Background())
}

func (i MysqlDbSystemEndpointArray) ToMysqlDbSystemEndpointArrayOutputWithContext(ctx context.Context) MysqlDbSystemEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemEndpointArrayOutput)
}

type MysqlDbSystemEndpointOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemEndpoint)(nil)).Elem()
}

func (o MysqlDbSystemEndpointOutput) ToMysqlDbSystemEndpointOutput() MysqlDbSystemEndpointOutput {
	return o
}

func (o MysqlDbSystemEndpointOutput) ToMysqlDbSystemEndpointOutputWithContext(ctx context.Context) MysqlDbSystemEndpointOutput {
	return o
}

// The network address of the DB System.
func (o MysqlDbSystemEndpointOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemEndpoint) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// The IP address the DB System is configured to listen on. A private IP address of your choice to assign to the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
func (o MysqlDbSystemEndpointOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemEndpoint) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The access modes from the client that this endpoint supports.
func (o MysqlDbSystemEndpointOutput) Modes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MysqlDbSystemEndpoint) []string { return v.Modes }).(pulumi.StringArrayOutput)
}

// The port for primary endpoint of the DB System to listen on.
func (o MysqlDbSystemEndpointOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemEndpoint) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The TCP network port on which X Plugin listens for connections. This is the X Plugin equivalent of port.
func (o MysqlDbSystemEndpointOutput) PortX() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemEndpoint) *int { return v.PortX }).(pulumi.IntPtrOutput)
}

// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
func (o MysqlDbSystemEndpointOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemEndpoint) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Additional information about the current endpoint status.
func (o MysqlDbSystemEndpointOutput) StatusDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemEndpoint) *string { return v.StatusDetails }).(pulumi.StringPtrOutput)
}

type MysqlDbSystemEndpointArrayOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemEndpoint)(nil)).Elem()
}

func (o MysqlDbSystemEndpointArrayOutput) ToMysqlDbSystemEndpointArrayOutput() MysqlDbSystemEndpointArrayOutput {
	return o
}

func (o MysqlDbSystemEndpointArrayOutput) ToMysqlDbSystemEndpointArrayOutputWithContext(ctx context.Context) MysqlDbSystemEndpointArrayOutput {
	return o
}

func (o MysqlDbSystemEndpointArrayOutput) Index(i pulumi.IntInput) MysqlDbSystemEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlDbSystemEndpoint {
		return vs[0].([]MysqlDbSystemEndpoint)[vs[1].(int)]
	}).(MysqlDbSystemEndpointOutput)
}

type MysqlDbSystemHeatWaveCluster struct {
	// The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
	ClusterSize *int `pulumi:"clusterSize"`
	// The name of the shape. The shape determines the resources allocated
	// * CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
	ShapeName *string `pulumi:"shapeName"`
	// (Updatable) The target state for the DB System. Could be set to `ACTIVE` or `INACTIVE`.
	State *string `pulumi:"state"`
	// The date and time the DB System was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

// MysqlDbSystemHeatWaveClusterInput is an input type that accepts MysqlDbSystemHeatWaveClusterArgs and MysqlDbSystemHeatWaveClusterOutput values.
// You can construct a concrete instance of `MysqlDbSystemHeatWaveClusterInput` via:
//
//          MysqlDbSystemHeatWaveClusterArgs{...}
type MysqlDbSystemHeatWaveClusterInput interface {
	pulumi.Input

	ToMysqlDbSystemHeatWaveClusterOutput() MysqlDbSystemHeatWaveClusterOutput
	ToMysqlDbSystemHeatWaveClusterOutputWithContext(context.Context) MysqlDbSystemHeatWaveClusterOutput
}

type MysqlDbSystemHeatWaveClusterArgs struct {
	// The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
	ClusterSize pulumi.IntPtrInput `pulumi:"clusterSize"`
	// The name of the shape. The shape determines the resources allocated
	// * CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
	ShapeName pulumi.StringPtrInput `pulumi:"shapeName"`
	// (Updatable) The target state for the DB System. Could be set to `ACTIVE` or `INACTIVE`.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The date and time the DB System was created.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated pulumi.StringPtrInput `pulumi:"timeUpdated"`
}

func (MysqlDbSystemHeatWaveClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemHeatWaveCluster)(nil)).Elem()
}

func (i MysqlDbSystemHeatWaveClusterArgs) ToMysqlDbSystemHeatWaveClusterOutput() MysqlDbSystemHeatWaveClusterOutput {
	return i.ToMysqlDbSystemHeatWaveClusterOutputWithContext(context.Background())
}

func (i MysqlDbSystemHeatWaveClusterArgs) ToMysqlDbSystemHeatWaveClusterOutputWithContext(ctx context.Context) MysqlDbSystemHeatWaveClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemHeatWaveClusterOutput)
}

// MysqlDbSystemHeatWaveClusterArrayInput is an input type that accepts MysqlDbSystemHeatWaveClusterArray and MysqlDbSystemHeatWaveClusterArrayOutput values.
// You can construct a concrete instance of `MysqlDbSystemHeatWaveClusterArrayInput` via:
//
//          MysqlDbSystemHeatWaveClusterArray{ MysqlDbSystemHeatWaveClusterArgs{...} }
type MysqlDbSystemHeatWaveClusterArrayInput interface {
	pulumi.Input

	ToMysqlDbSystemHeatWaveClusterArrayOutput() MysqlDbSystemHeatWaveClusterArrayOutput
	ToMysqlDbSystemHeatWaveClusterArrayOutputWithContext(context.Context) MysqlDbSystemHeatWaveClusterArrayOutput
}

type MysqlDbSystemHeatWaveClusterArray []MysqlDbSystemHeatWaveClusterInput

func (MysqlDbSystemHeatWaveClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemHeatWaveCluster)(nil)).Elem()
}

func (i MysqlDbSystemHeatWaveClusterArray) ToMysqlDbSystemHeatWaveClusterArrayOutput() MysqlDbSystemHeatWaveClusterArrayOutput {
	return i.ToMysqlDbSystemHeatWaveClusterArrayOutputWithContext(context.Background())
}

func (i MysqlDbSystemHeatWaveClusterArray) ToMysqlDbSystemHeatWaveClusterArrayOutputWithContext(ctx context.Context) MysqlDbSystemHeatWaveClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemHeatWaveClusterArrayOutput)
}

type MysqlDbSystemHeatWaveClusterOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemHeatWaveClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemHeatWaveCluster)(nil)).Elem()
}

func (o MysqlDbSystemHeatWaveClusterOutput) ToMysqlDbSystemHeatWaveClusterOutput() MysqlDbSystemHeatWaveClusterOutput {
	return o
}

func (o MysqlDbSystemHeatWaveClusterOutput) ToMysqlDbSystemHeatWaveClusterOutputWithContext(ctx context.Context) MysqlDbSystemHeatWaveClusterOutput {
	return o
}

// The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
func (o MysqlDbSystemHeatWaveClusterOutput) ClusterSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemHeatWaveCluster) *int { return v.ClusterSize }).(pulumi.IntPtrOutput)
}

// The name of the shape. The shape determines the resources allocated
// * CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
func (o MysqlDbSystemHeatWaveClusterOutput) ShapeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemHeatWaveCluster) *string { return v.ShapeName }).(pulumi.StringPtrOutput)
}

// (Updatable) The target state for the DB System. Could be set to `ACTIVE` or `INACTIVE`.
func (o MysqlDbSystemHeatWaveClusterOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemHeatWaveCluster) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The date and time the DB System was created.
func (o MysqlDbSystemHeatWaveClusterOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemHeatWaveCluster) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The time the DB System was last updated.
func (o MysqlDbSystemHeatWaveClusterOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemHeatWaveCluster) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

type MysqlDbSystemHeatWaveClusterArrayOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemHeatWaveClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemHeatWaveCluster)(nil)).Elem()
}

func (o MysqlDbSystemHeatWaveClusterArrayOutput) ToMysqlDbSystemHeatWaveClusterArrayOutput() MysqlDbSystemHeatWaveClusterArrayOutput {
	return o
}

func (o MysqlDbSystemHeatWaveClusterArrayOutput) ToMysqlDbSystemHeatWaveClusterArrayOutputWithContext(ctx context.Context) MysqlDbSystemHeatWaveClusterArrayOutput {
	return o
}

func (o MysqlDbSystemHeatWaveClusterArrayOutput) Index(i pulumi.IntInput) MysqlDbSystemHeatWaveClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlDbSystemHeatWaveCluster {
		return vs[0].([]MysqlDbSystemHeatWaveCluster)[vs[1].(int)]
	}).(MysqlDbSystemHeatWaveClusterOutput)
}

type MysqlDbSystemMaintenance struct {
	// (Updatable) The start of the 2 hour maintenance window.
	WindowStartTime string `pulumi:"windowStartTime"`
}

// MysqlDbSystemMaintenanceInput is an input type that accepts MysqlDbSystemMaintenanceArgs and MysqlDbSystemMaintenanceOutput values.
// You can construct a concrete instance of `MysqlDbSystemMaintenanceInput` via:
//
//          MysqlDbSystemMaintenanceArgs{...}
type MysqlDbSystemMaintenanceInput interface {
	pulumi.Input

	ToMysqlDbSystemMaintenanceOutput() MysqlDbSystemMaintenanceOutput
	ToMysqlDbSystemMaintenanceOutputWithContext(context.Context) MysqlDbSystemMaintenanceOutput
}

type MysqlDbSystemMaintenanceArgs struct {
	// (Updatable) The start of the 2 hour maintenance window.
	WindowStartTime pulumi.StringInput `pulumi:"windowStartTime"`
}

func (MysqlDbSystemMaintenanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemMaintenance)(nil)).Elem()
}

func (i MysqlDbSystemMaintenanceArgs) ToMysqlDbSystemMaintenanceOutput() MysqlDbSystemMaintenanceOutput {
	return i.ToMysqlDbSystemMaintenanceOutputWithContext(context.Background())
}

func (i MysqlDbSystemMaintenanceArgs) ToMysqlDbSystemMaintenanceOutputWithContext(ctx context.Context) MysqlDbSystemMaintenanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemMaintenanceOutput)
}

func (i MysqlDbSystemMaintenanceArgs) ToMysqlDbSystemMaintenancePtrOutput() MysqlDbSystemMaintenancePtrOutput {
	return i.ToMysqlDbSystemMaintenancePtrOutputWithContext(context.Background())
}

func (i MysqlDbSystemMaintenanceArgs) ToMysqlDbSystemMaintenancePtrOutputWithContext(ctx context.Context) MysqlDbSystemMaintenancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemMaintenanceOutput).ToMysqlDbSystemMaintenancePtrOutputWithContext(ctx)
}

// MysqlDbSystemMaintenancePtrInput is an input type that accepts MysqlDbSystemMaintenanceArgs, MysqlDbSystemMaintenancePtr and MysqlDbSystemMaintenancePtrOutput values.
// You can construct a concrete instance of `MysqlDbSystemMaintenancePtrInput` via:
//
//          MysqlDbSystemMaintenanceArgs{...}
//
//  or:
//
//          nil
type MysqlDbSystemMaintenancePtrInput interface {
	pulumi.Input

	ToMysqlDbSystemMaintenancePtrOutput() MysqlDbSystemMaintenancePtrOutput
	ToMysqlDbSystemMaintenancePtrOutputWithContext(context.Context) MysqlDbSystemMaintenancePtrOutput
}

type mysqlDbSystemMaintenancePtrType MysqlDbSystemMaintenanceArgs

func MysqlDbSystemMaintenancePtr(v *MysqlDbSystemMaintenanceArgs) MysqlDbSystemMaintenancePtrInput {
	return (*mysqlDbSystemMaintenancePtrType)(v)
}

func (*mysqlDbSystemMaintenancePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlDbSystemMaintenance)(nil)).Elem()
}

func (i *mysqlDbSystemMaintenancePtrType) ToMysqlDbSystemMaintenancePtrOutput() MysqlDbSystemMaintenancePtrOutput {
	return i.ToMysqlDbSystemMaintenancePtrOutputWithContext(context.Background())
}

func (i *mysqlDbSystemMaintenancePtrType) ToMysqlDbSystemMaintenancePtrOutputWithContext(ctx context.Context) MysqlDbSystemMaintenancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemMaintenancePtrOutput)
}

type MysqlDbSystemMaintenanceOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemMaintenanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemMaintenance)(nil)).Elem()
}

func (o MysqlDbSystemMaintenanceOutput) ToMysqlDbSystemMaintenanceOutput() MysqlDbSystemMaintenanceOutput {
	return o
}

func (o MysqlDbSystemMaintenanceOutput) ToMysqlDbSystemMaintenanceOutputWithContext(ctx context.Context) MysqlDbSystemMaintenanceOutput {
	return o
}

func (o MysqlDbSystemMaintenanceOutput) ToMysqlDbSystemMaintenancePtrOutput() MysqlDbSystemMaintenancePtrOutput {
	return o.ToMysqlDbSystemMaintenancePtrOutputWithContext(context.Background())
}

func (o MysqlDbSystemMaintenanceOutput) ToMysqlDbSystemMaintenancePtrOutputWithContext(ctx context.Context) MysqlDbSystemMaintenancePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MysqlDbSystemMaintenance) *MysqlDbSystemMaintenance {
		return &v
	}).(MysqlDbSystemMaintenancePtrOutput)
}

// (Updatable) The start of the 2 hour maintenance window.
func (o MysqlDbSystemMaintenanceOutput) WindowStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v MysqlDbSystemMaintenance) string { return v.WindowStartTime }).(pulumi.StringOutput)
}

type MysqlDbSystemMaintenancePtrOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemMaintenancePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlDbSystemMaintenance)(nil)).Elem()
}

func (o MysqlDbSystemMaintenancePtrOutput) ToMysqlDbSystemMaintenancePtrOutput() MysqlDbSystemMaintenancePtrOutput {
	return o
}

func (o MysqlDbSystemMaintenancePtrOutput) ToMysqlDbSystemMaintenancePtrOutputWithContext(ctx context.Context) MysqlDbSystemMaintenancePtrOutput {
	return o
}

func (o MysqlDbSystemMaintenancePtrOutput) Elem() MysqlDbSystemMaintenanceOutput {
	return o.ApplyT(func(v *MysqlDbSystemMaintenance) MysqlDbSystemMaintenance {
		if v != nil {
			return *v
		}
		var ret MysqlDbSystemMaintenance
		return ret
	}).(MysqlDbSystemMaintenanceOutput)
}

// (Updatable) The start of the 2 hour maintenance window.
func (o MysqlDbSystemMaintenancePtrOutput) WindowStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystemMaintenance) *string {
		if v == nil {
			return nil
		}
		return &v.WindowStartTime
	}).(pulumi.StringPtrOutput)
}

type MysqlDbSystemPointInTimeRecoveryDetail struct {
	// Earliest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeEarliestRecoveryPoint *string `pulumi:"timeEarliestRecoveryPoint"`
	// Latest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeLatestRecoveryPoint *string `pulumi:"timeLatestRecoveryPoint"`
}

// MysqlDbSystemPointInTimeRecoveryDetailInput is an input type that accepts MysqlDbSystemPointInTimeRecoveryDetailArgs and MysqlDbSystemPointInTimeRecoveryDetailOutput values.
// You can construct a concrete instance of `MysqlDbSystemPointInTimeRecoveryDetailInput` via:
//
//          MysqlDbSystemPointInTimeRecoveryDetailArgs{...}
type MysqlDbSystemPointInTimeRecoveryDetailInput interface {
	pulumi.Input

	ToMysqlDbSystemPointInTimeRecoveryDetailOutput() MysqlDbSystemPointInTimeRecoveryDetailOutput
	ToMysqlDbSystemPointInTimeRecoveryDetailOutputWithContext(context.Context) MysqlDbSystemPointInTimeRecoveryDetailOutput
}

type MysqlDbSystemPointInTimeRecoveryDetailArgs struct {
	// Earliest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeEarliestRecoveryPoint pulumi.StringPtrInput `pulumi:"timeEarliestRecoveryPoint"`
	// Latest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeLatestRecoveryPoint pulumi.StringPtrInput `pulumi:"timeLatestRecoveryPoint"`
}

func (MysqlDbSystemPointInTimeRecoveryDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemPointInTimeRecoveryDetail)(nil)).Elem()
}

func (i MysqlDbSystemPointInTimeRecoveryDetailArgs) ToMysqlDbSystemPointInTimeRecoveryDetailOutput() MysqlDbSystemPointInTimeRecoveryDetailOutput {
	return i.ToMysqlDbSystemPointInTimeRecoveryDetailOutputWithContext(context.Background())
}

func (i MysqlDbSystemPointInTimeRecoveryDetailArgs) ToMysqlDbSystemPointInTimeRecoveryDetailOutputWithContext(ctx context.Context) MysqlDbSystemPointInTimeRecoveryDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemPointInTimeRecoveryDetailOutput)
}

// MysqlDbSystemPointInTimeRecoveryDetailArrayInput is an input type that accepts MysqlDbSystemPointInTimeRecoveryDetailArray and MysqlDbSystemPointInTimeRecoveryDetailArrayOutput values.
// You can construct a concrete instance of `MysqlDbSystemPointInTimeRecoveryDetailArrayInput` via:
//
//          MysqlDbSystemPointInTimeRecoveryDetailArray{ MysqlDbSystemPointInTimeRecoveryDetailArgs{...} }
type MysqlDbSystemPointInTimeRecoveryDetailArrayInput interface {
	pulumi.Input

	ToMysqlDbSystemPointInTimeRecoveryDetailArrayOutput() MysqlDbSystemPointInTimeRecoveryDetailArrayOutput
	ToMysqlDbSystemPointInTimeRecoveryDetailArrayOutputWithContext(context.Context) MysqlDbSystemPointInTimeRecoveryDetailArrayOutput
}

type MysqlDbSystemPointInTimeRecoveryDetailArray []MysqlDbSystemPointInTimeRecoveryDetailInput

func (MysqlDbSystemPointInTimeRecoveryDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemPointInTimeRecoveryDetail)(nil)).Elem()
}

func (i MysqlDbSystemPointInTimeRecoveryDetailArray) ToMysqlDbSystemPointInTimeRecoveryDetailArrayOutput() MysqlDbSystemPointInTimeRecoveryDetailArrayOutput {
	return i.ToMysqlDbSystemPointInTimeRecoveryDetailArrayOutputWithContext(context.Background())
}

func (i MysqlDbSystemPointInTimeRecoveryDetailArray) ToMysqlDbSystemPointInTimeRecoveryDetailArrayOutputWithContext(ctx context.Context) MysqlDbSystemPointInTimeRecoveryDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemPointInTimeRecoveryDetailArrayOutput)
}

type MysqlDbSystemPointInTimeRecoveryDetailOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemPointInTimeRecoveryDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemPointInTimeRecoveryDetail)(nil)).Elem()
}

func (o MysqlDbSystemPointInTimeRecoveryDetailOutput) ToMysqlDbSystemPointInTimeRecoveryDetailOutput() MysqlDbSystemPointInTimeRecoveryDetailOutput {
	return o
}

func (o MysqlDbSystemPointInTimeRecoveryDetailOutput) ToMysqlDbSystemPointInTimeRecoveryDetailOutputWithContext(ctx context.Context) MysqlDbSystemPointInTimeRecoveryDetailOutput {
	return o
}

// Earliest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o MysqlDbSystemPointInTimeRecoveryDetailOutput) TimeEarliestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemPointInTimeRecoveryDetail) *string { return v.TimeEarliestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// Latest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o MysqlDbSystemPointInTimeRecoveryDetailOutput) TimeLatestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemPointInTimeRecoveryDetail) *string { return v.TimeLatestRecoveryPoint }).(pulumi.StringPtrOutput)
}

type MysqlDbSystemPointInTimeRecoveryDetailArrayOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemPointInTimeRecoveryDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemPointInTimeRecoveryDetail)(nil)).Elem()
}

func (o MysqlDbSystemPointInTimeRecoveryDetailArrayOutput) ToMysqlDbSystemPointInTimeRecoveryDetailArrayOutput() MysqlDbSystemPointInTimeRecoveryDetailArrayOutput {
	return o
}

func (o MysqlDbSystemPointInTimeRecoveryDetailArrayOutput) ToMysqlDbSystemPointInTimeRecoveryDetailArrayOutputWithContext(ctx context.Context) MysqlDbSystemPointInTimeRecoveryDetailArrayOutput {
	return o
}

func (o MysqlDbSystemPointInTimeRecoveryDetailArrayOutput) Index(i pulumi.IntInput) MysqlDbSystemPointInTimeRecoveryDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlDbSystemPointInTimeRecoveryDetail {
		return vs[0].([]MysqlDbSystemPointInTimeRecoveryDetail)[vs[1].(int)]
	}).(MysqlDbSystemPointInTimeRecoveryDetailOutput)
}

type MysqlDbSystemSource struct {
	// The OCID of the backup to be used as the source for the new DB System.
	BackupId *string `pulumi:"backupId"`
	// The OCID of the DB System from which a backup shall be selected to be restored when creating the new DB System. Use this together with recovery point to perform a point in time recovery operation.
	DbSystemId *string `pulumi:"dbSystemId"`
	// The date and time, as per RFC 3339, of the change up to which the new DB System shall be restored to, using a backup and logs from the original DB System. In case no point in time is specified, then this new DB System shall be restored up to the latest change recorded for the original DB System.
	RecoveryPoint *string `pulumi:"recoveryPoint"`
	// The specific source identifier. Use `BACKUP` for creating a new database by restoring from a backup.
	SourceType string `pulumi:"sourceType"`
}

// MysqlDbSystemSourceInput is an input type that accepts MysqlDbSystemSourceArgs and MysqlDbSystemSourceOutput values.
// You can construct a concrete instance of `MysqlDbSystemSourceInput` via:
//
//          MysqlDbSystemSourceArgs{...}
type MysqlDbSystemSourceInput interface {
	pulumi.Input

	ToMysqlDbSystemSourceOutput() MysqlDbSystemSourceOutput
	ToMysqlDbSystemSourceOutputWithContext(context.Context) MysqlDbSystemSourceOutput
}

type MysqlDbSystemSourceArgs struct {
	// The OCID of the backup to be used as the source for the new DB System.
	BackupId pulumi.StringPtrInput `pulumi:"backupId"`
	// The OCID of the DB System from which a backup shall be selected to be restored when creating the new DB System. Use this together with recovery point to perform a point in time recovery operation.
	DbSystemId pulumi.StringPtrInput `pulumi:"dbSystemId"`
	// The date and time, as per RFC 3339, of the change up to which the new DB System shall be restored to, using a backup and logs from the original DB System. In case no point in time is specified, then this new DB System shall be restored up to the latest change recorded for the original DB System.
	RecoveryPoint pulumi.StringPtrInput `pulumi:"recoveryPoint"`
	// The specific source identifier. Use `BACKUP` for creating a new database by restoring from a backup.
	SourceType pulumi.StringInput `pulumi:"sourceType"`
}

func (MysqlDbSystemSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemSource)(nil)).Elem()
}

func (i MysqlDbSystemSourceArgs) ToMysqlDbSystemSourceOutput() MysqlDbSystemSourceOutput {
	return i.ToMysqlDbSystemSourceOutputWithContext(context.Background())
}

func (i MysqlDbSystemSourceArgs) ToMysqlDbSystemSourceOutputWithContext(ctx context.Context) MysqlDbSystemSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemSourceOutput)
}

func (i MysqlDbSystemSourceArgs) ToMysqlDbSystemSourcePtrOutput() MysqlDbSystemSourcePtrOutput {
	return i.ToMysqlDbSystemSourcePtrOutputWithContext(context.Background())
}

func (i MysqlDbSystemSourceArgs) ToMysqlDbSystemSourcePtrOutputWithContext(ctx context.Context) MysqlDbSystemSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemSourceOutput).ToMysqlDbSystemSourcePtrOutputWithContext(ctx)
}

// MysqlDbSystemSourcePtrInput is an input type that accepts MysqlDbSystemSourceArgs, MysqlDbSystemSourcePtr and MysqlDbSystemSourcePtrOutput values.
// You can construct a concrete instance of `MysqlDbSystemSourcePtrInput` via:
//
//          MysqlDbSystemSourceArgs{...}
//
//  or:
//
//          nil
type MysqlDbSystemSourcePtrInput interface {
	pulumi.Input

	ToMysqlDbSystemSourcePtrOutput() MysqlDbSystemSourcePtrOutput
	ToMysqlDbSystemSourcePtrOutputWithContext(context.Context) MysqlDbSystemSourcePtrOutput
}

type mysqlDbSystemSourcePtrType MysqlDbSystemSourceArgs

func MysqlDbSystemSourcePtr(v *MysqlDbSystemSourceArgs) MysqlDbSystemSourcePtrInput {
	return (*mysqlDbSystemSourcePtrType)(v)
}

func (*mysqlDbSystemSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlDbSystemSource)(nil)).Elem()
}

func (i *mysqlDbSystemSourcePtrType) ToMysqlDbSystemSourcePtrOutput() MysqlDbSystemSourcePtrOutput {
	return i.ToMysqlDbSystemSourcePtrOutputWithContext(context.Background())
}

func (i *mysqlDbSystemSourcePtrType) ToMysqlDbSystemSourcePtrOutputWithContext(ctx context.Context) MysqlDbSystemSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemSourcePtrOutput)
}

type MysqlDbSystemSourceOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemSource)(nil)).Elem()
}

func (o MysqlDbSystemSourceOutput) ToMysqlDbSystemSourceOutput() MysqlDbSystemSourceOutput {
	return o
}

func (o MysqlDbSystemSourceOutput) ToMysqlDbSystemSourceOutputWithContext(ctx context.Context) MysqlDbSystemSourceOutput {
	return o
}

func (o MysqlDbSystemSourceOutput) ToMysqlDbSystemSourcePtrOutput() MysqlDbSystemSourcePtrOutput {
	return o.ToMysqlDbSystemSourcePtrOutputWithContext(context.Background())
}

func (o MysqlDbSystemSourceOutput) ToMysqlDbSystemSourcePtrOutputWithContext(ctx context.Context) MysqlDbSystemSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MysqlDbSystemSource) *MysqlDbSystemSource {
		return &v
	}).(MysqlDbSystemSourcePtrOutput)
}

// The OCID of the backup to be used as the source for the new DB System.
func (o MysqlDbSystemSourceOutput) BackupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemSource) *string { return v.BackupId }).(pulumi.StringPtrOutput)
}

// The OCID of the DB System from which a backup shall be selected to be restored when creating the new DB System. Use this together with recovery point to perform a point in time recovery operation.
func (o MysqlDbSystemSourceOutput) DbSystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemSource) *string { return v.DbSystemId }).(pulumi.StringPtrOutput)
}

// The date and time, as per RFC 3339, of the change up to which the new DB System shall be restored to, using a backup and logs from the original DB System. In case no point in time is specified, then this new DB System shall be restored up to the latest change recorded for the original DB System.
func (o MysqlDbSystemSourceOutput) RecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemSource) *string { return v.RecoveryPoint }).(pulumi.StringPtrOutput)
}

// The specific source identifier. Use `BACKUP` for creating a new database by restoring from a backup.
func (o MysqlDbSystemSourceOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v MysqlDbSystemSource) string { return v.SourceType }).(pulumi.StringOutput)
}

type MysqlDbSystemSourcePtrOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlDbSystemSource)(nil)).Elem()
}

func (o MysqlDbSystemSourcePtrOutput) ToMysqlDbSystemSourcePtrOutput() MysqlDbSystemSourcePtrOutput {
	return o
}

func (o MysqlDbSystemSourcePtrOutput) ToMysqlDbSystemSourcePtrOutputWithContext(ctx context.Context) MysqlDbSystemSourcePtrOutput {
	return o
}

func (o MysqlDbSystemSourcePtrOutput) Elem() MysqlDbSystemSourceOutput {
	return o.ApplyT(func(v *MysqlDbSystemSource) MysqlDbSystemSource {
		if v != nil {
			return *v
		}
		var ret MysqlDbSystemSource
		return ret
	}).(MysqlDbSystemSourceOutput)
}

// The OCID of the backup to be used as the source for the new DB System.
func (o MysqlDbSystemSourcePtrOutput) BackupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystemSource) *string {
		if v == nil {
			return nil
		}
		return v.BackupId
	}).(pulumi.StringPtrOutput)
}

// The OCID of the DB System from which a backup shall be selected to be restored when creating the new DB System. Use this together with recovery point to perform a point in time recovery operation.
func (o MysqlDbSystemSourcePtrOutput) DbSystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystemSource) *string {
		if v == nil {
			return nil
		}
		return v.DbSystemId
	}).(pulumi.StringPtrOutput)
}

// The date and time, as per RFC 3339, of the change up to which the new DB System shall be restored to, using a backup and logs from the original DB System. In case no point in time is specified, then this new DB System shall be restored up to the latest change recorded for the original DB System.
func (o MysqlDbSystemSourcePtrOutput) RecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystemSource) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// The specific source identifier. Use `BACKUP` for creating a new database by restoring from a backup.
func (o MysqlDbSystemSourcePtrOutput) SourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystemSource) *string {
		if v == nil {
			return nil
		}
		return &v.SourceType
	}).(pulumi.StringPtrOutput)
}

type GetAnalyticsClusterClusterNode struct {
	// The ID of the node within MySQL Analytics Cluster.
	NodeId string `pulumi:"nodeId"`
	// The current state of the Analytics Cluster.
	State string `pulumi:"state"`
	// The date and time the Analytics Cluster was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeCreated string `pulumi:"timeCreated"`
	// The time the Analytics Cluster was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetAnalyticsClusterClusterNodeInput is an input type that accepts GetAnalyticsClusterClusterNodeArgs and GetAnalyticsClusterClusterNodeOutput values.
// You can construct a concrete instance of `GetAnalyticsClusterClusterNodeInput` via:
//
//          GetAnalyticsClusterClusterNodeArgs{...}
type GetAnalyticsClusterClusterNodeInput interface {
	pulumi.Input

	ToGetAnalyticsClusterClusterNodeOutput() GetAnalyticsClusterClusterNodeOutput
	ToGetAnalyticsClusterClusterNodeOutputWithContext(context.Context) GetAnalyticsClusterClusterNodeOutput
}

type GetAnalyticsClusterClusterNodeArgs struct {
	// The ID of the node within MySQL Analytics Cluster.
	NodeId pulumi.StringInput `pulumi:"nodeId"`
	// The current state of the Analytics Cluster.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the Analytics Cluster was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the Analytics Cluster was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetAnalyticsClusterClusterNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAnalyticsClusterClusterNode)(nil)).Elem()
}

func (i GetAnalyticsClusterClusterNodeArgs) ToGetAnalyticsClusterClusterNodeOutput() GetAnalyticsClusterClusterNodeOutput {
	return i.ToGetAnalyticsClusterClusterNodeOutputWithContext(context.Background())
}

func (i GetAnalyticsClusterClusterNodeArgs) ToGetAnalyticsClusterClusterNodeOutputWithContext(ctx context.Context) GetAnalyticsClusterClusterNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAnalyticsClusterClusterNodeOutput)
}

// GetAnalyticsClusterClusterNodeArrayInput is an input type that accepts GetAnalyticsClusterClusterNodeArray and GetAnalyticsClusterClusterNodeArrayOutput values.
// You can construct a concrete instance of `GetAnalyticsClusterClusterNodeArrayInput` via:
//
//          GetAnalyticsClusterClusterNodeArray{ GetAnalyticsClusterClusterNodeArgs{...} }
type GetAnalyticsClusterClusterNodeArrayInput interface {
	pulumi.Input

	ToGetAnalyticsClusterClusterNodeArrayOutput() GetAnalyticsClusterClusterNodeArrayOutput
	ToGetAnalyticsClusterClusterNodeArrayOutputWithContext(context.Context) GetAnalyticsClusterClusterNodeArrayOutput
}

type GetAnalyticsClusterClusterNodeArray []GetAnalyticsClusterClusterNodeInput

func (GetAnalyticsClusterClusterNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAnalyticsClusterClusterNode)(nil)).Elem()
}

func (i GetAnalyticsClusterClusterNodeArray) ToGetAnalyticsClusterClusterNodeArrayOutput() GetAnalyticsClusterClusterNodeArrayOutput {
	return i.ToGetAnalyticsClusterClusterNodeArrayOutputWithContext(context.Background())
}

func (i GetAnalyticsClusterClusterNodeArray) ToGetAnalyticsClusterClusterNodeArrayOutputWithContext(ctx context.Context) GetAnalyticsClusterClusterNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAnalyticsClusterClusterNodeArrayOutput)
}

type GetAnalyticsClusterClusterNodeOutput struct{ *pulumi.OutputState }

func (GetAnalyticsClusterClusterNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAnalyticsClusterClusterNode)(nil)).Elem()
}

func (o GetAnalyticsClusterClusterNodeOutput) ToGetAnalyticsClusterClusterNodeOutput() GetAnalyticsClusterClusterNodeOutput {
	return o
}

func (o GetAnalyticsClusterClusterNodeOutput) ToGetAnalyticsClusterClusterNodeOutputWithContext(ctx context.Context) GetAnalyticsClusterClusterNodeOutput {
	return o
}

// The ID of the node within MySQL Analytics Cluster.
func (o GetAnalyticsClusterClusterNodeOutput) NodeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAnalyticsClusterClusterNode) string { return v.NodeId }).(pulumi.StringOutput)
}

// The current state of the Analytics Cluster.
func (o GetAnalyticsClusterClusterNodeOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetAnalyticsClusterClusterNode) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the Analytics Cluster was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o GetAnalyticsClusterClusterNodeOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetAnalyticsClusterClusterNode) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the Analytics Cluster was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o GetAnalyticsClusterClusterNodeOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetAnalyticsClusterClusterNode) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetAnalyticsClusterClusterNodeArrayOutput struct{ *pulumi.OutputState }

func (GetAnalyticsClusterClusterNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAnalyticsClusterClusterNode)(nil)).Elem()
}

func (o GetAnalyticsClusterClusterNodeArrayOutput) ToGetAnalyticsClusterClusterNodeArrayOutput() GetAnalyticsClusterClusterNodeArrayOutput {
	return o
}

func (o GetAnalyticsClusterClusterNodeArrayOutput) ToGetAnalyticsClusterClusterNodeArrayOutputWithContext(ctx context.Context) GetAnalyticsClusterClusterNodeArrayOutput {
	return o
}

func (o GetAnalyticsClusterClusterNodeArrayOutput) Index(i pulumi.IntInput) GetAnalyticsClusterClusterNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAnalyticsClusterClusterNode {
		return vs[0].([]GetAnalyticsClusterClusterNode)[vs[1].(int)]
	}).(GetAnalyticsClusterClusterNodeOutput)
}

type GetChannelSource struct {
	// The network address of the MySQL instance.
	Hostname string `pulumi:"hostname"`
	Password string `pulumi:"password"`
	// The port the source MySQL instance listens on.
	Port int `pulumi:"port"`
	// The specific source identifier.
	SourceType string `pulumi:"sourceType"`
	// The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
	SslCaCertificates []GetChannelSourceSslCaCertificate `pulumi:"sslCaCertificates"`
	// The SSL mode of the Channel.
	SslMode string `pulumi:"sslMode"`
	// The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
	Username string `pulumi:"username"`
}

// GetChannelSourceInput is an input type that accepts GetChannelSourceArgs and GetChannelSourceOutput values.
// You can construct a concrete instance of `GetChannelSourceInput` via:
//
//          GetChannelSourceArgs{...}
type GetChannelSourceInput interface {
	pulumi.Input

	ToGetChannelSourceOutput() GetChannelSourceOutput
	ToGetChannelSourceOutputWithContext(context.Context) GetChannelSourceOutput
}

type GetChannelSourceArgs struct {
	// The network address of the MySQL instance.
	Hostname pulumi.StringInput `pulumi:"hostname"`
	Password pulumi.StringInput `pulumi:"password"`
	// The port the source MySQL instance listens on.
	Port pulumi.IntInput `pulumi:"port"`
	// The specific source identifier.
	SourceType pulumi.StringInput `pulumi:"sourceType"`
	// The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
	SslCaCertificates GetChannelSourceSslCaCertificateArrayInput `pulumi:"sslCaCertificates"`
	// The SSL mode of the Channel.
	SslMode pulumi.StringInput `pulumi:"sslMode"`
	// The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetChannelSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelSource)(nil)).Elem()
}

func (i GetChannelSourceArgs) ToGetChannelSourceOutput() GetChannelSourceOutput {
	return i.ToGetChannelSourceOutputWithContext(context.Background())
}

func (i GetChannelSourceArgs) ToGetChannelSourceOutputWithContext(ctx context.Context) GetChannelSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelSourceOutput)
}

// GetChannelSourceArrayInput is an input type that accepts GetChannelSourceArray and GetChannelSourceArrayOutput values.
// You can construct a concrete instance of `GetChannelSourceArrayInput` via:
//
//          GetChannelSourceArray{ GetChannelSourceArgs{...} }
type GetChannelSourceArrayInput interface {
	pulumi.Input

	ToGetChannelSourceArrayOutput() GetChannelSourceArrayOutput
	ToGetChannelSourceArrayOutputWithContext(context.Context) GetChannelSourceArrayOutput
}

type GetChannelSourceArray []GetChannelSourceInput

func (GetChannelSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelSource)(nil)).Elem()
}

func (i GetChannelSourceArray) ToGetChannelSourceArrayOutput() GetChannelSourceArrayOutput {
	return i.ToGetChannelSourceArrayOutputWithContext(context.Background())
}

func (i GetChannelSourceArray) ToGetChannelSourceArrayOutputWithContext(ctx context.Context) GetChannelSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelSourceArrayOutput)
}

type GetChannelSourceOutput struct{ *pulumi.OutputState }

func (GetChannelSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelSource)(nil)).Elem()
}

func (o GetChannelSourceOutput) ToGetChannelSourceOutput() GetChannelSourceOutput {
	return o
}

func (o GetChannelSourceOutput) ToGetChannelSourceOutputWithContext(ctx context.Context) GetChannelSourceOutput {
	return o
}

// The network address of the MySQL instance.
func (o GetChannelSourceOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelSource) string { return v.Hostname }).(pulumi.StringOutput)
}

func (o GetChannelSourceOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelSource) string { return v.Password }).(pulumi.StringOutput)
}

// The port the source MySQL instance listens on.
func (o GetChannelSourceOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetChannelSource) int { return v.Port }).(pulumi.IntOutput)
}

// The specific source identifier.
func (o GetChannelSourceOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelSource) string { return v.SourceType }).(pulumi.StringOutput)
}

// The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
func (o GetChannelSourceOutput) SslCaCertificates() GetChannelSourceSslCaCertificateArrayOutput {
	return o.ApplyT(func(v GetChannelSource) []GetChannelSourceSslCaCertificate { return v.SslCaCertificates }).(GetChannelSourceSslCaCertificateArrayOutput)
}

// The SSL mode of the Channel.
func (o GetChannelSourceOutput) SslMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelSource) string { return v.SslMode }).(pulumi.StringOutput)
}

// The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
func (o GetChannelSourceOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelSource) string { return v.Username }).(pulumi.StringOutput)
}

type GetChannelSourceArrayOutput struct{ *pulumi.OutputState }

func (GetChannelSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelSource)(nil)).Elem()
}

func (o GetChannelSourceArrayOutput) ToGetChannelSourceArrayOutput() GetChannelSourceArrayOutput {
	return o
}

func (o GetChannelSourceArrayOutput) ToGetChannelSourceArrayOutputWithContext(ctx context.Context) GetChannelSourceArrayOutput {
	return o
}

func (o GetChannelSourceArrayOutput) Index(i pulumi.IntInput) GetChannelSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChannelSource {
		return vs[0].([]GetChannelSource)[vs[1].(int)]
	}).(GetChannelSourceOutput)
}

type GetChannelSourceSslCaCertificate struct {
	// The type of CA certificate.
	CertificateType string `pulumi:"certificateType"`
	// The string containing the CA certificate in PEM format.
	Contents string `pulumi:"contents"`
}

// GetChannelSourceSslCaCertificateInput is an input type that accepts GetChannelSourceSslCaCertificateArgs and GetChannelSourceSslCaCertificateOutput values.
// You can construct a concrete instance of `GetChannelSourceSslCaCertificateInput` via:
//
//          GetChannelSourceSslCaCertificateArgs{...}
type GetChannelSourceSslCaCertificateInput interface {
	pulumi.Input

	ToGetChannelSourceSslCaCertificateOutput() GetChannelSourceSslCaCertificateOutput
	ToGetChannelSourceSslCaCertificateOutputWithContext(context.Context) GetChannelSourceSslCaCertificateOutput
}

type GetChannelSourceSslCaCertificateArgs struct {
	// The type of CA certificate.
	CertificateType pulumi.StringInput `pulumi:"certificateType"`
	// The string containing the CA certificate in PEM format.
	Contents pulumi.StringInput `pulumi:"contents"`
}

func (GetChannelSourceSslCaCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelSourceSslCaCertificate)(nil)).Elem()
}

func (i GetChannelSourceSslCaCertificateArgs) ToGetChannelSourceSslCaCertificateOutput() GetChannelSourceSslCaCertificateOutput {
	return i.ToGetChannelSourceSslCaCertificateOutputWithContext(context.Background())
}

func (i GetChannelSourceSslCaCertificateArgs) ToGetChannelSourceSslCaCertificateOutputWithContext(ctx context.Context) GetChannelSourceSslCaCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelSourceSslCaCertificateOutput)
}

// GetChannelSourceSslCaCertificateArrayInput is an input type that accepts GetChannelSourceSslCaCertificateArray and GetChannelSourceSslCaCertificateArrayOutput values.
// You can construct a concrete instance of `GetChannelSourceSslCaCertificateArrayInput` via:
//
//          GetChannelSourceSslCaCertificateArray{ GetChannelSourceSslCaCertificateArgs{...} }
type GetChannelSourceSslCaCertificateArrayInput interface {
	pulumi.Input

	ToGetChannelSourceSslCaCertificateArrayOutput() GetChannelSourceSslCaCertificateArrayOutput
	ToGetChannelSourceSslCaCertificateArrayOutputWithContext(context.Context) GetChannelSourceSslCaCertificateArrayOutput
}

type GetChannelSourceSslCaCertificateArray []GetChannelSourceSslCaCertificateInput

func (GetChannelSourceSslCaCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelSourceSslCaCertificate)(nil)).Elem()
}

func (i GetChannelSourceSslCaCertificateArray) ToGetChannelSourceSslCaCertificateArrayOutput() GetChannelSourceSslCaCertificateArrayOutput {
	return i.ToGetChannelSourceSslCaCertificateArrayOutputWithContext(context.Background())
}

func (i GetChannelSourceSslCaCertificateArray) ToGetChannelSourceSslCaCertificateArrayOutputWithContext(ctx context.Context) GetChannelSourceSslCaCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelSourceSslCaCertificateArrayOutput)
}

type GetChannelSourceSslCaCertificateOutput struct{ *pulumi.OutputState }

func (GetChannelSourceSslCaCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelSourceSslCaCertificate)(nil)).Elem()
}

func (o GetChannelSourceSslCaCertificateOutput) ToGetChannelSourceSslCaCertificateOutput() GetChannelSourceSslCaCertificateOutput {
	return o
}

func (o GetChannelSourceSslCaCertificateOutput) ToGetChannelSourceSslCaCertificateOutputWithContext(ctx context.Context) GetChannelSourceSslCaCertificateOutput {
	return o
}

// The type of CA certificate.
func (o GetChannelSourceSslCaCertificateOutput) CertificateType() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelSourceSslCaCertificate) string { return v.CertificateType }).(pulumi.StringOutput)
}

// The string containing the CA certificate in PEM format.
func (o GetChannelSourceSslCaCertificateOutput) Contents() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelSourceSslCaCertificate) string { return v.Contents }).(pulumi.StringOutput)
}

type GetChannelSourceSslCaCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetChannelSourceSslCaCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelSourceSslCaCertificate)(nil)).Elem()
}

func (o GetChannelSourceSslCaCertificateArrayOutput) ToGetChannelSourceSslCaCertificateArrayOutput() GetChannelSourceSslCaCertificateArrayOutput {
	return o
}

func (o GetChannelSourceSslCaCertificateArrayOutput) ToGetChannelSourceSslCaCertificateArrayOutputWithContext(ctx context.Context) GetChannelSourceSslCaCertificateArrayOutput {
	return o
}

func (o GetChannelSourceSslCaCertificateArrayOutput) Index(i pulumi.IntInput) GetChannelSourceSslCaCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChannelSourceSslCaCertificate {
		return vs[0].([]GetChannelSourceSslCaCertificate)[vs[1].(int)]
	}).(GetChannelSourceSslCaCertificateOutput)
}

type GetChannelTarget struct {
	// The username for the replication applier of the target MySQL DB System.
	ApplierUsername string `pulumi:"applierUsername"`
	// The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
	ChannelName string `pulumi:"channelName"`
	// The OCID of the source DB System.
	DbSystemId string `pulumi:"dbSystemId"`
	// The specific target identifier.
	TargetType string `pulumi:"targetType"`
}

// GetChannelTargetInput is an input type that accepts GetChannelTargetArgs and GetChannelTargetOutput values.
// You can construct a concrete instance of `GetChannelTargetInput` via:
//
//          GetChannelTargetArgs{...}
type GetChannelTargetInput interface {
	pulumi.Input

	ToGetChannelTargetOutput() GetChannelTargetOutput
	ToGetChannelTargetOutputWithContext(context.Context) GetChannelTargetOutput
}

type GetChannelTargetArgs struct {
	// The username for the replication applier of the target MySQL DB System.
	ApplierUsername pulumi.StringInput `pulumi:"applierUsername"`
	// The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// The OCID of the source DB System.
	DbSystemId pulumi.StringInput `pulumi:"dbSystemId"`
	// The specific target identifier.
	TargetType pulumi.StringInput `pulumi:"targetType"`
}

func (GetChannelTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelTarget)(nil)).Elem()
}

func (i GetChannelTargetArgs) ToGetChannelTargetOutput() GetChannelTargetOutput {
	return i.ToGetChannelTargetOutputWithContext(context.Background())
}

func (i GetChannelTargetArgs) ToGetChannelTargetOutputWithContext(ctx context.Context) GetChannelTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelTargetOutput)
}

// GetChannelTargetArrayInput is an input type that accepts GetChannelTargetArray and GetChannelTargetArrayOutput values.
// You can construct a concrete instance of `GetChannelTargetArrayInput` via:
//
//          GetChannelTargetArray{ GetChannelTargetArgs{...} }
type GetChannelTargetArrayInput interface {
	pulumi.Input

	ToGetChannelTargetArrayOutput() GetChannelTargetArrayOutput
	ToGetChannelTargetArrayOutputWithContext(context.Context) GetChannelTargetArrayOutput
}

type GetChannelTargetArray []GetChannelTargetInput

func (GetChannelTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelTarget)(nil)).Elem()
}

func (i GetChannelTargetArray) ToGetChannelTargetArrayOutput() GetChannelTargetArrayOutput {
	return i.ToGetChannelTargetArrayOutputWithContext(context.Background())
}

func (i GetChannelTargetArray) ToGetChannelTargetArrayOutputWithContext(ctx context.Context) GetChannelTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelTargetArrayOutput)
}

type GetChannelTargetOutput struct{ *pulumi.OutputState }

func (GetChannelTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelTarget)(nil)).Elem()
}

func (o GetChannelTargetOutput) ToGetChannelTargetOutput() GetChannelTargetOutput {
	return o
}

func (o GetChannelTargetOutput) ToGetChannelTargetOutputWithContext(ctx context.Context) GetChannelTargetOutput {
	return o
}

// The username for the replication applier of the target MySQL DB System.
func (o GetChannelTargetOutput) ApplierUsername() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelTarget) string { return v.ApplierUsername }).(pulumi.StringOutput)
}

// The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
func (o GetChannelTargetOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelTarget) string { return v.ChannelName }).(pulumi.StringOutput)
}

// The OCID of the source DB System.
func (o GetChannelTargetOutput) DbSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelTarget) string { return v.DbSystemId }).(pulumi.StringOutput)
}

// The specific target identifier.
func (o GetChannelTargetOutput) TargetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelTarget) string { return v.TargetType }).(pulumi.StringOutput)
}

type GetChannelTargetArrayOutput struct{ *pulumi.OutputState }

func (GetChannelTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelTarget)(nil)).Elem()
}

func (o GetChannelTargetArrayOutput) ToGetChannelTargetArrayOutput() GetChannelTargetArrayOutput {
	return o
}

func (o GetChannelTargetArrayOutput) ToGetChannelTargetArrayOutputWithContext(ctx context.Context) GetChannelTargetArrayOutput {
	return o
}

func (o GetChannelTargetArrayOutput) Index(i pulumi.IntInput) GetChannelTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChannelTarget {
		return vs[0].([]GetChannelTarget)[vs[1].(int)]
	}).(GetChannelTargetOutput)
}

type GetChannelsChannel struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// User provided description of the Channel.
	Description string `pulumi:"description"`
	// A filter to return only the resource matching the given display name exactly.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the Channel.
	Id string `pulumi:"id"`
	// If true, returns only Channels that are enabled. If false, returns only Channels that are disabled.
	IsEnabled bool `pulumi:"isEnabled"`
	// A message describing the state of the Channel.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Parameters detailing how to provision the source for the given Channel.
	Sources []GetChannelsChannelSource `pulumi:"sources"`
	// The LifecycleState of the Channel.
	State string `pulumi:"state"`
	// Details about the Channel target.
	Targets []GetChannelsChannelTarget `pulumi:"targets"`
	// The date and time the Channel was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeCreated string `pulumi:"timeCreated"`
	// The time the Channel was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetChannelsChannelInput is an input type that accepts GetChannelsChannelArgs and GetChannelsChannelOutput values.
// You can construct a concrete instance of `GetChannelsChannelInput` via:
//
//          GetChannelsChannelArgs{...}
type GetChannelsChannelInput interface {
	pulumi.Input

	ToGetChannelsChannelOutput() GetChannelsChannelOutput
	ToGetChannelsChannelOutputWithContext(context.Context) GetChannelsChannelOutput
}

type GetChannelsChannelArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// User provided description of the Channel.
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only the resource matching the given display name exactly.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The OCID of the Channel.
	Id pulumi.StringInput `pulumi:"id"`
	// If true, returns only Channels that are enabled. If false, returns only Channels that are disabled.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// A message describing the state of the Channel.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// Parameters detailing how to provision the source for the given Channel.
	Sources GetChannelsChannelSourceArrayInput `pulumi:"sources"`
	// The LifecycleState of the Channel.
	State pulumi.StringInput `pulumi:"state"`
	// Details about the Channel target.
	Targets GetChannelsChannelTargetArrayInput `pulumi:"targets"`
	// The date and time the Channel was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the Channel was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetChannelsChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelsChannel)(nil)).Elem()
}

func (i GetChannelsChannelArgs) ToGetChannelsChannelOutput() GetChannelsChannelOutput {
	return i.ToGetChannelsChannelOutputWithContext(context.Background())
}

func (i GetChannelsChannelArgs) ToGetChannelsChannelOutputWithContext(ctx context.Context) GetChannelsChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelsChannelOutput)
}

// GetChannelsChannelArrayInput is an input type that accepts GetChannelsChannelArray and GetChannelsChannelArrayOutput values.
// You can construct a concrete instance of `GetChannelsChannelArrayInput` via:
//
//          GetChannelsChannelArray{ GetChannelsChannelArgs{...} }
type GetChannelsChannelArrayInput interface {
	pulumi.Input

	ToGetChannelsChannelArrayOutput() GetChannelsChannelArrayOutput
	ToGetChannelsChannelArrayOutputWithContext(context.Context) GetChannelsChannelArrayOutput
}

type GetChannelsChannelArray []GetChannelsChannelInput

func (GetChannelsChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelsChannel)(nil)).Elem()
}

func (i GetChannelsChannelArray) ToGetChannelsChannelArrayOutput() GetChannelsChannelArrayOutput {
	return i.ToGetChannelsChannelArrayOutputWithContext(context.Background())
}

func (i GetChannelsChannelArray) ToGetChannelsChannelArrayOutputWithContext(ctx context.Context) GetChannelsChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelsChannelArrayOutput)
}

type GetChannelsChannelOutput struct{ *pulumi.OutputState }

func (GetChannelsChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelsChannel)(nil)).Elem()
}

func (o GetChannelsChannelOutput) ToGetChannelsChannelOutput() GetChannelsChannelOutput {
	return o
}

func (o GetChannelsChannelOutput) ToGetChannelsChannelOutputWithContext(ctx context.Context) GetChannelsChannelOutput {
	return o
}

// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetChannelsChannelOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannel) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetChannelsChannelOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetChannelsChannel) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// User provided description of the Channel.
func (o GetChannelsChannelOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannel) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only the resource matching the given display name exactly.
func (o GetChannelsChannelOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannel) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetChannelsChannelOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetChannelsChannel) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The OCID of the Channel.
func (o GetChannelsChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannel) string { return v.Id }).(pulumi.StringOutput)
}

// If true, returns only Channels that are enabled. If false, returns only Channels that are disabled.
func (o GetChannelsChannelOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetChannelsChannel) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// A message describing the state of the Channel.
func (o GetChannelsChannelOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannel) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Parameters detailing how to provision the source for the given Channel.
func (o GetChannelsChannelOutput) Sources() GetChannelsChannelSourceArrayOutput {
	return o.ApplyT(func(v GetChannelsChannel) []GetChannelsChannelSource { return v.Sources }).(GetChannelsChannelSourceArrayOutput)
}

// The LifecycleState of the Channel.
func (o GetChannelsChannelOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannel) string { return v.State }).(pulumi.StringOutput)
}

// Details about the Channel target.
func (o GetChannelsChannelOutput) Targets() GetChannelsChannelTargetArrayOutput {
	return o.ApplyT(func(v GetChannelsChannel) []GetChannelsChannelTarget { return v.Targets }).(GetChannelsChannelTargetArrayOutput)
}

// The date and time the Channel was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o GetChannelsChannelOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannel) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the Channel was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o GetChannelsChannelOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannel) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetChannelsChannelArrayOutput struct{ *pulumi.OutputState }

func (GetChannelsChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelsChannel)(nil)).Elem()
}

func (o GetChannelsChannelArrayOutput) ToGetChannelsChannelArrayOutput() GetChannelsChannelArrayOutput {
	return o
}

func (o GetChannelsChannelArrayOutput) ToGetChannelsChannelArrayOutputWithContext(ctx context.Context) GetChannelsChannelArrayOutput {
	return o
}

func (o GetChannelsChannelArrayOutput) Index(i pulumi.IntInput) GetChannelsChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChannelsChannel {
		return vs[0].([]GetChannelsChannel)[vs[1].(int)]
	}).(GetChannelsChannelOutput)
}

type GetChannelsChannelSource struct {
	// The network address of the MySQL instance.
	Hostname string `pulumi:"hostname"`
	Password string `pulumi:"password"`
	// The port the source MySQL instance listens on.
	Port int `pulumi:"port"`
	// The specific source identifier.
	SourceType string `pulumi:"sourceType"`
	// The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
	SslCaCertificates []GetChannelsChannelSourceSslCaCertificate `pulumi:"sslCaCertificates"`
	// The SSL mode of the Channel.
	SslMode string `pulumi:"sslMode"`
	// The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
	Username string `pulumi:"username"`
}

// GetChannelsChannelSourceInput is an input type that accepts GetChannelsChannelSourceArgs and GetChannelsChannelSourceOutput values.
// You can construct a concrete instance of `GetChannelsChannelSourceInput` via:
//
//          GetChannelsChannelSourceArgs{...}
type GetChannelsChannelSourceInput interface {
	pulumi.Input

	ToGetChannelsChannelSourceOutput() GetChannelsChannelSourceOutput
	ToGetChannelsChannelSourceOutputWithContext(context.Context) GetChannelsChannelSourceOutput
}

type GetChannelsChannelSourceArgs struct {
	// The network address of the MySQL instance.
	Hostname pulumi.StringInput `pulumi:"hostname"`
	Password pulumi.StringInput `pulumi:"password"`
	// The port the source MySQL instance listens on.
	Port pulumi.IntInput `pulumi:"port"`
	// The specific source identifier.
	SourceType pulumi.StringInput `pulumi:"sourceType"`
	// The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
	SslCaCertificates GetChannelsChannelSourceSslCaCertificateArrayInput `pulumi:"sslCaCertificates"`
	// The SSL mode of the Channel.
	SslMode pulumi.StringInput `pulumi:"sslMode"`
	// The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetChannelsChannelSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelsChannelSource)(nil)).Elem()
}

func (i GetChannelsChannelSourceArgs) ToGetChannelsChannelSourceOutput() GetChannelsChannelSourceOutput {
	return i.ToGetChannelsChannelSourceOutputWithContext(context.Background())
}

func (i GetChannelsChannelSourceArgs) ToGetChannelsChannelSourceOutputWithContext(ctx context.Context) GetChannelsChannelSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelsChannelSourceOutput)
}

// GetChannelsChannelSourceArrayInput is an input type that accepts GetChannelsChannelSourceArray and GetChannelsChannelSourceArrayOutput values.
// You can construct a concrete instance of `GetChannelsChannelSourceArrayInput` via:
//
//          GetChannelsChannelSourceArray{ GetChannelsChannelSourceArgs{...} }
type GetChannelsChannelSourceArrayInput interface {
	pulumi.Input

	ToGetChannelsChannelSourceArrayOutput() GetChannelsChannelSourceArrayOutput
	ToGetChannelsChannelSourceArrayOutputWithContext(context.Context) GetChannelsChannelSourceArrayOutput
}

type GetChannelsChannelSourceArray []GetChannelsChannelSourceInput

func (GetChannelsChannelSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelsChannelSource)(nil)).Elem()
}

func (i GetChannelsChannelSourceArray) ToGetChannelsChannelSourceArrayOutput() GetChannelsChannelSourceArrayOutput {
	return i.ToGetChannelsChannelSourceArrayOutputWithContext(context.Background())
}

func (i GetChannelsChannelSourceArray) ToGetChannelsChannelSourceArrayOutputWithContext(ctx context.Context) GetChannelsChannelSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelsChannelSourceArrayOutput)
}

type GetChannelsChannelSourceOutput struct{ *pulumi.OutputState }

func (GetChannelsChannelSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelsChannelSource)(nil)).Elem()
}

func (o GetChannelsChannelSourceOutput) ToGetChannelsChannelSourceOutput() GetChannelsChannelSourceOutput {
	return o
}

func (o GetChannelsChannelSourceOutput) ToGetChannelsChannelSourceOutputWithContext(ctx context.Context) GetChannelsChannelSourceOutput {
	return o
}

// The network address of the MySQL instance.
func (o GetChannelsChannelSourceOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannelSource) string { return v.Hostname }).(pulumi.StringOutput)
}

func (o GetChannelsChannelSourceOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannelSource) string { return v.Password }).(pulumi.StringOutput)
}

// The port the source MySQL instance listens on.
func (o GetChannelsChannelSourceOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetChannelsChannelSource) int { return v.Port }).(pulumi.IntOutput)
}

// The specific source identifier.
func (o GetChannelsChannelSourceOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannelSource) string { return v.SourceType }).(pulumi.StringOutput)
}

// The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
func (o GetChannelsChannelSourceOutput) SslCaCertificates() GetChannelsChannelSourceSslCaCertificateArrayOutput {
	return o.ApplyT(func(v GetChannelsChannelSource) []GetChannelsChannelSourceSslCaCertificate {
		return v.SslCaCertificates
	}).(GetChannelsChannelSourceSslCaCertificateArrayOutput)
}

// The SSL mode of the Channel.
func (o GetChannelsChannelSourceOutput) SslMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannelSource) string { return v.SslMode }).(pulumi.StringOutput)
}

// The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
func (o GetChannelsChannelSourceOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannelSource) string { return v.Username }).(pulumi.StringOutput)
}

type GetChannelsChannelSourceArrayOutput struct{ *pulumi.OutputState }

func (GetChannelsChannelSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelsChannelSource)(nil)).Elem()
}

func (o GetChannelsChannelSourceArrayOutput) ToGetChannelsChannelSourceArrayOutput() GetChannelsChannelSourceArrayOutput {
	return o
}

func (o GetChannelsChannelSourceArrayOutput) ToGetChannelsChannelSourceArrayOutputWithContext(ctx context.Context) GetChannelsChannelSourceArrayOutput {
	return o
}

func (o GetChannelsChannelSourceArrayOutput) Index(i pulumi.IntInput) GetChannelsChannelSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChannelsChannelSource {
		return vs[0].([]GetChannelsChannelSource)[vs[1].(int)]
	}).(GetChannelsChannelSourceOutput)
}

type GetChannelsChannelSourceSslCaCertificate struct {
	// The type of CA certificate.
	CertificateType string `pulumi:"certificateType"`
	// The string containing the CA certificate in PEM format.
	Contents string `pulumi:"contents"`
}

// GetChannelsChannelSourceSslCaCertificateInput is an input type that accepts GetChannelsChannelSourceSslCaCertificateArgs and GetChannelsChannelSourceSslCaCertificateOutput values.
// You can construct a concrete instance of `GetChannelsChannelSourceSslCaCertificateInput` via:
//
//          GetChannelsChannelSourceSslCaCertificateArgs{...}
type GetChannelsChannelSourceSslCaCertificateInput interface {
	pulumi.Input

	ToGetChannelsChannelSourceSslCaCertificateOutput() GetChannelsChannelSourceSslCaCertificateOutput
	ToGetChannelsChannelSourceSslCaCertificateOutputWithContext(context.Context) GetChannelsChannelSourceSslCaCertificateOutput
}

type GetChannelsChannelSourceSslCaCertificateArgs struct {
	// The type of CA certificate.
	CertificateType pulumi.StringInput `pulumi:"certificateType"`
	// The string containing the CA certificate in PEM format.
	Contents pulumi.StringInput `pulumi:"contents"`
}

func (GetChannelsChannelSourceSslCaCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelsChannelSourceSslCaCertificate)(nil)).Elem()
}

func (i GetChannelsChannelSourceSslCaCertificateArgs) ToGetChannelsChannelSourceSslCaCertificateOutput() GetChannelsChannelSourceSslCaCertificateOutput {
	return i.ToGetChannelsChannelSourceSslCaCertificateOutputWithContext(context.Background())
}

func (i GetChannelsChannelSourceSslCaCertificateArgs) ToGetChannelsChannelSourceSslCaCertificateOutputWithContext(ctx context.Context) GetChannelsChannelSourceSslCaCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelsChannelSourceSslCaCertificateOutput)
}

// GetChannelsChannelSourceSslCaCertificateArrayInput is an input type that accepts GetChannelsChannelSourceSslCaCertificateArray and GetChannelsChannelSourceSslCaCertificateArrayOutput values.
// You can construct a concrete instance of `GetChannelsChannelSourceSslCaCertificateArrayInput` via:
//
//          GetChannelsChannelSourceSslCaCertificateArray{ GetChannelsChannelSourceSslCaCertificateArgs{...} }
type GetChannelsChannelSourceSslCaCertificateArrayInput interface {
	pulumi.Input

	ToGetChannelsChannelSourceSslCaCertificateArrayOutput() GetChannelsChannelSourceSslCaCertificateArrayOutput
	ToGetChannelsChannelSourceSslCaCertificateArrayOutputWithContext(context.Context) GetChannelsChannelSourceSslCaCertificateArrayOutput
}

type GetChannelsChannelSourceSslCaCertificateArray []GetChannelsChannelSourceSslCaCertificateInput

func (GetChannelsChannelSourceSslCaCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelsChannelSourceSslCaCertificate)(nil)).Elem()
}

func (i GetChannelsChannelSourceSslCaCertificateArray) ToGetChannelsChannelSourceSslCaCertificateArrayOutput() GetChannelsChannelSourceSslCaCertificateArrayOutput {
	return i.ToGetChannelsChannelSourceSslCaCertificateArrayOutputWithContext(context.Background())
}

func (i GetChannelsChannelSourceSslCaCertificateArray) ToGetChannelsChannelSourceSslCaCertificateArrayOutputWithContext(ctx context.Context) GetChannelsChannelSourceSslCaCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelsChannelSourceSslCaCertificateArrayOutput)
}

type GetChannelsChannelSourceSslCaCertificateOutput struct{ *pulumi.OutputState }

func (GetChannelsChannelSourceSslCaCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelsChannelSourceSslCaCertificate)(nil)).Elem()
}

func (o GetChannelsChannelSourceSslCaCertificateOutput) ToGetChannelsChannelSourceSslCaCertificateOutput() GetChannelsChannelSourceSslCaCertificateOutput {
	return o
}

func (o GetChannelsChannelSourceSslCaCertificateOutput) ToGetChannelsChannelSourceSslCaCertificateOutputWithContext(ctx context.Context) GetChannelsChannelSourceSslCaCertificateOutput {
	return o
}

// The type of CA certificate.
func (o GetChannelsChannelSourceSslCaCertificateOutput) CertificateType() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannelSourceSslCaCertificate) string { return v.CertificateType }).(pulumi.StringOutput)
}

// The string containing the CA certificate in PEM format.
func (o GetChannelsChannelSourceSslCaCertificateOutput) Contents() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannelSourceSslCaCertificate) string { return v.Contents }).(pulumi.StringOutput)
}

type GetChannelsChannelSourceSslCaCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetChannelsChannelSourceSslCaCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelsChannelSourceSslCaCertificate)(nil)).Elem()
}

func (o GetChannelsChannelSourceSslCaCertificateArrayOutput) ToGetChannelsChannelSourceSslCaCertificateArrayOutput() GetChannelsChannelSourceSslCaCertificateArrayOutput {
	return o
}

func (o GetChannelsChannelSourceSslCaCertificateArrayOutput) ToGetChannelsChannelSourceSslCaCertificateArrayOutputWithContext(ctx context.Context) GetChannelsChannelSourceSslCaCertificateArrayOutput {
	return o
}

func (o GetChannelsChannelSourceSslCaCertificateArrayOutput) Index(i pulumi.IntInput) GetChannelsChannelSourceSslCaCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChannelsChannelSourceSslCaCertificate {
		return vs[0].([]GetChannelsChannelSourceSslCaCertificate)[vs[1].(int)]
	}).(GetChannelsChannelSourceSslCaCertificateOutput)
}

type GetChannelsChannelTarget struct {
	// The username for the replication applier of the target MySQL DB System.
	ApplierUsername string `pulumi:"applierUsername"`
	// The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
	ChannelName string `pulumi:"channelName"`
	// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId string `pulumi:"dbSystemId"`
	// The specific target identifier.
	TargetType string `pulumi:"targetType"`
}

// GetChannelsChannelTargetInput is an input type that accepts GetChannelsChannelTargetArgs and GetChannelsChannelTargetOutput values.
// You can construct a concrete instance of `GetChannelsChannelTargetInput` via:
//
//          GetChannelsChannelTargetArgs{...}
type GetChannelsChannelTargetInput interface {
	pulumi.Input

	ToGetChannelsChannelTargetOutput() GetChannelsChannelTargetOutput
	ToGetChannelsChannelTargetOutputWithContext(context.Context) GetChannelsChannelTargetOutput
}

type GetChannelsChannelTargetArgs struct {
	// The username for the replication applier of the target MySQL DB System.
	ApplierUsername pulumi.StringInput `pulumi:"applierUsername"`
	// The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId pulumi.StringInput `pulumi:"dbSystemId"`
	// The specific target identifier.
	TargetType pulumi.StringInput `pulumi:"targetType"`
}

func (GetChannelsChannelTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelsChannelTarget)(nil)).Elem()
}

func (i GetChannelsChannelTargetArgs) ToGetChannelsChannelTargetOutput() GetChannelsChannelTargetOutput {
	return i.ToGetChannelsChannelTargetOutputWithContext(context.Background())
}

func (i GetChannelsChannelTargetArgs) ToGetChannelsChannelTargetOutputWithContext(ctx context.Context) GetChannelsChannelTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelsChannelTargetOutput)
}

// GetChannelsChannelTargetArrayInput is an input type that accepts GetChannelsChannelTargetArray and GetChannelsChannelTargetArrayOutput values.
// You can construct a concrete instance of `GetChannelsChannelTargetArrayInput` via:
//
//          GetChannelsChannelTargetArray{ GetChannelsChannelTargetArgs{...} }
type GetChannelsChannelTargetArrayInput interface {
	pulumi.Input

	ToGetChannelsChannelTargetArrayOutput() GetChannelsChannelTargetArrayOutput
	ToGetChannelsChannelTargetArrayOutputWithContext(context.Context) GetChannelsChannelTargetArrayOutput
}

type GetChannelsChannelTargetArray []GetChannelsChannelTargetInput

func (GetChannelsChannelTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelsChannelTarget)(nil)).Elem()
}

func (i GetChannelsChannelTargetArray) ToGetChannelsChannelTargetArrayOutput() GetChannelsChannelTargetArrayOutput {
	return i.ToGetChannelsChannelTargetArrayOutputWithContext(context.Background())
}

func (i GetChannelsChannelTargetArray) ToGetChannelsChannelTargetArrayOutputWithContext(ctx context.Context) GetChannelsChannelTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelsChannelTargetArrayOutput)
}

type GetChannelsChannelTargetOutput struct{ *pulumi.OutputState }

func (GetChannelsChannelTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelsChannelTarget)(nil)).Elem()
}

func (o GetChannelsChannelTargetOutput) ToGetChannelsChannelTargetOutput() GetChannelsChannelTargetOutput {
	return o
}

func (o GetChannelsChannelTargetOutput) ToGetChannelsChannelTargetOutputWithContext(ctx context.Context) GetChannelsChannelTargetOutput {
	return o
}

// The username for the replication applier of the target MySQL DB System.
func (o GetChannelsChannelTargetOutput) ApplierUsername() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannelTarget) string { return v.ApplierUsername }).(pulumi.StringOutput)
}

// The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
func (o GetChannelsChannelTargetOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannelTarget) string { return v.ChannelName }).(pulumi.StringOutput)
}

// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetChannelsChannelTargetOutput) DbSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannelTarget) string { return v.DbSystemId }).(pulumi.StringOutput)
}

// The specific target identifier.
func (o GetChannelsChannelTargetOutput) TargetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannelTarget) string { return v.TargetType }).(pulumi.StringOutput)
}

type GetChannelsChannelTargetArrayOutput struct{ *pulumi.OutputState }

func (GetChannelsChannelTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelsChannelTarget)(nil)).Elem()
}

func (o GetChannelsChannelTargetArrayOutput) ToGetChannelsChannelTargetArrayOutput() GetChannelsChannelTargetArrayOutput {
	return o
}

func (o GetChannelsChannelTargetArrayOutput) ToGetChannelsChannelTargetArrayOutputWithContext(ctx context.Context) GetChannelsChannelTargetArrayOutput {
	return o
}

func (o GetChannelsChannelTargetArrayOutput) Index(i pulumi.IntInput) GetChannelsChannelTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChannelsChannelTarget {
		return vs[0].([]GetChannelsChannelTarget)[vs[1].(int)]
	}).(GetChannelsChannelTargetOutput)
}

type GetChannelsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetChannelsFilterInput is an input type that accepts GetChannelsFilterArgs and GetChannelsFilterOutput values.
// You can construct a concrete instance of `GetChannelsFilterInput` via:
//
//          GetChannelsFilterArgs{...}
type GetChannelsFilterInput interface {
	pulumi.Input

	ToGetChannelsFilterOutput() GetChannelsFilterOutput
	ToGetChannelsFilterOutputWithContext(context.Context) GetChannelsFilterOutput
}

type GetChannelsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetChannelsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelsFilter)(nil)).Elem()
}

func (i GetChannelsFilterArgs) ToGetChannelsFilterOutput() GetChannelsFilterOutput {
	return i.ToGetChannelsFilterOutputWithContext(context.Background())
}

func (i GetChannelsFilterArgs) ToGetChannelsFilterOutputWithContext(ctx context.Context) GetChannelsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelsFilterOutput)
}

// GetChannelsFilterArrayInput is an input type that accepts GetChannelsFilterArray and GetChannelsFilterArrayOutput values.
// You can construct a concrete instance of `GetChannelsFilterArrayInput` via:
//
//          GetChannelsFilterArray{ GetChannelsFilterArgs{...} }
type GetChannelsFilterArrayInput interface {
	pulumi.Input

	ToGetChannelsFilterArrayOutput() GetChannelsFilterArrayOutput
	ToGetChannelsFilterArrayOutputWithContext(context.Context) GetChannelsFilterArrayOutput
}

type GetChannelsFilterArray []GetChannelsFilterInput

func (GetChannelsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelsFilter)(nil)).Elem()
}

func (i GetChannelsFilterArray) ToGetChannelsFilterArrayOutput() GetChannelsFilterArrayOutput {
	return i.ToGetChannelsFilterArrayOutputWithContext(context.Background())
}

func (i GetChannelsFilterArray) ToGetChannelsFilterArrayOutputWithContext(ctx context.Context) GetChannelsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelsFilterArrayOutput)
}

type GetChannelsFilterOutput struct{ *pulumi.OutputState }

func (GetChannelsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelsFilter)(nil)).Elem()
}

func (o GetChannelsFilterOutput) ToGetChannelsFilterOutput() GetChannelsFilterOutput {
	return o
}

func (o GetChannelsFilterOutput) ToGetChannelsFilterOutputWithContext(ctx context.Context) GetChannelsFilterOutput {
	return o
}

func (o GetChannelsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetChannelsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetChannelsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetChannelsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetChannelsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetChannelsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetChannelsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelsFilter)(nil)).Elem()
}

func (o GetChannelsFilterArrayOutput) ToGetChannelsFilterArrayOutput() GetChannelsFilterArrayOutput {
	return o
}

func (o GetChannelsFilterArrayOutput) ToGetChannelsFilterArrayOutputWithContext(ctx context.Context) GetChannelsFilterArrayOutput {
	return o
}

func (o GetChannelsFilterArrayOutput) Index(i pulumi.IntInput) GetChannelsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChannelsFilter {
		return vs[0].([]GetChannelsFilter)[vs[1].(int)]
	}).(GetChannelsFilterOutput)
}

type GetHeatWaveClusterClusterNode struct {
	// The ID of the node within MySQL HeatWave cluster.
	NodeId string `pulumi:"nodeId"`
	// The current state of the HeatWave cluster.
	State string `pulumi:"state"`
	// The date and time the HeatWave cluster was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeCreated string `pulumi:"timeCreated"`
	// The time the HeatWave cluster was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetHeatWaveClusterClusterNodeInput is an input type that accepts GetHeatWaveClusterClusterNodeArgs and GetHeatWaveClusterClusterNodeOutput values.
// You can construct a concrete instance of `GetHeatWaveClusterClusterNodeInput` via:
//
//          GetHeatWaveClusterClusterNodeArgs{...}
type GetHeatWaveClusterClusterNodeInput interface {
	pulumi.Input

	ToGetHeatWaveClusterClusterNodeOutput() GetHeatWaveClusterClusterNodeOutput
	ToGetHeatWaveClusterClusterNodeOutputWithContext(context.Context) GetHeatWaveClusterClusterNodeOutput
}

type GetHeatWaveClusterClusterNodeArgs struct {
	// The ID of the node within MySQL HeatWave cluster.
	NodeId pulumi.StringInput `pulumi:"nodeId"`
	// The current state of the HeatWave cluster.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the HeatWave cluster was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the HeatWave cluster was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetHeatWaveClusterClusterNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHeatWaveClusterClusterNode)(nil)).Elem()
}

func (i GetHeatWaveClusterClusterNodeArgs) ToGetHeatWaveClusterClusterNodeOutput() GetHeatWaveClusterClusterNodeOutput {
	return i.ToGetHeatWaveClusterClusterNodeOutputWithContext(context.Background())
}

func (i GetHeatWaveClusterClusterNodeArgs) ToGetHeatWaveClusterClusterNodeOutputWithContext(ctx context.Context) GetHeatWaveClusterClusterNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHeatWaveClusterClusterNodeOutput)
}

// GetHeatWaveClusterClusterNodeArrayInput is an input type that accepts GetHeatWaveClusterClusterNodeArray and GetHeatWaveClusterClusterNodeArrayOutput values.
// You can construct a concrete instance of `GetHeatWaveClusterClusterNodeArrayInput` via:
//
//          GetHeatWaveClusterClusterNodeArray{ GetHeatWaveClusterClusterNodeArgs{...} }
type GetHeatWaveClusterClusterNodeArrayInput interface {
	pulumi.Input

	ToGetHeatWaveClusterClusterNodeArrayOutput() GetHeatWaveClusterClusterNodeArrayOutput
	ToGetHeatWaveClusterClusterNodeArrayOutputWithContext(context.Context) GetHeatWaveClusterClusterNodeArrayOutput
}

type GetHeatWaveClusterClusterNodeArray []GetHeatWaveClusterClusterNodeInput

func (GetHeatWaveClusterClusterNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHeatWaveClusterClusterNode)(nil)).Elem()
}

func (i GetHeatWaveClusterClusterNodeArray) ToGetHeatWaveClusterClusterNodeArrayOutput() GetHeatWaveClusterClusterNodeArrayOutput {
	return i.ToGetHeatWaveClusterClusterNodeArrayOutputWithContext(context.Background())
}

func (i GetHeatWaveClusterClusterNodeArray) ToGetHeatWaveClusterClusterNodeArrayOutputWithContext(ctx context.Context) GetHeatWaveClusterClusterNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHeatWaveClusterClusterNodeArrayOutput)
}

type GetHeatWaveClusterClusterNodeOutput struct{ *pulumi.OutputState }

func (GetHeatWaveClusterClusterNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHeatWaveClusterClusterNode)(nil)).Elem()
}

func (o GetHeatWaveClusterClusterNodeOutput) ToGetHeatWaveClusterClusterNodeOutput() GetHeatWaveClusterClusterNodeOutput {
	return o
}

func (o GetHeatWaveClusterClusterNodeOutput) ToGetHeatWaveClusterClusterNodeOutputWithContext(ctx context.Context) GetHeatWaveClusterClusterNodeOutput {
	return o
}

// The ID of the node within MySQL HeatWave cluster.
func (o GetHeatWaveClusterClusterNodeOutput) NodeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHeatWaveClusterClusterNode) string { return v.NodeId }).(pulumi.StringOutput)
}

// The current state of the HeatWave cluster.
func (o GetHeatWaveClusterClusterNodeOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetHeatWaveClusterClusterNode) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the HeatWave cluster was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o GetHeatWaveClusterClusterNodeOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetHeatWaveClusterClusterNode) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the HeatWave cluster was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o GetHeatWaveClusterClusterNodeOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetHeatWaveClusterClusterNode) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetHeatWaveClusterClusterNodeArrayOutput struct{ *pulumi.OutputState }

func (GetHeatWaveClusterClusterNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHeatWaveClusterClusterNode)(nil)).Elem()
}

func (o GetHeatWaveClusterClusterNodeArrayOutput) ToGetHeatWaveClusterClusterNodeArrayOutput() GetHeatWaveClusterClusterNodeArrayOutput {
	return o
}

func (o GetHeatWaveClusterClusterNodeArrayOutput) ToGetHeatWaveClusterClusterNodeArrayOutputWithContext(ctx context.Context) GetHeatWaveClusterClusterNodeArrayOutput {
	return o
}

func (o GetHeatWaveClusterClusterNodeArrayOutput) Index(i pulumi.IntInput) GetHeatWaveClusterClusterNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHeatWaveClusterClusterNode {
		return vs[0].([]GetHeatWaveClusterClusterNode)[vs[1].(int)]
	}).(GetHeatWaveClusterClusterNodeOutput)
}

type GetMysqlBackupDbSystemSnapshot struct {
	// The username for the administrative user.
	AdminUsername string `pulumi:"adminUsername"`
	// The Availability Domain where the primary DB System should be located.
	AvailabilityDomain string `pulumi:"availabilityDomain"`
	// The Backup policy for the DB System.
	BackupPolicies []GetMysqlBackupDbSystemSnapshotBackupPolicy `pulumi:"backupPolicies"`
	// The OCID of the compartment the DB System belongs in.
	CompartmentId string `pulumi:"compartmentId"`
	// The OCID of the Configuration to be used for Instances in this DB System.
	ConfigurationId string `pulumi:"configurationId"`
	// Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
	CrashRecovery string `pulumi:"crashRecovery"`
	// Initial size of the data volume in GiBs that will be created and attached.
	DataStorageSizeInGb int `pulumi:"dataStorageSizeInGb"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The Deletion policy for the DB System.
	DeletionPolicies []GetMysqlBackupDbSystemSnapshotDeletionPolicy `pulumi:"deletionPolicies"`
	// A user-supplied description for the backup.
	Description string `pulumi:"description"`
	// A user-supplied display name for the backup.
	DisplayName string `pulumi:"displayName"`
	// The network endpoints available for this DB System.
	Endpoints []GetMysqlBackupDbSystemSnapshotEndpoint `pulumi:"endpoints"`
	// The name of the Fault Domain the DB System is located in.
	FaultDomain string `pulumi:"faultDomain"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The hostname for the primary endpoint of the DB System. Used for DNS. The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com"). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
	HostnameLabel string `pulumi:"hostnameLabel"`
	// OCID of the backup itself
	Id string `pulumi:"id"`
	// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
	IpAddress string `pulumi:"ipAddress"`
	// Specifies if the DB System is highly available.
	IsHighlyAvailable bool `pulumi:"isHighlyAvailable"`
	// The Maintenance Policy for the DB System.
	Maintenances []GetMysqlBackupDbSystemSnapshotMaintenance `pulumi:"maintenances"`
	// The MySQL server version of the DB System used for backup.
	MysqlVersion string `pulumi:"mysqlVersion"`
	// The port for primary endpoint of the DB System to listen on.
	Port int `pulumi:"port"`
	// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
	PortX int `pulumi:"portX"`
	// The shape of the DB System instance used for backup.
	ShapeName string `pulumi:"shapeName"`
	// The OCID of the subnet the DB System is associated with.
	SubnetId string `pulumi:"subnetId"`
}

// GetMysqlBackupDbSystemSnapshotInput is an input type that accepts GetMysqlBackupDbSystemSnapshotArgs and GetMysqlBackupDbSystemSnapshotOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotInput` via:
//
//          GetMysqlBackupDbSystemSnapshotArgs{...}
type GetMysqlBackupDbSystemSnapshotInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotOutput() GetMysqlBackupDbSystemSnapshotOutput
	ToGetMysqlBackupDbSystemSnapshotOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotOutput
}

type GetMysqlBackupDbSystemSnapshotArgs struct {
	// The username for the administrative user.
	AdminUsername pulumi.StringInput `pulumi:"adminUsername"`
	// The Availability Domain where the primary DB System should be located.
	AvailabilityDomain pulumi.StringInput `pulumi:"availabilityDomain"`
	// The Backup policy for the DB System.
	BackupPolicies GetMysqlBackupDbSystemSnapshotBackupPolicyArrayInput `pulumi:"backupPolicies"`
	// The OCID of the compartment the DB System belongs in.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The OCID of the Configuration to be used for Instances in this DB System.
	ConfigurationId pulumi.StringInput `pulumi:"configurationId"`
	// Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
	CrashRecovery pulumi.StringInput `pulumi:"crashRecovery"`
	// Initial size of the data volume in GiBs that will be created and attached.
	DataStorageSizeInGb pulumi.IntInput `pulumi:"dataStorageSizeInGb"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// The Deletion policy for the DB System.
	DeletionPolicies GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayInput `pulumi:"deletionPolicies"`
	// A user-supplied description for the backup.
	Description pulumi.StringInput `pulumi:"description"`
	// A user-supplied display name for the backup.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The network endpoints available for this DB System.
	Endpoints GetMysqlBackupDbSystemSnapshotEndpointArrayInput `pulumi:"endpoints"`
	// The name of the Fault Domain the DB System is located in.
	FaultDomain pulumi.StringInput `pulumi:"faultDomain"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The hostname for the primary endpoint of the DB System. Used for DNS. The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com"). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
	HostnameLabel pulumi.StringInput `pulumi:"hostnameLabel"`
	// OCID of the backup itself
	Id pulumi.StringInput `pulumi:"id"`
	// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// Specifies if the DB System is highly available.
	IsHighlyAvailable pulumi.BoolInput `pulumi:"isHighlyAvailable"`
	// The Maintenance Policy for the DB System.
	Maintenances GetMysqlBackupDbSystemSnapshotMaintenanceArrayInput `pulumi:"maintenances"`
	// The MySQL server version of the DB System used for backup.
	MysqlVersion pulumi.StringInput `pulumi:"mysqlVersion"`
	// The port for primary endpoint of the DB System to listen on.
	Port pulumi.IntInput `pulumi:"port"`
	// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
	PortX pulumi.IntInput `pulumi:"portX"`
	// The shape of the DB System instance used for backup.
	ShapeName pulumi.StringInput `pulumi:"shapeName"`
	// The OCID of the subnet the DB System is associated with.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (GetMysqlBackupDbSystemSnapshotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshot)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotArgs) ToGetMysqlBackupDbSystemSnapshotOutput() GetMysqlBackupDbSystemSnapshotOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotArgs) ToGetMysqlBackupDbSystemSnapshotOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotOutput)
}

// GetMysqlBackupDbSystemSnapshotArrayInput is an input type that accepts GetMysqlBackupDbSystemSnapshotArray and GetMysqlBackupDbSystemSnapshotArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotArrayInput` via:
//
//          GetMysqlBackupDbSystemSnapshotArray{ GetMysqlBackupDbSystemSnapshotArgs{...} }
type GetMysqlBackupDbSystemSnapshotArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotArrayOutput() GetMysqlBackupDbSystemSnapshotArrayOutput
	ToGetMysqlBackupDbSystemSnapshotArrayOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotArrayOutput
}

type GetMysqlBackupDbSystemSnapshotArray []GetMysqlBackupDbSystemSnapshotInput

func (GetMysqlBackupDbSystemSnapshotArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshot)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotArray) ToGetMysqlBackupDbSystemSnapshotArrayOutput() GetMysqlBackupDbSystemSnapshotArrayOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotArray) ToGetMysqlBackupDbSystemSnapshotArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotArrayOutput)
}

type GetMysqlBackupDbSystemSnapshotOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshot)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotOutput) ToGetMysqlBackupDbSystemSnapshotOutput() GetMysqlBackupDbSystemSnapshotOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotOutput) ToGetMysqlBackupDbSystemSnapshotOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotOutput {
	return o
}

// The username for the administrative user.
func (o GetMysqlBackupDbSystemSnapshotOutput) AdminUsername() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) string { return v.AdminUsername }).(pulumi.StringOutput)
}

// The Availability Domain where the primary DB System should be located.
func (o GetMysqlBackupDbSystemSnapshotOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) string { return v.AvailabilityDomain }).(pulumi.StringOutput)
}

// The Backup policy for the DB System.
func (o GetMysqlBackupDbSystemSnapshotOutput) BackupPolicies() GetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) []GetMysqlBackupDbSystemSnapshotBackupPolicy {
		return v.BackupPolicies
	}).(GetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput)
}

// The OCID of the compartment the DB System belongs in.
func (o GetMysqlBackupDbSystemSnapshotOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The OCID of the Configuration to be used for Instances in this DB System.
func (o GetMysqlBackupDbSystemSnapshotOutput) ConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) string { return v.ConfigurationId }).(pulumi.StringOutput)
}

// Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
func (o GetMysqlBackupDbSystemSnapshotOutput) CrashRecovery() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) string { return v.CrashRecovery }).(pulumi.StringOutput)
}

// Initial size of the data volume in GiBs that will be created and attached.
func (o GetMysqlBackupDbSystemSnapshotOutput) DataStorageSizeInGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) int { return v.DataStorageSizeInGb }).(pulumi.IntOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetMysqlBackupDbSystemSnapshotOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// The Deletion policy for the DB System.
func (o GetMysqlBackupDbSystemSnapshotOutput) DeletionPolicies() GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) []GetMysqlBackupDbSystemSnapshotDeletionPolicy {
		return v.DeletionPolicies
	}).(GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput)
}

// A user-supplied description for the backup.
func (o GetMysqlBackupDbSystemSnapshotOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) string { return v.Description }).(pulumi.StringOutput)
}

// A user-supplied display name for the backup.
func (o GetMysqlBackupDbSystemSnapshotOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The network endpoints available for this DB System.
func (o GetMysqlBackupDbSystemSnapshotOutput) Endpoints() GetMysqlBackupDbSystemSnapshotEndpointArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) []GetMysqlBackupDbSystemSnapshotEndpoint { return v.Endpoints }).(GetMysqlBackupDbSystemSnapshotEndpointArrayOutput)
}

// The name of the Fault Domain the DB System is located in.
func (o GetMysqlBackupDbSystemSnapshotOutput) FaultDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) string { return v.FaultDomain }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetMysqlBackupDbSystemSnapshotOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The hostname for the primary endpoint of the DB System. Used for DNS. The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com"). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
func (o GetMysqlBackupDbSystemSnapshotOutput) HostnameLabel() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) string { return v.HostnameLabel }).(pulumi.StringOutput)
}

// OCID of the backup itself
func (o GetMysqlBackupDbSystemSnapshotOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) string { return v.Id }).(pulumi.StringOutput)
}

// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
func (o GetMysqlBackupDbSystemSnapshotOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) string { return v.IpAddress }).(pulumi.StringOutput)
}

// Specifies if the DB System is highly available.
func (o GetMysqlBackupDbSystemSnapshotOutput) IsHighlyAvailable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) bool { return v.IsHighlyAvailable }).(pulumi.BoolOutput)
}

// The Maintenance Policy for the DB System.
func (o GetMysqlBackupDbSystemSnapshotOutput) Maintenances() GetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) []GetMysqlBackupDbSystemSnapshotMaintenance {
		return v.Maintenances
	}).(GetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput)
}

// The MySQL server version of the DB System used for backup.
func (o GetMysqlBackupDbSystemSnapshotOutput) MysqlVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) string { return v.MysqlVersion }).(pulumi.StringOutput)
}

// The port for primary endpoint of the DB System to listen on.
func (o GetMysqlBackupDbSystemSnapshotOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) int { return v.Port }).(pulumi.IntOutput)
}

// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
func (o GetMysqlBackupDbSystemSnapshotOutput) PortX() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) int { return v.PortX }).(pulumi.IntOutput)
}

// The shape of the DB System instance used for backup.
func (o GetMysqlBackupDbSystemSnapshotOutput) ShapeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) string { return v.ShapeName }).(pulumi.StringOutput)
}

// The OCID of the subnet the DB System is associated with.
func (o GetMysqlBackupDbSystemSnapshotOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetMysqlBackupDbSystemSnapshotArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshot)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotArrayOutput) ToGetMysqlBackupDbSystemSnapshotArrayOutput() GetMysqlBackupDbSystemSnapshotArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotArrayOutput) ToGetMysqlBackupDbSystemSnapshotArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupDbSystemSnapshotOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupDbSystemSnapshot {
		return vs[0].([]GetMysqlBackupDbSystemSnapshot)[vs[1].(int)]
	}).(GetMysqlBackupDbSystemSnapshotOutput)
}

type GetMysqlBackupDbSystemSnapshotBackupPolicy struct {
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Specifies if PITR is enabled or disabled.
	IsEnabled bool `pulumi:"isEnabled"`
	// The PITR policy for the DB System.
	PitrPolicies []GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy `pulumi:"pitrPolicies"`
	// Number of days to retain this backup.
	RetentionInDays int `pulumi:"retentionInDays"`
	// The start time of the maintenance window.
	WindowStartTime string `pulumi:"windowStartTime"`
}

// GetMysqlBackupDbSystemSnapshotBackupPolicyInput is an input type that accepts GetMysqlBackupDbSystemSnapshotBackupPolicyArgs and GetMysqlBackupDbSystemSnapshotBackupPolicyOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotBackupPolicyInput` via:
//
//          GetMysqlBackupDbSystemSnapshotBackupPolicyArgs{...}
type GetMysqlBackupDbSystemSnapshotBackupPolicyInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotBackupPolicyOutput() GetMysqlBackupDbSystemSnapshotBackupPolicyOutput
	ToGetMysqlBackupDbSystemSnapshotBackupPolicyOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotBackupPolicyOutput
}

type GetMysqlBackupDbSystemSnapshotBackupPolicyArgs struct {
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// Specifies if PITR is enabled or disabled.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The PITR policy for the DB System.
	PitrPolicies GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayInput `pulumi:"pitrPolicies"`
	// Number of days to retain this backup.
	RetentionInDays pulumi.IntInput `pulumi:"retentionInDays"`
	// The start time of the maintenance window.
	WindowStartTime pulumi.StringInput `pulumi:"windowStartTime"`
}

func (GetMysqlBackupDbSystemSnapshotBackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotBackupPolicy)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotBackupPolicyArgs) ToGetMysqlBackupDbSystemSnapshotBackupPolicyOutput() GetMysqlBackupDbSystemSnapshotBackupPolicyOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotBackupPolicyOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotBackupPolicyArgs) ToGetMysqlBackupDbSystemSnapshotBackupPolicyOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotBackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotBackupPolicyOutput)
}

// GetMysqlBackupDbSystemSnapshotBackupPolicyArrayInput is an input type that accepts GetMysqlBackupDbSystemSnapshotBackupPolicyArray and GetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotBackupPolicyArrayInput` via:
//
//          GetMysqlBackupDbSystemSnapshotBackupPolicyArray{ GetMysqlBackupDbSystemSnapshotBackupPolicyArgs{...} }
type GetMysqlBackupDbSystemSnapshotBackupPolicyArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput() GetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput
	ToGetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput
}

type GetMysqlBackupDbSystemSnapshotBackupPolicyArray []GetMysqlBackupDbSystemSnapshotBackupPolicyInput

func (GetMysqlBackupDbSystemSnapshotBackupPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshotBackupPolicy)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotBackupPolicyArray) ToGetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput() GetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotBackupPolicyArray) ToGetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput)
}

type GetMysqlBackupDbSystemSnapshotBackupPolicyOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotBackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotBackupPolicy)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotBackupPolicyOutput) ToGetMysqlBackupDbSystemSnapshotBackupPolicyOutput() GetMysqlBackupDbSystemSnapshotBackupPolicyOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotBackupPolicyOutput) ToGetMysqlBackupDbSystemSnapshotBackupPolicyOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotBackupPolicyOutput {
	return o
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetMysqlBackupDbSystemSnapshotBackupPolicyOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotBackupPolicy) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetMysqlBackupDbSystemSnapshotBackupPolicyOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotBackupPolicy) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// Specifies if PITR is enabled or disabled.
func (o GetMysqlBackupDbSystemSnapshotBackupPolicyOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotBackupPolicy) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The PITR policy for the DB System.
func (o GetMysqlBackupDbSystemSnapshotBackupPolicyOutput) PitrPolicies() GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotBackupPolicy) []GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy {
		return v.PitrPolicies
	}).(GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput)
}

// Number of days to retain this backup.
func (o GetMysqlBackupDbSystemSnapshotBackupPolicyOutput) RetentionInDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotBackupPolicy) int { return v.RetentionInDays }).(pulumi.IntOutput)
}

// The start time of the maintenance window.
func (o GetMysqlBackupDbSystemSnapshotBackupPolicyOutput) WindowStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotBackupPolicy) string { return v.WindowStartTime }).(pulumi.StringOutput)
}

type GetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshotBackupPolicy)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput) ToGetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput() GetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput) ToGetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupDbSystemSnapshotBackupPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupDbSystemSnapshotBackupPolicy {
		return vs[0].([]GetMysqlBackupDbSystemSnapshotBackupPolicy)[vs[1].(int)]
	}).(GetMysqlBackupDbSystemSnapshotBackupPolicyOutput)
}

type GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy struct {
	// Specifies if PITR is enabled or disabled.
	IsEnabled bool `pulumi:"isEnabled"`
}

// GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyInput is an input type that accepts GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs and GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyInput` via:
//
//          GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs{...}
type GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput() GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput
	ToGetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput
}

type GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs struct {
	// Specifies if PITR is enabled or disabled.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
}

func (GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs) ToGetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput() GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs) ToGetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput)
}

// GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayInput is an input type that accepts GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArray and GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayInput` via:
//
//          GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArray{ GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs{...} }
type GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput() GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput
	ToGetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput
}

type GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArray []GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyInput

func (GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArray) ToGetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput() GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArray) ToGetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput)
}

type GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput) ToGetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput() GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput) ToGetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput {
	return o
}

// Specifies if PITR is enabled or disabled.
func (o GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

type GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput) ToGetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput() GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput) ToGetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy {
		return vs[0].([]GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy)[vs[1].(int)]
	}).(GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput)
}

type GetMysqlBackupDbSystemSnapshotDeletionPolicy struct {
	// Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
	AutomaticBackupRetention string `pulumi:"automaticBackupRetention"`
	// Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
	FinalBackup string `pulumi:"finalBackup"`
	// Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
	IsDeleteProtected bool `pulumi:"isDeleteProtected"`
}

// GetMysqlBackupDbSystemSnapshotDeletionPolicyInput is an input type that accepts GetMysqlBackupDbSystemSnapshotDeletionPolicyArgs and GetMysqlBackupDbSystemSnapshotDeletionPolicyOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotDeletionPolicyInput` via:
//
//          GetMysqlBackupDbSystemSnapshotDeletionPolicyArgs{...}
type GetMysqlBackupDbSystemSnapshotDeletionPolicyInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotDeletionPolicyOutput() GetMysqlBackupDbSystemSnapshotDeletionPolicyOutput
	ToGetMysqlBackupDbSystemSnapshotDeletionPolicyOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotDeletionPolicyOutput
}

type GetMysqlBackupDbSystemSnapshotDeletionPolicyArgs struct {
	// Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
	AutomaticBackupRetention pulumi.StringInput `pulumi:"automaticBackupRetention"`
	// Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
	FinalBackup pulumi.StringInput `pulumi:"finalBackup"`
	// Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
	IsDeleteProtected pulumi.BoolInput `pulumi:"isDeleteProtected"`
}

func (GetMysqlBackupDbSystemSnapshotDeletionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotDeletionPolicy)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotDeletionPolicyArgs) ToGetMysqlBackupDbSystemSnapshotDeletionPolicyOutput() GetMysqlBackupDbSystemSnapshotDeletionPolicyOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotDeletionPolicyOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotDeletionPolicyArgs) ToGetMysqlBackupDbSystemSnapshotDeletionPolicyOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotDeletionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotDeletionPolicyOutput)
}

// GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayInput is an input type that accepts GetMysqlBackupDbSystemSnapshotDeletionPolicyArray and GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayInput` via:
//
//          GetMysqlBackupDbSystemSnapshotDeletionPolicyArray{ GetMysqlBackupDbSystemSnapshotDeletionPolicyArgs{...} }
type GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput() GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput
	ToGetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput
}

type GetMysqlBackupDbSystemSnapshotDeletionPolicyArray []GetMysqlBackupDbSystemSnapshotDeletionPolicyInput

func (GetMysqlBackupDbSystemSnapshotDeletionPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshotDeletionPolicy)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotDeletionPolicyArray) ToGetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput() GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotDeletionPolicyArray) ToGetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput)
}

type GetMysqlBackupDbSystemSnapshotDeletionPolicyOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotDeletionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotDeletionPolicy)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotDeletionPolicyOutput) ToGetMysqlBackupDbSystemSnapshotDeletionPolicyOutput() GetMysqlBackupDbSystemSnapshotDeletionPolicyOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotDeletionPolicyOutput) ToGetMysqlBackupDbSystemSnapshotDeletionPolicyOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotDeletionPolicyOutput {
	return o
}

// Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
func (o GetMysqlBackupDbSystemSnapshotDeletionPolicyOutput) AutomaticBackupRetention() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotDeletionPolicy) string { return v.AutomaticBackupRetention }).(pulumi.StringOutput)
}

// Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
func (o GetMysqlBackupDbSystemSnapshotDeletionPolicyOutput) FinalBackup() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotDeletionPolicy) string { return v.FinalBackup }).(pulumi.StringOutput)
}

// Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
func (o GetMysqlBackupDbSystemSnapshotDeletionPolicyOutput) IsDeleteProtected() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotDeletionPolicy) bool { return v.IsDeleteProtected }).(pulumi.BoolOutput)
}

type GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshotDeletionPolicy)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput) ToGetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput() GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput) ToGetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupDbSystemSnapshotDeletionPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupDbSystemSnapshotDeletionPolicy {
		return vs[0].([]GetMysqlBackupDbSystemSnapshotDeletionPolicy)[vs[1].(int)]
	}).(GetMysqlBackupDbSystemSnapshotDeletionPolicyOutput)
}

type GetMysqlBackupDbSystemSnapshotEndpoint struct {
	// The network address of the DB System.
	Hostname string `pulumi:"hostname"`
	// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
	IpAddress string `pulumi:"ipAddress"`
	// The access modes from the client that this endpoint supports.
	Modes []string `pulumi:"modes"`
	// The port for primary endpoint of the DB System to listen on.
	Port int `pulumi:"port"`
	// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
	PortX int `pulumi:"portX"`
	// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
	Status string `pulumi:"status"`
	// Additional information about the current endpoint status.
	StatusDetails string `pulumi:"statusDetails"`
}

// GetMysqlBackupDbSystemSnapshotEndpointInput is an input type that accepts GetMysqlBackupDbSystemSnapshotEndpointArgs and GetMysqlBackupDbSystemSnapshotEndpointOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotEndpointInput` via:
//
//          GetMysqlBackupDbSystemSnapshotEndpointArgs{...}
type GetMysqlBackupDbSystemSnapshotEndpointInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotEndpointOutput() GetMysqlBackupDbSystemSnapshotEndpointOutput
	ToGetMysqlBackupDbSystemSnapshotEndpointOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotEndpointOutput
}

type GetMysqlBackupDbSystemSnapshotEndpointArgs struct {
	// The network address of the DB System.
	Hostname pulumi.StringInput `pulumi:"hostname"`
	// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// The access modes from the client that this endpoint supports.
	Modes pulumi.StringArrayInput `pulumi:"modes"`
	// The port for primary endpoint of the DB System to listen on.
	Port pulumi.IntInput `pulumi:"port"`
	// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
	PortX pulumi.IntInput `pulumi:"portX"`
	// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
	Status pulumi.StringInput `pulumi:"status"`
	// Additional information about the current endpoint status.
	StatusDetails pulumi.StringInput `pulumi:"statusDetails"`
}

func (GetMysqlBackupDbSystemSnapshotEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotEndpoint)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotEndpointArgs) ToGetMysqlBackupDbSystemSnapshotEndpointOutput() GetMysqlBackupDbSystemSnapshotEndpointOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotEndpointOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotEndpointArgs) ToGetMysqlBackupDbSystemSnapshotEndpointOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotEndpointOutput)
}

// GetMysqlBackupDbSystemSnapshotEndpointArrayInput is an input type that accepts GetMysqlBackupDbSystemSnapshotEndpointArray and GetMysqlBackupDbSystemSnapshotEndpointArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotEndpointArrayInput` via:
//
//          GetMysqlBackupDbSystemSnapshotEndpointArray{ GetMysqlBackupDbSystemSnapshotEndpointArgs{...} }
type GetMysqlBackupDbSystemSnapshotEndpointArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotEndpointArrayOutput() GetMysqlBackupDbSystemSnapshotEndpointArrayOutput
	ToGetMysqlBackupDbSystemSnapshotEndpointArrayOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotEndpointArrayOutput
}

type GetMysqlBackupDbSystemSnapshotEndpointArray []GetMysqlBackupDbSystemSnapshotEndpointInput

func (GetMysqlBackupDbSystemSnapshotEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshotEndpoint)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotEndpointArray) ToGetMysqlBackupDbSystemSnapshotEndpointArrayOutput() GetMysqlBackupDbSystemSnapshotEndpointArrayOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotEndpointArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotEndpointArray) ToGetMysqlBackupDbSystemSnapshotEndpointArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotEndpointArrayOutput)
}

type GetMysqlBackupDbSystemSnapshotEndpointOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotEndpoint)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotEndpointOutput) ToGetMysqlBackupDbSystemSnapshotEndpointOutput() GetMysqlBackupDbSystemSnapshotEndpointOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotEndpointOutput) ToGetMysqlBackupDbSystemSnapshotEndpointOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotEndpointOutput {
	return o
}

// The network address of the DB System.
func (o GetMysqlBackupDbSystemSnapshotEndpointOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotEndpoint) string { return v.Hostname }).(pulumi.StringOutput)
}

// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
func (o GetMysqlBackupDbSystemSnapshotEndpointOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotEndpoint) string { return v.IpAddress }).(pulumi.StringOutput)
}

// The access modes from the client that this endpoint supports.
func (o GetMysqlBackupDbSystemSnapshotEndpointOutput) Modes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotEndpoint) []string { return v.Modes }).(pulumi.StringArrayOutput)
}

// The port for primary endpoint of the DB System to listen on.
func (o GetMysqlBackupDbSystemSnapshotEndpointOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotEndpoint) int { return v.Port }).(pulumi.IntOutput)
}

// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
func (o GetMysqlBackupDbSystemSnapshotEndpointOutput) PortX() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotEndpoint) int { return v.PortX }).(pulumi.IntOutput)
}

// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
func (o GetMysqlBackupDbSystemSnapshotEndpointOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotEndpoint) string { return v.Status }).(pulumi.StringOutput)
}

// Additional information about the current endpoint status.
func (o GetMysqlBackupDbSystemSnapshotEndpointOutput) StatusDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotEndpoint) string { return v.StatusDetails }).(pulumi.StringOutput)
}

type GetMysqlBackupDbSystemSnapshotEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshotEndpoint)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotEndpointArrayOutput) ToGetMysqlBackupDbSystemSnapshotEndpointArrayOutput() GetMysqlBackupDbSystemSnapshotEndpointArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotEndpointArrayOutput) ToGetMysqlBackupDbSystemSnapshotEndpointArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotEndpointArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotEndpointArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupDbSystemSnapshotEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupDbSystemSnapshotEndpoint {
		return vs[0].([]GetMysqlBackupDbSystemSnapshotEndpoint)[vs[1].(int)]
	}).(GetMysqlBackupDbSystemSnapshotEndpointOutput)
}

type GetMysqlBackupDbSystemSnapshotMaintenance struct {
	// The start time of the maintenance window.
	WindowStartTime string `pulumi:"windowStartTime"`
}

// GetMysqlBackupDbSystemSnapshotMaintenanceInput is an input type that accepts GetMysqlBackupDbSystemSnapshotMaintenanceArgs and GetMysqlBackupDbSystemSnapshotMaintenanceOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotMaintenanceInput` via:
//
//          GetMysqlBackupDbSystemSnapshotMaintenanceArgs{...}
type GetMysqlBackupDbSystemSnapshotMaintenanceInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotMaintenanceOutput() GetMysqlBackupDbSystemSnapshotMaintenanceOutput
	ToGetMysqlBackupDbSystemSnapshotMaintenanceOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotMaintenanceOutput
}

type GetMysqlBackupDbSystemSnapshotMaintenanceArgs struct {
	// The start time of the maintenance window.
	WindowStartTime pulumi.StringInput `pulumi:"windowStartTime"`
}

func (GetMysqlBackupDbSystemSnapshotMaintenanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotMaintenance)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotMaintenanceArgs) ToGetMysqlBackupDbSystemSnapshotMaintenanceOutput() GetMysqlBackupDbSystemSnapshotMaintenanceOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotMaintenanceOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotMaintenanceArgs) ToGetMysqlBackupDbSystemSnapshotMaintenanceOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotMaintenanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotMaintenanceOutput)
}

// GetMysqlBackupDbSystemSnapshotMaintenanceArrayInput is an input type that accepts GetMysqlBackupDbSystemSnapshotMaintenanceArray and GetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotMaintenanceArrayInput` via:
//
//          GetMysqlBackupDbSystemSnapshotMaintenanceArray{ GetMysqlBackupDbSystemSnapshotMaintenanceArgs{...} }
type GetMysqlBackupDbSystemSnapshotMaintenanceArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput() GetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput
	ToGetMysqlBackupDbSystemSnapshotMaintenanceArrayOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput
}

type GetMysqlBackupDbSystemSnapshotMaintenanceArray []GetMysqlBackupDbSystemSnapshotMaintenanceInput

func (GetMysqlBackupDbSystemSnapshotMaintenanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshotMaintenance)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotMaintenanceArray) ToGetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput() GetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotMaintenanceArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotMaintenanceArray) ToGetMysqlBackupDbSystemSnapshotMaintenanceArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput)
}

type GetMysqlBackupDbSystemSnapshotMaintenanceOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotMaintenanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotMaintenance)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotMaintenanceOutput) ToGetMysqlBackupDbSystemSnapshotMaintenanceOutput() GetMysqlBackupDbSystemSnapshotMaintenanceOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotMaintenanceOutput) ToGetMysqlBackupDbSystemSnapshotMaintenanceOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotMaintenanceOutput {
	return o
}

// The start time of the maintenance window.
func (o GetMysqlBackupDbSystemSnapshotMaintenanceOutput) WindowStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotMaintenance) string { return v.WindowStartTime }).(pulumi.StringOutput)
}

type GetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshotMaintenance)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput) ToGetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput() GetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput) ToGetMysqlBackupDbSystemSnapshotMaintenanceArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupDbSystemSnapshotMaintenanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupDbSystemSnapshotMaintenance {
		return vs[0].([]GetMysqlBackupDbSystemSnapshotMaintenance)[vs[1].(int)]
	}).(GetMysqlBackupDbSystemSnapshotMaintenanceOutput)
}

type GetMysqlBackupsBackup struct {
	// The size of the backup in base-2 (IEC) gibibytes. (GiB).
	BackupSizeInGbs int `pulumi:"backupSizeInGbs"`
	// The type of backup.
	BackupType string `pulumi:"backupType"`
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// Backup creationType
	CreationType string `pulumi:"creationType"`
	// Initial size of the data volume in GiBs that will be created and attached.
	DataStorageSizeInGb int `pulumi:"dataStorageSizeInGb"`
	// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId string `pulumi:"dbSystemId"`
	// Snapshot of the DbSystem details at the time of the backup
	DbSystemSnapshots []GetMysqlBackupsBackupDbSystemSnapshot `pulumi:"dbSystemSnapshots"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A user-supplied description for the backup.
	Description string `pulumi:"description"`
	// A filter to return only the resource matching the given display name exactly.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// OCID of the backup itself
	Id string `pulumi:"id"`
	// Additional information about the current lifecycleState.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The MySQL server version of the DB System used for backup.
	MysqlVersion string `pulumi:"mysqlVersion"`
	// Number of days to retain this backup.
	RetentionInDays int `pulumi:"retentionInDays"`
	// The shape of the DB System instance used for backup.
	ShapeName string `pulumi:"shapeName"`
	// Backup Lifecycle State
	State string `pulumi:"state"`
	// The time the backup record was created.
	TimeCreated string `pulumi:"timeCreated"`
	// The time at which the backup was updated.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetMysqlBackupsBackupInput is an input type that accepts GetMysqlBackupsBackupArgs and GetMysqlBackupsBackupOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupInput` via:
//
//          GetMysqlBackupsBackupArgs{...}
type GetMysqlBackupsBackupInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupOutput() GetMysqlBackupsBackupOutput
	ToGetMysqlBackupsBackupOutputWithContext(context.Context) GetMysqlBackupsBackupOutput
}

type GetMysqlBackupsBackupArgs struct {
	// The size of the backup in base-2 (IEC) gibibytes. (GiB).
	BackupSizeInGbs pulumi.IntInput `pulumi:"backupSizeInGbs"`
	// The type of backup.
	BackupType pulumi.StringInput `pulumi:"backupType"`
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Backup creationType
	CreationType pulumi.StringInput `pulumi:"creationType"`
	// Initial size of the data volume in GiBs that will be created and attached.
	DataStorageSizeInGb pulumi.IntInput `pulumi:"dataStorageSizeInGb"`
	// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId pulumi.StringInput `pulumi:"dbSystemId"`
	// Snapshot of the DbSystem details at the time of the backup
	DbSystemSnapshots GetMysqlBackupsBackupDbSystemSnapshotArrayInput `pulumi:"dbSystemSnapshots"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// A user-supplied description for the backup.
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only the resource matching the given display name exactly.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// OCID of the backup itself
	Id pulumi.StringInput `pulumi:"id"`
	// Additional information about the current lifecycleState.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// The MySQL server version of the DB System used for backup.
	MysqlVersion pulumi.StringInput `pulumi:"mysqlVersion"`
	// Number of days to retain this backup.
	RetentionInDays pulumi.IntInput `pulumi:"retentionInDays"`
	// The shape of the DB System instance used for backup.
	ShapeName pulumi.StringInput `pulumi:"shapeName"`
	// Backup Lifecycle State
	State pulumi.StringInput `pulumi:"state"`
	// The time the backup record was created.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time at which the backup was updated.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetMysqlBackupsBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackup)(nil)).Elem()
}

func (i GetMysqlBackupsBackupArgs) ToGetMysqlBackupsBackupOutput() GetMysqlBackupsBackupOutput {
	return i.ToGetMysqlBackupsBackupOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupArgs) ToGetMysqlBackupsBackupOutputWithContext(ctx context.Context) GetMysqlBackupsBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupOutput)
}

// GetMysqlBackupsBackupArrayInput is an input type that accepts GetMysqlBackupsBackupArray and GetMysqlBackupsBackupArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupArrayInput` via:
//
//          GetMysqlBackupsBackupArray{ GetMysqlBackupsBackupArgs{...} }
type GetMysqlBackupsBackupArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupArrayOutput() GetMysqlBackupsBackupArrayOutput
	ToGetMysqlBackupsBackupArrayOutputWithContext(context.Context) GetMysqlBackupsBackupArrayOutput
}

type GetMysqlBackupsBackupArray []GetMysqlBackupsBackupInput

func (GetMysqlBackupsBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackup)(nil)).Elem()
}

func (i GetMysqlBackupsBackupArray) ToGetMysqlBackupsBackupArrayOutput() GetMysqlBackupsBackupArrayOutput {
	return i.ToGetMysqlBackupsBackupArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupArray) ToGetMysqlBackupsBackupArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupArrayOutput)
}

type GetMysqlBackupsBackupOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackup)(nil)).Elem()
}

func (o GetMysqlBackupsBackupOutput) ToGetMysqlBackupsBackupOutput() GetMysqlBackupsBackupOutput {
	return o
}

func (o GetMysqlBackupsBackupOutput) ToGetMysqlBackupsBackupOutputWithContext(ctx context.Context) GetMysqlBackupsBackupOutput {
	return o
}

// The size of the backup in base-2 (IEC) gibibytes. (GiB).
func (o GetMysqlBackupsBackupOutput) BackupSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) int { return v.BackupSizeInGbs }).(pulumi.IntOutput)
}

// The type of backup.
func (o GetMysqlBackupsBackupOutput) BackupType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) string { return v.BackupType }).(pulumi.StringOutput)
}

// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetMysqlBackupsBackupOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Backup creationType
func (o GetMysqlBackupsBackupOutput) CreationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) string { return v.CreationType }).(pulumi.StringOutput)
}

// Initial size of the data volume in GiBs that will be created and attached.
func (o GetMysqlBackupsBackupOutput) DataStorageSizeInGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) int { return v.DataStorageSizeInGb }).(pulumi.IntOutput)
}

// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetMysqlBackupsBackupOutput) DbSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) string { return v.DbSystemId }).(pulumi.StringOutput)
}

// Snapshot of the DbSystem details at the time of the backup
func (o GetMysqlBackupsBackupOutput) DbSystemSnapshots() GetMysqlBackupsBackupDbSystemSnapshotArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) []GetMysqlBackupsBackupDbSystemSnapshot { return v.DbSystemSnapshots }).(GetMysqlBackupsBackupDbSystemSnapshotArrayOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetMysqlBackupsBackupOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// A user-supplied description for the backup.
func (o GetMysqlBackupsBackupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only the resource matching the given display name exactly.
func (o GetMysqlBackupsBackupOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetMysqlBackupsBackupOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// OCID of the backup itself
func (o GetMysqlBackupsBackupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) string { return v.Id }).(pulumi.StringOutput)
}

// Additional information about the current lifecycleState.
func (o GetMysqlBackupsBackupOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The MySQL server version of the DB System used for backup.
func (o GetMysqlBackupsBackupOutput) MysqlVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) string { return v.MysqlVersion }).(pulumi.StringOutput)
}

// Number of days to retain this backup.
func (o GetMysqlBackupsBackupOutput) RetentionInDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) int { return v.RetentionInDays }).(pulumi.IntOutput)
}

// The shape of the DB System instance used for backup.
func (o GetMysqlBackupsBackupOutput) ShapeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) string { return v.ShapeName }).(pulumi.StringOutput)
}

// Backup Lifecycle State
func (o GetMysqlBackupsBackupOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) string { return v.State }).(pulumi.StringOutput)
}

// The time the backup record was created.
func (o GetMysqlBackupsBackupOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time at which the backup was updated.
func (o GetMysqlBackupsBackupOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetMysqlBackupsBackupArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackup)(nil)).Elem()
}

func (o GetMysqlBackupsBackupArrayOutput) ToGetMysqlBackupsBackupArrayOutput() GetMysqlBackupsBackupArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupArrayOutput) ToGetMysqlBackupsBackupArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupsBackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupsBackup {
		return vs[0].([]GetMysqlBackupsBackup)[vs[1].(int)]
	}).(GetMysqlBackupsBackupOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshot struct {
	// The username for the administrative user.
	AdminUsername string `pulumi:"adminUsername"`
	// The Availability Domain where the primary DB System should be located.
	AvailabilityDomain string `pulumi:"availabilityDomain"`
	// The Backup policy for the DB System.
	BackupPolicies []GetMysqlBackupsBackupDbSystemSnapshotBackupPolicy `pulumi:"backupPolicies"`
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// The OCID of the Configuration to be used for Instances in this DB System.
	ConfigurationId string `pulumi:"configurationId"`
	// Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
	CrashRecovery string `pulumi:"crashRecovery"`
	// Initial size of the data volume in GiBs that will be created and attached.
	DataStorageSizeInGb int `pulumi:"dataStorageSizeInGb"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The Deletion policy for the DB System.
	DeletionPolicies []GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicy `pulumi:"deletionPolicies"`
	// A user-supplied description for the backup.
	Description string `pulumi:"description"`
	// A filter to return only the resource matching the given display name exactly.
	DisplayName string `pulumi:"displayName"`
	// The network endpoints available for this DB System.
	Endpoints []GetMysqlBackupsBackupDbSystemSnapshotEndpoint `pulumi:"endpoints"`
	// The name of the Fault Domain the DB System is located in.
	FaultDomain string `pulumi:"faultDomain"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The hostname for the primary endpoint of the DB System. Used for DNS. The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com"). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
	HostnameLabel string `pulumi:"hostnameLabel"`
	// OCID of the backup itself
	Id string `pulumi:"id"`
	// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
	IpAddress string `pulumi:"ipAddress"`
	// Specifies if the DB System is highly available.
	IsHighlyAvailable bool `pulumi:"isHighlyAvailable"`
	// The Maintenance Policy for the DB System.
	Maintenances []GetMysqlBackupsBackupDbSystemSnapshotMaintenance `pulumi:"maintenances"`
	// The MySQL server version of the DB System used for backup.
	MysqlVersion string `pulumi:"mysqlVersion"`
	// The port for primary endpoint of the DB System to listen on.
	Port int `pulumi:"port"`
	// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
	PortX int `pulumi:"portX"`
	// The shape of the DB System instance used for backup.
	ShapeName string `pulumi:"shapeName"`
	// The OCID of the subnet the DB System is associated with.
	SubnetId string `pulumi:"subnetId"`
}

// GetMysqlBackupsBackupDbSystemSnapshotInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotArgs and GetMysqlBackupsBackupDbSystemSnapshotOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotInput` via:
//
//          GetMysqlBackupsBackupDbSystemSnapshotArgs{...}
type GetMysqlBackupsBackupDbSystemSnapshotInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotOutput() GetMysqlBackupsBackupDbSystemSnapshotOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotArgs struct {
	// The username for the administrative user.
	AdminUsername pulumi.StringInput `pulumi:"adminUsername"`
	// The Availability Domain where the primary DB System should be located.
	AvailabilityDomain pulumi.StringInput `pulumi:"availabilityDomain"`
	// The Backup policy for the DB System.
	BackupPolicies GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayInput `pulumi:"backupPolicies"`
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The OCID of the Configuration to be used for Instances in this DB System.
	ConfigurationId pulumi.StringInput `pulumi:"configurationId"`
	// Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
	CrashRecovery pulumi.StringInput `pulumi:"crashRecovery"`
	// Initial size of the data volume in GiBs that will be created and attached.
	DataStorageSizeInGb pulumi.IntInput `pulumi:"dataStorageSizeInGb"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// The Deletion policy for the DB System.
	DeletionPolicies GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayInput `pulumi:"deletionPolicies"`
	// A user-supplied description for the backup.
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only the resource matching the given display name exactly.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The network endpoints available for this DB System.
	Endpoints GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayInput `pulumi:"endpoints"`
	// The name of the Fault Domain the DB System is located in.
	FaultDomain pulumi.StringInput `pulumi:"faultDomain"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The hostname for the primary endpoint of the DB System. Used for DNS. The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com"). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
	HostnameLabel pulumi.StringInput `pulumi:"hostnameLabel"`
	// OCID of the backup itself
	Id pulumi.StringInput `pulumi:"id"`
	// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// Specifies if the DB System is highly available.
	IsHighlyAvailable pulumi.BoolInput `pulumi:"isHighlyAvailable"`
	// The Maintenance Policy for the DB System.
	Maintenances GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayInput `pulumi:"maintenances"`
	// The MySQL server version of the DB System used for backup.
	MysqlVersion pulumi.StringInput `pulumi:"mysqlVersion"`
	// The port for primary endpoint of the DB System to listen on.
	Port pulumi.IntInput `pulumi:"port"`
	// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
	PortX pulumi.IntInput `pulumi:"portX"`
	// The shape of the DB System instance used for backup.
	ShapeName pulumi.StringInput `pulumi:"shapeName"`
	// The OCID of the subnet the DB System is associated with.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (GetMysqlBackupsBackupDbSystemSnapshotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshot)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotArgs) ToGetMysqlBackupsBackupDbSystemSnapshotOutput() GetMysqlBackupsBackupDbSystemSnapshotOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotArgs) ToGetMysqlBackupsBackupDbSystemSnapshotOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotOutput)
}

// GetMysqlBackupsBackupDbSystemSnapshotArrayInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotArray and GetMysqlBackupsBackupDbSystemSnapshotArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotArrayInput` via:
//
//          GetMysqlBackupsBackupDbSystemSnapshotArray{ GetMysqlBackupsBackupDbSystemSnapshotArgs{...} }
type GetMysqlBackupsBackupDbSystemSnapshotArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotArrayOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotArrayOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotArrayOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotArray []GetMysqlBackupsBackupDbSystemSnapshotInput

func (GetMysqlBackupsBackupDbSystemSnapshotArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshot)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotArray) ToGetMysqlBackupsBackupDbSystemSnapshotArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotArrayOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotArray) ToGetMysqlBackupsBackupDbSystemSnapshotArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotArrayOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshot)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) ToGetMysqlBackupsBackupDbSystemSnapshotOutput() GetMysqlBackupsBackupDbSystemSnapshotOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) ToGetMysqlBackupsBackupDbSystemSnapshotOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotOutput {
	return o
}

// The username for the administrative user.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) AdminUsername() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) string { return v.AdminUsername }).(pulumi.StringOutput)
}

// The Availability Domain where the primary DB System should be located.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) string { return v.AvailabilityDomain }).(pulumi.StringOutput)
}

// The Backup policy for the DB System.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) BackupPolicies() GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) []GetMysqlBackupsBackupDbSystemSnapshotBackupPolicy {
		return v.BackupPolicies
	}).(GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput)
}

// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The OCID of the Configuration to be used for Instances in this DB System.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) ConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) string { return v.ConfigurationId }).(pulumi.StringOutput)
}

// Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) CrashRecovery() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) string { return v.CrashRecovery }).(pulumi.StringOutput)
}

// Initial size of the data volume in GiBs that will be created and attached.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) DataStorageSizeInGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) int { return v.DataStorageSizeInGb }).(pulumi.IntOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// The Deletion policy for the DB System.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) DeletionPolicies() GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) []GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicy {
		return v.DeletionPolicies
	}).(GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput)
}

// A user-supplied description for the backup.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only the resource matching the given display name exactly.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The network endpoints available for this DB System.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) Endpoints() GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) []GetMysqlBackupsBackupDbSystemSnapshotEndpoint {
		return v.Endpoints
	}).(GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput)
}

// The name of the Fault Domain the DB System is located in.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) FaultDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) string { return v.FaultDomain }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The hostname for the primary endpoint of the DB System. Used for DNS. The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com"). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) HostnameLabel() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) string { return v.HostnameLabel }).(pulumi.StringOutput)
}

// OCID of the backup itself
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) string { return v.Id }).(pulumi.StringOutput)
}

// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) string { return v.IpAddress }).(pulumi.StringOutput)
}

// Specifies if the DB System is highly available.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) IsHighlyAvailable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) bool { return v.IsHighlyAvailable }).(pulumi.BoolOutput)
}

// The Maintenance Policy for the DB System.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) Maintenances() GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) []GetMysqlBackupsBackupDbSystemSnapshotMaintenance {
		return v.Maintenances
	}).(GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput)
}

// The MySQL server version of the DB System used for backup.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) MysqlVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) string { return v.MysqlVersion }).(pulumi.StringOutput)
}

// The port for primary endpoint of the DB System to listen on.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) int { return v.Port }).(pulumi.IntOutput)
}

// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) PortX() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) int { return v.PortX }).(pulumi.IntOutput)
}

// The shape of the DB System instance used for backup.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) ShapeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) string { return v.ShapeName }).(pulumi.StringOutput)
}

// The OCID of the subnet the DB System is associated with.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshot)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupsBackupDbSystemSnapshotOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupsBackupDbSystemSnapshot {
		return vs[0].([]GetMysqlBackupsBackupDbSystemSnapshot)[vs[1].(int)]
	}).(GetMysqlBackupsBackupDbSystemSnapshotOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotBackupPolicy struct {
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Specifies if PITR is enabled or disabled.
	IsEnabled bool `pulumi:"isEnabled"`
	// The PITR policy for the DB System.
	PitrPolicies []GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicy `pulumi:"pitrPolicies"`
	// Number of days to retain this backup.
	RetentionInDays int `pulumi:"retentionInDays"`
	// The start time of the maintenance window.
	WindowStartTime string `pulumi:"windowStartTime"`
}

// GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArgs and GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyInput` via:
//
//          GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArgs{...}
type GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput() GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArgs struct {
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// Specifies if PITR is enabled or disabled.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The PITR policy for the DB System.
	PitrPolicies GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayInput `pulumi:"pitrPolicies"`
	// Number of days to retain this backup.
	RetentionInDays pulumi.IntInput `pulumi:"retentionInDays"`
	// The start time of the maintenance window.
	WindowStartTime pulumi.StringInput `pulumi:"windowStartTime"`
}

func (GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotBackupPolicy)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArgs) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput() GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArgs) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput)
}

// GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArray and GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayInput` via:
//
//          GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArray{ GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArgs{...} }
type GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArray []GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyInput

func (GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshotBackupPolicy)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArray) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArray) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotBackupPolicy)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput() GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput {
	return o
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotBackupPolicy) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotBackupPolicy) map[string]interface{} {
		return v.FreeformTags
	}).(pulumi.MapOutput)
}

// Specifies if PITR is enabled or disabled.
func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotBackupPolicy) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The PITR policy for the DB System.
func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput) PitrPolicies() GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotBackupPolicy) []GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicy {
		return v.PitrPolicies
	}).(GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput)
}

// Number of days to retain this backup.
func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput) RetentionInDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotBackupPolicy) int { return v.RetentionInDays }).(pulumi.IntOutput)
}

// The start time of the maintenance window.
func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput) WindowStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotBackupPolicy) string { return v.WindowStartTime }).(pulumi.StringOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshotBackupPolicy)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicy {
		return vs[0].([]GetMysqlBackupsBackupDbSystemSnapshotBackupPolicy)[vs[1].(int)]
	}).(GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicy struct {
	// Specifies if PITR is enabled or disabled.
	IsEnabled bool `pulumi:"isEnabled"`
}

// GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs and GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyInput` via:
//
//          GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs{...}
type GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput() GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs struct {
	// Specifies if PITR is enabled or disabled.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
}

func (GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicy)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput() GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput)
}

// GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArray and GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayInput` via:
//
//          GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArray{ GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs{...} }
type GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArray []GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyInput

func (GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicy)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArray) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArray) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicy)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput() GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput {
	return o
}

// Specifies if PITR is enabled or disabled.
func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicy) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicy)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicy {
		return vs[0].([]GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicy)[vs[1].(int)]
	}).(GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicy struct {
	// Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
	AutomaticBackupRetention string `pulumi:"automaticBackupRetention"`
	// Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
	FinalBackup string `pulumi:"finalBackup"`
	// Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
	IsDeleteProtected bool `pulumi:"isDeleteProtected"`
}

// GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArgs and GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyInput` via:
//
//          GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArgs{...}
type GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput() GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArgs struct {
	// Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
	AutomaticBackupRetention pulumi.StringInput `pulumi:"automaticBackupRetention"`
	// Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
	FinalBackup pulumi.StringInput `pulumi:"finalBackup"`
	// Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
	IsDeleteProtected pulumi.BoolInput `pulumi:"isDeleteProtected"`
}

func (GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicy)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArgs) ToGetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput() GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArgs) ToGetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput)
}

// GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArray and GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayInput` via:
//
//          GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArray{ GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArgs{...} }
type GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArray []GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyInput

func (GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicy)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArray) ToGetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArray) ToGetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicy)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput) ToGetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput() GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput) ToGetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput {
	return o
}

// Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
func (o GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput) AutomaticBackupRetention() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicy) string { return v.AutomaticBackupRetention }).(pulumi.StringOutput)
}

// Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
func (o GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput) FinalBackup() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicy) string { return v.FinalBackup }).(pulumi.StringOutput)
}

// Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
func (o GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput) IsDeleteProtected() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicy) bool { return v.IsDeleteProtected }).(pulumi.BoolOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicy)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicy {
		return vs[0].([]GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicy)[vs[1].(int)]
	}).(GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotEndpoint struct {
	// The network address of the DB System.
	Hostname string `pulumi:"hostname"`
	// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
	IpAddress string `pulumi:"ipAddress"`
	// The access modes from the client that this endpoint supports.
	Modes []string `pulumi:"modes"`
	// The port for primary endpoint of the DB System to listen on.
	Port int `pulumi:"port"`
	// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
	PortX int `pulumi:"portX"`
	// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
	Status string `pulumi:"status"`
	// Additional information about the current endpoint status.
	StatusDetails string `pulumi:"statusDetails"`
}

// GetMysqlBackupsBackupDbSystemSnapshotEndpointInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotEndpointArgs and GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotEndpointInput` via:
//
//          GetMysqlBackupsBackupDbSystemSnapshotEndpointArgs{...}
type GetMysqlBackupsBackupDbSystemSnapshotEndpointInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotEndpointOutput() GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotEndpointOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotEndpointArgs struct {
	// The network address of the DB System.
	Hostname pulumi.StringInput `pulumi:"hostname"`
	// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// The access modes from the client that this endpoint supports.
	Modes pulumi.StringArrayInput `pulumi:"modes"`
	// The port for primary endpoint of the DB System to listen on.
	Port pulumi.IntInput `pulumi:"port"`
	// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
	PortX pulumi.IntInput `pulumi:"portX"`
	// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
	Status pulumi.StringInput `pulumi:"status"`
	// Additional information about the current endpoint status.
	StatusDetails pulumi.StringInput `pulumi:"statusDetails"`
}

func (GetMysqlBackupsBackupDbSystemSnapshotEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotEndpoint)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotEndpointArgs) ToGetMysqlBackupsBackupDbSystemSnapshotEndpointOutput() GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotEndpointOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotEndpointArgs) ToGetMysqlBackupsBackupDbSystemSnapshotEndpointOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput)
}

// GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotEndpointArray and GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayInput` via:
//
//          GetMysqlBackupsBackupDbSystemSnapshotEndpointArray{ GetMysqlBackupsBackupDbSystemSnapshotEndpointArgs{...} }
type GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotEndpointArray []GetMysqlBackupsBackupDbSystemSnapshotEndpointInput

func (GetMysqlBackupsBackupDbSystemSnapshotEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshotEndpoint)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotEndpointArray) ToGetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotEndpointArray) ToGetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotEndpoint)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput) ToGetMysqlBackupsBackupDbSystemSnapshotEndpointOutput() GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput) ToGetMysqlBackupsBackupDbSystemSnapshotEndpointOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput {
	return o
}

// The network address of the DB System.
func (o GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotEndpoint) string { return v.Hostname }).(pulumi.StringOutput)
}

// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
func (o GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotEndpoint) string { return v.IpAddress }).(pulumi.StringOutput)
}

// The access modes from the client that this endpoint supports.
func (o GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput) Modes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotEndpoint) []string { return v.Modes }).(pulumi.StringArrayOutput)
}

// The port for primary endpoint of the DB System to listen on.
func (o GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotEndpoint) int { return v.Port }).(pulumi.IntOutput)
}

// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
func (o GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput) PortX() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotEndpoint) int { return v.PortX }).(pulumi.IntOutput)
}

// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
func (o GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotEndpoint) string { return v.Status }).(pulumi.StringOutput)
}

// Additional information about the current endpoint status.
func (o GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput) StatusDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotEndpoint) string { return v.StatusDetails }).(pulumi.StringOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshotEndpoint)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupsBackupDbSystemSnapshotEndpoint {
		return vs[0].([]GetMysqlBackupsBackupDbSystemSnapshotEndpoint)[vs[1].(int)]
	}).(GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotMaintenance struct {
	// The start time of the maintenance window.
	WindowStartTime string `pulumi:"windowStartTime"`
}

// GetMysqlBackupsBackupDbSystemSnapshotMaintenanceInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArgs and GetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotMaintenanceInput` via:
//
//          GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArgs{...}
type GetMysqlBackupsBackupDbSystemSnapshotMaintenanceInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput() GetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArgs struct {
	// The start time of the maintenance window.
	WindowStartTime pulumi.StringInput `pulumi:"windowStartTime"`
}

func (GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotMaintenance)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArgs) ToGetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput() GetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArgs) ToGetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput)
}

// GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArray and GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayInput` via:
//
//          GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArray{ GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArgs{...} }
type GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArray []GetMysqlBackupsBackupDbSystemSnapshotMaintenanceInput

func (GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshotMaintenance)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArray) ToGetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArray) ToGetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotMaintenance)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput) ToGetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput() GetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput) ToGetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput {
	return o
}

// The start time of the maintenance window.
func (o GetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput) WindowStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotMaintenance) string { return v.WindowStartTime }).(pulumi.StringOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshotMaintenance)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupsBackupDbSystemSnapshotMaintenance {
		return vs[0].([]GetMysqlBackupsBackupDbSystemSnapshotMaintenance)[vs[1].(int)]
	}).(GetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput)
}

type GetMysqlBackupsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetMysqlBackupsFilterInput is an input type that accepts GetMysqlBackupsFilterArgs and GetMysqlBackupsFilterOutput values.
// You can construct a concrete instance of `GetMysqlBackupsFilterInput` via:
//
//          GetMysqlBackupsFilterArgs{...}
type GetMysqlBackupsFilterInput interface {
	pulumi.Input

	ToGetMysqlBackupsFilterOutput() GetMysqlBackupsFilterOutput
	ToGetMysqlBackupsFilterOutputWithContext(context.Context) GetMysqlBackupsFilterOutput
}

type GetMysqlBackupsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetMysqlBackupsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsFilter)(nil)).Elem()
}

func (i GetMysqlBackupsFilterArgs) ToGetMysqlBackupsFilterOutput() GetMysqlBackupsFilterOutput {
	return i.ToGetMysqlBackupsFilterOutputWithContext(context.Background())
}

func (i GetMysqlBackupsFilterArgs) ToGetMysqlBackupsFilterOutputWithContext(ctx context.Context) GetMysqlBackupsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsFilterOutput)
}

// GetMysqlBackupsFilterArrayInput is an input type that accepts GetMysqlBackupsFilterArray and GetMysqlBackupsFilterArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupsFilterArrayInput` via:
//
//          GetMysqlBackupsFilterArray{ GetMysqlBackupsFilterArgs{...} }
type GetMysqlBackupsFilterArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupsFilterArrayOutput() GetMysqlBackupsFilterArrayOutput
	ToGetMysqlBackupsFilterArrayOutputWithContext(context.Context) GetMysqlBackupsFilterArrayOutput
}

type GetMysqlBackupsFilterArray []GetMysqlBackupsFilterInput

func (GetMysqlBackupsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsFilter)(nil)).Elem()
}

func (i GetMysqlBackupsFilterArray) ToGetMysqlBackupsFilterArrayOutput() GetMysqlBackupsFilterArrayOutput {
	return i.ToGetMysqlBackupsFilterArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupsFilterArray) ToGetMysqlBackupsFilterArrayOutputWithContext(ctx context.Context) GetMysqlBackupsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsFilterArrayOutput)
}

type GetMysqlBackupsFilterOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsFilter)(nil)).Elem()
}

func (o GetMysqlBackupsFilterOutput) ToGetMysqlBackupsFilterOutput() GetMysqlBackupsFilterOutput {
	return o
}

func (o GetMysqlBackupsFilterOutput) ToGetMysqlBackupsFilterOutputWithContext(ctx context.Context) GetMysqlBackupsFilterOutput {
	return o
}

func (o GetMysqlBackupsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetMysqlBackupsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetMysqlBackupsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetMysqlBackupsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetMysqlBackupsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsFilter)(nil)).Elem()
}

func (o GetMysqlBackupsFilterArrayOutput) ToGetMysqlBackupsFilterArrayOutput() GetMysqlBackupsFilterArrayOutput {
	return o
}

func (o GetMysqlBackupsFilterArrayOutput) ToGetMysqlBackupsFilterArrayOutputWithContext(ctx context.Context) GetMysqlBackupsFilterArrayOutput {
	return o
}

func (o GetMysqlBackupsFilterArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupsFilter {
		return vs[0].([]GetMysqlBackupsFilter)[vs[1].(int)]
	}).(GetMysqlBackupsFilterOutput)
}

type GetMysqlConfigurationVariable struct {
	// ("autocommit")
	Autocommit bool `pulumi:"autocommit"`
	// Sets the binary log expiration period in seconds. binlogExpireLogsSeconds corresponds to the MySQL binary logging system variable [binlogExpireLogsSeconds](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds).
	BinlogExpireLogsSeconds int `pulumi:"binlogExpireLogsSeconds"`
	// Configures the amount of table metadata added to the binary log when using row-based logging. binlogRowMetadata corresponds to the MySQL binary logging system variable [binlogRowMetadata](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_metadata).
	BinlogRowMetadata string `pulumi:"binlogRowMetadata"`
	// When set to PARTIAL_JSON, this enables use of a space-efficient binary log format for updates that modify only a small portion of a JSON document. binlogRowValueOptions corresponds to the MySQL binary logging system variable [binlogRowValueOptions](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_value_options).
	BinlogRowValueOptions string `pulumi:"binlogRowValueOptions"`
	// Enables compression for transactions that are written to binary log files on this server. binlogTransactionCompression corresponds to the MySQL binary logging system variable [binlogTransactionCompression](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_transaction_compression).
	BinlogTransactionCompression bool `pulumi:"binlogTransactionCompression"`
	// ("completionType")
	CompletionType string `pulumi:"completionType"`
	// ("connectTimeout")
	ConnectTimeout int `pulumi:"connectTimeout"`
	// ("cteMaxRecursionDepth")
	CteMaxRecursionDepth int `pulumi:"cteMaxRecursionDepth"`
	// ("defaultAuthenticationPlugin")
	DefaultAuthenticationPlugin string `pulumi:"defaultAuthenticationPlugin"`
	// ("foreignKeyChecks")
	ForeignKeyChecks bool `pulumi:"foreignKeyChecks"`
	// ("generatedRandomPasswordLength") DEPRECATED -- variable should not be settable and will be ignored
	GeneratedRandomPasswordLength int `pulumi:"generatedRandomPasswordLength"`
	// * EVENTUAL: Both RO and RW transactions do not wait for preceding transactions to be applied before executing. A RW transaction does not wait for other members to apply a transaction. This means that a transaction could be externalized on one member before the others. This also means that in the event of a primary failover, the new primary can accept new RO and RW transactions before the previous primary transactions are all applied. RO transactions could result in outdated values, RW transactions could result in a rollback due to conflicts.
	// * BEFORE_ON_PRIMARY_FAILOVER: New RO or RW transactions with a newly elected primary that is applying backlog from the old primary are held (not applied) until any backlog has been applied. This ensures that when a primary failover happens, intentionally or not, clients always see the latest value on the primary. This guarantees consistency, but means that clients must be able to handle the delay in the event that a backlog is being applied. Usually this delay should be minimal, but does depend on the size of the backlog.
	// * BEFORE: A RW transaction waits for all preceding transactions to complete before being applied. A RO transaction waits for all preceding transactions to complete before being executed. This ensures that this transaction reads the latest value by only affecting the latency of the transaction. This reduces the overhead of synchronization on every RW transaction, by ensuring synchronization is used only on RO transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
	// * AFTER: A RW transaction waits until its changes have been applied to all of the other members. This value has no effect on RO transactions. This mode ensures that when a transaction is committed on the local member, any subsequent transaction reads the written value or a more recent value on any group member. Use this mode with a group that is used for predominantly RO operations to ensure that applied RW transactions are applied everywhere once they commit. This could be used by your application to ensure that subsequent reads fetch the latest data which includes the latest writes. This reduces the overhead of synchronization on every RO transaction, by ensuring synchronization is used only on RW transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
	// * BEFORE_AND_AFTER: A RW transaction waits for 1) all preceding transactions to complete before being applied and 2) until its changes have been applied on other members. A RO transaction waits for all preceding transactions to complete before execution takes place. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
	GroupReplicationConsistency string `pulumi:"groupReplicationConsistency"`
	// ("informationSchemaStatsExpiry")
	InformationSchemaStatsExpiry int `pulumi:"informationSchemaStatsExpiry"`
	// ("innodbBufferPoolInstances")
	InnodbBufferPoolInstances int `pulumi:"innodbBufferPoolInstances"`
	// ("innodbBufferPoolSize")
	InnodbBufferPoolSize string `pulumi:"innodbBufferPoolSize"`
	// ("innodbFtEnableStopword")
	InnodbFtEnableStopword bool `pulumi:"innodbFtEnableStopword"`
	// ("innodbFtMaxTokenSize")
	InnodbFtMaxTokenSize int `pulumi:"innodbFtMaxTokenSize"`
	// ("innodbFtMinTokenSize")
	InnodbFtMinTokenSize int `pulumi:"innodbFtMinTokenSize"`
	// ("innodbFtNumWordOptimize")
	InnodbFtNumWordOptimize int `pulumi:"innodbFtNumWordOptimize"`
	// ("innodbFtResultCacheLimit")
	InnodbFtResultCacheLimit int `pulumi:"innodbFtResultCacheLimit"`
	// ("innodbFtServerStopwordTable")
	InnodbFtServerStopwordTable string `pulumi:"innodbFtServerStopwordTable"`
	// ("innodbLockWaitTimeout")
	InnodbLockWaitTimeout int `pulumi:"innodbLockWaitTimeout"`
	// ("innodbMaxPurgeLag")
	InnodbMaxPurgeLag int `pulumi:"innodbMaxPurgeLag"`
	// ("innodbMaxPurgeLagDelay")
	InnodbMaxPurgeLagDelay int `pulumi:"innodbMaxPurgeLagDelay"`
	// ("localInfile")
	LocalInfile bool `pulumi:"localInfile"`
	// ("mandatoryRoles")
	MandatoryRoles string `pulumi:"mandatoryRoles"`
	// ("maxConnections")
	MaxConnections int `pulumi:"maxConnections"`
	// ("maxExecutionTime")
	MaxExecutionTime int `pulumi:"maxExecutionTime"`
	// ("maxPreparedStmtCount")
	MaxPreparedStmtCount int `pulumi:"maxPreparedStmtCount"`
	// ("mysqlFirewallMode")
	MysqlFirewallMode bool `pulumi:"mysqlFirewallMode"`
	// DEPRECATED -- typo of mysqlx_zstd_default_compression_level. variable will be ignored.
	MysqlZstdDefaultCompressionLevel int `pulumi:"mysqlZstdDefaultCompressionLevel"`
	// ("mysqlxConnectTimeout") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxConnectTimeout int `pulumi:"mysqlxConnectTimeout"`
	// Set the default compression level for the deflate algorithm. ("mysqlxDeflateDefaultCompressionLevel")
	MysqlxDeflateDefaultCompressionLevel int `pulumi:"mysqlxDeflateDefaultCompressionLevel"`
	// Limit the upper bound of accepted compression levels for the deflate algorithm. ("mysqlxDeflateMaxClientCompressionLevel")
	MysqlxDeflateMaxClientCompressionLevel int `pulumi:"mysqlxDeflateMaxClientCompressionLevel"`
	// ("mysqlxDocumentIdUniquePrefix") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxDocumentIdUniquePrefix int `pulumi:"mysqlxDocumentIdUniquePrefix"`
	// ("mysqlxEnableHelloNotice") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxEnableHelloNotice bool `pulumi:"mysqlxEnableHelloNotice"`
	// ("mysqlxIdleWorkerThreadTimeout") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxIdleWorkerThreadTimeout int `pulumi:"mysqlxIdleWorkerThreadTimeout"`
	// ("mysqlxInteractiveTimeout") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxInteractiveTimeout int `pulumi:"mysqlxInteractiveTimeout"`
	// Set the default compression level for the lz4 algorithm. ("mysqlxLz4DefaultCompressionLevel")
	MysqlxLz4defaultCompressionLevel int `pulumi:"mysqlxLz4defaultCompressionLevel"`
	// Limit the upper bound of accepted compression levels for the lz4 algorithm. ("mysqlxLz4MaxClientCompressionLevel")
	MysqlxLz4maxClientCompressionLevel int `pulumi:"mysqlxLz4maxClientCompressionLevel"`
	// ("mysqlxMaxAllowedPacket") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxMaxAllowedPacket int `pulumi:"mysqlxMaxAllowedPacket"`
	// ("mysqlxMinWorkerThreads") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxMinWorkerThreads int `pulumi:"mysqlxMinWorkerThreads"`
	// ("mysqlxReadTimeout") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxReadTimeout int `pulumi:"mysqlxReadTimeout"`
	// ("mysqlxWaitTimeout") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxWaitTimeout int `pulumi:"mysqlxWaitTimeout"`
	// ("mysqlxWriteTimeout") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxWriteTimeout int `pulumi:"mysqlxWriteTimeout"`
	// Set the default compression level for the zstd algorithm. ("mysqlxZstdDefaultCompressionLevel")
	MysqlxZstdDefaultCompressionLevel int `pulumi:"mysqlxZstdDefaultCompressionLevel"`
	// Limit the upper bound of accepted compression levels for the zstd algorithm. ("mysqlxZstdMaxClientCompressionLevel")
	MysqlxZstdMaxClientCompressionLevel int `pulumi:"mysqlxZstdMaxClientCompressionLevel"`
	// ("parserMaxMemSize")
	ParserMaxMemSize int `pulumi:"parserMaxMemSize"`
	// ("queryAllocBlockSize") DEPRECATED -- variable should not be settable and will be ignored
	QueryAllocBlockSize int `pulumi:"queryAllocBlockSize"`
	// ("queryPreallocSize") DEPRECATED -- variable should not be settable and will be ignored
	QueryPreallocSize int `pulumi:"queryPreallocSize"`
	// ("sqlMode")
	SqlMode string `pulumi:"sqlMode"`
	// ("sqlRequirePrimaryKey")
	SqlRequirePrimaryKey bool `pulumi:"sqlRequirePrimaryKey"`
	// ("sqlWarnings")
	SqlWarnings bool `pulumi:"sqlWarnings"`
	// ("transactionIsolation")
	TransactionIsolation string `pulumi:"transactionIsolation"`
}

// GetMysqlConfigurationVariableInput is an input type that accepts GetMysqlConfigurationVariableArgs and GetMysqlConfigurationVariableOutput values.
// You can construct a concrete instance of `GetMysqlConfigurationVariableInput` via:
//
//          GetMysqlConfigurationVariableArgs{...}
type GetMysqlConfigurationVariableInput interface {
	pulumi.Input

	ToGetMysqlConfigurationVariableOutput() GetMysqlConfigurationVariableOutput
	ToGetMysqlConfigurationVariableOutputWithContext(context.Context) GetMysqlConfigurationVariableOutput
}

type GetMysqlConfigurationVariableArgs struct {
	// ("autocommit")
	Autocommit pulumi.BoolInput `pulumi:"autocommit"`
	// Sets the binary log expiration period in seconds. binlogExpireLogsSeconds corresponds to the MySQL binary logging system variable [binlogExpireLogsSeconds](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds).
	BinlogExpireLogsSeconds pulumi.IntInput `pulumi:"binlogExpireLogsSeconds"`
	// Configures the amount of table metadata added to the binary log when using row-based logging. binlogRowMetadata corresponds to the MySQL binary logging system variable [binlogRowMetadata](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_metadata).
	BinlogRowMetadata pulumi.StringInput `pulumi:"binlogRowMetadata"`
	// When set to PARTIAL_JSON, this enables use of a space-efficient binary log format for updates that modify only a small portion of a JSON document. binlogRowValueOptions corresponds to the MySQL binary logging system variable [binlogRowValueOptions](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_value_options).
	BinlogRowValueOptions pulumi.StringInput `pulumi:"binlogRowValueOptions"`
	// Enables compression for transactions that are written to binary log files on this server. binlogTransactionCompression corresponds to the MySQL binary logging system variable [binlogTransactionCompression](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_transaction_compression).
	BinlogTransactionCompression pulumi.BoolInput `pulumi:"binlogTransactionCompression"`
	// ("completionType")
	CompletionType pulumi.StringInput `pulumi:"completionType"`
	// ("connectTimeout")
	ConnectTimeout pulumi.IntInput `pulumi:"connectTimeout"`
	// ("cteMaxRecursionDepth")
	CteMaxRecursionDepth pulumi.IntInput `pulumi:"cteMaxRecursionDepth"`
	// ("defaultAuthenticationPlugin")
	DefaultAuthenticationPlugin pulumi.StringInput `pulumi:"defaultAuthenticationPlugin"`
	// ("foreignKeyChecks")
	ForeignKeyChecks pulumi.BoolInput `pulumi:"foreignKeyChecks"`
	// ("generatedRandomPasswordLength") DEPRECATED -- variable should not be settable and will be ignored
	GeneratedRandomPasswordLength pulumi.IntInput `pulumi:"generatedRandomPasswordLength"`
	// * EVENTUAL: Both RO and RW transactions do not wait for preceding transactions to be applied before executing. A RW transaction does not wait for other members to apply a transaction. This means that a transaction could be externalized on one member before the others. This also means that in the event of a primary failover, the new primary can accept new RO and RW transactions before the previous primary transactions are all applied. RO transactions could result in outdated values, RW transactions could result in a rollback due to conflicts.
	// * BEFORE_ON_PRIMARY_FAILOVER: New RO or RW transactions with a newly elected primary that is applying backlog from the old primary are held (not applied) until any backlog has been applied. This ensures that when a primary failover happens, intentionally or not, clients always see the latest value on the primary. This guarantees consistency, but means that clients must be able to handle the delay in the event that a backlog is being applied. Usually this delay should be minimal, but does depend on the size of the backlog.
	// * BEFORE: A RW transaction waits for all preceding transactions to complete before being applied. A RO transaction waits for all preceding transactions to complete before being executed. This ensures that this transaction reads the latest value by only affecting the latency of the transaction. This reduces the overhead of synchronization on every RW transaction, by ensuring synchronization is used only on RO transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
	// * AFTER: A RW transaction waits until its changes have been applied to all of the other members. This value has no effect on RO transactions. This mode ensures that when a transaction is committed on the local member, any subsequent transaction reads the written value or a more recent value on any group member. Use this mode with a group that is used for predominantly RO operations to ensure that applied RW transactions are applied everywhere once they commit. This could be used by your application to ensure that subsequent reads fetch the latest data which includes the latest writes. This reduces the overhead of synchronization on every RO transaction, by ensuring synchronization is used only on RW transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
	// * BEFORE_AND_AFTER: A RW transaction waits for 1) all preceding transactions to complete before being applied and 2) until its changes have been applied on other members. A RO transaction waits for all preceding transactions to complete before execution takes place. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
	GroupReplicationConsistency pulumi.StringInput `pulumi:"groupReplicationConsistency"`
	// ("informationSchemaStatsExpiry")
	InformationSchemaStatsExpiry pulumi.IntInput `pulumi:"informationSchemaStatsExpiry"`
	// ("innodbBufferPoolInstances")
	InnodbBufferPoolInstances pulumi.IntInput `pulumi:"innodbBufferPoolInstances"`
	// ("innodbBufferPoolSize")
	InnodbBufferPoolSize pulumi.StringInput `pulumi:"innodbBufferPoolSize"`
	// ("innodbFtEnableStopword")
	InnodbFtEnableStopword pulumi.BoolInput `pulumi:"innodbFtEnableStopword"`
	// ("innodbFtMaxTokenSize")
	InnodbFtMaxTokenSize pulumi.IntInput `pulumi:"innodbFtMaxTokenSize"`
	// ("innodbFtMinTokenSize")
	InnodbFtMinTokenSize pulumi.IntInput `pulumi:"innodbFtMinTokenSize"`
	// ("innodbFtNumWordOptimize")
	InnodbFtNumWordOptimize pulumi.IntInput `pulumi:"innodbFtNumWordOptimize"`
	// ("innodbFtResultCacheLimit")
	InnodbFtResultCacheLimit pulumi.IntInput `pulumi:"innodbFtResultCacheLimit"`
	// ("innodbFtServerStopwordTable")
	InnodbFtServerStopwordTable pulumi.StringInput `pulumi:"innodbFtServerStopwordTable"`
	// ("innodbLockWaitTimeout")
	InnodbLockWaitTimeout pulumi.IntInput `pulumi:"innodbLockWaitTimeout"`
	// ("innodbMaxPurgeLag")
	InnodbMaxPurgeLag pulumi.IntInput `pulumi:"innodbMaxPurgeLag"`
	// ("innodbMaxPurgeLagDelay")
	InnodbMaxPurgeLagDelay pulumi.IntInput `pulumi:"innodbMaxPurgeLagDelay"`
	// ("localInfile")
	LocalInfile pulumi.BoolInput `pulumi:"localInfile"`
	// ("mandatoryRoles")
	MandatoryRoles pulumi.StringInput `pulumi:"mandatoryRoles"`
	// ("maxConnections")
	MaxConnections pulumi.IntInput `pulumi:"maxConnections"`
	// ("maxExecutionTime")
	MaxExecutionTime pulumi.IntInput `pulumi:"maxExecutionTime"`
	// ("maxPreparedStmtCount")
	MaxPreparedStmtCount pulumi.IntInput `pulumi:"maxPreparedStmtCount"`
	// ("mysqlFirewallMode")
	MysqlFirewallMode pulumi.BoolInput `pulumi:"mysqlFirewallMode"`
	// DEPRECATED -- typo of mysqlx_zstd_default_compression_level. variable will be ignored.
	MysqlZstdDefaultCompressionLevel pulumi.IntInput `pulumi:"mysqlZstdDefaultCompressionLevel"`
	// ("mysqlxConnectTimeout") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxConnectTimeout pulumi.IntInput `pulumi:"mysqlxConnectTimeout"`
	// Set the default compression level for the deflate algorithm. ("mysqlxDeflateDefaultCompressionLevel")
	MysqlxDeflateDefaultCompressionLevel pulumi.IntInput `pulumi:"mysqlxDeflateDefaultCompressionLevel"`
	// Limit the upper bound of accepted compression levels for the deflate algorithm. ("mysqlxDeflateMaxClientCompressionLevel")
	MysqlxDeflateMaxClientCompressionLevel pulumi.IntInput `pulumi:"mysqlxDeflateMaxClientCompressionLevel"`
	// ("mysqlxDocumentIdUniquePrefix") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxDocumentIdUniquePrefix pulumi.IntInput `pulumi:"mysqlxDocumentIdUniquePrefix"`
	// ("mysqlxEnableHelloNotice") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxEnableHelloNotice pulumi.BoolInput `pulumi:"mysqlxEnableHelloNotice"`
	// ("mysqlxIdleWorkerThreadTimeout") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxIdleWorkerThreadTimeout pulumi.IntInput `pulumi:"mysqlxIdleWorkerThreadTimeout"`
	// ("mysqlxInteractiveTimeout") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxInteractiveTimeout pulumi.IntInput `pulumi:"mysqlxInteractiveTimeout"`
	// Set the default compression level for the lz4 algorithm. ("mysqlxLz4DefaultCompressionLevel")
	MysqlxLz4defaultCompressionLevel pulumi.IntInput `pulumi:"mysqlxLz4defaultCompressionLevel"`
	// Limit the upper bound of accepted compression levels for the lz4 algorithm. ("mysqlxLz4MaxClientCompressionLevel")
	MysqlxLz4maxClientCompressionLevel pulumi.IntInput `pulumi:"mysqlxLz4maxClientCompressionLevel"`
	// ("mysqlxMaxAllowedPacket") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxMaxAllowedPacket pulumi.IntInput `pulumi:"mysqlxMaxAllowedPacket"`
	// ("mysqlxMinWorkerThreads") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxMinWorkerThreads pulumi.IntInput `pulumi:"mysqlxMinWorkerThreads"`
	// ("mysqlxReadTimeout") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxReadTimeout pulumi.IntInput `pulumi:"mysqlxReadTimeout"`
	// ("mysqlxWaitTimeout") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxWaitTimeout pulumi.IntInput `pulumi:"mysqlxWaitTimeout"`
	// ("mysqlxWriteTimeout") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxWriteTimeout pulumi.IntInput `pulumi:"mysqlxWriteTimeout"`
	// Set the default compression level for the zstd algorithm. ("mysqlxZstdDefaultCompressionLevel")
	MysqlxZstdDefaultCompressionLevel pulumi.IntInput `pulumi:"mysqlxZstdDefaultCompressionLevel"`
	// Limit the upper bound of accepted compression levels for the zstd algorithm. ("mysqlxZstdMaxClientCompressionLevel")
	MysqlxZstdMaxClientCompressionLevel pulumi.IntInput `pulumi:"mysqlxZstdMaxClientCompressionLevel"`
	// ("parserMaxMemSize")
	ParserMaxMemSize pulumi.IntInput `pulumi:"parserMaxMemSize"`
	// ("queryAllocBlockSize") DEPRECATED -- variable should not be settable and will be ignored
	QueryAllocBlockSize pulumi.IntInput `pulumi:"queryAllocBlockSize"`
	// ("queryPreallocSize") DEPRECATED -- variable should not be settable and will be ignored
	QueryPreallocSize pulumi.IntInput `pulumi:"queryPreallocSize"`
	// ("sqlMode")
	SqlMode pulumi.StringInput `pulumi:"sqlMode"`
	// ("sqlRequirePrimaryKey")
	SqlRequirePrimaryKey pulumi.BoolInput `pulumi:"sqlRequirePrimaryKey"`
	// ("sqlWarnings")
	SqlWarnings pulumi.BoolInput `pulumi:"sqlWarnings"`
	// ("transactionIsolation")
	TransactionIsolation pulumi.StringInput `pulumi:"transactionIsolation"`
}

func (GetMysqlConfigurationVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlConfigurationVariable)(nil)).Elem()
}

func (i GetMysqlConfigurationVariableArgs) ToGetMysqlConfigurationVariableOutput() GetMysqlConfigurationVariableOutput {
	return i.ToGetMysqlConfigurationVariableOutputWithContext(context.Background())
}

func (i GetMysqlConfigurationVariableArgs) ToGetMysqlConfigurationVariableOutputWithContext(ctx context.Context) GetMysqlConfigurationVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlConfigurationVariableOutput)
}

// GetMysqlConfigurationVariableArrayInput is an input type that accepts GetMysqlConfigurationVariableArray and GetMysqlConfigurationVariableArrayOutput values.
// You can construct a concrete instance of `GetMysqlConfigurationVariableArrayInput` via:
//
//          GetMysqlConfigurationVariableArray{ GetMysqlConfigurationVariableArgs{...} }
type GetMysqlConfigurationVariableArrayInput interface {
	pulumi.Input

	ToGetMysqlConfigurationVariableArrayOutput() GetMysqlConfigurationVariableArrayOutput
	ToGetMysqlConfigurationVariableArrayOutputWithContext(context.Context) GetMysqlConfigurationVariableArrayOutput
}

type GetMysqlConfigurationVariableArray []GetMysqlConfigurationVariableInput

func (GetMysqlConfigurationVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlConfigurationVariable)(nil)).Elem()
}

func (i GetMysqlConfigurationVariableArray) ToGetMysqlConfigurationVariableArrayOutput() GetMysqlConfigurationVariableArrayOutput {
	return i.ToGetMysqlConfigurationVariableArrayOutputWithContext(context.Background())
}

func (i GetMysqlConfigurationVariableArray) ToGetMysqlConfigurationVariableArrayOutputWithContext(ctx context.Context) GetMysqlConfigurationVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlConfigurationVariableArrayOutput)
}

type GetMysqlConfigurationVariableOutput struct{ *pulumi.OutputState }

func (GetMysqlConfigurationVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlConfigurationVariable)(nil)).Elem()
}

func (o GetMysqlConfigurationVariableOutput) ToGetMysqlConfigurationVariableOutput() GetMysqlConfigurationVariableOutput {
	return o
}

func (o GetMysqlConfigurationVariableOutput) ToGetMysqlConfigurationVariableOutputWithContext(ctx context.Context) GetMysqlConfigurationVariableOutput {
	return o
}

// ("autocommit")
func (o GetMysqlConfigurationVariableOutput) Autocommit() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) bool { return v.Autocommit }).(pulumi.BoolOutput)
}

// Sets the binary log expiration period in seconds. binlogExpireLogsSeconds corresponds to the MySQL binary logging system variable [binlogExpireLogsSeconds](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds).
func (o GetMysqlConfigurationVariableOutput) BinlogExpireLogsSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.BinlogExpireLogsSeconds }).(pulumi.IntOutput)
}

// Configures the amount of table metadata added to the binary log when using row-based logging. binlogRowMetadata corresponds to the MySQL binary logging system variable [binlogRowMetadata](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_metadata).
func (o GetMysqlConfigurationVariableOutput) BinlogRowMetadata() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.BinlogRowMetadata }).(pulumi.StringOutput)
}

// When set to PARTIAL_JSON, this enables use of a space-efficient binary log format for updates that modify only a small portion of a JSON document. binlogRowValueOptions corresponds to the MySQL binary logging system variable [binlogRowValueOptions](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_value_options).
func (o GetMysqlConfigurationVariableOutput) BinlogRowValueOptions() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.BinlogRowValueOptions }).(pulumi.StringOutput)
}

// Enables compression for transactions that are written to binary log files on this server. binlogTransactionCompression corresponds to the MySQL binary logging system variable [binlogTransactionCompression](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_transaction_compression).
func (o GetMysqlConfigurationVariableOutput) BinlogTransactionCompression() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) bool { return v.BinlogTransactionCompression }).(pulumi.BoolOutput)
}

// ("completionType")
func (o GetMysqlConfigurationVariableOutput) CompletionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.CompletionType }).(pulumi.StringOutput)
}

// ("connectTimeout")
func (o GetMysqlConfigurationVariableOutput) ConnectTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.ConnectTimeout }).(pulumi.IntOutput)
}

// ("cteMaxRecursionDepth")
func (o GetMysqlConfigurationVariableOutput) CteMaxRecursionDepth() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.CteMaxRecursionDepth }).(pulumi.IntOutput)
}

// ("defaultAuthenticationPlugin")
func (o GetMysqlConfigurationVariableOutput) DefaultAuthenticationPlugin() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.DefaultAuthenticationPlugin }).(pulumi.StringOutput)
}

// ("foreignKeyChecks")
func (o GetMysqlConfigurationVariableOutput) ForeignKeyChecks() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) bool { return v.ForeignKeyChecks }).(pulumi.BoolOutput)
}

// ("generatedRandomPasswordLength") DEPRECATED -- variable should not be settable and will be ignored
func (o GetMysqlConfigurationVariableOutput) GeneratedRandomPasswordLength() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.GeneratedRandomPasswordLength }).(pulumi.IntOutput)
}

// * EVENTUAL: Both RO and RW transactions do not wait for preceding transactions to be applied before executing. A RW transaction does not wait for other members to apply a transaction. This means that a transaction could be externalized on one member before the others. This also means that in the event of a primary failover, the new primary can accept new RO and RW transactions before the previous primary transactions are all applied. RO transactions could result in outdated values, RW transactions could result in a rollback due to conflicts.
// * BEFORE_ON_PRIMARY_FAILOVER: New RO or RW transactions with a newly elected primary that is applying backlog from the old primary are held (not applied) until any backlog has been applied. This ensures that when a primary failover happens, intentionally or not, clients always see the latest value on the primary. This guarantees consistency, but means that clients must be able to handle the delay in the event that a backlog is being applied. Usually this delay should be minimal, but does depend on the size of the backlog.
// * BEFORE: A RW transaction waits for all preceding transactions to complete before being applied. A RO transaction waits for all preceding transactions to complete before being executed. This ensures that this transaction reads the latest value by only affecting the latency of the transaction. This reduces the overhead of synchronization on every RW transaction, by ensuring synchronization is used only on RO transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
// * AFTER: A RW transaction waits until its changes have been applied to all of the other members. This value has no effect on RO transactions. This mode ensures that when a transaction is committed on the local member, any subsequent transaction reads the written value or a more recent value on any group member. Use this mode with a group that is used for predominantly RO operations to ensure that applied RW transactions are applied everywhere once they commit. This could be used by your application to ensure that subsequent reads fetch the latest data which includes the latest writes. This reduces the overhead of synchronization on every RO transaction, by ensuring synchronization is used only on RW transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
// * BEFORE_AND_AFTER: A RW transaction waits for 1) all preceding transactions to complete before being applied and 2) until its changes have been applied on other members. A RO transaction waits for all preceding transactions to complete before execution takes place. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
func (o GetMysqlConfigurationVariableOutput) GroupReplicationConsistency() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.GroupReplicationConsistency }).(pulumi.StringOutput)
}

// ("informationSchemaStatsExpiry")
func (o GetMysqlConfigurationVariableOutput) InformationSchemaStatsExpiry() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.InformationSchemaStatsExpiry }).(pulumi.IntOutput)
}

// ("innodbBufferPoolInstances")
func (o GetMysqlConfigurationVariableOutput) InnodbBufferPoolInstances() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.InnodbBufferPoolInstances }).(pulumi.IntOutput)
}

// ("innodbBufferPoolSize")
func (o GetMysqlConfigurationVariableOutput) InnodbBufferPoolSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.InnodbBufferPoolSize }).(pulumi.StringOutput)
}

// ("innodbFtEnableStopword")
func (o GetMysqlConfigurationVariableOutput) InnodbFtEnableStopword() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) bool { return v.InnodbFtEnableStopword }).(pulumi.BoolOutput)
}

// ("innodbFtMaxTokenSize")
func (o GetMysqlConfigurationVariableOutput) InnodbFtMaxTokenSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.InnodbFtMaxTokenSize }).(pulumi.IntOutput)
}

// ("innodbFtMinTokenSize")
func (o GetMysqlConfigurationVariableOutput) InnodbFtMinTokenSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.InnodbFtMinTokenSize }).(pulumi.IntOutput)
}

// ("innodbFtNumWordOptimize")
func (o GetMysqlConfigurationVariableOutput) InnodbFtNumWordOptimize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.InnodbFtNumWordOptimize }).(pulumi.IntOutput)
}

// ("innodbFtResultCacheLimit")
func (o GetMysqlConfigurationVariableOutput) InnodbFtResultCacheLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.InnodbFtResultCacheLimit }).(pulumi.IntOutput)
}

// ("innodbFtServerStopwordTable")
func (o GetMysqlConfigurationVariableOutput) InnodbFtServerStopwordTable() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.InnodbFtServerStopwordTable }).(pulumi.StringOutput)
}

// ("innodbLockWaitTimeout")
func (o GetMysqlConfigurationVariableOutput) InnodbLockWaitTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.InnodbLockWaitTimeout }).(pulumi.IntOutput)
}

// ("innodbMaxPurgeLag")
func (o GetMysqlConfigurationVariableOutput) InnodbMaxPurgeLag() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.InnodbMaxPurgeLag }).(pulumi.IntOutput)
}

// ("innodbMaxPurgeLagDelay")
func (o GetMysqlConfigurationVariableOutput) InnodbMaxPurgeLagDelay() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.InnodbMaxPurgeLagDelay }).(pulumi.IntOutput)
}

// ("localInfile")
func (o GetMysqlConfigurationVariableOutput) LocalInfile() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) bool { return v.LocalInfile }).(pulumi.BoolOutput)
}

// ("mandatoryRoles")
func (o GetMysqlConfigurationVariableOutput) MandatoryRoles() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.MandatoryRoles }).(pulumi.StringOutput)
}

// ("maxConnections")
func (o GetMysqlConfigurationVariableOutput) MaxConnections() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MaxConnections }).(pulumi.IntOutput)
}

// ("maxExecutionTime")
func (o GetMysqlConfigurationVariableOutput) MaxExecutionTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MaxExecutionTime }).(pulumi.IntOutput)
}

// ("maxPreparedStmtCount")
func (o GetMysqlConfigurationVariableOutput) MaxPreparedStmtCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MaxPreparedStmtCount }).(pulumi.IntOutput)
}

// ("mysqlFirewallMode")
func (o GetMysqlConfigurationVariableOutput) MysqlFirewallMode() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) bool { return v.MysqlFirewallMode }).(pulumi.BoolOutput)
}

// DEPRECATED -- typo of mysqlx_zstd_default_compression_level. variable will be ignored.
func (o GetMysqlConfigurationVariableOutput) MysqlZstdDefaultCompressionLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MysqlZstdDefaultCompressionLevel }).(pulumi.IntOutput)
}

// ("mysqlxConnectTimeout") DEPRECATED -- variable should not be settable and will be ignored
func (o GetMysqlConfigurationVariableOutput) MysqlxConnectTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MysqlxConnectTimeout }).(pulumi.IntOutput)
}

// Set the default compression level for the deflate algorithm. ("mysqlxDeflateDefaultCompressionLevel")
func (o GetMysqlConfigurationVariableOutput) MysqlxDeflateDefaultCompressionLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MysqlxDeflateDefaultCompressionLevel }).(pulumi.IntOutput)
}

// Limit the upper bound of accepted compression levels for the deflate algorithm. ("mysqlxDeflateMaxClientCompressionLevel")
func (o GetMysqlConfigurationVariableOutput) MysqlxDeflateMaxClientCompressionLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MysqlxDeflateMaxClientCompressionLevel }).(pulumi.IntOutput)
}

// ("mysqlxDocumentIdUniquePrefix") DEPRECATED -- variable should not be settable and will be ignored
func (o GetMysqlConfigurationVariableOutput) MysqlxDocumentIdUniquePrefix() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MysqlxDocumentIdUniquePrefix }).(pulumi.IntOutput)
}

// ("mysqlxEnableHelloNotice") DEPRECATED -- variable should not be settable and will be ignored
func (o GetMysqlConfigurationVariableOutput) MysqlxEnableHelloNotice() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) bool { return v.MysqlxEnableHelloNotice }).(pulumi.BoolOutput)
}

// ("mysqlxIdleWorkerThreadTimeout") DEPRECATED -- variable should not be settable and will be ignored
func (o GetMysqlConfigurationVariableOutput) MysqlxIdleWorkerThreadTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MysqlxIdleWorkerThreadTimeout }).(pulumi.IntOutput)
}

// ("mysqlxInteractiveTimeout") DEPRECATED -- variable should not be settable and will be ignored
func (o GetMysqlConfigurationVariableOutput) MysqlxInteractiveTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MysqlxInteractiveTimeout }).(pulumi.IntOutput)
}

// Set the default compression level for the lz4 algorithm. ("mysqlxLz4DefaultCompressionLevel")
func (o GetMysqlConfigurationVariableOutput) MysqlxLz4defaultCompressionLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MysqlxLz4defaultCompressionLevel }).(pulumi.IntOutput)
}

// Limit the upper bound of accepted compression levels for the lz4 algorithm. ("mysqlxLz4MaxClientCompressionLevel")
func (o GetMysqlConfigurationVariableOutput) MysqlxLz4maxClientCompressionLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MysqlxLz4maxClientCompressionLevel }).(pulumi.IntOutput)
}

// ("mysqlxMaxAllowedPacket") DEPRECATED -- variable should not be settable and will be ignored
func (o GetMysqlConfigurationVariableOutput) MysqlxMaxAllowedPacket() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MysqlxMaxAllowedPacket }).(pulumi.IntOutput)
}

// ("mysqlxMinWorkerThreads") DEPRECATED -- variable should not be settable and will be ignored
func (o GetMysqlConfigurationVariableOutput) MysqlxMinWorkerThreads() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MysqlxMinWorkerThreads }).(pulumi.IntOutput)
}

// ("mysqlxReadTimeout") DEPRECATED -- variable should not be settable and will be ignored
func (o GetMysqlConfigurationVariableOutput) MysqlxReadTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MysqlxReadTimeout }).(pulumi.IntOutput)
}

// ("mysqlxWaitTimeout") DEPRECATED -- variable should not be settable and will be ignored
func (o GetMysqlConfigurationVariableOutput) MysqlxWaitTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MysqlxWaitTimeout }).(pulumi.IntOutput)
}

// ("mysqlxWriteTimeout") DEPRECATED -- variable should not be settable and will be ignored
func (o GetMysqlConfigurationVariableOutput) MysqlxWriteTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MysqlxWriteTimeout }).(pulumi.IntOutput)
}

// Set the default compression level for the zstd algorithm. ("mysqlxZstdDefaultCompressionLevel")
func (o GetMysqlConfigurationVariableOutput) MysqlxZstdDefaultCompressionLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MysqlxZstdDefaultCompressionLevel }).(pulumi.IntOutput)
}

// Limit the upper bound of accepted compression levels for the zstd algorithm. ("mysqlxZstdMaxClientCompressionLevel")
func (o GetMysqlConfigurationVariableOutput) MysqlxZstdMaxClientCompressionLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MysqlxZstdMaxClientCompressionLevel }).(pulumi.IntOutput)
}

// ("parserMaxMemSize")
func (o GetMysqlConfigurationVariableOutput) ParserMaxMemSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.ParserMaxMemSize }).(pulumi.IntOutput)
}

// ("queryAllocBlockSize") DEPRECATED -- variable should not be settable and will be ignored
func (o GetMysqlConfigurationVariableOutput) QueryAllocBlockSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.QueryAllocBlockSize }).(pulumi.IntOutput)
}

// ("queryPreallocSize") DEPRECATED -- variable should not be settable and will be ignored
func (o GetMysqlConfigurationVariableOutput) QueryPreallocSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.QueryPreallocSize }).(pulumi.IntOutput)
}

// ("sqlMode")
func (o GetMysqlConfigurationVariableOutput) SqlMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.SqlMode }).(pulumi.StringOutput)
}

// ("sqlRequirePrimaryKey")
func (o GetMysqlConfigurationVariableOutput) SqlRequirePrimaryKey() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) bool { return v.SqlRequirePrimaryKey }).(pulumi.BoolOutput)
}

// ("sqlWarnings")
func (o GetMysqlConfigurationVariableOutput) SqlWarnings() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) bool { return v.SqlWarnings }).(pulumi.BoolOutput)
}

// ("transactionIsolation")
func (o GetMysqlConfigurationVariableOutput) TransactionIsolation() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.TransactionIsolation }).(pulumi.StringOutput)
}

type GetMysqlConfigurationVariableArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlConfigurationVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlConfigurationVariable)(nil)).Elem()
}

func (o GetMysqlConfigurationVariableArrayOutput) ToGetMysqlConfigurationVariableArrayOutput() GetMysqlConfigurationVariableArrayOutput {
	return o
}

func (o GetMysqlConfigurationVariableArrayOutput) ToGetMysqlConfigurationVariableArrayOutputWithContext(ctx context.Context) GetMysqlConfigurationVariableArrayOutput {
	return o
}

func (o GetMysqlConfigurationVariableArrayOutput) Index(i pulumi.IntInput) GetMysqlConfigurationVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlConfigurationVariable {
		return vs[0].([]GetMysqlConfigurationVariable)[vs[1].(int)]
	}).(GetMysqlConfigurationVariableOutput)
}

type GetMysqlConfigurationsConfiguration struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// User-provided data about the Configuration.
	Description string `pulumi:"description"`
	// A filter to return only the resource matching the given display name exactly.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the Configuration.
	Id string `pulumi:"id"`
	// The OCID of the Configuration from which this Configuration is "derived". This is entirely a metadata relationship. There is no relation between the values in this Configuration and its parent.
	ParentConfigurationId string `pulumi:"parentConfigurationId"`
	// The requested Shape name.
	ShapeName string `pulumi:"shapeName"`
	// Configuration Lifecycle State
	State string `pulumi:"state"`
	// The date and time the Configuration was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the Configuration was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeUpdated string `pulumi:"timeUpdated"`
	// The requested Configuration types.
	Type string `pulumi:"type"`
	// User controllable service variables.
	Variables GetMysqlConfigurationsConfigurationVariables `pulumi:"variables"`
}

// GetMysqlConfigurationsConfigurationInput is an input type that accepts GetMysqlConfigurationsConfigurationArgs and GetMysqlConfigurationsConfigurationOutput values.
// You can construct a concrete instance of `GetMysqlConfigurationsConfigurationInput` via:
//
//          GetMysqlConfigurationsConfigurationArgs{...}
type GetMysqlConfigurationsConfigurationInput interface {
	pulumi.Input

	ToGetMysqlConfigurationsConfigurationOutput() GetMysqlConfigurationsConfigurationOutput
	ToGetMysqlConfigurationsConfigurationOutputWithContext(context.Context) GetMysqlConfigurationsConfigurationOutput
}

type GetMysqlConfigurationsConfigurationArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// User-provided data about the Configuration.
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only the resource matching the given display name exactly.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The OCID of the Configuration.
	Id pulumi.StringInput `pulumi:"id"`
	// The OCID of the Configuration from which this Configuration is "derived". This is entirely a metadata relationship. There is no relation between the values in this Configuration and its parent.
	ParentConfigurationId pulumi.StringInput `pulumi:"parentConfigurationId"`
	// The requested Shape name.
	ShapeName pulumi.StringInput `pulumi:"shapeName"`
	// Configuration Lifecycle State
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the Configuration was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the Configuration was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// The requested Configuration types.
	Type pulumi.StringInput `pulumi:"type"`
	// User controllable service variables.
	Variables GetMysqlConfigurationsConfigurationVariablesInput `pulumi:"variables"`
}

func (GetMysqlConfigurationsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlConfigurationsConfiguration)(nil)).Elem()
}

func (i GetMysqlConfigurationsConfigurationArgs) ToGetMysqlConfigurationsConfigurationOutput() GetMysqlConfigurationsConfigurationOutput {
	return i.ToGetMysqlConfigurationsConfigurationOutputWithContext(context.Background())
}

func (i GetMysqlConfigurationsConfigurationArgs) ToGetMysqlConfigurationsConfigurationOutputWithContext(ctx context.Context) GetMysqlConfigurationsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlConfigurationsConfigurationOutput)
}

// GetMysqlConfigurationsConfigurationArrayInput is an input type that accepts GetMysqlConfigurationsConfigurationArray and GetMysqlConfigurationsConfigurationArrayOutput values.
// You can construct a concrete instance of `GetMysqlConfigurationsConfigurationArrayInput` via:
//
//          GetMysqlConfigurationsConfigurationArray{ GetMysqlConfigurationsConfigurationArgs{...} }
type GetMysqlConfigurationsConfigurationArrayInput interface {
	pulumi.Input

	ToGetMysqlConfigurationsConfigurationArrayOutput() GetMysqlConfigurationsConfigurationArrayOutput
	ToGetMysqlConfigurationsConfigurationArrayOutputWithContext(context.Context) GetMysqlConfigurationsConfigurationArrayOutput
}

type GetMysqlConfigurationsConfigurationArray []GetMysqlConfigurationsConfigurationInput

func (GetMysqlConfigurationsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlConfigurationsConfiguration)(nil)).Elem()
}

func (i GetMysqlConfigurationsConfigurationArray) ToGetMysqlConfigurationsConfigurationArrayOutput() GetMysqlConfigurationsConfigurationArrayOutput {
	return i.ToGetMysqlConfigurationsConfigurationArrayOutputWithContext(context.Background())
}

func (i GetMysqlConfigurationsConfigurationArray) ToGetMysqlConfigurationsConfigurationArrayOutputWithContext(ctx context.Context) GetMysqlConfigurationsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlConfigurationsConfigurationArrayOutput)
}

type GetMysqlConfigurationsConfigurationOutput struct{ *pulumi.OutputState }

func (GetMysqlConfigurationsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlConfigurationsConfiguration)(nil)).Elem()
}

func (o GetMysqlConfigurationsConfigurationOutput) ToGetMysqlConfigurationsConfigurationOutput() GetMysqlConfigurationsConfigurationOutput {
	return o
}

func (o GetMysqlConfigurationsConfigurationOutput) ToGetMysqlConfigurationsConfigurationOutputWithContext(ctx context.Context) GetMysqlConfigurationsConfigurationOutput {
	return o
}

// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetMysqlConfigurationsConfigurationOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfiguration) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetMysqlConfigurationsConfigurationOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfiguration) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// User-provided data about the Configuration.
func (o GetMysqlConfigurationsConfigurationOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfiguration) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only the resource matching the given display name exactly.
func (o GetMysqlConfigurationsConfigurationOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfiguration) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetMysqlConfigurationsConfigurationOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfiguration) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The OCID of the Configuration.
func (o GetMysqlConfigurationsConfigurationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfiguration) string { return v.Id }).(pulumi.StringOutput)
}

// The OCID of the Configuration from which this Configuration is "derived". This is entirely a metadata relationship. There is no relation between the values in this Configuration and its parent.
func (o GetMysqlConfigurationsConfigurationOutput) ParentConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfiguration) string { return v.ParentConfigurationId }).(pulumi.StringOutput)
}

// The requested Shape name.
func (o GetMysqlConfigurationsConfigurationOutput) ShapeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfiguration) string { return v.ShapeName }).(pulumi.StringOutput)
}

// Configuration Lifecycle State
func (o GetMysqlConfigurationsConfigurationOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfiguration) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the Configuration was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o GetMysqlConfigurationsConfigurationOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfiguration) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the Configuration was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o GetMysqlConfigurationsConfigurationOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfiguration) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The requested Configuration types.
func (o GetMysqlConfigurationsConfigurationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfiguration) string { return v.Type }).(pulumi.StringOutput)
}

// User controllable service variables.
func (o GetMysqlConfigurationsConfigurationOutput) Variables() GetMysqlConfigurationsConfigurationVariablesOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfiguration) GetMysqlConfigurationsConfigurationVariables {
		return v.Variables
	}).(GetMysqlConfigurationsConfigurationVariablesOutput)
}

type GetMysqlConfigurationsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlConfigurationsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlConfigurationsConfiguration)(nil)).Elem()
}

func (o GetMysqlConfigurationsConfigurationArrayOutput) ToGetMysqlConfigurationsConfigurationArrayOutput() GetMysqlConfigurationsConfigurationArrayOutput {
	return o
}

func (o GetMysqlConfigurationsConfigurationArrayOutput) ToGetMysqlConfigurationsConfigurationArrayOutputWithContext(ctx context.Context) GetMysqlConfigurationsConfigurationArrayOutput {
	return o
}

func (o GetMysqlConfigurationsConfigurationArrayOutput) Index(i pulumi.IntInput) GetMysqlConfigurationsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlConfigurationsConfiguration {
		return vs[0].([]GetMysqlConfigurationsConfiguration)[vs[1].(int)]
	}).(GetMysqlConfigurationsConfigurationOutput)
}

type GetMysqlConfigurationsConfigurationVariables struct {
	// ("autocommit")
	Autocommit bool `pulumi:"autocommit"`
	// Sets the binary log expiration period in seconds. binlogExpireLogsSeconds corresponds to the MySQL binary logging system variable [binlogExpireLogsSeconds](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds).
	BinlogExpireLogsSeconds int `pulumi:"binlogExpireLogsSeconds"`
	// Configures the amount of table metadata added to the binary log when using row-based logging. binlogRowMetadata corresponds to the MySQL binary logging system variable [binlogRowMetadata](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_metadata).
	BinlogRowMetadata string `pulumi:"binlogRowMetadata"`
	// When set to PARTIAL_JSON, this enables use of a space-efficient binary log format for updates that modify only a small portion of a JSON document. binlogRowValueOptions corresponds to the MySQL binary logging system variable [binlogRowValueOptions](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_value_options).
	BinlogRowValueOptions string `pulumi:"binlogRowValueOptions"`
	// Enables compression for transactions that are written to binary log files on this server. binlogTransactionCompression corresponds to the MySQL binary logging system variable [binlogTransactionCompression](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_transaction_compression).
	BinlogTransactionCompression bool `pulumi:"binlogTransactionCompression"`
	// ("completionType")
	CompletionType string `pulumi:"completionType"`
	// ("connectTimeout")
	ConnectTimeout int `pulumi:"connectTimeout"`
	// ("cteMaxRecursionDepth")
	CteMaxRecursionDepth int `pulumi:"cteMaxRecursionDepth"`
	// ("defaultAuthenticationPlugin")
	DefaultAuthenticationPlugin string `pulumi:"defaultAuthenticationPlugin"`
	// ("foreignKeyChecks")
	ForeignKeyChecks bool `pulumi:"foreignKeyChecks"`
	// ("generatedRandomPasswordLength") DEPRECATED -- variable should not be settable and will be ignored
	GeneratedRandomPasswordLength int `pulumi:"generatedRandomPasswordLength"`
	// * EVENTUAL: Both RO and RW transactions do not wait for preceding transactions to be applied before executing. A RW transaction does not wait for other members to apply a transaction. This means that a transaction could be externalized on one member before the others. This also means that in the event of a primary failover, the new primary can accept new RO and RW transactions before the previous primary transactions are all applied. RO transactions could result in outdated values, RW transactions could result in a rollback due to conflicts.
	// * BEFORE_ON_PRIMARY_FAILOVER: New RO or RW transactions with a newly elected primary that is applying backlog from the old primary are held (not applied) until any backlog has been applied. This ensures that when a primary failover happens, intentionally or not, clients always see the latest value on the primary. This guarantees consistency, but means that clients must be able to handle the delay in the event that a backlog is being applied. Usually this delay should be minimal, but does depend on the size of the backlog.
	// * BEFORE: A RW transaction waits for all preceding transactions to complete before being applied. A RO transaction waits for all preceding transactions to complete before being executed. This ensures that this transaction reads the latest value by only affecting the latency of the transaction. This reduces the overhead of synchronization on every RW transaction, by ensuring synchronization is used only on RO transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
	// * AFTER: A RW transaction waits until its changes have been applied to all of the other members. This value has no effect on RO transactions. This mode ensures that when a transaction is committed on the local member, any subsequent transaction reads the written value or a more recent value on any group member. Use this mode with a group that is used for predominantly RO operations to ensure that applied RW transactions are applied everywhere once they commit. This could be used by your application to ensure that subsequent reads fetch the latest data which includes the latest writes. This reduces the overhead of synchronization on every RO transaction, by ensuring synchronization is used only on RW transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
	// * BEFORE_AND_AFTER: A RW transaction waits for 1) all preceding transactions to complete before being applied and 2) until its changes have been applied on other members. A RO transaction waits for all preceding transactions to complete before execution takes place. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
	GroupReplicationConsistency string `pulumi:"groupReplicationConsistency"`
	// ("informationSchemaStatsExpiry")
	InformationSchemaStatsExpiry int `pulumi:"informationSchemaStatsExpiry"`
	// ("innodbBufferPoolInstances")
	InnodbBufferPoolInstances int `pulumi:"innodbBufferPoolInstances"`
	// ("innodbBufferPoolSize")
	InnodbBufferPoolSize string `pulumi:"innodbBufferPoolSize"`
	// ("innodbFtEnableStopword")
	InnodbFtEnableStopword bool `pulumi:"innodbFtEnableStopword"`
	// ("innodbFtMaxTokenSize")
	InnodbFtMaxTokenSize int `pulumi:"innodbFtMaxTokenSize"`
	// ("innodbFtMinTokenSize")
	InnodbFtMinTokenSize int `pulumi:"innodbFtMinTokenSize"`
	// ("innodbFtNumWordOptimize")
	InnodbFtNumWordOptimize int `pulumi:"innodbFtNumWordOptimize"`
	// ("innodbFtResultCacheLimit")
	InnodbFtResultCacheLimit int `pulumi:"innodbFtResultCacheLimit"`
	// ("innodbFtServerStopwordTable")
	InnodbFtServerStopwordTable string `pulumi:"innodbFtServerStopwordTable"`
	// ("innodbLockWaitTimeout")
	InnodbLockWaitTimeout int `pulumi:"innodbLockWaitTimeout"`
	// ("innodbMaxPurgeLag")
	InnodbMaxPurgeLag int `pulumi:"innodbMaxPurgeLag"`
	// ("innodbMaxPurgeLagDelay")
	InnodbMaxPurgeLagDelay int `pulumi:"innodbMaxPurgeLagDelay"`
	// ("localInfile")
	LocalInfile bool `pulumi:"localInfile"`
	// ("mandatoryRoles")
	MandatoryRoles string `pulumi:"mandatoryRoles"`
	// ("maxConnections")
	MaxConnections int `pulumi:"maxConnections"`
	// ("maxExecutionTime")
	MaxExecutionTime int `pulumi:"maxExecutionTime"`
	// ("maxPreparedStmtCount")
	MaxPreparedStmtCount int `pulumi:"maxPreparedStmtCount"`
	// ("mysqlFirewallMode")
	MysqlFirewallMode bool `pulumi:"mysqlFirewallMode"`
	// DEPRECATED -- typo of mysqlx_zstd_default_compression_level. variable will be ignored.
	MysqlZstdDefaultCompressionLevel int `pulumi:"mysqlZstdDefaultCompressionLevel"`
	// ("mysqlxConnectTimeout") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxConnectTimeout int `pulumi:"mysqlxConnectTimeout"`
	// Set the default compression level for the deflate algorithm. ("mysqlxDeflateDefaultCompressionLevel")
	MysqlxDeflateDefaultCompressionLevel int `pulumi:"mysqlxDeflateDefaultCompressionLevel"`
	// Limit the upper bound of accepted compression levels for the deflate algorithm. ("mysqlxDeflateMaxClientCompressionLevel")
	MysqlxDeflateMaxClientCompressionLevel int `pulumi:"mysqlxDeflateMaxClientCompressionLevel"`
	// ("mysqlxDocumentIdUniquePrefix") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxDocumentIdUniquePrefix int `pulumi:"mysqlxDocumentIdUniquePrefix"`
	// ("mysqlxEnableHelloNotice") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxEnableHelloNotice bool `pulumi:"mysqlxEnableHelloNotice"`
	// ("mysqlxIdleWorkerThreadTimeout") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxIdleWorkerThreadTimeout int `pulumi:"mysqlxIdleWorkerThreadTimeout"`
	// ("mysqlxInteractiveTimeout") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxInteractiveTimeout int `pulumi:"mysqlxInteractiveTimeout"`
	// Set the default compression level for the lz4 algorithm. ("mysqlxLz4DefaultCompressionLevel")
	MysqlxLz4defaultCompressionLevel int `pulumi:"mysqlxLz4defaultCompressionLevel"`
	// Limit the upper bound of accepted compression levels for the lz4 algorithm. ("mysqlxLz4MaxClientCompressionLevel")
	MysqlxLz4maxClientCompressionLevel int `pulumi:"mysqlxLz4maxClientCompressionLevel"`
	// ("mysqlxMaxAllowedPacket") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxMaxAllowedPacket int `pulumi:"mysqlxMaxAllowedPacket"`
	// ("mysqlxMinWorkerThreads") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxMinWorkerThreads int `pulumi:"mysqlxMinWorkerThreads"`
	// ("mysqlxReadTimeout") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxReadTimeout int `pulumi:"mysqlxReadTimeout"`
	// ("mysqlxWaitTimeout") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxWaitTimeout int `pulumi:"mysqlxWaitTimeout"`
	// ("mysqlxWriteTimeout") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxWriteTimeout int `pulumi:"mysqlxWriteTimeout"`
	// Set the default compression level for the zstd algorithm. ("mysqlxZstdDefaultCompressionLevel")
	MysqlxZstdDefaultCompressionLevel int `pulumi:"mysqlxZstdDefaultCompressionLevel"`
	// Limit the upper bound of accepted compression levels for the zstd algorithm. ("mysqlxZstdMaxClientCompressionLevel")
	MysqlxZstdMaxClientCompressionLevel int `pulumi:"mysqlxZstdMaxClientCompressionLevel"`
	// ("parserMaxMemSize")
	ParserMaxMemSize int `pulumi:"parserMaxMemSize"`
	// ("queryAllocBlockSize") DEPRECATED -- variable should not be settable and will be ignored
	QueryAllocBlockSize int `pulumi:"queryAllocBlockSize"`
	// ("queryPreallocSize") DEPRECATED -- variable should not be settable and will be ignored
	QueryPreallocSize int `pulumi:"queryPreallocSize"`
	// ("sqlMode")
	SqlMode string `pulumi:"sqlMode"`
	// ("sqlRequirePrimaryKey")
	SqlRequirePrimaryKey bool `pulumi:"sqlRequirePrimaryKey"`
	// ("sqlWarnings")
	SqlWarnings bool `pulumi:"sqlWarnings"`
	// ("transactionIsolation")
	TransactionIsolation string `pulumi:"transactionIsolation"`
}

// GetMysqlConfigurationsConfigurationVariablesInput is an input type that accepts GetMysqlConfigurationsConfigurationVariablesArgs and GetMysqlConfigurationsConfigurationVariablesOutput values.
// You can construct a concrete instance of `GetMysqlConfigurationsConfigurationVariablesInput` via:
//
//          GetMysqlConfigurationsConfigurationVariablesArgs{...}
type GetMysqlConfigurationsConfigurationVariablesInput interface {
	pulumi.Input

	ToGetMysqlConfigurationsConfigurationVariablesOutput() GetMysqlConfigurationsConfigurationVariablesOutput
	ToGetMysqlConfigurationsConfigurationVariablesOutputWithContext(context.Context) GetMysqlConfigurationsConfigurationVariablesOutput
}

type GetMysqlConfigurationsConfigurationVariablesArgs struct {
	// ("autocommit")
	Autocommit pulumi.BoolInput `pulumi:"autocommit"`
	// Sets the binary log expiration period in seconds. binlogExpireLogsSeconds corresponds to the MySQL binary logging system variable [binlogExpireLogsSeconds](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds).
	BinlogExpireLogsSeconds pulumi.IntInput `pulumi:"binlogExpireLogsSeconds"`
	// Configures the amount of table metadata added to the binary log when using row-based logging. binlogRowMetadata corresponds to the MySQL binary logging system variable [binlogRowMetadata](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_metadata).
	BinlogRowMetadata pulumi.StringInput `pulumi:"binlogRowMetadata"`
	// When set to PARTIAL_JSON, this enables use of a space-efficient binary log format for updates that modify only a small portion of a JSON document. binlogRowValueOptions corresponds to the MySQL binary logging system variable [binlogRowValueOptions](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_value_options).
	BinlogRowValueOptions pulumi.StringInput `pulumi:"binlogRowValueOptions"`
	// Enables compression for transactions that are written to binary log files on this server. binlogTransactionCompression corresponds to the MySQL binary logging system variable [binlogTransactionCompression](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_transaction_compression).
	BinlogTransactionCompression pulumi.BoolInput `pulumi:"binlogTransactionCompression"`
	// ("completionType")
	CompletionType pulumi.StringInput `pulumi:"completionType"`
	// ("connectTimeout")
	ConnectTimeout pulumi.IntInput `pulumi:"connectTimeout"`
	// ("cteMaxRecursionDepth")
	CteMaxRecursionDepth pulumi.IntInput `pulumi:"cteMaxRecursionDepth"`
	// ("defaultAuthenticationPlugin")
	DefaultAuthenticationPlugin pulumi.StringInput `pulumi:"defaultAuthenticationPlugin"`
	// ("foreignKeyChecks")
	ForeignKeyChecks pulumi.BoolInput `pulumi:"foreignKeyChecks"`
	// ("generatedRandomPasswordLength") DEPRECATED -- variable should not be settable and will be ignored
	GeneratedRandomPasswordLength pulumi.IntInput `pulumi:"generatedRandomPasswordLength"`
	// * EVENTUAL: Both RO and RW transactions do not wait for preceding transactions to be applied before executing. A RW transaction does not wait for other members to apply a transaction. This means that a transaction could be externalized on one member before the others. This also means that in the event of a primary failover, the new primary can accept new RO and RW transactions before the previous primary transactions are all applied. RO transactions could result in outdated values, RW transactions could result in a rollback due to conflicts.
	// * BEFORE_ON_PRIMARY_FAILOVER: New RO or RW transactions with a newly elected primary that is applying backlog from the old primary are held (not applied) until any backlog has been applied. This ensures that when a primary failover happens, intentionally or not, clients always see the latest value on the primary. This guarantees consistency, but means that clients must be able to handle the delay in the event that a backlog is being applied. Usually this delay should be minimal, but does depend on the size of the backlog.
	// * BEFORE: A RW transaction waits for all preceding transactions to complete before being applied. A RO transaction waits for all preceding transactions to complete before being executed. This ensures that this transaction reads the latest value by only affecting the latency of the transaction. This reduces the overhead of synchronization on every RW transaction, by ensuring synchronization is used only on RO transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
	// * AFTER: A RW transaction waits until its changes have been applied to all of the other members. This value has no effect on RO transactions. This mode ensures that when a transaction is committed on the local member, any subsequent transaction reads the written value or a more recent value on any group member. Use this mode with a group that is used for predominantly RO operations to ensure that applied RW transactions are applied everywhere once they commit. This could be used by your application to ensure that subsequent reads fetch the latest data which includes the latest writes. This reduces the overhead of synchronization on every RO transaction, by ensuring synchronization is used only on RW transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
	// * BEFORE_AND_AFTER: A RW transaction waits for 1) all preceding transactions to complete before being applied and 2) until its changes have been applied on other members. A RO transaction waits for all preceding transactions to complete before execution takes place. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
	GroupReplicationConsistency pulumi.StringInput `pulumi:"groupReplicationConsistency"`
	// ("informationSchemaStatsExpiry")
	InformationSchemaStatsExpiry pulumi.IntInput `pulumi:"informationSchemaStatsExpiry"`
	// ("innodbBufferPoolInstances")
	InnodbBufferPoolInstances pulumi.IntInput `pulumi:"innodbBufferPoolInstances"`
	// ("innodbBufferPoolSize")
	InnodbBufferPoolSize pulumi.StringInput `pulumi:"innodbBufferPoolSize"`
	// ("innodbFtEnableStopword")
	InnodbFtEnableStopword pulumi.BoolInput `pulumi:"innodbFtEnableStopword"`
	// ("innodbFtMaxTokenSize")
	InnodbFtMaxTokenSize pulumi.IntInput `pulumi:"innodbFtMaxTokenSize"`
	// ("innodbFtMinTokenSize")
	InnodbFtMinTokenSize pulumi.IntInput `pulumi:"innodbFtMinTokenSize"`
	// ("innodbFtNumWordOptimize")
	InnodbFtNumWordOptimize pulumi.IntInput `pulumi:"innodbFtNumWordOptimize"`
	// ("innodbFtResultCacheLimit")
	InnodbFtResultCacheLimit pulumi.IntInput `pulumi:"innodbFtResultCacheLimit"`
	// ("innodbFtServerStopwordTable")
	InnodbFtServerStopwordTable pulumi.StringInput `pulumi:"innodbFtServerStopwordTable"`
	// ("innodbLockWaitTimeout")
	InnodbLockWaitTimeout pulumi.IntInput `pulumi:"innodbLockWaitTimeout"`
	// ("innodbMaxPurgeLag")
	InnodbMaxPurgeLag pulumi.IntInput `pulumi:"innodbMaxPurgeLag"`
	// ("innodbMaxPurgeLagDelay")
	InnodbMaxPurgeLagDelay pulumi.IntInput `pulumi:"innodbMaxPurgeLagDelay"`
	// ("localInfile")
	LocalInfile pulumi.BoolInput `pulumi:"localInfile"`
	// ("mandatoryRoles")
	MandatoryRoles pulumi.StringInput `pulumi:"mandatoryRoles"`
	// ("maxConnections")
	MaxConnections pulumi.IntInput `pulumi:"maxConnections"`
	// ("maxExecutionTime")
	MaxExecutionTime pulumi.IntInput `pulumi:"maxExecutionTime"`
	// ("maxPreparedStmtCount")
	MaxPreparedStmtCount pulumi.IntInput `pulumi:"maxPreparedStmtCount"`
	// ("mysqlFirewallMode")
	MysqlFirewallMode pulumi.BoolInput `pulumi:"mysqlFirewallMode"`
	// DEPRECATED -- typo of mysqlx_zstd_default_compression_level. variable will be ignored.
	MysqlZstdDefaultCompressionLevel pulumi.IntInput `pulumi:"mysqlZstdDefaultCompressionLevel"`
	// ("mysqlxConnectTimeout") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxConnectTimeout pulumi.IntInput `pulumi:"mysqlxConnectTimeout"`
	// Set the default compression level for the deflate algorithm. ("mysqlxDeflateDefaultCompressionLevel")
	MysqlxDeflateDefaultCompressionLevel pulumi.IntInput `pulumi:"mysqlxDeflateDefaultCompressionLevel"`
	// Limit the upper bound of accepted compression levels for the deflate algorithm. ("mysqlxDeflateMaxClientCompressionLevel")
	MysqlxDeflateMaxClientCompressionLevel pulumi.IntInput `pulumi:"mysqlxDeflateMaxClientCompressionLevel"`
	// ("mysqlxDocumentIdUniquePrefix") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxDocumentIdUniquePrefix pulumi.IntInput `pulumi:"mysqlxDocumentIdUniquePrefix"`
	// ("mysqlxEnableHelloNotice") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxEnableHelloNotice pulumi.BoolInput `pulumi:"mysqlxEnableHelloNotice"`
	// ("mysqlxIdleWorkerThreadTimeout") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxIdleWorkerThreadTimeout pulumi.IntInput `pulumi:"mysqlxIdleWorkerThreadTimeout"`
	// ("mysqlxInteractiveTimeout") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxInteractiveTimeout pulumi.IntInput `pulumi:"mysqlxInteractiveTimeout"`
	// Set the default compression level for the lz4 algorithm. ("mysqlxLz4DefaultCompressionLevel")
	MysqlxLz4defaultCompressionLevel pulumi.IntInput `pulumi:"mysqlxLz4defaultCompressionLevel"`
	// Limit the upper bound of accepted compression levels for the lz4 algorithm. ("mysqlxLz4MaxClientCompressionLevel")
	MysqlxLz4maxClientCompressionLevel pulumi.IntInput `pulumi:"mysqlxLz4maxClientCompressionLevel"`
	// ("mysqlxMaxAllowedPacket") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxMaxAllowedPacket pulumi.IntInput `pulumi:"mysqlxMaxAllowedPacket"`
	// ("mysqlxMinWorkerThreads") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxMinWorkerThreads pulumi.IntInput `pulumi:"mysqlxMinWorkerThreads"`
	// ("mysqlxReadTimeout") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxReadTimeout pulumi.IntInput `pulumi:"mysqlxReadTimeout"`
	// ("mysqlxWaitTimeout") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxWaitTimeout pulumi.IntInput `pulumi:"mysqlxWaitTimeout"`
	// ("mysqlxWriteTimeout") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxWriteTimeout pulumi.IntInput `pulumi:"mysqlxWriteTimeout"`
	// Set the default compression level for the zstd algorithm. ("mysqlxZstdDefaultCompressionLevel")
	MysqlxZstdDefaultCompressionLevel pulumi.IntInput `pulumi:"mysqlxZstdDefaultCompressionLevel"`
	// Limit the upper bound of accepted compression levels for the zstd algorithm. ("mysqlxZstdMaxClientCompressionLevel")
	MysqlxZstdMaxClientCompressionLevel pulumi.IntInput `pulumi:"mysqlxZstdMaxClientCompressionLevel"`
	// ("parserMaxMemSize")
	ParserMaxMemSize pulumi.IntInput `pulumi:"parserMaxMemSize"`
	// ("queryAllocBlockSize") DEPRECATED -- variable should not be settable and will be ignored
	QueryAllocBlockSize pulumi.IntInput `pulumi:"queryAllocBlockSize"`
	// ("queryPreallocSize") DEPRECATED -- variable should not be settable and will be ignored
	QueryPreallocSize pulumi.IntInput `pulumi:"queryPreallocSize"`
	// ("sqlMode")
	SqlMode pulumi.StringInput `pulumi:"sqlMode"`
	// ("sqlRequirePrimaryKey")
	SqlRequirePrimaryKey pulumi.BoolInput `pulumi:"sqlRequirePrimaryKey"`
	// ("sqlWarnings")
	SqlWarnings pulumi.BoolInput `pulumi:"sqlWarnings"`
	// ("transactionIsolation")
	TransactionIsolation pulumi.StringInput `pulumi:"transactionIsolation"`
}

func (GetMysqlConfigurationsConfigurationVariablesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlConfigurationsConfigurationVariables)(nil)).Elem()
}

func (i GetMysqlConfigurationsConfigurationVariablesArgs) ToGetMysqlConfigurationsConfigurationVariablesOutput() GetMysqlConfigurationsConfigurationVariablesOutput {
	return i.ToGetMysqlConfigurationsConfigurationVariablesOutputWithContext(context.Background())
}

func (i GetMysqlConfigurationsConfigurationVariablesArgs) ToGetMysqlConfigurationsConfigurationVariablesOutputWithContext(ctx context.Context) GetMysqlConfigurationsConfigurationVariablesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlConfigurationsConfigurationVariablesOutput)
}

type GetMysqlConfigurationsConfigurationVariablesOutput struct{ *pulumi.OutputState }

func (GetMysqlConfigurationsConfigurationVariablesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlConfigurationsConfigurationVariables)(nil)).Elem()
}

func (o GetMysqlConfigurationsConfigurationVariablesOutput) ToGetMysqlConfigurationsConfigurationVariablesOutput() GetMysqlConfigurationsConfigurationVariablesOutput {
	return o
}

func (o GetMysqlConfigurationsConfigurationVariablesOutput) ToGetMysqlConfigurationsConfigurationVariablesOutputWithContext(ctx context.Context) GetMysqlConfigurationsConfigurationVariablesOutput {
	return o
}

// ("autocommit")
func (o GetMysqlConfigurationsConfigurationVariablesOutput) Autocommit() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) bool { return v.Autocommit }).(pulumi.BoolOutput)
}

// Sets the binary log expiration period in seconds. binlogExpireLogsSeconds corresponds to the MySQL binary logging system variable [binlogExpireLogsSeconds](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds).
func (o GetMysqlConfigurationsConfigurationVariablesOutput) BinlogExpireLogsSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) int { return v.BinlogExpireLogsSeconds }).(pulumi.IntOutput)
}

// Configures the amount of table metadata added to the binary log when using row-based logging. binlogRowMetadata corresponds to the MySQL binary logging system variable [binlogRowMetadata](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_metadata).
func (o GetMysqlConfigurationsConfigurationVariablesOutput) BinlogRowMetadata() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) string { return v.BinlogRowMetadata }).(pulumi.StringOutput)
}

// When set to PARTIAL_JSON, this enables use of a space-efficient binary log format for updates that modify only a small portion of a JSON document. binlogRowValueOptions corresponds to the MySQL binary logging system variable [binlogRowValueOptions](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_value_options).
func (o GetMysqlConfigurationsConfigurationVariablesOutput) BinlogRowValueOptions() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) string { return v.BinlogRowValueOptions }).(pulumi.StringOutput)
}

// Enables compression for transactions that are written to binary log files on this server. binlogTransactionCompression corresponds to the MySQL binary logging system variable [binlogTransactionCompression](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_transaction_compression).
func (o GetMysqlConfigurationsConfigurationVariablesOutput) BinlogTransactionCompression() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) bool { return v.BinlogTransactionCompression }).(pulumi.BoolOutput)
}

// ("completionType")
func (o GetMysqlConfigurationsConfigurationVariablesOutput) CompletionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) string { return v.CompletionType }).(pulumi.StringOutput)
}

// ("connectTimeout")
func (o GetMysqlConfigurationsConfigurationVariablesOutput) ConnectTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) int { return v.ConnectTimeout }).(pulumi.IntOutput)
}

// ("cteMaxRecursionDepth")
func (o GetMysqlConfigurationsConfigurationVariablesOutput) CteMaxRecursionDepth() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) int { return v.CteMaxRecursionDepth }).(pulumi.IntOutput)
}

// ("defaultAuthenticationPlugin")
func (o GetMysqlConfigurationsConfigurationVariablesOutput) DefaultAuthenticationPlugin() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) string { return v.DefaultAuthenticationPlugin }).(pulumi.StringOutput)
}

// ("foreignKeyChecks")
func (o GetMysqlConfigurationsConfigurationVariablesOutput) ForeignKeyChecks() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) bool { return v.ForeignKeyChecks }).(pulumi.BoolOutput)
}

// ("generatedRandomPasswordLength") DEPRECATED -- variable should not be settable and will be ignored
func (o GetMysqlConfigurationsConfigurationVariablesOutput) GeneratedRandomPasswordLength() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) int { return v.GeneratedRandomPasswordLength }).(pulumi.IntOutput)
}

// * EVENTUAL: Both RO and RW transactions do not wait for preceding transactions to be applied before executing. A RW transaction does not wait for other members to apply a transaction. This means that a transaction could be externalized on one member before the others. This also means that in the event of a primary failover, the new primary can accept new RO and RW transactions before the previous primary transactions are all applied. RO transactions could result in outdated values, RW transactions could result in a rollback due to conflicts.
// * BEFORE_ON_PRIMARY_FAILOVER: New RO or RW transactions with a newly elected primary that is applying backlog from the old primary are held (not applied) until any backlog has been applied. This ensures that when a primary failover happens, intentionally or not, clients always see the latest value on the primary. This guarantees consistency, but means that clients must be able to handle the delay in the event that a backlog is being applied. Usually this delay should be minimal, but does depend on the size of the backlog.
// * BEFORE: A RW transaction waits for all preceding transactions to complete before being applied. A RO transaction waits for all preceding transactions to complete before being executed. This ensures that this transaction reads the latest value by only affecting the latency of the transaction. This reduces the overhead of synchronization on every RW transaction, by ensuring synchronization is used only on RO transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
// * AFTER: A RW transaction waits until its changes have been applied to all of the other members. This value has no effect on RO transactions. This mode ensures that when a transaction is committed on the local member, any subsequent transaction reads the written value or a more recent value on any group member. Use this mode with a group that is used for predominantly RO operations to ensure that applied RW transactions are applied everywhere once they commit. This could be used by your application to ensure that subsequent reads fetch the latest data which includes the latest writes. This reduces the overhead of synchronization on every RO transaction, by ensuring synchronization is used only on RW transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
// * BEFORE_AND_AFTER: A RW transaction waits for 1) all preceding transactions to complete before being applied and 2) until its changes have been applied on other members. A RO transaction waits for all preceding transactions to complete before execution takes place. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
func (o GetMysqlConfigurationsConfigurationVariablesOutput) GroupReplicationConsistency() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) string { return v.GroupReplicationConsistency }).(pulumi.StringOutput)
}

// ("informationSchemaStatsExpiry")
func (o GetMysqlConfigurationsConfigurationVariablesOutput) InformationSchemaStatsExpiry() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) int { return v.InformationSchemaStatsExpiry }).(pulumi.IntOutput)
}

// ("innodbBufferPoolInstances")
func (o GetMysqlConfigurationsConfigurationVariablesOutput) InnodbBufferPoolInstances() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) int { return v.InnodbBufferPoolInstances }).(pulumi.IntOutput)
}

// ("innodbBufferPoolSize")
func (o GetMysqlConfigurationsConfigurationVariablesOutput) InnodbBufferPoolSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) string { return v.InnodbBufferPoolSize }).(pulumi.StringOutput)
}

// ("innodbFtEnableStopword")
func (o GetMysqlConfigurationsConfigurationVariablesOutput) InnodbFtEnableStopword() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) bool { return v.InnodbFtEnableStopword }).(pulumi.BoolOutput)
}

// ("innodbFtMaxTokenSize")
func (o GetMysqlConfigurationsConfigurationVariablesOutput) InnodbFtMaxTokenSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) int { return v.InnodbFtMaxTokenSize }).(pulumi.IntOutput)
}

// ("innodbFtMinTokenSize")
func (o GetMysqlConfigurationsConfigurationVariablesOutput) InnodbFtMinTokenSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) int { return v.InnodbFtMinTokenSize }).(pulumi.IntOutput)
}

// ("innodbFtNumWordOptimize")
func (o GetMysqlConfigurationsConfigurationVariablesOutput) InnodbFtNumWordOptimize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) int { return v.InnodbFtNumWordOptimize }).(pulumi.IntOutput)
}

// ("innodbFtResultCacheLimit")
func (o GetMysqlConfigurationsConfigurationVariablesOutput) InnodbFtResultCacheLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) int { return v.InnodbFtResultCacheLimit }).(pulumi.IntOutput)
}

// ("innodbFtServerStopwordTable")
func (o GetMysqlConfigurationsConfigurationVariablesOutput) InnodbFtServerStopwordTable() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) string { return v.InnodbFtServerStopwordTable }).(pulumi.StringOutput)
}

// ("innodbLockWaitTimeout")
func (o GetMysqlConfigurationsConfigurationVariablesOutput) InnodbLockWaitTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) int { return v.InnodbLockWaitTimeout }).(pulumi.IntOutput)
}

// ("innodbMaxPurgeLag")
func (o GetMysqlConfigurationsConfigurationVariablesOutput) InnodbMaxPurgeLag() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) int { return v.InnodbMaxPurgeLag }).(pulumi.IntOutput)
}

// ("innodbMaxPurgeLagDelay")
func (o GetMysqlConfigurationsConfigurationVariablesOutput) InnodbMaxPurgeLagDelay() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) int { return v.InnodbMaxPurgeLagDelay }).(pulumi.IntOutput)
}

// ("localInfile")
func (o GetMysqlConfigurationsConfigurationVariablesOutput) LocalInfile() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) bool { return v.LocalInfile }).(pulumi.BoolOutput)
}

// ("mandatoryRoles")
func (o GetMysqlConfigurationsConfigurationVariablesOutput) MandatoryRoles() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) string { return v.MandatoryRoles }).(pulumi.StringOutput)
}

// ("maxConnections")
func (o GetMysqlConfigurationsConfigurationVariablesOutput) MaxConnections() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) int { return v.MaxConnections }).(pulumi.IntOutput)
}

// ("maxExecutionTime")
func (o GetMysqlConfigurationsConfigurationVariablesOutput) MaxExecutionTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) int { return v.MaxExecutionTime }).(pulumi.IntOutput)
}

// ("maxPreparedStmtCount")
func (o GetMysqlConfigurationsConfigurationVariablesOutput) MaxPreparedStmtCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) int { return v.MaxPreparedStmtCount }).(pulumi.IntOutput)
}

// ("mysqlFirewallMode")
func (o GetMysqlConfigurationsConfigurationVariablesOutput) MysqlFirewallMode() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) bool { return v.MysqlFirewallMode }).(pulumi.BoolOutput)
}

// DEPRECATED -- typo of mysqlx_zstd_default_compression_level. variable will be ignored.
func (o GetMysqlConfigurationsConfigurationVariablesOutput) MysqlZstdDefaultCompressionLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) int { return v.MysqlZstdDefaultCompressionLevel }).(pulumi.IntOutput)
}

// ("mysqlxConnectTimeout") DEPRECATED -- variable should not be settable and will be ignored
func (o GetMysqlConfigurationsConfigurationVariablesOutput) MysqlxConnectTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) int { return v.MysqlxConnectTimeout }).(pulumi.IntOutput)
}

// Set the default compression level for the deflate algorithm. ("mysqlxDeflateDefaultCompressionLevel")
func (o GetMysqlConfigurationsConfigurationVariablesOutput) MysqlxDeflateDefaultCompressionLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) int {
		return v.MysqlxDeflateDefaultCompressionLevel
	}).(pulumi.IntOutput)
}

// Limit the upper bound of accepted compression levels for the deflate algorithm. ("mysqlxDeflateMaxClientCompressionLevel")
func (o GetMysqlConfigurationsConfigurationVariablesOutput) MysqlxDeflateMaxClientCompressionLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) int {
		return v.MysqlxDeflateMaxClientCompressionLevel
	}).(pulumi.IntOutput)
}

// ("mysqlxDocumentIdUniquePrefix") DEPRECATED -- variable should not be settable and will be ignored
func (o GetMysqlConfigurationsConfigurationVariablesOutput) MysqlxDocumentIdUniquePrefix() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) int { return v.MysqlxDocumentIdUniquePrefix }).(pulumi.IntOutput)
}

// ("mysqlxEnableHelloNotice") DEPRECATED -- variable should not be settable and will be ignored
func (o GetMysqlConfigurationsConfigurationVariablesOutput) MysqlxEnableHelloNotice() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) bool { return v.MysqlxEnableHelloNotice }).(pulumi.BoolOutput)
}

// ("mysqlxIdleWorkerThreadTimeout") DEPRECATED -- variable should not be settable and will be ignored
func (o GetMysqlConfigurationsConfigurationVariablesOutput) MysqlxIdleWorkerThreadTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) int { return v.MysqlxIdleWorkerThreadTimeout }).(pulumi.IntOutput)
}

// ("mysqlxInteractiveTimeout") DEPRECATED -- variable should not be settable and will be ignored
func (o GetMysqlConfigurationsConfigurationVariablesOutput) MysqlxInteractiveTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) int { return v.MysqlxInteractiveTimeout }).(pulumi.IntOutput)
}

// Set the default compression level for the lz4 algorithm. ("mysqlxLz4DefaultCompressionLevel")
func (o GetMysqlConfigurationsConfigurationVariablesOutput) MysqlxLz4defaultCompressionLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) int { return v.MysqlxLz4defaultCompressionLevel }).(pulumi.IntOutput)
}

// Limit the upper bound of accepted compression levels for the lz4 algorithm. ("mysqlxLz4MaxClientCompressionLevel")
func (o GetMysqlConfigurationsConfigurationVariablesOutput) MysqlxLz4maxClientCompressionLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) int { return v.MysqlxLz4maxClientCompressionLevel }).(pulumi.IntOutput)
}

// ("mysqlxMaxAllowedPacket") DEPRECATED -- variable should not be settable and will be ignored
func (o GetMysqlConfigurationsConfigurationVariablesOutput) MysqlxMaxAllowedPacket() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) int { return v.MysqlxMaxAllowedPacket }).(pulumi.IntOutput)
}

// ("mysqlxMinWorkerThreads") DEPRECATED -- variable should not be settable and will be ignored
func (o GetMysqlConfigurationsConfigurationVariablesOutput) MysqlxMinWorkerThreads() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) int { return v.MysqlxMinWorkerThreads }).(pulumi.IntOutput)
}

// ("mysqlxReadTimeout") DEPRECATED -- variable should not be settable and will be ignored
func (o GetMysqlConfigurationsConfigurationVariablesOutput) MysqlxReadTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) int { return v.MysqlxReadTimeout }).(pulumi.IntOutput)
}

// ("mysqlxWaitTimeout") DEPRECATED -- variable should not be settable and will be ignored
func (o GetMysqlConfigurationsConfigurationVariablesOutput) MysqlxWaitTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) int { return v.MysqlxWaitTimeout }).(pulumi.IntOutput)
}

// ("mysqlxWriteTimeout") DEPRECATED -- variable should not be settable and will be ignored
func (o GetMysqlConfigurationsConfigurationVariablesOutput) MysqlxWriteTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) int { return v.MysqlxWriteTimeout }).(pulumi.IntOutput)
}

// Set the default compression level for the zstd algorithm. ("mysqlxZstdDefaultCompressionLevel")
func (o GetMysqlConfigurationsConfigurationVariablesOutput) MysqlxZstdDefaultCompressionLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) int { return v.MysqlxZstdDefaultCompressionLevel }).(pulumi.IntOutput)
}

// Limit the upper bound of accepted compression levels for the zstd algorithm. ("mysqlxZstdMaxClientCompressionLevel")
func (o GetMysqlConfigurationsConfigurationVariablesOutput) MysqlxZstdMaxClientCompressionLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) int { return v.MysqlxZstdMaxClientCompressionLevel }).(pulumi.IntOutput)
}

// ("parserMaxMemSize")
func (o GetMysqlConfigurationsConfigurationVariablesOutput) ParserMaxMemSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) int { return v.ParserMaxMemSize }).(pulumi.IntOutput)
}

// ("queryAllocBlockSize") DEPRECATED -- variable should not be settable and will be ignored
func (o GetMysqlConfigurationsConfigurationVariablesOutput) QueryAllocBlockSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) int { return v.QueryAllocBlockSize }).(pulumi.IntOutput)
}

// ("queryPreallocSize") DEPRECATED -- variable should not be settable and will be ignored
func (o GetMysqlConfigurationsConfigurationVariablesOutput) QueryPreallocSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) int { return v.QueryPreallocSize }).(pulumi.IntOutput)
}

// ("sqlMode")
func (o GetMysqlConfigurationsConfigurationVariablesOutput) SqlMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) string { return v.SqlMode }).(pulumi.StringOutput)
}

// ("sqlRequirePrimaryKey")
func (o GetMysqlConfigurationsConfigurationVariablesOutput) SqlRequirePrimaryKey() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) bool { return v.SqlRequirePrimaryKey }).(pulumi.BoolOutput)
}

// ("sqlWarnings")
func (o GetMysqlConfigurationsConfigurationVariablesOutput) SqlWarnings() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) bool { return v.SqlWarnings }).(pulumi.BoolOutput)
}

// ("transactionIsolation")
func (o GetMysqlConfigurationsConfigurationVariablesOutput) TransactionIsolation() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariables) string { return v.TransactionIsolation }).(pulumi.StringOutput)
}

type GetMysqlConfigurationsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetMysqlConfigurationsFilterInput is an input type that accepts GetMysqlConfigurationsFilterArgs and GetMysqlConfigurationsFilterOutput values.
// You can construct a concrete instance of `GetMysqlConfigurationsFilterInput` via:
//
//          GetMysqlConfigurationsFilterArgs{...}
type GetMysqlConfigurationsFilterInput interface {
	pulumi.Input

	ToGetMysqlConfigurationsFilterOutput() GetMysqlConfigurationsFilterOutput
	ToGetMysqlConfigurationsFilterOutputWithContext(context.Context) GetMysqlConfigurationsFilterOutput
}

type GetMysqlConfigurationsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetMysqlConfigurationsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlConfigurationsFilter)(nil)).Elem()
}

func (i GetMysqlConfigurationsFilterArgs) ToGetMysqlConfigurationsFilterOutput() GetMysqlConfigurationsFilterOutput {
	return i.ToGetMysqlConfigurationsFilterOutputWithContext(context.Background())
}

func (i GetMysqlConfigurationsFilterArgs) ToGetMysqlConfigurationsFilterOutputWithContext(ctx context.Context) GetMysqlConfigurationsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlConfigurationsFilterOutput)
}

// GetMysqlConfigurationsFilterArrayInput is an input type that accepts GetMysqlConfigurationsFilterArray and GetMysqlConfigurationsFilterArrayOutput values.
// You can construct a concrete instance of `GetMysqlConfigurationsFilterArrayInput` via:
//
//          GetMysqlConfigurationsFilterArray{ GetMysqlConfigurationsFilterArgs{...} }
type GetMysqlConfigurationsFilterArrayInput interface {
	pulumi.Input

	ToGetMysqlConfigurationsFilterArrayOutput() GetMysqlConfigurationsFilterArrayOutput
	ToGetMysqlConfigurationsFilterArrayOutputWithContext(context.Context) GetMysqlConfigurationsFilterArrayOutput
}

type GetMysqlConfigurationsFilterArray []GetMysqlConfigurationsFilterInput

func (GetMysqlConfigurationsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlConfigurationsFilter)(nil)).Elem()
}

func (i GetMysqlConfigurationsFilterArray) ToGetMysqlConfigurationsFilterArrayOutput() GetMysqlConfigurationsFilterArrayOutput {
	return i.ToGetMysqlConfigurationsFilterArrayOutputWithContext(context.Background())
}

func (i GetMysqlConfigurationsFilterArray) ToGetMysqlConfigurationsFilterArrayOutputWithContext(ctx context.Context) GetMysqlConfigurationsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlConfigurationsFilterArrayOutput)
}

type GetMysqlConfigurationsFilterOutput struct{ *pulumi.OutputState }

func (GetMysqlConfigurationsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlConfigurationsFilter)(nil)).Elem()
}

func (o GetMysqlConfigurationsFilterOutput) ToGetMysqlConfigurationsFilterOutput() GetMysqlConfigurationsFilterOutput {
	return o
}

func (o GetMysqlConfigurationsFilterOutput) ToGetMysqlConfigurationsFilterOutputWithContext(ctx context.Context) GetMysqlConfigurationsFilterOutput {
	return o
}

func (o GetMysqlConfigurationsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetMysqlConfigurationsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetMysqlConfigurationsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetMysqlConfigurationsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlConfigurationsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlConfigurationsFilter)(nil)).Elem()
}

func (o GetMysqlConfigurationsFilterArrayOutput) ToGetMysqlConfigurationsFilterArrayOutput() GetMysqlConfigurationsFilterArrayOutput {
	return o
}

func (o GetMysqlConfigurationsFilterArrayOutput) ToGetMysqlConfigurationsFilterArrayOutputWithContext(ctx context.Context) GetMysqlConfigurationsFilterArrayOutput {
	return o
}

func (o GetMysqlConfigurationsFilterArrayOutput) Index(i pulumi.IntInput) GetMysqlConfigurationsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlConfigurationsFilter {
		return vs[0].([]GetMysqlConfigurationsFilter)[vs[1].(int)]
	}).(GetMysqlConfigurationsFilterOutput)
}

type GetMysqlDbSystemAnalyticsCluster struct {
	// The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
	ClusterSize int `pulumi:"clusterSize"`
	// The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
	ShapeName string `pulumi:"shapeName"`
	// The current state of the DB System.
	State string `pulumi:"state"`
	// The date and time the DB System was created.
	TimeCreated string `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetMysqlDbSystemAnalyticsClusterInput is an input type that accepts GetMysqlDbSystemAnalyticsClusterArgs and GetMysqlDbSystemAnalyticsClusterOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemAnalyticsClusterInput` via:
//
//          GetMysqlDbSystemAnalyticsClusterArgs{...}
type GetMysqlDbSystemAnalyticsClusterInput interface {
	pulumi.Input

	ToGetMysqlDbSystemAnalyticsClusterOutput() GetMysqlDbSystemAnalyticsClusterOutput
	ToGetMysqlDbSystemAnalyticsClusterOutputWithContext(context.Context) GetMysqlDbSystemAnalyticsClusterOutput
}

type GetMysqlDbSystemAnalyticsClusterArgs struct {
	// The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
	ClusterSize pulumi.IntInput `pulumi:"clusterSize"`
	// The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
	ShapeName pulumi.StringInput `pulumi:"shapeName"`
	// The current state of the DB System.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the DB System was created.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetMysqlDbSystemAnalyticsClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemAnalyticsCluster)(nil)).Elem()
}

func (i GetMysqlDbSystemAnalyticsClusterArgs) ToGetMysqlDbSystemAnalyticsClusterOutput() GetMysqlDbSystemAnalyticsClusterOutput {
	return i.ToGetMysqlDbSystemAnalyticsClusterOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemAnalyticsClusterArgs) ToGetMysqlDbSystemAnalyticsClusterOutputWithContext(ctx context.Context) GetMysqlDbSystemAnalyticsClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemAnalyticsClusterOutput)
}

// GetMysqlDbSystemAnalyticsClusterArrayInput is an input type that accepts GetMysqlDbSystemAnalyticsClusterArray and GetMysqlDbSystemAnalyticsClusterArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemAnalyticsClusterArrayInput` via:
//
//          GetMysqlDbSystemAnalyticsClusterArray{ GetMysqlDbSystemAnalyticsClusterArgs{...} }
type GetMysqlDbSystemAnalyticsClusterArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemAnalyticsClusterArrayOutput() GetMysqlDbSystemAnalyticsClusterArrayOutput
	ToGetMysqlDbSystemAnalyticsClusterArrayOutputWithContext(context.Context) GetMysqlDbSystemAnalyticsClusterArrayOutput
}

type GetMysqlDbSystemAnalyticsClusterArray []GetMysqlDbSystemAnalyticsClusterInput

func (GetMysqlDbSystemAnalyticsClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemAnalyticsCluster)(nil)).Elem()
}

func (i GetMysqlDbSystemAnalyticsClusterArray) ToGetMysqlDbSystemAnalyticsClusterArrayOutput() GetMysqlDbSystemAnalyticsClusterArrayOutput {
	return i.ToGetMysqlDbSystemAnalyticsClusterArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemAnalyticsClusterArray) ToGetMysqlDbSystemAnalyticsClusterArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemAnalyticsClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemAnalyticsClusterArrayOutput)
}

type GetMysqlDbSystemAnalyticsClusterOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemAnalyticsClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemAnalyticsCluster)(nil)).Elem()
}

func (o GetMysqlDbSystemAnalyticsClusterOutput) ToGetMysqlDbSystemAnalyticsClusterOutput() GetMysqlDbSystemAnalyticsClusterOutput {
	return o
}

func (o GetMysqlDbSystemAnalyticsClusterOutput) ToGetMysqlDbSystemAnalyticsClusterOutputWithContext(ctx context.Context) GetMysqlDbSystemAnalyticsClusterOutput {
	return o
}

// The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
func (o GetMysqlDbSystemAnalyticsClusterOutput) ClusterSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemAnalyticsCluster) int { return v.ClusterSize }).(pulumi.IntOutput)
}

// The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
func (o GetMysqlDbSystemAnalyticsClusterOutput) ShapeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemAnalyticsCluster) string { return v.ShapeName }).(pulumi.StringOutput)
}

// The current state of the DB System.
func (o GetMysqlDbSystemAnalyticsClusterOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemAnalyticsCluster) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the DB System was created.
func (o GetMysqlDbSystemAnalyticsClusterOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemAnalyticsCluster) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the DB System was last updated.
func (o GetMysqlDbSystemAnalyticsClusterOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemAnalyticsCluster) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetMysqlDbSystemAnalyticsClusterArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemAnalyticsClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemAnalyticsCluster)(nil)).Elem()
}

func (o GetMysqlDbSystemAnalyticsClusterArrayOutput) ToGetMysqlDbSystemAnalyticsClusterArrayOutput() GetMysqlDbSystemAnalyticsClusterArrayOutput {
	return o
}

func (o GetMysqlDbSystemAnalyticsClusterArrayOutput) ToGetMysqlDbSystemAnalyticsClusterArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemAnalyticsClusterArrayOutput {
	return o
}

func (o GetMysqlDbSystemAnalyticsClusterArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemAnalyticsClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemAnalyticsCluster {
		return vs[0].([]GetMysqlDbSystemAnalyticsCluster)[vs[1].(int)]
	}).(GetMysqlDbSystemAnalyticsClusterOutput)
}

type GetMysqlDbSystemBackupPolicy struct {
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Whether the Channel has been enabled by the user.
	IsEnabled bool `pulumi:"isEnabled"`
	// The PITR policy for the DB System.
	PitrPolicies []GetMysqlDbSystemBackupPolicyPitrPolicy `pulumi:"pitrPolicies"`
	// The number of days automated backups are retained.
	RetentionInDays int `pulumi:"retentionInDays"`
	// The start time of the maintenance window.
	WindowStartTime string `pulumi:"windowStartTime"`
}

// GetMysqlDbSystemBackupPolicyInput is an input type that accepts GetMysqlDbSystemBackupPolicyArgs and GetMysqlDbSystemBackupPolicyOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemBackupPolicyInput` via:
//
//          GetMysqlDbSystemBackupPolicyArgs{...}
type GetMysqlDbSystemBackupPolicyInput interface {
	pulumi.Input

	ToGetMysqlDbSystemBackupPolicyOutput() GetMysqlDbSystemBackupPolicyOutput
	ToGetMysqlDbSystemBackupPolicyOutputWithContext(context.Context) GetMysqlDbSystemBackupPolicyOutput
}

type GetMysqlDbSystemBackupPolicyArgs struct {
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// Whether the Channel has been enabled by the user.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The PITR policy for the DB System.
	PitrPolicies GetMysqlDbSystemBackupPolicyPitrPolicyArrayInput `pulumi:"pitrPolicies"`
	// The number of days automated backups are retained.
	RetentionInDays pulumi.IntInput `pulumi:"retentionInDays"`
	// The start time of the maintenance window.
	WindowStartTime pulumi.StringInput `pulumi:"windowStartTime"`
}

func (GetMysqlDbSystemBackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemBackupPolicy)(nil)).Elem()
}

func (i GetMysqlDbSystemBackupPolicyArgs) ToGetMysqlDbSystemBackupPolicyOutput() GetMysqlDbSystemBackupPolicyOutput {
	return i.ToGetMysqlDbSystemBackupPolicyOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemBackupPolicyArgs) ToGetMysqlDbSystemBackupPolicyOutputWithContext(ctx context.Context) GetMysqlDbSystemBackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemBackupPolicyOutput)
}

// GetMysqlDbSystemBackupPolicyArrayInput is an input type that accepts GetMysqlDbSystemBackupPolicyArray and GetMysqlDbSystemBackupPolicyArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemBackupPolicyArrayInput` via:
//
//          GetMysqlDbSystemBackupPolicyArray{ GetMysqlDbSystemBackupPolicyArgs{...} }
type GetMysqlDbSystemBackupPolicyArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemBackupPolicyArrayOutput() GetMysqlDbSystemBackupPolicyArrayOutput
	ToGetMysqlDbSystemBackupPolicyArrayOutputWithContext(context.Context) GetMysqlDbSystemBackupPolicyArrayOutput
}

type GetMysqlDbSystemBackupPolicyArray []GetMysqlDbSystemBackupPolicyInput

func (GetMysqlDbSystemBackupPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemBackupPolicy)(nil)).Elem()
}

func (i GetMysqlDbSystemBackupPolicyArray) ToGetMysqlDbSystemBackupPolicyArrayOutput() GetMysqlDbSystemBackupPolicyArrayOutput {
	return i.ToGetMysqlDbSystemBackupPolicyArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemBackupPolicyArray) ToGetMysqlDbSystemBackupPolicyArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemBackupPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemBackupPolicyArrayOutput)
}

type GetMysqlDbSystemBackupPolicyOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemBackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemBackupPolicy)(nil)).Elem()
}

func (o GetMysqlDbSystemBackupPolicyOutput) ToGetMysqlDbSystemBackupPolicyOutput() GetMysqlDbSystemBackupPolicyOutput {
	return o
}

func (o GetMysqlDbSystemBackupPolicyOutput) ToGetMysqlDbSystemBackupPolicyOutputWithContext(ctx context.Context) GetMysqlDbSystemBackupPolicyOutput {
	return o
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetMysqlDbSystemBackupPolicyOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetMysqlDbSystemBackupPolicy) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetMysqlDbSystemBackupPolicyOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetMysqlDbSystemBackupPolicy) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// Whether the Channel has been enabled by the user.
func (o GetMysqlDbSystemBackupPolicyOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlDbSystemBackupPolicy) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The PITR policy for the DB System.
func (o GetMysqlDbSystemBackupPolicyOutput) PitrPolicies() GetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemBackupPolicy) []GetMysqlDbSystemBackupPolicyPitrPolicy { return v.PitrPolicies }).(GetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput)
}

// The number of days automated backups are retained.
func (o GetMysqlDbSystemBackupPolicyOutput) RetentionInDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemBackupPolicy) int { return v.RetentionInDays }).(pulumi.IntOutput)
}

// The start time of the maintenance window.
func (o GetMysqlDbSystemBackupPolicyOutput) WindowStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemBackupPolicy) string { return v.WindowStartTime }).(pulumi.StringOutput)
}

type GetMysqlDbSystemBackupPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemBackupPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemBackupPolicy)(nil)).Elem()
}

func (o GetMysqlDbSystemBackupPolicyArrayOutput) ToGetMysqlDbSystemBackupPolicyArrayOutput() GetMysqlDbSystemBackupPolicyArrayOutput {
	return o
}

func (o GetMysqlDbSystemBackupPolicyArrayOutput) ToGetMysqlDbSystemBackupPolicyArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemBackupPolicyArrayOutput {
	return o
}

func (o GetMysqlDbSystemBackupPolicyArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemBackupPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemBackupPolicy {
		return vs[0].([]GetMysqlDbSystemBackupPolicy)[vs[1].(int)]
	}).(GetMysqlDbSystemBackupPolicyOutput)
}

type GetMysqlDbSystemBackupPolicyPitrPolicy struct {
	// Whether the Channel has been enabled by the user.
	IsEnabled bool `pulumi:"isEnabled"`
}

// GetMysqlDbSystemBackupPolicyPitrPolicyInput is an input type that accepts GetMysqlDbSystemBackupPolicyPitrPolicyArgs and GetMysqlDbSystemBackupPolicyPitrPolicyOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemBackupPolicyPitrPolicyInput` via:
//
//          GetMysqlDbSystemBackupPolicyPitrPolicyArgs{...}
type GetMysqlDbSystemBackupPolicyPitrPolicyInput interface {
	pulumi.Input

	ToGetMysqlDbSystemBackupPolicyPitrPolicyOutput() GetMysqlDbSystemBackupPolicyPitrPolicyOutput
	ToGetMysqlDbSystemBackupPolicyPitrPolicyOutputWithContext(context.Context) GetMysqlDbSystemBackupPolicyPitrPolicyOutput
}

type GetMysqlDbSystemBackupPolicyPitrPolicyArgs struct {
	// Whether the Channel has been enabled by the user.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
}

func (GetMysqlDbSystemBackupPolicyPitrPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemBackupPolicyPitrPolicy)(nil)).Elem()
}

func (i GetMysqlDbSystemBackupPolicyPitrPolicyArgs) ToGetMysqlDbSystemBackupPolicyPitrPolicyOutput() GetMysqlDbSystemBackupPolicyPitrPolicyOutput {
	return i.ToGetMysqlDbSystemBackupPolicyPitrPolicyOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemBackupPolicyPitrPolicyArgs) ToGetMysqlDbSystemBackupPolicyPitrPolicyOutputWithContext(ctx context.Context) GetMysqlDbSystemBackupPolicyPitrPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemBackupPolicyPitrPolicyOutput)
}

// GetMysqlDbSystemBackupPolicyPitrPolicyArrayInput is an input type that accepts GetMysqlDbSystemBackupPolicyPitrPolicyArray and GetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemBackupPolicyPitrPolicyArrayInput` via:
//
//          GetMysqlDbSystemBackupPolicyPitrPolicyArray{ GetMysqlDbSystemBackupPolicyPitrPolicyArgs{...} }
type GetMysqlDbSystemBackupPolicyPitrPolicyArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput() GetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput
	ToGetMysqlDbSystemBackupPolicyPitrPolicyArrayOutputWithContext(context.Context) GetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput
}

type GetMysqlDbSystemBackupPolicyPitrPolicyArray []GetMysqlDbSystemBackupPolicyPitrPolicyInput

func (GetMysqlDbSystemBackupPolicyPitrPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemBackupPolicyPitrPolicy)(nil)).Elem()
}

func (i GetMysqlDbSystemBackupPolicyPitrPolicyArray) ToGetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput() GetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput {
	return i.ToGetMysqlDbSystemBackupPolicyPitrPolicyArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemBackupPolicyPitrPolicyArray) ToGetMysqlDbSystemBackupPolicyPitrPolicyArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput)
}

type GetMysqlDbSystemBackupPolicyPitrPolicyOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemBackupPolicyPitrPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemBackupPolicyPitrPolicy)(nil)).Elem()
}

func (o GetMysqlDbSystemBackupPolicyPitrPolicyOutput) ToGetMysqlDbSystemBackupPolicyPitrPolicyOutput() GetMysqlDbSystemBackupPolicyPitrPolicyOutput {
	return o
}

func (o GetMysqlDbSystemBackupPolicyPitrPolicyOutput) ToGetMysqlDbSystemBackupPolicyPitrPolicyOutputWithContext(ctx context.Context) GetMysqlDbSystemBackupPolicyPitrPolicyOutput {
	return o
}

// Whether the Channel has been enabled by the user.
func (o GetMysqlDbSystemBackupPolicyPitrPolicyOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlDbSystemBackupPolicyPitrPolicy) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

type GetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemBackupPolicyPitrPolicy)(nil)).Elem()
}

func (o GetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput) ToGetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput() GetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput {
	return o
}

func (o GetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput) ToGetMysqlDbSystemBackupPolicyPitrPolicyArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput {
	return o
}

func (o GetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemBackupPolicyPitrPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemBackupPolicyPitrPolicy {
		return vs[0].([]GetMysqlDbSystemBackupPolicyPitrPolicy)[vs[1].(int)]
	}).(GetMysqlDbSystemBackupPolicyPitrPolicyOutput)
}

type GetMysqlDbSystemChannel struct {
	// The OCID of the compartment the DB System belongs in.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The user-friendly name for the DB System. It does not have to be unique.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the DB System.
	Id string `pulumi:"id"`
	// Whether the Channel has been enabled by the user.
	IsEnabled bool `pulumi:"isEnabled"`
	// Additional information about the current lifecycleState.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Parameters detailing how to provision the initial data of the DB System.
	Sources []GetMysqlDbSystemChannelSource `pulumi:"sources"`
	// The current state of the DB System.
	State string `pulumi:"state"`
	// Details about the Channel target.
	Targets []GetMysqlDbSystemChannelTarget `pulumi:"targets"`
	// The date and time the DB System was created.
	TimeCreated string `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetMysqlDbSystemChannelInput is an input type that accepts GetMysqlDbSystemChannelArgs and GetMysqlDbSystemChannelOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemChannelInput` via:
//
//          GetMysqlDbSystemChannelArgs{...}
type GetMysqlDbSystemChannelInput interface {
	pulumi.Input

	ToGetMysqlDbSystemChannelOutput() GetMysqlDbSystemChannelOutput
	ToGetMysqlDbSystemChannelOutputWithContext(context.Context) GetMysqlDbSystemChannelOutput
}

type GetMysqlDbSystemChannelArgs struct {
	// The OCID of the compartment the DB System belongs in.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// The user-friendly name for the DB System. It does not have to be unique.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The OCID of the DB System.
	Id pulumi.StringInput `pulumi:"id"`
	// Whether the Channel has been enabled by the user.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Additional information about the current lifecycleState.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// Parameters detailing how to provision the initial data of the DB System.
	Sources GetMysqlDbSystemChannelSourceArrayInput `pulumi:"sources"`
	// The current state of the DB System.
	State pulumi.StringInput `pulumi:"state"`
	// Details about the Channel target.
	Targets GetMysqlDbSystemChannelTargetArrayInput `pulumi:"targets"`
	// The date and time the DB System was created.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetMysqlDbSystemChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemChannel)(nil)).Elem()
}

func (i GetMysqlDbSystemChannelArgs) ToGetMysqlDbSystemChannelOutput() GetMysqlDbSystemChannelOutput {
	return i.ToGetMysqlDbSystemChannelOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemChannelArgs) ToGetMysqlDbSystemChannelOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemChannelOutput)
}

// GetMysqlDbSystemChannelArrayInput is an input type that accepts GetMysqlDbSystemChannelArray and GetMysqlDbSystemChannelArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemChannelArrayInput` via:
//
//          GetMysqlDbSystemChannelArray{ GetMysqlDbSystemChannelArgs{...} }
type GetMysqlDbSystemChannelArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemChannelArrayOutput() GetMysqlDbSystemChannelArrayOutput
	ToGetMysqlDbSystemChannelArrayOutputWithContext(context.Context) GetMysqlDbSystemChannelArrayOutput
}

type GetMysqlDbSystemChannelArray []GetMysqlDbSystemChannelInput

func (GetMysqlDbSystemChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemChannel)(nil)).Elem()
}

func (i GetMysqlDbSystemChannelArray) ToGetMysqlDbSystemChannelArrayOutput() GetMysqlDbSystemChannelArrayOutput {
	return i.ToGetMysqlDbSystemChannelArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemChannelArray) ToGetMysqlDbSystemChannelArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemChannelArrayOutput)
}

type GetMysqlDbSystemChannelOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemChannel)(nil)).Elem()
}

func (o GetMysqlDbSystemChannelOutput) ToGetMysqlDbSystemChannelOutput() GetMysqlDbSystemChannelOutput {
	return o
}

func (o GetMysqlDbSystemChannelOutput) ToGetMysqlDbSystemChannelOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelOutput {
	return o
}

// The OCID of the compartment the DB System belongs in.
func (o GetMysqlDbSystemChannelOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannel) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetMysqlDbSystemChannelOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannel) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// The user-friendly name for the DB System. It does not have to be unique.
func (o GetMysqlDbSystemChannelOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannel) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetMysqlDbSystemChannelOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannel) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The OCID of the DB System.
func (o GetMysqlDbSystemChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannel) string { return v.Id }).(pulumi.StringOutput)
}

// Whether the Channel has been enabled by the user.
func (o GetMysqlDbSystemChannelOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannel) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Additional information about the current lifecycleState.
func (o GetMysqlDbSystemChannelOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannel) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Parameters detailing how to provision the initial data of the DB System.
func (o GetMysqlDbSystemChannelOutput) Sources() GetMysqlDbSystemChannelSourceArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannel) []GetMysqlDbSystemChannelSource { return v.Sources }).(GetMysqlDbSystemChannelSourceArrayOutput)
}

// The current state of the DB System.
func (o GetMysqlDbSystemChannelOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannel) string { return v.State }).(pulumi.StringOutput)
}

// Details about the Channel target.
func (o GetMysqlDbSystemChannelOutput) Targets() GetMysqlDbSystemChannelTargetArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannel) []GetMysqlDbSystemChannelTarget { return v.Targets }).(GetMysqlDbSystemChannelTargetArrayOutput)
}

// The date and time the DB System was created.
func (o GetMysqlDbSystemChannelOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannel) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the DB System was last updated.
func (o GetMysqlDbSystemChannelOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannel) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetMysqlDbSystemChannelArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemChannel)(nil)).Elem()
}

func (o GetMysqlDbSystemChannelArrayOutput) ToGetMysqlDbSystemChannelArrayOutput() GetMysqlDbSystemChannelArrayOutput {
	return o
}

func (o GetMysqlDbSystemChannelArrayOutput) ToGetMysqlDbSystemChannelArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelArrayOutput {
	return o
}

func (o GetMysqlDbSystemChannelArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemChannel {
		return vs[0].([]GetMysqlDbSystemChannel)[vs[1].(int)]
	}).(GetMysqlDbSystemChannelOutput)
}

type GetMysqlDbSystemChannelSource struct {
	// The network address of the DB System.
	Hostname string `pulumi:"hostname"`
	// The port for primary endpoint of the DB System to listen on.
	Port int `pulumi:"port"`
	// The specific source identifier.
	SourceType string `pulumi:"sourceType"`
	// The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
	SslCaCertificates []GetMysqlDbSystemChannelSourceSslCaCertificate `pulumi:"sslCaCertificates"`
	// The SSL mode of the Channel.
	SslMode string `pulumi:"sslMode"`
	// The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
	Username string `pulumi:"username"`
}

// GetMysqlDbSystemChannelSourceInput is an input type that accepts GetMysqlDbSystemChannelSourceArgs and GetMysqlDbSystemChannelSourceOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemChannelSourceInput` via:
//
//          GetMysqlDbSystemChannelSourceArgs{...}
type GetMysqlDbSystemChannelSourceInput interface {
	pulumi.Input

	ToGetMysqlDbSystemChannelSourceOutput() GetMysqlDbSystemChannelSourceOutput
	ToGetMysqlDbSystemChannelSourceOutputWithContext(context.Context) GetMysqlDbSystemChannelSourceOutput
}

type GetMysqlDbSystemChannelSourceArgs struct {
	// The network address of the DB System.
	Hostname pulumi.StringInput `pulumi:"hostname"`
	// The port for primary endpoint of the DB System to listen on.
	Port pulumi.IntInput `pulumi:"port"`
	// The specific source identifier.
	SourceType pulumi.StringInput `pulumi:"sourceType"`
	// The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
	SslCaCertificates GetMysqlDbSystemChannelSourceSslCaCertificateArrayInput `pulumi:"sslCaCertificates"`
	// The SSL mode of the Channel.
	SslMode pulumi.StringInput `pulumi:"sslMode"`
	// The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetMysqlDbSystemChannelSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemChannelSource)(nil)).Elem()
}

func (i GetMysqlDbSystemChannelSourceArgs) ToGetMysqlDbSystemChannelSourceOutput() GetMysqlDbSystemChannelSourceOutput {
	return i.ToGetMysqlDbSystemChannelSourceOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemChannelSourceArgs) ToGetMysqlDbSystemChannelSourceOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemChannelSourceOutput)
}

// GetMysqlDbSystemChannelSourceArrayInput is an input type that accepts GetMysqlDbSystemChannelSourceArray and GetMysqlDbSystemChannelSourceArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemChannelSourceArrayInput` via:
//
//          GetMysqlDbSystemChannelSourceArray{ GetMysqlDbSystemChannelSourceArgs{...} }
type GetMysqlDbSystemChannelSourceArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemChannelSourceArrayOutput() GetMysqlDbSystemChannelSourceArrayOutput
	ToGetMysqlDbSystemChannelSourceArrayOutputWithContext(context.Context) GetMysqlDbSystemChannelSourceArrayOutput
}

type GetMysqlDbSystemChannelSourceArray []GetMysqlDbSystemChannelSourceInput

func (GetMysqlDbSystemChannelSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemChannelSource)(nil)).Elem()
}

func (i GetMysqlDbSystemChannelSourceArray) ToGetMysqlDbSystemChannelSourceArrayOutput() GetMysqlDbSystemChannelSourceArrayOutput {
	return i.ToGetMysqlDbSystemChannelSourceArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemChannelSourceArray) ToGetMysqlDbSystemChannelSourceArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemChannelSourceArrayOutput)
}

type GetMysqlDbSystemChannelSourceOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemChannelSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemChannelSource)(nil)).Elem()
}

func (o GetMysqlDbSystemChannelSourceOutput) ToGetMysqlDbSystemChannelSourceOutput() GetMysqlDbSystemChannelSourceOutput {
	return o
}

func (o GetMysqlDbSystemChannelSourceOutput) ToGetMysqlDbSystemChannelSourceOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelSourceOutput {
	return o
}

// The network address of the DB System.
func (o GetMysqlDbSystemChannelSourceOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannelSource) string { return v.Hostname }).(pulumi.StringOutput)
}

// The port for primary endpoint of the DB System to listen on.
func (o GetMysqlDbSystemChannelSourceOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannelSource) int { return v.Port }).(pulumi.IntOutput)
}

// The specific source identifier.
func (o GetMysqlDbSystemChannelSourceOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannelSource) string { return v.SourceType }).(pulumi.StringOutput)
}

// The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
func (o GetMysqlDbSystemChannelSourceOutput) SslCaCertificates() GetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannelSource) []GetMysqlDbSystemChannelSourceSslCaCertificate {
		return v.SslCaCertificates
	}).(GetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput)
}

// The SSL mode of the Channel.
func (o GetMysqlDbSystemChannelSourceOutput) SslMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannelSource) string { return v.SslMode }).(pulumi.StringOutput)
}

// The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
func (o GetMysqlDbSystemChannelSourceOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannelSource) string { return v.Username }).(pulumi.StringOutput)
}

type GetMysqlDbSystemChannelSourceArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemChannelSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemChannelSource)(nil)).Elem()
}

func (o GetMysqlDbSystemChannelSourceArrayOutput) ToGetMysqlDbSystemChannelSourceArrayOutput() GetMysqlDbSystemChannelSourceArrayOutput {
	return o
}

func (o GetMysqlDbSystemChannelSourceArrayOutput) ToGetMysqlDbSystemChannelSourceArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelSourceArrayOutput {
	return o
}

func (o GetMysqlDbSystemChannelSourceArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemChannelSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemChannelSource {
		return vs[0].([]GetMysqlDbSystemChannelSource)[vs[1].(int)]
	}).(GetMysqlDbSystemChannelSourceOutput)
}

type GetMysqlDbSystemChannelSourceSslCaCertificate struct {
	// The type of CA certificate.
	CertificateType string `pulumi:"certificateType"`
	// The string containing the CA certificate in PEM format.
	Contents string `pulumi:"contents"`
}

// GetMysqlDbSystemChannelSourceSslCaCertificateInput is an input type that accepts GetMysqlDbSystemChannelSourceSslCaCertificateArgs and GetMysqlDbSystemChannelSourceSslCaCertificateOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemChannelSourceSslCaCertificateInput` via:
//
//          GetMysqlDbSystemChannelSourceSslCaCertificateArgs{...}
type GetMysqlDbSystemChannelSourceSslCaCertificateInput interface {
	pulumi.Input

	ToGetMysqlDbSystemChannelSourceSslCaCertificateOutput() GetMysqlDbSystemChannelSourceSslCaCertificateOutput
	ToGetMysqlDbSystemChannelSourceSslCaCertificateOutputWithContext(context.Context) GetMysqlDbSystemChannelSourceSslCaCertificateOutput
}

type GetMysqlDbSystemChannelSourceSslCaCertificateArgs struct {
	// The type of CA certificate.
	CertificateType pulumi.StringInput `pulumi:"certificateType"`
	// The string containing the CA certificate in PEM format.
	Contents pulumi.StringInput `pulumi:"contents"`
}

func (GetMysqlDbSystemChannelSourceSslCaCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemChannelSourceSslCaCertificate)(nil)).Elem()
}

func (i GetMysqlDbSystemChannelSourceSslCaCertificateArgs) ToGetMysqlDbSystemChannelSourceSslCaCertificateOutput() GetMysqlDbSystemChannelSourceSslCaCertificateOutput {
	return i.ToGetMysqlDbSystemChannelSourceSslCaCertificateOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemChannelSourceSslCaCertificateArgs) ToGetMysqlDbSystemChannelSourceSslCaCertificateOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelSourceSslCaCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemChannelSourceSslCaCertificateOutput)
}

// GetMysqlDbSystemChannelSourceSslCaCertificateArrayInput is an input type that accepts GetMysqlDbSystemChannelSourceSslCaCertificateArray and GetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemChannelSourceSslCaCertificateArrayInput` via:
//
//          GetMysqlDbSystemChannelSourceSslCaCertificateArray{ GetMysqlDbSystemChannelSourceSslCaCertificateArgs{...} }
type GetMysqlDbSystemChannelSourceSslCaCertificateArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput() GetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput
	ToGetMysqlDbSystemChannelSourceSslCaCertificateArrayOutputWithContext(context.Context) GetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput
}

type GetMysqlDbSystemChannelSourceSslCaCertificateArray []GetMysqlDbSystemChannelSourceSslCaCertificateInput

func (GetMysqlDbSystemChannelSourceSslCaCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemChannelSourceSslCaCertificate)(nil)).Elem()
}

func (i GetMysqlDbSystemChannelSourceSslCaCertificateArray) ToGetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput() GetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput {
	return i.ToGetMysqlDbSystemChannelSourceSslCaCertificateArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemChannelSourceSslCaCertificateArray) ToGetMysqlDbSystemChannelSourceSslCaCertificateArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput)
}

type GetMysqlDbSystemChannelSourceSslCaCertificateOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemChannelSourceSslCaCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemChannelSourceSslCaCertificate)(nil)).Elem()
}

func (o GetMysqlDbSystemChannelSourceSslCaCertificateOutput) ToGetMysqlDbSystemChannelSourceSslCaCertificateOutput() GetMysqlDbSystemChannelSourceSslCaCertificateOutput {
	return o
}

func (o GetMysqlDbSystemChannelSourceSslCaCertificateOutput) ToGetMysqlDbSystemChannelSourceSslCaCertificateOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelSourceSslCaCertificateOutput {
	return o
}

// The type of CA certificate.
func (o GetMysqlDbSystemChannelSourceSslCaCertificateOutput) CertificateType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannelSourceSslCaCertificate) string { return v.CertificateType }).(pulumi.StringOutput)
}

// The string containing the CA certificate in PEM format.
func (o GetMysqlDbSystemChannelSourceSslCaCertificateOutput) Contents() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannelSourceSslCaCertificate) string { return v.Contents }).(pulumi.StringOutput)
}

type GetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemChannelSourceSslCaCertificate)(nil)).Elem()
}

func (o GetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput) ToGetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput() GetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput {
	return o
}

func (o GetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput) ToGetMysqlDbSystemChannelSourceSslCaCertificateArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput {
	return o
}

func (o GetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemChannelSourceSslCaCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemChannelSourceSslCaCertificate {
		return vs[0].([]GetMysqlDbSystemChannelSourceSslCaCertificate)[vs[1].(int)]
	}).(GetMysqlDbSystemChannelSourceSslCaCertificateOutput)
}

type GetMysqlDbSystemChannelTarget struct {
	// The username for the replication applier of the target MySQL DB System.
	ApplierUsername string `pulumi:"applierUsername"`
	// The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
	ChannelName string `pulumi:"channelName"`
	// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId string `pulumi:"dbSystemId"`
	// The specific target identifier.
	TargetType string `pulumi:"targetType"`
}

// GetMysqlDbSystemChannelTargetInput is an input type that accepts GetMysqlDbSystemChannelTargetArgs and GetMysqlDbSystemChannelTargetOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemChannelTargetInput` via:
//
//          GetMysqlDbSystemChannelTargetArgs{...}
type GetMysqlDbSystemChannelTargetInput interface {
	pulumi.Input

	ToGetMysqlDbSystemChannelTargetOutput() GetMysqlDbSystemChannelTargetOutput
	ToGetMysqlDbSystemChannelTargetOutputWithContext(context.Context) GetMysqlDbSystemChannelTargetOutput
}

type GetMysqlDbSystemChannelTargetArgs struct {
	// The username for the replication applier of the target MySQL DB System.
	ApplierUsername pulumi.StringInput `pulumi:"applierUsername"`
	// The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId pulumi.StringInput `pulumi:"dbSystemId"`
	// The specific target identifier.
	TargetType pulumi.StringInput `pulumi:"targetType"`
}

func (GetMysqlDbSystemChannelTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemChannelTarget)(nil)).Elem()
}

func (i GetMysqlDbSystemChannelTargetArgs) ToGetMysqlDbSystemChannelTargetOutput() GetMysqlDbSystemChannelTargetOutput {
	return i.ToGetMysqlDbSystemChannelTargetOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemChannelTargetArgs) ToGetMysqlDbSystemChannelTargetOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemChannelTargetOutput)
}

// GetMysqlDbSystemChannelTargetArrayInput is an input type that accepts GetMysqlDbSystemChannelTargetArray and GetMysqlDbSystemChannelTargetArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemChannelTargetArrayInput` via:
//
//          GetMysqlDbSystemChannelTargetArray{ GetMysqlDbSystemChannelTargetArgs{...} }
type GetMysqlDbSystemChannelTargetArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemChannelTargetArrayOutput() GetMysqlDbSystemChannelTargetArrayOutput
	ToGetMysqlDbSystemChannelTargetArrayOutputWithContext(context.Context) GetMysqlDbSystemChannelTargetArrayOutput
}

type GetMysqlDbSystemChannelTargetArray []GetMysqlDbSystemChannelTargetInput

func (GetMysqlDbSystemChannelTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemChannelTarget)(nil)).Elem()
}

func (i GetMysqlDbSystemChannelTargetArray) ToGetMysqlDbSystemChannelTargetArrayOutput() GetMysqlDbSystemChannelTargetArrayOutput {
	return i.ToGetMysqlDbSystemChannelTargetArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemChannelTargetArray) ToGetMysqlDbSystemChannelTargetArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemChannelTargetArrayOutput)
}

type GetMysqlDbSystemChannelTargetOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemChannelTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemChannelTarget)(nil)).Elem()
}

func (o GetMysqlDbSystemChannelTargetOutput) ToGetMysqlDbSystemChannelTargetOutput() GetMysqlDbSystemChannelTargetOutput {
	return o
}

func (o GetMysqlDbSystemChannelTargetOutput) ToGetMysqlDbSystemChannelTargetOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelTargetOutput {
	return o
}

// The username for the replication applier of the target MySQL DB System.
func (o GetMysqlDbSystemChannelTargetOutput) ApplierUsername() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannelTarget) string { return v.ApplierUsername }).(pulumi.StringOutput)
}

// The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
func (o GetMysqlDbSystemChannelTargetOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannelTarget) string { return v.ChannelName }).(pulumi.StringOutput)
}

// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetMysqlDbSystemChannelTargetOutput) DbSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannelTarget) string { return v.DbSystemId }).(pulumi.StringOutput)
}

// The specific target identifier.
func (o GetMysqlDbSystemChannelTargetOutput) TargetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannelTarget) string { return v.TargetType }).(pulumi.StringOutput)
}

type GetMysqlDbSystemChannelTargetArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemChannelTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemChannelTarget)(nil)).Elem()
}

func (o GetMysqlDbSystemChannelTargetArrayOutput) ToGetMysqlDbSystemChannelTargetArrayOutput() GetMysqlDbSystemChannelTargetArrayOutput {
	return o
}

func (o GetMysqlDbSystemChannelTargetArrayOutput) ToGetMysqlDbSystemChannelTargetArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelTargetArrayOutput {
	return o
}

func (o GetMysqlDbSystemChannelTargetArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemChannelTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemChannelTarget {
		return vs[0].([]GetMysqlDbSystemChannelTarget)[vs[1].(int)]
	}).(GetMysqlDbSystemChannelTargetOutput)
}

type GetMysqlDbSystemCurrentPlacement struct {
	// The availability domain in which the DB System is placed.
	AvailabilityDomain string `pulumi:"availabilityDomain"`
	// The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	FaultDomain string `pulumi:"faultDomain"`
}

// GetMysqlDbSystemCurrentPlacementInput is an input type that accepts GetMysqlDbSystemCurrentPlacementArgs and GetMysqlDbSystemCurrentPlacementOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemCurrentPlacementInput` via:
//
//          GetMysqlDbSystemCurrentPlacementArgs{...}
type GetMysqlDbSystemCurrentPlacementInput interface {
	pulumi.Input

	ToGetMysqlDbSystemCurrentPlacementOutput() GetMysqlDbSystemCurrentPlacementOutput
	ToGetMysqlDbSystemCurrentPlacementOutputWithContext(context.Context) GetMysqlDbSystemCurrentPlacementOutput
}

type GetMysqlDbSystemCurrentPlacementArgs struct {
	// The availability domain in which the DB System is placed.
	AvailabilityDomain pulumi.StringInput `pulumi:"availabilityDomain"`
	// The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	FaultDomain pulumi.StringInput `pulumi:"faultDomain"`
}

func (GetMysqlDbSystemCurrentPlacementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemCurrentPlacement)(nil)).Elem()
}

func (i GetMysqlDbSystemCurrentPlacementArgs) ToGetMysqlDbSystemCurrentPlacementOutput() GetMysqlDbSystemCurrentPlacementOutput {
	return i.ToGetMysqlDbSystemCurrentPlacementOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemCurrentPlacementArgs) ToGetMysqlDbSystemCurrentPlacementOutputWithContext(ctx context.Context) GetMysqlDbSystemCurrentPlacementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemCurrentPlacementOutput)
}

// GetMysqlDbSystemCurrentPlacementArrayInput is an input type that accepts GetMysqlDbSystemCurrentPlacementArray and GetMysqlDbSystemCurrentPlacementArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemCurrentPlacementArrayInput` via:
//
//          GetMysqlDbSystemCurrentPlacementArray{ GetMysqlDbSystemCurrentPlacementArgs{...} }
type GetMysqlDbSystemCurrentPlacementArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemCurrentPlacementArrayOutput() GetMysqlDbSystemCurrentPlacementArrayOutput
	ToGetMysqlDbSystemCurrentPlacementArrayOutputWithContext(context.Context) GetMysqlDbSystemCurrentPlacementArrayOutput
}

type GetMysqlDbSystemCurrentPlacementArray []GetMysqlDbSystemCurrentPlacementInput

func (GetMysqlDbSystemCurrentPlacementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemCurrentPlacement)(nil)).Elem()
}

func (i GetMysqlDbSystemCurrentPlacementArray) ToGetMysqlDbSystemCurrentPlacementArrayOutput() GetMysqlDbSystemCurrentPlacementArrayOutput {
	return i.ToGetMysqlDbSystemCurrentPlacementArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemCurrentPlacementArray) ToGetMysqlDbSystemCurrentPlacementArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemCurrentPlacementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemCurrentPlacementArrayOutput)
}

type GetMysqlDbSystemCurrentPlacementOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemCurrentPlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemCurrentPlacement)(nil)).Elem()
}

func (o GetMysqlDbSystemCurrentPlacementOutput) ToGetMysqlDbSystemCurrentPlacementOutput() GetMysqlDbSystemCurrentPlacementOutput {
	return o
}

func (o GetMysqlDbSystemCurrentPlacementOutput) ToGetMysqlDbSystemCurrentPlacementOutputWithContext(ctx context.Context) GetMysqlDbSystemCurrentPlacementOutput {
	return o
}

// The availability domain in which the DB System is placed.
func (o GetMysqlDbSystemCurrentPlacementOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemCurrentPlacement) string { return v.AvailabilityDomain }).(pulumi.StringOutput)
}

// The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
func (o GetMysqlDbSystemCurrentPlacementOutput) FaultDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemCurrentPlacement) string { return v.FaultDomain }).(pulumi.StringOutput)
}

type GetMysqlDbSystemCurrentPlacementArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemCurrentPlacementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemCurrentPlacement)(nil)).Elem()
}

func (o GetMysqlDbSystemCurrentPlacementArrayOutput) ToGetMysqlDbSystemCurrentPlacementArrayOutput() GetMysqlDbSystemCurrentPlacementArrayOutput {
	return o
}

func (o GetMysqlDbSystemCurrentPlacementArrayOutput) ToGetMysqlDbSystemCurrentPlacementArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemCurrentPlacementArrayOutput {
	return o
}

func (o GetMysqlDbSystemCurrentPlacementArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemCurrentPlacementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemCurrentPlacement {
		return vs[0].([]GetMysqlDbSystemCurrentPlacement)[vs[1].(int)]
	}).(GetMysqlDbSystemCurrentPlacementOutput)
}

type GetMysqlDbSystemDeletionPolicy struct {
	// Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
	AutomaticBackupRetention string `pulumi:"automaticBackupRetention"`
	// Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
	FinalBackup string `pulumi:"finalBackup"`
	// Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
	IsDeleteProtected bool `pulumi:"isDeleteProtected"`
}

// GetMysqlDbSystemDeletionPolicyInput is an input type that accepts GetMysqlDbSystemDeletionPolicyArgs and GetMysqlDbSystemDeletionPolicyOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemDeletionPolicyInput` via:
//
//          GetMysqlDbSystemDeletionPolicyArgs{...}
type GetMysqlDbSystemDeletionPolicyInput interface {
	pulumi.Input

	ToGetMysqlDbSystemDeletionPolicyOutput() GetMysqlDbSystemDeletionPolicyOutput
	ToGetMysqlDbSystemDeletionPolicyOutputWithContext(context.Context) GetMysqlDbSystemDeletionPolicyOutput
}

type GetMysqlDbSystemDeletionPolicyArgs struct {
	// Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
	AutomaticBackupRetention pulumi.StringInput `pulumi:"automaticBackupRetention"`
	// Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
	FinalBackup pulumi.StringInput `pulumi:"finalBackup"`
	// Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
	IsDeleteProtected pulumi.BoolInput `pulumi:"isDeleteProtected"`
}

func (GetMysqlDbSystemDeletionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemDeletionPolicy)(nil)).Elem()
}

func (i GetMysqlDbSystemDeletionPolicyArgs) ToGetMysqlDbSystemDeletionPolicyOutput() GetMysqlDbSystemDeletionPolicyOutput {
	return i.ToGetMysqlDbSystemDeletionPolicyOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemDeletionPolicyArgs) ToGetMysqlDbSystemDeletionPolicyOutputWithContext(ctx context.Context) GetMysqlDbSystemDeletionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemDeletionPolicyOutput)
}

// GetMysqlDbSystemDeletionPolicyArrayInput is an input type that accepts GetMysqlDbSystemDeletionPolicyArray and GetMysqlDbSystemDeletionPolicyArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemDeletionPolicyArrayInput` via:
//
//          GetMysqlDbSystemDeletionPolicyArray{ GetMysqlDbSystemDeletionPolicyArgs{...} }
type GetMysqlDbSystemDeletionPolicyArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemDeletionPolicyArrayOutput() GetMysqlDbSystemDeletionPolicyArrayOutput
	ToGetMysqlDbSystemDeletionPolicyArrayOutputWithContext(context.Context) GetMysqlDbSystemDeletionPolicyArrayOutput
}

type GetMysqlDbSystemDeletionPolicyArray []GetMysqlDbSystemDeletionPolicyInput

func (GetMysqlDbSystemDeletionPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemDeletionPolicy)(nil)).Elem()
}

func (i GetMysqlDbSystemDeletionPolicyArray) ToGetMysqlDbSystemDeletionPolicyArrayOutput() GetMysqlDbSystemDeletionPolicyArrayOutput {
	return i.ToGetMysqlDbSystemDeletionPolicyArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemDeletionPolicyArray) ToGetMysqlDbSystemDeletionPolicyArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemDeletionPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemDeletionPolicyArrayOutput)
}

type GetMysqlDbSystemDeletionPolicyOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemDeletionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemDeletionPolicy)(nil)).Elem()
}

func (o GetMysqlDbSystemDeletionPolicyOutput) ToGetMysqlDbSystemDeletionPolicyOutput() GetMysqlDbSystemDeletionPolicyOutput {
	return o
}

func (o GetMysqlDbSystemDeletionPolicyOutput) ToGetMysqlDbSystemDeletionPolicyOutputWithContext(ctx context.Context) GetMysqlDbSystemDeletionPolicyOutput {
	return o
}

// Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
func (o GetMysqlDbSystemDeletionPolicyOutput) AutomaticBackupRetention() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemDeletionPolicy) string { return v.AutomaticBackupRetention }).(pulumi.StringOutput)
}

// Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
func (o GetMysqlDbSystemDeletionPolicyOutput) FinalBackup() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemDeletionPolicy) string { return v.FinalBackup }).(pulumi.StringOutput)
}

// Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
func (o GetMysqlDbSystemDeletionPolicyOutput) IsDeleteProtected() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlDbSystemDeletionPolicy) bool { return v.IsDeleteProtected }).(pulumi.BoolOutput)
}

type GetMysqlDbSystemDeletionPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemDeletionPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemDeletionPolicy)(nil)).Elem()
}

func (o GetMysqlDbSystemDeletionPolicyArrayOutput) ToGetMysqlDbSystemDeletionPolicyArrayOutput() GetMysqlDbSystemDeletionPolicyArrayOutput {
	return o
}

func (o GetMysqlDbSystemDeletionPolicyArrayOutput) ToGetMysqlDbSystemDeletionPolicyArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemDeletionPolicyArrayOutput {
	return o
}

func (o GetMysqlDbSystemDeletionPolicyArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemDeletionPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemDeletionPolicy {
		return vs[0].([]GetMysqlDbSystemDeletionPolicy)[vs[1].(int)]
	}).(GetMysqlDbSystemDeletionPolicyOutput)
}

type GetMysqlDbSystemEndpoint struct {
	// The network address of the DB System.
	Hostname string `pulumi:"hostname"`
	// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
	IpAddress string `pulumi:"ipAddress"`
	// The access modes from the client that this endpoint supports.
	Modes []string `pulumi:"modes"`
	// The port for primary endpoint of the DB System to listen on.
	Port int `pulumi:"port"`
	// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
	PortX int `pulumi:"portX"`
	// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
	Status string `pulumi:"status"`
	// Additional information about the current endpoint status.
	StatusDetails string `pulumi:"statusDetails"`
}

// GetMysqlDbSystemEndpointInput is an input type that accepts GetMysqlDbSystemEndpointArgs and GetMysqlDbSystemEndpointOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemEndpointInput` via:
//
//          GetMysqlDbSystemEndpointArgs{...}
type GetMysqlDbSystemEndpointInput interface {
	pulumi.Input

	ToGetMysqlDbSystemEndpointOutput() GetMysqlDbSystemEndpointOutput
	ToGetMysqlDbSystemEndpointOutputWithContext(context.Context) GetMysqlDbSystemEndpointOutput
}

type GetMysqlDbSystemEndpointArgs struct {
	// The network address of the DB System.
	Hostname pulumi.StringInput `pulumi:"hostname"`
	// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// The access modes from the client that this endpoint supports.
	Modes pulumi.StringArrayInput `pulumi:"modes"`
	// The port for primary endpoint of the DB System to listen on.
	Port pulumi.IntInput `pulumi:"port"`
	// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
	PortX pulumi.IntInput `pulumi:"portX"`
	// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
	Status pulumi.StringInput `pulumi:"status"`
	// Additional information about the current endpoint status.
	StatusDetails pulumi.StringInput `pulumi:"statusDetails"`
}

func (GetMysqlDbSystemEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemEndpoint)(nil)).Elem()
}

func (i GetMysqlDbSystemEndpointArgs) ToGetMysqlDbSystemEndpointOutput() GetMysqlDbSystemEndpointOutput {
	return i.ToGetMysqlDbSystemEndpointOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemEndpointArgs) ToGetMysqlDbSystemEndpointOutputWithContext(ctx context.Context) GetMysqlDbSystemEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemEndpointOutput)
}

// GetMysqlDbSystemEndpointArrayInput is an input type that accepts GetMysqlDbSystemEndpointArray and GetMysqlDbSystemEndpointArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemEndpointArrayInput` via:
//
//          GetMysqlDbSystemEndpointArray{ GetMysqlDbSystemEndpointArgs{...} }
type GetMysqlDbSystemEndpointArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemEndpointArrayOutput() GetMysqlDbSystemEndpointArrayOutput
	ToGetMysqlDbSystemEndpointArrayOutputWithContext(context.Context) GetMysqlDbSystemEndpointArrayOutput
}

type GetMysqlDbSystemEndpointArray []GetMysqlDbSystemEndpointInput

func (GetMysqlDbSystemEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemEndpoint)(nil)).Elem()
}

func (i GetMysqlDbSystemEndpointArray) ToGetMysqlDbSystemEndpointArrayOutput() GetMysqlDbSystemEndpointArrayOutput {
	return i.ToGetMysqlDbSystemEndpointArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemEndpointArray) ToGetMysqlDbSystemEndpointArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemEndpointArrayOutput)
}

type GetMysqlDbSystemEndpointOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemEndpoint)(nil)).Elem()
}

func (o GetMysqlDbSystemEndpointOutput) ToGetMysqlDbSystemEndpointOutput() GetMysqlDbSystemEndpointOutput {
	return o
}

func (o GetMysqlDbSystemEndpointOutput) ToGetMysqlDbSystemEndpointOutputWithContext(ctx context.Context) GetMysqlDbSystemEndpointOutput {
	return o
}

// The network address of the DB System.
func (o GetMysqlDbSystemEndpointOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemEndpoint) string { return v.Hostname }).(pulumi.StringOutput)
}

// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
func (o GetMysqlDbSystemEndpointOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemEndpoint) string { return v.IpAddress }).(pulumi.StringOutput)
}

// The access modes from the client that this endpoint supports.
func (o GetMysqlDbSystemEndpointOutput) Modes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemEndpoint) []string { return v.Modes }).(pulumi.StringArrayOutput)
}

// The port for primary endpoint of the DB System to listen on.
func (o GetMysqlDbSystemEndpointOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemEndpoint) int { return v.Port }).(pulumi.IntOutput)
}

// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
func (o GetMysqlDbSystemEndpointOutput) PortX() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemEndpoint) int { return v.PortX }).(pulumi.IntOutput)
}

// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
func (o GetMysqlDbSystemEndpointOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemEndpoint) string { return v.Status }).(pulumi.StringOutput)
}

// Additional information about the current endpoint status.
func (o GetMysqlDbSystemEndpointOutput) StatusDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemEndpoint) string { return v.StatusDetails }).(pulumi.StringOutput)
}

type GetMysqlDbSystemEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemEndpoint)(nil)).Elem()
}

func (o GetMysqlDbSystemEndpointArrayOutput) ToGetMysqlDbSystemEndpointArrayOutput() GetMysqlDbSystemEndpointArrayOutput {
	return o
}

func (o GetMysqlDbSystemEndpointArrayOutput) ToGetMysqlDbSystemEndpointArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemEndpointArrayOutput {
	return o
}

func (o GetMysqlDbSystemEndpointArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemEndpoint {
		return vs[0].([]GetMysqlDbSystemEndpoint)[vs[1].(int)]
	}).(GetMysqlDbSystemEndpointOutput)
}

type GetMysqlDbSystemHeatWaveCluster struct {
	// The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
	ClusterSize int `pulumi:"clusterSize"`
	// The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
	ShapeName string `pulumi:"shapeName"`
	// The current state of the DB System.
	State string `pulumi:"state"`
	// The date and time the DB System was created.
	TimeCreated string `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetMysqlDbSystemHeatWaveClusterInput is an input type that accepts GetMysqlDbSystemHeatWaveClusterArgs and GetMysqlDbSystemHeatWaveClusterOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemHeatWaveClusterInput` via:
//
//          GetMysqlDbSystemHeatWaveClusterArgs{...}
type GetMysqlDbSystemHeatWaveClusterInput interface {
	pulumi.Input

	ToGetMysqlDbSystemHeatWaveClusterOutput() GetMysqlDbSystemHeatWaveClusterOutput
	ToGetMysqlDbSystemHeatWaveClusterOutputWithContext(context.Context) GetMysqlDbSystemHeatWaveClusterOutput
}

type GetMysqlDbSystemHeatWaveClusterArgs struct {
	// The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
	ClusterSize pulumi.IntInput `pulumi:"clusterSize"`
	// The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
	ShapeName pulumi.StringInput `pulumi:"shapeName"`
	// The current state of the DB System.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the DB System was created.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetMysqlDbSystemHeatWaveClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemHeatWaveCluster)(nil)).Elem()
}

func (i GetMysqlDbSystemHeatWaveClusterArgs) ToGetMysqlDbSystemHeatWaveClusterOutput() GetMysqlDbSystemHeatWaveClusterOutput {
	return i.ToGetMysqlDbSystemHeatWaveClusterOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemHeatWaveClusterArgs) ToGetMysqlDbSystemHeatWaveClusterOutputWithContext(ctx context.Context) GetMysqlDbSystemHeatWaveClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemHeatWaveClusterOutput)
}

// GetMysqlDbSystemHeatWaveClusterArrayInput is an input type that accepts GetMysqlDbSystemHeatWaveClusterArray and GetMysqlDbSystemHeatWaveClusterArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemHeatWaveClusterArrayInput` via:
//
//          GetMysqlDbSystemHeatWaveClusterArray{ GetMysqlDbSystemHeatWaveClusterArgs{...} }
type GetMysqlDbSystemHeatWaveClusterArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemHeatWaveClusterArrayOutput() GetMysqlDbSystemHeatWaveClusterArrayOutput
	ToGetMysqlDbSystemHeatWaveClusterArrayOutputWithContext(context.Context) GetMysqlDbSystemHeatWaveClusterArrayOutput
}

type GetMysqlDbSystemHeatWaveClusterArray []GetMysqlDbSystemHeatWaveClusterInput

func (GetMysqlDbSystemHeatWaveClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemHeatWaveCluster)(nil)).Elem()
}

func (i GetMysqlDbSystemHeatWaveClusterArray) ToGetMysqlDbSystemHeatWaveClusterArrayOutput() GetMysqlDbSystemHeatWaveClusterArrayOutput {
	return i.ToGetMysqlDbSystemHeatWaveClusterArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemHeatWaveClusterArray) ToGetMysqlDbSystemHeatWaveClusterArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemHeatWaveClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemHeatWaveClusterArrayOutput)
}

type GetMysqlDbSystemHeatWaveClusterOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemHeatWaveClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemHeatWaveCluster)(nil)).Elem()
}

func (o GetMysqlDbSystemHeatWaveClusterOutput) ToGetMysqlDbSystemHeatWaveClusterOutput() GetMysqlDbSystemHeatWaveClusterOutput {
	return o
}

func (o GetMysqlDbSystemHeatWaveClusterOutput) ToGetMysqlDbSystemHeatWaveClusterOutputWithContext(ctx context.Context) GetMysqlDbSystemHeatWaveClusterOutput {
	return o
}

// The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
func (o GetMysqlDbSystemHeatWaveClusterOutput) ClusterSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemHeatWaveCluster) int { return v.ClusterSize }).(pulumi.IntOutput)
}

// The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
func (o GetMysqlDbSystemHeatWaveClusterOutput) ShapeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemHeatWaveCluster) string { return v.ShapeName }).(pulumi.StringOutput)
}

// The current state of the DB System.
func (o GetMysqlDbSystemHeatWaveClusterOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemHeatWaveCluster) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the DB System was created.
func (o GetMysqlDbSystemHeatWaveClusterOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemHeatWaveCluster) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the DB System was last updated.
func (o GetMysqlDbSystemHeatWaveClusterOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemHeatWaveCluster) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetMysqlDbSystemHeatWaveClusterArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemHeatWaveClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemHeatWaveCluster)(nil)).Elem()
}

func (o GetMysqlDbSystemHeatWaveClusterArrayOutput) ToGetMysqlDbSystemHeatWaveClusterArrayOutput() GetMysqlDbSystemHeatWaveClusterArrayOutput {
	return o
}

func (o GetMysqlDbSystemHeatWaveClusterArrayOutput) ToGetMysqlDbSystemHeatWaveClusterArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemHeatWaveClusterArrayOutput {
	return o
}

func (o GetMysqlDbSystemHeatWaveClusterArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemHeatWaveClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemHeatWaveCluster {
		return vs[0].([]GetMysqlDbSystemHeatWaveCluster)[vs[1].(int)]
	}).(GetMysqlDbSystemHeatWaveClusterOutput)
}

type GetMysqlDbSystemMaintenance struct {
	// The start time of the maintenance window.
	WindowStartTime string `pulumi:"windowStartTime"`
}

// GetMysqlDbSystemMaintenanceInput is an input type that accepts GetMysqlDbSystemMaintenanceArgs and GetMysqlDbSystemMaintenanceOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemMaintenanceInput` via:
//
//          GetMysqlDbSystemMaintenanceArgs{...}
type GetMysqlDbSystemMaintenanceInput interface {
	pulumi.Input

	ToGetMysqlDbSystemMaintenanceOutput() GetMysqlDbSystemMaintenanceOutput
	ToGetMysqlDbSystemMaintenanceOutputWithContext(context.Context) GetMysqlDbSystemMaintenanceOutput
}

type GetMysqlDbSystemMaintenanceArgs struct {
	// The start time of the maintenance window.
	WindowStartTime pulumi.StringInput `pulumi:"windowStartTime"`
}

func (GetMysqlDbSystemMaintenanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemMaintenance)(nil)).Elem()
}

func (i GetMysqlDbSystemMaintenanceArgs) ToGetMysqlDbSystemMaintenanceOutput() GetMysqlDbSystemMaintenanceOutput {
	return i.ToGetMysqlDbSystemMaintenanceOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemMaintenanceArgs) ToGetMysqlDbSystemMaintenanceOutputWithContext(ctx context.Context) GetMysqlDbSystemMaintenanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemMaintenanceOutput)
}

// GetMysqlDbSystemMaintenanceArrayInput is an input type that accepts GetMysqlDbSystemMaintenanceArray and GetMysqlDbSystemMaintenanceArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemMaintenanceArrayInput` via:
//
//          GetMysqlDbSystemMaintenanceArray{ GetMysqlDbSystemMaintenanceArgs{...} }
type GetMysqlDbSystemMaintenanceArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemMaintenanceArrayOutput() GetMysqlDbSystemMaintenanceArrayOutput
	ToGetMysqlDbSystemMaintenanceArrayOutputWithContext(context.Context) GetMysqlDbSystemMaintenanceArrayOutput
}

type GetMysqlDbSystemMaintenanceArray []GetMysqlDbSystemMaintenanceInput

func (GetMysqlDbSystemMaintenanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemMaintenance)(nil)).Elem()
}

func (i GetMysqlDbSystemMaintenanceArray) ToGetMysqlDbSystemMaintenanceArrayOutput() GetMysqlDbSystemMaintenanceArrayOutput {
	return i.ToGetMysqlDbSystemMaintenanceArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemMaintenanceArray) ToGetMysqlDbSystemMaintenanceArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemMaintenanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemMaintenanceArrayOutput)
}

type GetMysqlDbSystemMaintenanceOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemMaintenanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemMaintenance)(nil)).Elem()
}

func (o GetMysqlDbSystemMaintenanceOutput) ToGetMysqlDbSystemMaintenanceOutput() GetMysqlDbSystemMaintenanceOutput {
	return o
}

func (o GetMysqlDbSystemMaintenanceOutput) ToGetMysqlDbSystemMaintenanceOutputWithContext(ctx context.Context) GetMysqlDbSystemMaintenanceOutput {
	return o
}

// The start time of the maintenance window.
func (o GetMysqlDbSystemMaintenanceOutput) WindowStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemMaintenance) string { return v.WindowStartTime }).(pulumi.StringOutput)
}

type GetMysqlDbSystemMaintenanceArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemMaintenanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemMaintenance)(nil)).Elem()
}

func (o GetMysqlDbSystemMaintenanceArrayOutput) ToGetMysqlDbSystemMaintenanceArrayOutput() GetMysqlDbSystemMaintenanceArrayOutput {
	return o
}

func (o GetMysqlDbSystemMaintenanceArrayOutput) ToGetMysqlDbSystemMaintenanceArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemMaintenanceArrayOutput {
	return o
}

func (o GetMysqlDbSystemMaintenanceArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemMaintenanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemMaintenance {
		return vs[0].([]GetMysqlDbSystemMaintenance)[vs[1].(int)]
	}).(GetMysqlDbSystemMaintenanceOutput)
}

type GetMysqlDbSystemPointInTimeRecoveryDetail struct {
	// Earliest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeEarliestRecoveryPoint string `pulumi:"timeEarliestRecoveryPoint"`
	// Latest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeLatestRecoveryPoint string `pulumi:"timeLatestRecoveryPoint"`
}

// GetMysqlDbSystemPointInTimeRecoveryDetailInput is an input type that accepts GetMysqlDbSystemPointInTimeRecoveryDetailArgs and GetMysqlDbSystemPointInTimeRecoveryDetailOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemPointInTimeRecoveryDetailInput` via:
//
//          GetMysqlDbSystemPointInTimeRecoveryDetailArgs{...}
type GetMysqlDbSystemPointInTimeRecoveryDetailInput interface {
	pulumi.Input

	ToGetMysqlDbSystemPointInTimeRecoveryDetailOutput() GetMysqlDbSystemPointInTimeRecoveryDetailOutput
	ToGetMysqlDbSystemPointInTimeRecoveryDetailOutputWithContext(context.Context) GetMysqlDbSystemPointInTimeRecoveryDetailOutput
}

type GetMysqlDbSystemPointInTimeRecoveryDetailArgs struct {
	// Earliest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeEarliestRecoveryPoint pulumi.StringInput `pulumi:"timeEarliestRecoveryPoint"`
	// Latest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeLatestRecoveryPoint pulumi.StringInput `pulumi:"timeLatestRecoveryPoint"`
}

func (GetMysqlDbSystemPointInTimeRecoveryDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemPointInTimeRecoveryDetail)(nil)).Elem()
}

func (i GetMysqlDbSystemPointInTimeRecoveryDetailArgs) ToGetMysqlDbSystemPointInTimeRecoveryDetailOutput() GetMysqlDbSystemPointInTimeRecoveryDetailOutput {
	return i.ToGetMysqlDbSystemPointInTimeRecoveryDetailOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemPointInTimeRecoveryDetailArgs) ToGetMysqlDbSystemPointInTimeRecoveryDetailOutputWithContext(ctx context.Context) GetMysqlDbSystemPointInTimeRecoveryDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemPointInTimeRecoveryDetailOutput)
}

// GetMysqlDbSystemPointInTimeRecoveryDetailArrayInput is an input type that accepts GetMysqlDbSystemPointInTimeRecoveryDetailArray and GetMysqlDbSystemPointInTimeRecoveryDetailArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemPointInTimeRecoveryDetailArrayInput` via:
//
//          GetMysqlDbSystemPointInTimeRecoveryDetailArray{ GetMysqlDbSystemPointInTimeRecoveryDetailArgs{...} }
type GetMysqlDbSystemPointInTimeRecoveryDetailArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemPointInTimeRecoveryDetailArrayOutput() GetMysqlDbSystemPointInTimeRecoveryDetailArrayOutput
	ToGetMysqlDbSystemPointInTimeRecoveryDetailArrayOutputWithContext(context.Context) GetMysqlDbSystemPointInTimeRecoveryDetailArrayOutput
}

type GetMysqlDbSystemPointInTimeRecoveryDetailArray []GetMysqlDbSystemPointInTimeRecoveryDetailInput

func (GetMysqlDbSystemPointInTimeRecoveryDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemPointInTimeRecoveryDetail)(nil)).Elem()
}

func (i GetMysqlDbSystemPointInTimeRecoveryDetailArray) ToGetMysqlDbSystemPointInTimeRecoveryDetailArrayOutput() GetMysqlDbSystemPointInTimeRecoveryDetailArrayOutput {
	return i.ToGetMysqlDbSystemPointInTimeRecoveryDetailArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemPointInTimeRecoveryDetailArray) ToGetMysqlDbSystemPointInTimeRecoveryDetailArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemPointInTimeRecoveryDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemPointInTimeRecoveryDetailArrayOutput)
}

type GetMysqlDbSystemPointInTimeRecoveryDetailOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemPointInTimeRecoveryDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemPointInTimeRecoveryDetail)(nil)).Elem()
}

func (o GetMysqlDbSystemPointInTimeRecoveryDetailOutput) ToGetMysqlDbSystemPointInTimeRecoveryDetailOutput() GetMysqlDbSystemPointInTimeRecoveryDetailOutput {
	return o
}

func (o GetMysqlDbSystemPointInTimeRecoveryDetailOutput) ToGetMysqlDbSystemPointInTimeRecoveryDetailOutputWithContext(ctx context.Context) GetMysqlDbSystemPointInTimeRecoveryDetailOutput {
	return o
}

// Earliest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o GetMysqlDbSystemPointInTimeRecoveryDetailOutput) TimeEarliestRecoveryPoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemPointInTimeRecoveryDetail) string { return v.TimeEarliestRecoveryPoint }).(pulumi.StringOutput)
}

// Latest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o GetMysqlDbSystemPointInTimeRecoveryDetailOutput) TimeLatestRecoveryPoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemPointInTimeRecoveryDetail) string { return v.TimeLatestRecoveryPoint }).(pulumi.StringOutput)
}

type GetMysqlDbSystemPointInTimeRecoveryDetailArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemPointInTimeRecoveryDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemPointInTimeRecoveryDetail)(nil)).Elem()
}

func (o GetMysqlDbSystemPointInTimeRecoveryDetailArrayOutput) ToGetMysqlDbSystemPointInTimeRecoveryDetailArrayOutput() GetMysqlDbSystemPointInTimeRecoveryDetailArrayOutput {
	return o
}

func (o GetMysqlDbSystemPointInTimeRecoveryDetailArrayOutput) ToGetMysqlDbSystemPointInTimeRecoveryDetailArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemPointInTimeRecoveryDetailArrayOutput {
	return o
}

func (o GetMysqlDbSystemPointInTimeRecoveryDetailArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemPointInTimeRecoveryDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemPointInTimeRecoveryDetail {
		return vs[0].([]GetMysqlDbSystemPointInTimeRecoveryDetail)[vs[1].(int)]
	}).(GetMysqlDbSystemPointInTimeRecoveryDetailOutput)
}

type GetMysqlDbSystemSource struct {
	// The OCID of the backup to be used as the source for the new DB System.
	BackupId string `pulumi:"backupId"`
	// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId string `pulumi:"dbSystemId"`
	// The date and time, as per RFC 3339, of the change up to which the new DB System shall be restored to, using a backup and logs from the original DB System. In case no point in time is specified, then this new DB System shall be restored up to the latest change recorded for the original DB System.
	RecoveryPoint string `pulumi:"recoveryPoint"`
	// The specific source identifier.
	SourceType string `pulumi:"sourceType"`
}

// GetMysqlDbSystemSourceInput is an input type that accepts GetMysqlDbSystemSourceArgs and GetMysqlDbSystemSourceOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemSourceInput` via:
//
//          GetMysqlDbSystemSourceArgs{...}
type GetMysqlDbSystemSourceInput interface {
	pulumi.Input

	ToGetMysqlDbSystemSourceOutput() GetMysqlDbSystemSourceOutput
	ToGetMysqlDbSystemSourceOutputWithContext(context.Context) GetMysqlDbSystemSourceOutput
}

type GetMysqlDbSystemSourceArgs struct {
	// The OCID of the backup to be used as the source for the new DB System.
	BackupId pulumi.StringInput `pulumi:"backupId"`
	// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId pulumi.StringInput `pulumi:"dbSystemId"`
	// The date and time, as per RFC 3339, of the change up to which the new DB System shall be restored to, using a backup and logs from the original DB System. In case no point in time is specified, then this new DB System shall be restored up to the latest change recorded for the original DB System.
	RecoveryPoint pulumi.StringInput `pulumi:"recoveryPoint"`
	// The specific source identifier.
	SourceType pulumi.StringInput `pulumi:"sourceType"`
}

func (GetMysqlDbSystemSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemSource)(nil)).Elem()
}

func (i GetMysqlDbSystemSourceArgs) ToGetMysqlDbSystemSourceOutput() GetMysqlDbSystemSourceOutput {
	return i.ToGetMysqlDbSystemSourceOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemSourceArgs) ToGetMysqlDbSystemSourceOutputWithContext(ctx context.Context) GetMysqlDbSystemSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemSourceOutput)
}

// GetMysqlDbSystemSourceArrayInput is an input type that accepts GetMysqlDbSystemSourceArray and GetMysqlDbSystemSourceArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemSourceArrayInput` via:
//
//          GetMysqlDbSystemSourceArray{ GetMysqlDbSystemSourceArgs{...} }
type GetMysqlDbSystemSourceArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemSourceArrayOutput() GetMysqlDbSystemSourceArrayOutput
	ToGetMysqlDbSystemSourceArrayOutputWithContext(context.Context) GetMysqlDbSystemSourceArrayOutput
}

type GetMysqlDbSystemSourceArray []GetMysqlDbSystemSourceInput

func (GetMysqlDbSystemSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemSource)(nil)).Elem()
}

func (i GetMysqlDbSystemSourceArray) ToGetMysqlDbSystemSourceArrayOutput() GetMysqlDbSystemSourceArrayOutput {
	return i.ToGetMysqlDbSystemSourceArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemSourceArray) ToGetMysqlDbSystemSourceArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemSourceArrayOutput)
}

type GetMysqlDbSystemSourceOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemSource)(nil)).Elem()
}

func (o GetMysqlDbSystemSourceOutput) ToGetMysqlDbSystemSourceOutput() GetMysqlDbSystemSourceOutput {
	return o
}

func (o GetMysqlDbSystemSourceOutput) ToGetMysqlDbSystemSourceOutputWithContext(ctx context.Context) GetMysqlDbSystemSourceOutput {
	return o
}

// The OCID of the backup to be used as the source for the new DB System.
func (o GetMysqlDbSystemSourceOutput) BackupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemSource) string { return v.BackupId }).(pulumi.StringOutput)
}

// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetMysqlDbSystemSourceOutput) DbSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemSource) string { return v.DbSystemId }).(pulumi.StringOutput)
}

// The date and time, as per RFC 3339, of the change up to which the new DB System shall be restored to, using a backup and logs from the original DB System. In case no point in time is specified, then this new DB System shall be restored up to the latest change recorded for the original DB System.
func (o GetMysqlDbSystemSourceOutput) RecoveryPoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemSource) string { return v.RecoveryPoint }).(pulumi.StringOutput)
}

// The specific source identifier.
func (o GetMysqlDbSystemSourceOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemSource) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetMysqlDbSystemSourceArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemSource)(nil)).Elem()
}

func (o GetMysqlDbSystemSourceArrayOutput) ToGetMysqlDbSystemSourceArrayOutput() GetMysqlDbSystemSourceArrayOutput {
	return o
}

func (o GetMysqlDbSystemSourceArrayOutput) ToGetMysqlDbSystemSourceArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemSourceArrayOutput {
	return o
}

func (o GetMysqlDbSystemSourceArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemSource {
		return vs[0].([]GetMysqlDbSystemSource)[vs[1].(int)]
	}).(GetMysqlDbSystemSourceOutput)
}

type GetMysqlDbSystemsDbSystem struct {
	AdminPassword string `pulumi:"adminPassword"`
	AdminUsername string `pulumi:"adminUsername"`
	// DEPRECATED -- please use HeatWave API instead. A summary of an Analytics Cluster.
	AnalyticsClusters []GetMysqlDbSystemsDbSystemAnalyticsCluster `pulumi:"analyticsClusters"`
	// The availability domain in which the DB System is placed.
	AvailabilityDomain string `pulumi:"availabilityDomain"`
	// The Backup policy for the DB System.
	BackupPolicies []GetMysqlDbSystemsDbSystemBackupPolicy `pulumi:"backupPolicies"`
	// A list with a summary of all the Channels attached to the DB System.
	Channels []GetMysqlDbSystemsDbSystemChannel `pulumi:"channels"`
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// The requested Configuration instance.
	ConfigurationId string `pulumi:"configurationId"`
	// Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
	CrashRecovery string `pulumi:"crashRecovery"`
	// The availability domain and fault domain a DB System is placed in.
	CurrentPlacements []GetMysqlDbSystemsDbSystemCurrentPlacement `pulumi:"currentPlacements"`
	// Initial size of the data volume in GiBs that will be created and attached.
	DataStorageSizeInGb int `pulumi:"dataStorageSizeInGb"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The Deletion policy for the DB System.
	DeletionPolicies []GetMysqlDbSystemsDbSystemDeletionPolicy `pulumi:"deletionPolicies"`
	// User-provided data about the DB System.
	Description string `pulumi:"description"`
	// A filter to return only the resource matching the given display name exactly.
	DisplayName string `pulumi:"displayName"`
	// The network endpoints available for this DB System.
	Endpoints []GetMysqlDbSystemsDbSystemEndpoint `pulumi:"endpoints"`
	// The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	FaultDomain string `pulumi:"faultDomain"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A summary of a HeatWave cluster.
	HeatWaveClusters []GetMysqlDbSystemsDbSystemHeatWaveCluster `pulumi:"heatWaveClusters"`
	// The hostname for the primary endpoint of the DB System. Used for DNS. The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com"). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
	HostnameLabel string `pulumi:"hostnameLabel"`
	// The OCID of the DB System.
	Id string `pulumi:"id"`
	// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
	IpAddress string `pulumi:"ipAddress"`
	// DEPRECATED -- please use HeatWave API instead. If true, return only DB Systems with an Analytics Cluster attached, if false return only DB Systems with no Analytics Cluster attached. If not present, return all DB Systems.
	IsAnalyticsClusterAttached bool `pulumi:"isAnalyticsClusterAttached"`
	// If true, return only DB Systems with a HeatWave cluster attached, if false return only DB Systems with no HeatWave cluster attached. If not present, return all DB Systems.
	IsHeatWaveClusterAttached bool `pulumi:"isHeatWaveClusterAttached"`
	// Specifies if the DB System is highly available.
	IsHighlyAvailable bool `pulumi:"isHighlyAvailable"`
	// Additional information about the current lifecycleState.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The Maintenance Policy for the DB System.
	Maintenances []GetMysqlDbSystemsDbSystemMaintenance `pulumi:"maintenances"`
	// Name of the MySQL Version in use for the DB System.
	MysqlVersion string `pulumi:"mysqlVersion"`
	// Point-in-time Recovery details like earliest and latest recovery time point for the DB System.
	PointInTimeRecoveryDetails []GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetail `pulumi:"pointInTimeRecoveryDetails"`
	// The port for primary endpoint of the DB System to listen on.
	Port int `pulumi:"port"`
	// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
	PortX int `pulumi:"portX"`
	// The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
	ShapeName    string `pulumi:"shapeName"`
	ShutdownType string `pulumi:"shutdownType"`
	// Parameters detailing how to provision the initial data of the DB System.
	Sources []GetMysqlDbSystemsDbSystemSource `pulumi:"sources"`
	// DbSystem Lifecycle State
	State string `pulumi:"state"`
	// The OCID of the subnet the DB System is associated with.
	SubnetId string `pulumi:"subnetId"`
	// The date and time the DB System was created.
	TimeCreated string `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetMysqlDbSystemsDbSystemInput is an input type that accepts GetMysqlDbSystemsDbSystemArgs and GetMysqlDbSystemsDbSystemOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemInput` via:
//
//          GetMysqlDbSystemsDbSystemArgs{...}
type GetMysqlDbSystemsDbSystemInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemOutput() GetMysqlDbSystemsDbSystemOutput
	ToGetMysqlDbSystemsDbSystemOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemOutput
}

type GetMysqlDbSystemsDbSystemArgs struct {
	AdminPassword pulumi.StringInput `pulumi:"adminPassword"`
	AdminUsername pulumi.StringInput `pulumi:"adminUsername"`
	// DEPRECATED -- please use HeatWave API instead. A summary of an Analytics Cluster.
	AnalyticsClusters GetMysqlDbSystemsDbSystemAnalyticsClusterArrayInput `pulumi:"analyticsClusters"`
	// The availability domain in which the DB System is placed.
	AvailabilityDomain pulumi.StringInput `pulumi:"availabilityDomain"`
	// The Backup policy for the DB System.
	BackupPolicies GetMysqlDbSystemsDbSystemBackupPolicyArrayInput `pulumi:"backupPolicies"`
	// A list with a summary of all the Channels attached to the DB System.
	Channels GetMysqlDbSystemsDbSystemChannelArrayInput `pulumi:"channels"`
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The requested Configuration instance.
	ConfigurationId pulumi.StringInput `pulumi:"configurationId"`
	// Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
	CrashRecovery pulumi.StringInput `pulumi:"crashRecovery"`
	// The availability domain and fault domain a DB System is placed in.
	CurrentPlacements GetMysqlDbSystemsDbSystemCurrentPlacementArrayInput `pulumi:"currentPlacements"`
	// Initial size of the data volume in GiBs that will be created and attached.
	DataStorageSizeInGb pulumi.IntInput `pulumi:"dataStorageSizeInGb"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// The Deletion policy for the DB System.
	DeletionPolicies GetMysqlDbSystemsDbSystemDeletionPolicyArrayInput `pulumi:"deletionPolicies"`
	// User-provided data about the DB System.
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only the resource matching the given display name exactly.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The network endpoints available for this DB System.
	Endpoints GetMysqlDbSystemsDbSystemEndpointArrayInput `pulumi:"endpoints"`
	// The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	FaultDomain pulumi.StringInput `pulumi:"faultDomain"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// A summary of a HeatWave cluster.
	HeatWaveClusters GetMysqlDbSystemsDbSystemHeatWaveClusterArrayInput `pulumi:"heatWaveClusters"`
	// The hostname for the primary endpoint of the DB System. Used for DNS. The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com"). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
	HostnameLabel pulumi.StringInput `pulumi:"hostnameLabel"`
	// The OCID of the DB System.
	Id pulumi.StringInput `pulumi:"id"`
	// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// DEPRECATED -- please use HeatWave API instead. If true, return only DB Systems with an Analytics Cluster attached, if false return only DB Systems with no Analytics Cluster attached. If not present, return all DB Systems.
	IsAnalyticsClusterAttached pulumi.BoolInput `pulumi:"isAnalyticsClusterAttached"`
	// If true, return only DB Systems with a HeatWave cluster attached, if false return only DB Systems with no HeatWave cluster attached. If not present, return all DB Systems.
	IsHeatWaveClusterAttached pulumi.BoolInput `pulumi:"isHeatWaveClusterAttached"`
	// Specifies if the DB System is highly available.
	IsHighlyAvailable pulumi.BoolInput `pulumi:"isHighlyAvailable"`
	// Additional information about the current lifecycleState.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// The Maintenance Policy for the DB System.
	Maintenances GetMysqlDbSystemsDbSystemMaintenanceArrayInput `pulumi:"maintenances"`
	// Name of the MySQL Version in use for the DB System.
	MysqlVersion pulumi.StringInput `pulumi:"mysqlVersion"`
	// Point-in-time Recovery details like earliest and latest recovery time point for the DB System.
	PointInTimeRecoveryDetails GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayInput `pulumi:"pointInTimeRecoveryDetails"`
	// The port for primary endpoint of the DB System to listen on.
	Port pulumi.IntInput `pulumi:"port"`
	// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
	PortX pulumi.IntInput `pulumi:"portX"`
	// The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
	ShapeName    pulumi.StringInput `pulumi:"shapeName"`
	ShutdownType pulumi.StringInput `pulumi:"shutdownType"`
	// Parameters detailing how to provision the initial data of the DB System.
	Sources GetMysqlDbSystemsDbSystemSourceArrayInput `pulumi:"sources"`
	// DbSystem Lifecycle State
	State pulumi.StringInput `pulumi:"state"`
	// The OCID of the subnet the DB System is associated with.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// The date and time the DB System was created.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetMysqlDbSystemsDbSystemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystem)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemArgs) ToGetMysqlDbSystemsDbSystemOutput() GetMysqlDbSystemsDbSystemOutput {
	return i.ToGetMysqlDbSystemsDbSystemOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemArgs) ToGetMysqlDbSystemsDbSystemOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemOutput)
}

// GetMysqlDbSystemsDbSystemArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemArray and GetMysqlDbSystemsDbSystemArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemArrayInput` via:
//
//          GetMysqlDbSystemsDbSystemArray{ GetMysqlDbSystemsDbSystemArgs{...} }
type GetMysqlDbSystemsDbSystemArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemArrayOutput() GetMysqlDbSystemsDbSystemArrayOutput
	ToGetMysqlDbSystemsDbSystemArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemArrayOutput
}

type GetMysqlDbSystemsDbSystemArray []GetMysqlDbSystemsDbSystemInput

func (GetMysqlDbSystemsDbSystemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystem)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemArray) ToGetMysqlDbSystemsDbSystemArrayOutput() GetMysqlDbSystemsDbSystemArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemArray) ToGetMysqlDbSystemsDbSystemArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemArrayOutput)
}

type GetMysqlDbSystemsDbSystemOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystem)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemOutput) ToGetMysqlDbSystemsDbSystemOutput() GetMysqlDbSystemsDbSystemOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemOutput) ToGetMysqlDbSystemsDbSystemOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemOutput) AdminPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.AdminPassword }).(pulumi.StringOutput)
}

func (o GetMysqlDbSystemsDbSystemOutput) AdminUsername() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.AdminUsername }).(pulumi.StringOutput)
}

// DEPRECATED -- please use HeatWave API instead. A summary of an Analytics Cluster.
func (o GetMysqlDbSystemsDbSystemOutput) AnalyticsClusters() GetMysqlDbSystemsDbSystemAnalyticsClusterArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) []GetMysqlDbSystemsDbSystemAnalyticsCluster {
		return v.AnalyticsClusters
	}).(GetMysqlDbSystemsDbSystemAnalyticsClusterArrayOutput)
}

// The availability domain in which the DB System is placed.
func (o GetMysqlDbSystemsDbSystemOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.AvailabilityDomain }).(pulumi.StringOutput)
}

// The Backup policy for the DB System.
func (o GetMysqlDbSystemsDbSystemOutput) BackupPolicies() GetMysqlDbSystemsDbSystemBackupPolicyArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) []GetMysqlDbSystemsDbSystemBackupPolicy { return v.BackupPolicies }).(GetMysqlDbSystemsDbSystemBackupPolicyArrayOutput)
}

// A list with a summary of all the Channels attached to the DB System.
func (o GetMysqlDbSystemsDbSystemOutput) Channels() GetMysqlDbSystemsDbSystemChannelArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) []GetMysqlDbSystemsDbSystemChannel { return v.Channels }).(GetMysqlDbSystemsDbSystemChannelArrayOutput)
}

// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetMysqlDbSystemsDbSystemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The requested Configuration instance.
func (o GetMysqlDbSystemsDbSystemOutput) ConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.ConfigurationId }).(pulumi.StringOutput)
}

// Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
func (o GetMysqlDbSystemsDbSystemOutput) CrashRecovery() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.CrashRecovery }).(pulumi.StringOutput)
}

// The availability domain and fault domain a DB System is placed in.
func (o GetMysqlDbSystemsDbSystemOutput) CurrentPlacements() GetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) []GetMysqlDbSystemsDbSystemCurrentPlacement {
		return v.CurrentPlacements
	}).(GetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput)
}

// Initial size of the data volume in GiBs that will be created and attached.
func (o GetMysqlDbSystemsDbSystemOutput) DataStorageSizeInGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) int { return v.DataStorageSizeInGb }).(pulumi.IntOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetMysqlDbSystemsDbSystemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// The Deletion policy for the DB System.
func (o GetMysqlDbSystemsDbSystemOutput) DeletionPolicies() GetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) []GetMysqlDbSystemsDbSystemDeletionPolicy { return v.DeletionPolicies }).(GetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput)
}

// User-provided data about the DB System.
func (o GetMysqlDbSystemsDbSystemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only the resource matching the given display name exactly.
func (o GetMysqlDbSystemsDbSystemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The network endpoints available for this DB System.
func (o GetMysqlDbSystemsDbSystemOutput) Endpoints() GetMysqlDbSystemsDbSystemEndpointArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) []GetMysqlDbSystemsDbSystemEndpoint { return v.Endpoints }).(GetMysqlDbSystemsDbSystemEndpointArrayOutput)
}

// The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
func (o GetMysqlDbSystemsDbSystemOutput) FaultDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.FaultDomain }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetMysqlDbSystemsDbSystemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// A summary of a HeatWave cluster.
func (o GetMysqlDbSystemsDbSystemOutput) HeatWaveClusters() GetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) []GetMysqlDbSystemsDbSystemHeatWaveCluster {
		return v.HeatWaveClusters
	}).(GetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput)
}

// The hostname for the primary endpoint of the DB System. Used for DNS. The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com"). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
func (o GetMysqlDbSystemsDbSystemOutput) HostnameLabel() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.HostnameLabel }).(pulumi.StringOutput)
}

// The OCID of the DB System.
func (o GetMysqlDbSystemsDbSystemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.Id }).(pulumi.StringOutput)
}

// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
func (o GetMysqlDbSystemsDbSystemOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.IpAddress }).(pulumi.StringOutput)
}

// DEPRECATED -- please use HeatWave API instead. If true, return only DB Systems with an Analytics Cluster attached, if false return only DB Systems with no Analytics Cluster attached. If not present, return all DB Systems.
func (o GetMysqlDbSystemsDbSystemOutput) IsAnalyticsClusterAttached() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) bool { return v.IsAnalyticsClusterAttached }).(pulumi.BoolOutput)
}

// If true, return only DB Systems with a HeatWave cluster attached, if false return only DB Systems with no HeatWave cluster attached. If not present, return all DB Systems.
func (o GetMysqlDbSystemsDbSystemOutput) IsHeatWaveClusterAttached() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) bool { return v.IsHeatWaveClusterAttached }).(pulumi.BoolOutput)
}

// Specifies if the DB System is highly available.
func (o GetMysqlDbSystemsDbSystemOutput) IsHighlyAvailable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) bool { return v.IsHighlyAvailable }).(pulumi.BoolOutput)
}

// Additional information about the current lifecycleState.
func (o GetMysqlDbSystemsDbSystemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The Maintenance Policy for the DB System.
func (o GetMysqlDbSystemsDbSystemOutput) Maintenances() GetMysqlDbSystemsDbSystemMaintenanceArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) []GetMysqlDbSystemsDbSystemMaintenance { return v.Maintenances }).(GetMysqlDbSystemsDbSystemMaintenanceArrayOutput)
}

// Name of the MySQL Version in use for the DB System.
func (o GetMysqlDbSystemsDbSystemOutput) MysqlVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.MysqlVersion }).(pulumi.StringOutput)
}

// Point-in-time Recovery details like earliest and latest recovery time point for the DB System.
func (o GetMysqlDbSystemsDbSystemOutput) PointInTimeRecoveryDetails() GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) []GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetail {
		return v.PointInTimeRecoveryDetails
	}).(GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput)
}

// The port for primary endpoint of the DB System to listen on.
func (o GetMysqlDbSystemsDbSystemOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) int { return v.Port }).(pulumi.IntOutput)
}

// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
func (o GetMysqlDbSystemsDbSystemOutput) PortX() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) int { return v.PortX }).(pulumi.IntOutput)
}

// The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
func (o GetMysqlDbSystemsDbSystemOutput) ShapeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.ShapeName }).(pulumi.StringOutput)
}

func (o GetMysqlDbSystemsDbSystemOutput) ShutdownType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.ShutdownType }).(pulumi.StringOutput)
}

// Parameters detailing how to provision the initial data of the DB System.
func (o GetMysqlDbSystemsDbSystemOutput) Sources() GetMysqlDbSystemsDbSystemSourceArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) []GetMysqlDbSystemsDbSystemSource { return v.Sources }).(GetMysqlDbSystemsDbSystemSourceArrayOutput)
}

// DbSystem Lifecycle State
func (o GetMysqlDbSystemsDbSystemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.State }).(pulumi.StringOutput)
}

// The OCID of the subnet the DB System is associated with.
func (o GetMysqlDbSystemsDbSystemOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.SubnetId }).(pulumi.StringOutput)
}

// The date and time the DB System was created.
func (o GetMysqlDbSystemsDbSystemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the DB System was last updated.
func (o GetMysqlDbSystemsDbSystemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetMysqlDbSystemsDbSystemArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystem)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemArrayOutput) ToGetMysqlDbSystemsDbSystemArrayOutput() GetMysqlDbSystemsDbSystemArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemArrayOutput) ToGetMysqlDbSystemsDbSystemArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystem {
		return vs[0].([]GetMysqlDbSystemsDbSystem)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemOutput)
}

type GetMysqlDbSystemsDbSystemAnalyticsCluster struct {
	// The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
	ClusterSize int `pulumi:"clusterSize"`
	// The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
	ShapeName string `pulumi:"shapeName"`
	// DbSystem Lifecycle State
	State string `pulumi:"state"`
	// The date and time the DB System was created.
	TimeCreated string `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetMysqlDbSystemsDbSystemAnalyticsClusterInput is an input type that accepts GetMysqlDbSystemsDbSystemAnalyticsClusterArgs and GetMysqlDbSystemsDbSystemAnalyticsClusterOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemAnalyticsClusterInput` via:
//
//          GetMysqlDbSystemsDbSystemAnalyticsClusterArgs{...}
type GetMysqlDbSystemsDbSystemAnalyticsClusterInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemAnalyticsClusterOutput() GetMysqlDbSystemsDbSystemAnalyticsClusterOutput
	ToGetMysqlDbSystemsDbSystemAnalyticsClusterOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemAnalyticsClusterOutput
}

type GetMysqlDbSystemsDbSystemAnalyticsClusterArgs struct {
	// The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
	ClusterSize pulumi.IntInput `pulumi:"clusterSize"`
	// The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
	ShapeName pulumi.StringInput `pulumi:"shapeName"`
	// DbSystem Lifecycle State
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the DB System was created.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetMysqlDbSystemsDbSystemAnalyticsClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemAnalyticsCluster)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemAnalyticsClusterArgs) ToGetMysqlDbSystemsDbSystemAnalyticsClusterOutput() GetMysqlDbSystemsDbSystemAnalyticsClusterOutput {
	return i.ToGetMysqlDbSystemsDbSystemAnalyticsClusterOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemAnalyticsClusterArgs) ToGetMysqlDbSystemsDbSystemAnalyticsClusterOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemAnalyticsClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemAnalyticsClusterOutput)
}

// GetMysqlDbSystemsDbSystemAnalyticsClusterArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemAnalyticsClusterArray and GetMysqlDbSystemsDbSystemAnalyticsClusterArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemAnalyticsClusterArrayInput` via:
//
//          GetMysqlDbSystemsDbSystemAnalyticsClusterArray{ GetMysqlDbSystemsDbSystemAnalyticsClusterArgs{...} }
type GetMysqlDbSystemsDbSystemAnalyticsClusterArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemAnalyticsClusterArrayOutput() GetMysqlDbSystemsDbSystemAnalyticsClusterArrayOutput
	ToGetMysqlDbSystemsDbSystemAnalyticsClusterArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemAnalyticsClusterArrayOutput
}

type GetMysqlDbSystemsDbSystemAnalyticsClusterArray []GetMysqlDbSystemsDbSystemAnalyticsClusterInput

func (GetMysqlDbSystemsDbSystemAnalyticsClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemAnalyticsCluster)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemAnalyticsClusterArray) ToGetMysqlDbSystemsDbSystemAnalyticsClusterArrayOutput() GetMysqlDbSystemsDbSystemAnalyticsClusterArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemAnalyticsClusterArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemAnalyticsClusterArray) ToGetMysqlDbSystemsDbSystemAnalyticsClusterArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemAnalyticsClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemAnalyticsClusterArrayOutput)
}

type GetMysqlDbSystemsDbSystemAnalyticsClusterOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemAnalyticsClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemAnalyticsCluster)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemAnalyticsClusterOutput) ToGetMysqlDbSystemsDbSystemAnalyticsClusterOutput() GetMysqlDbSystemsDbSystemAnalyticsClusterOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemAnalyticsClusterOutput) ToGetMysqlDbSystemsDbSystemAnalyticsClusterOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemAnalyticsClusterOutput {
	return o
}

// The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
func (o GetMysqlDbSystemsDbSystemAnalyticsClusterOutput) ClusterSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemAnalyticsCluster) int { return v.ClusterSize }).(pulumi.IntOutput)
}

// The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
func (o GetMysqlDbSystemsDbSystemAnalyticsClusterOutput) ShapeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemAnalyticsCluster) string { return v.ShapeName }).(pulumi.StringOutput)
}

// DbSystem Lifecycle State
func (o GetMysqlDbSystemsDbSystemAnalyticsClusterOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemAnalyticsCluster) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the DB System was created.
func (o GetMysqlDbSystemsDbSystemAnalyticsClusterOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemAnalyticsCluster) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the DB System was last updated.
func (o GetMysqlDbSystemsDbSystemAnalyticsClusterOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemAnalyticsCluster) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetMysqlDbSystemsDbSystemAnalyticsClusterArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemAnalyticsClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemAnalyticsCluster)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemAnalyticsClusterArrayOutput) ToGetMysqlDbSystemsDbSystemAnalyticsClusterArrayOutput() GetMysqlDbSystemsDbSystemAnalyticsClusterArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemAnalyticsClusterArrayOutput) ToGetMysqlDbSystemsDbSystemAnalyticsClusterArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemAnalyticsClusterArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemAnalyticsClusterArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemAnalyticsClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystemAnalyticsCluster {
		return vs[0].([]GetMysqlDbSystemsDbSystemAnalyticsCluster)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemAnalyticsClusterOutput)
}

type GetMysqlDbSystemsDbSystemBackupPolicy struct {
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Whether the Channel has been enabled by the user.
	IsEnabled bool `pulumi:"isEnabled"`
	// The PITR policy for the DB System.
	PitrPolicies []GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicy `pulumi:"pitrPolicies"`
	// The number of days automated backups are retained.
	RetentionInDays int `pulumi:"retentionInDays"`
	// The start time of the maintenance window.
	WindowStartTime string `pulumi:"windowStartTime"`
}

// GetMysqlDbSystemsDbSystemBackupPolicyInput is an input type that accepts GetMysqlDbSystemsDbSystemBackupPolicyArgs and GetMysqlDbSystemsDbSystemBackupPolicyOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemBackupPolicyInput` via:
//
//          GetMysqlDbSystemsDbSystemBackupPolicyArgs{...}
type GetMysqlDbSystemsDbSystemBackupPolicyInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemBackupPolicyOutput() GetMysqlDbSystemsDbSystemBackupPolicyOutput
	ToGetMysqlDbSystemsDbSystemBackupPolicyOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemBackupPolicyOutput
}

type GetMysqlDbSystemsDbSystemBackupPolicyArgs struct {
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// Whether the Channel has been enabled by the user.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The PITR policy for the DB System.
	PitrPolicies GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayInput `pulumi:"pitrPolicies"`
	// The number of days automated backups are retained.
	RetentionInDays pulumi.IntInput `pulumi:"retentionInDays"`
	// The start time of the maintenance window.
	WindowStartTime pulumi.StringInput `pulumi:"windowStartTime"`
}

func (GetMysqlDbSystemsDbSystemBackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemBackupPolicy)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemBackupPolicyArgs) ToGetMysqlDbSystemsDbSystemBackupPolicyOutput() GetMysqlDbSystemsDbSystemBackupPolicyOutput {
	return i.ToGetMysqlDbSystemsDbSystemBackupPolicyOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemBackupPolicyArgs) ToGetMysqlDbSystemsDbSystemBackupPolicyOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemBackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemBackupPolicyOutput)
}

// GetMysqlDbSystemsDbSystemBackupPolicyArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemBackupPolicyArray and GetMysqlDbSystemsDbSystemBackupPolicyArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemBackupPolicyArrayInput` via:
//
//          GetMysqlDbSystemsDbSystemBackupPolicyArray{ GetMysqlDbSystemsDbSystemBackupPolicyArgs{...} }
type GetMysqlDbSystemsDbSystemBackupPolicyArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemBackupPolicyArrayOutput() GetMysqlDbSystemsDbSystemBackupPolicyArrayOutput
	ToGetMysqlDbSystemsDbSystemBackupPolicyArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemBackupPolicyArrayOutput
}

type GetMysqlDbSystemsDbSystemBackupPolicyArray []GetMysqlDbSystemsDbSystemBackupPolicyInput

func (GetMysqlDbSystemsDbSystemBackupPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemBackupPolicy)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemBackupPolicyArray) ToGetMysqlDbSystemsDbSystemBackupPolicyArrayOutput() GetMysqlDbSystemsDbSystemBackupPolicyArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemBackupPolicyArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemBackupPolicyArray) ToGetMysqlDbSystemsDbSystemBackupPolicyArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemBackupPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemBackupPolicyArrayOutput)
}

type GetMysqlDbSystemsDbSystemBackupPolicyOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemBackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemBackupPolicy)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemBackupPolicyOutput) ToGetMysqlDbSystemsDbSystemBackupPolicyOutput() GetMysqlDbSystemsDbSystemBackupPolicyOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemBackupPolicyOutput) ToGetMysqlDbSystemsDbSystemBackupPolicyOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemBackupPolicyOutput {
	return o
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetMysqlDbSystemsDbSystemBackupPolicyOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemBackupPolicy) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetMysqlDbSystemsDbSystemBackupPolicyOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemBackupPolicy) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// Whether the Channel has been enabled by the user.
func (o GetMysqlDbSystemsDbSystemBackupPolicyOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemBackupPolicy) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The PITR policy for the DB System.
func (o GetMysqlDbSystemsDbSystemBackupPolicyOutput) PitrPolicies() GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemBackupPolicy) []GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicy {
		return v.PitrPolicies
	}).(GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput)
}

// The number of days automated backups are retained.
func (o GetMysqlDbSystemsDbSystemBackupPolicyOutput) RetentionInDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemBackupPolicy) int { return v.RetentionInDays }).(pulumi.IntOutput)
}

// The start time of the maintenance window.
func (o GetMysqlDbSystemsDbSystemBackupPolicyOutput) WindowStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemBackupPolicy) string { return v.WindowStartTime }).(pulumi.StringOutput)
}

type GetMysqlDbSystemsDbSystemBackupPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemBackupPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemBackupPolicy)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemBackupPolicyArrayOutput) ToGetMysqlDbSystemsDbSystemBackupPolicyArrayOutput() GetMysqlDbSystemsDbSystemBackupPolicyArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemBackupPolicyArrayOutput) ToGetMysqlDbSystemsDbSystemBackupPolicyArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemBackupPolicyArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemBackupPolicyArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemBackupPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystemBackupPolicy {
		return vs[0].([]GetMysqlDbSystemsDbSystemBackupPolicy)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemBackupPolicyOutput)
}

type GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicy struct {
	// Whether the Channel has been enabled by the user.
	IsEnabled bool `pulumi:"isEnabled"`
}

// GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyInput is an input type that accepts GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArgs and GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyInput` via:
//
//          GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArgs{...}
type GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput() GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput
	ToGetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput
}

type GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArgs struct {
	// Whether the Channel has been enabled by the user.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
}

func (GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicy)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArgs) ToGetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput() GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput {
	return i.ToGetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArgs) ToGetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput)
}

// GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArray and GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayInput` via:
//
//          GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArray{ GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArgs{...} }
type GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput() GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput
	ToGetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput
}

type GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArray []GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyInput

func (GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicy)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArray) ToGetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput() GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArray) ToGetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput)
}

type GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicy)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput) ToGetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput() GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput) ToGetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput {
	return o
}

// Whether the Channel has been enabled by the user.
func (o GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicy) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

type GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicy)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput) ToGetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput() GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput) ToGetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicy {
		return vs[0].([]GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicy)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput)
}

type GetMysqlDbSystemsDbSystemChannel struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A filter to return only the resource matching the given display name exactly.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the DB System.
	Id string `pulumi:"id"`
	// Whether the Channel has been enabled by the user.
	IsEnabled bool `pulumi:"isEnabled"`
	// Additional information about the current lifecycleState.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Parameters detailing how to provision the initial data of the DB System.
	Sources []GetMysqlDbSystemsDbSystemChannelSource `pulumi:"sources"`
	// DbSystem Lifecycle State
	State string `pulumi:"state"`
	// Details about the Channel target.
	Targets []GetMysqlDbSystemsDbSystemChannelTarget `pulumi:"targets"`
	// The date and time the DB System was created.
	TimeCreated string `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetMysqlDbSystemsDbSystemChannelInput is an input type that accepts GetMysqlDbSystemsDbSystemChannelArgs and GetMysqlDbSystemsDbSystemChannelOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemChannelInput` via:
//
//          GetMysqlDbSystemsDbSystemChannelArgs{...}
type GetMysqlDbSystemsDbSystemChannelInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemChannelOutput() GetMysqlDbSystemsDbSystemChannelOutput
	ToGetMysqlDbSystemsDbSystemChannelOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemChannelOutput
}

type GetMysqlDbSystemsDbSystemChannelArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// A filter to return only the resource matching the given display name exactly.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The OCID of the DB System.
	Id pulumi.StringInput `pulumi:"id"`
	// Whether the Channel has been enabled by the user.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Additional information about the current lifecycleState.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// Parameters detailing how to provision the initial data of the DB System.
	Sources GetMysqlDbSystemsDbSystemChannelSourceArrayInput `pulumi:"sources"`
	// DbSystem Lifecycle State
	State pulumi.StringInput `pulumi:"state"`
	// Details about the Channel target.
	Targets GetMysqlDbSystemsDbSystemChannelTargetArrayInput `pulumi:"targets"`
	// The date and time the DB System was created.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetMysqlDbSystemsDbSystemChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannel)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemChannelArgs) ToGetMysqlDbSystemsDbSystemChannelOutput() GetMysqlDbSystemsDbSystemChannelOutput {
	return i.ToGetMysqlDbSystemsDbSystemChannelOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemChannelArgs) ToGetMysqlDbSystemsDbSystemChannelOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemChannelOutput)
}

// GetMysqlDbSystemsDbSystemChannelArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemChannelArray and GetMysqlDbSystemsDbSystemChannelArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemChannelArrayInput` via:
//
//          GetMysqlDbSystemsDbSystemChannelArray{ GetMysqlDbSystemsDbSystemChannelArgs{...} }
type GetMysqlDbSystemsDbSystemChannelArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemChannelArrayOutput() GetMysqlDbSystemsDbSystemChannelArrayOutput
	ToGetMysqlDbSystemsDbSystemChannelArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemChannelArrayOutput
}

type GetMysqlDbSystemsDbSystemChannelArray []GetMysqlDbSystemsDbSystemChannelInput

func (GetMysqlDbSystemsDbSystemChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemChannel)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemChannelArray) ToGetMysqlDbSystemsDbSystemChannelArrayOutput() GetMysqlDbSystemsDbSystemChannelArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemChannelArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemChannelArray) ToGetMysqlDbSystemsDbSystemChannelArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemChannelArrayOutput)
}

type GetMysqlDbSystemsDbSystemChannelOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannel)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemChannelOutput) ToGetMysqlDbSystemsDbSystemChannelOutput() GetMysqlDbSystemsDbSystemChannelOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemChannelOutput) ToGetMysqlDbSystemsDbSystemChannelOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelOutput {
	return o
}

// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetMysqlDbSystemsDbSystemChannelOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannel) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetMysqlDbSystemsDbSystemChannelOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannel) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// A filter to return only the resource matching the given display name exactly.
func (o GetMysqlDbSystemsDbSystemChannelOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannel) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetMysqlDbSystemsDbSystemChannelOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannel) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The OCID of the DB System.
func (o GetMysqlDbSystemsDbSystemChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannel) string { return v.Id }).(pulumi.StringOutput)
}

// Whether the Channel has been enabled by the user.
func (o GetMysqlDbSystemsDbSystemChannelOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannel) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Additional information about the current lifecycleState.
func (o GetMysqlDbSystemsDbSystemChannelOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannel) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Parameters detailing how to provision the initial data of the DB System.
func (o GetMysqlDbSystemsDbSystemChannelOutput) Sources() GetMysqlDbSystemsDbSystemChannelSourceArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannel) []GetMysqlDbSystemsDbSystemChannelSource { return v.Sources }).(GetMysqlDbSystemsDbSystemChannelSourceArrayOutput)
}

// DbSystem Lifecycle State
func (o GetMysqlDbSystemsDbSystemChannelOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannel) string { return v.State }).(pulumi.StringOutput)
}

// Details about the Channel target.
func (o GetMysqlDbSystemsDbSystemChannelOutput) Targets() GetMysqlDbSystemsDbSystemChannelTargetArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannel) []GetMysqlDbSystemsDbSystemChannelTarget { return v.Targets }).(GetMysqlDbSystemsDbSystemChannelTargetArrayOutput)
}

// The date and time the DB System was created.
func (o GetMysqlDbSystemsDbSystemChannelOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannel) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the DB System was last updated.
func (o GetMysqlDbSystemsDbSystemChannelOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannel) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetMysqlDbSystemsDbSystemChannelArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemChannel)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemChannelArrayOutput) ToGetMysqlDbSystemsDbSystemChannelArrayOutput() GetMysqlDbSystemsDbSystemChannelArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemChannelArrayOutput) ToGetMysqlDbSystemsDbSystemChannelArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemChannelArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystemChannel {
		return vs[0].([]GetMysqlDbSystemsDbSystemChannel)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemChannelOutput)
}

type GetMysqlDbSystemsDbSystemChannelSource struct {
	// The network address of the DB System.
	Hostname string `pulumi:"hostname"`
	// The port for primary endpoint of the DB System to listen on.
	Port int `pulumi:"port"`
	// The specific source identifier.
	SourceType string `pulumi:"sourceType"`
	// The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
	SslCaCertificates []GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificate `pulumi:"sslCaCertificates"`
	// The SSL mode of the Channel.
	SslMode string `pulumi:"sslMode"`
	// The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
	Username string `pulumi:"username"`
}

// GetMysqlDbSystemsDbSystemChannelSourceInput is an input type that accepts GetMysqlDbSystemsDbSystemChannelSourceArgs and GetMysqlDbSystemsDbSystemChannelSourceOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemChannelSourceInput` via:
//
//          GetMysqlDbSystemsDbSystemChannelSourceArgs{...}
type GetMysqlDbSystemsDbSystemChannelSourceInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemChannelSourceOutput() GetMysqlDbSystemsDbSystemChannelSourceOutput
	ToGetMysqlDbSystemsDbSystemChannelSourceOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemChannelSourceOutput
}

type GetMysqlDbSystemsDbSystemChannelSourceArgs struct {
	// The network address of the DB System.
	Hostname pulumi.StringInput `pulumi:"hostname"`
	// The port for primary endpoint of the DB System to listen on.
	Port pulumi.IntInput `pulumi:"port"`
	// The specific source identifier.
	SourceType pulumi.StringInput `pulumi:"sourceType"`
	// The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
	SslCaCertificates GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayInput `pulumi:"sslCaCertificates"`
	// The SSL mode of the Channel.
	SslMode pulumi.StringInput `pulumi:"sslMode"`
	// The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetMysqlDbSystemsDbSystemChannelSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannelSource)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemChannelSourceArgs) ToGetMysqlDbSystemsDbSystemChannelSourceOutput() GetMysqlDbSystemsDbSystemChannelSourceOutput {
	return i.ToGetMysqlDbSystemsDbSystemChannelSourceOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemChannelSourceArgs) ToGetMysqlDbSystemsDbSystemChannelSourceOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemChannelSourceOutput)
}

// GetMysqlDbSystemsDbSystemChannelSourceArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemChannelSourceArray and GetMysqlDbSystemsDbSystemChannelSourceArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemChannelSourceArrayInput` via:
//
//          GetMysqlDbSystemsDbSystemChannelSourceArray{ GetMysqlDbSystemsDbSystemChannelSourceArgs{...} }
type GetMysqlDbSystemsDbSystemChannelSourceArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemChannelSourceArrayOutput() GetMysqlDbSystemsDbSystemChannelSourceArrayOutput
	ToGetMysqlDbSystemsDbSystemChannelSourceArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemChannelSourceArrayOutput
}

type GetMysqlDbSystemsDbSystemChannelSourceArray []GetMysqlDbSystemsDbSystemChannelSourceInput

func (GetMysqlDbSystemsDbSystemChannelSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemChannelSource)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemChannelSourceArray) ToGetMysqlDbSystemsDbSystemChannelSourceArrayOutput() GetMysqlDbSystemsDbSystemChannelSourceArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemChannelSourceArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemChannelSourceArray) ToGetMysqlDbSystemsDbSystemChannelSourceArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemChannelSourceArrayOutput)
}

type GetMysqlDbSystemsDbSystemChannelSourceOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemChannelSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannelSource)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemChannelSourceOutput) ToGetMysqlDbSystemsDbSystemChannelSourceOutput() GetMysqlDbSystemsDbSystemChannelSourceOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemChannelSourceOutput) ToGetMysqlDbSystemsDbSystemChannelSourceOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelSourceOutput {
	return o
}

// The network address of the DB System.
func (o GetMysqlDbSystemsDbSystemChannelSourceOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannelSource) string { return v.Hostname }).(pulumi.StringOutput)
}

// The port for primary endpoint of the DB System to listen on.
func (o GetMysqlDbSystemsDbSystemChannelSourceOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannelSource) int { return v.Port }).(pulumi.IntOutput)
}

// The specific source identifier.
func (o GetMysqlDbSystemsDbSystemChannelSourceOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannelSource) string { return v.SourceType }).(pulumi.StringOutput)
}

// The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
func (o GetMysqlDbSystemsDbSystemChannelSourceOutput) SslCaCertificates() GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannelSource) []GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificate {
		return v.SslCaCertificates
	}).(GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput)
}

// The SSL mode of the Channel.
func (o GetMysqlDbSystemsDbSystemChannelSourceOutput) SslMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannelSource) string { return v.SslMode }).(pulumi.StringOutput)
}

// The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
func (o GetMysqlDbSystemsDbSystemChannelSourceOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannelSource) string { return v.Username }).(pulumi.StringOutput)
}

type GetMysqlDbSystemsDbSystemChannelSourceArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemChannelSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemChannelSource)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemChannelSourceArrayOutput) ToGetMysqlDbSystemsDbSystemChannelSourceArrayOutput() GetMysqlDbSystemsDbSystemChannelSourceArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemChannelSourceArrayOutput) ToGetMysqlDbSystemsDbSystemChannelSourceArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelSourceArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemChannelSourceArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemChannelSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystemChannelSource {
		return vs[0].([]GetMysqlDbSystemsDbSystemChannelSource)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemChannelSourceOutput)
}

type GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificate struct {
	// The type of CA certificate.
	CertificateType string `pulumi:"certificateType"`
	// The string containing the CA certificate in PEM format.
	Contents string `pulumi:"contents"`
}

// GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateInput is an input type that accepts GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArgs and GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateInput` via:
//
//          GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArgs{...}
type GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput() GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput
	ToGetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput
}

type GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArgs struct {
	// The type of CA certificate.
	CertificateType pulumi.StringInput `pulumi:"certificateType"`
	// The string containing the CA certificate in PEM format.
	Contents pulumi.StringInput `pulumi:"contents"`
}

func (GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificate)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArgs) ToGetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput() GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput {
	return i.ToGetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArgs) ToGetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput)
}

// GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArray and GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayInput` via:
//
//          GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArray{ GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArgs{...} }
type GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput() GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput
	ToGetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput
}

type GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArray []GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateInput

func (GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificate)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArray) ToGetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput() GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArray) ToGetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput)
}

type GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificate)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput) ToGetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput() GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput) ToGetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput {
	return o
}

// The type of CA certificate.
func (o GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput) CertificateType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificate) string { return v.CertificateType }).(pulumi.StringOutput)
}

// The string containing the CA certificate in PEM format.
func (o GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput) Contents() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificate) string { return v.Contents }).(pulumi.StringOutput)
}

type GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificate)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput) ToGetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput() GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput) ToGetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificate {
		return vs[0].([]GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificate)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput)
}

type GetMysqlDbSystemsDbSystemChannelTarget struct {
	// The username for the replication applier of the target MySQL DB System.
	ApplierUsername string `pulumi:"applierUsername"`
	// The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
	ChannelName string `pulumi:"channelName"`
	// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId string `pulumi:"dbSystemId"`
	// The specific target identifier.
	TargetType string `pulumi:"targetType"`
}

// GetMysqlDbSystemsDbSystemChannelTargetInput is an input type that accepts GetMysqlDbSystemsDbSystemChannelTargetArgs and GetMysqlDbSystemsDbSystemChannelTargetOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemChannelTargetInput` via:
//
//          GetMysqlDbSystemsDbSystemChannelTargetArgs{...}
type GetMysqlDbSystemsDbSystemChannelTargetInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemChannelTargetOutput() GetMysqlDbSystemsDbSystemChannelTargetOutput
	ToGetMysqlDbSystemsDbSystemChannelTargetOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemChannelTargetOutput
}

type GetMysqlDbSystemsDbSystemChannelTargetArgs struct {
	// The username for the replication applier of the target MySQL DB System.
	ApplierUsername pulumi.StringInput `pulumi:"applierUsername"`
	// The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId pulumi.StringInput `pulumi:"dbSystemId"`
	// The specific target identifier.
	TargetType pulumi.StringInput `pulumi:"targetType"`
}

func (GetMysqlDbSystemsDbSystemChannelTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannelTarget)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemChannelTargetArgs) ToGetMysqlDbSystemsDbSystemChannelTargetOutput() GetMysqlDbSystemsDbSystemChannelTargetOutput {
	return i.ToGetMysqlDbSystemsDbSystemChannelTargetOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemChannelTargetArgs) ToGetMysqlDbSystemsDbSystemChannelTargetOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemChannelTargetOutput)
}

// GetMysqlDbSystemsDbSystemChannelTargetArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemChannelTargetArray and GetMysqlDbSystemsDbSystemChannelTargetArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemChannelTargetArrayInput` via:
//
//          GetMysqlDbSystemsDbSystemChannelTargetArray{ GetMysqlDbSystemsDbSystemChannelTargetArgs{...} }
type GetMysqlDbSystemsDbSystemChannelTargetArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemChannelTargetArrayOutput() GetMysqlDbSystemsDbSystemChannelTargetArrayOutput
	ToGetMysqlDbSystemsDbSystemChannelTargetArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemChannelTargetArrayOutput
}

type GetMysqlDbSystemsDbSystemChannelTargetArray []GetMysqlDbSystemsDbSystemChannelTargetInput

func (GetMysqlDbSystemsDbSystemChannelTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemChannelTarget)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemChannelTargetArray) ToGetMysqlDbSystemsDbSystemChannelTargetArrayOutput() GetMysqlDbSystemsDbSystemChannelTargetArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemChannelTargetArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemChannelTargetArray) ToGetMysqlDbSystemsDbSystemChannelTargetArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemChannelTargetArrayOutput)
}

type GetMysqlDbSystemsDbSystemChannelTargetOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemChannelTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannelTarget)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemChannelTargetOutput) ToGetMysqlDbSystemsDbSystemChannelTargetOutput() GetMysqlDbSystemsDbSystemChannelTargetOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemChannelTargetOutput) ToGetMysqlDbSystemsDbSystemChannelTargetOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelTargetOutput {
	return o
}

// The username for the replication applier of the target MySQL DB System.
func (o GetMysqlDbSystemsDbSystemChannelTargetOutput) ApplierUsername() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannelTarget) string { return v.ApplierUsername }).(pulumi.StringOutput)
}

// The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
func (o GetMysqlDbSystemsDbSystemChannelTargetOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannelTarget) string { return v.ChannelName }).(pulumi.StringOutput)
}

// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetMysqlDbSystemsDbSystemChannelTargetOutput) DbSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannelTarget) string { return v.DbSystemId }).(pulumi.StringOutput)
}

// The specific target identifier.
func (o GetMysqlDbSystemsDbSystemChannelTargetOutput) TargetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannelTarget) string { return v.TargetType }).(pulumi.StringOutput)
}

type GetMysqlDbSystemsDbSystemChannelTargetArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemChannelTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemChannelTarget)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemChannelTargetArrayOutput) ToGetMysqlDbSystemsDbSystemChannelTargetArrayOutput() GetMysqlDbSystemsDbSystemChannelTargetArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemChannelTargetArrayOutput) ToGetMysqlDbSystemsDbSystemChannelTargetArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelTargetArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemChannelTargetArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemChannelTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystemChannelTarget {
		return vs[0].([]GetMysqlDbSystemsDbSystemChannelTarget)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemChannelTargetOutput)
}

type GetMysqlDbSystemsDbSystemCurrentPlacement struct {
	// The availability domain in which the DB System is placed.
	AvailabilityDomain string `pulumi:"availabilityDomain"`
	// The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	FaultDomain string `pulumi:"faultDomain"`
}

// GetMysqlDbSystemsDbSystemCurrentPlacementInput is an input type that accepts GetMysqlDbSystemsDbSystemCurrentPlacementArgs and GetMysqlDbSystemsDbSystemCurrentPlacementOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemCurrentPlacementInput` via:
//
//          GetMysqlDbSystemsDbSystemCurrentPlacementArgs{...}
type GetMysqlDbSystemsDbSystemCurrentPlacementInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemCurrentPlacementOutput() GetMysqlDbSystemsDbSystemCurrentPlacementOutput
	ToGetMysqlDbSystemsDbSystemCurrentPlacementOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemCurrentPlacementOutput
}

type GetMysqlDbSystemsDbSystemCurrentPlacementArgs struct {
	// The availability domain in which the DB System is placed.
	AvailabilityDomain pulumi.StringInput `pulumi:"availabilityDomain"`
	// The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	FaultDomain pulumi.StringInput `pulumi:"faultDomain"`
}

func (GetMysqlDbSystemsDbSystemCurrentPlacementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemCurrentPlacement)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemCurrentPlacementArgs) ToGetMysqlDbSystemsDbSystemCurrentPlacementOutput() GetMysqlDbSystemsDbSystemCurrentPlacementOutput {
	return i.ToGetMysqlDbSystemsDbSystemCurrentPlacementOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemCurrentPlacementArgs) ToGetMysqlDbSystemsDbSystemCurrentPlacementOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemCurrentPlacementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemCurrentPlacementOutput)
}

// GetMysqlDbSystemsDbSystemCurrentPlacementArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemCurrentPlacementArray and GetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemCurrentPlacementArrayInput` via:
//
//          GetMysqlDbSystemsDbSystemCurrentPlacementArray{ GetMysqlDbSystemsDbSystemCurrentPlacementArgs{...} }
type GetMysqlDbSystemsDbSystemCurrentPlacementArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput() GetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput
	ToGetMysqlDbSystemsDbSystemCurrentPlacementArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput
}

type GetMysqlDbSystemsDbSystemCurrentPlacementArray []GetMysqlDbSystemsDbSystemCurrentPlacementInput

func (GetMysqlDbSystemsDbSystemCurrentPlacementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemCurrentPlacement)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemCurrentPlacementArray) ToGetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput() GetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemCurrentPlacementArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemCurrentPlacementArray) ToGetMysqlDbSystemsDbSystemCurrentPlacementArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput)
}

type GetMysqlDbSystemsDbSystemCurrentPlacementOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemCurrentPlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemCurrentPlacement)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemCurrentPlacementOutput) ToGetMysqlDbSystemsDbSystemCurrentPlacementOutput() GetMysqlDbSystemsDbSystemCurrentPlacementOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemCurrentPlacementOutput) ToGetMysqlDbSystemsDbSystemCurrentPlacementOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemCurrentPlacementOutput {
	return o
}

// The availability domain in which the DB System is placed.
func (o GetMysqlDbSystemsDbSystemCurrentPlacementOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemCurrentPlacement) string { return v.AvailabilityDomain }).(pulumi.StringOutput)
}

// The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
func (o GetMysqlDbSystemsDbSystemCurrentPlacementOutput) FaultDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemCurrentPlacement) string { return v.FaultDomain }).(pulumi.StringOutput)
}

type GetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemCurrentPlacement)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput) ToGetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput() GetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput) ToGetMysqlDbSystemsDbSystemCurrentPlacementArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemCurrentPlacementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystemCurrentPlacement {
		return vs[0].([]GetMysqlDbSystemsDbSystemCurrentPlacement)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemCurrentPlacementOutput)
}

type GetMysqlDbSystemsDbSystemDeletionPolicy struct {
	// Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
	AutomaticBackupRetention string `pulumi:"automaticBackupRetention"`
	// Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
	FinalBackup string `pulumi:"finalBackup"`
	// Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
	IsDeleteProtected bool `pulumi:"isDeleteProtected"`
}

// GetMysqlDbSystemsDbSystemDeletionPolicyInput is an input type that accepts GetMysqlDbSystemsDbSystemDeletionPolicyArgs and GetMysqlDbSystemsDbSystemDeletionPolicyOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemDeletionPolicyInput` via:
//
//          GetMysqlDbSystemsDbSystemDeletionPolicyArgs{...}
type GetMysqlDbSystemsDbSystemDeletionPolicyInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemDeletionPolicyOutput() GetMysqlDbSystemsDbSystemDeletionPolicyOutput
	ToGetMysqlDbSystemsDbSystemDeletionPolicyOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemDeletionPolicyOutput
}

type GetMysqlDbSystemsDbSystemDeletionPolicyArgs struct {
	// Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
	AutomaticBackupRetention pulumi.StringInput `pulumi:"automaticBackupRetention"`
	// Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
	FinalBackup pulumi.StringInput `pulumi:"finalBackup"`
	// Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
	IsDeleteProtected pulumi.BoolInput `pulumi:"isDeleteProtected"`
}

func (GetMysqlDbSystemsDbSystemDeletionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemDeletionPolicy)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemDeletionPolicyArgs) ToGetMysqlDbSystemsDbSystemDeletionPolicyOutput() GetMysqlDbSystemsDbSystemDeletionPolicyOutput {
	return i.ToGetMysqlDbSystemsDbSystemDeletionPolicyOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemDeletionPolicyArgs) ToGetMysqlDbSystemsDbSystemDeletionPolicyOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemDeletionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemDeletionPolicyOutput)
}

// GetMysqlDbSystemsDbSystemDeletionPolicyArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemDeletionPolicyArray and GetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemDeletionPolicyArrayInput` via:
//
//          GetMysqlDbSystemsDbSystemDeletionPolicyArray{ GetMysqlDbSystemsDbSystemDeletionPolicyArgs{...} }
type GetMysqlDbSystemsDbSystemDeletionPolicyArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput() GetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput
	ToGetMysqlDbSystemsDbSystemDeletionPolicyArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput
}

type GetMysqlDbSystemsDbSystemDeletionPolicyArray []GetMysqlDbSystemsDbSystemDeletionPolicyInput

func (GetMysqlDbSystemsDbSystemDeletionPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemDeletionPolicy)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemDeletionPolicyArray) ToGetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput() GetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemDeletionPolicyArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemDeletionPolicyArray) ToGetMysqlDbSystemsDbSystemDeletionPolicyArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput)
}

type GetMysqlDbSystemsDbSystemDeletionPolicyOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemDeletionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemDeletionPolicy)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemDeletionPolicyOutput) ToGetMysqlDbSystemsDbSystemDeletionPolicyOutput() GetMysqlDbSystemsDbSystemDeletionPolicyOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemDeletionPolicyOutput) ToGetMysqlDbSystemsDbSystemDeletionPolicyOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemDeletionPolicyOutput {
	return o
}

// Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
func (o GetMysqlDbSystemsDbSystemDeletionPolicyOutput) AutomaticBackupRetention() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemDeletionPolicy) string { return v.AutomaticBackupRetention }).(pulumi.StringOutput)
}

// Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
func (o GetMysqlDbSystemsDbSystemDeletionPolicyOutput) FinalBackup() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemDeletionPolicy) string { return v.FinalBackup }).(pulumi.StringOutput)
}

// Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
func (o GetMysqlDbSystemsDbSystemDeletionPolicyOutput) IsDeleteProtected() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemDeletionPolicy) bool { return v.IsDeleteProtected }).(pulumi.BoolOutput)
}

type GetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemDeletionPolicy)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput) ToGetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput() GetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput) ToGetMysqlDbSystemsDbSystemDeletionPolicyArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemDeletionPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystemDeletionPolicy {
		return vs[0].([]GetMysqlDbSystemsDbSystemDeletionPolicy)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemDeletionPolicyOutput)
}

type GetMysqlDbSystemsDbSystemEndpoint struct {
	// The network address of the DB System.
	Hostname string `pulumi:"hostname"`
	// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
	IpAddress string `pulumi:"ipAddress"`
	// The access modes from the client that this endpoint supports.
	Modes []string `pulumi:"modes"`
	// The port for primary endpoint of the DB System to listen on.
	Port int `pulumi:"port"`
	// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
	PortX int `pulumi:"portX"`
	// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
	Status string `pulumi:"status"`
	// Additional information about the current endpoint status.
	StatusDetails string `pulumi:"statusDetails"`
}

// GetMysqlDbSystemsDbSystemEndpointInput is an input type that accepts GetMysqlDbSystemsDbSystemEndpointArgs and GetMysqlDbSystemsDbSystemEndpointOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemEndpointInput` via:
//
//          GetMysqlDbSystemsDbSystemEndpointArgs{...}
type GetMysqlDbSystemsDbSystemEndpointInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemEndpointOutput() GetMysqlDbSystemsDbSystemEndpointOutput
	ToGetMysqlDbSystemsDbSystemEndpointOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemEndpointOutput
}

type GetMysqlDbSystemsDbSystemEndpointArgs struct {
	// The network address of the DB System.
	Hostname pulumi.StringInput `pulumi:"hostname"`
	// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// The access modes from the client that this endpoint supports.
	Modes pulumi.StringArrayInput `pulumi:"modes"`
	// The port for primary endpoint of the DB System to listen on.
	Port pulumi.IntInput `pulumi:"port"`
	// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
	PortX pulumi.IntInput `pulumi:"portX"`
	// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
	Status pulumi.StringInput `pulumi:"status"`
	// Additional information about the current endpoint status.
	StatusDetails pulumi.StringInput `pulumi:"statusDetails"`
}

func (GetMysqlDbSystemsDbSystemEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemEndpoint)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemEndpointArgs) ToGetMysqlDbSystemsDbSystemEndpointOutput() GetMysqlDbSystemsDbSystemEndpointOutput {
	return i.ToGetMysqlDbSystemsDbSystemEndpointOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemEndpointArgs) ToGetMysqlDbSystemsDbSystemEndpointOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemEndpointOutput)
}

// GetMysqlDbSystemsDbSystemEndpointArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemEndpointArray and GetMysqlDbSystemsDbSystemEndpointArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemEndpointArrayInput` via:
//
//          GetMysqlDbSystemsDbSystemEndpointArray{ GetMysqlDbSystemsDbSystemEndpointArgs{...} }
type GetMysqlDbSystemsDbSystemEndpointArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemEndpointArrayOutput() GetMysqlDbSystemsDbSystemEndpointArrayOutput
	ToGetMysqlDbSystemsDbSystemEndpointArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemEndpointArrayOutput
}

type GetMysqlDbSystemsDbSystemEndpointArray []GetMysqlDbSystemsDbSystemEndpointInput

func (GetMysqlDbSystemsDbSystemEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemEndpoint)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemEndpointArray) ToGetMysqlDbSystemsDbSystemEndpointArrayOutput() GetMysqlDbSystemsDbSystemEndpointArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemEndpointArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemEndpointArray) ToGetMysqlDbSystemsDbSystemEndpointArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemEndpointArrayOutput)
}

type GetMysqlDbSystemsDbSystemEndpointOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemEndpoint)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemEndpointOutput) ToGetMysqlDbSystemsDbSystemEndpointOutput() GetMysqlDbSystemsDbSystemEndpointOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemEndpointOutput) ToGetMysqlDbSystemsDbSystemEndpointOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemEndpointOutput {
	return o
}

// The network address of the DB System.
func (o GetMysqlDbSystemsDbSystemEndpointOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemEndpoint) string { return v.Hostname }).(pulumi.StringOutput)
}

// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
func (o GetMysqlDbSystemsDbSystemEndpointOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemEndpoint) string { return v.IpAddress }).(pulumi.StringOutput)
}

// The access modes from the client that this endpoint supports.
func (o GetMysqlDbSystemsDbSystemEndpointOutput) Modes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemEndpoint) []string { return v.Modes }).(pulumi.StringArrayOutput)
}

// The port for primary endpoint of the DB System to listen on.
func (o GetMysqlDbSystemsDbSystemEndpointOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemEndpoint) int { return v.Port }).(pulumi.IntOutput)
}

// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
func (o GetMysqlDbSystemsDbSystemEndpointOutput) PortX() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemEndpoint) int { return v.PortX }).(pulumi.IntOutput)
}

// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
func (o GetMysqlDbSystemsDbSystemEndpointOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemEndpoint) string { return v.Status }).(pulumi.StringOutput)
}

// Additional information about the current endpoint status.
func (o GetMysqlDbSystemsDbSystemEndpointOutput) StatusDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemEndpoint) string { return v.StatusDetails }).(pulumi.StringOutput)
}

type GetMysqlDbSystemsDbSystemEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemEndpoint)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemEndpointArrayOutput) ToGetMysqlDbSystemsDbSystemEndpointArrayOutput() GetMysqlDbSystemsDbSystemEndpointArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemEndpointArrayOutput) ToGetMysqlDbSystemsDbSystemEndpointArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemEndpointArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemEndpointArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystemEndpoint {
		return vs[0].([]GetMysqlDbSystemsDbSystemEndpoint)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemEndpointOutput)
}

type GetMysqlDbSystemsDbSystemHeatWaveCluster struct {
	// The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
	ClusterSize int `pulumi:"clusterSize"`
	// The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
	ShapeName string `pulumi:"shapeName"`
	// DbSystem Lifecycle State
	State string `pulumi:"state"`
	// The date and time the DB System was created.
	TimeCreated string `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetMysqlDbSystemsDbSystemHeatWaveClusterInput is an input type that accepts GetMysqlDbSystemsDbSystemHeatWaveClusterArgs and GetMysqlDbSystemsDbSystemHeatWaveClusterOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemHeatWaveClusterInput` via:
//
//          GetMysqlDbSystemsDbSystemHeatWaveClusterArgs{...}
type GetMysqlDbSystemsDbSystemHeatWaveClusterInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemHeatWaveClusterOutput() GetMysqlDbSystemsDbSystemHeatWaveClusterOutput
	ToGetMysqlDbSystemsDbSystemHeatWaveClusterOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemHeatWaveClusterOutput
}

type GetMysqlDbSystemsDbSystemHeatWaveClusterArgs struct {
	// The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
	ClusterSize pulumi.IntInput `pulumi:"clusterSize"`
	// The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
	ShapeName pulumi.StringInput `pulumi:"shapeName"`
	// DbSystem Lifecycle State
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the DB System was created.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetMysqlDbSystemsDbSystemHeatWaveClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemHeatWaveCluster)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemHeatWaveClusterArgs) ToGetMysqlDbSystemsDbSystemHeatWaveClusterOutput() GetMysqlDbSystemsDbSystemHeatWaveClusterOutput {
	return i.ToGetMysqlDbSystemsDbSystemHeatWaveClusterOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemHeatWaveClusterArgs) ToGetMysqlDbSystemsDbSystemHeatWaveClusterOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemHeatWaveClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemHeatWaveClusterOutput)
}

// GetMysqlDbSystemsDbSystemHeatWaveClusterArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemHeatWaveClusterArray and GetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemHeatWaveClusterArrayInput` via:
//
//          GetMysqlDbSystemsDbSystemHeatWaveClusterArray{ GetMysqlDbSystemsDbSystemHeatWaveClusterArgs{...} }
type GetMysqlDbSystemsDbSystemHeatWaveClusterArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput() GetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput
	ToGetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput
}

type GetMysqlDbSystemsDbSystemHeatWaveClusterArray []GetMysqlDbSystemsDbSystemHeatWaveClusterInput

func (GetMysqlDbSystemsDbSystemHeatWaveClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemHeatWaveCluster)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemHeatWaveClusterArray) ToGetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput() GetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemHeatWaveClusterArray) ToGetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput)
}

type GetMysqlDbSystemsDbSystemHeatWaveClusterOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemHeatWaveClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemHeatWaveCluster)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemHeatWaveClusterOutput) ToGetMysqlDbSystemsDbSystemHeatWaveClusterOutput() GetMysqlDbSystemsDbSystemHeatWaveClusterOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemHeatWaveClusterOutput) ToGetMysqlDbSystemsDbSystemHeatWaveClusterOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemHeatWaveClusterOutput {
	return o
}

// The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
func (o GetMysqlDbSystemsDbSystemHeatWaveClusterOutput) ClusterSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemHeatWaveCluster) int { return v.ClusterSize }).(pulumi.IntOutput)
}

// The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
func (o GetMysqlDbSystemsDbSystemHeatWaveClusterOutput) ShapeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemHeatWaveCluster) string { return v.ShapeName }).(pulumi.StringOutput)
}

// DbSystem Lifecycle State
func (o GetMysqlDbSystemsDbSystemHeatWaveClusterOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemHeatWaveCluster) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the DB System was created.
func (o GetMysqlDbSystemsDbSystemHeatWaveClusterOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemHeatWaveCluster) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the DB System was last updated.
func (o GetMysqlDbSystemsDbSystemHeatWaveClusterOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemHeatWaveCluster) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemHeatWaveCluster)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput) ToGetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput() GetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput) ToGetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemHeatWaveClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystemHeatWaveCluster {
		return vs[0].([]GetMysqlDbSystemsDbSystemHeatWaveCluster)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemHeatWaveClusterOutput)
}

type GetMysqlDbSystemsDbSystemMaintenance struct {
	// The start time of the maintenance window.
	WindowStartTime string `pulumi:"windowStartTime"`
}

// GetMysqlDbSystemsDbSystemMaintenanceInput is an input type that accepts GetMysqlDbSystemsDbSystemMaintenanceArgs and GetMysqlDbSystemsDbSystemMaintenanceOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemMaintenanceInput` via:
//
//          GetMysqlDbSystemsDbSystemMaintenanceArgs{...}
type GetMysqlDbSystemsDbSystemMaintenanceInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemMaintenanceOutput() GetMysqlDbSystemsDbSystemMaintenanceOutput
	ToGetMysqlDbSystemsDbSystemMaintenanceOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemMaintenanceOutput
}

type GetMysqlDbSystemsDbSystemMaintenanceArgs struct {
	// The start time of the maintenance window.
	WindowStartTime pulumi.StringInput `pulumi:"windowStartTime"`
}

func (GetMysqlDbSystemsDbSystemMaintenanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemMaintenance)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemMaintenanceArgs) ToGetMysqlDbSystemsDbSystemMaintenanceOutput() GetMysqlDbSystemsDbSystemMaintenanceOutput {
	return i.ToGetMysqlDbSystemsDbSystemMaintenanceOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemMaintenanceArgs) ToGetMysqlDbSystemsDbSystemMaintenanceOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemMaintenanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemMaintenanceOutput)
}

// GetMysqlDbSystemsDbSystemMaintenanceArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemMaintenanceArray and GetMysqlDbSystemsDbSystemMaintenanceArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemMaintenanceArrayInput` via:
//
//          GetMysqlDbSystemsDbSystemMaintenanceArray{ GetMysqlDbSystemsDbSystemMaintenanceArgs{...} }
type GetMysqlDbSystemsDbSystemMaintenanceArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemMaintenanceArrayOutput() GetMysqlDbSystemsDbSystemMaintenanceArrayOutput
	ToGetMysqlDbSystemsDbSystemMaintenanceArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemMaintenanceArrayOutput
}

type GetMysqlDbSystemsDbSystemMaintenanceArray []GetMysqlDbSystemsDbSystemMaintenanceInput

func (GetMysqlDbSystemsDbSystemMaintenanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemMaintenance)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemMaintenanceArray) ToGetMysqlDbSystemsDbSystemMaintenanceArrayOutput() GetMysqlDbSystemsDbSystemMaintenanceArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemMaintenanceArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemMaintenanceArray) ToGetMysqlDbSystemsDbSystemMaintenanceArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemMaintenanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemMaintenanceArrayOutput)
}

type GetMysqlDbSystemsDbSystemMaintenanceOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemMaintenanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemMaintenance)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemMaintenanceOutput) ToGetMysqlDbSystemsDbSystemMaintenanceOutput() GetMysqlDbSystemsDbSystemMaintenanceOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemMaintenanceOutput) ToGetMysqlDbSystemsDbSystemMaintenanceOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemMaintenanceOutput {
	return o
}

// The start time of the maintenance window.
func (o GetMysqlDbSystemsDbSystemMaintenanceOutput) WindowStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemMaintenance) string { return v.WindowStartTime }).(pulumi.StringOutput)
}

type GetMysqlDbSystemsDbSystemMaintenanceArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemMaintenanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemMaintenance)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemMaintenanceArrayOutput) ToGetMysqlDbSystemsDbSystemMaintenanceArrayOutput() GetMysqlDbSystemsDbSystemMaintenanceArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemMaintenanceArrayOutput) ToGetMysqlDbSystemsDbSystemMaintenanceArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemMaintenanceArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemMaintenanceArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemMaintenanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystemMaintenance {
		return vs[0].([]GetMysqlDbSystemsDbSystemMaintenance)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemMaintenanceOutput)
}

type GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetail struct {
	// Earliest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeEarliestRecoveryPoint string `pulumi:"timeEarliestRecoveryPoint"`
	// Latest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeLatestRecoveryPoint string `pulumi:"timeLatestRecoveryPoint"`
}

// GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailInput is an input type that accepts GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArgs and GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailInput` via:
//
//          GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArgs{...}
type GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput() GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput
	ToGetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput
}

type GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArgs struct {
	// Earliest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeEarliestRecoveryPoint pulumi.StringInput `pulumi:"timeEarliestRecoveryPoint"`
	// Latest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeLatestRecoveryPoint pulumi.StringInput `pulumi:"timeLatestRecoveryPoint"`
}

func (GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetail)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArgs) ToGetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput() GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput {
	return i.ToGetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArgs) ToGetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput)
}

// GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArray and GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayInput` via:
//
//          GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArray{ GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArgs{...} }
type GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput() GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput
	ToGetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput
}

type GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArray []GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailInput

func (GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetail)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArray) ToGetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput() GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArray) ToGetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput)
}

type GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetail)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput) ToGetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput() GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput) ToGetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput {
	return o
}

// Earliest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput) TimeEarliestRecoveryPoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetail) string { return v.TimeEarliestRecoveryPoint }).(pulumi.StringOutput)
}

// Latest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput) TimeLatestRecoveryPoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetail) string { return v.TimeLatestRecoveryPoint }).(pulumi.StringOutput)
}

type GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetail)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput) ToGetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput() GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput) ToGetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetail {
		return vs[0].([]GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetail)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput)
}

type GetMysqlDbSystemsDbSystemSource struct {
	// The OCID of the backup to be used as the source for the new DB System.
	BackupId string `pulumi:"backupId"`
	// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId string `pulumi:"dbSystemId"`
	// The date and time, as per RFC 3339, of the change up to which the new DB System shall be restored to, using a backup and logs from the original DB System. In case no point in time is specified, then this new DB System shall be restored up to the latest change recorded for the original DB System.
	RecoveryPoint string `pulumi:"recoveryPoint"`
	// The specific source identifier.
	SourceType string `pulumi:"sourceType"`
}

// GetMysqlDbSystemsDbSystemSourceInput is an input type that accepts GetMysqlDbSystemsDbSystemSourceArgs and GetMysqlDbSystemsDbSystemSourceOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemSourceInput` via:
//
//          GetMysqlDbSystemsDbSystemSourceArgs{...}
type GetMysqlDbSystemsDbSystemSourceInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemSourceOutput() GetMysqlDbSystemsDbSystemSourceOutput
	ToGetMysqlDbSystemsDbSystemSourceOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemSourceOutput
}

type GetMysqlDbSystemsDbSystemSourceArgs struct {
	// The OCID of the backup to be used as the source for the new DB System.
	BackupId pulumi.StringInput `pulumi:"backupId"`
	// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId pulumi.StringInput `pulumi:"dbSystemId"`
	// The date and time, as per RFC 3339, of the change up to which the new DB System shall be restored to, using a backup and logs from the original DB System. In case no point in time is specified, then this new DB System shall be restored up to the latest change recorded for the original DB System.
	RecoveryPoint pulumi.StringInput `pulumi:"recoveryPoint"`
	// The specific source identifier.
	SourceType pulumi.StringInput `pulumi:"sourceType"`
}

func (GetMysqlDbSystemsDbSystemSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemSource)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemSourceArgs) ToGetMysqlDbSystemsDbSystemSourceOutput() GetMysqlDbSystemsDbSystemSourceOutput {
	return i.ToGetMysqlDbSystemsDbSystemSourceOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemSourceArgs) ToGetMysqlDbSystemsDbSystemSourceOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemSourceOutput)
}

// GetMysqlDbSystemsDbSystemSourceArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemSourceArray and GetMysqlDbSystemsDbSystemSourceArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemSourceArrayInput` via:
//
//          GetMysqlDbSystemsDbSystemSourceArray{ GetMysqlDbSystemsDbSystemSourceArgs{...} }
type GetMysqlDbSystemsDbSystemSourceArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemSourceArrayOutput() GetMysqlDbSystemsDbSystemSourceArrayOutput
	ToGetMysqlDbSystemsDbSystemSourceArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemSourceArrayOutput
}

type GetMysqlDbSystemsDbSystemSourceArray []GetMysqlDbSystemsDbSystemSourceInput

func (GetMysqlDbSystemsDbSystemSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemSource)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemSourceArray) ToGetMysqlDbSystemsDbSystemSourceArrayOutput() GetMysqlDbSystemsDbSystemSourceArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemSourceArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemSourceArray) ToGetMysqlDbSystemsDbSystemSourceArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemSourceArrayOutput)
}

type GetMysqlDbSystemsDbSystemSourceOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemSource)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemSourceOutput) ToGetMysqlDbSystemsDbSystemSourceOutput() GetMysqlDbSystemsDbSystemSourceOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemSourceOutput) ToGetMysqlDbSystemsDbSystemSourceOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemSourceOutput {
	return o
}

// The OCID of the backup to be used as the source for the new DB System.
func (o GetMysqlDbSystemsDbSystemSourceOutput) BackupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemSource) string { return v.BackupId }).(pulumi.StringOutput)
}

// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetMysqlDbSystemsDbSystemSourceOutput) DbSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemSource) string { return v.DbSystemId }).(pulumi.StringOutput)
}

// The date and time, as per RFC 3339, of the change up to which the new DB System shall be restored to, using a backup and logs from the original DB System. In case no point in time is specified, then this new DB System shall be restored up to the latest change recorded for the original DB System.
func (o GetMysqlDbSystemsDbSystemSourceOutput) RecoveryPoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemSource) string { return v.RecoveryPoint }).(pulumi.StringOutput)
}

// The specific source identifier.
func (o GetMysqlDbSystemsDbSystemSourceOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemSource) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetMysqlDbSystemsDbSystemSourceArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemSource)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemSourceArrayOutput) ToGetMysqlDbSystemsDbSystemSourceArrayOutput() GetMysqlDbSystemsDbSystemSourceArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemSourceArrayOutput) ToGetMysqlDbSystemsDbSystemSourceArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemSourceArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemSourceArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystemSource {
		return vs[0].([]GetMysqlDbSystemsDbSystemSource)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemSourceOutput)
}

type GetMysqlDbSystemsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetMysqlDbSystemsFilterInput is an input type that accepts GetMysqlDbSystemsFilterArgs and GetMysqlDbSystemsFilterOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsFilterInput` via:
//
//          GetMysqlDbSystemsFilterArgs{...}
type GetMysqlDbSystemsFilterInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsFilterOutput() GetMysqlDbSystemsFilterOutput
	ToGetMysqlDbSystemsFilterOutputWithContext(context.Context) GetMysqlDbSystemsFilterOutput
}

type GetMysqlDbSystemsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetMysqlDbSystemsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsFilter)(nil)).Elem()
}

func (i GetMysqlDbSystemsFilterArgs) ToGetMysqlDbSystemsFilterOutput() GetMysqlDbSystemsFilterOutput {
	return i.ToGetMysqlDbSystemsFilterOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsFilterArgs) ToGetMysqlDbSystemsFilterOutputWithContext(ctx context.Context) GetMysqlDbSystemsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsFilterOutput)
}

// GetMysqlDbSystemsFilterArrayInput is an input type that accepts GetMysqlDbSystemsFilterArray and GetMysqlDbSystemsFilterArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsFilterArrayInput` via:
//
//          GetMysqlDbSystemsFilterArray{ GetMysqlDbSystemsFilterArgs{...} }
type GetMysqlDbSystemsFilterArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsFilterArrayOutput() GetMysqlDbSystemsFilterArrayOutput
	ToGetMysqlDbSystemsFilterArrayOutputWithContext(context.Context) GetMysqlDbSystemsFilterArrayOutput
}

type GetMysqlDbSystemsFilterArray []GetMysqlDbSystemsFilterInput

func (GetMysqlDbSystemsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsFilter)(nil)).Elem()
}

func (i GetMysqlDbSystemsFilterArray) ToGetMysqlDbSystemsFilterArrayOutput() GetMysqlDbSystemsFilterArrayOutput {
	return i.ToGetMysqlDbSystemsFilterArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsFilterArray) ToGetMysqlDbSystemsFilterArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsFilterArrayOutput)
}

type GetMysqlDbSystemsFilterOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsFilter)(nil)).Elem()
}

func (o GetMysqlDbSystemsFilterOutput) ToGetMysqlDbSystemsFilterOutput() GetMysqlDbSystemsFilterOutput {
	return o
}

func (o GetMysqlDbSystemsFilterOutput) ToGetMysqlDbSystemsFilterOutputWithContext(ctx context.Context) GetMysqlDbSystemsFilterOutput {
	return o
}

func (o GetMysqlDbSystemsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetMysqlDbSystemsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetMysqlDbSystemsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetMysqlDbSystemsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsFilter)(nil)).Elem()
}

func (o GetMysqlDbSystemsFilterArrayOutput) ToGetMysqlDbSystemsFilterArrayOutput() GetMysqlDbSystemsFilterArrayOutput {
	return o
}

func (o GetMysqlDbSystemsFilterArrayOutput) ToGetMysqlDbSystemsFilterArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsFilterArrayOutput {
	return o
}

func (o GetMysqlDbSystemsFilterArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsFilter {
		return vs[0].([]GetMysqlDbSystemsFilter)[vs[1].(int)]
	}).(GetMysqlDbSystemsFilterOutput)
}

type GetMysqlVersionFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetMysqlVersionFilterInput is an input type that accepts GetMysqlVersionFilterArgs and GetMysqlVersionFilterOutput values.
// You can construct a concrete instance of `GetMysqlVersionFilterInput` via:
//
//          GetMysqlVersionFilterArgs{...}
type GetMysqlVersionFilterInput interface {
	pulumi.Input

	ToGetMysqlVersionFilterOutput() GetMysqlVersionFilterOutput
	ToGetMysqlVersionFilterOutputWithContext(context.Context) GetMysqlVersionFilterOutput
}

type GetMysqlVersionFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetMysqlVersionFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlVersionFilter)(nil)).Elem()
}

func (i GetMysqlVersionFilterArgs) ToGetMysqlVersionFilterOutput() GetMysqlVersionFilterOutput {
	return i.ToGetMysqlVersionFilterOutputWithContext(context.Background())
}

func (i GetMysqlVersionFilterArgs) ToGetMysqlVersionFilterOutputWithContext(ctx context.Context) GetMysqlVersionFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlVersionFilterOutput)
}

// GetMysqlVersionFilterArrayInput is an input type that accepts GetMysqlVersionFilterArray and GetMysqlVersionFilterArrayOutput values.
// You can construct a concrete instance of `GetMysqlVersionFilterArrayInput` via:
//
//          GetMysqlVersionFilterArray{ GetMysqlVersionFilterArgs{...} }
type GetMysqlVersionFilterArrayInput interface {
	pulumi.Input

	ToGetMysqlVersionFilterArrayOutput() GetMysqlVersionFilterArrayOutput
	ToGetMysqlVersionFilterArrayOutputWithContext(context.Context) GetMysqlVersionFilterArrayOutput
}

type GetMysqlVersionFilterArray []GetMysqlVersionFilterInput

func (GetMysqlVersionFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlVersionFilter)(nil)).Elem()
}

func (i GetMysqlVersionFilterArray) ToGetMysqlVersionFilterArrayOutput() GetMysqlVersionFilterArrayOutput {
	return i.ToGetMysqlVersionFilterArrayOutputWithContext(context.Background())
}

func (i GetMysqlVersionFilterArray) ToGetMysqlVersionFilterArrayOutputWithContext(ctx context.Context) GetMysqlVersionFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlVersionFilterArrayOutput)
}

type GetMysqlVersionFilterOutput struct{ *pulumi.OutputState }

func (GetMysqlVersionFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlVersionFilter)(nil)).Elem()
}

func (o GetMysqlVersionFilterOutput) ToGetMysqlVersionFilterOutput() GetMysqlVersionFilterOutput {
	return o
}

func (o GetMysqlVersionFilterOutput) ToGetMysqlVersionFilterOutputWithContext(ctx context.Context) GetMysqlVersionFilterOutput {
	return o
}

func (o GetMysqlVersionFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlVersionFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetMysqlVersionFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetMysqlVersionFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetMysqlVersionFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMysqlVersionFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetMysqlVersionFilterArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlVersionFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlVersionFilter)(nil)).Elem()
}

func (o GetMysqlVersionFilterArrayOutput) ToGetMysqlVersionFilterArrayOutput() GetMysqlVersionFilterArrayOutput {
	return o
}

func (o GetMysqlVersionFilterArrayOutput) ToGetMysqlVersionFilterArrayOutputWithContext(ctx context.Context) GetMysqlVersionFilterArrayOutput {
	return o
}

func (o GetMysqlVersionFilterArrayOutput) Index(i pulumi.IntInput) GetMysqlVersionFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlVersionFilter {
		return vs[0].([]GetMysqlVersionFilter)[vs[1].(int)]
	}).(GetMysqlVersionFilterOutput)
}

type GetMysqlVersionVersion struct {
	// A descriptive summary of a group of versions.
	VersionFamily string `pulumi:"versionFamily"`
	// The list of supported MySQL Versions.
	Versions []GetMysqlVersionVersionVersion `pulumi:"versions"`
}

// GetMysqlVersionVersionInput is an input type that accepts GetMysqlVersionVersionArgs and GetMysqlVersionVersionOutput values.
// You can construct a concrete instance of `GetMysqlVersionVersionInput` via:
//
//          GetMysqlVersionVersionArgs{...}
type GetMysqlVersionVersionInput interface {
	pulumi.Input

	ToGetMysqlVersionVersionOutput() GetMysqlVersionVersionOutput
	ToGetMysqlVersionVersionOutputWithContext(context.Context) GetMysqlVersionVersionOutput
}

type GetMysqlVersionVersionArgs struct {
	// A descriptive summary of a group of versions.
	VersionFamily pulumi.StringInput `pulumi:"versionFamily"`
	// The list of supported MySQL Versions.
	Versions GetMysqlVersionVersionVersionArrayInput `pulumi:"versions"`
}

func (GetMysqlVersionVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlVersionVersion)(nil)).Elem()
}

func (i GetMysqlVersionVersionArgs) ToGetMysqlVersionVersionOutput() GetMysqlVersionVersionOutput {
	return i.ToGetMysqlVersionVersionOutputWithContext(context.Background())
}

func (i GetMysqlVersionVersionArgs) ToGetMysqlVersionVersionOutputWithContext(ctx context.Context) GetMysqlVersionVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlVersionVersionOutput)
}

// GetMysqlVersionVersionArrayInput is an input type that accepts GetMysqlVersionVersionArray and GetMysqlVersionVersionArrayOutput values.
// You can construct a concrete instance of `GetMysqlVersionVersionArrayInput` via:
//
//          GetMysqlVersionVersionArray{ GetMysqlVersionVersionArgs{...} }
type GetMysqlVersionVersionArrayInput interface {
	pulumi.Input

	ToGetMysqlVersionVersionArrayOutput() GetMysqlVersionVersionArrayOutput
	ToGetMysqlVersionVersionArrayOutputWithContext(context.Context) GetMysqlVersionVersionArrayOutput
}

type GetMysqlVersionVersionArray []GetMysqlVersionVersionInput

func (GetMysqlVersionVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlVersionVersion)(nil)).Elem()
}

func (i GetMysqlVersionVersionArray) ToGetMysqlVersionVersionArrayOutput() GetMysqlVersionVersionArrayOutput {
	return i.ToGetMysqlVersionVersionArrayOutputWithContext(context.Background())
}

func (i GetMysqlVersionVersionArray) ToGetMysqlVersionVersionArrayOutputWithContext(ctx context.Context) GetMysqlVersionVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlVersionVersionArrayOutput)
}

type GetMysqlVersionVersionOutput struct{ *pulumi.OutputState }

func (GetMysqlVersionVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlVersionVersion)(nil)).Elem()
}

func (o GetMysqlVersionVersionOutput) ToGetMysqlVersionVersionOutput() GetMysqlVersionVersionOutput {
	return o
}

func (o GetMysqlVersionVersionOutput) ToGetMysqlVersionVersionOutputWithContext(ctx context.Context) GetMysqlVersionVersionOutput {
	return o
}

// A descriptive summary of a group of versions.
func (o GetMysqlVersionVersionOutput) VersionFamily() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlVersionVersion) string { return v.VersionFamily }).(pulumi.StringOutput)
}

// The list of supported MySQL Versions.
func (o GetMysqlVersionVersionOutput) Versions() GetMysqlVersionVersionVersionArrayOutput {
	return o.ApplyT(func(v GetMysqlVersionVersion) []GetMysqlVersionVersionVersion { return v.Versions }).(GetMysqlVersionVersionVersionArrayOutput)
}

type GetMysqlVersionVersionArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlVersionVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlVersionVersion)(nil)).Elem()
}

func (o GetMysqlVersionVersionArrayOutput) ToGetMysqlVersionVersionArrayOutput() GetMysqlVersionVersionArrayOutput {
	return o
}

func (o GetMysqlVersionVersionArrayOutput) ToGetMysqlVersionVersionArrayOutputWithContext(ctx context.Context) GetMysqlVersionVersionArrayOutput {
	return o
}

func (o GetMysqlVersionVersionArrayOutput) Index(i pulumi.IntInput) GetMysqlVersionVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlVersionVersion {
		return vs[0].([]GetMysqlVersionVersion)[vs[1].(int)]
	}).(GetMysqlVersionVersionOutput)
}

type GetMysqlVersionVersionVersion struct {
	// A link to a page describing the version.
	Description string `pulumi:"description"`
	// The specific version identifier
	Version string `pulumi:"version"`
}

// GetMysqlVersionVersionVersionInput is an input type that accepts GetMysqlVersionVersionVersionArgs and GetMysqlVersionVersionVersionOutput values.
// You can construct a concrete instance of `GetMysqlVersionVersionVersionInput` via:
//
//          GetMysqlVersionVersionVersionArgs{...}
type GetMysqlVersionVersionVersionInput interface {
	pulumi.Input

	ToGetMysqlVersionVersionVersionOutput() GetMysqlVersionVersionVersionOutput
	ToGetMysqlVersionVersionVersionOutputWithContext(context.Context) GetMysqlVersionVersionVersionOutput
}

type GetMysqlVersionVersionVersionArgs struct {
	// A link to a page describing the version.
	Description pulumi.StringInput `pulumi:"description"`
	// The specific version identifier
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetMysqlVersionVersionVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlVersionVersionVersion)(nil)).Elem()
}

func (i GetMysqlVersionVersionVersionArgs) ToGetMysqlVersionVersionVersionOutput() GetMysqlVersionVersionVersionOutput {
	return i.ToGetMysqlVersionVersionVersionOutputWithContext(context.Background())
}

func (i GetMysqlVersionVersionVersionArgs) ToGetMysqlVersionVersionVersionOutputWithContext(ctx context.Context) GetMysqlVersionVersionVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlVersionVersionVersionOutput)
}

// GetMysqlVersionVersionVersionArrayInput is an input type that accepts GetMysqlVersionVersionVersionArray and GetMysqlVersionVersionVersionArrayOutput values.
// You can construct a concrete instance of `GetMysqlVersionVersionVersionArrayInput` via:
//
//          GetMysqlVersionVersionVersionArray{ GetMysqlVersionVersionVersionArgs{...} }
type GetMysqlVersionVersionVersionArrayInput interface {
	pulumi.Input

	ToGetMysqlVersionVersionVersionArrayOutput() GetMysqlVersionVersionVersionArrayOutput
	ToGetMysqlVersionVersionVersionArrayOutputWithContext(context.Context) GetMysqlVersionVersionVersionArrayOutput
}

type GetMysqlVersionVersionVersionArray []GetMysqlVersionVersionVersionInput

func (GetMysqlVersionVersionVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlVersionVersionVersion)(nil)).Elem()
}

func (i GetMysqlVersionVersionVersionArray) ToGetMysqlVersionVersionVersionArrayOutput() GetMysqlVersionVersionVersionArrayOutput {
	return i.ToGetMysqlVersionVersionVersionArrayOutputWithContext(context.Background())
}

func (i GetMysqlVersionVersionVersionArray) ToGetMysqlVersionVersionVersionArrayOutputWithContext(ctx context.Context) GetMysqlVersionVersionVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlVersionVersionVersionArrayOutput)
}

type GetMysqlVersionVersionVersionOutput struct{ *pulumi.OutputState }

func (GetMysqlVersionVersionVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlVersionVersionVersion)(nil)).Elem()
}

func (o GetMysqlVersionVersionVersionOutput) ToGetMysqlVersionVersionVersionOutput() GetMysqlVersionVersionVersionOutput {
	return o
}

func (o GetMysqlVersionVersionVersionOutput) ToGetMysqlVersionVersionVersionOutputWithContext(ctx context.Context) GetMysqlVersionVersionVersionOutput {
	return o
}

// A link to a page describing the version.
func (o GetMysqlVersionVersionVersionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlVersionVersionVersion) string { return v.Description }).(pulumi.StringOutput)
}

// The specific version identifier
func (o GetMysqlVersionVersionVersionOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlVersionVersionVersion) string { return v.Version }).(pulumi.StringOutput)
}

type GetMysqlVersionVersionVersionArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlVersionVersionVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlVersionVersionVersion)(nil)).Elem()
}

func (o GetMysqlVersionVersionVersionArrayOutput) ToGetMysqlVersionVersionVersionArrayOutput() GetMysqlVersionVersionVersionArrayOutput {
	return o
}

func (o GetMysqlVersionVersionVersionArrayOutput) ToGetMysqlVersionVersionVersionArrayOutputWithContext(ctx context.Context) GetMysqlVersionVersionVersionArrayOutput {
	return o
}

func (o GetMysqlVersionVersionVersionArrayOutput) Index(i pulumi.IntInput) GetMysqlVersionVersionVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlVersionVersionVersion {
		return vs[0].([]GetMysqlVersionVersionVersion)[vs[1].(int)]
	}).(GetMysqlVersionVersionVersionOutput)
}

type GetShapesFilter struct {
	// Name
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetShapesFilterInput is an input type that accepts GetShapesFilterArgs and GetShapesFilterOutput values.
// You can construct a concrete instance of `GetShapesFilterInput` via:
//
//          GetShapesFilterArgs{...}
type GetShapesFilterInput interface {
	pulumi.Input

	ToGetShapesFilterOutput() GetShapesFilterOutput
	ToGetShapesFilterOutputWithContext(context.Context) GetShapesFilterOutput
}

type GetShapesFilterArgs struct {
	// Name
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetShapesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetShapesFilter)(nil)).Elem()
}

func (i GetShapesFilterArgs) ToGetShapesFilterOutput() GetShapesFilterOutput {
	return i.ToGetShapesFilterOutputWithContext(context.Background())
}

func (i GetShapesFilterArgs) ToGetShapesFilterOutputWithContext(ctx context.Context) GetShapesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetShapesFilterOutput)
}

// GetShapesFilterArrayInput is an input type that accepts GetShapesFilterArray and GetShapesFilterArrayOutput values.
// You can construct a concrete instance of `GetShapesFilterArrayInput` via:
//
//          GetShapesFilterArray{ GetShapesFilterArgs{...} }
type GetShapesFilterArrayInput interface {
	pulumi.Input

	ToGetShapesFilterArrayOutput() GetShapesFilterArrayOutput
	ToGetShapesFilterArrayOutputWithContext(context.Context) GetShapesFilterArrayOutput
}

type GetShapesFilterArray []GetShapesFilterInput

func (GetShapesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetShapesFilter)(nil)).Elem()
}

func (i GetShapesFilterArray) ToGetShapesFilterArrayOutput() GetShapesFilterArrayOutput {
	return i.ToGetShapesFilterArrayOutputWithContext(context.Background())
}

func (i GetShapesFilterArray) ToGetShapesFilterArrayOutputWithContext(ctx context.Context) GetShapesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetShapesFilterArrayOutput)
}

type GetShapesFilterOutput struct{ *pulumi.OutputState }

func (GetShapesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetShapesFilter)(nil)).Elem()
}

func (o GetShapesFilterOutput) ToGetShapesFilterOutput() GetShapesFilterOutput {
	return o
}

func (o GetShapesFilterOutput) ToGetShapesFilterOutputWithContext(ctx context.Context) GetShapesFilterOutput {
	return o
}

// Name
func (o GetShapesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetShapesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetShapesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetShapesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetShapesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetShapesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetShapesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetShapesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetShapesFilter)(nil)).Elem()
}

func (o GetShapesFilterArrayOutput) ToGetShapesFilterArrayOutput() GetShapesFilterArrayOutput {
	return o
}

func (o GetShapesFilterArrayOutput) ToGetShapesFilterArrayOutputWithContext(ctx context.Context) GetShapesFilterArrayOutput {
	return o
}

func (o GetShapesFilterArrayOutput) Index(i pulumi.IntInput) GetShapesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetShapesFilter {
		return vs[0].([]GetShapesFilter)[vs[1].(int)]
	}).(GetShapesFilterOutput)
}

type GetShapesShape struct {
	// The number of CPU Cores the Instance provides. These are "OCPU"s.
	CpuCoreCount int `pulumi:"cpuCoreCount"`
	// Return shapes that are supported by the service feature.
	IsSupportedFors []string `pulumi:"isSupportedFors"`
	// The amount of RAM the Instance provides. This is an IEC base-2 number.
	MemorySizeInGbs int `pulumi:"memorySizeInGbs"`
	// Name
	Name string `pulumi:"name"`
}

// GetShapesShapeInput is an input type that accepts GetShapesShapeArgs and GetShapesShapeOutput values.
// You can construct a concrete instance of `GetShapesShapeInput` via:
//
//          GetShapesShapeArgs{...}
type GetShapesShapeInput interface {
	pulumi.Input

	ToGetShapesShapeOutput() GetShapesShapeOutput
	ToGetShapesShapeOutputWithContext(context.Context) GetShapesShapeOutput
}

type GetShapesShapeArgs struct {
	// The number of CPU Cores the Instance provides. These are "OCPU"s.
	CpuCoreCount pulumi.IntInput `pulumi:"cpuCoreCount"`
	// Return shapes that are supported by the service feature.
	IsSupportedFors pulumi.StringArrayInput `pulumi:"isSupportedFors"`
	// The amount of RAM the Instance provides. This is an IEC base-2 number.
	MemorySizeInGbs pulumi.IntInput `pulumi:"memorySizeInGbs"`
	// Name
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetShapesShapeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetShapesShape)(nil)).Elem()
}

func (i GetShapesShapeArgs) ToGetShapesShapeOutput() GetShapesShapeOutput {
	return i.ToGetShapesShapeOutputWithContext(context.Background())
}

func (i GetShapesShapeArgs) ToGetShapesShapeOutputWithContext(ctx context.Context) GetShapesShapeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetShapesShapeOutput)
}

// GetShapesShapeArrayInput is an input type that accepts GetShapesShapeArray and GetShapesShapeArrayOutput values.
// You can construct a concrete instance of `GetShapesShapeArrayInput` via:
//
//          GetShapesShapeArray{ GetShapesShapeArgs{...} }
type GetShapesShapeArrayInput interface {
	pulumi.Input

	ToGetShapesShapeArrayOutput() GetShapesShapeArrayOutput
	ToGetShapesShapeArrayOutputWithContext(context.Context) GetShapesShapeArrayOutput
}

type GetShapesShapeArray []GetShapesShapeInput

func (GetShapesShapeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetShapesShape)(nil)).Elem()
}

func (i GetShapesShapeArray) ToGetShapesShapeArrayOutput() GetShapesShapeArrayOutput {
	return i.ToGetShapesShapeArrayOutputWithContext(context.Background())
}

func (i GetShapesShapeArray) ToGetShapesShapeArrayOutputWithContext(ctx context.Context) GetShapesShapeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetShapesShapeArrayOutput)
}

type GetShapesShapeOutput struct{ *pulumi.OutputState }

func (GetShapesShapeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetShapesShape)(nil)).Elem()
}

func (o GetShapesShapeOutput) ToGetShapesShapeOutput() GetShapesShapeOutput {
	return o
}

func (o GetShapesShapeOutput) ToGetShapesShapeOutputWithContext(ctx context.Context) GetShapesShapeOutput {
	return o
}

// The number of CPU Cores the Instance provides. These are "OCPU"s.
func (o GetShapesShapeOutput) CpuCoreCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetShapesShape) int { return v.CpuCoreCount }).(pulumi.IntOutput)
}

// Return shapes that are supported by the service feature.
func (o GetShapesShapeOutput) IsSupportedFors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetShapesShape) []string { return v.IsSupportedFors }).(pulumi.StringArrayOutput)
}

// The amount of RAM the Instance provides. This is an IEC base-2 number.
func (o GetShapesShapeOutput) MemorySizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetShapesShape) int { return v.MemorySizeInGbs }).(pulumi.IntOutput)
}

// Name
func (o GetShapesShapeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetShapesShape) string { return v.Name }).(pulumi.StringOutput)
}

type GetShapesShapeArrayOutput struct{ *pulumi.OutputState }

func (GetShapesShapeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetShapesShape)(nil)).Elem()
}

func (o GetShapesShapeArrayOutput) ToGetShapesShapeArrayOutput() GetShapesShapeArrayOutput {
	return o
}

func (o GetShapesShapeArrayOutput) ToGetShapesShapeArrayOutputWithContext(ctx context.Context) GetShapesShapeArrayOutput {
	return o
}

func (o GetShapesShapeArrayOutput) Index(i pulumi.IntInput) GetShapesShapeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetShapesShape {
		return vs[0].([]GetShapesShape)[vs[1].(int)]
	}).(GetShapesShapeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsClusterClusterNodeInput)(nil)).Elem(), AnalyticsClusterClusterNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsClusterClusterNodeArrayInput)(nil)).Elem(), AnalyticsClusterClusterNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelSourceInput)(nil)).Elem(), ChannelSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelSourcePtrInput)(nil)).Elem(), ChannelSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelSourceSslCaCertificateInput)(nil)).Elem(), ChannelSourceSslCaCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelSourceSslCaCertificatePtrInput)(nil)).Elem(), ChannelSourceSslCaCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelTargetInput)(nil)).Elem(), ChannelTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelTargetPtrInput)(nil)).Elem(), ChannelTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HeatWaveClusterClusterNodeInput)(nil)).Elem(), HeatWaveClusterClusterNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HeatWaveClusterClusterNodeArrayInput)(nil)).Elem(), HeatWaveClusterClusterNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotArrayInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotBackupPolicyInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotBackupPolicyArrayInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotBackupPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotDeletionPolicyInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotDeletionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotDeletionPolicyArrayInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotDeletionPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotEndpointInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotEndpointArrayInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotMaintenanceInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotMaintenanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotMaintenanceArrayInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotMaintenanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemAnalyticsClusterInput)(nil)).Elem(), MysqlDbSystemAnalyticsClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemAnalyticsClusterArrayInput)(nil)).Elem(), MysqlDbSystemAnalyticsClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemBackupPolicyInput)(nil)).Elem(), MysqlDbSystemBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemBackupPolicyPtrInput)(nil)).Elem(), MysqlDbSystemBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemBackupPolicyPitrPolicyInput)(nil)).Elem(), MysqlDbSystemBackupPolicyPitrPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemBackupPolicyPitrPolicyPtrInput)(nil)).Elem(), MysqlDbSystemBackupPolicyPitrPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemChannelInput)(nil)).Elem(), MysqlDbSystemChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemChannelArrayInput)(nil)).Elem(), MysqlDbSystemChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemChannelSourceInput)(nil)).Elem(), MysqlDbSystemChannelSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemChannelSourceArrayInput)(nil)).Elem(), MysqlDbSystemChannelSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemChannelSourceSslCaCertificateInput)(nil)).Elem(), MysqlDbSystemChannelSourceSslCaCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemChannelSourceSslCaCertificateArrayInput)(nil)).Elem(), MysqlDbSystemChannelSourceSslCaCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemChannelTargetInput)(nil)).Elem(), MysqlDbSystemChannelTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemChannelTargetArrayInput)(nil)).Elem(), MysqlDbSystemChannelTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemCurrentPlacementInput)(nil)).Elem(), MysqlDbSystemCurrentPlacementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemCurrentPlacementArrayInput)(nil)).Elem(), MysqlDbSystemCurrentPlacementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemDeletionPolicyInput)(nil)).Elem(), MysqlDbSystemDeletionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemDeletionPolicyArrayInput)(nil)).Elem(), MysqlDbSystemDeletionPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemEndpointInput)(nil)).Elem(), MysqlDbSystemEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemEndpointArrayInput)(nil)).Elem(), MysqlDbSystemEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemHeatWaveClusterInput)(nil)).Elem(), MysqlDbSystemHeatWaveClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemHeatWaveClusterArrayInput)(nil)).Elem(), MysqlDbSystemHeatWaveClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemMaintenanceInput)(nil)).Elem(), MysqlDbSystemMaintenanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemMaintenancePtrInput)(nil)).Elem(), MysqlDbSystemMaintenanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemPointInTimeRecoveryDetailInput)(nil)).Elem(), MysqlDbSystemPointInTimeRecoveryDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemPointInTimeRecoveryDetailArrayInput)(nil)).Elem(), MysqlDbSystemPointInTimeRecoveryDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemSourceInput)(nil)).Elem(), MysqlDbSystemSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemSourcePtrInput)(nil)).Elem(), MysqlDbSystemSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAnalyticsClusterClusterNodeInput)(nil)).Elem(), GetAnalyticsClusterClusterNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAnalyticsClusterClusterNodeArrayInput)(nil)).Elem(), GetAnalyticsClusterClusterNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelSourceInput)(nil)).Elem(), GetChannelSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelSourceArrayInput)(nil)).Elem(), GetChannelSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelSourceSslCaCertificateInput)(nil)).Elem(), GetChannelSourceSslCaCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelSourceSslCaCertificateArrayInput)(nil)).Elem(), GetChannelSourceSslCaCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelTargetInput)(nil)).Elem(), GetChannelTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelTargetArrayInput)(nil)).Elem(), GetChannelTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelsChannelInput)(nil)).Elem(), GetChannelsChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelsChannelArrayInput)(nil)).Elem(), GetChannelsChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelsChannelSourceInput)(nil)).Elem(), GetChannelsChannelSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelsChannelSourceArrayInput)(nil)).Elem(), GetChannelsChannelSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelsChannelSourceSslCaCertificateInput)(nil)).Elem(), GetChannelsChannelSourceSslCaCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelsChannelSourceSslCaCertificateArrayInput)(nil)).Elem(), GetChannelsChannelSourceSslCaCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelsChannelTargetInput)(nil)).Elem(), GetChannelsChannelTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelsChannelTargetArrayInput)(nil)).Elem(), GetChannelsChannelTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelsFilterInput)(nil)).Elem(), GetChannelsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelsFilterArrayInput)(nil)).Elem(), GetChannelsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHeatWaveClusterClusterNodeInput)(nil)).Elem(), GetHeatWaveClusterClusterNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHeatWaveClusterClusterNodeArrayInput)(nil)).Elem(), GetHeatWaveClusterClusterNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotArrayInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotBackupPolicyInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotBackupPolicyArrayInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotBackupPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotDeletionPolicyInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotDeletionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotDeletionPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotEndpointInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotEndpointArrayInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotMaintenanceInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotMaintenanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotMaintenanceArrayInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotMaintenanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupInput)(nil)).Elem(), GetMysqlBackupsBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupArrayInput)(nil)).Elem(), GetMysqlBackupsBackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotArrayInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotEndpointInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotMaintenanceInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsFilterInput)(nil)).Elem(), GetMysqlBackupsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsFilterArrayInput)(nil)).Elem(), GetMysqlBackupsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlConfigurationVariableInput)(nil)).Elem(), GetMysqlConfigurationVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlConfigurationVariableArrayInput)(nil)).Elem(), GetMysqlConfigurationVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlConfigurationsConfigurationInput)(nil)).Elem(), GetMysqlConfigurationsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlConfigurationsConfigurationArrayInput)(nil)).Elem(), GetMysqlConfigurationsConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlConfigurationsConfigurationVariablesInput)(nil)).Elem(), GetMysqlConfigurationsConfigurationVariablesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlConfigurationsFilterInput)(nil)).Elem(), GetMysqlConfigurationsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlConfigurationsFilterArrayInput)(nil)).Elem(), GetMysqlConfigurationsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemAnalyticsClusterInput)(nil)).Elem(), GetMysqlDbSystemAnalyticsClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemAnalyticsClusterArrayInput)(nil)).Elem(), GetMysqlDbSystemAnalyticsClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemBackupPolicyInput)(nil)).Elem(), GetMysqlDbSystemBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemBackupPolicyArrayInput)(nil)).Elem(), GetMysqlDbSystemBackupPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemBackupPolicyPitrPolicyInput)(nil)).Elem(), GetMysqlDbSystemBackupPolicyPitrPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemBackupPolicyPitrPolicyArrayInput)(nil)).Elem(), GetMysqlDbSystemBackupPolicyPitrPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemChannelInput)(nil)).Elem(), GetMysqlDbSystemChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemChannelArrayInput)(nil)).Elem(), GetMysqlDbSystemChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemChannelSourceInput)(nil)).Elem(), GetMysqlDbSystemChannelSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemChannelSourceArrayInput)(nil)).Elem(), GetMysqlDbSystemChannelSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemChannelSourceSslCaCertificateInput)(nil)).Elem(), GetMysqlDbSystemChannelSourceSslCaCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemChannelSourceSslCaCertificateArrayInput)(nil)).Elem(), GetMysqlDbSystemChannelSourceSslCaCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemChannelTargetInput)(nil)).Elem(), GetMysqlDbSystemChannelTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemChannelTargetArrayInput)(nil)).Elem(), GetMysqlDbSystemChannelTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemCurrentPlacementInput)(nil)).Elem(), GetMysqlDbSystemCurrentPlacementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemCurrentPlacementArrayInput)(nil)).Elem(), GetMysqlDbSystemCurrentPlacementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemDeletionPolicyInput)(nil)).Elem(), GetMysqlDbSystemDeletionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemDeletionPolicyArrayInput)(nil)).Elem(), GetMysqlDbSystemDeletionPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemEndpointInput)(nil)).Elem(), GetMysqlDbSystemEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemEndpointArrayInput)(nil)).Elem(), GetMysqlDbSystemEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemHeatWaveClusterInput)(nil)).Elem(), GetMysqlDbSystemHeatWaveClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemHeatWaveClusterArrayInput)(nil)).Elem(), GetMysqlDbSystemHeatWaveClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemMaintenanceInput)(nil)).Elem(), GetMysqlDbSystemMaintenanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemMaintenanceArrayInput)(nil)).Elem(), GetMysqlDbSystemMaintenanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemPointInTimeRecoveryDetailInput)(nil)).Elem(), GetMysqlDbSystemPointInTimeRecoveryDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemPointInTimeRecoveryDetailArrayInput)(nil)).Elem(), GetMysqlDbSystemPointInTimeRecoveryDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemSourceInput)(nil)).Elem(), GetMysqlDbSystemSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemSourceArrayInput)(nil)).Elem(), GetMysqlDbSystemSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemAnalyticsClusterInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemAnalyticsClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemAnalyticsClusterArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemAnalyticsClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemBackupPolicyInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemBackupPolicyArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemBackupPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannelInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannelArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannelSourceInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemChannelSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannelSourceArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemChannelSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannelTargetInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemChannelTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannelTargetArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemChannelTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemCurrentPlacementInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemCurrentPlacementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemCurrentPlacementArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemCurrentPlacementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemDeletionPolicyInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemDeletionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemDeletionPolicyArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemDeletionPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemEndpointInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemEndpointArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemHeatWaveClusterInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemHeatWaveClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemHeatWaveClusterArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemHeatWaveClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemMaintenanceInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemMaintenanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemMaintenanceArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemMaintenanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemSourceInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemSourceArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsFilterInput)(nil)).Elem(), GetMysqlDbSystemsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsFilterArrayInput)(nil)).Elem(), GetMysqlDbSystemsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlVersionFilterInput)(nil)).Elem(), GetMysqlVersionFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlVersionFilterArrayInput)(nil)).Elem(), GetMysqlVersionFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlVersionVersionInput)(nil)).Elem(), GetMysqlVersionVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlVersionVersionArrayInput)(nil)).Elem(), GetMysqlVersionVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlVersionVersionVersionInput)(nil)).Elem(), GetMysqlVersionVersionVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlVersionVersionVersionArrayInput)(nil)).Elem(), GetMysqlVersionVersionVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetShapesFilterInput)(nil)).Elem(), GetShapesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetShapesFilterArrayInput)(nil)).Elem(), GetShapesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetShapesShapeInput)(nil)).Elem(), GetShapesShapeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetShapesShapeArrayInput)(nil)).Elem(), GetShapesShapeArray{})
	pulumi.RegisterOutputType(AnalyticsClusterClusterNodeOutput{})
	pulumi.RegisterOutputType(AnalyticsClusterClusterNodeArrayOutput{})
	pulumi.RegisterOutputType(ChannelSourceOutput{})
	pulumi.RegisterOutputType(ChannelSourcePtrOutput{})
	pulumi.RegisterOutputType(ChannelSourceSslCaCertificateOutput{})
	pulumi.RegisterOutputType(ChannelSourceSslCaCertificatePtrOutput{})
	pulumi.RegisterOutputType(ChannelTargetOutput{})
	pulumi.RegisterOutputType(ChannelTargetPtrOutput{})
	pulumi.RegisterOutputType(HeatWaveClusterClusterNodeOutput{})
	pulumi.RegisterOutputType(HeatWaveClusterClusterNodeArrayOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotArrayOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotBackupPolicyOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotBackupPolicyArrayOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotDeletionPolicyOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotEndpointOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotEndpointArrayOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotMaintenanceOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotMaintenanceArrayOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemAnalyticsClusterOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemAnalyticsClusterArrayOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemBackupPolicyOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemBackupPolicyPtrOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemBackupPolicyPitrPolicyOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemBackupPolicyPitrPolicyPtrOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemChannelOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemChannelArrayOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemChannelSourceOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemChannelSourceArrayOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemChannelSourceSslCaCertificateOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemChannelSourceSslCaCertificateArrayOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemChannelTargetOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemChannelTargetArrayOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemCurrentPlacementOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemCurrentPlacementArrayOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemDeletionPolicyOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemDeletionPolicyArrayOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemEndpointOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemEndpointArrayOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemHeatWaveClusterOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemHeatWaveClusterArrayOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemMaintenanceOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemMaintenancePtrOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemPointInTimeRecoveryDetailOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemPointInTimeRecoveryDetailArrayOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemSourceOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemSourcePtrOutput{})
	pulumi.RegisterOutputType(GetAnalyticsClusterClusterNodeOutput{})
	pulumi.RegisterOutputType(GetAnalyticsClusterClusterNodeArrayOutput{})
	pulumi.RegisterOutputType(GetChannelSourceOutput{})
	pulumi.RegisterOutputType(GetChannelSourceArrayOutput{})
	pulumi.RegisterOutputType(GetChannelSourceSslCaCertificateOutput{})
	pulumi.RegisterOutputType(GetChannelSourceSslCaCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetChannelTargetOutput{})
	pulumi.RegisterOutputType(GetChannelTargetArrayOutput{})
	pulumi.RegisterOutputType(GetChannelsChannelOutput{})
	pulumi.RegisterOutputType(GetChannelsChannelArrayOutput{})
	pulumi.RegisterOutputType(GetChannelsChannelSourceOutput{})
	pulumi.RegisterOutputType(GetChannelsChannelSourceArrayOutput{})
	pulumi.RegisterOutputType(GetChannelsChannelSourceSslCaCertificateOutput{})
	pulumi.RegisterOutputType(GetChannelsChannelSourceSslCaCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetChannelsChannelTargetOutput{})
	pulumi.RegisterOutputType(GetChannelsChannelTargetArrayOutput{})
	pulumi.RegisterOutputType(GetChannelsFilterOutput{})
	pulumi.RegisterOutputType(GetChannelsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetHeatWaveClusterClusterNodeOutput{})
	pulumi.RegisterOutputType(GetHeatWaveClusterClusterNodeArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotBackupPolicyOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotDeletionPolicyOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotEndpointOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotMaintenanceOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsFilterOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlConfigurationVariableOutput{})
	pulumi.RegisterOutputType(GetMysqlConfigurationVariableArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlConfigurationsConfigurationOutput{})
	pulumi.RegisterOutputType(GetMysqlConfigurationsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlConfigurationsConfigurationVariablesOutput{})
	pulumi.RegisterOutputType(GetMysqlConfigurationsFilterOutput{})
	pulumi.RegisterOutputType(GetMysqlConfigurationsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemAnalyticsClusterOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemAnalyticsClusterArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemBackupPolicyOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemBackupPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemBackupPolicyPitrPolicyOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemChannelOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemChannelArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemChannelSourceOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemChannelSourceArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemChannelSourceSslCaCertificateOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemChannelTargetOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemChannelTargetArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemCurrentPlacementOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemCurrentPlacementArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemDeletionPolicyOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemDeletionPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemEndpointOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemHeatWaveClusterOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemHeatWaveClusterArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemMaintenanceOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemMaintenanceArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemPointInTimeRecoveryDetailOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemPointInTimeRecoveryDetailArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemSourceOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemSourceArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemAnalyticsClusterOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemAnalyticsClusterArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemBackupPolicyOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemBackupPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemChannelOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemChannelArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemChannelSourceOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemChannelSourceArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemChannelTargetOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemChannelTargetArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemCurrentPlacementOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemDeletionPolicyOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemEndpointOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemHeatWaveClusterOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemMaintenanceOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemMaintenanceArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemSourceOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemSourceArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsFilterOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlVersionFilterOutput{})
	pulumi.RegisterOutputType(GetMysqlVersionFilterArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlVersionVersionOutput{})
	pulumi.RegisterOutputType(GetMysqlVersionVersionArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlVersionVersionVersionOutput{})
	pulumi.RegisterOutputType(GetMysqlVersionVersionVersionArrayOutput{})
	pulumi.RegisterOutputType(GetShapesFilterOutput{})
	pulumi.RegisterOutputType(GetShapesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetShapesShapeOutput{})
	pulumi.RegisterOutputType(GetShapesShapeArrayOutput{})
}
