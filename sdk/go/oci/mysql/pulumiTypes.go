// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mysql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ChannelSource struct {
	// (Updatable) Specifies how the replication channel handles replicated transactions without an identifier, enabling replication from a source that does not use transaction-id-based replication to a replica that does.
	AnonymousTransactionsHandling *ChannelSourceAnonymousTransactionsHandling `pulumi:"anonymousTransactionsHandling"`
	// (Updatable) The network address of the MySQL instance.
	Hostname string `pulumi:"hostname"`
	// (Updatable) The password for the replication user. The password must be between 8 and 32 characters long, and must contain at least 1 numeric character, 1 lowercase character, 1 uppercase character, and 1 special (nonalphanumeric) character.
	Password string `pulumi:"password"`
	// (Updatable) The port the source MySQL instance listens on.
	Port *int `pulumi:"port"`
	// (Updatable) The specific source identifier.
	SourceType string `pulumi:"sourceType"`
	// (Updatable) The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
	SslCaCertificate *ChannelSourceSslCaCertificate `pulumi:"sslCaCertificate"`
	// (Updatable) The SSL mode of the Channel.
	SslMode string `pulumi:"sslMode"`
	// (Updatable) The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
	Username string `pulumi:"username"`
}

// ChannelSourceInput is an input type that accepts ChannelSourceArgs and ChannelSourceOutput values.
// You can construct a concrete instance of `ChannelSourceInput` via:
//
//	ChannelSourceArgs{...}
type ChannelSourceInput interface {
	pulumi.Input

	ToChannelSourceOutput() ChannelSourceOutput
	ToChannelSourceOutputWithContext(context.Context) ChannelSourceOutput
}

type ChannelSourceArgs struct {
	// (Updatable) Specifies how the replication channel handles replicated transactions without an identifier, enabling replication from a source that does not use transaction-id-based replication to a replica that does.
	AnonymousTransactionsHandling ChannelSourceAnonymousTransactionsHandlingPtrInput `pulumi:"anonymousTransactionsHandling"`
	// (Updatable) The network address of the MySQL instance.
	Hostname pulumi.StringInput `pulumi:"hostname"`
	// (Updatable) The password for the replication user. The password must be between 8 and 32 characters long, and must contain at least 1 numeric character, 1 lowercase character, 1 uppercase character, and 1 special (nonalphanumeric) character.
	Password pulumi.StringInput `pulumi:"password"`
	// (Updatable) The port the source MySQL instance listens on.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// (Updatable) The specific source identifier.
	SourceType pulumi.StringInput `pulumi:"sourceType"`
	// (Updatable) The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
	SslCaCertificate ChannelSourceSslCaCertificatePtrInput `pulumi:"sslCaCertificate"`
	// (Updatable) The SSL mode of the Channel.
	SslMode pulumi.StringInput `pulumi:"sslMode"`
	// (Updatable) The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
	Username pulumi.StringInput `pulumi:"username"`
}

func (ChannelSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelSource)(nil)).Elem()
}

func (i ChannelSourceArgs) ToChannelSourceOutput() ChannelSourceOutput {
	return i.ToChannelSourceOutputWithContext(context.Background())
}

func (i ChannelSourceArgs) ToChannelSourceOutputWithContext(ctx context.Context) ChannelSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelSourceOutput)
}

func (i ChannelSourceArgs) ToChannelSourcePtrOutput() ChannelSourcePtrOutput {
	return i.ToChannelSourcePtrOutputWithContext(context.Background())
}

func (i ChannelSourceArgs) ToChannelSourcePtrOutputWithContext(ctx context.Context) ChannelSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelSourceOutput).ToChannelSourcePtrOutputWithContext(ctx)
}

// ChannelSourcePtrInput is an input type that accepts ChannelSourceArgs, ChannelSourcePtr and ChannelSourcePtrOutput values.
// You can construct a concrete instance of `ChannelSourcePtrInput` via:
//
//	        ChannelSourceArgs{...}
//
//	or:
//
//	        nil
type ChannelSourcePtrInput interface {
	pulumi.Input

	ToChannelSourcePtrOutput() ChannelSourcePtrOutput
	ToChannelSourcePtrOutputWithContext(context.Context) ChannelSourcePtrOutput
}

type channelSourcePtrType ChannelSourceArgs

func ChannelSourcePtr(v *ChannelSourceArgs) ChannelSourcePtrInput {
	return (*channelSourcePtrType)(v)
}

func (*channelSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelSource)(nil)).Elem()
}

func (i *channelSourcePtrType) ToChannelSourcePtrOutput() ChannelSourcePtrOutput {
	return i.ToChannelSourcePtrOutputWithContext(context.Background())
}

func (i *channelSourcePtrType) ToChannelSourcePtrOutputWithContext(ctx context.Context) ChannelSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelSourcePtrOutput)
}

type ChannelSourceOutput struct{ *pulumi.OutputState }

func (ChannelSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelSource)(nil)).Elem()
}

func (o ChannelSourceOutput) ToChannelSourceOutput() ChannelSourceOutput {
	return o
}

func (o ChannelSourceOutput) ToChannelSourceOutputWithContext(ctx context.Context) ChannelSourceOutput {
	return o
}

func (o ChannelSourceOutput) ToChannelSourcePtrOutput() ChannelSourcePtrOutput {
	return o.ToChannelSourcePtrOutputWithContext(context.Background())
}

func (o ChannelSourceOutput) ToChannelSourcePtrOutputWithContext(ctx context.Context) ChannelSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelSource) *ChannelSource {
		return &v
	}).(ChannelSourcePtrOutput)
}

// (Updatable) Specifies how the replication channel handles replicated transactions without an identifier, enabling replication from a source that does not use transaction-id-based replication to a replica that does.
func (o ChannelSourceOutput) AnonymousTransactionsHandling() ChannelSourceAnonymousTransactionsHandlingPtrOutput {
	return o.ApplyT(func(v ChannelSource) *ChannelSourceAnonymousTransactionsHandling {
		return v.AnonymousTransactionsHandling
	}).(ChannelSourceAnonymousTransactionsHandlingPtrOutput)
}

// (Updatable) The network address of the MySQL instance.
func (o ChannelSourceOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelSource) string { return v.Hostname }).(pulumi.StringOutput)
}

// (Updatable) The password for the replication user. The password must be between 8 and 32 characters long, and must contain at least 1 numeric character, 1 lowercase character, 1 uppercase character, and 1 special (nonalphanumeric) character.
func (o ChannelSourceOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelSource) string { return v.Password }).(pulumi.StringOutput)
}

// (Updatable) The port the source MySQL instance listens on.
func (o ChannelSourceOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelSource) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// (Updatable) The specific source identifier.
func (o ChannelSourceOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelSource) string { return v.SourceType }).(pulumi.StringOutput)
}

// (Updatable) The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
func (o ChannelSourceOutput) SslCaCertificate() ChannelSourceSslCaCertificatePtrOutput {
	return o.ApplyT(func(v ChannelSource) *ChannelSourceSslCaCertificate { return v.SslCaCertificate }).(ChannelSourceSslCaCertificatePtrOutput)
}

// (Updatable) The SSL mode of the Channel.
func (o ChannelSourceOutput) SslMode() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelSource) string { return v.SslMode }).(pulumi.StringOutput)
}

// (Updatable) The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
func (o ChannelSourceOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelSource) string { return v.Username }).(pulumi.StringOutput)
}

type ChannelSourcePtrOutput struct{ *pulumi.OutputState }

func (ChannelSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelSource)(nil)).Elem()
}

func (o ChannelSourcePtrOutput) ToChannelSourcePtrOutput() ChannelSourcePtrOutput {
	return o
}

func (o ChannelSourcePtrOutput) ToChannelSourcePtrOutputWithContext(ctx context.Context) ChannelSourcePtrOutput {
	return o
}

func (o ChannelSourcePtrOutput) Elem() ChannelSourceOutput {
	return o.ApplyT(func(v *ChannelSource) ChannelSource {
		if v != nil {
			return *v
		}
		var ret ChannelSource
		return ret
	}).(ChannelSourceOutput)
}

// (Updatable) Specifies how the replication channel handles replicated transactions without an identifier, enabling replication from a source that does not use transaction-id-based replication to a replica that does.
func (o ChannelSourcePtrOutput) AnonymousTransactionsHandling() ChannelSourceAnonymousTransactionsHandlingPtrOutput {
	return o.ApplyT(func(v *ChannelSource) *ChannelSourceAnonymousTransactionsHandling {
		if v == nil {
			return nil
		}
		return v.AnonymousTransactionsHandling
	}).(ChannelSourceAnonymousTransactionsHandlingPtrOutput)
}

// (Updatable) The network address of the MySQL instance.
func (o ChannelSourcePtrOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelSource) *string {
		if v == nil {
			return nil
		}
		return &v.Hostname
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The password for the replication user. The password must be between 8 and 32 characters long, and must contain at least 1 numeric character, 1 lowercase character, 1 uppercase character, and 1 special (nonalphanumeric) character.
func (o ChannelSourcePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelSource) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The port the source MySQL instance listens on.
func (o ChannelSourcePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelSource) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// (Updatable) The specific source identifier.
func (o ChannelSourcePtrOutput) SourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelSource) *string {
		if v == nil {
			return nil
		}
		return &v.SourceType
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
func (o ChannelSourcePtrOutput) SslCaCertificate() ChannelSourceSslCaCertificatePtrOutput {
	return o.ApplyT(func(v *ChannelSource) *ChannelSourceSslCaCertificate {
		if v == nil {
			return nil
		}
		return v.SslCaCertificate
	}).(ChannelSourceSslCaCertificatePtrOutput)
}

// (Updatable) The SSL mode of the Channel.
func (o ChannelSourcePtrOutput) SslMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelSource) *string {
		if v == nil {
			return nil
		}
		return &v.SslMode
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
func (o ChannelSourcePtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelSource) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type ChannelSourceAnonymousTransactionsHandling struct {
	// (Updatable) Specifies one of the coordinates (file) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
	LastConfiguredLogFilename *string `pulumi:"lastConfiguredLogFilename"`
	// (Updatable) Specifies one of the coordinates (offset) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
	LastConfiguredLogOffset *string `pulumi:"lastConfiguredLogOffset"`
	// (Updatable) Specifies how the replication channel handles anonymous transactions.
	Policy string `pulumi:"policy"`
	// (Updatable) The UUID that is used as a prefix when generating transaction identifiers for anonymous transactions coming from the source. You can change the UUID later.
	Uuid *string `pulumi:"uuid"`
}

// ChannelSourceAnonymousTransactionsHandlingInput is an input type that accepts ChannelSourceAnonymousTransactionsHandlingArgs and ChannelSourceAnonymousTransactionsHandlingOutput values.
// You can construct a concrete instance of `ChannelSourceAnonymousTransactionsHandlingInput` via:
//
//	ChannelSourceAnonymousTransactionsHandlingArgs{...}
type ChannelSourceAnonymousTransactionsHandlingInput interface {
	pulumi.Input

	ToChannelSourceAnonymousTransactionsHandlingOutput() ChannelSourceAnonymousTransactionsHandlingOutput
	ToChannelSourceAnonymousTransactionsHandlingOutputWithContext(context.Context) ChannelSourceAnonymousTransactionsHandlingOutput
}

type ChannelSourceAnonymousTransactionsHandlingArgs struct {
	// (Updatable) Specifies one of the coordinates (file) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
	LastConfiguredLogFilename pulumi.StringPtrInput `pulumi:"lastConfiguredLogFilename"`
	// (Updatable) Specifies one of the coordinates (offset) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
	LastConfiguredLogOffset pulumi.StringPtrInput `pulumi:"lastConfiguredLogOffset"`
	// (Updatable) Specifies how the replication channel handles anonymous transactions.
	Policy pulumi.StringInput `pulumi:"policy"`
	// (Updatable) The UUID that is used as a prefix when generating transaction identifiers for anonymous transactions coming from the source. You can change the UUID later.
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (ChannelSourceAnonymousTransactionsHandlingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelSourceAnonymousTransactionsHandling)(nil)).Elem()
}

func (i ChannelSourceAnonymousTransactionsHandlingArgs) ToChannelSourceAnonymousTransactionsHandlingOutput() ChannelSourceAnonymousTransactionsHandlingOutput {
	return i.ToChannelSourceAnonymousTransactionsHandlingOutputWithContext(context.Background())
}

func (i ChannelSourceAnonymousTransactionsHandlingArgs) ToChannelSourceAnonymousTransactionsHandlingOutputWithContext(ctx context.Context) ChannelSourceAnonymousTransactionsHandlingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelSourceAnonymousTransactionsHandlingOutput)
}

func (i ChannelSourceAnonymousTransactionsHandlingArgs) ToChannelSourceAnonymousTransactionsHandlingPtrOutput() ChannelSourceAnonymousTransactionsHandlingPtrOutput {
	return i.ToChannelSourceAnonymousTransactionsHandlingPtrOutputWithContext(context.Background())
}

func (i ChannelSourceAnonymousTransactionsHandlingArgs) ToChannelSourceAnonymousTransactionsHandlingPtrOutputWithContext(ctx context.Context) ChannelSourceAnonymousTransactionsHandlingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelSourceAnonymousTransactionsHandlingOutput).ToChannelSourceAnonymousTransactionsHandlingPtrOutputWithContext(ctx)
}

// ChannelSourceAnonymousTransactionsHandlingPtrInput is an input type that accepts ChannelSourceAnonymousTransactionsHandlingArgs, ChannelSourceAnonymousTransactionsHandlingPtr and ChannelSourceAnonymousTransactionsHandlingPtrOutput values.
// You can construct a concrete instance of `ChannelSourceAnonymousTransactionsHandlingPtrInput` via:
//
//	        ChannelSourceAnonymousTransactionsHandlingArgs{...}
//
//	or:
//
//	        nil
type ChannelSourceAnonymousTransactionsHandlingPtrInput interface {
	pulumi.Input

	ToChannelSourceAnonymousTransactionsHandlingPtrOutput() ChannelSourceAnonymousTransactionsHandlingPtrOutput
	ToChannelSourceAnonymousTransactionsHandlingPtrOutputWithContext(context.Context) ChannelSourceAnonymousTransactionsHandlingPtrOutput
}

type channelSourceAnonymousTransactionsHandlingPtrType ChannelSourceAnonymousTransactionsHandlingArgs

func ChannelSourceAnonymousTransactionsHandlingPtr(v *ChannelSourceAnonymousTransactionsHandlingArgs) ChannelSourceAnonymousTransactionsHandlingPtrInput {
	return (*channelSourceAnonymousTransactionsHandlingPtrType)(v)
}

func (*channelSourceAnonymousTransactionsHandlingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelSourceAnonymousTransactionsHandling)(nil)).Elem()
}

func (i *channelSourceAnonymousTransactionsHandlingPtrType) ToChannelSourceAnonymousTransactionsHandlingPtrOutput() ChannelSourceAnonymousTransactionsHandlingPtrOutput {
	return i.ToChannelSourceAnonymousTransactionsHandlingPtrOutputWithContext(context.Background())
}

func (i *channelSourceAnonymousTransactionsHandlingPtrType) ToChannelSourceAnonymousTransactionsHandlingPtrOutputWithContext(ctx context.Context) ChannelSourceAnonymousTransactionsHandlingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelSourceAnonymousTransactionsHandlingPtrOutput)
}

type ChannelSourceAnonymousTransactionsHandlingOutput struct{ *pulumi.OutputState }

func (ChannelSourceAnonymousTransactionsHandlingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelSourceAnonymousTransactionsHandling)(nil)).Elem()
}

func (o ChannelSourceAnonymousTransactionsHandlingOutput) ToChannelSourceAnonymousTransactionsHandlingOutput() ChannelSourceAnonymousTransactionsHandlingOutput {
	return o
}

func (o ChannelSourceAnonymousTransactionsHandlingOutput) ToChannelSourceAnonymousTransactionsHandlingOutputWithContext(ctx context.Context) ChannelSourceAnonymousTransactionsHandlingOutput {
	return o
}

func (o ChannelSourceAnonymousTransactionsHandlingOutput) ToChannelSourceAnonymousTransactionsHandlingPtrOutput() ChannelSourceAnonymousTransactionsHandlingPtrOutput {
	return o.ToChannelSourceAnonymousTransactionsHandlingPtrOutputWithContext(context.Background())
}

func (o ChannelSourceAnonymousTransactionsHandlingOutput) ToChannelSourceAnonymousTransactionsHandlingPtrOutputWithContext(ctx context.Context) ChannelSourceAnonymousTransactionsHandlingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelSourceAnonymousTransactionsHandling) *ChannelSourceAnonymousTransactionsHandling {
		return &v
	}).(ChannelSourceAnonymousTransactionsHandlingPtrOutput)
}

// (Updatable) Specifies one of the coordinates (file) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
func (o ChannelSourceAnonymousTransactionsHandlingOutput) LastConfiguredLogFilename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelSourceAnonymousTransactionsHandling) *string { return v.LastConfiguredLogFilename }).(pulumi.StringPtrOutput)
}

// (Updatable) Specifies one of the coordinates (offset) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
func (o ChannelSourceAnonymousTransactionsHandlingOutput) LastConfiguredLogOffset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelSourceAnonymousTransactionsHandling) *string { return v.LastConfiguredLogOffset }).(pulumi.StringPtrOutput)
}

// (Updatable) Specifies how the replication channel handles anonymous transactions.
func (o ChannelSourceAnonymousTransactionsHandlingOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelSourceAnonymousTransactionsHandling) string { return v.Policy }).(pulumi.StringOutput)
}

// (Updatable) The UUID that is used as a prefix when generating transaction identifiers for anonymous transactions coming from the source. You can change the UUID later.
func (o ChannelSourceAnonymousTransactionsHandlingOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelSourceAnonymousTransactionsHandling) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type ChannelSourceAnonymousTransactionsHandlingPtrOutput struct{ *pulumi.OutputState }

func (ChannelSourceAnonymousTransactionsHandlingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelSourceAnonymousTransactionsHandling)(nil)).Elem()
}

func (o ChannelSourceAnonymousTransactionsHandlingPtrOutput) ToChannelSourceAnonymousTransactionsHandlingPtrOutput() ChannelSourceAnonymousTransactionsHandlingPtrOutput {
	return o
}

func (o ChannelSourceAnonymousTransactionsHandlingPtrOutput) ToChannelSourceAnonymousTransactionsHandlingPtrOutputWithContext(ctx context.Context) ChannelSourceAnonymousTransactionsHandlingPtrOutput {
	return o
}

func (o ChannelSourceAnonymousTransactionsHandlingPtrOutput) Elem() ChannelSourceAnonymousTransactionsHandlingOutput {
	return o.ApplyT(func(v *ChannelSourceAnonymousTransactionsHandling) ChannelSourceAnonymousTransactionsHandling {
		if v != nil {
			return *v
		}
		var ret ChannelSourceAnonymousTransactionsHandling
		return ret
	}).(ChannelSourceAnonymousTransactionsHandlingOutput)
}

// (Updatable) Specifies one of the coordinates (file) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
func (o ChannelSourceAnonymousTransactionsHandlingPtrOutput) LastConfiguredLogFilename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelSourceAnonymousTransactionsHandling) *string {
		if v == nil {
			return nil
		}
		return v.LastConfiguredLogFilename
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Specifies one of the coordinates (offset) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
func (o ChannelSourceAnonymousTransactionsHandlingPtrOutput) LastConfiguredLogOffset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelSourceAnonymousTransactionsHandling) *string {
		if v == nil {
			return nil
		}
		return v.LastConfiguredLogOffset
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Specifies how the replication channel handles anonymous transactions.
func (o ChannelSourceAnonymousTransactionsHandlingPtrOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelSourceAnonymousTransactionsHandling) *string {
		if v == nil {
			return nil
		}
		return &v.Policy
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The UUID that is used as a prefix when generating transaction identifiers for anonymous transactions coming from the source. You can change the UUID later.
func (o ChannelSourceAnonymousTransactionsHandlingPtrOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelSourceAnonymousTransactionsHandling) *string {
		if v == nil {
			return nil
		}
		return v.Uuid
	}).(pulumi.StringPtrOutput)
}

type ChannelSourceSslCaCertificate struct {
	// (Updatable) The type of CA certificate.
	CertificateType string `pulumi:"certificateType"`
	// (Updatable) The string containing the CA certificate in PEM format.
	Contents string `pulumi:"contents"`
}

// ChannelSourceSslCaCertificateInput is an input type that accepts ChannelSourceSslCaCertificateArgs and ChannelSourceSslCaCertificateOutput values.
// You can construct a concrete instance of `ChannelSourceSslCaCertificateInput` via:
//
//	ChannelSourceSslCaCertificateArgs{...}
type ChannelSourceSslCaCertificateInput interface {
	pulumi.Input

	ToChannelSourceSslCaCertificateOutput() ChannelSourceSslCaCertificateOutput
	ToChannelSourceSslCaCertificateOutputWithContext(context.Context) ChannelSourceSslCaCertificateOutput
}

type ChannelSourceSslCaCertificateArgs struct {
	// (Updatable) The type of CA certificate.
	CertificateType pulumi.StringInput `pulumi:"certificateType"`
	// (Updatable) The string containing the CA certificate in PEM format.
	Contents pulumi.StringInput `pulumi:"contents"`
}

func (ChannelSourceSslCaCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelSourceSslCaCertificate)(nil)).Elem()
}

func (i ChannelSourceSslCaCertificateArgs) ToChannelSourceSslCaCertificateOutput() ChannelSourceSslCaCertificateOutput {
	return i.ToChannelSourceSslCaCertificateOutputWithContext(context.Background())
}

func (i ChannelSourceSslCaCertificateArgs) ToChannelSourceSslCaCertificateOutputWithContext(ctx context.Context) ChannelSourceSslCaCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelSourceSslCaCertificateOutput)
}

func (i ChannelSourceSslCaCertificateArgs) ToChannelSourceSslCaCertificatePtrOutput() ChannelSourceSslCaCertificatePtrOutput {
	return i.ToChannelSourceSslCaCertificatePtrOutputWithContext(context.Background())
}

func (i ChannelSourceSslCaCertificateArgs) ToChannelSourceSslCaCertificatePtrOutputWithContext(ctx context.Context) ChannelSourceSslCaCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelSourceSslCaCertificateOutput).ToChannelSourceSslCaCertificatePtrOutputWithContext(ctx)
}

// ChannelSourceSslCaCertificatePtrInput is an input type that accepts ChannelSourceSslCaCertificateArgs, ChannelSourceSslCaCertificatePtr and ChannelSourceSslCaCertificatePtrOutput values.
// You can construct a concrete instance of `ChannelSourceSslCaCertificatePtrInput` via:
//
//	        ChannelSourceSslCaCertificateArgs{...}
//
//	or:
//
//	        nil
type ChannelSourceSslCaCertificatePtrInput interface {
	pulumi.Input

	ToChannelSourceSslCaCertificatePtrOutput() ChannelSourceSslCaCertificatePtrOutput
	ToChannelSourceSslCaCertificatePtrOutputWithContext(context.Context) ChannelSourceSslCaCertificatePtrOutput
}

type channelSourceSslCaCertificatePtrType ChannelSourceSslCaCertificateArgs

func ChannelSourceSslCaCertificatePtr(v *ChannelSourceSslCaCertificateArgs) ChannelSourceSslCaCertificatePtrInput {
	return (*channelSourceSslCaCertificatePtrType)(v)
}

func (*channelSourceSslCaCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelSourceSslCaCertificate)(nil)).Elem()
}

func (i *channelSourceSslCaCertificatePtrType) ToChannelSourceSslCaCertificatePtrOutput() ChannelSourceSslCaCertificatePtrOutput {
	return i.ToChannelSourceSslCaCertificatePtrOutputWithContext(context.Background())
}

func (i *channelSourceSslCaCertificatePtrType) ToChannelSourceSslCaCertificatePtrOutputWithContext(ctx context.Context) ChannelSourceSslCaCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelSourceSslCaCertificatePtrOutput)
}

type ChannelSourceSslCaCertificateOutput struct{ *pulumi.OutputState }

func (ChannelSourceSslCaCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelSourceSslCaCertificate)(nil)).Elem()
}

func (o ChannelSourceSslCaCertificateOutput) ToChannelSourceSslCaCertificateOutput() ChannelSourceSslCaCertificateOutput {
	return o
}

func (o ChannelSourceSslCaCertificateOutput) ToChannelSourceSslCaCertificateOutputWithContext(ctx context.Context) ChannelSourceSslCaCertificateOutput {
	return o
}

func (o ChannelSourceSslCaCertificateOutput) ToChannelSourceSslCaCertificatePtrOutput() ChannelSourceSslCaCertificatePtrOutput {
	return o.ToChannelSourceSslCaCertificatePtrOutputWithContext(context.Background())
}

func (o ChannelSourceSslCaCertificateOutput) ToChannelSourceSslCaCertificatePtrOutputWithContext(ctx context.Context) ChannelSourceSslCaCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelSourceSslCaCertificate) *ChannelSourceSslCaCertificate {
		return &v
	}).(ChannelSourceSslCaCertificatePtrOutput)
}

// (Updatable) The type of CA certificate.
func (o ChannelSourceSslCaCertificateOutput) CertificateType() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelSourceSslCaCertificate) string { return v.CertificateType }).(pulumi.StringOutput)
}

// (Updatable) The string containing the CA certificate in PEM format.
func (o ChannelSourceSslCaCertificateOutput) Contents() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelSourceSslCaCertificate) string { return v.Contents }).(pulumi.StringOutput)
}

type ChannelSourceSslCaCertificatePtrOutput struct{ *pulumi.OutputState }

func (ChannelSourceSslCaCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelSourceSslCaCertificate)(nil)).Elem()
}

func (o ChannelSourceSslCaCertificatePtrOutput) ToChannelSourceSslCaCertificatePtrOutput() ChannelSourceSslCaCertificatePtrOutput {
	return o
}

func (o ChannelSourceSslCaCertificatePtrOutput) ToChannelSourceSslCaCertificatePtrOutputWithContext(ctx context.Context) ChannelSourceSslCaCertificatePtrOutput {
	return o
}

func (o ChannelSourceSslCaCertificatePtrOutput) Elem() ChannelSourceSslCaCertificateOutput {
	return o.ApplyT(func(v *ChannelSourceSslCaCertificate) ChannelSourceSslCaCertificate {
		if v != nil {
			return *v
		}
		var ret ChannelSourceSslCaCertificate
		return ret
	}).(ChannelSourceSslCaCertificateOutput)
}

// (Updatable) The type of CA certificate.
func (o ChannelSourceSslCaCertificatePtrOutput) CertificateType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelSourceSslCaCertificate) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateType
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The string containing the CA certificate in PEM format.
func (o ChannelSourceSslCaCertificatePtrOutput) Contents() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelSourceSslCaCertificate) *string {
		if v == nil {
			return nil
		}
		return &v.Contents
	}).(pulumi.StringPtrOutput)
}

type ChannelTarget struct {
	// (Updatable) The username for the replication applier of the target MySQL DB System.
	ApplierUsername *string `pulumi:"applierUsername"`
	// (Updatable) The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
	ChannelName *string `pulumi:"channelName"`
	// The OCID of the target DB System.
	DbSystemId string `pulumi:"dbSystemId"`
	// (Updatable) Specifies the amount of time, in seconds, that the channel waits before  applying a transaction received from the source.
	DelayInSeconds *int `pulumi:"delayInSeconds"`
	// (Updatable) Replication filter rules to be applied at the DB System Channel target.
	Filters []ChannelTargetFilter `pulumi:"filters"`
	// (Updatable) Specifies how a replication channel handles the creation and alteration of tables  that do not have a primary key. The default value is set to ALLOW.
	TablesWithoutPrimaryKeyHandling *string `pulumi:"tablesWithoutPrimaryKeyHandling"`
	// (Updatable) The specific target identifier.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TargetType string `pulumi:"targetType"`
}

// ChannelTargetInput is an input type that accepts ChannelTargetArgs and ChannelTargetOutput values.
// You can construct a concrete instance of `ChannelTargetInput` via:
//
//	ChannelTargetArgs{...}
type ChannelTargetInput interface {
	pulumi.Input

	ToChannelTargetOutput() ChannelTargetOutput
	ToChannelTargetOutputWithContext(context.Context) ChannelTargetOutput
}

type ChannelTargetArgs struct {
	// (Updatable) The username for the replication applier of the target MySQL DB System.
	ApplierUsername pulumi.StringPtrInput `pulumi:"applierUsername"`
	// (Updatable) The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
	ChannelName pulumi.StringPtrInput `pulumi:"channelName"`
	// The OCID of the target DB System.
	DbSystemId pulumi.StringInput `pulumi:"dbSystemId"`
	// (Updatable) Specifies the amount of time, in seconds, that the channel waits before  applying a transaction received from the source.
	DelayInSeconds pulumi.IntPtrInput `pulumi:"delayInSeconds"`
	// (Updatable) Replication filter rules to be applied at the DB System Channel target.
	Filters ChannelTargetFilterArrayInput `pulumi:"filters"`
	// (Updatable) Specifies how a replication channel handles the creation and alteration of tables  that do not have a primary key. The default value is set to ALLOW.
	TablesWithoutPrimaryKeyHandling pulumi.StringPtrInput `pulumi:"tablesWithoutPrimaryKeyHandling"`
	// (Updatable) The specific target identifier.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TargetType pulumi.StringInput `pulumi:"targetType"`
}

func (ChannelTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelTarget)(nil)).Elem()
}

func (i ChannelTargetArgs) ToChannelTargetOutput() ChannelTargetOutput {
	return i.ToChannelTargetOutputWithContext(context.Background())
}

func (i ChannelTargetArgs) ToChannelTargetOutputWithContext(ctx context.Context) ChannelTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelTargetOutput)
}

func (i ChannelTargetArgs) ToChannelTargetPtrOutput() ChannelTargetPtrOutput {
	return i.ToChannelTargetPtrOutputWithContext(context.Background())
}

func (i ChannelTargetArgs) ToChannelTargetPtrOutputWithContext(ctx context.Context) ChannelTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelTargetOutput).ToChannelTargetPtrOutputWithContext(ctx)
}

// ChannelTargetPtrInput is an input type that accepts ChannelTargetArgs, ChannelTargetPtr and ChannelTargetPtrOutput values.
// You can construct a concrete instance of `ChannelTargetPtrInput` via:
//
//	        ChannelTargetArgs{...}
//
//	or:
//
//	        nil
type ChannelTargetPtrInput interface {
	pulumi.Input

	ToChannelTargetPtrOutput() ChannelTargetPtrOutput
	ToChannelTargetPtrOutputWithContext(context.Context) ChannelTargetPtrOutput
}

type channelTargetPtrType ChannelTargetArgs

func ChannelTargetPtr(v *ChannelTargetArgs) ChannelTargetPtrInput {
	return (*channelTargetPtrType)(v)
}

func (*channelTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelTarget)(nil)).Elem()
}

func (i *channelTargetPtrType) ToChannelTargetPtrOutput() ChannelTargetPtrOutput {
	return i.ToChannelTargetPtrOutputWithContext(context.Background())
}

func (i *channelTargetPtrType) ToChannelTargetPtrOutputWithContext(ctx context.Context) ChannelTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelTargetPtrOutput)
}

type ChannelTargetOutput struct{ *pulumi.OutputState }

func (ChannelTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelTarget)(nil)).Elem()
}

func (o ChannelTargetOutput) ToChannelTargetOutput() ChannelTargetOutput {
	return o
}

func (o ChannelTargetOutput) ToChannelTargetOutputWithContext(ctx context.Context) ChannelTargetOutput {
	return o
}

func (o ChannelTargetOutput) ToChannelTargetPtrOutput() ChannelTargetPtrOutput {
	return o.ToChannelTargetPtrOutputWithContext(context.Background())
}

func (o ChannelTargetOutput) ToChannelTargetPtrOutputWithContext(ctx context.Context) ChannelTargetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelTarget) *ChannelTarget {
		return &v
	}).(ChannelTargetPtrOutput)
}

// (Updatable) The username for the replication applier of the target MySQL DB System.
func (o ChannelTargetOutput) ApplierUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelTarget) *string { return v.ApplierUsername }).(pulumi.StringPtrOutput)
}

// (Updatable) The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
func (o ChannelTargetOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelTarget) *string { return v.ChannelName }).(pulumi.StringPtrOutput)
}

// The OCID of the target DB System.
func (o ChannelTargetOutput) DbSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelTarget) string { return v.DbSystemId }).(pulumi.StringOutput)
}

// (Updatable) Specifies the amount of time, in seconds, that the channel waits before  applying a transaction received from the source.
func (o ChannelTargetOutput) DelayInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelTarget) *int { return v.DelayInSeconds }).(pulumi.IntPtrOutput)
}

// (Updatable) Replication filter rules to be applied at the DB System Channel target.
func (o ChannelTargetOutput) Filters() ChannelTargetFilterArrayOutput {
	return o.ApplyT(func(v ChannelTarget) []ChannelTargetFilter { return v.Filters }).(ChannelTargetFilterArrayOutput)
}

// (Updatable) Specifies how a replication channel handles the creation and alteration of tables  that do not have a primary key. The default value is set to ALLOW.
func (o ChannelTargetOutput) TablesWithoutPrimaryKeyHandling() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelTarget) *string { return v.TablesWithoutPrimaryKeyHandling }).(pulumi.StringPtrOutput)
}

// (Updatable) The specific target identifier.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ChannelTargetOutput) TargetType() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelTarget) string { return v.TargetType }).(pulumi.StringOutput)
}

type ChannelTargetPtrOutput struct{ *pulumi.OutputState }

func (ChannelTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelTarget)(nil)).Elem()
}

func (o ChannelTargetPtrOutput) ToChannelTargetPtrOutput() ChannelTargetPtrOutput {
	return o
}

func (o ChannelTargetPtrOutput) ToChannelTargetPtrOutputWithContext(ctx context.Context) ChannelTargetPtrOutput {
	return o
}

func (o ChannelTargetPtrOutput) Elem() ChannelTargetOutput {
	return o.ApplyT(func(v *ChannelTarget) ChannelTarget {
		if v != nil {
			return *v
		}
		var ret ChannelTarget
		return ret
	}).(ChannelTargetOutput)
}

// (Updatable) The username for the replication applier of the target MySQL DB System.
func (o ChannelTargetPtrOutput) ApplierUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelTarget) *string {
		if v == nil {
			return nil
		}
		return v.ApplierUsername
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
func (o ChannelTargetPtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelTarget) *string {
		if v == nil {
			return nil
		}
		return v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// The OCID of the target DB System.
func (o ChannelTargetPtrOutput) DbSystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelTarget) *string {
		if v == nil {
			return nil
		}
		return &v.DbSystemId
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Specifies the amount of time, in seconds, that the channel waits before  applying a transaction received from the source.
func (o ChannelTargetPtrOutput) DelayInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelTarget) *int {
		if v == nil {
			return nil
		}
		return v.DelayInSeconds
	}).(pulumi.IntPtrOutput)
}

// (Updatable) Replication filter rules to be applied at the DB System Channel target.
func (o ChannelTargetPtrOutput) Filters() ChannelTargetFilterArrayOutput {
	return o.ApplyT(func(v *ChannelTarget) []ChannelTargetFilter {
		if v == nil {
			return nil
		}
		return v.Filters
	}).(ChannelTargetFilterArrayOutput)
}

// (Updatable) Specifies how a replication channel handles the creation and alteration of tables  that do not have a primary key. The default value is set to ALLOW.
func (o ChannelTargetPtrOutput) TablesWithoutPrimaryKeyHandling() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelTarget) *string {
		if v == nil {
			return nil
		}
		return v.TablesWithoutPrimaryKeyHandling
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The specific target identifier.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ChannelTargetPtrOutput) TargetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelTarget) *string {
		if v == nil {
			return nil
		}
		return &v.TargetType
	}).(pulumi.StringPtrOutput)
}

type ChannelTargetFilter struct {
	// (Updatable) The type of the filter rule.
	//
	// For details on each type, see [Replication Filtering Rules](https://dev.mysql.com/doc/refman/8.0/en/replication-rules.html)
	Type string `pulumi:"type"`
	// (Updatable) The body of the filter rule. This can represent a database, a table, or a database pair (represented as "db1->db2"). For more information, see [Replication Filtering Rules](https://dev.mysql.com/doc/refman/8.0/en/replication-rules.html).
	Value string `pulumi:"value"`
}

// ChannelTargetFilterInput is an input type that accepts ChannelTargetFilterArgs and ChannelTargetFilterOutput values.
// You can construct a concrete instance of `ChannelTargetFilterInput` via:
//
//	ChannelTargetFilterArgs{...}
type ChannelTargetFilterInput interface {
	pulumi.Input

	ToChannelTargetFilterOutput() ChannelTargetFilterOutput
	ToChannelTargetFilterOutputWithContext(context.Context) ChannelTargetFilterOutput
}

type ChannelTargetFilterArgs struct {
	// (Updatable) The type of the filter rule.
	//
	// For details on each type, see [Replication Filtering Rules](https://dev.mysql.com/doc/refman/8.0/en/replication-rules.html)
	Type pulumi.StringInput `pulumi:"type"`
	// (Updatable) The body of the filter rule. This can represent a database, a table, or a database pair (represented as "db1->db2"). For more information, see [Replication Filtering Rules](https://dev.mysql.com/doc/refman/8.0/en/replication-rules.html).
	Value pulumi.StringInput `pulumi:"value"`
}

func (ChannelTargetFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelTargetFilter)(nil)).Elem()
}

func (i ChannelTargetFilterArgs) ToChannelTargetFilterOutput() ChannelTargetFilterOutput {
	return i.ToChannelTargetFilterOutputWithContext(context.Background())
}

func (i ChannelTargetFilterArgs) ToChannelTargetFilterOutputWithContext(ctx context.Context) ChannelTargetFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelTargetFilterOutput)
}

// ChannelTargetFilterArrayInput is an input type that accepts ChannelTargetFilterArray and ChannelTargetFilterArrayOutput values.
// You can construct a concrete instance of `ChannelTargetFilterArrayInput` via:
//
//	ChannelTargetFilterArray{ ChannelTargetFilterArgs{...} }
type ChannelTargetFilterArrayInput interface {
	pulumi.Input

	ToChannelTargetFilterArrayOutput() ChannelTargetFilterArrayOutput
	ToChannelTargetFilterArrayOutputWithContext(context.Context) ChannelTargetFilterArrayOutput
}

type ChannelTargetFilterArray []ChannelTargetFilterInput

func (ChannelTargetFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelTargetFilter)(nil)).Elem()
}

func (i ChannelTargetFilterArray) ToChannelTargetFilterArrayOutput() ChannelTargetFilterArrayOutput {
	return i.ToChannelTargetFilterArrayOutputWithContext(context.Background())
}

func (i ChannelTargetFilterArray) ToChannelTargetFilterArrayOutputWithContext(ctx context.Context) ChannelTargetFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelTargetFilterArrayOutput)
}

type ChannelTargetFilterOutput struct{ *pulumi.OutputState }

func (ChannelTargetFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelTargetFilter)(nil)).Elem()
}

func (o ChannelTargetFilterOutput) ToChannelTargetFilterOutput() ChannelTargetFilterOutput {
	return o
}

func (o ChannelTargetFilterOutput) ToChannelTargetFilterOutputWithContext(ctx context.Context) ChannelTargetFilterOutput {
	return o
}

// (Updatable) The type of the filter rule.
//
// For details on each type, see [Replication Filtering Rules](https://dev.mysql.com/doc/refman/8.0/en/replication-rules.html)
func (o ChannelTargetFilterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelTargetFilter) string { return v.Type }).(pulumi.StringOutput)
}

// (Updatable) The body of the filter rule. This can represent a database, a table, or a database pair (represented as "db1->db2"). For more information, see [Replication Filtering Rules](https://dev.mysql.com/doc/refman/8.0/en/replication-rules.html).
func (o ChannelTargetFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelTargetFilter) string { return v.Value }).(pulumi.StringOutput)
}

type ChannelTargetFilterArrayOutput struct{ *pulumi.OutputState }

func (ChannelTargetFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelTargetFilter)(nil)).Elem()
}

func (o ChannelTargetFilterArrayOutput) ToChannelTargetFilterArrayOutput() ChannelTargetFilterArrayOutput {
	return o
}

func (o ChannelTargetFilterArrayOutput) ToChannelTargetFilterArrayOutputWithContext(ctx context.Context) ChannelTargetFilterArrayOutput {
	return o
}

func (o ChannelTargetFilterArrayOutput) Index(i pulumi.IntInput) ChannelTargetFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ChannelTargetFilter {
		return vs[0].([]ChannelTargetFilter)[vs[1].(int)]
	}).(ChannelTargetFilterOutput)
}

type HeatWaveClusterClusterNode struct {
	// The ID of the node within MySQL HeatWave cluster.
	NodeId *string `pulumi:"nodeId"`
	// (Updatable) The target state for the HeatWave cluster. Could be set to `ACTIVE` or `INACTIVE`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	State *string `pulumi:"state"`
	// The date and time the HeatWave cluster was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the HeatWave cluster was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeUpdated *string `pulumi:"timeUpdated"`
}

// HeatWaveClusterClusterNodeInput is an input type that accepts HeatWaveClusterClusterNodeArgs and HeatWaveClusterClusterNodeOutput values.
// You can construct a concrete instance of `HeatWaveClusterClusterNodeInput` via:
//
//	HeatWaveClusterClusterNodeArgs{...}
type HeatWaveClusterClusterNodeInput interface {
	pulumi.Input

	ToHeatWaveClusterClusterNodeOutput() HeatWaveClusterClusterNodeOutput
	ToHeatWaveClusterClusterNodeOutputWithContext(context.Context) HeatWaveClusterClusterNodeOutput
}

type HeatWaveClusterClusterNodeArgs struct {
	// The ID of the node within MySQL HeatWave cluster.
	NodeId pulumi.StringPtrInput `pulumi:"nodeId"`
	// (Updatable) The target state for the HeatWave cluster. Could be set to `ACTIVE` or `INACTIVE`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	State pulumi.StringPtrInput `pulumi:"state"`
	// The date and time the HeatWave cluster was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The time the HeatWave cluster was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeUpdated pulumi.StringPtrInput `pulumi:"timeUpdated"`
}

func (HeatWaveClusterClusterNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HeatWaveClusterClusterNode)(nil)).Elem()
}

func (i HeatWaveClusterClusterNodeArgs) ToHeatWaveClusterClusterNodeOutput() HeatWaveClusterClusterNodeOutput {
	return i.ToHeatWaveClusterClusterNodeOutputWithContext(context.Background())
}

func (i HeatWaveClusterClusterNodeArgs) ToHeatWaveClusterClusterNodeOutputWithContext(ctx context.Context) HeatWaveClusterClusterNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HeatWaveClusterClusterNodeOutput)
}

// HeatWaveClusterClusterNodeArrayInput is an input type that accepts HeatWaveClusterClusterNodeArray and HeatWaveClusterClusterNodeArrayOutput values.
// You can construct a concrete instance of `HeatWaveClusterClusterNodeArrayInput` via:
//
//	HeatWaveClusterClusterNodeArray{ HeatWaveClusterClusterNodeArgs{...} }
type HeatWaveClusterClusterNodeArrayInput interface {
	pulumi.Input

	ToHeatWaveClusterClusterNodeArrayOutput() HeatWaveClusterClusterNodeArrayOutput
	ToHeatWaveClusterClusterNodeArrayOutputWithContext(context.Context) HeatWaveClusterClusterNodeArrayOutput
}

type HeatWaveClusterClusterNodeArray []HeatWaveClusterClusterNodeInput

func (HeatWaveClusterClusterNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HeatWaveClusterClusterNode)(nil)).Elem()
}

func (i HeatWaveClusterClusterNodeArray) ToHeatWaveClusterClusterNodeArrayOutput() HeatWaveClusterClusterNodeArrayOutput {
	return i.ToHeatWaveClusterClusterNodeArrayOutputWithContext(context.Background())
}

func (i HeatWaveClusterClusterNodeArray) ToHeatWaveClusterClusterNodeArrayOutputWithContext(ctx context.Context) HeatWaveClusterClusterNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HeatWaveClusterClusterNodeArrayOutput)
}

type HeatWaveClusterClusterNodeOutput struct{ *pulumi.OutputState }

func (HeatWaveClusterClusterNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HeatWaveClusterClusterNode)(nil)).Elem()
}

func (o HeatWaveClusterClusterNodeOutput) ToHeatWaveClusterClusterNodeOutput() HeatWaveClusterClusterNodeOutput {
	return o
}

func (o HeatWaveClusterClusterNodeOutput) ToHeatWaveClusterClusterNodeOutputWithContext(ctx context.Context) HeatWaveClusterClusterNodeOutput {
	return o
}

// The ID of the node within MySQL HeatWave cluster.
func (o HeatWaveClusterClusterNodeOutput) NodeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HeatWaveClusterClusterNode) *string { return v.NodeId }).(pulumi.StringPtrOutput)
}

// (Updatable) The target state for the HeatWave cluster. Could be set to `ACTIVE` or `INACTIVE`.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o HeatWaveClusterClusterNodeOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HeatWaveClusterClusterNode) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The date and time the HeatWave cluster was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o HeatWaveClusterClusterNodeOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HeatWaveClusterClusterNode) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The time the HeatWave cluster was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o HeatWaveClusterClusterNodeOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HeatWaveClusterClusterNode) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

type HeatWaveClusterClusterNodeArrayOutput struct{ *pulumi.OutputState }

func (HeatWaveClusterClusterNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HeatWaveClusterClusterNode)(nil)).Elem()
}

func (o HeatWaveClusterClusterNodeArrayOutput) ToHeatWaveClusterClusterNodeArrayOutput() HeatWaveClusterClusterNodeArrayOutput {
	return o
}

func (o HeatWaveClusterClusterNodeArrayOutput) ToHeatWaveClusterClusterNodeArrayOutputWithContext(ctx context.Context) HeatWaveClusterClusterNodeArrayOutput {
	return o
}

func (o HeatWaveClusterClusterNodeArrayOutput) Index(i pulumi.IntInput) HeatWaveClusterClusterNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HeatWaveClusterClusterNode {
		return vs[0].([]HeatWaveClusterClusterNode)[vs[1].(int)]
	}).(HeatWaveClusterClusterNodeOutput)
}

type MysqlBackupDbSystemSnapshot struct {
	// The username for the administrative user.
	AdminUsername *string `pulumi:"adminUsername"`
	// The Availability Domain where the primary DB System should be located.
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// The Backup policy for the DB System.
	BackupPolicies []MysqlBackupDbSystemSnapshotBackupPolicy `pulumi:"backupPolicies"`
	// (Updatable) The OCID of the compartment the backup exists in.
	CompartmentId *string `pulumi:"compartmentId"`
	// The OCID of the Configuration to be used for Instances in this DB System.
	ConfigurationId *string `pulumi:"configurationId"`
	// Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
	CrashRecovery *string `pulumi:"crashRecovery"`
	// DEPRECATED: User specified size of the data volume. May be less than current allocatedStorageSizeInGBs. Replaced by dataStorage.dataStorageSizeInGBs.
	DataStorageSizeInGb *int `pulumi:"dataStorageSizeInGb"`
	// Data Storage information.
	DataStorages []MysqlBackupDbSystemSnapshotDataStorage `pulumi:"dataStorages"`
	// Whether to enable monitoring via the Database Management service.
	DatabaseManagement *string `pulumi:"databaseManagement"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// The Deletion policy for the DB System.
	DeletionPolicies []MysqlBackupDbSystemSnapshotDeletionPolicy `pulumi:"deletionPolicies"`
	// (Updatable) A user-supplied description for the backup.
	Description *string `pulumi:"description"`
	// (Updatable) A user-supplied display name for the backup.
	DisplayName *string `pulumi:"displayName"`
	// Encrypt data details.
	EncryptDatas []MysqlBackupDbSystemSnapshotEncryptData `pulumi:"encryptDatas"`
	// The network endpoints available for this DB System.
	Endpoints []MysqlBackupDbSystemSnapshotEndpoint `pulumi:"endpoints"`
	// The name of the Fault Domain the DB System is located in.
	FaultDomain *string `pulumi:"faultDomain"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The hostname for the primary endpoint of the DB System. Used for DNS. The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com"). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
	HostnameLabel *string `pulumi:"hostnameLabel"`
	// OCID of the backup itself
	Id *string `pulumi:"id"`
	// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
	IpAddress *string `pulumi:"ipAddress"`
	// Specifies if the DB System is highly available.
	IsHighlyAvailable *bool `pulumi:"isHighlyAvailable"`
	// The Maintenance Policy for the DB System or Read Replica that this model is included in.
	Maintenances []MysqlBackupDbSystemSnapshotMaintenance `pulumi:"maintenances"`
	// The MySQL server version of the DB System used for backup.
	MysqlVersion *string `pulumi:"mysqlVersion"`
	// Network Security Group OCIDs used for the VNIC attachment.
	NsgIds []string `pulumi:"nsgIds"`
	// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
	Port *int `pulumi:"port"`
	// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
	PortX *int `pulumi:"portX"`
	// The read endpoint of a DB System.
	ReadEndpoints []MysqlBackupDbSystemSnapshotReadEndpoint `pulumi:"readEndpoints"`
	// The region identifier of the region where the DB system exists. For more information, please see [Regions and Availability Domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm).
	Region *string `pulumi:"region"`
	// REST configuration details.
	Rests []MysqlBackupDbSystemSnapshotRest `pulumi:"rests"`
	// Secure connection configuration details.
	SecureConnections []MysqlBackupDbSystemSnapshotSecureConnection `pulumi:"secureConnections"`
	// The shape of the DB System instance used for backup.
	ShapeName *string `pulumi:"shapeName"`
	// The OCID of the subnet the DB System is associated with.
	SubnetId *string `pulumi:"subnetId"`
}

// MysqlBackupDbSystemSnapshotInput is an input type that accepts MysqlBackupDbSystemSnapshotArgs and MysqlBackupDbSystemSnapshotOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotInput` via:
//
//	MysqlBackupDbSystemSnapshotArgs{...}
type MysqlBackupDbSystemSnapshotInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotOutput() MysqlBackupDbSystemSnapshotOutput
	ToMysqlBackupDbSystemSnapshotOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotOutput
}

type MysqlBackupDbSystemSnapshotArgs struct {
	// The username for the administrative user.
	AdminUsername pulumi.StringPtrInput `pulumi:"adminUsername"`
	// The Availability Domain where the primary DB System should be located.
	AvailabilityDomain pulumi.StringPtrInput `pulumi:"availabilityDomain"`
	// The Backup policy for the DB System.
	BackupPolicies MysqlBackupDbSystemSnapshotBackupPolicyArrayInput `pulumi:"backupPolicies"`
	// (Updatable) The OCID of the compartment the backup exists in.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// The OCID of the Configuration to be used for Instances in this DB System.
	ConfigurationId pulumi.StringPtrInput `pulumi:"configurationId"`
	// Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
	CrashRecovery pulumi.StringPtrInput `pulumi:"crashRecovery"`
	// DEPRECATED: User specified size of the data volume. May be less than current allocatedStorageSizeInGBs. Replaced by dataStorage.dataStorageSizeInGBs.
	DataStorageSizeInGb pulumi.IntPtrInput `pulumi:"dataStorageSizeInGb"`
	// Data Storage information.
	DataStorages MysqlBackupDbSystemSnapshotDataStorageArrayInput `pulumi:"dataStorages"`
	// Whether to enable monitoring via the Database Management service.
	DatabaseManagement pulumi.StringPtrInput `pulumi:"databaseManagement"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// The Deletion policy for the DB System.
	DeletionPolicies MysqlBackupDbSystemSnapshotDeletionPolicyArrayInput `pulumi:"deletionPolicies"`
	// (Updatable) A user-supplied description for the backup.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Updatable) A user-supplied display name for the backup.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Encrypt data details.
	EncryptDatas MysqlBackupDbSystemSnapshotEncryptDataArrayInput `pulumi:"encryptDatas"`
	// The network endpoints available for this DB System.
	Endpoints MysqlBackupDbSystemSnapshotEndpointArrayInput `pulumi:"endpoints"`
	// The name of the Fault Domain the DB System is located in.
	FaultDomain pulumi.StringPtrInput `pulumi:"faultDomain"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// The hostname for the primary endpoint of the DB System. Used for DNS. The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com"). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
	HostnameLabel pulumi.StringPtrInput `pulumi:"hostnameLabel"`
	// OCID of the backup itself
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// Specifies if the DB System is highly available.
	IsHighlyAvailable pulumi.BoolPtrInput `pulumi:"isHighlyAvailable"`
	// The Maintenance Policy for the DB System or Read Replica that this model is included in.
	Maintenances MysqlBackupDbSystemSnapshotMaintenanceArrayInput `pulumi:"maintenances"`
	// The MySQL server version of the DB System used for backup.
	MysqlVersion pulumi.StringPtrInput `pulumi:"mysqlVersion"`
	// Network Security Group OCIDs used for the VNIC attachment.
	NsgIds pulumi.StringArrayInput `pulumi:"nsgIds"`
	// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
	PortX pulumi.IntPtrInput `pulumi:"portX"`
	// The read endpoint of a DB System.
	ReadEndpoints MysqlBackupDbSystemSnapshotReadEndpointArrayInput `pulumi:"readEndpoints"`
	// The region identifier of the region where the DB system exists. For more information, please see [Regions and Availability Domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm).
	Region pulumi.StringPtrInput `pulumi:"region"`
	// REST configuration details.
	Rests MysqlBackupDbSystemSnapshotRestArrayInput `pulumi:"rests"`
	// Secure connection configuration details.
	SecureConnections MysqlBackupDbSystemSnapshotSecureConnectionArrayInput `pulumi:"secureConnections"`
	// The shape of the DB System instance used for backup.
	ShapeName pulumi.StringPtrInput `pulumi:"shapeName"`
	// The OCID of the subnet the DB System is associated with.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
}

func (MysqlBackupDbSystemSnapshotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshot)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotArgs) ToMysqlBackupDbSystemSnapshotOutput() MysqlBackupDbSystemSnapshotOutput {
	return i.ToMysqlBackupDbSystemSnapshotOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotArgs) ToMysqlBackupDbSystemSnapshotOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotOutput)
}

// MysqlBackupDbSystemSnapshotArrayInput is an input type that accepts MysqlBackupDbSystemSnapshotArray and MysqlBackupDbSystemSnapshotArrayOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotArrayInput` via:
//
//	MysqlBackupDbSystemSnapshotArray{ MysqlBackupDbSystemSnapshotArgs{...} }
type MysqlBackupDbSystemSnapshotArrayInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotArrayOutput() MysqlBackupDbSystemSnapshotArrayOutput
	ToMysqlBackupDbSystemSnapshotArrayOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotArrayOutput
}

type MysqlBackupDbSystemSnapshotArray []MysqlBackupDbSystemSnapshotInput

func (MysqlBackupDbSystemSnapshotArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshot)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotArray) ToMysqlBackupDbSystemSnapshotArrayOutput() MysqlBackupDbSystemSnapshotArrayOutput {
	return i.ToMysqlBackupDbSystemSnapshotArrayOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotArray) ToMysqlBackupDbSystemSnapshotArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotArrayOutput)
}

type MysqlBackupDbSystemSnapshotOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshot)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotOutput) ToMysqlBackupDbSystemSnapshotOutput() MysqlBackupDbSystemSnapshotOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotOutput) ToMysqlBackupDbSystemSnapshotOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotOutput {
	return o
}

// The username for the administrative user.
func (o MysqlBackupDbSystemSnapshotOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *string { return v.AdminUsername }).(pulumi.StringPtrOutput)
}

// The Availability Domain where the primary DB System should be located.
func (o MysqlBackupDbSystemSnapshotOutput) AvailabilityDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *string { return v.AvailabilityDomain }).(pulumi.StringPtrOutput)
}

// The Backup policy for the DB System.
func (o MysqlBackupDbSystemSnapshotOutput) BackupPolicies() MysqlBackupDbSystemSnapshotBackupPolicyArrayOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) []MysqlBackupDbSystemSnapshotBackupPolicy { return v.BackupPolicies }).(MysqlBackupDbSystemSnapshotBackupPolicyArrayOutput)
}

// (Updatable) The OCID of the compartment the backup exists in.
func (o MysqlBackupDbSystemSnapshotOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// The OCID of the Configuration to be used for Instances in this DB System.
func (o MysqlBackupDbSystemSnapshotOutput) ConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *string { return v.ConfigurationId }).(pulumi.StringPtrOutput)
}

// Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
func (o MysqlBackupDbSystemSnapshotOutput) CrashRecovery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *string { return v.CrashRecovery }).(pulumi.StringPtrOutput)
}

// DEPRECATED: User specified size of the data volume. May be less than current allocatedStorageSizeInGBs. Replaced by dataStorage.dataStorageSizeInGBs.
func (o MysqlBackupDbSystemSnapshotOutput) DataStorageSizeInGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *int { return v.DataStorageSizeInGb }).(pulumi.IntPtrOutput)
}

// Data Storage information.
func (o MysqlBackupDbSystemSnapshotOutput) DataStorages() MysqlBackupDbSystemSnapshotDataStorageArrayOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) []MysqlBackupDbSystemSnapshotDataStorage { return v.DataStorages }).(MysqlBackupDbSystemSnapshotDataStorageArrayOutput)
}

// Whether to enable monitoring via the Database Management service.
func (o MysqlBackupDbSystemSnapshotOutput) DatabaseManagement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *string { return v.DatabaseManagement }).(pulumi.StringPtrOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o MysqlBackupDbSystemSnapshotOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// The Deletion policy for the DB System.
func (o MysqlBackupDbSystemSnapshotOutput) DeletionPolicies() MysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) []MysqlBackupDbSystemSnapshotDeletionPolicy {
		return v.DeletionPolicies
	}).(MysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput)
}

// (Updatable) A user-supplied description for the backup.
func (o MysqlBackupDbSystemSnapshotOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Updatable) A user-supplied display name for the backup.
func (o MysqlBackupDbSystemSnapshotOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Encrypt data details.
func (o MysqlBackupDbSystemSnapshotOutput) EncryptDatas() MysqlBackupDbSystemSnapshotEncryptDataArrayOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) []MysqlBackupDbSystemSnapshotEncryptData { return v.EncryptDatas }).(MysqlBackupDbSystemSnapshotEncryptDataArrayOutput)
}

// The network endpoints available for this DB System.
func (o MysqlBackupDbSystemSnapshotOutput) Endpoints() MysqlBackupDbSystemSnapshotEndpointArrayOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) []MysqlBackupDbSystemSnapshotEndpoint { return v.Endpoints }).(MysqlBackupDbSystemSnapshotEndpointArrayOutput)
}

// The name of the Fault Domain the DB System is located in.
func (o MysqlBackupDbSystemSnapshotOutput) FaultDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *string { return v.FaultDomain }).(pulumi.StringPtrOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o MysqlBackupDbSystemSnapshotOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The hostname for the primary endpoint of the DB System. Used for DNS. The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com"). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
func (o MysqlBackupDbSystemSnapshotOutput) HostnameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *string { return v.HostnameLabel }).(pulumi.StringPtrOutput)
}

// OCID of the backup itself
func (o MysqlBackupDbSystemSnapshotOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
func (o MysqlBackupDbSystemSnapshotOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// Specifies if the DB System is highly available.
func (o MysqlBackupDbSystemSnapshotOutput) IsHighlyAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *bool { return v.IsHighlyAvailable }).(pulumi.BoolPtrOutput)
}

// The Maintenance Policy for the DB System or Read Replica that this model is included in.
func (o MysqlBackupDbSystemSnapshotOutput) Maintenances() MysqlBackupDbSystemSnapshotMaintenanceArrayOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) []MysqlBackupDbSystemSnapshotMaintenance { return v.Maintenances }).(MysqlBackupDbSystemSnapshotMaintenanceArrayOutput)
}

// The MySQL server version of the DB System used for backup.
func (o MysqlBackupDbSystemSnapshotOutput) MysqlVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *string { return v.MysqlVersion }).(pulumi.StringPtrOutput)
}

// Network Security Group OCIDs used for the VNIC attachment.
func (o MysqlBackupDbSystemSnapshotOutput) NsgIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) []string { return v.NsgIds }).(pulumi.StringArrayOutput)
}

// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
func (o MysqlBackupDbSystemSnapshotOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
func (o MysqlBackupDbSystemSnapshotOutput) PortX() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *int { return v.PortX }).(pulumi.IntPtrOutput)
}

// The read endpoint of a DB System.
func (o MysqlBackupDbSystemSnapshotOutput) ReadEndpoints() MysqlBackupDbSystemSnapshotReadEndpointArrayOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) []MysqlBackupDbSystemSnapshotReadEndpoint { return v.ReadEndpoints }).(MysqlBackupDbSystemSnapshotReadEndpointArrayOutput)
}

// The region identifier of the region where the DB system exists. For more information, please see [Regions and Availability Domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm).
func (o MysqlBackupDbSystemSnapshotOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// REST configuration details.
func (o MysqlBackupDbSystemSnapshotOutput) Rests() MysqlBackupDbSystemSnapshotRestArrayOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) []MysqlBackupDbSystemSnapshotRest { return v.Rests }).(MysqlBackupDbSystemSnapshotRestArrayOutput)
}

// Secure connection configuration details.
func (o MysqlBackupDbSystemSnapshotOutput) SecureConnections() MysqlBackupDbSystemSnapshotSecureConnectionArrayOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) []MysqlBackupDbSystemSnapshotSecureConnection {
		return v.SecureConnections
	}).(MysqlBackupDbSystemSnapshotSecureConnectionArrayOutput)
}

// The shape of the DB System instance used for backup.
func (o MysqlBackupDbSystemSnapshotOutput) ShapeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *string { return v.ShapeName }).(pulumi.StringPtrOutput)
}

// The OCID of the subnet the DB System is associated with.
func (o MysqlBackupDbSystemSnapshotOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshot) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type MysqlBackupDbSystemSnapshotArrayOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshot)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotArrayOutput) ToMysqlBackupDbSystemSnapshotArrayOutput() MysqlBackupDbSystemSnapshotArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotArrayOutput) ToMysqlBackupDbSystemSnapshotArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotArrayOutput) Index(i pulumi.IntInput) MysqlBackupDbSystemSnapshotOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlBackupDbSystemSnapshot {
		return vs[0].([]MysqlBackupDbSystemSnapshot)[vs[1].(int)]
	}).(MysqlBackupDbSystemSnapshotOutput)
}

type MysqlBackupDbSystemSnapshotBackupPolicy struct {
	// List of policies of a DB system to schedule cross-region DB system backup copy.
	CopyPolicies []MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicy `pulumi:"copyPolicies"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Specifies if the DB System read endpoint is enabled or not.
	IsEnabled *bool `pulumi:"isEnabled"`
	// The PITR policy for the DB System.
	PitrPolicies []MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy `pulumi:"pitrPolicies"`
	// (Updatable) Number of days to retain this backup.
	RetentionInDays *int `pulumi:"retentionInDays"`
	// (Updatable) Retains the backup to be deleted due to the retention policy in DELETE SCHEDULED state for 7 days before permanently deleting it.
	SoftDelete *string `pulumi:"softDelete"`
	// The start time of the maintenance window.
	WindowStartTime *string `pulumi:"windowStartTime"`
}

// MysqlBackupDbSystemSnapshotBackupPolicyInput is an input type that accepts MysqlBackupDbSystemSnapshotBackupPolicyArgs and MysqlBackupDbSystemSnapshotBackupPolicyOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotBackupPolicyInput` via:
//
//	MysqlBackupDbSystemSnapshotBackupPolicyArgs{...}
type MysqlBackupDbSystemSnapshotBackupPolicyInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotBackupPolicyOutput() MysqlBackupDbSystemSnapshotBackupPolicyOutput
	ToMysqlBackupDbSystemSnapshotBackupPolicyOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotBackupPolicyOutput
}

type MysqlBackupDbSystemSnapshotBackupPolicyArgs struct {
	// List of policies of a DB system to schedule cross-region DB system backup copy.
	CopyPolicies MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayInput `pulumi:"copyPolicies"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// Specifies if the DB System read endpoint is enabled or not.
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// The PITR policy for the DB System.
	PitrPolicies MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayInput `pulumi:"pitrPolicies"`
	// (Updatable) Number of days to retain this backup.
	RetentionInDays pulumi.IntPtrInput `pulumi:"retentionInDays"`
	// (Updatable) Retains the backup to be deleted due to the retention policy in DELETE SCHEDULED state for 7 days before permanently deleting it.
	SoftDelete pulumi.StringPtrInput `pulumi:"softDelete"`
	// The start time of the maintenance window.
	WindowStartTime pulumi.StringPtrInput `pulumi:"windowStartTime"`
}

func (MysqlBackupDbSystemSnapshotBackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshotBackupPolicy)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotBackupPolicyArgs) ToMysqlBackupDbSystemSnapshotBackupPolicyOutput() MysqlBackupDbSystemSnapshotBackupPolicyOutput {
	return i.ToMysqlBackupDbSystemSnapshotBackupPolicyOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotBackupPolicyArgs) ToMysqlBackupDbSystemSnapshotBackupPolicyOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotBackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotBackupPolicyOutput)
}

// MysqlBackupDbSystemSnapshotBackupPolicyArrayInput is an input type that accepts MysqlBackupDbSystemSnapshotBackupPolicyArray and MysqlBackupDbSystemSnapshotBackupPolicyArrayOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotBackupPolicyArrayInput` via:
//
//	MysqlBackupDbSystemSnapshotBackupPolicyArray{ MysqlBackupDbSystemSnapshotBackupPolicyArgs{...} }
type MysqlBackupDbSystemSnapshotBackupPolicyArrayInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput() MysqlBackupDbSystemSnapshotBackupPolicyArrayOutput
	ToMysqlBackupDbSystemSnapshotBackupPolicyArrayOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotBackupPolicyArrayOutput
}

type MysqlBackupDbSystemSnapshotBackupPolicyArray []MysqlBackupDbSystemSnapshotBackupPolicyInput

func (MysqlBackupDbSystemSnapshotBackupPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshotBackupPolicy)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotBackupPolicyArray) ToMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput() MysqlBackupDbSystemSnapshotBackupPolicyArrayOutput {
	return i.ToMysqlBackupDbSystemSnapshotBackupPolicyArrayOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotBackupPolicyArray) ToMysqlBackupDbSystemSnapshotBackupPolicyArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotBackupPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotBackupPolicyArrayOutput)
}

type MysqlBackupDbSystemSnapshotBackupPolicyOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotBackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshotBackupPolicy)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotBackupPolicyOutput) ToMysqlBackupDbSystemSnapshotBackupPolicyOutput() MysqlBackupDbSystemSnapshotBackupPolicyOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotBackupPolicyOutput) ToMysqlBackupDbSystemSnapshotBackupPolicyOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotBackupPolicyOutput {
	return o
}

// List of policies of a DB system to schedule cross-region DB system backup copy.
func (o MysqlBackupDbSystemSnapshotBackupPolicyOutput) CopyPolicies() MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotBackupPolicy) []MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicy {
		return v.CopyPolicies
	}).(MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o MysqlBackupDbSystemSnapshotBackupPolicyOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotBackupPolicy) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o MysqlBackupDbSystemSnapshotBackupPolicyOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotBackupPolicy) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Specifies if the DB System read endpoint is enabled or not.
func (o MysqlBackupDbSystemSnapshotBackupPolicyOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotBackupPolicy) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// The PITR policy for the DB System.
func (o MysqlBackupDbSystemSnapshotBackupPolicyOutput) PitrPolicies() MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotBackupPolicy) []MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy {
		return v.PitrPolicies
	}).(MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput)
}

// (Updatable) Number of days to retain this backup.
func (o MysqlBackupDbSystemSnapshotBackupPolicyOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotBackupPolicy) *int { return v.RetentionInDays }).(pulumi.IntPtrOutput)
}

// (Updatable) Retains the backup to be deleted due to the retention policy in DELETE SCHEDULED state for 7 days before permanently deleting it.
func (o MysqlBackupDbSystemSnapshotBackupPolicyOutput) SoftDelete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotBackupPolicy) *string { return v.SoftDelete }).(pulumi.StringPtrOutput)
}

// The start time of the maintenance window.
func (o MysqlBackupDbSystemSnapshotBackupPolicyOutput) WindowStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotBackupPolicy) *string { return v.WindowStartTime }).(pulumi.StringPtrOutput)
}

type MysqlBackupDbSystemSnapshotBackupPolicyArrayOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotBackupPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshotBackupPolicy)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotBackupPolicyArrayOutput) ToMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput() MysqlBackupDbSystemSnapshotBackupPolicyArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotBackupPolicyArrayOutput) ToMysqlBackupDbSystemSnapshotBackupPolicyArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotBackupPolicyArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotBackupPolicyArrayOutput) Index(i pulumi.IntInput) MysqlBackupDbSystemSnapshotBackupPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlBackupDbSystemSnapshotBackupPolicy {
		return vs[0].([]MysqlBackupDbSystemSnapshotBackupPolicy)[vs[1].(int)]
	}).(MysqlBackupDbSystemSnapshotBackupPolicyOutput)
}

type MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicy struct {
	// Number of days to retain the copied DB system backup.
	BackupCopyRetentionInDays *int `pulumi:"backupCopyRetentionInDays"`
	// The destination region name to which the DB system backup will be copied.
	CopyToRegion *string `pulumi:"copyToRegion"`
}

// MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyInput is an input type that accepts MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArgs and MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyInput` via:
//
//	MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArgs{...}
type MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput() MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput
	ToMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput
}

type MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArgs struct {
	// Number of days to retain the copied DB system backup.
	BackupCopyRetentionInDays pulumi.IntPtrInput `pulumi:"backupCopyRetentionInDays"`
	// The destination region name to which the DB system backup will be copied.
	CopyToRegion pulumi.StringPtrInput `pulumi:"copyToRegion"`
}

func (MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicy)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArgs) ToMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput() MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput {
	return i.ToMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArgs) ToMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput)
}

// MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayInput is an input type that accepts MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArray and MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayInput` via:
//
//	MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArray{ MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArgs{...} }
type MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput() MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput
	ToMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput
}

type MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArray []MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyInput

func (MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicy)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArray) ToMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput() MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput {
	return i.ToMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArray) ToMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput)
}

type MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicy)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput) ToMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput() MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput) ToMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput {
	return o
}

// Number of days to retain the copied DB system backup.
func (o MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput) BackupCopyRetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicy) *int { return v.BackupCopyRetentionInDays }).(pulumi.IntPtrOutput)
}

// The destination region name to which the DB system backup will be copied.
func (o MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput) CopyToRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicy) *string { return v.CopyToRegion }).(pulumi.StringPtrOutput)
}

type MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicy)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput) ToMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput() MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput) ToMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput) Index(i pulumi.IntInput) MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicy {
		return vs[0].([]MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicy)[vs[1].(int)]
	}).(MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput)
}

type MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy struct {
	// Specifies if the DB System read endpoint is enabled or not.
	IsEnabled *bool `pulumi:"isEnabled"`
}

// MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyInput is an input type that accepts MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs and MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyInput` via:
//
//	MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs{...}
type MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput() MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput
	ToMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput
}

type MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs struct {
	// Specifies if the DB System read endpoint is enabled or not.
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
}

func (MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs) ToMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput() MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput {
	return i.ToMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs) ToMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput)
}

// MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayInput is an input type that accepts MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArray and MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayInput` via:
//
//	MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArray{ MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs{...} }
type MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput() MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput
	ToMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput
}

type MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArray []MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyInput

func (MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArray) ToMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput() MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput {
	return i.ToMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArray) ToMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput)
}

type MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput) ToMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput() MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput) ToMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput {
	return o
}

// Specifies if the DB System read endpoint is enabled or not.
func (o MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

type MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput) ToMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput() MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput) ToMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput) Index(i pulumi.IntInput) MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy {
		return vs[0].([]MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy)[vs[1].(int)]
	}).(MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput)
}

type MysqlBackupDbSystemSnapshotDataStorage struct {
	// The actual allocated storage size for the DB System. This may be higher than dataStorageSizeInGBs if an automatic storage expansion has occurred.
	AllocatedStorageSizeInGbs *int `pulumi:"allocatedStorageSizeInGbs"`
	// DEPRECATED: User specified size of the data volume. May be less than current allocatedStorageSizeInGBs. Replaced by dataStorage.dataStorageSizeInGBs.
	DataStorageSizeInGb *int `pulumi:"dataStorageSizeInGb"`
	// The absolute limit the DB System's storage size may ever expand to, either manually or automatically. This limit is based based on the initial dataStorageSizeInGBs when the DB System was first created. Both dataStorageSizeInGBs and maxDataStorageSizeInGBs can not exceed this value.
	DataStorageSizeLimitInGbs *int `pulumi:"dataStorageSizeLimitInGbs"`
	// Enable/disable automatic storage expansion. When set to true, the DB System will automatically add storage incrementally up to the value specified in maxStorageSizeInGBs.
	IsAutoExpandStorageEnabled *bool `pulumi:"isAutoExpandStorageEnabled"`
	// Maximum storage size this DB System can expand to. When isAutoExpandStorageEnabled is set to true, the DB System will add storage incrementally up to this value.
	MaxStorageSizeInGbs *int `pulumi:"maxStorageSizeInGbs"`
}

// MysqlBackupDbSystemSnapshotDataStorageInput is an input type that accepts MysqlBackupDbSystemSnapshotDataStorageArgs and MysqlBackupDbSystemSnapshotDataStorageOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotDataStorageInput` via:
//
//	MysqlBackupDbSystemSnapshotDataStorageArgs{...}
type MysqlBackupDbSystemSnapshotDataStorageInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotDataStorageOutput() MysqlBackupDbSystemSnapshotDataStorageOutput
	ToMysqlBackupDbSystemSnapshotDataStorageOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotDataStorageOutput
}

type MysqlBackupDbSystemSnapshotDataStorageArgs struct {
	// The actual allocated storage size for the DB System. This may be higher than dataStorageSizeInGBs if an automatic storage expansion has occurred.
	AllocatedStorageSizeInGbs pulumi.IntPtrInput `pulumi:"allocatedStorageSizeInGbs"`
	// DEPRECATED: User specified size of the data volume. May be less than current allocatedStorageSizeInGBs. Replaced by dataStorage.dataStorageSizeInGBs.
	DataStorageSizeInGb pulumi.IntPtrInput `pulumi:"dataStorageSizeInGb"`
	// The absolute limit the DB System's storage size may ever expand to, either manually or automatically. This limit is based based on the initial dataStorageSizeInGBs when the DB System was first created. Both dataStorageSizeInGBs and maxDataStorageSizeInGBs can not exceed this value.
	DataStorageSizeLimitInGbs pulumi.IntPtrInput `pulumi:"dataStorageSizeLimitInGbs"`
	// Enable/disable automatic storage expansion. When set to true, the DB System will automatically add storage incrementally up to the value specified in maxStorageSizeInGBs.
	IsAutoExpandStorageEnabled pulumi.BoolPtrInput `pulumi:"isAutoExpandStorageEnabled"`
	// Maximum storage size this DB System can expand to. When isAutoExpandStorageEnabled is set to true, the DB System will add storage incrementally up to this value.
	MaxStorageSizeInGbs pulumi.IntPtrInput `pulumi:"maxStorageSizeInGbs"`
}

func (MysqlBackupDbSystemSnapshotDataStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshotDataStorage)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotDataStorageArgs) ToMysqlBackupDbSystemSnapshotDataStorageOutput() MysqlBackupDbSystemSnapshotDataStorageOutput {
	return i.ToMysqlBackupDbSystemSnapshotDataStorageOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotDataStorageArgs) ToMysqlBackupDbSystemSnapshotDataStorageOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotDataStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotDataStorageOutput)
}

// MysqlBackupDbSystemSnapshotDataStorageArrayInput is an input type that accepts MysqlBackupDbSystemSnapshotDataStorageArray and MysqlBackupDbSystemSnapshotDataStorageArrayOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotDataStorageArrayInput` via:
//
//	MysqlBackupDbSystemSnapshotDataStorageArray{ MysqlBackupDbSystemSnapshotDataStorageArgs{...} }
type MysqlBackupDbSystemSnapshotDataStorageArrayInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotDataStorageArrayOutput() MysqlBackupDbSystemSnapshotDataStorageArrayOutput
	ToMysqlBackupDbSystemSnapshotDataStorageArrayOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotDataStorageArrayOutput
}

type MysqlBackupDbSystemSnapshotDataStorageArray []MysqlBackupDbSystemSnapshotDataStorageInput

func (MysqlBackupDbSystemSnapshotDataStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshotDataStorage)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotDataStorageArray) ToMysqlBackupDbSystemSnapshotDataStorageArrayOutput() MysqlBackupDbSystemSnapshotDataStorageArrayOutput {
	return i.ToMysqlBackupDbSystemSnapshotDataStorageArrayOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotDataStorageArray) ToMysqlBackupDbSystemSnapshotDataStorageArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotDataStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotDataStorageArrayOutput)
}

type MysqlBackupDbSystemSnapshotDataStorageOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotDataStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshotDataStorage)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotDataStorageOutput) ToMysqlBackupDbSystemSnapshotDataStorageOutput() MysqlBackupDbSystemSnapshotDataStorageOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotDataStorageOutput) ToMysqlBackupDbSystemSnapshotDataStorageOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotDataStorageOutput {
	return o
}

// The actual allocated storage size for the DB System. This may be higher than dataStorageSizeInGBs if an automatic storage expansion has occurred.
func (o MysqlBackupDbSystemSnapshotDataStorageOutput) AllocatedStorageSizeInGbs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotDataStorage) *int { return v.AllocatedStorageSizeInGbs }).(pulumi.IntPtrOutput)
}

// DEPRECATED: User specified size of the data volume. May be less than current allocatedStorageSizeInGBs. Replaced by dataStorage.dataStorageSizeInGBs.
func (o MysqlBackupDbSystemSnapshotDataStorageOutput) DataStorageSizeInGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotDataStorage) *int { return v.DataStorageSizeInGb }).(pulumi.IntPtrOutput)
}

// The absolute limit the DB System's storage size may ever expand to, either manually or automatically. This limit is based based on the initial dataStorageSizeInGBs when the DB System was first created. Both dataStorageSizeInGBs and maxDataStorageSizeInGBs can not exceed this value.
func (o MysqlBackupDbSystemSnapshotDataStorageOutput) DataStorageSizeLimitInGbs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotDataStorage) *int { return v.DataStorageSizeLimitInGbs }).(pulumi.IntPtrOutput)
}

// Enable/disable automatic storage expansion. When set to true, the DB System will automatically add storage incrementally up to the value specified in maxStorageSizeInGBs.
func (o MysqlBackupDbSystemSnapshotDataStorageOutput) IsAutoExpandStorageEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotDataStorage) *bool { return v.IsAutoExpandStorageEnabled }).(pulumi.BoolPtrOutput)
}

// Maximum storage size this DB System can expand to. When isAutoExpandStorageEnabled is set to true, the DB System will add storage incrementally up to this value.
func (o MysqlBackupDbSystemSnapshotDataStorageOutput) MaxStorageSizeInGbs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotDataStorage) *int { return v.MaxStorageSizeInGbs }).(pulumi.IntPtrOutput)
}

type MysqlBackupDbSystemSnapshotDataStorageArrayOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotDataStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshotDataStorage)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotDataStorageArrayOutput) ToMysqlBackupDbSystemSnapshotDataStorageArrayOutput() MysqlBackupDbSystemSnapshotDataStorageArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotDataStorageArrayOutput) ToMysqlBackupDbSystemSnapshotDataStorageArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotDataStorageArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotDataStorageArrayOutput) Index(i pulumi.IntInput) MysqlBackupDbSystemSnapshotDataStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlBackupDbSystemSnapshotDataStorage {
		return vs[0].([]MysqlBackupDbSystemSnapshotDataStorage)[vs[1].(int)]
	}).(MysqlBackupDbSystemSnapshotDataStorageOutput)
}

type MysqlBackupDbSystemSnapshotDeletionPolicy struct {
	// Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
	AutomaticBackupRetention *string `pulumi:"automaticBackupRetention"`
	// Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
	FinalBackup *string `pulumi:"finalBackup"`
	// Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
	IsDeleteProtected *bool `pulumi:"isDeleteProtected"`
}

// MysqlBackupDbSystemSnapshotDeletionPolicyInput is an input type that accepts MysqlBackupDbSystemSnapshotDeletionPolicyArgs and MysqlBackupDbSystemSnapshotDeletionPolicyOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotDeletionPolicyInput` via:
//
//	MysqlBackupDbSystemSnapshotDeletionPolicyArgs{...}
type MysqlBackupDbSystemSnapshotDeletionPolicyInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotDeletionPolicyOutput() MysqlBackupDbSystemSnapshotDeletionPolicyOutput
	ToMysqlBackupDbSystemSnapshotDeletionPolicyOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotDeletionPolicyOutput
}

type MysqlBackupDbSystemSnapshotDeletionPolicyArgs struct {
	// Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
	AutomaticBackupRetention pulumi.StringPtrInput `pulumi:"automaticBackupRetention"`
	// Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
	FinalBackup pulumi.StringPtrInput `pulumi:"finalBackup"`
	// Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
	IsDeleteProtected pulumi.BoolPtrInput `pulumi:"isDeleteProtected"`
}

func (MysqlBackupDbSystemSnapshotDeletionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshotDeletionPolicy)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotDeletionPolicyArgs) ToMysqlBackupDbSystemSnapshotDeletionPolicyOutput() MysqlBackupDbSystemSnapshotDeletionPolicyOutput {
	return i.ToMysqlBackupDbSystemSnapshotDeletionPolicyOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotDeletionPolicyArgs) ToMysqlBackupDbSystemSnapshotDeletionPolicyOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotDeletionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotDeletionPolicyOutput)
}

// MysqlBackupDbSystemSnapshotDeletionPolicyArrayInput is an input type that accepts MysqlBackupDbSystemSnapshotDeletionPolicyArray and MysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotDeletionPolicyArrayInput` via:
//
//	MysqlBackupDbSystemSnapshotDeletionPolicyArray{ MysqlBackupDbSystemSnapshotDeletionPolicyArgs{...} }
type MysqlBackupDbSystemSnapshotDeletionPolicyArrayInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput() MysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput
	ToMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput
}

type MysqlBackupDbSystemSnapshotDeletionPolicyArray []MysqlBackupDbSystemSnapshotDeletionPolicyInput

func (MysqlBackupDbSystemSnapshotDeletionPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshotDeletionPolicy)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotDeletionPolicyArray) ToMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput() MysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput {
	return i.ToMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotDeletionPolicyArray) ToMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput)
}

type MysqlBackupDbSystemSnapshotDeletionPolicyOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotDeletionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshotDeletionPolicy)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotDeletionPolicyOutput) ToMysqlBackupDbSystemSnapshotDeletionPolicyOutput() MysqlBackupDbSystemSnapshotDeletionPolicyOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotDeletionPolicyOutput) ToMysqlBackupDbSystemSnapshotDeletionPolicyOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotDeletionPolicyOutput {
	return o
}

// Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
func (o MysqlBackupDbSystemSnapshotDeletionPolicyOutput) AutomaticBackupRetention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotDeletionPolicy) *string { return v.AutomaticBackupRetention }).(pulumi.StringPtrOutput)
}

// Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
func (o MysqlBackupDbSystemSnapshotDeletionPolicyOutput) FinalBackup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotDeletionPolicy) *string { return v.FinalBackup }).(pulumi.StringPtrOutput)
}

// Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
func (o MysqlBackupDbSystemSnapshotDeletionPolicyOutput) IsDeleteProtected() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotDeletionPolicy) *bool { return v.IsDeleteProtected }).(pulumi.BoolPtrOutput)
}

type MysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshotDeletionPolicy)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput) ToMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput() MysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput) ToMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput) Index(i pulumi.IntInput) MysqlBackupDbSystemSnapshotDeletionPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlBackupDbSystemSnapshotDeletionPolicy {
		return vs[0].([]MysqlBackupDbSystemSnapshotDeletionPolicy)[vs[1].(int)]
	}).(MysqlBackupDbSystemSnapshotDeletionPolicyOutput)
}

type MysqlBackupDbSystemSnapshotEncryptData struct {
	// Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
	KeyGenerationType *string `pulumi:"keyGenerationType"`
	// The OCID of the key to use.
	KeyId *string `pulumi:"keyId"`
}

// MysqlBackupDbSystemSnapshotEncryptDataInput is an input type that accepts MysqlBackupDbSystemSnapshotEncryptDataArgs and MysqlBackupDbSystemSnapshotEncryptDataOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotEncryptDataInput` via:
//
//	MysqlBackupDbSystemSnapshotEncryptDataArgs{...}
type MysqlBackupDbSystemSnapshotEncryptDataInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotEncryptDataOutput() MysqlBackupDbSystemSnapshotEncryptDataOutput
	ToMysqlBackupDbSystemSnapshotEncryptDataOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotEncryptDataOutput
}

type MysqlBackupDbSystemSnapshotEncryptDataArgs struct {
	// Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
	KeyGenerationType pulumi.StringPtrInput `pulumi:"keyGenerationType"`
	// The OCID of the key to use.
	KeyId pulumi.StringPtrInput `pulumi:"keyId"`
}

func (MysqlBackupDbSystemSnapshotEncryptDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshotEncryptData)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotEncryptDataArgs) ToMysqlBackupDbSystemSnapshotEncryptDataOutput() MysqlBackupDbSystemSnapshotEncryptDataOutput {
	return i.ToMysqlBackupDbSystemSnapshotEncryptDataOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotEncryptDataArgs) ToMysqlBackupDbSystemSnapshotEncryptDataOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotEncryptDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotEncryptDataOutput)
}

// MysqlBackupDbSystemSnapshotEncryptDataArrayInput is an input type that accepts MysqlBackupDbSystemSnapshotEncryptDataArray and MysqlBackupDbSystemSnapshotEncryptDataArrayOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotEncryptDataArrayInput` via:
//
//	MysqlBackupDbSystemSnapshotEncryptDataArray{ MysqlBackupDbSystemSnapshotEncryptDataArgs{...} }
type MysqlBackupDbSystemSnapshotEncryptDataArrayInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotEncryptDataArrayOutput() MysqlBackupDbSystemSnapshotEncryptDataArrayOutput
	ToMysqlBackupDbSystemSnapshotEncryptDataArrayOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotEncryptDataArrayOutput
}

type MysqlBackupDbSystemSnapshotEncryptDataArray []MysqlBackupDbSystemSnapshotEncryptDataInput

func (MysqlBackupDbSystemSnapshotEncryptDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshotEncryptData)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotEncryptDataArray) ToMysqlBackupDbSystemSnapshotEncryptDataArrayOutput() MysqlBackupDbSystemSnapshotEncryptDataArrayOutput {
	return i.ToMysqlBackupDbSystemSnapshotEncryptDataArrayOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotEncryptDataArray) ToMysqlBackupDbSystemSnapshotEncryptDataArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotEncryptDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotEncryptDataArrayOutput)
}

type MysqlBackupDbSystemSnapshotEncryptDataOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotEncryptDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshotEncryptData)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotEncryptDataOutput) ToMysqlBackupDbSystemSnapshotEncryptDataOutput() MysqlBackupDbSystemSnapshotEncryptDataOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotEncryptDataOutput) ToMysqlBackupDbSystemSnapshotEncryptDataOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotEncryptDataOutput {
	return o
}

// Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
func (o MysqlBackupDbSystemSnapshotEncryptDataOutput) KeyGenerationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotEncryptData) *string { return v.KeyGenerationType }).(pulumi.StringPtrOutput)
}

// The OCID of the key to use.
func (o MysqlBackupDbSystemSnapshotEncryptDataOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotEncryptData) *string { return v.KeyId }).(pulumi.StringPtrOutput)
}

type MysqlBackupDbSystemSnapshotEncryptDataArrayOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotEncryptDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshotEncryptData)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotEncryptDataArrayOutput) ToMysqlBackupDbSystemSnapshotEncryptDataArrayOutput() MysqlBackupDbSystemSnapshotEncryptDataArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotEncryptDataArrayOutput) ToMysqlBackupDbSystemSnapshotEncryptDataArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotEncryptDataArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotEncryptDataArrayOutput) Index(i pulumi.IntInput) MysqlBackupDbSystemSnapshotEncryptDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlBackupDbSystemSnapshotEncryptData {
		return vs[0].([]MysqlBackupDbSystemSnapshotEncryptData)[vs[1].(int)]
	}).(MysqlBackupDbSystemSnapshotEncryptDataOutput)
}

type MysqlBackupDbSystemSnapshotEndpoint struct {
	// The network address of the DB System.
	Hostname *string `pulumi:"hostname"`
	// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
	IpAddress *string `pulumi:"ipAddress"`
	// The access modes from the client that this endpoint supports.
	Modes []string `pulumi:"modes"`
	// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
	Port *int `pulumi:"port"`
	// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
	PortX *int `pulumi:"portX"`
	// The OCID of the resource that this endpoint is attached to.
	ResourceId *string `pulumi:"resourceId"`
	// The type of endpoint that clients and connectors can connect to.
	ResourceType *string `pulumi:"resourceType"`
	// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
	Status *string `pulumi:"status"`
	// Additional information about the current endpoint status.
	StatusDetails *string `pulumi:"statusDetails"`
}

// MysqlBackupDbSystemSnapshotEndpointInput is an input type that accepts MysqlBackupDbSystemSnapshotEndpointArgs and MysqlBackupDbSystemSnapshotEndpointOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotEndpointInput` via:
//
//	MysqlBackupDbSystemSnapshotEndpointArgs{...}
type MysqlBackupDbSystemSnapshotEndpointInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotEndpointOutput() MysqlBackupDbSystemSnapshotEndpointOutput
	ToMysqlBackupDbSystemSnapshotEndpointOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotEndpointOutput
}

type MysqlBackupDbSystemSnapshotEndpointArgs struct {
	// The network address of the DB System.
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The access modes from the client that this endpoint supports.
	Modes pulumi.StringArrayInput `pulumi:"modes"`
	// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
	PortX pulumi.IntPtrInput `pulumi:"portX"`
	// The OCID of the resource that this endpoint is attached to.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
	// The type of endpoint that clients and connectors can connect to.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Additional information about the current endpoint status.
	StatusDetails pulumi.StringPtrInput `pulumi:"statusDetails"`
}

func (MysqlBackupDbSystemSnapshotEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshotEndpoint)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotEndpointArgs) ToMysqlBackupDbSystemSnapshotEndpointOutput() MysqlBackupDbSystemSnapshotEndpointOutput {
	return i.ToMysqlBackupDbSystemSnapshotEndpointOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotEndpointArgs) ToMysqlBackupDbSystemSnapshotEndpointOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotEndpointOutput)
}

// MysqlBackupDbSystemSnapshotEndpointArrayInput is an input type that accepts MysqlBackupDbSystemSnapshotEndpointArray and MysqlBackupDbSystemSnapshotEndpointArrayOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotEndpointArrayInput` via:
//
//	MysqlBackupDbSystemSnapshotEndpointArray{ MysqlBackupDbSystemSnapshotEndpointArgs{...} }
type MysqlBackupDbSystemSnapshotEndpointArrayInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotEndpointArrayOutput() MysqlBackupDbSystemSnapshotEndpointArrayOutput
	ToMysqlBackupDbSystemSnapshotEndpointArrayOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotEndpointArrayOutput
}

type MysqlBackupDbSystemSnapshotEndpointArray []MysqlBackupDbSystemSnapshotEndpointInput

func (MysqlBackupDbSystemSnapshotEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshotEndpoint)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotEndpointArray) ToMysqlBackupDbSystemSnapshotEndpointArrayOutput() MysqlBackupDbSystemSnapshotEndpointArrayOutput {
	return i.ToMysqlBackupDbSystemSnapshotEndpointArrayOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotEndpointArray) ToMysqlBackupDbSystemSnapshotEndpointArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotEndpointArrayOutput)
}

type MysqlBackupDbSystemSnapshotEndpointOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshotEndpoint)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotEndpointOutput) ToMysqlBackupDbSystemSnapshotEndpointOutput() MysqlBackupDbSystemSnapshotEndpointOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotEndpointOutput) ToMysqlBackupDbSystemSnapshotEndpointOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotEndpointOutput {
	return o
}

// The network address of the DB System.
func (o MysqlBackupDbSystemSnapshotEndpointOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotEndpoint) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
func (o MysqlBackupDbSystemSnapshotEndpointOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotEndpoint) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The access modes from the client that this endpoint supports.
func (o MysqlBackupDbSystemSnapshotEndpointOutput) Modes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotEndpoint) []string { return v.Modes }).(pulumi.StringArrayOutput)
}

// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
func (o MysqlBackupDbSystemSnapshotEndpointOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotEndpoint) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
func (o MysqlBackupDbSystemSnapshotEndpointOutput) PortX() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotEndpoint) *int { return v.PortX }).(pulumi.IntPtrOutput)
}

// The OCID of the resource that this endpoint is attached to.
func (o MysqlBackupDbSystemSnapshotEndpointOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotEndpoint) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// The type of endpoint that clients and connectors can connect to.
func (o MysqlBackupDbSystemSnapshotEndpointOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotEndpoint) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
func (o MysqlBackupDbSystemSnapshotEndpointOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotEndpoint) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Additional information about the current endpoint status.
func (o MysqlBackupDbSystemSnapshotEndpointOutput) StatusDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotEndpoint) *string { return v.StatusDetails }).(pulumi.StringPtrOutput)
}

type MysqlBackupDbSystemSnapshotEndpointArrayOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshotEndpoint)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotEndpointArrayOutput) ToMysqlBackupDbSystemSnapshotEndpointArrayOutput() MysqlBackupDbSystemSnapshotEndpointArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotEndpointArrayOutput) ToMysqlBackupDbSystemSnapshotEndpointArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotEndpointArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotEndpointArrayOutput) Index(i pulumi.IntInput) MysqlBackupDbSystemSnapshotEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlBackupDbSystemSnapshotEndpoint {
		return vs[0].([]MysqlBackupDbSystemSnapshotEndpoint)[vs[1].(int)]
	}).(MysqlBackupDbSystemSnapshotEndpointOutput)
}

type MysqlBackupDbSystemSnapshotMaintenance struct {
	// The start time of the maintenance window.
	WindowStartTime *string `pulumi:"windowStartTime"`
}

// MysqlBackupDbSystemSnapshotMaintenanceInput is an input type that accepts MysqlBackupDbSystemSnapshotMaintenanceArgs and MysqlBackupDbSystemSnapshotMaintenanceOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotMaintenanceInput` via:
//
//	MysqlBackupDbSystemSnapshotMaintenanceArgs{...}
type MysqlBackupDbSystemSnapshotMaintenanceInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotMaintenanceOutput() MysqlBackupDbSystemSnapshotMaintenanceOutput
	ToMysqlBackupDbSystemSnapshotMaintenanceOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotMaintenanceOutput
}

type MysqlBackupDbSystemSnapshotMaintenanceArgs struct {
	// The start time of the maintenance window.
	WindowStartTime pulumi.StringPtrInput `pulumi:"windowStartTime"`
}

func (MysqlBackupDbSystemSnapshotMaintenanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshotMaintenance)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotMaintenanceArgs) ToMysqlBackupDbSystemSnapshotMaintenanceOutput() MysqlBackupDbSystemSnapshotMaintenanceOutput {
	return i.ToMysqlBackupDbSystemSnapshotMaintenanceOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotMaintenanceArgs) ToMysqlBackupDbSystemSnapshotMaintenanceOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotMaintenanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotMaintenanceOutput)
}

// MysqlBackupDbSystemSnapshotMaintenanceArrayInput is an input type that accepts MysqlBackupDbSystemSnapshotMaintenanceArray and MysqlBackupDbSystemSnapshotMaintenanceArrayOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotMaintenanceArrayInput` via:
//
//	MysqlBackupDbSystemSnapshotMaintenanceArray{ MysqlBackupDbSystemSnapshotMaintenanceArgs{...} }
type MysqlBackupDbSystemSnapshotMaintenanceArrayInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotMaintenanceArrayOutput() MysqlBackupDbSystemSnapshotMaintenanceArrayOutput
	ToMysqlBackupDbSystemSnapshotMaintenanceArrayOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotMaintenanceArrayOutput
}

type MysqlBackupDbSystemSnapshotMaintenanceArray []MysqlBackupDbSystemSnapshotMaintenanceInput

func (MysqlBackupDbSystemSnapshotMaintenanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshotMaintenance)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotMaintenanceArray) ToMysqlBackupDbSystemSnapshotMaintenanceArrayOutput() MysqlBackupDbSystemSnapshotMaintenanceArrayOutput {
	return i.ToMysqlBackupDbSystemSnapshotMaintenanceArrayOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotMaintenanceArray) ToMysqlBackupDbSystemSnapshotMaintenanceArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotMaintenanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotMaintenanceArrayOutput)
}

type MysqlBackupDbSystemSnapshotMaintenanceOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotMaintenanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshotMaintenance)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotMaintenanceOutput) ToMysqlBackupDbSystemSnapshotMaintenanceOutput() MysqlBackupDbSystemSnapshotMaintenanceOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotMaintenanceOutput) ToMysqlBackupDbSystemSnapshotMaintenanceOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotMaintenanceOutput {
	return o
}

// The start time of the maintenance window.
func (o MysqlBackupDbSystemSnapshotMaintenanceOutput) WindowStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotMaintenance) *string { return v.WindowStartTime }).(pulumi.StringPtrOutput)
}

type MysqlBackupDbSystemSnapshotMaintenanceArrayOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotMaintenanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshotMaintenance)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotMaintenanceArrayOutput) ToMysqlBackupDbSystemSnapshotMaintenanceArrayOutput() MysqlBackupDbSystemSnapshotMaintenanceArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotMaintenanceArrayOutput) ToMysqlBackupDbSystemSnapshotMaintenanceArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotMaintenanceArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotMaintenanceArrayOutput) Index(i pulumi.IntInput) MysqlBackupDbSystemSnapshotMaintenanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlBackupDbSystemSnapshotMaintenance {
		return vs[0].([]MysqlBackupDbSystemSnapshotMaintenance)[vs[1].(int)]
	}).(MysqlBackupDbSystemSnapshotMaintenanceOutput)
}

type MysqlBackupDbSystemSnapshotReadEndpoint struct {
	// A list of IP addresses of read replicas that are excluded from serving read requests.
	ExcludeIps []string `pulumi:"excludeIps"`
	// Specifies if the DB System read endpoint is enabled or not.
	IsEnabled *bool `pulumi:"isEnabled"`
	// The hostname for the read endpoint of the DB System. Used for DNS.
	ReadEndpointHostnameLabel *string `pulumi:"readEndpointHostnameLabel"`
	// The IP address the DB System read endpoint is configured to listen on. A private IP address of your choice to assign to the read endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
	ReadEndpointIpAddress *string `pulumi:"readEndpointIpAddress"`
}

// MysqlBackupDbSystemSnapshotReadEndpointInput is an input type that accepts MysqlBackupDbSystemSnapshotReadEndpointArgs and MysqlBackupDbSystemSnapshotReadEndpointOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotReadEndpointInput` via:
//
//	MysqlBackupDbSystemSnapshotReadEndpointArgs{...}
type MysqlBackupDbSystemSnapshotReadEndpointInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotReadEndpointOutput() MysqlBackupDbSystemSnapshotReadEndpointOutput
	ToMysqlBackupDbSystemSnapshotReadEndpointOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotReadEndpointOutput
}

type MysqlBackupDbSystemSnapshotReadEndpointArgs struct {
	// A list of IP addresses of read replicas that are excluded from serving read requests.
	ExcludeIps pulumi.StringArrayInput `pulumi:"excludeIps"`
	// Specifies if the DB System read endpoint is enabled or not.
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// The hostname for the read endpoint of the DB System. Used for DNS.
	ReadEndpointHostnameLabel pulumi.StringPtrInput `pulumi:"readEndpointHostnameLabel"`
	// The IP address the DB System read endpoint is configured to listen on. A private IP address of your choice to assign to the read endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
	ReadEndpointIpAddress pulumi.StringPtrInput `pulumi:"readEndpointIpAddress"`
}

func (MysqlBackupDbSystemSnapshotReadEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshotReadEndpoint)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotReadEndpointArgs) ToMysqlBackupDbSystemSnapshotReadEndpointOutput() MysqlBackupDbSystemSnapshotReadEndpointOutput {
	return i.ToMysqlBackupDbSystemSnapshotReadEndpointOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotReadEndpointArgs) ToMysqlBackupDbSystemSnapshotReadEndpointOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotReadEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotReadEndpointOutput)
}

// MysqlBackupDbSystemSnapshotReadEndpointArrayInput is an input type that accepts MysqlBackupDbSystemSnapshotReadEndpointArray and MysqlBackupDbSystemSnapshotReadEndpointArrayOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotReadEndpointArrayInput` via:
//
//	MysqlBackupDbSystemSnapshotReadEndpointArray{ MysqlBackupDbSystemSnapshotReadEndpointArgs{...} }
type MysqlBackupDbSystemSnapshotReadEndpointArrayInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotReadEndpointArrayOutput() MysqlBackupDbSystemSnapshotReadEndpointArrayOutput
	ToMysqlBackupDbSystemSnapshotReadEndpointArrayOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotReadEndpointArrayOutput
}

type MysqlBackupDbSystemSnapshotReadEndpointArray []MysqlBackupDbSystemSnapshotReadEndpointInput

func (MysqlBackupDbSystemSnapshotReadEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshotReadEndpoint)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotReadEndpointArray) ToMysqlBackupDbSystemSnapshotReadEndpointArrayOutput() MysqlBackupDbSystemSnapshotReadEndpointArrayOutput {
	return i.ToMysqlBackupDbSystemSnapshotReadEndpointArrayOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotReadEndpointArray) ToMysqlBackupDbSystemSnapshotReadEndpointArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotReadEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotReadEndpointArrayOutput)
}

type MysqlBackupDbSystemSnapshotReadEndpointOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotReadEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshotReadEndpoint)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotReadEndpointOutput) ToMysqlBackupDbSystemSnapshotReadEndpointOutput() MysqlBackupDbSystemSnapshotReadEndpointOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotReadEndpointOutput) ToMysqlBackupDbSystemSnapshotReadEndpointOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotReadEndpointOutput {
	return o
}

// A list of IP addresses of read replicas that are excluded from serving read requests.
func (o MysqlBackupDbSystemSnapshotReadEndpointOutput) ExcludeIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotReadEndpoint) []string { return v.ExcludeIps }).(pulumi.StringArrayOutput)
}

// Specifies if the DB System read endpoint is enabled or not.
func (o MysqlBackupDbSystemSnapshotReadEndpointOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotReadEndpoint) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// The hostname for the read endpoint of the DB System. Used for DNS.
func (o MysqlBackupDbSystemSnapshotReadEndpointOutput) ReadEndpointHostnameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotReadEndpoint) *string { return v.ReadEndpointHostnameLabel }).(pulumi.StringPtrOutput)
}

// The IP address the DB System read endpoint is configured to listen on. A private IP address of your choice to assign to the read endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
func (o MysqlBackupDbSystemSnapshotReadEndpointOutput) ReadEndpointIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotReadEndpoint) *string { return v.ReadEndpointIpAddress }).(pulumi.StringPtrOutput)
}

type MysqlBackupDbSystemSnapshotReadEndpointArrayOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotReadEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshotReadEndpoint)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotReadEndpointArrayOutput) ToMysqlBackupDbSystemSnapshotReadEndpointArrayOutput() MysqlBackupDbSystemSnapshotReadEndpointArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotReadEndpointArrayOutput) ToMysqlBackupDbSystemSnapshotReadEndpointArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotReadEndpointArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotReadEndpointArrayOutput) Index(i pulumi.IntInput) MysqlBackupDbSystemSnapshotReadEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlBackupDbSystemSnapshotReadEndpoint {
		return vs[0].([]MysqlBackupDbSystemSnapshotReadEndpoint)[vs[1].(int)]
	}).(MysqlBackupDbSystemSnapshotReadEndpointOutput)
}

type MysqlBackupDbSystemSnapshotRest struct {
	// Select how REST is configured across the DB System instances.
	Configuration *string `pulumi:"configuration"`
	// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
	Port *int `pulumi:"port"`
}

// MysqlBackupDbSystemSnapshotRestInput is an input type that accepts MysqlBackupDbSystemSnapshotRestArgs and MysqlBackupDbSystemSnapshotRestOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotRestInput` via:
//
//	MysqlBackupDbSystemSnapshotRestArgs{...}
type MysqlBackupDbSystemSnapshotRestInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotRestOutput() MysqlBackupDbSystemSnapshotRestOutput
	ToMysqlBackupDbSystemSnapshotRestOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotRestOutput
}

type MysqlBackupDbSystemSnapshotRestArgs struct {
	// Select how REST is configured across the DB System instances.
	Configuration pulumi.StringPtrInput `pulumi:"configuration"`
	// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (MysqlBackupDbSystemSnapshotRestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshotRest)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotRestArgs) ToMysqlBackupDbSystemSnapshotRestOutput() MysqlBackupDbSystemSnapshotRestOutput {
	return i.ToMysqlBackupDbSystemSnapshotRestOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotRestArgs) ToMysqlBackupDbSystemSnapshotRestOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotRestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotRestOutput)
}

// MysqlBackupDbSystemSnapshotRestArrayInput is an input type that accepts MysqlBackupDbSystemSnapshotRestArray and MysqlBackupDbSystemSnapshotRestArrayOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotRestArrayInput` via:
//
//	MysqlBackupDbSystemSnapshotRestArray{ MysqlBackupDbSystemSnapshotRestArgs{...} }
type MysqlBackupDbSystemSnapshotRestArrayInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotRestArrayOutput() MysqlBackupDbSystemSnapshotRestArrayOutput
	ToMysqlBackupDbSystemSnapshotRestArrayOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotRestArrayOutput
}

type MysqlBackupDbSystemSnapshotRestArray []MysqlBackupDbSystemSnapshotRestInput

func (MysqlBackupDbSystemSnapshotRestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshotRest)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotRestArray) ToMysqlBackupDbSystemSnapshotRestArrayOutput() MysqlBackupDbSystemSnapshotRestArrayOutput {
	return i.ToMysqlBackupDbSystemSnapshotRestArrayOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotRestArray) ToMysqlBackupDbSystemSnapshotRestArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotRestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotRestArrayOutput)
}

type MysqlBackupDbSystemSnapshotRestOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotRestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshotRest)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotRestOutput) ToMysqlBackupDbSystemSnapshotRestOutput() MysqlBackupDbSystemSnapshotRestOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotRestOutput) ToMysqlBackupDbSystemSnapshotRestOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotRestOutput {
	return o
}

// Select how REST is configured across the DB System instances.
func (o MysqlBackupDbSystemSnapshotRestOutput) Configuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotRest) *string { return v.Configuration }).(pulumi.StringPtrOutput)
}

// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
func (o MysqlBackupDbSystemSnapshotRestOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotRest) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type MysqlBackupDbSystemSnapshotRestArrayOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotRestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshotRest)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotRestArrayOutput) ToMysqlBackupDbSystemSnapshotRestArrayOutput() MysqlBackupDbSystemSnapshotRestArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotRestArrayOutput) ToMysqlBackupDbSystemSnapshotRestArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotRestArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotRestArrayOutput) Index(i pulumi.IntInput) MysqlBackupDbSystemSnapshotRestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlBackupDbSystemSnapshotRest {
		return vs[0].([]MysqlBackupDbSystemSnapshotRest)[vs[1].(int)]
	}).(MysqlBackupDbSystemSnapshotRestOutput)
}

type MysqlBackupDbSystemSnapshotSecureConnection struct {
	// Select whether to use MySQL Database Service-managed certificate (SYSTEM) or your own certificate (BYOC).
	CertificateGenerationType *string `pulumi:"certificateGenerationType"`
	// The OCID of the certificate to use.
	CertificateId *string `pulumi:"certificateId"`
}

// MysqlBackupDbSystemSnapshotSecureConnectionInput is an input type that accepts MysqlBackupDbSystemSnapshotSecureConnectionArgs and MysqlBackupDbSystemSnapshotSecureConnectionOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotSecureConnectionInput` via:
//
//	MysqlBackupDbSystemSnapshotSecureConnectionArgs{...}
type MysqlBackupDbSystemSnapshotSecureConnectionInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotSecureConnectionOutput() MysqlBackupDbSystemSnapshotSecureConnectionOutput
	ToMysqlBackupDbSystemSnapshotSecureConnectionOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotSecureConnectionOutput
}

type MysqlBackupDbSystemSnapshotSecureConnectionArgs struct {
	// Select whether to use MySQL Database Service-managed certificate (SYSTEM) or your own certificate (BYOC).
	CertificateGenerationType pulumi.StringPtrInput `pulumi:"certificateGenerationType"`
	// The OCID of the certificate to use.
	CertificateId pulumi.StringPtrInput `pulumi:"certificateId"`
}

func (MysqlBackupDbSystemSnapshotSecureConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshotSecureConnection)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotSecureConnectionArgs) ToMysqlBackupDbSystemSnapshotSecureConnectionOutput() MysqlBackupDbSystemSnapshotSecureConnectionOutput {
	return i.ToMysqlBackupDbSystemSnapshotSecureConnectionOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotSecureConnectionArgs) ToMysqlBackupDbSystemSnapshotSecureConnectionOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotSecureConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotSecureConnectionOutput)
}

// MysqlBackupDbSystemSnapshotSecureConnectionArrayInput is an input type that accepts MysqlBackupDbSystemSnapshotSecureConnectionArray and MysqlBackupDbSystemSnapshotSecureConnectionArrayOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotSecureConnectionArrayInput` via:
//
//	MysqlBackupDbSystemSnapshotSecureConnectionArray{ MysqlBackupDbSystemSnapshotSecureConnectionArgs{...} }
type MysqlBackupDbSystemSnapshotSecureConnectionArrayInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotSecureConnectionArrayOutput() MysqlBackupDbSystemSnapshotSecureConnectionArrayOutput
	ToMysqlBackupDbSystemSnapshotSecureConnectionArrayOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotSecureConnectionArrayOutput
}

type MysqlBackupDbSystemSnapshotSecureConnectionArray []MysqlBackupDbSystemSnapshotSecureConnectionInput

func (MysqlBackupDbSystemSnapshotSecureConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshotSecureConnection)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotSecureConnectionArray) ToMysqlBackupDbSystemSnapshotSecureConnectionArrayOutput() MysqlBackupDbSystemSnapshotSecureConnectionArrayOutput {
	return i.ToMysqlBackupDbSystemSnapshotSecureConnectionArrayOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotSecureConnectionArray) ToMysqlBackupDbSystemSnapshotSecureConnectionArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotSecureConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotSecureConnectionArrayOutput)
}

type MysqlBackupDbSystemSnapshotSecureConnectionOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotSecureConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshotSecureConnection)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotSecureConnectionOutput) ToMysqlBackupDbSystemSnapshotSecureConnectionOutput() MysqlBackupDbSystemSnapshotSecureConnectionOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotSecureConnectionOutput) ToMysqlBackupDbSystemSnapshotSecureConnectionOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotSecureConnectionOutput {
	return o
}

// Select whether to use MySQL Database Service-managed certificate (SYSTEM) or your own certificate (BYOC).
func (o MysqlBackupDbSystemSnapshotSecureConnectionOutput) CertificateGenerationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotSecureConnection) *string { return v.CertificateGenerationType }).(pulumi.StringPtrOutput)
}

// The OCID of the certificate to use.
func (o MysqlBackupDbSystemSnapshotSecureConnectionOutput) CertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotSecureConnection) *string { return v.CertificateId }).(pulumi.StringPtrOutput)
}

type MysqlBackupDbSystemSnapshotSecureConnectionArrayOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotSecureConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshotSecureConnection)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotSecureConnectionArrayOutput) ToMysqlBackupDbSystemSnapshotSecureConnectionArrayOutput() MysqlBackupDbSystemSnapshotSecureConnectionArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotSecureConnectionArrayOutput) ToMysqlBackupDbSystemSnapshotSecureConnectionArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotSecureConnectionArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotSecureConnectionArrayOutput) Index(i pulumi.IntInput) MysqlBackupDbSystemSnapshotSecureConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlBackupDbSystemSnapshotSecureConnection {
		return vs[0].([]MysqlBackupDbSystemSnapshotSecureConnection)[vs[1].(int)]
	}).(MysqlBackupDbSystemSnapshotSecureConnectionOutput)
}

type MysqlBackupDbSystemSnapshotSummary struct {
	// (Updatable) A user-supplied display name for the backup.
	DisplayName *string `pulumi:"displayName"`
	// OCID of the backup itself
	Id *string `pulumi:"id"`
	// The region identifier of the region where the DB system exists. For more information, please see [Regions and Availability Domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm).
	Region *string `pulumi:"region"`
}

// MysqlBackupDbSystemSnapshotSummaryInput is an input type that accepts MysqlBackupDbSystemSnapshotSummaryArgs and MysqlBackupDbSystemSnapshotSummaryOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotSummaryInput` via:
//
//	MysqlBackupDbSystemSnapshotSummaryArgs{...}
type MysqlBackupDbSystemSnapshotSummaryInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotSummaryOutput() MysqlBackupDbSystemSnapshotSummaryOutput
	ToMysqlBackupDbSystemSnapshotSummaryOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotSummaryOutput
}

type MysqlBackupDbSystemSnapshotSummaryArgs struct {
	// (Updatable) A user-supplied display name for the backup.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// OCID of the backup itself
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The region identifier of the region where the DB system exists. For more information, please see [Regions and Availability Domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm).
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (MysqlBackupDbSystemSnapshotSummaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshotSummary)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotSummaryArgs) ToMysqlBackupDbSystemSnapshotSummaryOutput() MysqlBackupDbSystemSnapshotSummaryOutput {
	return i.ToMysqlBackupDbSystemSnapshotSummaryOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotSummaryArgs) ToMysqlBackupDbSystemSnapshotSummaryOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotSummaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotSummaryOutput)
}

// MysqlBackupDbSystemSnapshotSummaryArrayInput is an input type that accepts MysqlBackupDbSystemSnapshotSummaryArray and MysqlBackupDbSystemSnapshotSummaryArrayOutput values.
// You can construct a concrete instance of `MysqlBackupDbSystemSnapshotSummaryArrayInput` via:
//
//	MysqlBackupDbSystemSnapshotSummaryArray{ MysqlBackupDbSystemSnapshotSummaryArgs{...} }
type MysqlBackupDbSystemSnapshotSummaryArrayInput interface {
	pulumi.Input

	ToMysqlBackupDbSystemSnapshotSummaryArrayOutput() MysqlBackupDbSystemSnapshotSummaryArrayOutput
	ToMysqlBackupDbSystemSnapshotSummaryArrayOutputWithContext(context.Context) MysqlBackupDbSystemSnapshotSummaryArrayOutput
}

type MysqlBackupDbSystemSnapshotSummaryArray []MysqlBackupDbSystemSnapshotSummaryInput

func (MysqlBackupDbSystemSnapshotSummaryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshotSummary)(nil)).Elem()
}

func (i MysqlBackupDbSystemSnapshotSummaryArray) ToMysqlBackupDbSystemSnapshotSummaryArrayOutput() MysqlBackupDbSystemSnapshotSummaryArrayOutput {
	return i.ToMysqlBackupDbSystemSnapshotSummaryArrayOutputWithContext(context.Background())
}

func (i MysqlBackupDbSystemSnapshotSummaryArray) ToMysqlBackupDbSystemSnapshotSummaryArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotSummaryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupDbSystemSnapshotSummaryArrayOutput)
}

type MysqlBackupDbSystemSnapshotSummaryOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotSummaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupDbSystemSnapshotSummary)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotSummaryOutput) ToMysqlBackupDbSystemSnapshotSummaryOutput() MysqlBackupDbSystemSnapshotSummaryOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotSummaryOutput) ToMysqlBackupDbSystemSnapshotSummaryOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotSummaryOutput {
	return o
}

// (Updatable) A user-supplied display name for the backup.
func (o MysqlBackupDbSystemSnapshotSummaryOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotSummary) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// OCID of the backup itself
func (o MysqlBackupDbSystemSnapshotSummaryOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotSummary) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The region identifier of the region where the DB system exists. For more information, please see [Regions and Availability Domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm).
func (o MysqlBackupDbSystemSnapshotSummaryOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupDbSystemSnapshotSummary) *string { return v.Region }).(pulumi.StringPtrOutput)
}

type MysqlBackupDbSystemSnapshotSummaryArrayOutput struct{ *pulumi.OutputState }

func (MysqlBackupDbSystemSnapshotSummaryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlBackupDbSystemSnapshotSummary)(nil)).Elem()
}

func (o MysqlBackupDbSystemSnapshotSummaryArrayOutput) ToMysqlBackupDbSystemSnapshotSummaryArrayOutput() MysqlBackupDbSystemSnapshotSummaryArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotSummaryArrayOutput) ToMysqlBackupDbSystemSnapshotSummaryArrayOutputWithContext(ctx context.Context) MysqlBackupDbSystemSnapshotSummaryArrayOutput {
	return o
}

func (o MysqlBackupDbSystemSnapshotSummaryArrayOutput) Index(i pulumi.IntInput) MysqlBackupDbSystemSnapshotSummaryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlBackupDbSystemSnapshotSummary {
		return vs[0].([]MysqlBackupDbSystemSnapshotSummary)[vs[1].(int)]
	}).(MysqlBackupDbSystemSnapshotSummaryOutput)
}

type MysqlBackupEncryptData struct {
	// Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
	KeyGenerationType string `pulumi:"keyGenerationType"`
	// The OCID of the key to use.
	KeyId *string `pulumi:"keyId"`
}

// MysqlBackupEncryptDataInput is an input type that accepts MysqlBackupEncryptDataArgs and MysqlBackupEncryptDataOutput values.
// You can construct a concrete instance of `MysqlBackupEncryptDataInput` via:
//
//	MysqlBackupEncryptDataArgs{...}
type MysqlBackupEncryptDataInput interface {
	pulumi.Input

	ToMysqlBackupEncryptDataOutput() MysqlBackupEncryptDataOutput
	ToMysqlBackupEncryptDataOutputWithContext(context.Context) MysqlBackupEncryptDataOutput
}

type MysqlBackupEncryptDataArgs struct {
	// Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
	KeyGenerationType pulumi.StringInput `pulumi:"keyGenerationType"`
	// The OCID of the key to use.
	KeyId pulumi.StringPtrInput `pulumi:"keyId"`
}

func (MysqlBackupEncryptDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupEncryptData)(nil)).Elem()
}

func (i MysqlBackupEncryptDataArgs) ToMysqlBackupEncryptDataOutput() MysqlBackupEncryptDataOutput {
	return i.ToMysqlBackupEncryptDataOutputWithContext(context.Background())
}

func (i MysqlBackupEncryptDataArgs) ToMysqlBackupEncryptDataOutputWithContext(ctx context.Context) MysqlBackupEncryptDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupEncryptDataOutput)
}

func (i MysqlBackupEncryptDataArgs) ToMysqlBackupEncryptDataPtrOutput() MysqlBackupEncryptDataPtrOutput {
	return i.ToMysqlBackupEncryptDataPtrOutputWithContext(context.Background())
}

func (i MysqlBackupEncryptDataArgs) ToMysqlBackupEncryptDataPtrOutputWithContext(ctx context.Context) MysqlBackupEncryptDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupEncryptDataOutput).ToMysqlBackupEncryptDataPtrOutputWithContext(ctx)
}

// MysqlBackupEncryptDataPtrInput is an input type that accepts MysqlBackupEncryptDataArgs, MysqlBackupEncryptDataPtr and MysqlBackupEncryptDataPtrOutput values.
// You can construct a concrete instance of `MysqlBackupEncryptDataPtrInput` via:
//
//	        MysqlBackupEncryptDataArgs{...}
//
//	or:
//
//	        nil
type MysqlBackupEncryptDataPtrInput interface {
	pulumi.Input

	ToMysqlBackupEncryptDataPtrOutput() MysqlBackupEncryptDataPtrOutput
	ToMysqlBackupEncryptDataPtrOutputWithContext(context.Context) MysqlBackupEncryptDataPtrOutput
}

type mysqlBackupEncryptDataPtrType MysqlBackupEncryptDataArgs

func MysqlBackupEncryptDataPtr(v *MysqlBackupEncryptDataArgs) MysqlBackupEncryptDataPtrInput {
	return (*mysqlBackupEncryptDataPtrType)(v)
}

func (*mysqlBackupEncryptDataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlBackupEncryptData)(nil)).Elem()
}

func (i *mysqlBackupEncryptDataPtrType) ToMysqlBackupEncryptDataPtrOutput() MysqlBackupEncryptDataPtrOutput {
	return i.ToMysqlBackupEncryptDataPtrOutputWithContext(context.Background())
}

func (i *mysqlBackupEncryptDataPtrType) ToMysqlBackupEncryptDataPtrOutputWithContext(ctx context.Context) MysqlBackupEncryptDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupEncryptDataPtrOutput)
}

type MysqlBackupEncryptDataOutput struct{ *pulumi.OutputState }

func (MysqlBackupEncryptDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupEncryptData)(nil)).Elem()
}

func (o MysqlBackupEncryptDataOutput) ToMysqlBackupEncryptDataOutput() MysqlBackupEncryptDataOutput {
	return o
}

func (o MysqlBackupEncryptDataOutput) ToMysqlBackupEncryptDataOutputWithContext(ctx context.Context) MysqlBackupEncryptDataOutput {
	return o
}

func (o MysqlBackupEncryptDataOutput) ToMysqlBackupEncryptDataPtrOutput() MysqlBackupEncryptDataPtrOutput {
	return o.ToMysqlBackupEncryptDataPtrOutputWithContext(context.Background())
}

func (o MysqlBackupEncryptDataOutput) ToMysqlBackupEncryptDataPtrOutputWithContext(ctx context.Context) MysqlBackupEncryptDataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MysqlBackupEncryptData) *MysqlBackupEncryptData {
		return &v
	}).(MysqlBackupEncryptDataPtrOutput)
}

// Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
func (o MysqlBackupEncryptDataOutput) KeyGenerationType() pulumi.StringOutput {
	return o.ApplyT(func(v MysqlBackupEncryptData) string { return v.KeyGenerationType }).(pulumi.StringOutput)
}

// The OCID of the key to use.
func (o MysqlBackupEncryptDataOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlBackupEncryptData) *string { return v.KeyId }).(pulumi.StringPtrOutput)
}

type MysqlBackupEncryptDataPtrOutput struct{ *pulumi.OutputState }

func (MysqlBackupEncryptDataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlBackupEncryptData)(nil)).Elem()
}

func (o MysqlBackupEncryptDataPtrOutput) ToMysqlBackupEncryptDataPtrOutput() MysqlBackupEncryptDataPtrOutput {
	return o
}

func (o MysqlBackupEncryptDataPtrOutput) ToMysqlBackupEncryptDataPtrOutputWithContext(ctx context.Context) MysqlBackupEncryptDataPtrOutput {
	return o
}

func (o MysqlBackupEncryptDataPtrOutput) Elem() MysqlBackupEncryptDataOutput {
	return o.ApplyT(func(v *MysqlBackupEncryptData) MysqlBackupEncryptData {
		if v != nil {
			return *v
		}
		var ret MysqlBackupEncryptData
		return ret
	}).(MysqlBackupEncryptDataOutput)
}

// Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
func (o MysqlBackupEncryptDataPtrOutput) KeyGenerationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlBackupEncryptData) *string {
		if v == nil {
			return nil
		}
		return &v.KeyGenerationType
	}).(pulumi.StringPtrOutput)
}

// The OCID of the key to use.
func (o MysqlBackupEncryptDataPtrOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlBackupEncryptData) *string {
		if v == nil {
			return nil
		}
		return v.KeyId
	}).(pulumi.StringPtrOutput)
}

type MysqlBackupSourceDetails struct {
	// The OCID of the source backup.
	BackupId string `pulumi:"backupId"`
	// (Updatable) The OCID of the compartment the backup exists in.
	CompartmentId string `pulumi:"compartmentId"`
	// The region of the backup source.
	Region string `pulumi:"region"`
}

// MysqlBackupSourceDetailsInput is an input type that accepts MysqlBackupSourceDetailsArgs and MysqlBackupSourceDetailsOutput values.
// You can construct a concrete instance of `MysqlBackupSourceDetailsInput` via:
//
//	MysqlBackupSourceDetailsArgs{...}
type MysqlBackupSourceDetailsInput interface {
	pulumi.Input

	ToMysqlBackupSourceDetailsOutput() MysqlBackupSourceDetailsOutput
	ToMysqlBackupSourceDetailsOutputWithContext(context.Context) MysqlBackupSourceDetailsOutput
}

type MysqlBackupSourceDetailsArgs struct {
	// The OCID of the source backup.
	BackupId pulumi.StringInput `pulumi:"backupId"`
	// (Updatable) The OCID of the compartment the backup exists in.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The region of the backup source.
	Region pulumi.StringInput `pulumi:"region"`
}

func (MysqlBackupSourceDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupSourceDetails)(nil)).Elem()
}

func (i MysqlBackupSourceDetailsArgs) ToMysqlBackupSourceDetailsOutput() MysqlBackupSourceDetailsOutput {
	return i.ToMysqlBackupSourceDetailsOutputWithContext(context.Background())
}

func (i MysqlBackupSourceDetailsArgs) ToMysqlBackupSourceDetailsOutputWithContext(ctx context.Context) MysqlBackupSourceDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupSourceDetailsOutput)
}

func (i MysqlBackupSourceDetailsArgs) ToMysqlBackupSourceDetailsPtrOutput() MysqlBackupSourceDetailsPtrOutput {
	return i.ToMysqlBackupSourceDetailsPtrOutputWithContext(context.Background())
}

func (i MysqlBackupSourceDetailsArgs) ToMysqlBackupSourceDetailsPtrOutputWithContext(ctx context.Context) MysqlBackupSourceDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupSourceDetailsOutput).ToMysqlBackupSourceDetailsPtrOutputWithContext(ctx)
}

// MysqlBackupSourceDetailsPtrInput is an input type that accepts MysqlBackupSourceDetailsArgs, MysqlBackupSourceDetailsPtr and MysqlBackupSourceDetailsPtrOutput values.
// You can construct a concrete instance of `MysqlBackupSourceDetailsPtrInput` via:
//
//	        MysqlBackupSourceDetailsArgs{...}
//
//	or:
//
//	        nil
type MysqlBackupSourceDetailsPtrInput interface {
	pulumi.Input

	ToMysqlBackupSourceDetailsPtrOutput() MysqlBackupSourceDetailsPtrOutput
	ToMysqlBackupSourceDetailsPtrOutputWithContext(context.Context) MysqlBackupSourceDetailsPtrOutput
}

type mysqlBackupSourceDetailsPtrType MysqlBackupSourceDetailsArgs

func MysqlBackupSourceDetailsPtr(v *MysqlBackupSourceDetailsArgs) MysqlBackupSourceDetailsPtrInput {
	return (*mysqlBackupSourceDetailsPtrType)(v)
}

func (*mysqlBackupSourceDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlBackupSourceDetails)(nil)).Elem()
}

func (i *mysqlBackupSourceDetailsPtrType) ToMysqlBackupSourceDetailsPtrOutput() MysqlBackupSourceDetailsPtrOutput {
	return i.ToMysqlBackupSourceDetailsPtrOutputWithContext(context.Background())
}

func (i *mysqlBackupSourceDetailsPtrType) ToMysqlBackupSourceDetailsPtrOutputWithContext(ctx context.Context) MysqlBackupSourceDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlBackupSourceDetailsPtrOutput)
}

type MysqlBackupSourceDetailsOutput struct{ *pulumi.OutputState }

func (MysqlBackupSourceDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlBackupSourceDetails)(nil)).Elem()
}

func (o MysqlBackupSourceDetailsOutput) ToMysqlBackupSourceDetailsOutput() MysqlBackupSourceDetailsOutput {
	return o
}

func (o MysqlBackupSourceDetailsOutput) ToMysqlBackupSourceDetailsOutputWithContext(ctx context.Context) MysqlBackupSourceDetailsOutput {
	return o
}

func (o MysqlBackupSourceDetailsOutput) ToMysqlBackupSourceDetailsPtrOutput() MysqlBackupSourceDetailsPtrOutput {
	return o.ToMysqlBackupSourceDetailsPtrOutputWithContext(context.Background())
}

func (o MysqlBackupSourceDetailsOutput) ToMysqlBackupSourceDetailsPtrOutputWithContext(ctx context.Context) MysqlBackupSourceDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MysqlBackupSourceDetails) *MysqlBackupSourceDetails {
		return &v
	}).(MysqlBackupSourceDetailsPtrOutput)
}

// The OCID of the source backup.
func (o MysqlBackupSourceDetailsOutput) BackupId() pulumi.StringOutput {
	return o.ApplyT(func(v MysqlBackupSourceDetails) string { return v.BackupId }).(pulumi.StringOutput)
}

// (Updatable) The OCID of the compartment the backup exists in.
func (o MysqlBackupSourceDetailsOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v MysqlBackupSourceDetails) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The region of the backup source.
func (o MysqlBackupSourceDetailsOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v MysqlBackupSourceDetails) string { return v.Region }).(pulumi.StringOutput)
}

type MysqlBackupSourceDetailsPtrOutput struct{ *pulumi.OutputState }

func (MysqlBackupSourceDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlBackupSourceDetails)(nil)).Elem()
}

func (o MysqlBackupSourceDetailsPtrOutput) ToMysqlBackupSourceDetailsPtrOutput() MysqlBackupSourceDetailsPtrOutput {
	return o
}

func (o MysqlBackupSourceDetailsPtrOutput) ToMysqlBackupSourceDetailsPtrOutputWithContext(ctx context.Context) MysqlBackupSourceDetailsPtrOutput {
	return o
}

func (o MysqlBackupSourceDetailsPtrOutput) Elem() MysqlBackupSourceDetailsOutput {
	return o.ApplyT(func(v *MysqlBackupSourceDetails) MysqlBackupSourceDetails {
		if v != nil {
			return *v
		}
		var ret MysqlBackupSourceDetails
		return ret
	}).(MysqlBackupSourceDetailsOutput)
}

// The OCID of the source backup.
func (o MysqlBackupSourceDetailsPtrOutput) BackupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlBackupSourceDetails) *string {
		if v == nil {
			return nil
		}
		return &v.BackupId
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The OCID of the compartment the backup exists in.
func (o MysqlBackupSourceDetailsPtrOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlBackupSourceDetails) *string {
		if v == nil {
			return nil
		}
		return &v.CompartmentId
	}).(pulumi.StringPtrOutput)
}

// The region of the backup source.
func (o MysqlBackupSourceDetailsPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlBackupSourceDetails) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

type MysqlConfigurationInitVariables struct {
	// Represents the MySQL server system variable lowerCaseTableNames (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_lower_case_table_names).
	//
	// lowerCaseTableNames controls case-sensitivity of tables and schema names and how they are stored in the DB System.
	//
	// Valid values are:
	// * CASE_SENSITIVE - (default) Table and schema name comparisons are case-sensitive and stored as specified. (lower_case_table_names=0)
	// * CASE_INSENSITIVE_LOWERCASE - Table and schema name comparisons are not case-sensitive and stored in lowercase. (lower_case_table_names=1)
	LowerCaseTableNames *string `pulumi:"lowerCaseTableNames"`
}

// MysqlConfigurationInitVariablesInput is an input type that accepts MysqlConfigurationInitVariablesArgs and MysqlConfigurationInitVariablesOutput values.
// You can construct a concrete instance of `MysqlConfigurationInitVariablesInput` via:
//
//	MysqlConfigurationInitVariablesArgs{...}
type MysqlConfigurationInitVariablesInput interface {
	pulumi.Input

	ToMysqlConfigurationInitVariablesOutput() MysqlConfigurationInitVariablesOutput
	ToMysqlConfigurationInitVariablesOutputWithContext(context.Context) MysqlConfigurationInitVariablesOutput
}

type MysqlConfigurationInitVariablesArgs struct {
	// Represents the MySQL server system variable lowerCaseTableNames (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_lower_case_table_names).
	//
	// lowerCaseTableNames controls case-sensitivity of tables and schema names and how they are stored in the DB System.
	//
	// Valid values are:
	// * CASE_SENSITIVE - (default) Table and schema name comparisons are case-sensitive and stored as specified. (lower_case_table_names=0)
	// * CASE_INSENSITIVE_LOWERCASE - Table and schema name comparisons are not case-sensitive and stored in lowercase. (lower_case_table_names=1)
	LowerCaseTableNames pulumi.StringPtrInput `pulumi:"lowerCaseTableNames"`
}

func (MysqlConfigurationInitVariablesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlConfigurationInitVariables)(nil)).Elem()
}

func (i MysqlConfigurationInitVariablesArgs) ToMysqlConfigurationInitVariablesOutput() MysqlConfigurationInitVariablesOutput {
	return i.ToMysqlConfigurationInitVariablesOutputWithContext(context.Background())
}

func (i MysqlConfigurationInitVariablesArgs) ToMysqlConfigurationInitVariablesOutputWithContext(ctx context.Context) MysqlConfigurationInitVariablesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlConfigurationInitVariablesOutput)
}

func (i MysqlConfigurationInitVariablesArgs) ToMysqlConfigurationInitVariablesPtrOutput() MysqlConfigurationInitVariablesPtrOutput {
	return i.ToMysqlConfigurationInitVariablesPtrOutputWithContext(context.Background())
}

func (i MysqlConfigurationInitVariablesArgs) ToMysqlConfigurationInitVariablesPtrOutputWithContext(ctx context.Context) MysqlConfigurationInitVariablesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlConfigurationInitVariablesOutput).ToMysqlConfigurationInitVariablesPtrOutputWithContext(ctx)
}

// MysqlConfigurationInitVariablesPtrInput is an input type that accepts MysqlConfigurationInitVariablesArgs, MysqlConfigurationInitVariablesPtr and MysqlConfigurationInitVariablesPtrOutput values.
// You can construct a concrete instance of `MysqlConfigurationInitVariablesPtrInput` via:
//
//	        MysqlConfigurationInitVariablesArgs{...}
//
//	or:
//
//	        nil
type MysqlConfigurationInitVariablesPtrInput interface {
	pulumi.Input

	ToMysqlConfigurationInitVariablesPtrOutput() MysqlConfigurationInitVariablesPtrOutput
	ToMysqlConfigurationInitVariablesPtrOutputWithContext(context.Context) MysqlConfigurationInitVariablesPtrOutput
}

type mysqlConfigurationInitVariablesPtrType MysqlConfigurationInitVariablesArgs

func MysqlConfigurationInitVariablesPtr(v *MysqlConfigurationInitVariablesArgs) MysqlConfigurationInitVariablesPtrInput {
	return (*mysqlConfigurationInitVariablesPtrType)(v)
}

func (*mysqlConfigurationInitVariablesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlConfigurationInitVariables)(nil)).Elem()
}

func (i *mysqlConfigurationInitVariablesPtrType) ToMysqlConfigurationInitVariablesPtrOutput() MysqlConfigurationInitVariablesPtrOutput {
	return i.ToMysqlConfigurationInitVariablesPtrOutputWithContext(context.Background())
}

func (i *mysqlConfigurationInitVariablesPtrType) ToMysqlConfigurationInitVariablesPtrOutputWithContext(ctx context.Context) MysqlConfigurationInitVariablesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlConfigurationInitVariablesPtrOutput)
}

type MysqlConfigurationInitVariablesOutput struct{ *pulumi.OutputState }

func (MysqlConfigurationInitVariablesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlConfigurationInitVariables)(nil)).Elem()
}

func (o MysqlConfigurationInitVariablesOutput) ToMysqlConfigurationInitVariablesOutput() MysqlConfigurationInitVariablesOutput {
	return o
}

func (o MysqlConfigurationInitVariablesOutput) ToMysqlConfigurationInitVariablesOutputWithContext(ctx context.Context) MysqlConfigurationInitVariablesOutput {
	return o
}

func (o MysqlConfigurationInitVariablesOutput) ToMysqlConfigurationInitVariablesPtrOutput() MysqlConfigurationInitVariablesPtrOutput {
	return o.ToMysqlConfigurationInitVariablesPtrOutputWithContext(context.Background())
}

func (o MysqlConfigurationInitVariablesOutput) ToMysqlConfigurationInitVariablesPtrOutputWithContext(ctx context.Context) MysqlConfigurationInitVariablesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MysqlConfigurationInitVariables) *MysqlConfigurationInitVariables {
		return &v
	}).(MysqlConfigurationInitVariablesPtrOutput)
}

// Represents the MySQL server system variable lowerCaseTableNames (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_lower_case_table_names).
//
// lowerCaseTableNames controls case-sensitivity of tables and schema names and how they are stored in the DB System.
//
// Valid values are:
// * CASE_SENSITIVE - (default) Table and schema name comparisons are case-sensitive and stored as specified. (lower_case_table_names=0)
// * CASE_INSENSITIVE_LOWERCASE - Table and schema name comparisons are not case-sensitive and stored in lowercase. (lower_case_table_names=1)
func (o MysqlConfigurationInitVariablesOutput) LowerCaseTableNames() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationInitVariables) *string { return v.LowerCaseTableNames }).(pulumi.StringPtrOutput)
}

type MysqlConfigurationInitVariablesPtrOutput struct{ *pulumi.OutputState }

func (MysqlConfigurationInitVariablesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlConfigurationInitVariables)(nil)).Elem()
}

func (o MysqlConfigurationInitVariablesPtrOutput) ToMysqlConfigurationInitVariablesPtrOutput() MysqlConfigurationInitVariablesPtrOutput {
	return o
}

func (o MysqlConfigurationInitVariablesPtrOutput) ToMysqlConfigurationInitVariablesPtrOutputWithContext(ctx context.Context) MysqlConfigurationInitVariablesPtrOutput {
	return o
}

func (o MysqlConfigurationInitVariablesPtrOutput) Elem() MysqlConfigurationInitVariablesOutput {
	return o.ApplyT(func(v *MysqlConfigurationInitVariables) MysqlConfigurationInitVariables {
		if v != nil {
			return *v
		}
		var ret MysqlConfigurationInitVariables
		return ret
	}).(MysqlConfigurationInitVariablesOutput)
}

// Represents the MySQL server system variable lowerCaseTableNames (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_lower_case_table_names).
//
// lowerCaseTableNames controls case-sensitivity of tables and schema names and how they are stored in the DB System.
//
// Valid values are:
// * CASE_SENSITIVE - (default) Table and schema name comparisons are case-sensitive and stored as specified. (lower_case_table_names=0)
// * CASE_INSENSITIVE_LOWERCASE - Table and schema name comparisons are not case-sensitive and stored in lowercase. (lower_case_table_names=1)
func (o MysqlConfigurationInitVariablesPtrOutput) LowerCaseTableNames() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationInitVariables) *string {
		if v == nil {
			return nil
		}
		return v.LowerCaseTableNames
	}).(pulumi.StringPtrOutput)
}

type MysqlConfigurationVariables struct {
	// auto_increment_increment and autoIncrementOffset are intended for use with circular (source-to-source) replication, and can be used to control the operation of AUTO_INCREMENT columns. Both variables have global and session values, and each can assume an integer value between 1 and 65,535 inclusive.
	//
	// autoIncrementIncrement corresponds to the MySQL Replication Source Options variable [autoIncrementIncrement] (https://dev.mysql.com/doc/refman/8.0/en/replication-options-source.html#sysvar_auto_increment_increment).
	AutoIncrementIncrement *int `pulumi:"autoIncrementIncrement"`
	// This variable has a default value of 1. If it is left with its default value, and Group Replication is started on the server in multi-primary mode, it is changed to the server ID.
	//
	// autoIncrementOffset corresponds to the MySQL Replication Source Options variable [autoIncrementOffset] (https://dev.mysql.com/doc/refman/8.0/en/replication-options-source.html#sysvar_auto_increment_offset).
	AutoIncrementOffset *int `pulumi:"autoIncrementOffset"`
	// ("autocommit")
	Autocommit *bool `pulumi:"autocommit"`
	// If enabled, the server stores all temporary tables on disk rather than in memory.
	//
	// bigTables corresponds to the MySQL server variable [bigTables](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_big_tables).
	BigTables *bool `pulumi:"bigTables"`
	// Sets the binary log expiration period in seconds. binlogExpireLogsSeconds corresponds to the MySQL binary logging system variable [binlogExpireLogsSeconds](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds).
	BinlogExpireLogsSeconds *int `pulumi:"binlogExpireLogsSeconds"`
	// Controls how many microseconds the binary log commit waits before synchronizing the binary log file to disk. There is no delay by default. Setting this variable to a microsecond delay enables more transactions to be synchronized together to disk at once, reducing the overall time to commit a group of transactions because the larger groups required fewer time units per group.
	//
	// binlogGroupCommitSyncDelay corresponds to the MySQL Replication system variable [binlogGroupCommitSyncDelay](https://dev.mysql.com/doc/refman/5.7/en/replication-options-binary-log.html#sysvar_binlog_group_commit_sync_delay)
	BinlogGroupCommitSyncDelay *int `pulumi:"binlogGroupCommitSyncDelay"`
	// The maximum number of transactions to wait for before aborting the current delay as specified by binlog_group_commit_sync_delay. If binlogGroupCommitSyncDelay is set to 0, then this option has no effect.
	//
	// binlogGroupCommitSyncNoDelayCount corresponds to the MySQL Replication system variable [binlogGroupCommitSyncNoDelayCount](https://dev.mysql.com/doc/refman/5.7/en/replication-options-binary-log.html#sysvar_binlog_group_commit_sync_no_delay_count)
	BinlogGroupCommitSyncNoDelayCount *int `pulumi:"binlogGroupCommitSyncNoDelayCount"`
	// Configures the amount of table metadata added to the binary log when using row-based logging. binlogRowMetadata corresponds to the MySQL binary logging system variable [binlogRowMetadata](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_metadata).
	BinlogRowMetadata *string `pulumi:"binlogRowMetadata"`
	// When set to PARTIAL_JSON, this enables use of a space-efficient binary log format for updates that modify only a small portion of a JSON document. binlogRowValueOptions corresponds to the MySQL binary logging system variable [binlogRowValueOptions](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_value_options).
	BinlogRowValueOptions *string `pulumi:"binlogRowValueOptions"`
	// Enables compression for transactions that are written to binary log files on this server. binlogTransactionCompression corresponds to the MySQL binary logging system variable [binlogTransactionCompression](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_transaction_compression).
	BinlogTransactionCompression *bool `pulumi:"binlogTransactionCompression"`
	// This variable controls the block encryption mode for block-based algorithms such as AES. It affects encryption for AES_ENCRYPT() and AES_DECRYPT(). blockEncryptionMode takes a value in aes-keylen-mode format, where keylen is the key length in bits and mode is the encryption mode. The value is not case-sensitive. Permitted keylen values are 128, 192, and 256. Permitted mode values are ECB, CBC, CFB1, CFB8, CFB128, and OFB.
	//
	// blockEncryptionMode corresponds to the MySQL Server Administration system variable [blockEncryptionMode](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_block_encryption_mode)
	BlockEncryptionMode *string `pulumi:"blockEncryptionMode"`
	// The server's default character set. If you set this variable, you should also set collationServer to specify the collation for the character set.
	//
	// characterSetServer corresponds to the MySQL server variable [characterSetServer](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_character_set_server).
	CharacterSetServer *string `pulumi:"characterSetServer"`
	// The server's default collation.
	//
	// collationServer corresponds to the MySQL server variable [collationServer](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_collation_server).
	CollationServer *string `pulumi:"collationServer"`
	// ("completionType")
	CompletionType *string `pulumi:"completionType"`
	// The number of seconds that the mysqld server waits for a connect packet before responding with Bad handshake.
	//
	// connectTimeout corresponds to the MySQL system variable [connectTimeout](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_connect_timeout)
	//
	// Increasing the connectTimeout value might help if clients frequently encounter errors of the form "Lost connection to MySQL server at 'XXX', system error: errno".
	ConnectTimeout *int `pulumi:"connectTimeout"`
	// Set the chunking size for updates to the global memory usage counter Global_connection_memory.
	//
	// connectionMemoryChunkSize corresponds to the MySQL system variable [connectionMemoryChunkSize](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_connection_memory_chunk_size).
	ConnectionMemoryChunkSize *int `pulumi:"connectionMemoryChunkSize"`
	// Set the maximum amount of memory that can be used by a single user connection.
	//
	// connectionMemoryLimit corresponds to the MySQL system variable [connectionMemoryLimit](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_connection_memory_limit).
	ConnectionMemoryLimit *string `pulumi:"connectionMemoryLimit"`
	// ("cteMaxRecursionDepth")
	CteMaxRecursionDepth *string `pulumi:"cteMaxRecursionDepth"`
	// The default authentication plugin. This must be a plugin that uses internal credentials storage, so these values are permitted: mysql_native_password, sha256_password, caching_sha2_password.
	//
	// As of MySQL 8.0.27, which introduces multifactor authentication, defaultAuthenticationPlugin is still used, but in conjunction with and at a lower precedence than the authenticationPolicy system variable. For details, see The Default Authentication Plugin. Because of this diminished role, defaultAuthenticationPlugin is deprecated as of MySQL 8.0.27 and subject to removal in a future MySQL version.
	//
	// defaultAuthenticationPlugin corresponds to the MySQL system variable [defaultAuthenticationPlugin](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_default_authentication_plugin).
	DefaultAuthenticationPlugin *string `pulumi:"defaultAuthenticationPlugin"`
	// This variable determines the default output format used by EXPLAIN in the absence of a FORMAT option when displaying a query execution plan.
	//
	// explainFormat corresponds to the MySQL system variable [explainFormat](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_explain_format).
	ExplainFormat *string `pulumi:"explainFormat"`
	// This system variable determines whether the server enables certain nonstandard behaviors for default values and NULL-value handling in TIMESTAMP columns. By default, explicitDefaultsForTimestamp is enabled, which disables the nonstandard behaviors. Disabling explicitDefaultsForTimestamp results in a warning.
	//
	// explicitDefaultsForTimestamp corresponds to the MySQL Server Administration system variable [explicitDefaultsForTimestamp](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_explicit_defaults_for_timestamp)
	ExplicitDefaultsForTimestamp *bool `pulumi:"explicitDefaultsForTimestamp"`
	// ("foreignKeyChecks")
	ForeignKeyChecks *bool `pulumi:"foreignKeyChecks"`
	// ("generatedRandomPasswordLength") DEPRECATED -- variable should not be settable and will be ignored
	//
	// Deprecated: The 'generated_random_password_length' field has been deprecated and may be removed in a future version. Do not use this field.
	GeneratedRandomPasswordLength *int `pulumi:"generatedRandomPasswordLength"`
	// Set the total amount of memory that can be used by all user connections.
	//
	// globalConnectionMemoryLimit corresponds to the MySQL system variable [globalConnectionMemoryLimit](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_global_connection_memory_limit).
	GlobalConnectionMemoryLimit *string `pulumi:"globalConnectionMemoryLimit"`
	// Determines whether the MySQL server calculates Global_connection_memory.
	//
	// globalConnectionMemoryTracking corresponds to the MySQL system variable [globalConnectionMemoryTracking](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_global_connection_memory_tracking).
	GlobalConnectionMemoryTracking *bool `pulumi:"globalConnectionMemoryTracking"`
	// Specifies the maximum permitted result length in bytes for the GROUP_CONCAT() function.
	//
	// This is the MySQL variable "groupConcatMaxLen". For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_group_concat_max_len)
	GroupConcatMaxLen *string `pulumi:"groupConcatMaxLen"`
	// * EVENTUAL: Both RO and RW transactions do not wait for preceding transactions to be applied before executing. A RW transaction does not wait for other members to apply a transaction. This means that a transaction could be externalized on one member before the others. This also means that in the event of a primary failover, the new primary can accept new RO and RW transactions before the previous primary transactions are all applied. RO transactions could result in outdated values, RW transactions could result in a rollback due to conflicts.
	// * BEFORE_ON_PRIMARY_FAILOVER: New RO or RW transactions with a newly elected primary that is applying backlog from the old primary are held (not applied) until any backlog has been applied. This ensures that when a primary failover happens, intentionally or not, clients always see the latest value on the primary. This guarantees consistency, but means that clients must be able to handle the delay in the event that a backlog is being applied. Usually this delay should be minimal, but does depend on the size of the backlog.
	// * BEFORE: A RW transaction waits for all preceding transactions to complete before being applied. A RO transaction waits for all preceding transactions to complete before being executed. This ensures that this transaction reads the latest value by only affecting the latency of the transaction. This reduces the overhead of synchronization on every RW transaction, by ensuring synchronization is used only on RO transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
	// * AFTER: A RW transaction waits until its changes have been applied to all of the other members. This value has no effect on RO transactions. This mode ensures that when a transaction is committed on the local member, any subsequent transaction reads the written value or a more recent value on any group member. Use this mode with a group that is used for predominantly RO operations to ensure that applied RW transactions are applied everywhere once they commit. This could be used by your application to ensure that subsequent reads fetch the latest data which includes the latest writes. This reduces the overhead of synchronization on every RO transaction, by ensuring synchronization is used only on RW transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
	// * BEFORE_AND_AFTER: A RW transaction waits for 1) all preceding transactions to complete before being applied and 2) until its changes have been applied on other members. A RO transaction waits for all preceding transactions to complete before execution takes place. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
	GroupReplicationConsistency *string `pulumi:"groupReplicationConsistency"`
	// ("informationSchemaStatsExpiry")
	InformationSchemaStatsExpiry *int `pulumi:"informationSchemaStatsExpiry"`
	// Whether the InnoDB adaptive hash index is enabled or disabled. It may be desirable, depending on your workload, to dynamically enable or disable adaptive hash indexing to improve query performance. Because the adaptive hash index may not be useful for all workloads, conduct benchmarks with it both enabled and disabled, using realistic workloads.
	//
	// innodbAdaptiveHashIndex corresponds to the MySQL InnoDB Startup Options and System Variables [innodbAdaptiveHashIndex] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_adaptive_hash_index).
	InnodbAdaptiveHashIndex *bool `pulumi:"innodbAdaptiveHashIndex"`
	// The lock mode to use for generating auto-increment values. Permissible values are 0, 1, or 2, for traditional, consecutive, or interleaved, respectively.
	//
	// innodbAutoincLockMode corresponds to the MySQL InnoDB Startup Options and System Variables [innodbAutoincLockMode] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_autoinc_lock_mode).
	InnodbAutoincLockMode *int `pulumi:"innodbAutoincLockMode"`
	// Specifies the percentage of the most recently used pages for each buffer pool to read out and dump.
	//
	// innodbBufferPoolDumpPct corresponds to the MySQL InnoDB system variable [innodbBufferPoolDumpPct](https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_buffer_pool_dump_pct).
	//
	// The range is 1 to 100. The default value is 25.
	//
	// For example, if there are 4 buffer pools with 100 pages each, and innodbBufferPoolDumpPct is set to 25, the 25 most recently used pages from each buffer pool are dumped.
	InnodbBufferPoolDumpPct *int `pulumi:"innodbBufferPoolDumpPct"`
	// ("innodbBufferPoolInstances")
	InnodbBufferPoolInstances *int `pulumi:"innodbBufferPoolInstances"`
	// The size (in bytes) of the buffer pool, that is, the memory area where InnoDB caches table and index data.
	//
	// innodbBufferPoolSize corresponds to the MySQL server system variable [innodbBufferPoolSize](https://dev.mysql.com/doc/refman/en/innodb-parameters.html#sysvar_innodb_buffer_pool_size).
	//
	// The default and maximum values depend on the amount of RAM provisioned by the shape. See [Default User Variables](https://www.terraform.io/mysql-database/doc/configuring-db-system.html#GUID-B5504C19-F6F4-4DAB-8506-189A4E8F4A6A).
	InnodbBufferPoolSize *string `pulumi:"innodbBufferPoolSize"`
	// Whether InnoDB performs change buffering, an optimization that delays write operations to secondary indexes so that the I/O operations can be performed sequentially. Permitted values are described in the following table. Values may also be specified numerically.
	//
	// innodbChangeBuffering corresponds to the MySQL InnoDB Startup Options and System Variables [innodbChangeBuffering] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_change_buffering).
	InnodbChangeBuffering *string `pulumi:"innodbChangeBuffering"`
	// innodbDdlBufferSize corresponds to the MySQL system variable [innodbDdlBufferSize] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_ddl_buffer_size)
	InnodbDdlBufferSize *string `pulumi:"innodbDdlBufferSize"`
	// innodbDdlThreads corresponds to the MySQL system variable [innodbDdlThreads] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_ddl_threads)
	InnodbDdlThreads *int `pulumi:"innodbDdlThreads"`
	// ("innodbFtEnableStopword")
	InnodbFtEnableStopword *bool `pulumi:"innodbFtEnableStopword"`
	// ("innodbFtMaxTokenSize")
	InnodbFtMaxTokenSize *int `pulumi:"innodbFtMaxTokenSize"`
	// ("innodbFtMinTokenSize")
	InnodbFtMinTokenSize *int `pulumi:"innodbFtMinTokenSize"`
	// ("innodbFtNumWordOptimize")
	InnodbFtNumWordOptimize *int `pulumi:"innodbFtNumWordOptimize"`
	// ("innodbFtResultCacheLimit")
	InnodbFtResultCacheLimit *string `pulumi:"innodbFtResultCacheLimit"`
	// ("innodbFtServerStopwordTable")
	InnodbFtServerStopwordTable *string `pulumi:"innodbFtServerStopwordTable"`
	// ("innodbLockWaitTimeout")
	InnodbLockWaitTimeout *int `pulumi:"innodbLockWaitTimeout"`
	// Enables dedicated log writer threads for writing redo log records from the log buffer to the system buffers and flushing the system buffers to the redo log files.
	//
	// This is the MySQL variable "innodbLogWriterThreads". For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_log_writer_threads)
	InnodbLogWriterThreads *bool `pulumi:"innodbLogWriterThreads"`
	// The desired maximum purge lag in terms of transactions.
	//
	// InnoDB maintains a list of transactions that have index records delete-marked by UPDATE or DELETE operations. The length of the list is the purge lag.
	//
	// If this value is exceeded, a delay is imposed on INSERT, UPDATE, and DELETE operations to allow time for purge to catch up.
	//
	// The default value is 0, which means there is no maximum purge lag and no delay.
	//
	// innodbMaxPurgeLag corresponds to the MySQL server system variable [innodbMaxPurgeLag](https://dev.mysql.com/doc/refman/en/innodb-parameters.html#sysvar_innodb_max_purge_lag).
	InnodbMaxPurgeLag *string `pulumi:"innodbMaxPurgeLag"`
	// The maximum delay in microseconds for the delay imposed when the innodbMaxPurgeLag threshold is exceeded.
	//
	// The specified innodbMaxPurgeLagDelay value is an upper limit on the delay period.
	//
	// innodbMaxPurgeLagDelay corresponds to the MySQL server system variable [innodbMaxPurgeLagDelay](https://dev.mysql.com/doc/refman/en/innodb-parameters.html#sysvar_innodb_max_purge_lag_delay).
	InnodbMaxPurgeLagDelay *int `pulumi:"innodbMaxPurgeLagDelay"`
	// Enables the NUMA interleave memory policy for allocation of the InnoDB buffer pool. When innodbNumaInterleave is enabled, the NUMA memory policy is set to MPOL_INTERLEAVE for the mysqld process. After the InnoDB buffer pool is allocated, the NUMA memory policy is set back to MPOL_DEFAULT. For the innodbNumaInterleave option to be available, MySQL must be compiled on a NUMA-enabled Linux system.
	//
	// innodbNumaInterleave corresponds to the MySQL InnoDB Startup Options and System Variables [innodbNumaInterleave] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_numa_interleave).
	InnodbNumaInterleave *bool `pulumi:"innodbNumaInterleave"`
	// Specifies an upper limit in bytes on the size of the temporary log files used during online DDL operations for InnoDB tables. There is one such log file for each index being created or table being altered. This log file stores data inserted, updated, or deleted in the table during the DDL operation.
	//
	// innodbOnlineAlterLogMaxSize corresponds to the MySQL InnoDB Startup Options and System Variables [innodbOnlineAlterLogMaxSize] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_online_alter_log_max_size).
	InnodbOnlineAlterLogMaxSize *string `pulumi:"innodbOnlineAlterLogMaxSize"`
	// Defines the amount of disk space occupied by redo log files. innodbRedoLogCapacity supercedes the innodbLogFilesInGroup and innodbLogFileSize variables, which are both ignored if innodbRedoLogCapacity is defined. If innodbRedoLogCapacity is not defined, and if neither innodbLogFileSize or innodbLogFilesInGroup are defined, then the default innodbRedoLogCapacity value is used.
	//
	// innodbRedoLogCapacity corresponds to the InnoDB Startup Options and System Variables [innodbRedoLogCapacity](https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_redo_log_capacity)
	InnodbRedoLogCapacity *string `pulumi:"innodbRedoLogCapacity"`
	// InnoDB rolls back only the last statement on a transaction timeout by default. If --innodb-rollback-on-timeout is specified, a transaction timeout causes InnoDB to abort and roll back the entire transaction.
	//
	// innodbRollbackOnTimeout corresponds to the MySQL InnoDB Startup Options and System Variables [innodbRollbackOnTimeout] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_rollback_on_timeout).
	InnodbRollbackOnTimeout *bool `pulumi:"innodbRollbackOnTimeout"`
	// This variable defines:
	// * The sort buffer size for online DDL operations that create or rebuild secondary indexes. However, as of MySQL 8.0.27, this responsibility is subsumed by the innodbDdlBufferSize variable.
	// * The amount by which the temporary log file is extended when recording concurrent DML during an online DDL operation, and the size of the temporary log file read buffer and write buffer.
	//
	// innodbSortBufferSize corresponds to the MySQL InnoDB Startup Options and System Variables [innodbSortBufferSize] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_sort_buffer_size).
	InnodbSortBufferSize *int `pulumi:"innodbSortBufferSize"`
	// The number of index pages to sample when estimating cardinality and other statistics for an indexed column, such as those calculated by ANALYZE TABLE.
	//
	// innodbStatsPersistentSamplePages corresponds to the MySQL InnoDB system variable [innodbStatsPersistentSamplePages](https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_stats_persistent_sample_pages)
	//
	// innodbStatsPersistentSamplePages only applies when innodbStatsPersistent is enabled for a table; when innodbStatsPersistent is disabled, innodbStatsTransientSamplePages applies instead.
	InnodbStatsPersistentSamplePages *string `pulumi:"innodbStatsPersistentSamplePages"`
	// The number of index pages to sample when estimating cardinality and other statistics for an indexed column, such as those calculated by [ANALYZE TABLE](https://dev.mysql.com/doc/refman/8.0/en/analyze-table.html).
	//
	// innodbStatsTransientSamplePages corresponds to the MySQL InnoDB system variable [innodbStatsTransientSamplePages](https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_stats_transient_sample_pages)
	//
	// innodbStatsTransientSamplePages only applies when innodbStatsPersistent is disabled for a table; when innodbStatsPersistent is enabled, innodbStatsPersistentSamplePages applies instead.
	//
	// innodbStatsPersistent is ON by default and cannot be changed. It is possible to override it using the STATS_PERSISTENT clause of the [CREATE TABLE](https://dev.mysql.com/doc/refman/8.0/en/create-table.html) and [ALTER TABLE](https://dev.mysql.com/doc/refman/8.0/en/alter-table.html) statements.
	InnodbStatsTransientSamplePages *string `pulumi:"innodbStatsTransientSamplePages"`
	// When you enable innodbStrictMode, the InnoDB storage engine returns errors instead of warnings for invalid or incompatible table options.
	//
	// innodbStrictMode corresponds to the MySQL InnoDB system variable [innodbStrictMode](https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_strict_mode)
	InnodbStrictMode *bool `pulumi:"innodbStrictMode"`
	// When enabled, undo tablespaces that exceed the threshold value defined by innodbMaxUndoLogSize are marked for truncation. Only undo tablespaces can be truncated. Truncating undo logs that reside in the system tablespace is not supported. For truncation to occur, there must be at least two undo tablespaces.
	//
	// innodbUndoLogTruncate corresponds to the MySQL InnoDB Startup Options and System Variables [innodbUndoLogTruncate] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_undo_log_truncate).
	InnodbUndoLogTruncate *bool `pulumi:"innodbUndoLogTruncate"`
	// The number of seconds the server waits for activity on an interactive connection before closing it.
	//
	// interactiveTimeout corresponds to the MySQL system variable. [interactiveTimeout](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_interactive_timeout)
	InteractiveTimeout *int `pulumi:"interactiveTimeout"`
	// The minimum size of the buffer that is used for plain index scans, range index scans, and joins that do not use indexes and thus perform full table scans. In MySQL 8.0.18 and later, this variable also controls the amount of memory used for hash joins. Normally, the best way to get fast joins is to add indexes. Increase the value of joinBufferSize to get a faster full join when adding indexes is not possible. One join buffer is allocated for each full join between two tables. For a complex join between several tables for which indexes are not used, multiple join buffers might be necessary.
	//
	// joinBufferSize corresponds to the MySQL Server System variable [joinBufferSize] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_join_buffer_size).
	JoinBufferSize *string `pulumi:"joinBufferSize"`
	// This variable controls server-side LOCAL capability for LOAD DATA statements. Depending on the localInfile setting, the server refuses or permits local data loading by clients that have LOCAL enabled on the client side.
	//
	// localInfile corresponds to the MySQL Server system variable [localInfile](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_local_infile)
	LocalInfile *bool `pulumi:"localInfile"`
	// If a query takes longer than this many seconds, the server increments the Slow_queries status variable. If the slow query log is enabled, the query is logged to the slow query log file. This value is measured in real time, not CPU time, so a query that is under the threshold on a lightly loaded system might be above the threshold on a heavily loaded one.
	//
	// longQueryTime corresponds to the MySQL Server System variable [longQueryTime] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_long_query_time).
	LongQueryTime *int `pulumi:"longQueryTime"`
	// ("mandatoryRoles")
	MandatoryRoles *string `pulumi:"mandatoryRoles"`
	// The maximum size of one packet or any generated/intermediate string.
	//
	// This is the mysql variable "maxAllowedPacket".
	MaxAllowedPacket *int `pulumi:"maxAllowedPacket"`
	// Sets the size of the transaction cache.
	//
	// maxBinlogCacheSize corresponds to the MySQL server system variable [maxBinlogCacheSize](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_max_binlog_cache_size).
	MaxBinlogCacheSize *string `pulumi:"maxBinlogCacheSize"`
	// ("maxConnectErrors")
	MaxConnectErrors *string `pulumi:"maxConnectErrors"`
	// ("maxConnections")
	MaxConnections *int `pulumi:"maxConnections"`
	// ("maxExecutionTime")
	MaxExecutionTime *string `pulumi:"maxExecutionTime"`
	// This variable sets the maximum size to which user-created MEMORY tables are permitted to grow.
	//
	// maxHeapTableSize corresponds to the MySQL system variable [maxHeapTableSize](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_max_heap_table_size)
	MaxHeapTableSize *string `pulumi:"maxHeapTableSize"`
	// ("maxPreparedStmtCount")
	MaxPreparedStmtCount *int `pulumi:"maxPreparedStmtCount"`
	// Limit the assumed maximum number of seeks when looking up rows based on a key. The MySQL optimizer assumes that no more than this number of key seeks are required when searching for matching rows in a table by scanning an index, regardless of the actual cardinality of the index (see Section 15.7.7.22, “SHOW INDEX Statement”). By setting this to a low value (say, 100), you can force MySQL to prefer indexes instead of table scans.
	//
	// maxSeeksForKey corresponds to the MySQL Server System variable [maxSeeksForKey] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_max_seeks_for_key).
	MaxSeeksForKey *string `pulumi:"maxSeeksForKey"`
	// The maximum number of simultaneous connections permitted to any given MySQL user account. A value of 0 (the default) means “no limit.” This variable has a global value that can be set at server startup or runtime. It also has a read-only session value that indicates the effective simultaneous-connection limit that applies to the account associated with the current session.
	//
	// maxUserConnections corresponds to the MySQL Server System variable [maxUserConnections] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_max_user_connections).
	MaxUserConnections *string `pulumi:"maxUserConnections"`
	// ("mysqlFirewallMode")
	MysqlFirewallMode *bool `pulumi:"mysqlFirewallMode"`
	// DEPRECATED -- typo of mysqlx_zstd_default_compression_level. variable will be ignored.
	//
	// Deprecated: The 'mysql_zstd_default_compression_level' field has been deprecated and may be removed in a future version. Do not use this field.
	MysqlZstdDefaultCompressionLevel *int `pulumi:"mysqlZstdDefaultCompressionLevel"`
	// The number of seconds X Plugin waits for the first packet to be received from newly connected clients.
	//
	// mysqlxConnectTimeout corresponds to the MySQL X Plugin system variable [mysqlxConnectTimeout](https://dev.mysql.com/doc/refman/8.0/en/x-plugin-options-system-variables.html#sysvar_mysqlx_connect_timeout)
	MysqlxConnectTimeout *int `pulumi:"mysqlxConnectTimeout"`
	// Set the default compression level for the deflate algorithm. ("mysqlxDeflateDefaultCompressionLevel")
	MysqlxDeflateDefaultCompressionLevel *int `pulumi:"mysqlxDeflateDefaultCompressionLevel"`
	// Limit the upper bound of accepted compression levels for the deflate algorithm. ("mysqlxDeflateMaxClientCompressionLevel")
	MysqlxDeflateMaxClientCompressionLevel *int `pulumi:"mysqlxDeflateMaxClientCompressionLevel"`
	// ("mysqlxDocumentIdUniquePrefix") DEPRECATED -- variable should not be settable and will be ignored
	//
	// Deprecated: The 'mysqlx_document_id_unique_prefix' field has been deprecated and may be removed in a future version. Do not use this field.
	MysqlxDocumentIdUniquePrefix *int `pulumi:"mysqlxDocumentIdUniquePrefix"`
	// ("mysqlxEnableHelloNotice") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxEnableHelloNotice *bool `pulumi:"mysqlxEnableHelloNotice"`
	// ("mysqlxIdleWorkerThreadTimeout") DEPRECATED -- variable should not be settable and will be ignored
	//
	// Deprecated: The 'mysqlx_idle_worker_thread_timeout' field has been deprecated and may be removed in a future version. Do not use this field.
	MysqlxIdleWorkerThreadTimeout *int `pulumi:"mysqlxIdleWorkerThreadTimeout"`
	// The number of seconds to wait for interactive clients to timeout.
	//
	// mysqlxInteractiveTimeout corresponds to the MySQL X Plugin system variable. [mysqlxInteractiveTimeout](https://dev.mysql.com/doc/refman/8.0/en/x-plugin-options-system-variables.html#sysvar_mysqlx_interactive_timeout)
	MysqlxInteractiveTimeout *int `pulumi:"mysqlxInteractiveTimeout"`
	// Set the default compression level for the lz4 algorithm. ("mysqlxLz4DefaultCompressionLevel")
	MysqlxLz4defaultCompressionLevel *int `pulumi:"mysqlxLz4defaultCompressionLevel"`
	// Limit the upper bound of accepted compression levels for the lz4 algorithm. ("mysqlxLz4MaxClientCompressionLevel")
	MysqlxLz4maxClientCompressionLevel *int `pulumi:"mysqlxLz4maxClientCompressionLevel"`
	// The maximum size of network packets that can be received by X Plugin.
	//
	// This is the mysql variable "mysqlxMaxAllowedPacket".
	MysqlxMaxAllowedPacket *int `pulumi:"mysqlxMaxAllowedPacket"`
	// ("mysqlxMinWorkerThreads") DEPRECATED -- variable should not be settable and will be ignored
	//
	// Deprecated: The 'mysqlx_min_worker_threads' field has been deprecated and may be removed in a future version. Do not use this field.
	MysqlxMinWorkerThreads *int `pulumi:"mysqlxMinWorkerThreads"`
	// The number of seconds that X Plugin waits for blocking read operations to complete. After this time, if the read operation is not successful, X Plugin closes the connection and returns a warning notice with the error code ER_IO_READ_ERROR to the client application.
	//
	// mysqlxReadTimeout corresponds to the MySQL X Plugin system variable [mysqlxReadTimeout](https://dev.mysql.com/doc/refman/8.0/en/x-plugin-options-system-variables.html#sysvar_mysqlx_read_timeout)
	MysqlxReadTimeout *int `pulumi:"mysqlxReadTimeout"`
	// The number of seconds that X Plugin waits for activity on a connection.
	//
	// mysqlxWaitTimeout corresponds to the MySQL X Plugin system variable. [mysqlxWaitTimeout](https://dev.mysql.com/doc/refman/8.0/en/x-plugin-options-system-variables.html#sysvar_mysqlx_wait_timeout)
	MysqlxWaitTimeout *int `pulumi:"mysqlxWaitTimeout"`
	// The number of seconds that X Plugin waits for blocking write operations to complete. After this time, if the write operation is not successful, X Plugin closes the connection.
	//
	// mysqlxReadmysqlxWriteTimeoutTimeout corresponds to the MySQL X Plugin system variable [mysqlxWriteTimeout](https://dev.mysql.com/doc/refman/8.0/en/x-plugin-options-system-variables.html#sysvar_mysqlx_write_timeout)
	MysqlxWriteTimeout *int `pulumi:"mysqlxWriteTimeout"`
	// Set the default compression level for the zstd algorithm. ("mysqlxZstdDefaultCompressionLevel")
	MysqlxZstdDefaultCompressionLevel *int `pulumi:"mysqlxZstdDefaultCompressionLevel"`
	// Limit the upper bound of accepted compression levels for the zstd algorithm. ("mysqlxZstdMaxClientCompressionLevel")
	MysqlxZstdMaxClientCompressionLevel *int `pulumi:"mysqlxZstdMaxClientCompressionLevel"`
	// The number of seconds to wait for more data from a connection before aborting the read.
	//
	// netReadTimeout corresponds to the MySQL system variable [netReadTimeout](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_net_read_timeout)
	NetReadTimeout *int `pulumi:"netReadTimeout"`
	// The number of seconds to wait for a block to be written to a connection before aborting the write.
	//
	// netWriteTimeout corresponds to the MySQL system variable [netWriteTimeout](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_net_write_timeout)
	NetWriteTimeout *int `pulumi:"netWriteTimeout"`
	// The optimizerSwitch system variable enables control over optimizer behavior. The value of this variable is a set of flags, each of which has a value of on or off to indicate whether the corresponding optimizer behavior is enabled or disabled. This variable has global and session values and can be changed at runtime. The global default can be set at server startup.
	//
	// Setting hypergraph_optimizer=on for cloud builds below 9.0.0 will fail.
	//
	// optimizerSwitch corresponds to the MySQL Server System variable [optimizerSwitch] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_optimizer_switch).
	OptimizerSwitch *string `pulumi:"optimizerSwitch"`
	// ("parserMaxMemSize")
	ParserMaxMemSize *string `pulumi:"parserMaxMemSize"`
	// ("queryAllocBlockSize") DEPRECATED -- variable should not be settable and will be ignored
	//
	// Deprecated: The 'query_alloc_block_size' field has been deprecated and may be removed in a future version. Do not use this field.
	QueryAllocBlockSize *string `pulumi:"queryAllocBlockSize"`
	// ("queryPreallocSize") DEPRECATED -- variable should not be settable and will be ignored
	QueryPreallocSize *string `pulumi:"queryPreallocSize"`
	// The limit on memory consumption for the range optimizer. A value of 0 means “no limit.” If an execution plan considered by the optimizer uses the range access method but the optimizer estimates that the amount of memory needed for this method would exceed the limit, it abandons the plan and considers other plans.
	//
	// rangeOptimizerMaxMemSize corresponds to the MySQL Server System variable [rangeOptimizerMaxMemSize] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_range_optimizer_max_mem_size).
	//
	// Deprecated: The 'query_prealloc_size' field has been deprecated and may be removed in a future version. Do not use this field.
	RangeOptimizerMaxMemSize *string `pulumi:"rangeOptimizerMaxMemSize"`
	// regexpTimeLimit corresponds to the MySQL system variable [regexpTimeLimit] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_regexp_time_limit)
	RegexpTimeLimit *int `pulumi:"regexpTimeLimit"`
	// The maximum amount of space to use for all relay logs.
	//
	// relayLogSpaceLimit corresponds to the MySQL Replica Server Options variable [relayLogSpaceLimit] (https://dev.mysql.com/doc/refman/8.0/en/replication-options-replica.html#sysvar_relay_log_space_limit).
	RelayLogSpaceLimit *string `pulumi:"relayLogSpaceLimit"`
	// Specifies the number of seconds to wait for more data or a heartbeat signal from the source before the replica considers the connection broken, aborts the read, and tries to reconnect. Setting this variable has no immediate effect. The state of the variable applies on all subsequent START REPLICA commands.
	//
	// replicaNetTimeout corresponds to the MySQL Replica server system variable [replicaNetTimeout](https://dev.mysql.com/doc/refman/8.0/en/replication-options-replica.html#sysvar_replica_net_timeout)
	ReplicaNetTimeout *int `pulumi:"replicaNetTimeout"`
	// Beginning with MySQL 8.0.26, slaveParallelWorkers is deprecated, and you should use replicaParallelWorkers instead. (Prior to MySQL 8.0.26, you must use slaveParallelWorkers to set the number of applier threads.)
	//
	// replicaParallelWorkers corresponds to the MySQL Replica Server Options variable [replicaParallelWorkers] (https://dev.mysql.com/doc/refman/8.0/en/replication-options-replica.html#sysvar_replica_parallel_workers).
	ReplicaParallelWorkers *int `pulumi:"replicaParallelWorkers"`
	// From MySQL 8.0.26, use replicaTypeConversions in place of slave_type_conversions, which is deprecated from that release. In releases before MySQL 8.0.26, use slave_type_conversions.
	//
	// replicaTypeConversions controls the type conversion mode in effect on the replica when using row-based replication. Its value is a comma-delimited set of zero or more elements from the list: ALL_LOSSY, ALL_NON_LOSSY, ALL_SIGNED, ALL_UNSIGNED. Set this variable to an empty string to disallow type conversions between the source and the replica. Setting this variable takes effect for all replication channels immediately, including running channels.
	//
	// replicaTypeConversions corresponds to the MySQL Replica Server Options variable [replicaTypeConversions] (https://dev.mysql.com/doc/refman/8.0/en/replication-options-replica.html#sysvar_replica_type_conversions).
	ReplicaTypeConversions *string `pulumi:"replicaTypeConversions"`
	// Whether client connections to the server are required to use some form of secure transport. When this variable is enabled, the server permits only TCP/IP connections encrypted using TLS/SSL, or connections that use a socket file or shared memory. The server rejects nonsecure connection attempts, which fail with an ER_SECURE_TRANSPORT_REQUIRED error.
	//
	// requireSecureTransport corresponds to the MySQL Server Administration system variable [requireSecureTransport](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_require_secure_transport)
	RequireSecureTransport *bool `pulumi:"requireSecureTransport"`
	// Whether to resolve host names when checking client connections. If this variable is OFF, mysqld resolves host names when checking client connections. If it is ON, mysqld uses only IP numbers; in this case, all Host column values in the grant tables must be IP addresses. See Section 7.1.12.3, “DNS Lookups and the Host Cache”.
	//
	// skipNameResolve corresponds to the MySQL Server System variable [skipNameResolve] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_skip_name_resolve).
	SkipNameResolve *bool `pulumi:"skipNameResolve"`
	// Each session that must perform a sort allocates a buffer of this size.
	//
	// sortBufferSize corresponds to the MySQL system variable [sortBufferSize](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_sort_buffer_size)
	SortBufferSize *string `pulumi:"sortBufferSize"`
	// Whether GIPK mode is in effect, in which case a MySQL replication source server adds a generated invisible primary key to any InnoDB table that is created without one.
	//
	// sqlGenerateInvisiblePrimaryKey corresponds to the MySQL system variable [sqlGenerateInvisiblePrimaryKey] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_sql_generate_invisible_primary_key).
	SqlGenerateInvisiblePrimaryKey *bool `pulumi:"sqlGenerateInvisiblePrimaryKey"`
	// ("sqlMode")
	SqlMode *string `pulumi:"sqlMode"`
	// ("sqlRequirePrimaryKey")
	SqlRequirePrimaryKey *bool `pulumi:"sqlRequirePrimaryKey"`
	// ("sqlWarnings")
	SqlWarnings *bool `pulumi:"sqlWarnings"`
	// The number of table definitions that can be stored in the table definition cache. If you use a large number of tables, you can create a large table definition cache to speed up opening of tables. The table definition cache takes less space and does not use file descriptors, unlike the normal table cache.
	//
	// tableDefinitionCache corresponds to the MySQL Server Administration system variable [tableDefinitionCache](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_table_definition_cache)
	TableDefinitionCache *int `pulumi:"tableDefinitionCache"`
	// The number of open tables for all threads. Increasing this value increases the number of file descriptors that mysqld requires.
	//
	// tableOpenCache corresponds to the MySQL Server Administration system variable [tableOpenCache](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_table_open_cache)
	TableOpenCache *int `pulumi:"tableOpenCache"`
	// Defines the maximum amount of memory that can be occupied by the TempTable storage engine before it starts storing data on disk. The default value is 1073741824 bytes (1GiB). For more information, see Section 10.4.4, “Internal Temporary Table Use in MySQL”.
	//
	// temptableMaxRam corresponds to the MySQL system variable [temptableMaxRam] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_temptable_max_ram).
	TemptableMaxRam *string `pulumi:"temptableMaxRam"`
	// Controls whether the thread pool uses dedicated listener threads. If enabled, a listener thread in each thread group is dedicated to the task of listening for network events from clients, ensuring that the maximum number of query worker threads is no more than the value specified by threadPoolMaxTransactionsLimit. threadPoolDedicatedListeners corresponds to the MySQL Database Service-specific system variable thread_pool_dedicated_listeners.
	ThreadPoolDedicatedListeners *bool `pulumi:"threadPoolDedicatedListeners"`
	// Limits the maximum number of open transactions to the defined value. The default value is 0, which enforces no limit. threadPoolMaxTransactionsLimit corresponds to the MySQL Database Service-specific system variable thread_pool_max_transactions_limit.
	ThreadPoolMaxTransactionsLimit *int `pulumi:"threadPoolMaxTransactionsLimit"`
	// The maximum number of query threads permitted in a thread group. The maximum value is 4096, but if threadPoolMaxTransactionsLimit is set, threadPoolQueryThreadsPerGroup must not exceed that value. The default value of 1 means there is one active query thread in each thread group, which works well for many loads. When you are using the high concurrency thread pool algorithm (thread_pool_algorithm = 1), consider increasing the value if you experience slower response times due to long-running transactions.
	//
	// threadPoolQueryThreadsPerGroup corresponds to the MySQL Server system variable [threadPoolQueryThreadsPerGroup](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_thread_pool_query_threads_per_group)
	ThreadPoolQueryThreadsPerGroup *int `pulumi:"threadPoolQueryThreadsPerGroup"`
	// The number of thread groups in the thread pool. This is the most important parameter controlling thread pool performance. It affects how many statements can execute simultaneously. If a value outside the range of permissible values is specified, the thread pool plugin does not load and the server writes a message to the error log.
	//
	// threadPoolSize corresponds to the MySQL Server System variable [threadPoolSize] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_thread_pool_size).
	ThreadPoolSize *int `pulumi:"threadPoolSize"`
	// The delay period before executing a new transaction, in milliseconds. The maximum value is 300000 (5 minutes). A transaction delay can be used in cases where parallel transactions affect the performance of other operations due to resource contention. For example, if parallel transactions affect index creation or an online buffer pool resizing operation, you can configure a transaction delay to reduce resource contention while those operations are running.
	//
	// threadPoolTransactionDelay corresponds to the MySQL Server system variable [threadPoolTransactionDelay](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_thread_pool_transaction_delay)
	ThreadPoolTransactionDelay *int `pulumi:"threadPoolTransactionDelay"`
	// Initializes the time zone for each client that connects.
	//
	// This corresponds to the MySQL System Variable "timeZone".
	//
	// The values can be given in one of the following formats, none of which are case-sensitive:
	// * As a string indicating an offset from UTC of the form [H]H:MM, prefixed with a + or -, such as '+10:00', '-6:00', or '+05:30'. The permitted range is '-13:59' to '+14:00', inclusive.
	// * As a named time zone, as defined by the "IANA Time Zone database", such as 'Europe/Helsinki', 'US/Eastern', 'MET', or 'UTC'.
	TimeZone *string `pulumi:"timeZone"`
	// The maximum size of internal in-memory temporary tables. This variable does not apply to user-created MEMORY tables.
	//
	// tmpTableSize corresponds to the MySQL system variable [tmpTableSize](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_tmp_table_size)
	TmpTableSize *string `pulumi:"tmpTableSize"`
	// ("transactionIsolation")
	TransactionIsolation *string `pulumi:"transactionIsolation"`
	// The number of seconds the server waits for activity on a noninteractive connection before closing it.
	//
	// waitTimeout corresponds to the MySQL system variable. [waitTimeout](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_wait_timeout)
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	WaitTimeout *int `pulumi:"waitTimeout"`
}

// MysqlConfigurationVariablesInput is an input type that accepts MysqlConfigurationVariablesArgs and MysqlConfigurationVariablesOutput values.
// You can construct a concrete instance of `MysqlConfigurationVariablesInput` via:
//
//	MysqlConfigurationVariablesArgs{...}
type MysqlConfigurationVariablesInput interface {
	pulumi.Input

	ToMysqlConfigurationVariablesOutput() MysqlConfigurationVariablesOutput
	ToMysqlConfigurationVariablesOutputWithContext(context.Context) MysqlConfigurationVariablesOutput
}

type MysqlConfigurationVariablesArgs struct {
	// auto_increment_increment and autoIncrementOffset are intended for use with circular (source-to-source) replication, and can be used to control the operation of AUTO_INCREMENT columns. Both variables have global and session values, and each can assume an integer value between 1 and 65,535 inclusive.
	//
	// autoIncrementIncrement corresponds to the MySQL Replication Source Options variable [autoIncrementIncrement] (https://dev.mysql.com/doc/refman/8.0/en/replication-options-source.html#sysvar_auto_increment_increment).
	AutoIncrementIncrement pulumi.IntPtrInput `pulumi:"autoIncrementIncrement"`
	// This variable has a default value of 1. If it is left with its default value, and Group Replication is started on the server in multi-primary mode, it is changed to the server ID.
	//
	// autoIncrementOffset corresponds to the MySQL Replication Source Options variable [autoIncrementOffset] (https://dev.mysql.com/doc/refman/8.0/en/replication-options-source.html#sysvar_auto_increment_offset).
	AutoIncrementOffset pulumi.IntPtrInput `pulumi:"autoIncrementOffset"`
	// ("autocommit")
	Autocommit pulumi.BoolPtrInput `pulumi:"autocommit"`
	// If enabled, the server stores all temporary tables on disk rather than in memory.
	//
	// bigTables corresponds to the MySQL server variable [bigTables](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_big_tables).
	BigTables pulumi.BoolPtrInput `pulumi:"bigTables"`
	// Sets the binary log expiration period in seconds. binlogExpireLogsSeconds corresponds to the MySQL binary logging system variable [binlogExpireLogsSeconds](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds).
	BinlogExpireLogsSeconds pulumi.IntPtrInput `pulumi:"binlogExpireLogsSeconds"`
	// Controls how many microseconds the binary log commit waits before synchronizing the binary log file to disk. There is no delay by default. Setting this variable to a microsecond delay enables more transactions to be synchronized together to disk at once, reducing the overall time to commit a group of transactions because the larger groups required fewer time units per group.
	//
	// binlogGroupCommitSyncDelay corresponds to the MySQL Replication system variable [binlogGroupCommitSyncDelay](https://dev.mysql.com/doc/refman/5.7/en/replication-options-binary-log.html#sysvar_binlog_group_commit_sync_delay)
	BinlogGroupCommitSyncDelay pulumi.IntPtrInput `pulumi:"binlogGroupCommitSyncDelay"`
	// The maximum number of transactions to wait for before aborting the current delay as specified by binlog_group_commit_sync_delay. If binlogGroupCommitSyncDelay is set to 0, then this option has no effect.
	//
	// binlogGroupCommitSyncNoDelayCount corresponds to the MySQL Replication system variable [binlogGroupCommitSyncNoDelayCount](https://dev.mysql.com/doc/refman/5.7/en/replication-options-binary-log.html#sysvar_binlog_group_commit_sync_no_delay_count)
	BinlogGroupCommitSyncNoDelayCount pulumi.IntPtrInput `pulumi:"binlogGroupCommitSyncNoDelayCount"`
	// Configures the amount of table metadata added to the binary log when using row-based logging. binlogRowMetadata corresponds to the MySQL binary logging system variable [binlogRowMetadata](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_metadata).
	BinlogRowMetadata pulumi.StringPtrInput `pulumi:"binlogRowMetadata"`
	// When set to PARTIAL_JSON, this enables use of a space-efficient binary log format for updates that modify only a small portion of a JSON document. binlogRowValueOptions corresponds to the MySQL binary logging system variable [binlogRowValueOptions](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_value_options).
	BinlogRowValueOptions pulumi.StringPtrInput `pulumi:"binlogRowValueOptions"`
	// Enables compression for transactions that are written to binary log files on this server. binlogTransactionCompression corresponds to the MySQL binary logging system variable [binlogTransactionCompression](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_transaction_compression).
	BinlogTransactionCompression pulumi.BoolPtrInput `pulumi:"binlogTransactionCompression"`
	// This variable controls the block encryption mode for block-based algorithms such as AES. It affects encryption for AES_ENCRYPT() and AES_DECRYPT(). blockEncryptionMode takes a value in aes-keylen-mode format, where keylen is the key length in bits and mode is the encryption mode. The value is not case-sensitive. Permitted keylen values are 128, 192, and 256. Permitted mode values are ECB, CBC, CFB1, CFB8, CFB128, and OFB.
	//
	// blockEncryptionMode corresponds to the MySQL Server Administration system variable [blockEncryptionMode](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_block_encryption_mode)
	BlockEncryptionMode pulumi.StringPtrInput `pulumi:"blockEncryptionMode"`
	// The server's default character set. If you set this variable, you should also set collationServer to specify the collation for the character set.
	//
	// characterSetServer corresponds to the MySQL server variable [characterSetServer](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_character_set_server).
	CharacterSetServer pulumi.StringPtrInput `pulumi:"characterSetServer"`
	// The server's default collation.
	//
	// collationServer corresponds to the MySQL server variable [collationServer](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_collation_server).
	CollationServer pulumi.StringPtrInput `pulumi:"collationServer"`
	// ("completionType")
	CompletionType pulumi.StringPtrInput `pulumi:"completionType"`
	// The number of seconds that the mysqld server waits for a connect packet before responding with Bad handshake.
	//
	// connectTimeout corresponds to the MySQL system variable [connectTimeout](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_connect_timeout)
	//
	// Increasing the connectTimeout value might help if clients frequently encounter errors of the form "Lost connection to MySQL server at 'XXX', system error: errno".
	ConnectTimeout pulumi.IntPtrInput `pulumi:"connectTimeout"`
	// Set the chunking size for updates to the global memory usage counter Global_connection_memory.
	//
	// connectionMemoryChunkSize corresponds to the MySQL system variable [connectionMemoryChunkSize](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_connection_memory_chunk_size).
	ConnectionMemoryChunkSize pulumi.IntPtrInput `pulumi:"connectionMemoryChunkSize"`
	// Set the maximum amount of memory that can be used by a single user connection.
	//
	// connectionMemoryLimit corresponds to the MySQL system variable [connectionMemoryLimit](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_connection_memory_limit).
	ConnectionMemoryLimit pulumi.StringPtrInput `pulumi:"connectionMemoryLimit"`
	// ("cteMaxRecursionDepth")
	CteMaxRecursionDepth pulumi.StringPtrInput `pulumi:"cteMaxRecursionDepth"`
	// The default authentication plugin. This must be a plugin that uses internal credentials storage, so these values are permitted: mysql_native_password, sha256_password, caching_sha2_password.
	//
	// As of MySQL 8.0.27, which introduces multifactor authentication, defaultAuthenticationPlugin is still used, but in conjunction with and at a lower precedence than the authenticationPolicy system variable. For details, see The Default Authentication Plugin. Because of this diminished role, defaultAuthenticationPlugin is deprecated as of MySQL 8.0.27 and subject to removal in a future MySQL version.
	//
	// defaultAuthenticationPlugin corresponds to the MySQL system variable [defaultAuthenticationPlugin](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_default_authentication_plugin).
	DefaultAuthenticationPlugin pulumi.StringPtrInput `pulumi:"defaultAuthenticationPlugin"`
	// This variable determines the default output format used by EXPLAIN in the absence of a FORMAT option when displaying a query execution plan.
	//
	// explainFormat corresponds to the MySQL system variable [explainFormat](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_explain_format).
	ExplainFormat pulumi.StringPtrInput `pulumi:"explainFormat"`
	// This system variable determines whether the server enables certain nonstandard behaviors for default values and NULL-value handling in TIMESTAMP columns. By default, explicitDefaultsForTimestamp is enabled, which disables the nonstandard behaviors. Disabling explicitDefaultsForTimestamp results in a warning.
	//
	// explicitDefaultsForTimestamp corresponds to the MySQL Server Administration system variable [explicitDefaultsForTimestamp](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_explicit_defaults_for_timestamp)
	ExplicitDefaultsForTimestamp pulumi.BoolPtrInput `pulumi:"explicitDefaultsForTimestamp"`
	// ("foreignKeyChecks")
	ForeignKeyChecks pulumi.BoolPtrInput `pulumi:"foreignKeyChecks"`
	// ("generatedRandomPasswordLength") DEPRECATED -- variable should not be settable and will be ignored
	//
	// Deprecated: The 'generated_random_password_length' field has been deprecated and may be removed in a future version. Do not use this field.
	GeneratedRandomPasswordLength pulumi.IntPtrInput `pulumi:"generatedRandomPasswordLength"`
	// Set the total amount of memory that can be used by all user connections.
	//
	// globalConnectionMemoryLimit corresponds to the MySQL system variable [globalConnectionMemoryLimit](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_global_connection_memory_limit).
	GlobalConnectionMemoryLimit pulumi.StringPtrInput `pulumi:"globalConnectionMemoryLimit"`
	// Determines whether the MySQL server calculates Global_connection_memory.
	//
	// globalConnectionMemoryTracking corresponds to the MySQL system variable [globalConnectionMemoryTracking](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_global_connection_memory_tracking).
	GlobalConnectionMemoryTracking pulumi.BoolPtrInput `pulumi:"globalConnectionMemoryTracking"`
	// Specifies the maximum permitted result length in bytes for the GROUP_CONCAT() function.
	//
	// This is the MySQL variable "groupConcatMaxLen". For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_group_concat_max_len)
	GroupConcatMaxLen pulumi.StringPtrInput `pulumi:"groupConcatMaxLen"`
	// * EVENTUAL: Both RO and RW transactions do not wait for preceding transactions to be applied before executing. A RW transaction does not wait for other members to apply a transaction. This means that a transaction could be externalized on one member before the others. This also means that in the event of a primary failover, the new primary can accept new RO and RW transactions before the previous primary transactions are all applied. RO transactions could result in outdated values, RW transactions could result in a rollback due to conflicts.
	// * BEFORE_ON_PRIMARY_FAILOVER: New RO or RW transactions with a newly elected primary that is applying backlog from the old primary are held (not applied) until any backlog has been applied. This ensures that when a primary failover happens, intentionally or not, clients always see the latest value on the primary. This guarantees consistency, but means that clients must be able to handle the delay in the event that a backlog is being applied. Usually this delay should be minimal, but does depend on the size of the backlog.
	// * BEFORE: A RW transaction waits for all preceding transactions to complete before being applied. A RO transaction waits for all preceding transactions to complete before being executed. This ensures that this transaction reads the latest value by only affecting the latency of the transaction. This reduces the overhead of synchronization on every RW transaction, by ensuring synchronization is used only on RO transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
	// * AFTER: A RW transaction waits until its changes have been applied to all of the other members. This value has no effect on RO transactions. This mode ensures that when a transaction is committed on the local member, any subsequent transaction reads the written value or a more recent value on any group member. Use this mode with a group that is used for predominantly RO operations to ensure that applied RW transactions are applied everywhere once they commit. This could be used by your application to ensure that subsequent reads fetch the latest data which includes the latest writes. This reduces the overhead of synchronization on every RO transaction, by ensuring synchronization is used only on RW transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
	// * BEFORE_AND_AFTER: A RW transaction waits for 1) all preceding transactions to complete before being applied and 2) until its changes have been applied on other members. A RO transaction waits for all preceding transactions to complete before execution takes place. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
	GroupReplicationConsistency pulumi.StringPtrInput `pulumi:"groupReplicationConsistency"`
	// ("informationSchemaStatsExpiry")
	InformationSchemaStatsExpiry pulumi.IntPtrInput `pulumi:"informationSchemaStatsExpiry"`
	// Whether the InnoDB adaptive hash index is enabled or disabled. It may be desirable, depending on your workload, to dynamically enable or disable adaptive hash indexing to improve query performance. Because the adaptive hash index may not be useful for all workloads, conduct benchmarks with it both enabled and disabled, using realistic workloads.
	//
	// innodbAdaptiveHashIndex corresponds to the MySQL InnoDB Startup Options and System Variables [innodbAdaptiveHashIndex] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_adaptive_hash_index).
	InnodbAdaptiveHashIndex pulumi.BoolPtrInput `pulumi:"innodbAdaptiveHashIndex"`
	// The lock mode to use for generating auto-increment values. Permissible values are 0, 1, or 2, for traditional, consecutive, or interleaved, respectively.
	//
	// innodbAutoincLockMode corresponds to the MySQL InnoDB Startup Options and System Variables [innodbAutoincLockMode] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_autoinc_lock_mode).
	InnodbAutoincLockMode pulumi.IntPtrInput `pulumi:"innodbAutoincLockMode"`
	// Specifies the percentage of the most recently used pages for each buffer pool to read out and dump.
	//
	// innodbBufferPoolDumpPct corresponds to the MySQL InnoDB system variable [innodbBufferPoolDumpPct](https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_buffer_pool_dump_pct).
	//
	// The range is 1 to 100. The default value is 25.
	//
	// For example, if there are 4 buffer pools with 100 pages each, and innodbBufferPoolDumpPct is set to 25, the 25 most recently used pages from each buffer pool are dumped.
	InnodbBufferPoolDumpPct pulumi.IntPtrInput `pulumi:"innodbBufferPoolDumpPct"`
	// ("innodbBufferPoolInstances")
	InnodbBufferPoolInstances pulumi.IntPtrInput `pulumi:"innodbBufferPoolInstances"`
	// The size (in bytes) of the buffer pool, that is, the memory area where InnoDB caches table and index data.
	//
	// innodbBufferPoolSize corresponds to the MySQL server system variable [innodbBufferPoolSize](https://dev.mysql.com/doc/refman/en/innodb-parameters.html#sysvar_innodb_buffer_pool_size).
	//
	// The default and maximum values depend on the amount of RAM provisioned by the shape. See [Default User Variables](https://www.terraform.io/mysql-database/doc/configuring-db-system.html#GUID-B5504C19-F6F4-4DAB-8506-189A4E8F4A6A).
	InnodbBufferPoolSize pulumi.StringPtrInput `pulumi:"innodbBufferPoolSize"`
	// Whether InnoDB performs change buffering, an optimization that delays write operations to secondary indexes so that the I/O operations can be performed sequentially. Permitted values are described in the following table. Values may also be specified numerically.
	//
	// innodbChangeBuffering corresponds to the MySQL InnoDB Startup Options and System Variables [innodbChangeBuffering] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_change_buffering).
	InnodbChangeBuffering pulumi.StringPtrInput `pulumi:"innodbChangeBuffering"`
	// innodbDdlBufferSize corresponds to the MySQL system variable [innodbDdlBufferSize] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_ddl_buffer_size)
	InnodbDdlBufferSize pulumi.StringPtrInput `pulumi:"innodbDdlBufferSize"`
	// innodbDdlThreads corresponds to the MySQL system variable [innodbDdlThreads] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_ddl_threads)
	InnodbDdlThreads pulumi.IntPtrInput `pulumi:"innodbDdlThreads"`
	// ("innodbFtEnableStopword")
	InnodbFtEnableStopword pulumi.BoolPtrInput `pulumi:"innodbFtEnableStopword"`
	// ("innodbFtMaxTokenSize")
	InnodbFtMaxTokenSize pulumi.IntPtrInput `pulumi:"innodbFtMaxTokenSize"`
	// ("innodbFtMinTokenSize")
	InnodbFtMinTokenSize pulumi.IntPtrInput `pulumi:"innodbFtMinTokenSize"`
	// ("innodbFtNumWordOptimize")
	InnodbFtNumWordOptimize pulumi.IntPtrInput `pulumi:"innodbFtNumWordOptimize"`
	// ("innodbFtResultCacheLimit")
	InnodbFtResultCacheLimit pulumi.StringPtrInput `pulumi:"innodbFtResultCacheLimit"`
	// ("innodbFtServerStopwordTable")
	InnodbFtServerStopwordTable pulumi.StringPtrInput `pulumi:"innodbFtServerStopwordTable"`
	// ("innodbLockWaitTimeout")
	InnodbLockWaitTimeout pulumi.IntPtrInput `pulumi:"innodbLockWaitTimeout"`
	// Enables dedicated log writer threads for writing redo log records from the log buffer to the system buffers and flushing the system buffers to the redo log files.
	//
	// This is the MySQL variable "innodbLogWriterThreads". For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_log_writer_threads)
	InnodbLogWriterThreads pulumi.BoolPtrInput `pulumi:"innodbLogWriterThreads"`
	// The desired maximum purge lag in terms of transactions.
	//
	// InnoDB maintains a list of transactions that have index records delete-marked by UPDATE or DELETE operations. The length of the list is the purge lag.
	//
	// If this value is exceeded, a delay is imposed on INSERT, UPDATE, and DELETE operations to allow time for purge to catch up.
	//
	// The default value is 0, which means there is no maximum purge lag and no delay.
	//
	// innodbMaxPurgeLag corresponds to the MySQL server system variable [innodbMaxPurgeLag](https://dev.mysql.com/doc/refman/en/innodb-parameters.html#sysvar_innodb_max_purge_lag).
	InnodbMaxPurgeLag pulumi.StringPtrInput `pulumi:"innodbMaxPurgeLag"`
	// The maximum delay in microseconds for the delay imposed when the innodbMaxPurgeLag threshold is exceeded.
	//
	// The specified innodbMaxPurgeLagDelay value is an upper limit on the delay period.
	//
	// innodbMaxPurgeLagDelay corresponds to the MySQL server system variable [innodbMaxPurgeLagDelay](https://dev.mysql.com/doc/refman/en/innodb-parameters.html#sysvar_innodb_max_purge_lag_delay).
	InnodbMaxPurgeLagDelay pulumi.IntPtrInput `pulumi:"innodbMaxPurgeLagDelay"`
	// Enables the NUMA interleave memory policy for allocation of the InnoDB buffer pool. When innodbNumaInterleave is enabled, the NUMA memory policy is set to MPOL_INTERLEAVE for the mysqld process. After the InnoDB buffer pool is allocated, the NUMA memory policy is set back to MPOL_DEFAULT. For the innodbNumaInterleave option to be available, MySQL must be compiled on a NUMA-enabled Linux system.
	//
	// innodbNumaInterleave corresponds to the MySQL InnoDB Startup Options and System Variables [innodbNumaInterleave] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_numa_interleave).
	InnodbNumaInterleave pulumi.BoolPtrInput `pulumi:"innodbNumaInterleave"`
	// Specifies an upper limit in bytes on the size of the temporary log files used during online DDL operations for InnoDB tables. There is one such log file for each index being created or table being altered. This log file stores data inserted, updated, or deleted in the table during the DDL operation.
	//
	// innodbOnlineAlterLogMaxSize corresponds to the MySQL InnoDB Startup Options and System Variables [innodbOnlineAlterLogMaxSize] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_online_alter_log_max_size).
	InnodbOnlineAlterLogMaxSize pulumi.StringPtrInput `pulumi:"innodbOnlineAlterLogMaxSize"`
	// Defines the amount of disk space occupied by redo log files. innodbRedoLogCapacity supercedes the innodbLogFilesInGroup and innodbLogFileSize variables, which are both ignored if innodbRedoLogCapacity is defined. If innodbRedoLogCapacity is not defined, and if neither innodbLogFileSize or innodbLogFilesInGroup are defined, then the default innodbRedoLogCapacity value is used.
	//
	// innodbRedoLogCapacity corresponds to the InnoDB Startup Options and System Variables [innodbRedoLogCapacity](https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_redo_log_capacity)
	InnodbRedoLogCapacity pulumi.StringPtrInput `pulumi:"innodbRedoLogCapacity"`
	// InnoDB rolls back only the last statement on a transaction timeout by default. If --innodb-rollback-on-timeout is specified, a transaction timeout causes InnoDB to abort and roll back the entire transaction.
	//
	// innodbRollbackOnTimeout corresponds to the MySQL InnoDB Startup Options and System Variables [innodbRollbackOnTimeout] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_rollback_on_timeout).
	InnodbRollbackOnTimeout pulumi.BoolPtrInput `pulumi:"innodbRollbackOnTimeout"`
	// This variable defines:
	// * The sort buffer size for online DDL operations that create or rebuild secondary indexes. However, as of MySQL 8.0.27, this responsibility is subsumed by the innodbDdlBufferSize variable.
	// * The amount by which the temporary log file is extended when recording concurrent DML during an online DDL operation, and the size of the temporary log file read buffer and write buffer.
	//
	// innodbSortBufferSize corresponds to the MySQL InnoDB Startup Options and System Variables [innodbSortBufferSize] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_sort_buffer_size).
	InnodbSortBufferSize pulumi.IntPtrInput `pulumi:"innodbSortBufferSize"`
	// The number of index pages to sample when estimating cardinality and other statistics for an indexed column, such as those calculated by ANALYZE TABLE.
	//
	// innodbStatsPersistentSamplePages corresponds to the MySQL InnoDB system variable [innodbStatsPersistentSamplePages](https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_stats_persistent_sample_pages)
	//
	// innodbStatsPersistentSamplePages only applies when innodbStatsPersistent is enabled for a table; when innodbStatsPersistent is disabled, innodbStatsTransientSamplePages applies instead.
	InnodbStatsPersistentSamplePages pulumi.StringPtrInput `pulumi:"innodbStatsPersistentSamplePages"`
	// The number of index pages to sample when estimating cardinality and other statistics for an indexed column, such as those calculated by [ANALYZE TABLE](https://dev.mysql.com/doc/refman/8.0/en/analyze-table.html).
	//
	// innodbStatsTransientSamplePages corresponds to the MySQL InnoDB system variable [innodbStatsTransientSamplePages](https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_stats_transient_sample_pages)
	//
	// innodbStatsTransientSamplePages only applies when innodbStatsPersistent is disabled for a table; when innodbStatsPersistent is enabled, innodbStatsPersistentSamplePages applies instead.
	//
	// innodbStatsPersistent is ON by default and cannot be changed. It is possible to override it using the STATS_PERSISTENT clause of the [CREATE TABLE](https://dev.mysql.com/doc/refman/8.0/en/create-table.html) and [ALTER TABLE](https://dev.mysql.com/doc/refman/8.0/en/alter-table.html) statements.
	InnodbStatsTransientSamplePages pulumi.StringPtrInput `pulumi:"innodbStatsTransientSamplePages"`
	// When you enable innodbStrictMode, the InnoDB storage engine returns errors instead of warnings for invalid or incompatible table options.
	//
	// innodbStrictMode corresponds to the MySQL InnoDB system variable [innodbStrictMode](https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_strict_mode)
	InnodbStrictMode pulumi.BoolPtrInput `pulumi:"innodbStrictMode"`
	// When enabled, undo tablespaces that exceed the threshold value defined by innodbMaxUndoLogSize are marked for truncation. Only undo tablespaces can be truncated. Truncating undo logs that reside in the system tablespace is not supported. For truncation to occur, there must be at least two undo tablespaces.
	//
	// innodbUndoLogTruncate corresponds to the MySQL InnoDB Startup Options and System Variables [innodbUndoLogTruncate] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_undo_log_truncate).
	InnodbUndoLogTruncate pulumi.BoolPtrInput `pulumi:"innodbUndoLogTruncate"`
	// The number of seconds the server waits for activity on an interactive connection before closing it.
	//
	// interactiveTimeout corresponds to the MySQL system variable. [interactiveTimeout](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_interactive_timeout)
	InteractiveTimeout pulumi.IntPtrInput `pulumi:"interactiveTimeout"`
	// The minimum size of the buffer that is used for plain index scans, range index scans, and joins that do not use indexes and thus perform full table scans. In MySQL 8.0.18 and later, this variable also controls the amount of memory used for hash joins. Normally, the best way to get fast joins is to add indexes. Increase the value of joinBufferSize to get a faster full join when adding indexes is not possible. One join buffer is allocated for each full join between two tables. For a complex join between several tables for which indexes are not used, multiple join buffers might be necessary.
	//
	// joinBufferSize corresponds to the MySQL Server System variable [joinBufferSize] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_join_buffer_size).
	JoinBufferSize pulumi.StringPtrInput `pulumi:"joinBufferSize"`
	// This variable controls server-side LOCAL capability for LOAD DATA statements. Depending on the localInfile setting, the server refuses or permits local data loading by clients that have LOCAL enabled on the client side.
	//
	// localInfile corresponds to the MySQL Server system variable [localInfile](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_local_infile)
	LocalInfile pulumi.BoolPtrInput `pulumi:"localInfile"`
	// If a query takes longer than this many seconds, the server increments the Slow_queries status variable. If the slow query log is enabled, the query is logged to the slow query log file. This value is measured in real time, not CPU time, so a query that is under the threshold on a lightly loaded system might be above the threshold on a heavily loaded one.
	//
	// longQueryTime corresponds to the MySQL Server System variable [longQueryTime] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_long_query_time).
	LongQueryTime pulumi.IntPtrInput `pulumi:"longQueryTime"`
	// ("mandatoryRoles")
	MandatoryRoles pulumi.StringPtrInput `pulumi:"mandatoryRoles"`
	// The maximum size of one packet or any generated/intermediate string.
	//
	// This is the mysql variable "maxAllowedPacket".
	MaxAllowedPacket pulumi.IntPtrInput `pulumi:"maxAllowedPacket"`
	// Sets the size of the transaction cache.
	//
	// maxBinlogCacheSize corresponds to the MySQL server system variable [maxBinlogCacheSize](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_max_binlog_cache_size).
	MaxBinlogCacheSize pulumi.StringPtrInput `pulumi:"maxBinlogCacheSize"`
	// ("maxConnectErrors")
	MaxConnectErrors pulumi.StringPtrInput `pulumi:"maxConnectErrors"`
	// ("maxConnections")
	MaxConnections pulumi.IntPtrInput `pulumi:"maxConnections"`
	// ("maxExecutionTime")
	MaxExecutionTime pulumi.StringPtrInput `pulumi:"maxExecutionTime"`
	// This variable sets the maximum size to which user-created MEMORY tables are permitted to grow.
	//
	// maxHeapTableSize corresponds to the MySQL system variable [maxHeapTableSize](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_max_heap_table_size)
	MaxHeapTableSize pulumi.StringPtrInput `pulumi:"maxHeapTableSize"`
	// ("maxPreparedStmtCount")
	MaxPreparedStmtCount pulumi.IntPtrInput `pulumi:"maxPreparedStmtCount"`
	// Limit the assumed maximum number of seeks when looking up rows based on a key. The MySQL optimizer assumes that no more than this number of key seeks are required when searching for matching rows in a table by scanning an index, regardless of the actual cardinality of the index (see Section 15.7.7.22, “SHOW INDEX Statement”). By setting this to a low value (say, 100), you can force MySQL to prefer indexes instead of table scans.
	//
	// maxSeeksForKey corresponds to the MySQL Server System variable [maxSeeksForKey] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_max_seeks_for_key).
	MaxSeeksForKey pulumi.StringPtrInput `pulumi:"maxSeeksForKey"`
	// The maximum number of simultaneous connections permitted to any given MySQL user account. A value of 0 (the default) means “no limit.” This variable has a global value that can be set at server startup or runtime. It also has a read-only session value that indicates the effective simultaneous-connection limit that applies to the account associated with the current session.
	//
	// maxUserConnections corresponds to the MySQL Server System variable [maxUserConnections] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_max_user_connections).
	MaxUserConnections pulumi.StringPtrInput `pulumi:"maxUserConnections"`
	// ("mysqlFirewallMode")
	MysqlFirewallMode pulumi.BoolPtrInput `pulumi:"mysqlFirewallMode"`
	// DEPRECATED -- typo of mysqlx_zstd_default_compression_level. variable will be ignored.
	//
	// Deprecated: The 'mysql_zstd_default_compression_level' field has been deprecated and may be removed in a future version. Do not use this field.
	MysqlZstdDefaultCompressionLevel pulumi.IntPtrInput `pulumi:"mysqlZstdDefaultCompressionLevel"`
	// The number of seconds X Plugin waits for the first packet to be received from newly connected clients.
	//
	// mysqlxConnectTimeout corresponds to the MySQL X Plugin system variable [mysqlxConnectTimeout](https://dev.mysql.com/doc/refman/8.0/en/x-plugin-options-system-variables.html#sysvar_mysqlx_connect_timeout)
	MysqlxConnectTimeout pulumi.IntPtrInput `pulumi:"mysqlxConnectTimeout"`
	// Set the default compression level for the deflate algorithm. ("mysqlxDeflateDefaultCompressionLevel")
	MysqlxDeflateDefaultCompressionLevel pulumi.IntPtrInput `pulumi:"mysqlxDeflateDefaultCompressionLevel"`
	// Limit the upper bound of accepted compression levels for the deflate algorithm. ("mysqlxDeflateMaxClientCompressionLevel")
	MysqlxDeflateMaxClientCompressionLevel pulumi.IntPtrInput `pulumi:"mysqlxDeflateMaxClientCompressionLevel"`
	// ("mysqlxDocumentIdUniquePrefix") DEPRECATED -- variable should not be settable and will be ignored
	//
	// Deprecated: The 'mysqlx_document_id_unique_prefix' field has been deprecated and may be removed in a future version. Do not use this field.
	MysqlxDocumentIdUniquePrefix pulumi.IntPtrInput `pulumi:"mysqlxDocumentIdUniquePrefix"`
	// ("mysqlxEnableHelloNotice") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxEnableHelloNotice pulumi.BoolPtrInput `pulumi:"mysqlxEnableHelloNotice"`
	// ("mysqlxIdleWorkerThreadTimeout") DEPRECATED -- variable should not be settable and will be ignored
	//
	// Deprecated: The 'mysqlx_idle_worker_thread_timeout' field has been deprecated and may be removed in a future version. Do not use this field.
	MysqlxIdleWorkerThreadTimeout pulumi.IntPtrInput `pulumi:"mysqlxIdleWorkerThreadTimeout"`
	// The number of seconds to wait for interactive clients to timeout.
	//
	// mysqlxInteractiveTimeout corresponds to the MySQL X Plugin system variable. [mysqlxInteractiveTimeout](https://dev.mysql.com/doc/refman/8.0/en/x-plugin-options-system-variables.html#sysvar_mysqlx_interactive_timeout)
	MysqlxInteractiveTimeout pulumi.IntPtrInput `pulumi:"mysqlxInteractiveTimeout"`
	// Set the default compression level for the lz4 algorithm. ("mysqlxLz4DefaultCompressionLevel")
	MysqlxLz4defaultCompressionLevel pulumi.IntPtrInput `pulumi:"mysqlxLz4defaultCompressionLevel"`
	// Limit the upper bound of accepted compression levels for the lz4 algorithm. ("mysqlxLz4MaxClientCompressionLevel")
	MysqlxLz4maxClientCompressionLevel pulumi.IntPtrInput `pulumi:"mysqlxLz4maxClientCompressionLevel"`
	// The maximum size of network packets that can be received by X Plugin.
	//
	// This is the mysql variable "mysqlxMaxAllowedPacket".
	MysqlxMaxAllowedPacket pulumi.IntPtrInput `pulumi:"mysqlxMaxAllowedPacket"`
	// ("mysqlxMinWorkerThreads") DEPRECATED -- variable should not be settable and will be ignored
	//
	// Deprecated: The 'mysqlx_min_worker_threads' field has been deprecated and may be removed in a future version. Do not use this field.
	MysqlxMinWorkerThreads pulumi.IntPtrInput `pulumi:"mysqlxMinWorkerThreads"`
	// The number of seconds that X Plugin waits for blocking read operations to complete. After this time, if the read operation is not successful, X Plugin closes the connection and returns a warning notice with the error code ER_IO_READ_ERROR to the client application.
	//
	// mysqlxReadTimeout corresponds to the MySQL X Plugin system variable [mysqlxReadTimeout](https://dev.mysql.com/doc/refman/8.0/en/x-plugin-options-system-variables.html#sysvar_mysqlx_read_timeout)
	MysqlxReadTimeout pulumi.IntPtrInput `pulumi:"mysqlxReadTimeout"`
	// The number of seconds that X Plugin waits for activity on a connection.
	//
	// mysqlxWaitTimeout corresponds to the MySQL X Plugin system variable. [mysqlxWaitTimeout](https://dev.mysql.com/doc/refman/8.0/en/x-plugin-options-system-variables.html#sysvar_mysqlx_wait_timeout)
	MysqlxWaitTimeout pulumi.IntPtrInput `pulumi:"mysqlxWaitTimeout"`
	// The number of seconds that X Plugin waits for blocking write operations to complete. After this time, if the write operation is not successful, X Plugin closes the connection.
	//
	// mysqlxReadmysqlxWriteTimeoutTimeout corresponds to the MySQL X Plugin system variable [mysqlxWriteTimeout](https://dev.mysql.com/doc/refman/8.0/en/x-plugin-options-system-variables.html#sysvar_mysqlx_write_timeout)
	MysqlxWriteTimeout pulumi.IntPtrInput `pulumi:"mysqlxWriteTimeout"`
	// Set the default compression level for the zstd algorithm. ("mysqlxZstdDefaultCompressionLevel")
	MysqlxZstdDefaultCompressionLevel pulumi.IntPtrInput `pulumi:"mysqlxZstdDefaultCompressionLevel"`
	// Limit the upper bound of accepted compression levels for the zstd algorithm. ("mysqlxZstdMaxClientCompressionLevel")
	MysqlxZstdMaxClientCompressionLevel pulumi.IntPtrInput `pulumi:"mysqlxZstdMaxClientCompressionLevel"`
	// The number of seconds to wait for more data from a connection before aborting the read.
	//
	// netReadTimeout corresponds to the MySQL system variable [netReadTimeout](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_net_read_timeout)
	NetReadTimeout pulumi.IntPtrInput `pulumi:"netReadTimeout"`
	// The number of seconds to wait for a block to be written to a connection before aborting the write.
	//
	// netWriteTimeout corresponds to the MySQL system variable [netWriteTimeout](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_net_write_timeout)
	NetWriteTimeout pulumi.IntPtrInput `pulumi:"netWriteTimeout"`
	// The optimizerSwitch system variable enables control over optimizer behavior. The value of this variable is a set of flags, each of which has a value of on or off to indicate whether the corresponding optimizer behavior is enabled or disabled. This variable has global and session values and can be changed at runtime. The global default can be set at server startup.
	//
	// Setting hypergraph_optimizer=on for cloud builds below 9.0.0 will fail.
	//
	// optimizerSwitch corresponds to the MySQL Server System variable [optimizerSwitch] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_optimizer_switch).
	OptimizerSwitch pulumi.StringPtrInput `pulumi:"optimizerSwitch"`
	// ("parserMaxMemSize")
	ParserMaxMemSize pulumi.StringPtrInput `pulumi:"parserMaxMemSize"`
	// ("queryAllocBlockSize") DEPRECATED -- variable should not be settable and will be ignored
	//
	// Deprecated: The 'query_alloc_block_size' field has been deprecated and may be removed in a future version. Do not use this field.
	QueryAllocBlockSize pulumi.StringPtrInput `pulumi:"queryAllocBlockSize"`
	// ("queryPreallocSize") DEPRECATED -- variable should not be settable and will be ignored
	QueryPreallocSize pulumi.StringPtrInput `pulumi:"queryPreallocSize"`
	// The limit on memory consumption for the range optimizer. A value of 0 means “no limit.” If an execution plan considered by the optimizer uses the range access method but the optimizer estimates that the amount of memory needed for this method would exceed the limit, it abandons the plan and considers other plans.
	//
	// rangeOptimizerMaxMemSize corresponds to the MySQL Server System variable [rangeOptimizerMaxMemSize] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_range_optimizer_max_mem_size).
	//
	// Deprecated: The 'query_prealloc_size' field has been deprecated and may be removed in a future version. Do not use this field.
	RangeOptimizerMaxMemSize pulumi.StringPtrInput `pulumi:"rangeOptimizerMaxMemSize"`
	// regexpTimeLimit corresponds to the MySQL system variable [regexpTimeLimit] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_regexp_time_limit)
	RegexpTimeLimit pulumi.IntPtrInput `pulumi:"regexpTimeLimit"`
	// The maximum amount of space to use for all relay logs.
	//
	// relayLogSpaceLimit corresponds to the MySQL Replica Server Options variable [relayLogSpaceLimit] (https://dev.mysql.com/doc/refman/8.0/en/replication-options-replica.html#sysvar_relay_log_space_limit).
	RelayLogSpaceLimit pulumi.StringPtrInput `pulumi:"relayLogSpaceLimit"`
	// Specifies the number of seconds to wait for more data or a heartbeat signal from the source before the replica considers the connection broken, aborts the read, and tries to reconnect. Setting this variable has no immediate effect. The state of the variable applies on all subsequent START REPLICA commands.
	//
	// replicaNetTimeout corresponds to the MySQL Replica server system variable [replicaNetTimeout](https://dev.mysql.com/doc/refman/8.0/en/replication-options-replica.html#sysvar_replica_net_timeout)
	ReplicaNetTimeout pulumi.IntPtrInput `pulumi:"replicaNetTimeout"`
	// Beginning with MySQL 8.0.26, slaveParallelWorkers is deprecated, and you should use replicaParallelWorkers instead. (Prior to MySQL 8.0.26, you must use slaveParallelWorkers to set the number of applier threads.)
	//
	// replicaParallelWorkers corresponds to the MySQL Replica Server Options variable [replicaParallelWorkers] (https://dev.mysql.com/doc/refman/8.0/en/replication-options-replica.html#sysvar_replica_parallel_workers).
	ReplicaParallelWorkers pulumi.IntPtrInput `pulumi:"replicaParallelWorkers"`
	// From MySQL 8.0.26, use replicaTypeConversions in place of slave_type_conversions, which is deprecated from that release. In releases before MySQL 8.0.26, use slave_type_conversions.
	//
	// replicaTypeConversions controls the type conversion mode in effect on the replica when using row-based replication. Its value is a comma-delimited set of zero or more elements from the list: ALL_LOSSY, ALL_NON_LOSSY, ALL_SIGNED, ALL_UNSIGNED. Set this variable to an empty string to disallow type conversions between the source and the replica. Setting this variable takes effect for all replication channels immediately, including running channels.
	//
	// replicaTypeConversions corresponds to the MySQL Replica Server Options variable [replicaTypeConversions] (https://dev.mysql.com/doc/refman/8.0/en/replication-options-replica.html#sysvar_replica_type_conversions).
	ReplicaTypeConversions pulumi.StringPtrInput `pulumi:"replicaTypeConversions"`
	// Whether client connections to the server are required to use some form of secure transport. When this variable is enabled, the server permits only TCP/IP connections encrypted using TLS/SSL, or connections that use a socket file or shared memory. The server rejects nonsecure connection attempts, which fail with an ER_SECURE_TRANSPORT_REQUIRED error.
	//
	// requireSecureTransport corresponds to the MySQL Server Administration system variable [requireSecureTransport](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_require_secure_transport)
	RequireSecureTransport pulumi.BoolPtrInput `pulumi:"requireSecureTransport"`
	// Whether to resolve host names when checking client connections. If this variable is OFF, mysqld resolves host names when checking client connections. If it is ON, mysqld uses only IP numbers; in this case, all Host column values in the grant tables must be IP addresses. See Section 7.1.12.3, “DNS Lookups and the Host Cache”.
	//
	// skipNameResolve corresponds to the MySQL Server System variable [skipNameResolve] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_skip_name_resolve).
	SkipNameResolve pulumi.BoolPtrInput `pulumi:"skipNameResolve"`
	// Each session that must perform a sort allocates a buffer of this size.
	//
	// sortBufferSize corresponds to the MySQL system variable [sortBufferSize](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_sort_buffer_size)
	SortBufferSize pulumi.StringPtrInput `pulumi:"sortBufferSize"`
	// Whether GIPK mode is in effect, in which case a MySQL replication source server adds a generated invisible primary key to any InnoDB table that is created without one.
	//
	// sqlGenerateInvisiblePrimaryKey corresponds to the MySQL system variable [sqlGenerateInvisiblePrimaryKey] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_sql_generate_invisible_primary_key).
	SqlGenerateInvisiblePrimaryKey pulumi.BoolPtrInput `pulumi:"sqlGenerateInvisiblePrimaryKey"`
	// ("sqlMode")
	SqlMode pulumi.StringPtrInput `pulumi:"sqlMode"`
	// ("sqlRequirePrimaryKey")
	SqlRequirePrimaryKey pulumi.BoolPtrInput `pulumi:"sqlRequirePrimaryKey"`
	// ("sqlWarnings")
	SqlWarnings pulumi.BoolPtrInput `pulumi:"sqlWarnings"`
	// The number of table definitions that can be stored in the table definition cache. If you use a large number of tables, you can create a large table definition cache to speed up opening of tables. The table definition cache takes less space and does not use file descriptors, unlike the normal table cache.
	//
	// tableDefinitionCache corresponds to the MySQL Server Administration system variable [tableDefinitionCache](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_table_definition_cache)
	TableDefinitionCache pulumi.IntPtrInput `pulumi:"tableDefinitionCache"`
	// The number of open tables for all threads. Increasing this value increases the number of file descriptors that mysqld requires.
	//
	// tableOpenCache corresponds to the MySQL Server Administration system variable [tableOpenCache](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_table_open_cache)
	TableOpenCache pulumi.IntPtrInput `pulumi:"tableOpenCache"`
	// Defines the maximum amount of memory that can be occupied by the TempTable storage engine before it starts storing data on disk. The default value is 1073741824 bytes (1GiB). For more information, see Section 10.4.4, “Internal Temporary Table Use in MySQL”.
	//
	// temptableMaxRam corresponds to the MySQL system variable [temptableMaxRam] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_temptable_max_ram).
	TemptableMaxRam pulumi.StringPtrInput `pulumi:"temptableMaxRam"`
	// Controls whether the thread pool uses dedicated listener threads. If enabled, a listener thread in each thread group is dedicated to the task of listening for network events from clients, ensuring that the maximum number of query worker threads is no more than the value specified by threadPoolMaxTransactionsLimit. threadPoolDedicatedListeners corresponds to the MySQL Database Service-specific system variable thread_pool_dedicated_listeners.
	ThreadPoolDedicatedListeners pulumi.BoolPtrInput `pulumi:"threadPoolDedicatedListeners"`
	// Limits the maximum number of open transactions to the defined value. The default value is 0, which enforces no limit. threadPoolMaxTransactionsLimit corresponds to the MySQL Database Service-specific system variable thread_pool_max_transactions_limit.
	ThreadPoolMaxTransactionsLimit pulumi.IntPtrInput `pulumi:"threadPoolMaxTransactionsLimit"`
	// The maximum number of query threads permitted in a thread group. The maximum value is 4096, but if threadPoolMaxTransactionsLimit is set, threadPoolQueryThreadsPerGroup must not exceed that value. The default value of 1 means there is one active query thread in each thread group, which works well for many loads. When you are using the high concurrency thread pool algorithm (thread_pool_algorithm = 1), consider increasing the value if you experience slower response times due to long-running transactions.
	//
	// threadPoolQueryThreadsPerGroup corresponds to the MySQL Server system variable [threadPoolQueryThreadsPerGroup](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_thread_pool_query_threads_per_group)
	ThreadPoolQueryThreadsPerGroup pulumi.IntPtrInput `pulumi:"threadPoolQueryThreadsPerGroup"`
	// The number of thread groups in the thread pool. This is the most important parameter controlling thread pool performance. It affects how many statements can execute simultaneously. If a value outside the range of permissible values is specified, the thread pool plugin does not load and the server writes a message to the error log.
	//
	// threadPoolSize corresponds to the MySQL Server System variable [threadPoolSize] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_thread_pool_size).
	ThreadPoolSize pulumi.IntPtrInput `pulumi:"threadPoolSize"`
	// The delay period before executing a new transaction, in milliseconds. The maximum value is 300000 (5 minutes). A transaction delay can be used in cases where parallel transactions affect the performance of other operations due to resource contention. For example, if parallel transactions affect index creation or an online buffer pool resizing operation, you can configure a transaction delay to reduce resource contention while those operations are running.
	//
	// threadPoolTransactionDelay corresponds to the MySQL Server system variable [threadPoolTransactionDelay](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_thread_pool_transaction_delay)
	ThreadPoolTransactionDelay pulumi.IntPtrInput `pulumi:"threadPoolTransactionDelay"`
	// Initializes the time zone for each client that connects.
	//
	// This corresponds to the MySQL System Variable "timeZone".
	//
	// The values can be given in one of the following formats, none of which are case-sensitive:
	// * As a string indicating an offset from UTC of the form [H]H:MM, prefixed with a + or -, such as '+10:00', '-6:00', or '+05:30'. The permitted range is '-13:59' to '+14:00', inclusive.
	// * As a named time zone, as defined by the "IANA Time Zone database", such as 'Europe/Helsinki', 'US/Eastern', 'MET', or 'UTC'.
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
	// The maximum size of internal in-memory temporary tables. This variable does not apply to user-created MEMORY tables.
	//
	// tmpTableSize corresponds to the MySQL system variable [tmpTableSize](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_tmp_table_size)
	TmpTableSize pulumi.StringPtrInput `pulumi:"tmpTableSize"`
	// ("transactionIsolation")
	TransactionIsolation pulumi.StringPtrInput `pulumi:"transactionIsolation"`
	// The number of seconds the server waits for activity on a noninteractive connection before closing it.
	//
	// waitTimeout corresponds to the MySQL system variable. [waitTimeout](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_wait_timeout)
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	WaitTimeout pulumi.IntPtrInput `pulumi:"waitTimeout"`
}

func (MysqlConfigurationVariablesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlConfigurationVariables)(nil)).Elem()
}

func (i MysqlConfigurationVariablesArgs) ToMysqlConfigurationVariablesOutput() MysqlConfigurationVariablesOutput {
	return i.ToMysqlConfigurationVariablesOutputWithContext(context.Background())
}

func (i MysqlConfigurationVariablesArgs) ToMysqlConfigurationVariablesOutputWithContext(ctx context.Context) MysqlConfigurationVariablesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlConfigurationVariablesOutput)
}

func (i MysqlConfigurationVariablesArgs) ToMysqlConfigurationVariablesPtrOutput() MysqlConfigurationVariablesPtrOutput {
	return i.ToMysqlConfigurationVariablesPtrOutputWithContext(context.Background())
}

func (i MysqlConfigurationVariablesArgs) ToMysqlConfigurationVariablesPtrOutputWithContext(ctx context.Context) MysqlConfigurationVariablesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlConfigurationVariablesOutput).ToMysqlConfigurationVariablesPtrOutputWithContext(ctx)
}

// MysqlConfigurationVariablesPtrInput is an input type that accepts MysqlConfigurationVariablesArgs, MysqlConfigurationVariablesPtr and MysqlConfigurationVariablesPtrOutput values.
// You can construct a concrete instance of `MysqlConfigurationVariablesPtrInput` via:
//
//	        MysqlConfigurationVariablesArgs{...}
//
//	or:
//
//	        nil
type MysqlConfigurationVariablesPtrInput interface {
	pulumi.Input

	ToMysqlConfigurationVariablesPtrOutput() MysqlConfigurationVariablesPtrOutput
	ToMysqlConfigurationVariablesPtrOutputWithContext(context.Context) MysqlConfigurationVariablesPtrOutput
}

type mysqlConfigurationVariablesPtrType MysqlConfigurationVariablesArgs

func MysqlConfigurationVariablesPtr(v *MysqlConfigurationVariablesArgs) MysqlConfigurationVariablesPtrInput {
	return (*mysqlConfigurationVariablesPtrType)(v)
}

func (*mysqlConfigurationVariablesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlConfigurationVariables)(nil)).Elem()
}

func (i *mysqlConfigurationVariablesPtrType) ToMysqlConfigurationVariablesPtrOutput() MysqlConfigurationVariablesPtrOutput {
	return i.ToMysqlConfigurationVariablesPtrOutputWithContext(context.Background())
}

func (i *mysqlConfigurationVariablesPtrType) ToMysqlConfigurationVariablesPtrOutputWithContext(ctx context.Context) MysqlConfigurationVariablesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlConfigurationVariablesPtrOutput)
}

type MysqlConfigurationVariablesOutput struct{ *pulumi.OutputState }

func (MysqlConfigurationVariablesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlConfigurationVariables)(nil)).Elem()
}

func (o MysqlConfigurationVariablesOutput) ToMysqlConfigurationVariablesOutput() MysqlConfigurationVariablesOutput {
	return o
}

func (o MysqlConfigurationVariablesOutput) ToMysqlConfigurationVariablesOutputWithContext(ctx context.Context) MysqlConfigurationVariablesOutput {
	return o
}

func (o MysqlConfigurationVariablesOutput) ToMysqlConfigurationVariablesPtrOutput() MysqlConfigurationVariablesPtrOutput {
	return o.ToMysqlConfigurationVariablesPtrOutputWithContext(context.Background())
}

func (o MysqlConfigurationVariablesOutput) ToMysqlConfigurationVariablesPtrOutputWithContext(ctx context.Context) MysqlConfigurationVariablesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MysqlConfigurationVariables) *MysqlConfigurationVariables {
		return &v
	}).(MysqlConfigurationVariablesPtrOutput)
}

// auto_increment_increment and autoIncrementOffset are intended for use with circular (source-to-source) replication, and can be used to control the operation of AUTO_INCREMENT columns. Both variables have global and session values, and each can assume an integer value between 1 and 65,535 inclusive.
//
// autoIncrementIncrement corresponds to the MySQL Replication Source Options variable [autoIncrementIncrement] (https://dev.mysql.com/doc/refman/8.0/en/replication-options-source.html#sysvar_auto_increment_increment).
func (o MysqlConfigurationVariablesOutput) AutoIncrementIncrement() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.AutoIncrementIncrement }).(pulumi.IntPtrOutput)
}

// This variable has a default value of 1. If it is left with its default value, and Group Replication is started on the server in multi-primary mode, it is changed to the server ID.
//
// autoIncrementOffset corresponds to the MySQL Replication Source Options variable [autoIncrementOffset] (https://dev.mysql.com/doc/refman/8.0/en/replication-options-source.html#sysvar_auto_increment_offset).
func (o MysqlConfigurationVariablesOutput) AutoIncrementOffset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.AutoIncrementOffset }).(pulumi.IntPtrOutput)
}

// ("autocommit")
func (o MysqlConfigurationVariablesOutput) Autocommit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *bool { return v.Autocommit }).(pulumi.BoolPtrOutput)
}

// If enabled, the server stores all temporary tables on disk rather than in memory.
//
// bigTables corresponds to the MySQL server variable [bigTables](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_big_tables).
func (o MysqlConfigurationVariablesOutput) BigTables() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *bool { return v.BigTables }).(pulumi.BoolPtrOutput)
}

// Sets the binary log expiration period in seconds. binlogExpireLogsSeconds corresponds to the MySQL binary logging system variable [binlogExpireLogsSeconds](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds).
func (o MysqlConfigurationVariablesOutput) BinlogExpireLogsSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.BinlogExpireLogsSeconds }).(pulumi.IntPtrOutput)
}

// Controls how many microseconds the binary log commit waits before synchronizing the binary log file to disk. There is no delay by default. Setting this variable to a microsecond delay enables more transactions to be synchronized together to disk at once, reducing the overall time to commit a group of transactions because the larger groups required fewer time units per group.
//
// binlogGroupCommitSyncDelay corresponds to the MySQL Replication system variable [binlogGroupCommitSyncDelay](https://dev.mysql.com/doc/refman/5.7/en/replication-options-binary-log.html#sysvar_binlog_group_commit_sync_delay)
func (o MysqlConfigurationVariablesOutput) BinlogGroupCommitSyncDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.BinlogGroupCommitSyncDelay }).(pulumi.IntPtrOutput)
}

// The maximum number of transactions to wait for before aborting the current delay as specified by binlog_group_commit_sync_delay. If binlogGroupCommitSyncDelay is set to 0, then this option has no effect.
//
// binlogGroupCommitSyncNoDelayCount corresponds to the MySQL Replication system variable [binlogGroupCommitSyncNoDelayCount](https://dev.mysql.com/doc/refman/5.7/en/replication-options-binary-log.html#sysvar_binlog_group_commit_sync_no_delay_count)
func (o MysqlConfigurationVariablesOutput) BinlogGroupCommitSyncNoDelayCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.BinlogGroupCommitSyncNoDelayCount }).(pulumi.IntPtrOutput)
}

// Configures the amount of table metadata added to the binary log when using row-based logging. binlogRowMetadata corresponds to the MySQL binary logging system variable [binlogRowMetadata](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_metadata).
func (o MysqlConfigurationVariablesOutput) BinlogRowMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.BinlogRowMetadata }).(pulumi.StringPtrOutput)
}

// When set to PARTIAL_JSON, this enables use of a space-efficient binary log format for updates that modify only a small portion of a JSON document. binlogRowValueOptions corresponds to the MySQL binary logging system variable [binlogRowValueOptions](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_value_options).
func (o MysqlConfigurationVariablesOutput) BinlogRowValueOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.BinlogRowValueOptions }).(pulumi.StringPtrOutput)
}

// Enables compression for transactions that are written to binary log files on this server. binlogTransactionCompression corresponds to the MySQL binary logging system variable [binlogTransactionCompression](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_transaction_compression).
func (o MysqlConfigurationVariablesOutput) BinlogTransactionCompression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *bool { return v.BinlogTransactionCompression }).(pulumi.BoolPtrOutput)
}

// This variable controls the block encryption mode for block-based algorithms such as AES. It affects encryption for AES_ENCRYPT() and AES_DECRYPT(). blockEncryptionMode takes a value in aes-keylen-mode format, where keylen is the key length in bits and mode is the encryption mode. The value is not case-sensitive. Permitted keylen values are 128, 192, and 256. Permitted mode values are ECB, CBC, CFB1, CFB8, CFB128, and OFB.
//
// blockEncryptionMode corresponds to the MySQL Server Administration system variable [blockEncryptionMode](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_block_encryption_mode)
func (o MysqlConfigurationVariablesOutput) BlockEncryptionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.BlockEncryptionMode }).(pulumi.StringPtrOutput)
}

// The server's default character set. If you set this variable, you should also set collationServer to specify the collation for the character set.
//
// characterSetServer corresponds to the MySQL server variable [characterSetServer](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_character_set_server).
func (o MysqlConfigurationVariablesOutput) CharacterSetServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.CharacterSetServer }).(pulumi.StringPtrOutput)
}

// The server's default collation.
//
// collationServer corresponds to the MySQL server variable [collationServer](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_collation_server).
func (o MysqlConfigurationVariablesOutput) CollationServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.CollationServer }).(pulumi.StringPtrOutput)
}

// ("completionType")
func (o MysqlConfigurationVariablesOutput) CompletionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.CompletionType }).(pulumi.StringPtrOutput)
}

// The number of seconds that the mysqld server waits for a connect packet before responding with Bad handshake.
//
// connectTimeout corresponds to the MySQL system variable [connectTimeout](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_connect_timeout)
//
// Increasing the connectTimeout value might help if clients frequently encounter errors of the form "Lost connection to MySQL server at 'XXX', system error: errno".
func (o MysqlConfigurationVariablesOutput) ConnectTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.ConnectTimeout }).(pulumi.IntPtrOutput)
}

// Set the chunking size for updates to the global memory usage counter Global_connection_memory.
//
// connectionMemoryChunkSize corresponds to the MySQL system variable [connectionMemoryChunkSize](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_connection_memory_chunk_size).
func (o MysqlConfigurationVariablesOutput) ConnectionMemoryChunkSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.ConnectionMemoryChunkSize }).(pulumi.IntPtrOutput)
}

// Set the maximum amount of memory that can be used by a single user connection.
//
// connectionMemoryLimit corresponds to the MySQL system variable [connectionMemoryLimit](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_connection_memory_limit).
func (o MysqlConfigurationVariablesOutput) ConnectionMemoryLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.ConnectionMemoryLimit }).(pulumi.StringPtrOutput)
}

// ("cteMaxRecursionDepth")
func (o MysqlConfigurationVariablesOutput) CteMaxRecursionDepth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.CteMaxRecursionDepth }).(pulumi.StringPtrOutput)
}

// The default authentication plugin. This must be a plugin that uses internal credentials storage, so these values are permitted: mysql_native_password, sha256_password, caching_sha2_password.
//
// As of MySQL 8.0.27, which introduces multifactor authentication, defaultAuthenticationPlugin is still used, but in conjunction with and at a lower precedence than the authenticationPolicy system variable. For details, see The Default Authentication Plugin. Because of this diminished role, defaultAuthenticationPlugin is deprecated as of MySQL 8.0.27 and subject to removal in a future MySQL version.
//
// defaultAuthenticationPlugin corresponds to the MySQL system variable [defaultAuthenticationPlugin](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_default_authentication_plugin).
func (o MysqlConfigurationVariablesOutput) DefaultAuthenticationPlugin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.DefaultAuthenticationPlugin }).(pulumi.StringPtrOutput)
}

// This variable determines the default output format used by EXPLAIN in the absence of a FORMAT option when displaying a query execution plan.
//
// explainFormat corresponds to the MySQL system variable [explainFormat](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_explain_format).
func (o MysqlConfigurationVariablesOutput) ExplainFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.ExplainFormat }).(pulumi.StringPtrOutput)
}

// This system variable determines whether the server enables certain nonstandard behaviors for default values and NULL-value handling in TIMESTAMP columns. By default, explicitDefaultsForTimestamp is enabled, which disables the nonstandard behaviors. Disabling explicitDefaultsForTimestamp results in a warning.
//
// explicitDefaultsForTimestamp corresponds to the MySQL Server Administration system variable [explicitDefaultsForTimestamp](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_explicit_defaults_for_timestamp)
func (o MysqlConfigurationVariablesOutput) ExplicitDefaultsForTimestamp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *bool { return v.ExplicitDefaultsForTimestamp }).(pulumi.BoolPtrOutput)
}

// ("foreignKeyChecks")
func (o MysqlConfigurationVariablesOutput) ForeignKeyChecks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *bool { return v.ForeignKeyChecks }).(pulumi.BoolPtrOutput)
}

// ("generatedRandomPasswordLength") DEPRECATED -- variable should not be settable and will be ignored
//
// Deprecated: The 'generated_random_password_length' field has been deprecated and may be removed in a future version. Do not use this field.
func (o MysqlConfigurationVariablesOutput) GeneratedRandomPasswordLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.GeneratedRandomPasswordLength }).(pulumi.IntPtrOutput)
}

// Set the total amount of memory that can be used by all user connections.
//
// globalConnectionMemoryLimit corresponds to the MySQL system variable [globalConnectionMemoryLimit](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_global_connection_memory_limit).
func (o MysqlConfigurationVariablesOutput) GlobalConnectionMemoryLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.GlobalConnectionMemoryLimit }).(pulumi.StringPtrOutput)
}

// Determines whether the MySQL server calculates Global_connection_memory.
//
// globalConnectionMemoryTracking corresponds to the MySQL system variable [globalConnectionMemoryTracking](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_global_connection_memory_tracking).
func (o MysqlConfigurationVariablesOutput) GlobalConnectionMemoryTracking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *bool { return v.GlobalConnectionMemoryTracking }).(pulumi.BoolPtrOutput)
}

// Specifies the maximum permitted result length in bytes for the GROUP_CONCAT() function.
//
// This is the MySQL variable "groupConcatMaxLen". For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_group_concat_max_len)
func (o MysqlConfigurationVariablesOutput) GroupConcatMaxLen() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.GroupConcatMaxLen }).(pulumi.StringPtrOutput)
}

// * EVENTUAL: Both RO and RW transactions do not wait for preceding transactions to be applied before executing. A RW transaction does not wait for other members to apply a transaction. This means that a transaction could be externalized on one member before the others. This also means that in the event of a primary failover, the new primary can accept new RO and RW transactions before the previous primary transactions are all applied. RO transactions could result in outdated values, RW transactions could result in a rollback due to conflicts.
// * BEFORE_ON_PRIMARY_FAILOVER: New RO or RW transactions with a newly elected primary that is applying backlog from the old primary are held (not applied) until any backlog has been applied. This ensures that when a primary failover happens, intentionally or not, clients always see the latest value on the primary. This guarantees consistency, but means that clients must be able to handle the delay in the event that a backlog is being applied. Usually this delay should be minimal, but does depend on the size of the backlog.
// * BEFORE: A RW transaction waits for all preceding transactions to complete before being applied. A RO transaction waits for all preceding transactions to complete before being executed. This ensures that this transaction reads the latest value by only affecting the latency of the transaction. This reduces the overhead of synchronization on every RW transaction, by ensuring synchronization is used only on RO transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
// * AFTER: A RW transaction waits until its changes have been applied to all of the other members. This value has no effect on RO transactions. This mode ensures that when a transaction is committed on the local member, any subsequent transaction reads the written value or a more recent value on any group member. Use this mode with a group that is used for predominantly RO operations to ensure that applied RW transactions are applied everywhere once they commit. This could be used by your application to ensure that subsequent reads fetch the latest data which includes the latest writes. This reduces the overhead of synchronization on every RO transaction, by ensuring synchronization is used only on RW transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
// * BEFORE_AND_AFTER: A RW transaction waits for 1) all preceding transactions to complete before being applied and 2) until its changes have been applied on other members. A RO transaction waits for all preceding transactions to complete before execution takes place. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
func (o MysqlConfigurationVariablesOutput) GroupReplicationConsistency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.GroupReplicationConsistency }).(pulumi.StringPtrOutput)
}

// ("informationSchemaStatsExpiry")
func (o MysqlConfigurationVariablesOutput) InformationSchemaStatsExpiry() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.InformationSchemaStatsExpiry }).(pulumi.IntPtrOutput)
}

// Whether the InnoDB adaptive hash index is enabled or disabled. It may be desirable, depending on your workload, to dynamically enable or disable adaptive hash indexing to improve query performance. Because the adaptive hash index may not be useful for all workloads, conduct benchmarks with it both enabled and disabled, using realistic workloads.
//
// innodbAdaptiveHashIndex corresponds to the MySQL InnoDB Startup Options and System Variables [innodbAdaptiveHashIndex] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_adaptive_hash_index).
func (o MysqlConfigurationVariablesOutput) InnodbAdaptiveHashIndex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *bool { return v.InnodbAdaptiveHashIndex }).(pulumi.BoolPtrOutput)
}

// The lock mode to use for generating auto-increment values. Permissible values are 0, 1, or 2, for traditional, consecutive, or interleaved, respectively.
//
// innodbAutoincLockMode corresponds to the MySQL InnoDB Startup Options and System Variables [innodbAutoincLockMode] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_autoinc_lock_mode).
func (o MysqlConfigurationVariablesOutput) InnodbAutoincLockMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.InnodbAutoincLockMode }).(pulumi.IntPtrOutput)
}

// Specifies the percentage of the most recently used pages for each buffer pool to read out and dump.
//
// innodbBufferPoolDumpPct corresponds to the MySQL InnoDB system variable [innodbBufferPoolDumpPct](https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_buffer_pool_dump_pct).
//
// The range is 1 to 100. The default value is 25.
//
// For example, if there are 4 buffer pools with 100 pages each, and innodbBufferPoolDumpPct is set to 25, the 25 most recently used pages from each buffer pool are dumped.
func (o MysqlConfigurationVariablesOutput) InnodbBufferPoolDumpPct() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.InnodbBufferPoolDumpPct }).(pulumi.IntPtrOutput)
}

// ("innodbBufferPoolInstances")
func (o MysqlConfigurationVariablesOutput) InnodbBufferPoolInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.InnodbBufferPoolInstances }).(pulumi.IntPtrOutput)
}

// The size (in bytes) of the buffer pool, that is, the memory area where InnoDB caches table and index data.
//
// innodbBufferPoolSize corresponds to the MySQL server system variable [innodbBufferPoolSize](https://dev.mysql.com/doc/refman/en/innodb-parameters.html#sysvar_innodb_buffer_pool_size).
//
// The default and maximum values depend on the amount of RAM provisioned by the shape. See [Default User Variables](https://www.terraform.io/mysql-database/doc/configuring-db-system.html#GUID-B5504C19-F6F4-4DAB-8506-189A4E8F4A6A).
func (o MysqlConfigurationVariablesOutput) InnodbBufferPoolSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.InnodbBufferPoolSize }).(pulumi.StringPtrOutput)
}

// Whether InnoDB performs change buffering, an optimization that delays write operations to secondary indexes so that the I/O operations can be performed sequentially. Permitted values are described in the following table. Values may also be specified numerically.
//
// innodbChangeBuffering corresponds to the MySQL InnoDB Startup Options and System Variables [innodbChangeBuffering] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_change_buffering).
func (o MysqlConfigurationVariablesOutput) InnodbChangeBuffering() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.InnodbChangeBuffering }).(pulumi.StringPtrOutput)
}

// innodbDdlBufferSize corresponds to the MySQL system variable [innodbDdlBufferSize] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_ddl_buffer_size)
func (o MysqlConfigurationVariablesOutput) InnodbDdlBufferSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.InnodbDdlBufferSize }).(pulumi.StringPtrOutput)
}

// innodbDdlThreads corresponds to the MySQL system variable [innodbDdlThreads] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_ddl_threads)
func (o MysqlConfigurationVariablesOutput) InnodbDdlThreads() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.InnodbDdlThreads }).(pulumi.IntPtrOutput)
}

// ("innodbFtEnableStopword")
func (o MysqlConfigurationVariablesOutput) InnodbFtEnableStopword() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *bool { return v.InnodbFtEnableStopword }).(pulumi.BoolPtrOutput)
}

// ("innodbFtMaxTokenSize")
func (o MysqlConfigurationVariablesOutput) InnodbFtMaxTokenSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.InnodbFtMaxTokenSize }).(pulumi.IntPtrOutput)
}

// ("innodbFtMinTokenSize")
func (o MysqlConfigurationVariablesOutput) InnodbFtMinTokenSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.InnodbFtMinTokenSize }).(pulumi.IntPtrOutput)
}

// ("innodbFtNumWordOptimize")
func (o MysqlConfigurationVariablesOutput) InnodbFtNumWordOptimize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.InnodbFtNumWordOptimize }).(pulumi.IntPtrOutput)
}

// ("innodbFtResultCacheLimit")
func (o MysqlConfigurationVariablesOutput) InnodbFtResultCacheLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.InnodbFtResultCacheLimit }).(pulumi.StringPtrOutput)
}

// ("innodbFtServerStopwordTable")
func (o MysqlConfigurationVariablesOutput) InnodbFtServerStopwordTable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.InnodbFtServerStopwordTable }).(pulumi.StringPtrOutput)
}

// ("innodbLockWaitTimeout")
func (o MysqlConfigurationVariablesOutput) InnodbLockWaitTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.InnodbLockWaitTimeout }).(pulumi.IntPtrOutput)
}

// Enables dedicated log writer threads for writing redo log records from the log buffer to the system buffers and flushing the system buffers to the redo log files.
//
// This is the MySQL variable "innodbLogWriterThreads". For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_log_writer_threads)
func (o MysqlConfigurationVariablesOutput) InnodbLogWriterThreads() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *bool { return v.InnodbLogWriterThreads }).(pulumi.BoolPtrOutput)
}

// The desired maximum purge lag in terms of transactions.
//
// InnoDB maintains a list of transactions that have index records delete-marked by UPDATE or DELETE operations. The length of the list is the purge lag.
//
// If this value is exceeded, a delay is imposed on INSERT, UPDATE, and DELETE operations to allow time for purge to catch up.
//
// The default value is 0, which means there is no maximum purge lag and no delay.
//
// innodbMaxPurgeLag corresponds to the MySQL server system variable [innodbMaxPurgeLag](https://dev.mysql.com/doc/refman/en/innodb-parameters.html#sysvar_innodb_max_purge_lag).
func (o MysqlConfigurationVariablesOutput) InnodbMaxPurgeLag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.InnodbMaxPurgeLag }).(pulumi.StringPtrOutput)
}

// The maximum delay in microseconds for the delay imposed when the innodbMaxPurgeLag threshold is exceeded.
//
// The specified innodbMaxPurgeLagDelay value is an upper limit on the delay period.
//
// innodbMaxPurgeLagDelay corresponds to the MySQL server system variable [innodbMaxPurgeLagDelay](https://dev.mysql.com/doc/refman/en/innodb-parameters.html#sysvar_innodb_max_purge_lag_delay).
func (o MysqlConfigurationVariablesOutput) InnodbMaxPurgeLagDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.InnodbMaxPurgeLagDelay }).(pulumi.IntPtrOutput)
}

// Enables the NUMA interleave memory policy for allocation of the InnoDB buffer pool. When innodbNumaInterleave is enabled, the NUMA memory policy is set to MPOL_INTERLEAVE for the mysqld process. After the InnoDB buffer pool is allocated, the NUMA memory policy is set back to MPOL_DEFAULT. For the innodbNumaInterleave option to be available, MySQL must be compiled on a NUMA-enabled Linux system.
//
// innodbNumaInterleave corresponds to the MySQL InnoDB Startup Options and System Variables [innodbNumaInterleave] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_numa_interleave).
func (o MysqlConfigurationVariablesOutput) InnodbNumaInterleave() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *bool { return v.InnodbNumaInterleave }).(pulumi.BoolPtrOutput)
}

// Specifies an upper limit in bytes on the size of the temporary log files used during online DDL operations for InnoDB tables. There is one such log file for each index being created or table being altered. This log file stores data inserted, updated, or deleted in the table during the DDL operation.
//
// innodbOnlineAlterLogMaxSize corresponds to the MySQL InnoDB Startup Options and System Variables [innodbOnlineAlterLogMaxSize] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_online_alter_log_max_size).
func (o MysqlConfigurationVariablesOutput) InnodbOnlineAlterLogMaxSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.InnodbOnlineAlterLogMaxSize }).(pulumi.StringPtrOutput)
}

// Defines the amount of disk space occupied by redo log files. innodbRedoLogCapacity supercedes the innodbLogFilesInGroup and innodbLogFileSize variables, which are both ignored if innodbRedoLogCapacity is defined. If innodbRedoLogCapacity is not defined, and if neither innodbLogFileSize or innodbLogFilesInGroup are defined, then the default innodbRedoLogCapacity value is used.
//
// innodbRedoLogCapacity corresponds to the InnoDB Startup Options and System Variables [innodbRedoLogCapacity](https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_redo_log_capacity)
func (o MysqlConfigurationVariablesOutput) InnodbRedoLogCapacity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.InnodbRedoLogCapacity }).(pulumi.StringPtrOutput)
}

// InnoDB rolls back only the last statement on a transaction timeout by default. If --innodb-rollback-on-timeout is specified, a transaction timeout causes InnoDB to abort and roll back the entire transaction.
//
// innodbRollbackOnTimeout corresponds to the MySQL InnoDB Startup Options and System Variables [innodbRollbackOnTimeout] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_rollback_on_timeout).
func (o MysqlConfigurationVariablesOutput) InnodbRollbackOnTimeout() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *bool { return v.InnodbRollbackOnTimeout }).(pulumi.BoolPtrOutput)
}

// This variable defines:
// * The sort buffer size for online DDL operations that create or rebuild secondary indexes. However, as of MySQL 8.0.27, this responsibility is subsumed by the innodbDdlBufferSize variable.
// * The amount by which the temporary log file is extended when recording concurrent DML during an online DDL operation, and the size of the temporary log file read buffer and write buffer.
//
// innodbSortBufferSize corresponds to the MySQL InnoDB Startup Options and System Variables [innodbSortBufferSize] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_sort_buffer_size).
func (o MysqlConfigurationVariablesOutput) InnodbSortBufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.InnodbSortBufferSize }).(pulumi.IntPtrOutput)
}

// The number of index pages to sample when estimating cardinality and other statistics for an indexed column, such as those calculated by ANALYZE TABLE.
//
// innodbStatsPersistentSamplePages corresponds to the MySQL InnoDB system variable [innodbStatsPersistentSamplePages](https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_stats_persistent_sample_pages)
//
// innodbStatsPersistentSamplePages only applies when innodbStatsPersistent is enabled for a table; when innodbStatsPersistent is disabled, innodbStatsTransientSamplePages applies instead.
func (o MysqlConfigurationVariablesOutput) InnodbStatsPersistentSamplePages() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.InnodbStatsPersistentSamplePages }).(pulumi.StringPtrOutput)
}

// The number of index pages to sample when estimating cardinality and other statistics for an indexed column, such as those calculated by [ANALYZE TABLE](https://dev.mysql.com/doc/refman/8.0/en/analyze-table.html).
//
// innodbStatsTransientSamplePages corresponds to the MySQL InnoDB system variable [innodbStatsTransientSamplePages](https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_stats_transient_sample_pages)
//
// innodbStatsTransientSamplePages only applies when innodbStatsPersistent is disabled for a table; when innodbStatsPersistent is enabled, innodbStatsPersistentSamplePages applies instead.
//
// innodbStatsPersistent is ON by default and cannot be changed. It is possible to override it using the STATS_PERSISTENT clause of the [CREATE TABLE](https://dev.mysql.com/doc/refman/8.0/en/create-table.html) and [ALTER TABLE](https://dev.mysql.com/doc/refman/8.0/en/alter-table.html) statements.
func (o MysqlConfigurationVariablesOutput) InnodbStatsTransientSamplePages() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.InnodbStatsTransientSamplePages }).(pulumi.StringPtrOutput)
}

// When you enable innodbStrictMode, the InnoDB storage engine returns errors instead of warnings for invalid or incompatible table options.
//
// innodbStrictMode corresponds to the MySQL InnoDB system variable [innodbStrictMode](https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_strict_mode)
func (o MysqlConfigurationVariablesOutput) InnodbStrictMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *bool { return v.InnodbStrictMode }).(pulumi.BoolPtrOutput)
}

// When enabled, undo tablespaces that exceed the threshold value defined by innodbMaxUndoLogSize are marked for truncation. Only undo tablespaces can be truncated. Truncating undo logs that reside in the system tablespace is not supported. For truncation to occur, there must be at least two undo tablespaces.
//
// innodbUndoLogTruncate corresponds to the MySQL InnoDB Startup Options and System Variables [innodbUndoLogTruncate] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_undo_log_truncate).
func (o MysqlConfigurationVariablesOutput) InnodbUndoLogTruncate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *bool { return v.InnodbUndoLogTruncate }).(pulumi.BoolPtrOutput)
}

// The number of seconds the server waits for activity on an interactive connection before closing it.
//
// interactiveTimeout corresponds to the MySQL system variable. [interactiveTimeout](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_interactive_timeout)
func (o MysqlConfigurationVariablesOutput) InteractiveTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.InteractiveTimeout }).(pulumi.IntPtrOutput)
}

// The minimum size of the buffer that is used for plain index scans, range index scans, and joins that do not use indexes and thus perform full table scans. In MySQL 8.0.18 and later, this variable also controls the amount of memory used for hash joins. Normally, the best way to get fast joins is to add indexes. Increase the value of joinBufferSize to get a faster full join when adding indexes is not possible. One join buffer is allocated for each full join between two tables. For a complex join between several tables for which indexes are not used, multiple join buffers might be necessary.
//
// joinBufferSize corresponds to the MySQL Server System variable [joinBufferSize] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_join_buffer_size).
func (o MysqlConfigurationVariablesOutput) JoinBufferSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.JoinBufferSize }).(pulumi.StringPtrOutput)
}

// This variable controls server-side LOCAL capability for LOAD DATA statements. Depending on the localInfile setting, the server refuses or permits local data loading by clients that have LOCAL enabled on the client side.
//
// localInfile corresponds to the MySQL Server system variable [localInfile](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_local_infile)
func (o MysqlConfigurationVariablesOutput) LocalInfile() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *bool { return v.LocalInfile }).(pulumi.BoolPtrOutput)
}

// If a query takes longer than this many seconds, the server increments the Slow_queries status variable. If the slow query log is enabled, the query is logged to the slow query log file. This value is measured in real time, not CPU time, so a query that is under the threshold on a lightly loaded system might be above the threshold on a heavily loaded one.
//
// longQueryTime corresponds to the MySQL Server System variable [longQueryTime] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_long_query_time).
func (o MysqlConfigurationVariablesOutput) LongQueryTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.LongQueryTime }).(pulumi.IntPtrOutput)
}

// ("mandatoryRoles")
func (o MysqlConfigurationVariablesOutput) MandatoryRoles() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.MandatoryRoles }).(pulumi.StringPtrOutput)
}

// The maximum size of one packet or any generated/intermediate string.
//
// This is the mysql variable "maxAllowedPacket".
func (o MysqlConfigurationVariablesOutput) MaxAllowedPacket() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.MaxAllowedPacket }).(pulumi.IntPtrOutput)
}

// Sets the size of the transaction cache.
//
// maxBinlogCacheSize corresponds to the MySQL server system variable [maxBinlogCacheSize](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_max_binlog_cache_size).
func (o MysqlConfigurationVariablesOutput) MaxBinlogCacheSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.MaxBinlogCacheSize }).(pulumi.StringPtrOutput)
}

// ("maxConnectErrors")
func (o MysqlConfigurationVariablesOutput) MaxConnectErrors() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.MaxConnectErrors }).(pulumi.StringPtrOutput)
}

// ("maxConnections")
func (o MysqlConfigurationVariablesOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.MaxConnections }).(pulumi.IntPtrOutput)
}

// ("maxExecutionTime")
func (o MysqlConfigurationVariablesOutput) MaxExecutionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.MaxExecutionTime }).(pulumi.StringPtrOutput)
}

// This variable sets the maximum size to which user-created MEMORY tables are permitted to grow.
//
// maxHeapTableSize corresponds to the MySQL system variable [maxHeapTableSize](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_max_heap_table_size)
func (o MysqlConfigurationVariablesOutput) MaxHeapTableSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.MaxHeapTableSize }).(pulumi.StringPtrOutput)
}

// ("maxPreparedStmtCount")
func (o MysqlConfigurationVariablesOutput) MaxPreparedStmtCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.MaxPreparedStmtCount }).(pulumi.IntPtrOutput)
}

// Limit the assumed maximum number of seeks when looking up rows based on a key. The MySQL optimizer assumes that no more than this number of key seeks are required when searching for matching rows in a table by scanning an index, regardless of the actual cardinality of the index (see Section 15.7.7.22, “SHOW INDEX Statement”). By setting this to a low value (say, 100), you can force MySQL to prefer indexes instead of table scans.
//
// maxSeeksForKey corresponds to the MySQL Server System variable [maxSeeksForKey] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_max_seeks_for_key).
func (o MysqlConfigurationVariablesOutput) MaxSeeksForKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.MaxSeeksForKey }).(pulumi.StringPtrOutput)
}

// The maximum number of simultaneous connections permitted to any given MySQL user account. A value of 0 (the default) means “no limit.” This variable has a global value that can be set at server startup or runtime. It also has a read-only session value that indicates the effective simultaneous-connection limit that applies to the account associated with the current session.
//
// maxUserConnections corresponds to the MySQL Server System variable [maxUserConnections] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_max_user_connections).
func (o MysqlConfigurationVariablesOutput) MaxUserConnections() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.MaxUserConnections }).(pulumi.StringPtrOutput)
}

// ("mysqlFirewallMode")
func (o MysqlConfigurationVariablesOutput) MysqlFirewallMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *bool { return v.MysqlFirewallMode }).(pulumi.BoolPtrOutput)
}

// DEPRECATED -- typo of mysqlx_zstd_default_compression_level. variable will be ignored.
//
// Deprecated: The 'mysql_zstd_default_compression_level' field has been deprecated and may be removed in a future version. Do not use this field.
func (o MysqlConfigurationVariablesOutput) MysqlZstdDefaultCompressionLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.MysqlZstdDefaultCompressionLevel }).(pulumi.IntPtrOutput)
}

// The number of seconds X Plugin waits for the first packet to be received from newly connected clients.
//
// mysqlxConnectTimeout corresponds to the MySQL X Plugin system variable [mysqlxConnectTimeout](https://dev.mysql.com/doc/refman/8.0/en/x-plugin-options-system-variables.html#sysvar_mysqlx_connect_timeout)
func (o MysqlConfigurationVariablesOutput) MysqlxConnectTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.MysqlxConnectTimeout }).(pulumi.IntPtrOutput)
}

// Set the default compression level for the deflate algorithm. ("mysqlxDeflateDefaultCompressionLevel")
func (o MysqlConfigurationVariablesOutput) MysqlxDeflateDefaultCompressionLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.MysqlxDeflateDefaultCompressionLevel }).(pulumi.IntPtrOutput)
}

// Limit the upper bound of accepted compression levels for the deflate algorithm. ("mysqlxDeflateMaxClientCompressionLevel")
func (o MysqlConfigurationVariablesOutput) MysqlxDeflateMaxClientCompressionLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.MysqlxDeflateMaxClientCompressionLevel }).(pulumi.IntPtrOutput)
}

// ("mysqlxDocumentIdUniquePrefix") DEPRECATED -- variable should not be settable and will be ignored
//
// Deprecated: The 'mysqlx_document_id_unique_prefix' field has been deprecated and may be removed in a future version. Do not use this field.
func (o MysqlConfigurationVariablesOutput) MysqlxDocumentIdUniquePrefix() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.MysqlxDocumentIdUniquePrefix }).(pulumi.IntPtrOutput)
}

// ("mysqlxEnableHelloNotice") DEPRECATED -- variable should not be settable and will be ignored
func (o MysqlConfigurationVariablesOutput) MysqlxEnableHelloNotice() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *bool { return v.MysqlxEnableHelloNotice }).(pulumi.BoolPtrOutput)
}

// ("mysqlxIdleWorkerThreadTimeout") DEPRECATED -- variable should not be settable and will be ignored
//
// Deprecated: The 'mysqlx_idle_worker_thread_timeout' field has been deprecated and may be removed in a future version. Do not use this field.
func (o MysqlConfigurationVariablesOutput) MysqlxIdleWorkerThreadTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.MysqlxIdleWorkerThreadTimeout }).(pulumi.IntPtrOutput)
}

// The number of seconds to wait for interactive clients to timeout.
//
// mysqlxInteractiveTimeout corresponds to the MySQL X Plugin system variable. [mysqlxInteractiveTimeout](https://dev.mysql.com/doc/refman/8.0/en/x-plugin-options-system-variables.html#sysvar_mysqlx_interactive_timeout)
func (o MysqlConfigurationVariablesOutput) MysqlxInteractiveTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.MysqlxInteractiveTimeout }).(pulumi.IntPtrOutput)
}

// Set the default compression level for the lz4 algorithm. ("mysqlxLz4DefaultCompressionLevel")
func (o MysqlConfigurationVariablesOutput) MysqlxLz4defaultCompressionLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.MysqlxLz4defaultCompressionLevel }).(pulumi.IntPtrOutput)
}

// Limit the upper bound of accepted compression levels for the lz4 algorithm. ("mysqlxLz4MaxClientCompressionLevel")
func (o MysqlConfigurationVariablesOutput) MysqlxLz4maxClientCompressionLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.MysqlxLz4maxClientCompressionLevel }).(pulumi.IntPtrOutput)
}

// The maximum size of network packets that can be received by X Plugin.
//
// This is the mysql variable "mysqlxMaxAllowedPacket".
func (o MysqlConfigurationVariablesOutput) MysqlxMaxAllowedPacket() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.MysqlxMaxAllowedPacket }).(pulumi.IntPtrOutput)
}

// ("mysqlxMinWorkerThreads") DEPRECATED -- variable should not be settable and will be ignored
//
// Deprecated: The 'mysqlx_min_worker_threads' field has been deprecated and may be removed in a future version. Do not use this field.
func (o MysqlConfigurationVariablesOutput) MysqlxMinWorkerThreads() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.MysqlxMinWorkerThreads }).(pulumi.IntPtrOutput)
}

// The number of seconds that X Plugin waits for blocking read operations to complete. After this time, if the read operation is not successful, X Plugin closes the connection and returns a warning notice with the error code ER_IO_READ_ERROR to the client application.
//
// mysqlxReadTimeout corresponds to the MySQL X Plugin system variable [mysqlxReadTimeout](https://dev.mysql.com/doc/refman/8.0/en/x-plugin-options-system-variables.html#sysvar_mysqlx_read_timeout)
func (o MysqlConfigurationVariablesOutput) MysqlxReadTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.MysqlxReadTimeout }).(pulumi.IntPtrOutput)
}

// The number of seconds that X Plugin waits for activity on a connection.
//
// mysqlxWaitTimeout corresponds to the MySQL X Plugin system variable. [mysqlxWaitTimeout](https://dev.mysql.com/doc/refman/8.0/en/x-plugin-options-system-variables.html#sysvar_mysqlx_wait_timeout)
func (o MysqlConfigurationVariablesOutput) MysqlxWaitTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.MysqlxWaitTimeout }).(pulumi.IntPtrOutput)
}

// The number of seconds that X Plugin waits for blocking write operations to complete. After this time, if the write operation is not successful, X Plugin closes the connection.
//
// mysqlxReadmysqlxWriteTimeoutTimeout corresponds to the MySQL X Plugin system variable [mysqlxWriteTimeout](https://dev.mysql.com/doc/refman/8.0/en/x-plugin-options-system-variables.html#sysvar_mysqlx_write_timeout)
func (o MysqlConfigurationVariablesOutput) MysqlxWriteTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.MysqlxWriteTimeout }).(pulumi.IntPtrOutput)
}

// Set the default compression level for the zstd algorithm. ("mysqlxZstdDefaultCompressionLevel")
func (o MysqlConfigurationVariablesOutput) MysqlxZstdDefaultCompressionLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.MysqlxZstdDefaultCompressionLevel }).(pulumi.IntPtrOutput)
}

// Limit the upper bound of accepted compression levels for the zstd algorithm. ("mysqlxZstdMaxClientCompressionLevel")
func (o MysqlConfigurationVariablesOutput) MysqlxZstdMaxClientCompressionLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.MysqlxZstdMaxClientCompressionLevel }).(pulumi.IntPtrOutput)
}

// The number of seconds to wait for more data from a connection before aborting the read.
//
// netReadTimeout corresponds to the MySQL system variable [netReadTimeout](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_net_read_timeout)
func (o MysqlConfigurationVariablesOutput) NetReadTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.NetReadTimeout }).(pulumi.IntPtrOutput)
}

// The number of seconds to wait for a block to be written to a connection before aborting the write.
//
// netWriteTimeout corresponds to the MySQL system variable [netWriteTimeout](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_net_write_timeout)
func (o MysqlConfigurationVariablesOutput) NetWriteTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.NetWriteTimeout }).(pulumi.IntPtrOutput)
}

// The optimizerSwitch system variable enables control over optimizer behavior. The value of this variable is a set of flags, each of which has a value of on or off to indicate whether the corresponding optimizer behavior is enabled or disabled. This variable has global and session values and can be changed at runtime. The global default can be set at server startup.
//
// Setting hypergraph_optimizer=on for cloud builds below 9.0.0 will fail.
//
// optimizerSwitch corresponds to the MySQL Server System variable [optimizerSwitch] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_optimizer_switch).
func (o MysqlConfigurationVariablesOutput) OptimizerSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.OptimizerSwitch }).(pulumi.StringPtrOutput)
}

// ("parserMaxMemSize")
func (o MysqlConfigurationVariablesOutput) ParserMaxMemSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.ParserMaxMemSize }).(pulumi.StringPtrOutput)
}

// ("queryAllocBlockSize") DEPRECATED -- variable should not be settable and will be ignored
//
// Deprecated: The 'query_alloc_block_size' field has been deprecated and may be removed in a future version. Do not use this field.
func (o MysqlConfigurationVariablesOutput) QueryAllocBlockSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.QueryAllocBlockSize }).(pulumi.StringPtrOutput)
}

// ("queryPreallocSize") DEPRECATED -- variable should not be settable and will be ignored
func (o MysqlConfigurationVariablesOutput) QueryPreallocSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.QueryPreallocSize }).(pulumi.StringPtrOutput)
}

// The limit on memory consumption for the range optimizer. A value of 0 means “no limit.” If an execution plan considered by the optimizer uses the range access method but the optimizer estimates that the amount of memory needed for this method would exceed the limit, it abandons the plan and considers other plans.
//
// rangeOptimizerMaxMemSize corresponds to the MySQL Server System variable [rangeOptimizerMaxMemSize] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_range_optimizer_max_mem_size).
//
// Deprecated: The 'query_prealloc_size' field has been deprecated and may be removed in a future version. Do not use this field.
func (o MysqlConfigurationVariablesOutput) RangeOptimizerMaxMemSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.RangeOptimizerMaxMemSize }).(pulumi.StringPtrOutput)
}

// regexpTimeLimit corresponds to the MySQL system variable [regexpTimeLimit] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_regexp_time_limit)
func (o MysqlConfigurationVariablesOutput) RegexpTimeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.RegexpTimeLimit }).(pulumi.IntPtrOutput)
}

// The maximum amount of space to use for all relay logs.
//
// relayLogSpaceLimit corresponds to the MySQL Replica Server Options variable [relayLogSpaceLimit] (https://dev.mysql.com/doc/refman/8.0/en/replication-options-replica.html#sysvar_relay_log_space_limit).
func (o MysqlConfigurationVariablesOutput) RelayLogSpaceLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.RelayLogSpaceLimit }).(pulumi.StringPtrOutput)
}

// Specifies the number of seconds to wait for more data or a heartbeat signal from the source before the replica considers the connection broken, aborts the read, and tries to reconnect. Setting this variable has no immediate effect. The state of the variable applies on all subsequent START REPLICA commands.
//
// replicaNetTimeout corresponds to the MySQL Replica server system variable [replicaNetTimeout](https://dev.mysql.com/doc/refman/8.0/en/replication-options-replica.html#sysvar_replica_net_timeout)
func (o MysqlConfigurationVariablesOutput) ReplicaNetTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.ReplicaNetTimeout }).(pulumi.IntPtrOutput)
}

// Beginning with MySQL 8.0.26, slaveParallelWorkers is deprecated, and you should use replicaParallelWorkers instead. (Prior to MySQL 8.0.26, you must use slaveParallelWorkers to set the number of applier threads.)
//
// replicaParallelWorkers corresponds to the MySQL Replica Server Options variable [replicaParallelWorkers] (https://dev.mysql.com/doc/refman/8.0/en/replication-options-replica.html#sysvar_replica_parallel_workers).
func (o MysqlConfigurationVariablesOutput) ReplicaParallelWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.ReplicaParallelWorkers }).(pulumi.IntPtrOutput)
}

// From MySQL 8.0.26, use replicaTypeConversions in place of slave_type_conversions, which is deprecated from that release. In releases before MySQL 8.0.26, use slave_type_conversions.
//
// replicaTypeConversions controls the type conversion mode in effect on the replica when using row-based replication. Its value is a comma-delimited set of zero or more elements from the list: ALL_LOSSY, ALL_NON_LOSSY, ALL_SIGNED, ALL_UNSIGNED. Set this variable to an empty string to disallow type conversions between the source and the replica. Setting this variable takes effect for all replication channels immediately, including running channels.
//
// replicaTypeConversions corresponds to the MySQL Replica Server Options variable [replicaTypeConversions] (https://dev.mysql.com/doc/refman/8.0/en/replication-options-replica.html#sysvar_replica_type_conversions).
func (o MysqlConfigurationVariablesOutput) ReplicaTypeConversions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.ReplicaTypeConversions }).(pulumi.StringPtrOutput)
}

// Whether client connections to the server are required to use some form of secure transport. When this variable is enabled, the server permits only TCP/IP connections encrypted using TLS/SSL, or connections that use a socket file or shared memory. The server rejects nonsecure connection attempts, which fail with an ER_SECURE_TRANSPORT_REQUIRED error.
//
// requireSecureTransport corresponds to the MySQL Server Administration system variable [requireSecureTransport](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_require_secure_transport)
func (o MysqlConfigurationVariablesOutput) RequireSecureTransport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *bool { return v.RequireSecureTransport }).(pulumi.BoolPtrOutput)
}

// Whether to resolve host names when checking client connections. If this variable is OFF, mysqld resolves host names when checking client connections. If it is ON, mysqld uses only IP numbers; in this case, all Host column values in the grant tables must be IP addresses. See Section 7.1.12.3, “DNS Lookups and the Host Cache”.
//
// skipNameResolve corresponds to the MySQL Server System variable [skipNameResolve] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_skip_name_resolve).
func (o MysqlConfigurationVariablesOutput) SkipNameResolve() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *bool { return v.SkipNameResolve }).(pulumi.BoolPtrOutput)
}

// Each session that must perform a sort allocates a buffer of this size.
//
// sortBufferSize corresponds to the MySQL system variable [sortBufferSize](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_sort_buffer_size)
func (o MysqlConfigurationVariablesOutput) SortBufferSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.SortBufferSize }).(pulumi.StringPtrOutput)
}

// Whether GIPK mode is in effect, in which case a MySQL replication source server adds a generated invisible primary key to any InnoDB table that is created without one.
//
// sqlGenerateInvisiblePrimaryKey corresponds to the MySQL system variable [sqlGenerateInvisiblePrimaryKey] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_sql_generate_invisible_primary_key).
func (o MysqlConfigurationVariablesOutput) SqlGenerateInvisiblePrimaryKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *bool { return v.SqlGenerateInvisiblePrimaryKey }).(pulumi.BoolPtrOutput)
}

// ("sqlMode")
func (o MysqlConfigurationVariablesOutput) SqlMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.SqlMode }).(pulumi.StringPtrOutput)
}

// ("sqlRequirePrimaryKey")
func (o MysqlConfigurationVariablesOutput) SqlRequirePrimaryKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *bool { return v.SqlRequirePrimaryKey }).(pulumi.BoolPtrOutput)
}

// ("sqlWarnings")
func (o MysqlConfigurationVariablesOutput) SqlWarnings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *bool { return v.SqlWarnings }).(pulumi.BoolPtrOutput)
}

// The number of table definitions that can be stored in the table definition cache. If you use a large number of tables, you can create a large table definition cache to speed up opening of tables. The table definition cache takes less space and does not use file descriptors, unlike the normal table cache.
//
// tableDefinitionCache corresponds to the MySQL Server Administration system variable [tableDefinitionCache](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_table_definition_cache)
func (o MysqlConfigurationVariablesOutput) TableDefinitionCache() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.TableDefinitionCache }).(pulumi.IntPtrOutput)
}

// The number of open tables for all threads. Increasing this value increases the number of file descriptors that mysqld requires.
//
// tableOpenCache corresponds to the MySQL Server Administration system variable [tableOpenCache](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_table_open_cache)
func (o MysqlConfigurationVariablesOutput) TableOpenCache() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.TableOpenCache }).(pulumi.IntPtrOutput)
}

// Defines the maximum amount of memory that can be occupied by the TempTable storage engine before it starts storing data on disk. The default value is 1073741824 bytes (1GiB). For more information, see Section 10.4.4, “Internal Temporary Table Use in MySQL”.
//
// temptableMaxRam corresponds to the MySQL system variable [temptableMaxRam] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_temptable_max_ram).
func (o MysqlConfigurationVariablesOutput) TemptableMaxRam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.TemptableMaxRam }).(pulumi.StringPtrOutput)
}

// Controls whether the thread pool uses dedicated listener threads. If enabled, a listener thread in each thread group is dedicated to the task of listening for network events from clients, ensuring that the maximum number of query worker threads is no more than the value specified by threadPoolMaxTransactionsLimit. threadPoolDedicatedListeners corresponds to the MySQL Database Service-specific system variable thread_pool_dedicated_listeners.
func (o MysqlConfigurationVariablesOutput) ThreadPoolDedicatedListeners() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *bool { return v.ThreadPoolDedicatedListeners }).(pulumi.BoolPtrOutput)
}

// Limits the maximum number of open transactions to the defined value. The default value is 0, which enforces no limit. threadPoolMaxTransactionsLimit corresponds to the MySQL Database Service-specific system variable thread_pool_max_transactions_limit.
func (o MysqlConfigurationVariablesOutput) ThreadPoolMaxTransactionsLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.ThreadPoolMaxTransactionsLimit }).(pulumi.IntPtrOutput)
}

// The maximum number of query threads permitted in a thread group. The maximum value is 4096, but if threadPoolMaxTransactionsLimit is set, threadPoolQueryThreadsPerGroup must not exceed that value. The default value of 1 means there is one active query thread in each thread group, which works well for many loads. When you are using the high concurrency thread pool algorithm (thread_pool_algorithm = 1), consider increasing the value if you experience slower response times due to long-running transactions.
//
// threadPoolQueryThreadsPerGroup corresponds to the MySQL Server system variable [threadPoolQueryThreadsPerGroup](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_thread_pool_query_threads_per_group)
func (o MysqlConfigurationVariablesOutput) ThreadPoolQueryThreadsPerGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.ThreadPoolQueryThreadsPerGroup }).(pulumi.IntPtrOutput)
}

// The number of thread groups in the thread pool. This is the most important parameter controlling thread pool performance. It affects how many statements can execute simultaneously. If a value outside the range of permissible values is specified, the thread pool plugin does not load and the server writes a message to the error log.
//
// threadPoolSize corresponds to the MySQL Server System variable [threadPoolSize] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_thread_pool_size).
func (o MysqlConfigurationVariablesOutput) ThreadPoolSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.ThreadPoolSize }).(pulumi.IntPtrOutput)
}

// The delay period before executing a new transaction, in milliseconds. The maximum value is 300000 (5 minutes). A transaction delay can be used in cases where parallel transactions affect the performance of other operations due to resource contention. For example, if parallel transactions affect index creation or an online buffer pool resizing operation, you can configure a transaction delay to reduce resource contention while those operations are running.
//
// threadPoolTransactionDelay corresponds to the MySQL Server system variable [threadPoolTransactionDelay](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_thread_pool_transaction_delay)
func (o MysqlConfigurationVariablesOutput) ThreadPoolTransactionDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.ThreadPoolTransactionDelay }).(pulumi.IntPtrOutput)
}

// Initializes the time zone for each client that connects.
//
// This corresponds to the MySQL System Variable "timeZone".
//
// The values can be given in one of the following formats, none of which are case-sensitive:
// * As a string indicating an offset from UTC of the form [H]H:MM, prefixed with a + or -, such as '+10:00', '-6:00', or '+05:30'. The permitted range is '-13:59' to '+14:00', inclusive.
// * As a named time zone, as defined by the "IANA Time Zone database", such as 'Europe/Helsinki', 'US/Eastern', 'MET', or 'UTC'.
func (o MysqlConfigurationVariablesOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

// The maximum size of internal in-memory temporary tables. This variable does not apply to user-created MEMORY tables.
//
// tmpTableSize corresponds to the MySQL system variable [tmpTableSize](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_tmp_table_size)
func (o MysqlConfigurationVariablesOutput) TmpTableSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.TmpTableSize }).(pulumi.StringPtrOutput)
}

// ("transactionIsolation")
func (o MysqlConfigurationVariablesOutput) TransactionIsolation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *string { return v.TransactionIsolation }).(pulumi.StringPtrOutput)
}

// The number of seconds the server waits for activity on a noninteractive connection before closing it.
//
// waitTimeout corresponds to the MySQL system variable. [waitTimeout](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_wait_timeout)
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o MysqlConfigurationVariablesOutput) WaitTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlConfigurationVariables) *int { return v.WaitTimeout }).(pulumi.IntPtrOutput)
}

type MysqlConfigurationVariablesPtrOutput struct{ *pulumi.OutputState }

func (MysqlConfigurationVariablesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlConfigurationVariables)(nil)).Elem()
}

func (o MysqlConfigurationVariablesPtrOutput) ToMysqlConfigurationVariablesPtrOutput() MysqlConfigurationVariablesPtrOutput {
	return o
}

func (o MysqlConfigurationVariablesPtrOutput) ToMysqlConfigurationVariablesPtrOutputWithContext(ctx context.Context) MysqlConfigurationVariablesPtrOutput {
	return o
}

func (o MysqlConfigurationVariablesPtrOutput) Elem() MysqlConfigurationVariablesOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) MysqlConfigurationVariables {
		if v != nil {
			return *v
		}
		var ret MysqlConfigurationVariables
		return ret
	}).(MysqlConfigurationVariablesOutput)
}

// auto_increment_increment and autoIncrementOffset are intended for use with circular (source-to-source) replication, and can be used to control the operation of AUTO_INCREMENT columns. Both variables have global and session values, and each can assume an integer value between 1 and 65,535 inclusive.
//
// autoIncrementIncrement corresponds to the MySQL Replication Source Options variable [autoIncrementIncrement] (https://dev.mysql.com/doc/refman/8.0/en/replication-options-source.html#sysvar_auto_increment_increment).
func (o MysqlConfigurationVariablesPtrOutput) AutoIncrementIncrement() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.AutoIncrementIncrement
	}).(pulumi.IntPtrOutput)
}

// This variable has a default value of 1. If it is left with its default value, and Group Replication is started on the server in multi-primary mode, it is changed to the server ID.
//
// autoIncrementOffset corresponds to the MySQL Replication Source Options variable [autoIncrementOffset] (https://dev.mysql.com/doc/refman/8.0/en/replication-options-source.html#sysvar_auto_increment_offset).
func (o MysqlConfigurationVariablesPtrOutput) AutoIncrementOffset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.AutoIncrementOffset
	}).(pulumi.IntPtrOutput)
}

// ("autocommit")
func (o MysqlConfigurationVariablesPtrOutput) Autocommit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *bool {
		if v == nil {
			return nil
		}
		return v.Autocommit
	}).(pulumi.BoolPtrOutput)
}

// If enabled, the server stores all temporary tables on disk rather than in memory.
//
// bigTables corresponds to the MySQL server variable [bigTables](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_big_tables).
func (o MysqlConfigurationVariablesPtrOutput) BigTables() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *bool {
		if v == nil {
			return nil
		}
		return v.BigTables
	}).(pulumi.BoolPtrOutput)
}

// Sets the binary log expiration period in seconds. binlogExpireLogsSeconds corresponds to the MySQL binary logging system variable [binlogExpireLogsSeconds](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds).
func (o MysqlConfigurationVariablesPtrOutput) BinlogExpireLogsSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.BinlogExpireLogsSeconds
	}).(pulumi.IntPtrOutput)
}

// Controls how many microseconds the binary log commit waits before synchronizing the binary log file to disk. There is no delay by default. Setting this variable to a microsecond delay enables more transactions to be synchronized together to disk at once, reducing the overall time to commit a group of transactions because the larger groups required fewer time units per group.
//
// binlogGroupCommitSyncDelay corresponds to the MySQL Replication system variable [binlogGroupCommitSyncDelay](https://dev.mysql.com/doc/refman/5.7/en/replication-options-binary-log.html#sysvar_binlog_group_commit_sync_delay)
func (o MysqlConfigurationVariablesPtrOutput) BinlogGroupCommitSyncDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.BinlogGroupCommitSyncDelay
	}).(pulumi.IntPtrOutput)
}

// The maximum number of transactions to wait for before aborting the current delay as specified by binlog_group_commit_sync_delay. If binlogGroupCommitSyncDelay is set to 0, then this option has no effect.
//
// binlogGroupCommitSyncNoDelayCount corresponds to the MySQL Replication system variable [binlogGroupCommitSyncNoDelayCount](https://dev.mysql.com/doc/refman/5.7/en/replication-options-binary-log.html#sysvar_binlog_group_commit_sync_no_delay_count)
func (o MysqlConfigurationVariablesPtrOutput) BinlogGroupCommitSyncNoDelayCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.BinlogGroupCommitSyncNoDelayCount
	}).(pulumi.IntPtrOutput)
}

// Configures the amount of table metadata added to the binary log when using row-based logging. binlogRowMetadata corresponds to the MySQL binary logging system variable [binlogRowMetadata](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_metadata).
func (o MysqlConfigurationVariablesPtrOutput) BinlogRowMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.BinlogRowMetadata
	}).(pulumi.StringPtrOutput)
}

// When set to PARTIAL_JSON, this enables use of a space-efficient binary log format for updates that modify only a small portion of a JSON document. binlogRowValueOptions corresponds to the MySQL binary logging system variable [binlogRowValueOptions](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_value_options).
func (o MysqlConfigurationVariablesPtrOutput) BinlogRowValueOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.BinlogRowValueOptions
	}).(pulumi.StringPtrOutput)
}

// Enables compression for transactions that are written to binary log files on this server. binlogTransactionCompression corresponds to the MySQL binary logging system variable [binlogTransactionCompression](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_transaction_compression).
func (o MysqlConfigurationVariablesPtrOutput) BinlogTransactionCompression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *bool {
		if v == nil {
			return nil
		}
		return v.BinlogTransactionCompression
	}).(pulumi.BoolPtrOutput)
}

// This variable controls the block encryption mode for block-based algorithms such as AES. It affects encryption for AES_ENCRYPT() and AES_DECRYPT(). blockEncryptionMode takes a value in aes-keylen-mode format, where keylen is the key length in bits and mode is the encryption mode. The value is not case-sensitive. Permitted keylen values are 128, 192, and 256. Permitted mode values are ECB, CBC, CFB1, CFB8, CFB128, and OFB.
//
// blockEncryptionMode corresponds to the MySQL Server Administration system variable [blockEncryptionMode](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_block_encryption_mode)
func (o MysqlConfigurationVariablesPtrOutput) BlockEncryptionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.BlockEncryptionMode
	}).(pulumi.StringPtrOutput)
}

// The server's default character set. If you set this variable, you should also set collationServer to specify the collation for the character set.
//
// characterSetServer corresponds to the MySQL server variable [characterSetServer](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_character_set_server).
func (o MysqlConfigurationVariablesPtrOutput) CharacterSetServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.CharacterSetServer
	}).(pulumi.StringPtrOutput)
}

// The server's default collation.
//
// collationServer corresponds to the MySQL server variable [collationServer](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_collation_server).
func (o MysqlConfigurationVariablesPtrOutput) CollationServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.CollationServer
	}).(pulumi.StringPtrOutput)
}

// ("completionType")
func (o MysqlConfigurationVariablesPtrOutput) CompletionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.CompletionType
	}).(pulumi.StringPtrOutput)
}

// The number of seconds that the mysqld server waits for a connect packet before responding with Bad handshake.
//
// connectTimeout corresponds to the MySQL system variable [connectTimeout](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_connect_timeout)
//
// Increasing the connectTimeout value might help if clients frequently encounter errors of the form "Lost connection to MySQL server at 'XXX', system error: errno".
func (o MysqlConfigurationVariablesPtrOutput) ConnectTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.ConnectTimeout
	}).(pulumi.IntPtrOutput)
}

// Set the chunking size for updates to the global memory usage counter Global_connection_memory.
//
// connectionMemoryChunkSize corresponds to the MySQL system variable [connectionMemoryChunkSize](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_connection_memory_chunk_size).
func (o MysqlConfigurationVariablesPtrOutput) ConnectionMemoryChunkSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.ConnectionMemoryChunkSize
	}).(pulumi.IntPtrOutput)
}

// Set the maximum amount of memory that can be used by a single user connection.
//
// connectionMemoryLimit corresponds to the MySQL system variable [connectionMemoryLimit](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_connection_memory_limit).
func (o MysqlConfigurationVariablesPtrOutput) ConnectionMemoryLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.ConnectionMemoryLimit
	}).(pulumi.StringPtrOutput)
}

// ("cteMaxRecursionDepth")
func (o MysqlConfigurationVariablesPtrOutput) CteMaxRecursionDepth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.CteMaxRecursionDepth
	}).(pulumi.StringPtrOutput)
}

// The default authentication plugin. This must be a plugin that uses internal credentials storage, so these values are permitted: mysql_native_password, sha256_password, caching_sha2_password.
//
// As of MySQL 8.0.27, which introduces multifactor authentication, defaultAuthenticationPlugin is still used, but in conjunction with and at a lower precedence than the authenticationPolicy system variable. For details, see The Default Authentication Plugin. Because of this diminished role, defaultAuthenticationPlugin is deprecated as of MySQL 8.0.27 and subject to removal in a future MySQL version.
//
// defaultAuthenticationPlugin corresponds to the MySQL system variable [defaultAuthenticationPlugin](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_default_authentication_plugin).
func (o MysqlConfigurationVariablesPtrOutput) DefaultAuthenticationPlugin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.DefaultAuthenticationPlugin
	}).(pulumi.StringPtrOutput)
}

// This variable determines the default output format used by EXPLAIN in the absence of a FORMAT option when displaying a query execution plan.
//
// explainFormat corresponds to the MySQL system variable [explainFormat](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_explain_format).
func (o MysqlConfigurationVariablesPtrOutput) ExplainFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.ExplainFormat
	}).(pulumi.StringPtrOutput)
}

// This system variable determines whether the server enables certain nonstandard behaviors for default values and NULL-value handling in TIMESTAMP columns. By default, explicitDefaultsForTimestamp is enabled, which disables the nonstandard behaviors. Disabling explicitDefaultsForTimestamp results in a warning.
//
// explicitDefaultsForTimestamp corresponds to the MySQL Server Administration system variable [explicitDefaultsForTimestamp](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_explicit_defaults_for_timestamp)
func (o MysqlConfigurationVariablesPtrOutput) ExplicitDefaultsForTimestamp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *bool {
		if v == nil {
			return nil
		}
		return v.ExplicitDefaultsForTimestamp
	}).(pulumi.BoolPtrOutput)
}

// ("foreignKeyChecks")
func (o MysqlConfigurationVariablesPtrOutput) ForeignKeyChecks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *bool {
		if v == nil {
			return nil
		}
		return v.ForeignKeyChecks
	}).(pulumi.BoolPtrOutput)
}

// ("generatedRandomPasswordLength") DEPRECATED -- variable should not be settable and will be ignored
//
// Deprecated: The 'generated_random_password_length' field has been deprecated and may be removed in a future version. Do not use this field.
func (o MysqlConfigurationVariablesPtrOutput) GeneratedRandomPasswordLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.GeneratedRandomPasswordLength
	}).(pulumi.IntPtrOutput)
}

// Set the total amount of memory that can be used by all user connections.
//
// globalConnectionMemoryLimit corresponds to the MySQL system variable [globalConnectionMemoryLimit](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_global_connection_memory_limit).
func (o MysqlConfigurationVariablesPtrOutput) GlobalConnectionMemoryLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.GlobalConnectionMemoryLimit
	}).(pulumi.StringPtrOutput)
}

// Determines whether the MySQL server calculates Global_connection_memory.
//
// globalConnectionMemoryTracking corresponds to the MySQL system variable [globalConnectionMemoryTracking](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_global_connection_memory_tracking).
func (o MysqlConfigurationVariablesPtrOutput) GlobalConnectionMemoryTracking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *bool {
		if v == nil {
			return nil
		}
		return v.GlobalConnectionMemoryTracking
	}).(pulumi.BoolPtrOutput)
}

// Specifies the maximum permitted result length in bytes for the GROUP_CONCAT() function.
//
// This is the MySQL variable "groupConcatMaxLen". For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_group_concat_max_len)
func (o MysqlConfigurationVariablesPtrOutput) GroupConcatMaxLen() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.GroupConcatMaxLen
	}).(pulumi.StringPtrOutput)
}

// * EVENTUAL: Both RO and RW transactions do not wait for preceding transactions to be applied before executing. A RW transaction does not wait for other members to apply a transaction. This means that a transaction could be externalized on one member before the others. This also means that in the event of a primary failover, the new primary can accept new RO and RW transactions before the previous primary transactions are all applied. RO transactions could result in outdated values, RW transactions could result in a rollback due to conflicts.
// * BEFORE_ON_PRIMARY_FAILOVER: New RO or RW transactions with a newly elected primary that is applying backlog from the old primary are held (not applied) until any backlog has been applied. This ensures that when a primary failover happens, intentionally or not, clients always see the latest value on the primary. This guarantees consistency, but means that clients must be able to handle the delay in the event that a backlog is being applied. Usually this delay should be minimal, but does depend on the size of the backlog.
// * BEFORE: A RW transaction waits for all preceding transactions to complete before being applied. A RO transaction waits for all preceding transactions to complete before being executed. This ensures that this transaction reads the latest value by only affecting the latency of the transaction. This reduces the overhead of synchronization on every RW transaction, by ensuring synchronization is used only on RO transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
// * AFTER: A RW transaction waits until its changes have been applied to all of the other members. This value has no effect on RO transactions. This mode ensures that when a transaction is committed on the local member, any subsequent transaction reads the written value or a more recent value on any group member. Use this mode with a group that is used for predominantly RO operations to ensure that applied RW transactions are applied everywhere once they commit. This could be used by your application to ensure that subsequent reads fetch the latest data which includes the latest writes. This reduces the overhead of synchronization on every RO transaction, by ensuring synchronization is used only on RW transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
// * BEFORE_AND_AFTER: A RW transaction waits for 1) all preceding transactions to complete before being applied and 2) until its changes have been applied on other members. A RO transaction waits for all preceding transactions to complete before execution takes place. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
func (o MysqlConfigurationVariablesPtrOutput) GroupReplicationConsistency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.GroupReplicationConsistency
	}).(pulumi.StringPtrOutput)
}

// ("informationSchemaStatsExpiry")
func (o MysqlConfigurationVariablesPtrOutput) InformationSchemaStatsExpiry() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.InformationSchemaStatsExpiry
	}).(pulumi.IntPtrOutput)
}

// Whether the InnoDB adaptive hash index is enabled or disabled. It may be desirable, depending on your workload, to dynamically enable or disable adaptive hash indexing to improve query performance. Because the adaptive hash index may not be useful for all workloads, conduct benchmarks with it both enabled and disabled, using realistic workloads.
//
// innodbAdaptiveHashIndex corresponds to the MySQL InnoDB Startup Options and System Variables [innodbAdaptiveHashIndex] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_adaptive_hash_index).
func (o MysqlConfigurationVariablesPtrOutput) InnodbAdaptiveHashIndex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *bool {
		if v == nil {
			return nil
		}
		return v.InnodbAdaptiveHashIndex
	}).(pulumi.BoolPtrOutput)
}

// The lock mode to use for generating auto-increment values. Permissible values are 0, 1, or 2, for traditional, consecutive, or interleaved, respectively.
//
// innodbAutoincLockMode corresponds to the MySQL InnoDB Startup Options and System Variables [innodbAutoincLockMode] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_autoinc_lock_mode).
func (o MysqlConfigurationVariablesPtrOutput) InnodbAutoincLockMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.InnodbAutoincLockMode
	}).(pulumi.IntPtrOutput)
}

// Specifies the percentage of the most recently used pages for each buffer pool to read out and dump.
//
// innodbBufferPoolDumpPct corresponds to the MySQL InnoDB system variable [innodbBufferPoolDumpPct](https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_buffer_pool_dump_pct).
//
// The range is 1 to 100. The default value is 25.
//
// For example, if there are 4 buffer pools with 100 pages each, and innodbBufferPoolDumpPct is set to 25, the 25 most recently used pages from each buffer pool are dumped.
func (o MysqlConfigurationVariablesPtrOutput) InnodbBufferPoolDumpPct() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.InnodbBufferPoolDumpPct
	}).(pulumi.IntPtrOutput)
}

// ("innodbBufferPoolInstances")
func (o MysqlConfigurationVariablesPtrOutput) InnodbBufferPoolInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.InnodbBufferPoolInstances
	}).(pulumi.IntPtrOutput)
}

// The size (in bytes) of the buffer pool, that is, the memory area where InnoDB caches table and index data.
//
// innodbBufferPoolSize corresponds to the MySQL server system variable [innodbBufferPoolSize](https://dev.mysql.com/doc/refman/en/innodb-parameters.html#sysvar_innodb_buffer_pool_size).
//
// The default and maximum values depend on the amount of RAM provisioned by the shape. See [Default User Variables](https://www.terraform.io/mysql-database/doc/configuring-db-system.html#GUID-B5504C19-F6F4-4DAB-8506-189A4E8F4A6A).
func (o MysqlConfigurationVariablesPtrOutput) InnodbBufferPoolSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.InnodbBufferPoolSize
	}).(pulumi.StringPtrOutput)
}

// Whether InnoDB performs change buffering, an optimization that delays write operations to secondary indexes so that the I/O operations can be performed sequentially. Permitted values are described in the following table. Values may also be specified numerically.
//
// innodbChangeBuffering corresponds to the MySQL InnoDB Startup Options and System Variables [innodbChangeBuffering] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_change_buffering).
func (o MysqlConfigurationVariablesPtrOutput) InnodbChangeBuffering() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.InnodbChangeBuffering
	}).(pulumi.StringPtrOutput)
}

// innodbDdlBufferSize corresponds to the MySQL system variable [innodbDdlBufferSize] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_ddl_buffer_size)
func (o MysqlConfigurationVariablesPtrOutput) InnodbDdlBufferSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.InnodbDdlBufferSize
	}).(pulumi.StringPtrOutput)
}

// innodbDdlThreads corresponds to the MySQL system variable [innodbDdlThreads] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_ddl_threads)
func (o MysqlConfigurationVariablesPtrOutput) InnodbDdlThreads() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.InnodbDdlThreads
	}).(pulumi.IntPtrOutput)
}

// ("innodbFtEnableStopword")
func (o MysqlConfigurationVariablesPtrOutput) InnodbFtEnableStopword() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *bool {
		if v == nil {
			return nil
		}
		return v.InnodbFtEnableStopword
	}).(pulumi.BoolPtrOutput)
}

// ("innodbFtMaxTokenSize")
func (o MysqlConfigurationVariablesPtrOutput) InnodbFtMaxTokenSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.InnodbFtMaxTokenSize
	}).(pulumi.IntPtrOutput)
}

// ("innodbFtMinTokenSize")
func (o MysqlConfigurationVariablesPtrOutput) InnodbFtMinTokenSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.InnodbFtMinTokenSize
	}).(pulumi.IntPtrOutput)
}

// ("innodbFtNumWordOptimize")
func (o MysqlConfigurationVariablesPtrOutput) InnodbFtNumWordOptimize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.InnodbFtNumWordOptimize
	}).(pulumi.IntPtrOutput)
}

// ("innodbFtResultCacheLimit")
func (o MysqlConfigurationVariablesPtrOutput) InnodbFtResultCacheLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.InnodbFtResultCacheLimit
	}).(pulumi.StringPtrOutput)
}

// ("innodbFtServerStopwordTable")
func (o MysqlConfigurationVariablesPtrOutput) InnodbFtServerStopwordTable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.InnodbFtServerStopwordTable
	}).(pulumi.StringPtrOutput)
}

// ("innodbLockWaitTimeout")
func (o MysqlConfigurationVariablesPtrOutput) InnodbLockWaitTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.InnodbLockWaitTimeout
	}).(pulumi.IntPtrOutput)
}

// Enables dedicated log writer threads for writing redo log records from the log buffer to the system buffers and flushing the system buffers to the redo log files.
//
// This is the MySQL variable "innodbLogWriterThreads". For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_log_writer_threads)
func (o MysqlConfigurationVariablesPtrOutput) InnodbLogWriterThreads() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *bool {
		if v == nil {
			return nil
		}
		return v.InnodbLogWriterThreads
	}).(pulumi.BoolPtrOutput)
}

// The desired maximum purge lag in terms of transactions.
//
// InnoDB maintains a list of transactions that have index records delete-marked by UPDATE or DELETE operations. The length of the list is the purge lag.
//
// If this value is exceeded, a delay is imposed on INSERT, UPDATE, and DELETE operations to allow time for purge to catch up.
//
// The default value is 0, which means there is no maximum purge lag and no delay.
//
// innodbMaxPurgeLag corresponds to the MySQL server system variable [innodbMaxPurgeLag](https://dev.mysql.com/doc/refman/en/innodb-parameters.html#sysvar_innodb_max_purge_lag).
func (o MysqlConfigurationVariablesPtrOutput) InnodbMaxPurgeLag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.InnodbMaxPurgeLag
	}).(pulumi.StringPtrOutput)
}

// The maximum delay in microseconds for the delay imposed when the innodbMaxPurgeLag threshold is exceeded.
//
// The specified innodbMaxPurgeLagDelay value is an upper limit on the delay period.
//
// innodbMaxPurgeLagDelay corresponds to the MySQL server system variable [innodbMaxPurgeLagDelay](https://dev.mysql.com/doc/refman/en/innodb-parameters.html#sysvar_innodb_max_purge_lag_delay).
func (o MysqlConfigurationVariablesPtrOutput) InnodbMaxPurgeLagDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.InnodbMaxPurgeLagDelay
	}).(pulumi.IntPtrOutput)
}

// Enables the NUMA interleave memory policy for allocation of the InnoDB buffer pool. When innodbNumaInterleave is enabled, the NUMA memory policy is set to MPOL_INTERLEAVE for the mysqld process. After the InnoDB buffer pool is allocated, the NUMA memory policy is set back to MPOL_DEFAULT. For the innodbNumaInterleave option to be available, MySQL must be compiled on a NUMA-enabled Linux system.
//
// innodbNumaInterleave corresponds to the MySQL InnoDB Startup Options and System Variables [innodbNumaInterleave] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_numa_interleave).
func (o MysqlConfigurationVariablesPtrOutput) InnodbNumaInterleave() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *bool {
		if v == nil {
			return nil
		}
		return v.InnodbNumaInterleave
	}).(pulumi.BoolPtrOutput)
}

// Specifies an upper limit in bytes on the size of the temporary log files used during online DDL operations for InnoDB tables. There is one such log file for each index being created or table being altered. This log file stores data inserted, updated, or deleted in the table during the DDL operation.
//
// innodbOnlineAlterLogMaxSize corresponds to the MySQL InnoDB Startup Options and System Variables [innodbOnlineAlterLogMaxSize] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_online_alter_log_max_size).
func (o MysqlConfigurationVariablesPtrOutput) InnodbOnlineAlterLogMaxSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.InnodbOnlineAlterLogMaxSize
	}).(pulumi.StringPtrOutput)
}

// Defines the amount of disk space occupied by redo log files. innodbRedoLogCapacity supercedes the innodbLogFilesInGroup and innodbLogFileSize variables, which are both ignored if innodbRedoLogCapacity is defined. If innodbRedoLogCapacity is not defined, and if neither innodbLogFileSize or innodbLogFilesInGroup are defined, then the default innodbRedoLogCapacity value is used.
//
// innodbRedoLogCapacity corresponds to the InnoDB Startup Options and System Variables [innodbRedoLogCapacity](https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_redo_log_capacity)
func (o MysqlConfigurationVariablesPtrOutput) InnodbRedoLogCapacity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.InnodbRedoLogCapacity
	}).(pulumi.StringPtrOutput)
}

// InnoDB rolls back only the last statement on a transaction timeout by default. If --innodb-rollback-on-timeout is specified, a transaction timeout causes InnoDB to abort and roll back the entire transaction.
//
// innodbRollbackOnTimeout corresponds to the MySQL InnoDB Startup Options and System Variables [innodbRollbackOnTimeout] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_rollback_on_timeout).
func (o MysqlConfigurationVariablesPtrOutput) InnodbRollbackOnTimeout() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *bool {
		if v == nil {
			return nil
		}
		return v.InnodbRollbackOnTimeout
	}).(pulumi.BoolPtrOutput)
}

// This variable defines:
// * The sort buffer size for online DDL operations that create or rebuild secondary indexes. However, as of MySQL 8.0.27, this responsibility is subsumed by the innodbDdlBufferSize variable.
// * The amount by which the temporary log file is extended when recording concurrent DML during an online DDL operation, and the size of the temporary log file read buffer and write buffer.
//
// innodbSortBufferSize corresponds to the MySQL InnoDB Startup Options and System Variables [innodbSortBufferSize] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_sort_buffer_size).
func (o MysqlConfigurationVariablesPtrOutput) InnodbSortBufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.InnodbSortBufferSize
	}).(pulumi.IntPtrOutput)
}

// The number of index pages to sample when estimating cardinality and other statistics for an indexed column, such as those calculated by ANALYZE TABLE.
//
// innodbStatsPersistentSamplePages corresponds to the MySQL InnoDB system variable [innodbStatsPersistentSamplePages](https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_stats_persistent_sample_pages)
//
// innodbStatsPersistentSamplePages only applies when innodbStatsPersistent is enabled for a table; when innodbStatsPersistent is disabled, innodbStatsTransientSamplePages applies instead.
func (o MysqlConfigurationVariablesPtrOutput) InnodbStatsPersistentSamplePages() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.InnodbStatsPersistentSamplePages
	}).(pulumi.StringPtrOutput)
}

// The number of index pages to sample when estimating cardinality and other statistics for an indexed column, such as those calculated by [ANALYZE TABLE](https://dev.mysql.com/doc/refman/8.0/en/analyze-table.html).
//
// innodbStatsTransientSamplePages corresponds to the MySQL InnoDB system variable [innodbStatsTransientSamplePages](https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_stats_transient_sample_pages)
//
// innodbStatsTransientSamplePages only applies when innodbStatsPersistent is disabled for a table; when innodbStatsPersistent is enabled, innodbStatsPersistentSamplePages applies instead.
//
// innodbStatsPersistent is ON by default and cannot be changed. It is possible to override it using the STATS_PERSISTENT clause of the [CREATE TABLE](https://dev.mysql.com/doc/refman/8.0/en/create-table.html) and [ALTER TABLE](https://dev.mysql.com/doc/refman/8.0/en/alter-table.html) statements.
func (o MysqlConfigurationVariablesPtrOutput) InnodbStatsTransientSamplePages() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.InnodbStatsTransientSamplePages
	}).(pulumi.StringPtrOutput)
}

// When you enable innodbStrictMode, the InnoDB storage engine returns errors instead of warnings for invalid or incompatible table options.
//
// innodbStrictMode corresponds to the MySQL InnoDB system variable [innodbStrictMode](https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_strict_mode)
func (o MysqlConfigurationVariablesPtrOutput) InnodbStrictMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *bool {
		if v == nil {
			return nil
		}
		return v.InnodbStrictMode
	}).(pulumi.BoolPtrOutput)
}

// When enabled, undo tablespaces that exceed the threshold value defined by innodbMaxUndoLogSize are marked for truncation. Only undo tablespaces can be truncated. Truncating undo logs that reside in the system tablespace is not supported. For truncation to occur, there must be at least two undo tablespaces.
//
// innodbUndoLogTruncate corresponds to the MySQL InnoDB Startup Options and System Variables [innodbUndoLogTruncate] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_undo_log_truncate).
func (o MysqlConfigurationVariablesPtrOutput) InnodbUndoLogTruncate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *bool {
		if v == nil {
			return nil
		}
		return v.InnodbUndoLogTruncate
	}).(pulumi.BoolPtrOutput)
}

// The number of seconds the server waits for activity on an interactive connection before closing it.
//
// interactiveTimeout corresponds to the MySQL system variable. [interactiveTimeout](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_interactive_timeout)
func (o MysqlConfigurationVariablesPtrOutput) InteractiveTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.InteractiveTimeout
	}).(pulumi.IntPtrOutput)
}

// The minimum size of the buffer that is used for plain index scans, range index scans, and joins that do not use indexes and thus perform full table scans. In MySQL 8.0.18 and later, this variable also controls the amount of memory used for hash joins. Normally, the best way to get fast joins is to add indexes. Increase the value of joinBufferSize to get a faster full join when adding indexes is not possible. One join buffer is allocated for each full join between two tables. For a complex join between several tables for which indexes are not used, multiple join buffers might be necessary.
//
// joinBufferSize corresponds to the MySQL Server System variable [joinBufferSize] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_join_buffer_size).
func (o MysqlConfigurationVariablesPtrOutput) JoinBufferSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.JoinBufferSize
	}).(pulumi.StringPtrOutput)
}

// This variable controls server-side LOCAL capability for LOAD DATA statements. Depending on the localInfile setting, the server refuses or permits local data loading by clients that have LOCAL enabled on the client side.
//
// localInfile corresponds to the MySQL Server system variable [localInfile](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_local_infile)
func (o MysqlConfigurationVariablesPtrOutput) LocalInfile() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *bool {
		if v == nil {
			return nil
		}
		return v.LocalInfile
	}).(pulumi.BoolPtrOutput)
}

// If a query takes longer than this many seconds, the server increments the Slow_queries status variable. If the slow query log is enabled, the query is logged to the slow query log file. This value is measured in real time, not CPU time, so a query that is under the threshold on a lightly loaded system might be above the threshold on a heavily loaded one.
//
// longQueryTime corresponds to the MySQL Server System variable [longQueryTime] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_long_query_time).
func (o MysqlConfigurationVariablesPtrOutput) LongQueryTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.LongQueryTime
	}).(pulumi.IntPtrOutput)
}

// ("mandatoryRoles")
func (o MysqlConfigurationVariablesPtrOutput) MandatoryRoles() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.MandatoryRoles
	}).(pulumi.StringPtrOutput)
}

// The maximum size of one packet or any generated/intermediate string.
//
// This is the mysql variable "maxAllowedPacket".
func (o MysqlConfigurationVariablesPtrOutput) MaxAllowedPacket() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.MaxAllowedPacket
	}).(pulumi.IntPtrOutput)
}

// Sets the size of the transaction cache.
//
// maxBinlogCacheSize corresponds to the MySQL server system variable [maxBinlogCacheSize](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_max_binlog_cache_size).
func (o MysqlConfigurationVariablesPtrOutput) MaxBinlogCacheSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.MaxBinlogCacheSize
	}).(pulumi.StringPtrOutput)
}

// ("maxConnectErrors")
func (o MysqlConfigurationVariablesPtrOutput) MaxConnectErrors() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.MaxConnectErrors
	}).(pulumi.StringPtrOutput)
}

// ("maxConnections")
func (o MysqlConfigurationVariablesPtrOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.MaxConnections
	}).(pulumi.IntPtrOutput)
}

// ("maxExecutionTime")
func (o MysqlConfigurationVariablesPtrOutput) MaxExecutionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.MaxExecutionTime
	}).(pulumi.StringPtrOutput)
}

// This variable sets the maximum size to which user-created MEMORY tables are permitted to grow.
//
// maxHeapTableSize corresponds to the MySQL system variable [maxHeapTableSize](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_max_heap_table_size)
func (o MysqlConfigurationVariablesPtrOutput) MaxHeapTableSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.MaxHeapTableSize
	}).(pulumi.StringPtrOutput)
}

// ("maxPreparedStmtCount")
func (o MysqlConfigurationVariablesPtrOutput) MaxPreparedStmtCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.MaxPreparedStmtCount
	}).(pulumi.IntPtrOutput)
}

// Limit the assumed maximum number of seeks when looking up rows based on a key. The MySQL optimizer assumes that no more than this number of key seeks are required when searching for matching rows in a table by scanning an index, regardless of the actual cardinality of the index (see Section 15.7.7.22, “SHOW INDEX Statement”). By setting this to a low value (say, 100), you can force MySQL to prefer indexes instead of table scans.
//
// maxSeeksForKey corresponds to the MySQL Server System variable [maxSeeksForKey] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_max_seeks_for_key).
func (o MysqlConfigurationVariablesPtrOutput) MaxSeeksForKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.MaxSeeksForKey
	}).(pulumi.StringPtrOutput)
}

// The maximum number of simultaneous connections permitted to any given MySQL user account. A value of 0 (the default) means “no limit.” This variable has a global value that can be set at server startup or runtime. It also has a read-only session value that indicates the effective simultaneous-connection limit that applies to the account associated with the current session.
//
// maxUserConnections corresponds to the MySQL Server System variable [maxUserConnections] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_max_user_connections).
func (o MysqlConfigurationVariablesPtrOutput) MaxUserConnections() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.MaxUserConnections
	}).(pulumi.StringPtrOutput)
}

// ("mysqlFirewallMode")
func (o MysqlConfigurationVariablesPtrOutput) MysqlFirewallMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *bool {
		if v == nil {
			return nil
		}
		return v.MysqlFirewallMode
	}).(pulumi.BoolPtrOutput)
}

// DEPRECATED -- typo of mysqlx_zstd_default_compression_level. variable will be ignored.
//
// Deprecated: The 'mysql_zstd_default_compression_level' field has been deprecated and may be removed in a future version. Do not use this field.
func (o MysqlConfigurationVariablesPtrOutput) MysqlZstdDefaultCompressionLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.MysqlZstdDefaultCompressionLevel
	}).(pulumi.IntPtrOutput)
}

// The number of seconds X Plugin waits for the first packet to be received from newly connected clients.
//
// mysqlxConnectTimeout corresponds to the MySQL X Plugin system variable [mysqlxConnectTimeout](https://dev.mysql.com/doc/refman/8.0/en/x-plugin-options-system-variables.html#sysvar_mysqlx_connect_timeout)
func (o MysqlConfigurationVariablesPtrOutput) MysqlxConnectTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.MysqlxConnectTimeout
	}).(pulumi.IntPtrOutput)
}

// Set the default compression level for the deflate algorithm. ("mysqlxDeflateDefaultCompressionLevel")
func (o MysqlConfigurationVariablesPtrOutput) MysqlxDeflateDefaultCompressionLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.MysqlxDeflateDefaultCompressionLevel
	}).(pulumi.IntPtrOutput)
}

// Limit the upper bound of accepted compression levels for the deflate algorithm. ("mysqlxDeflateMaxClientCompressionLevel")
func (o MysqlConfigurationVariablesPtrOutput) MysqlxDeflateMaxClientCompressionLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.MysqlxDeflateMaxClientCompressionLevel
	}).(pulumi.IntPtrOutput)
}

// ("mysqlxDocumentIdUniquePrefix") DEPRECATED -- variable should not be settable and will be ignored
//
// Deprecated: The 'mysqlx_document_id_unique_prefix' field has been deprecated and may be removed in a future version. Do not use this field.
func (o MysqlConfigurationVariablesPtrOutput) MysqlxDocumentIdUniquePrefix() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.MysqlxDocumentIdUniquePrefix
	}).(pulumi.IntPtrOutput)
}

// ("mysqlxEnableHelloNotice") DEPRECATED -- variable should not be settable and will be ignored
func (o MysqlConfigurationVariablesPtrOutput) MysqlxEnableHelloNotice() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *bool {
		if v == nil {
			return nil
		}
		return v.MysqlxEnableHelloNotice
	}).(pulumi.BoolPtrOutput)
}

// ("mysqlxIdleWorkerThreadTimeout") DEPRECATED -- variable should not be settable and will be ignored
//
// Deprecated: The 'mysqlx_idle_worker_thread_timeout' field has been deprecated and may be removed in a future version. Do not use this field.
func (o MysqlConfigurationVariablesPtrOutput) MysqlxIdleWorkerThreadTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.MysqlxIdleWorkerThreadTimeout
	}).(pulumi.IntPtrOutput)
}

// The number of seconds to wait for interactive clients to timeout.
//
// mysqlxInteractiveTimeout corresponds to the MySQL X Plugin system variable. [mysqlxInteractiveTimeout](https://dev.mysql.com/doc/refman/8.0/en/x-plugin-options-system-variables.html#sysvar_mysqlx_interactive_timeout)
func (o MysqlConfigurationVariablesPtrOutput) MysqlxInteractiveTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.MysqlxInteractiveTimeout
	}).(pulumi.IntPtrOutput)
}

// Set the default compression level for the lz4 algorithm. ("mysqlxLz4DefaultCompressionLevel")
func (o MysqlConfigurationVariablesPtrOutput) MysqlxLz4defaultCompressionLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.MysqlxLz4defaultCompressionLevel
	}).(pulumi.IntPtrOutput)
}

// Limit the upper bound of accepted compression levels for the lz4 algorithm. ("mysqlxLz4MaxClientCompressionLevel")
func (o MysqlConfigurationVariablesPtrOutput) MysqlxLz4maxClientCompressionLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.MysqlxLz4maxClientCompressionLevel
	}).(pulumi.IntPtrOutput)
}

// The maximum size of network packets that can be received by X Plugin.
//
// This is the mysql variable "mysqlxMaxAllowedPacket".
func (o MysqlConfigurationVariablesPtrOutput) MysqlxMaxAllowedPacket() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.MysqlxMaxAllowedPacket
	}).(pulumi.IntPtrOutput)
}

// ("mysqlxMinWorkerThreads") DEPRECATED -- variable should not be settable and will be ignored
//
// Deprecated: The 'mysqlx_min_worker_threads' field has been deprecated and may be removed in a future version. Do not use this field.
func (o MysqlConfigurationVariablesPtrOutput) MysqlxMinWorkerThreads() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.MysqlxMinWorkerThreads
	}).(pulumi.IntPtrOutput)
}

// The number of seconds that X Plugin waits for blocking read operations to complete. After this time, if the read operation is not successful, X Plugin closes the connection and returns a warning notice with the error code ER_IO_READ_ERROR to the client application.
//
// mysqlxReadTimeout corresponds to the MySQL X Plugin system variable [mysqlxReadTimeout](https://dev.mysql.com/doc/refman/8.0/en/x-plugin-options-system-variables.html#sysvar_mysqlx_read_timeout)
func (o MysqlConfigurationVariablesPtrOutput) MysqlxReadTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.MysqlxReadTimeout
	}).(pulumi.IntPtrOutput)
}

// The number of seconds that X Plugin waits for activity on a connection.
//
// mysqlxWaitTimeout corresponds to the MySQL X Plugin system variable. [mysqlxWaitTimeout](https://dev.mysql.com/doc/refman/8.0/en/x-plugin-options-system-variables.html#sysvar_mysqlx_wait_timeout)
func (o MysqlConfigurationVariablesPtrOutput) MysqlxWaitTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.MysqlxWaitTimeout
	}).(pulumi.IntPtrOutput)
}

// The number of seconds that X Plugin waits for blocking write operations to complete. After this time, if the write operation is not successful, X Plugin closes the connection.
//
// mysqlxReadmysqlxWriteTimeoutTimeout corresponds to the MySQL X Plugin system variable [mysqlxWriteTimeout](https://dev.mysql.com/doc/refman/8.0/en/x-plugin-options-system-variables.html#sysvar_mysqlx_write_timeout)
func (o MysqlConfigurationVariablesPtrOutput) MysqlxWriteTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.MysqlxWriteTimeout
	}).(pulumi.IntPtrOutput)
}

// Set the default compression level for the zstd algorithm. ("mysqlxZstdDefaultCompressionLevel")
func (o MysqlConfigurationVariablesPtrOutput) MysqlxZstdDefaultCompressionLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.MysqlxZstdDefaultCompressionLevel
	}).(pulumi.IntPtrOutput)
}

// Limit the upper bound of accepted compression levels for the zstd algorithm. ("mysqlxZstdMaxClientCompressionLevel")
func (o MysqlConfigurationVariablesPtrOutput) MysqlxZstdMaxClientCompressionLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.MysqlxZstdMaxClientCompressionLevel
	}).(pulumi.IntPtrOutput)
}

// The number of seconds to wait for more data from a connection before aborting the read.
//
// netReadTimeout corresponds to the MySQL system variable [netReadTimeout](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_net_read_timeout)
func (o MysqlConfigurationVariablesPtrOutput) NetReadTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.NetReadTimeout
	}).(pulumi.IntPtrOutput)
}

// The number of seconds to wait for a block to be written to a connection before aborting the write.
//
// netWriteTimeout corresponds to the MySQL system variable [netWriteTimeout](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_net_write_timeout)
func (o MysqlConfigurationVariablesPtrOutput) NetWriteTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.NetWriteTimeout
	}).(pulumi.IntPtrOutput)
}

// The optimizerSwitch system variable enables control over optimizer behavior. The value of this variable is a set of flags, each of which has a value of on or off to indicate whether the corresponding optimizer behavior is enabled or disabled. This variable has global and session values and can be changed at runtime. The global default can be set at server startup.
//
// Setting hypergraph_optimizer=on for cloud builds below 9.0.0 will fail.
//
// optimizerSwitch corresponds to the MySQL Server System variable [optimizerSwitch] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_optimizer_switch).
func (o MysqlConfigurationVariablesPtrOutput) OptimizerSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.OptimizerSwitch
	}).(pulumi.StringPtrOutput)
}

// ("parserMaxMemSize")
func (o MysqlConfigurationVariablesPtrOutput) ParserMaxMemSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.ParserMaxMemSize
	}).(pulumi.StringPtrOutput)
}

// ("queryAllocBlockSize") DEPRECATED -- variable should not be settable and will be ignored
//
// Deprecated: The 'query_alloc_block_size' field has been deprecated and may be removed in a future version. Do not use this field.
func (o MysqlConfigurationVariablesPtrOutput) QueryAllocBlockSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.QueryAllocBlockSize
	}).(pulumi.StringPtrOutput)
}

// ("queryPreallocSize") DEPRECATED -- variable should not be settable and will be ignored
func (o MysqlConfigurationVariablesPtrOutput) QueryPreallocSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.QueryPreallocSize
	}).(pulumi.StringPtrOutput)
}

// The limit on memory consumption for the range optimizer. A value of 0 means “no limit.” If an execution plan considered by the optimizer uses the range access method but the optimizer estimates that the amount of memory needed for this method would exceed the limit, it abandons the plan and considers other plans.
//
// rangeOptimizerMaxMemSize corresponds to the MySQL Server System variable [rangeOptimizerMaxMemSize] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_range_optimizer_max_mem_size).
//
// Deprecated: The 'query_prealloc_size' field has been deprecated and may be removed in a future version. Do not use this field.
func (o MysqlConfigurationVariablesPtrOutput) RangeOptimizerMaxMemSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.RangeOptimizerMaxMemSize
	}).(pulumi.StringPtrOutput)
}

// regexpTimeLimit corresponds to the MySQL system variable [regexpTimeLimit] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_regexp_time_limit)
func (o MysqlConfigurationVariablesPtrOutput) RegexpTimeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.RegexpTimeLimit
	}).(pulumi.IntPtrOutput)
}

// The maximum amount of space to use for all relay logs.
//
// relayLogSpaceLimit corresponds to the MySQL Replica Server Options variable [relayLogSpaceLimit] (https://dev.mysql.com/doc/refman/8.0/en/replication-options-replica.html#sysvar_relay_log_space_limit).
func (o MysqlConfigurationVariablesPtrOutput) RelayLogSpaceLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.RelayLogSpaceLimit
	}).(pulumi.StringPtrOutput)
}

// Specifies the number of seconds to wait for more data or a heartbeat signal from the source before the replica considers the connection broken, aborts the read, and tries to reconnect. Setting this variable has no immediate effect. The state of the variable applies on all subsequent START REPLICA commands.
//
// replicaNetTimeout corresponds to the MySQL Replica server system variable [replicaNetTimeout](https://dev.mysql.com/doc/refman/8.0/en/replication-options-replica.html#sysvar_replica_net_timeout)
func (o MysqlConfigurationVariablesPtrOutput) ReplicaNetTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.ReplicaNetTimeout
	}).(pulumi.IntPtrOutput)
}

// Beginning with MySQL 8.0.26, slaveParallelWorkers is deprecated, and you should use replicaParallelWorkers instead. (Prior to MySQL 8.0.26, you must use slaveParallelWorkers to set the number of applier threads.)
//
// replicaParallelWorkers corresponds to the MySQL Replica Server Options variable [replicaParallelWorkers] (https://dev.mysql.com/doc/refman/8.0/en/replication-options-replica.html#sysvar_replica_parallel_workers).
func (o MysqlConfigurationVariablesPtrOutput) ReplicaParallelWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.ReplicaParallelWorkers
	}).(pulumi.IntPtrOutput)
}

// From MySQL 8.0.26, use replicaTypeConversions in place of slave_type_conversions, which is deprecated from that release. In releases before MySQL 8.0.26, use slave_type_conversions.
//
// replicaTypeConversions controls the type conversion mode in effect on the replica when using row-based replication. Its value is a comma-delimited set of zero or more elements from the list: ALL_LOSSY, ALL_NON_LOSSY, ALL_SIGNED, ALL_UNSIGNED. Set this variable to an empty string to disallow type conversions between the source and the replica. Setting this variable takes effect for all replication channels immediately, including running channels.
//
// replicaTypeConversions corresponds to the MySQL Replica Server Options variable [replicaTypeConversions] (https://dev.mysql.com/doc/refman/8.0/en/replication-options-replica.html#sysvar_replica_type_conversions).
func (o MysqlConfigurationVariablesPtrOutput) ReplicaTypeConversions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.ReplicaTypeConversions
	}).(pulumi.StringPtrOutput)
}

// Whether client connections to the server are required to use some form of secure transport. When this variable is enabled, the server permits only TCP/IP connections encrypted using TLS/SSL, or connections that use a socket file or shared memory. The server rejects nonsecure connection attempts, which fail with an ER_SECURE_TRANSPORT_REQUIRED error.
//
// requireSecureTransport corresponds to the MySQL Server Administration system variable [requireSecureTransport](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_require_secure_transport)
func (o MysqlConfigurationVariablesPtrOutput) RequireSecureTransport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *bool {
		if v == nil {
			return nil
		}
		return v.RequireSecureTransport
	}).(pulumi.BoolPtrOutput)
}

// Whether to resolve host names when checking client connections. If this variable is OFF, mysqld resolves host names when checking client connections. If it is ON, mysqld uses only IP numbers; in this case, all Host column values in the grant tables must be IP addresses. See Section 7.1.12.3, “DNS Lookups and the Host Cache”.
//
// skipNameResolve corresponds to the MySQL Server System variable [skipNameResolve] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_skip_name_resolve).
func (o MysqlConfigurationVariablesPtrOutput) SkipNameResolve() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *bool {
		if v == nil {
			return nil
		}
		return v.SkipNameResolve
	}).(pulumi.BoolPtrOutput)
}

// Each session that must perform a sort allocates a buffer of this size.
//
// sortBufferSize corresponds to the MySQL system variable [sortBufferSize](https://dev.mysql.com/doc/refman/en/server-system-variables.html#sysvar_sort_buffer_size)
func (o MysqlConfigurationVariablesPtrOutput) SortBufferSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.SortBufferSize
	}).(pulumi.StringPtrOutput)
}

// Whether GIPK mode is in effect, in which case a MySQL replication source server adds a generated invisible primary key to any InnoDB table that is created without one.
//
// sqlGenerateInvisiblePrimaryKey corresponds to the MySQL system variable [sqlGenerateInvisiblePrimaryKey] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_sql_generate_invisible_primary_key).
func (o MysqlConfigurationVariablesPtrOutput) SqlGenerateInvisiblePrimaryKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *bool {
		if v == nil {
			return nil
		}
		return v.SqlGenerateInvisiblePrimaryKey
	}).(pulumi.BoolPtrOutput)
}

// ("sqlMode")
func (o MysqlConfigurationVariablesPtrOutput) SqlMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.SqlMode
	}).(pulumi.StringPtrOutput)
}

// ("sqlRequirePrimaryKey")
func (o MysqlConfigurationVariablesPtrOutput) SqlRequirePrimaryKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *bool {
		if v == nil {
			return nil
		}
		return v.SqlRequirePrimaryKey
	}).(pulumi.BoolPtrOutput)
}

// ("sqlWarnings")
func (o MysqlConfigurationVariablesPtrOutput) SqlWarnings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *bool {
		if v == nil {
			return nil
		}
		return v.SqlWarnings
	}).(pulumi.BoolPtrOutput)
}

// The number of table definitions that can be stored in the table definition cache. If you use a large number of tables, you can create a large table definition cache to speed up opening of tables. The table definition cache takes less space and does not use file descriptors, unlike the normal table cache.
//
// tableDefinitionCache corresponds to the MySQL Server Administration system variable [tableDefinitionCache](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_table_definition_cache)
func (o MysqlConfigurationVariablesPtrOutput) TableDefinitionCache() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.TableDefinitionCache
	}).(pulumi.IntPtrOutput)
}

// The number of open tables for all threads. Increasing this value increases the number of file descriptors that mysqld requires.
//
// tableOpenCache corresponds to the MySQL Server Administration system variable [tableOpenCache](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_table_open_cache)
func (o MysqlConfigurationVariablesPtrOutput) TableOpenCache() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.TableOpenCache
	}).(pulumi.IntPtrOutput)
}

// Defines the maximum amount of memory that can be occupied by the TempTable storage engine before it starts storing data on disk. The default value is 1073741824 bytes (1GiB). For more information, see Section 10.4.4, “Internal Temporary Table Use in MySQL”.
//
// temptableMaxRam corresponds to the MySQL system variable [temptableMaxRam] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_temptable_max_ram).
func (o MysqlConfigurationVariablesPtrOutput) TemptableMaxRam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.TemptableMaxRam
	}).(pulumi.StringPtrOutput)
}

// Controls whether the thread pool uses dedicated listener threads. If enabled, a listener thread in each thread group is dedicated to the task of listening for network events from clients, ensuring that the maximum number of query worker threads is no more than the value specified by threadPoolMaxTransactionsLimit. threadPoolDedicatedListeners corresponds to the MySQL Database Service-specific system variable thread_pool_dedicated_listeners.
func (o MysqlConfigurationVariablesPtrOutput) ThreadPoolDedicatedListeners() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *bool {
		if v == nil {
			return nil
		}
		return v.ThreadPoolDedicatedListeners
	}).(pulumi.BoolPtrOutput)
}

// Limits the maximum number of open transactions to the defined value. The default value is 0, which enforces no limit. threadPoolMaxTransactionsLimit corresponds to the MySQL Database Service-specific system variable thread_pool_max_transactions_limit.
func (o MysqlConfigurationVariablesPtrOutput) ThreadPoolMaxTransactionsLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.ThreadPoolMaxTransactionsLimit
	}).(pulumi.IntPtrOutput)
}

// The maximum number of query threads permitted in a thread group. The maximum value is 4096, but if threadPoolMaxTransactionsLimit is set, threadPoolQueryThreadsPerGroup must not exceed that value. The default value of 1 means there is one active query thread in each thread group, which works well for many loads. When you are using the high concurrency thread pool algorithm (thread_pool_algorithm = 1), consider increasing the value if you experience slower response times due to long-running transactions.
//
// threadPoolQueryThreadsPerGroup corresponds to the MySQL Server system variable [threadPoolQueryThreadsPerGroup](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_thread_pool_query_threads_per_group)
func (o MysqlConfigurationVariablesPtrOutput) ThreadPoolQueryThreadsPerGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.ThreadPoolQueryThreadsPerGroup
	}).(pulumi.IntPtrOutput)
}

// The number of thread groups in the thread pool. This is the most important parameter controlling thread pool performance. It affects how many statements can execute simultaneously. If a value outside the range of permissible values is specified, the thread pool plugin does not load and the server writes a message to the error log.
//
// threadPoolSize corresponds to the MySQL Server System variable [threadPoolSize] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_thread_pool_size).
func (o MysqlConfigurationVariablesPtrOutput) ThreadPoolSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.ThreadPoolSize
	}).(pulumi.IntPtrOutput)
}

// The delay period before executing a new transaction, in milliseconds. The maximum value is 300000 (5 minutes). A transaction delay can be used in cases where parallel transactions affect the performance of other operations due to resource contention. For example, if parallel transactions affect index creation or an online buffer pool resizing operation, you can configure a transaction delay to reduce resource contention while those operations are running.
//
// threadPoolTransactionDelay corresponds to the MySQL Server system variable [threadPoolTransactionDelay](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_thread_pool_transaction_delay)
func (o MysqlConfigurationVariablesPtrOutput) ThreadPoolTransactionDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.ThreadPoolTransactionDelay
	}).(pulumi.IntPtrOutput)
}

// Initializes the time zone for each client that connects.
//
// This corresponds to the MySQL System Variable "timeZone".
//
// The values can be given in one of the following formats, none of which are case-sensitive:
// * As a string indicating an offset from UTC of the form [H]H:MM, prefixed with a + or -, such as '+10:00', '-6:00', or '+05:30'. The permitted range is '-13:59' to '+14:00', inclusive.
// * As a named time zone, as defined by the "IANA Time Zone database", such as 'Europe/Helsinki', 'US/Eastern', 'MET', or 'UTC'.
func (o MysqlConfigurationVariablesPtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.TimeZone
	}).(pulumi.StringPtrOutput)
}

// The maximum size of internal in-memory temporary tables. This variable does not apply to user-created MEMORY tables.
//
// tmpTableSize corresponds to the MySQL system variable [tmpTableSize](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_tmp_table_size)
func (o MysqlConfigurationVariablesPtrOutput) TmpTableSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.TmpTableSize
	}).(pulumi.StringPtrOutput)
}

// ("transactionIsolation")
func (o MysqlConfigurationVariablesPtrOutput) TransactionIsolation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *string {
		if v == nil {
			return nil
		}
		return v.TransactionIsolation
	}).(pulumi.StringPtrOutput)
}

// The number of seconds the server waits for activity on a noninteractive connection before closing it.
//
// waitTimeout corresponds to the MySQL system variable. [waitTimeout](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_wait_timeout)
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o MysqlConfigurationVariablesPtrOutput) WaitTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlConfigurationVariables) *int {
		if v == nil {
			return nil
		}
		return v.WaitTimeout
	}).(pulumi.IntPtrOutput)
}

type MysqlDbSystemBackupPolicy struct {
	// (Updatable) List of policies of a DB system to schedule cross-region DB system backup copy.
	//
	// The policy includes the name of the destination region to which the DB system backup will be copied, and an optional parameter which specifies the retention period of the copied DB system backup in days.
	//
	// **Note:** Currently, only one policy can be specified in the list.
	CopyPolicies []MysqlDbSystemBackupPolicyCopyPolicy `pulumi:"copyPolicies"`
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces.
	//
	// Tags defined here will be copied verbatim as tags on the Backup resource created by this BackupPolicy.
	//
	// Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only.
	//
	// Tags defined here will be copied verbatim as tags on the Backup resource created by this BackupPolicy.
	//
	// Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// (Updatable) Specifies if automatic backups are enabled.
	IsEnabled *bool `pulumi:"isEnabled"`
	// (Updatable) The PITR policy for the DB System.
	PitrPolicy *MysqlDbSystemBackupPolicyPitrPolicy `pulumi:"pitrPolicy"`
	// (Updatable) Number of days to retain an automatic backup.
	RetentionInDays *int `pulumi:"retentionInDays"`
	// (Updatable) Retains the backup to be deleted due to the retention policy in DELETE SCHEDULED state for 7 days before permanently deleting it.
	SoftDelete *string `pulumi:"softDelete"`
	// (Updatable) The start of a 30-minute window of time in which daily, automated backups occur.
	//
	// This should be in the format of the "Time" portion of an RFC3339-formatted timestamp. Any second or sub-second time data will be truncated to zero.
	//
	// At some point in the window, the system may incur a brief service disruption as the backup is performed.
	WindowStartTime *string `pulumi:"windowStartTime"`
}

// MysqlDbSystemBackupPolicyInput is an input type that accepts MysqlDbSystemBackupPolicyArgs and MysqlDbSystemBackupPolicyOutput values.
// You can construct a concrete instance of `MysqlDbSystemBackupPolicyInput` via:
//
//	MysqlDbSystemBackupPolicyArgs{...}
type MysqlDbSystemBackupPolicyInput interface {
	pulumi.Input

	ToMysqlDbSystemBackupPolicyOutput() MysqlDbSystemBackupPolicyOutput
	ToMysqlDbSystemBackupPolicyOutputWithContext(context.Context) MysqlDbSystemBackupPolicyOutput
}

type MysqlDbSystemBackupPolicyArgs struct {
	// (Updatable) List of policies of a DB system to schedule cross-region DB system backup copy.
	//
	// The policy includes the name of the destination region to which the DB system backup will be copied, and an optional parameter which specifies the retention period of the copied DB system backup in days.
	//
	// **Note:** Currently, only one policy can be specified in the list.
	CopyPolicies MysqlDbSystemBackupPolicyCopyPolicyArrayInput `pulumi:"copyPolicies"`
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces.
	//
	// Tags defined here will be copied verbatim as tags on the Backup resource created by this BackupPolicy.
	//
	// Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// (Updatable) Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only.
	//
	// Tags defined here will be copied verbatim as tags on the Backup resource created by this BackupPolicy.
	//
	// Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// (Updatable) Specifies if automatic backups are enabled.
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// (Updatable) The PITR policy for the DB System.
	PitrPolicy MysqlDbSystemBackupPolicyPitrPolicyPtrInput `pulumi:"pitrPolicy"`
	// (Updatable) Number of days to retain an automatic backup.
	RetentionInDays pulumi.IntPtrInput `pulumi:"retentionInDays"`
	// (Updatable) Retains the backup to be deleted due to the retention policy in DELETE SCHEDULED state for 7 days before permanently deleting it.
	SoftDelete pulumi.StringPtrInput `pulumi:"softDelete"`
	// (Updatable) The start of a 30-minute window of time in which daily, automated backups occur.
	//
	// This should be in the format of the "Time" portion of an RFC3339-formatted timestamp. Any second or sub-second time data will be truncated to zero.
	//
	// At some point in the window, the system may incur a brief service disruption as the backup is performed.
	WindowStartTime pulumi.StringPtrInput `pulumi:"windowStartTime"`
}

func (MysqlDbSystemBackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemBackupPolicy)(nil)).Elem()
}

func (i MysqlDbSystemBackupPolicyArgs) ToMysqlDbSystemBackupPolicyOutput() MysqlDbSystemBackupPolicyOutput {
	return i.ToMysqlDbSystemBackupPolicyOutputWithContext(context.Background())
}

func (i MysqlDbSystemBackupPolicyArgs) ToMysqlDbSystemBackupPolicyOutputWithContext(ctx context.Context) MysqlDbSystemBackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemBackupPolicyOutput)
}

func (i MysqlDbSystemBackupPolicyArgs) ToMysqlDbSystemBackupPolicyPtrOutput() MysqlDbSystemBackupPolicyPtrOutput {
	return i.ToMysqlDbSystemBackupPolicyPtrOutputWithContext(context.Background())
}

func (i MysqlDbSystemBackupPolicyArgs) ToMysqlDbSystemBackupPolicyPtrOutputWithContext(ctx context.Context) MysqlDbSystemBackupPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemBackupPolicyOutput).ToMysqlDbSystemBackupPolicyPtrOutputWithContext(ctx)
}

// MysqlDbSystemBackupPolicyPtrInput is an input type that accepts MysqlDbSystemBackupPolicyArgs, MysqlDbSystemBackupPolicyPtr and MysqlDbSystemBackupPolicyPtrOutput values.
// You can construct a concrete instance of `MysqlDbSystemBackupPolicyPtrInput` via:
//
//	        MysqlDbSystemBackupPolicyArgs{...}
//
//	or:
//
//	        nil
type MysqlDbSystemBackupPolicyPtrInput interface {
	pulumi.Input

	ToMysqlDbSystemBackupPolicyPtrOutput() MysqlDbSystemBackupPolicyPtrOutput
	ToMysqlDbSystemBackupPolicyPtrOutputWithContext(context.Context) MysqlDbSystemBackupPolicyPtrOutput
}

type mysqlDbSystemBackupPolicyPtrType MysqlDbSystemBackupPolicyArgs

func MysqlDbSystemBackupPolicyPtr(v *MysqlDbSystemBackupPolicyArgs) MysqlDbSystemBackupPolicyPtrInput {
	return (*mysqlDbSystemBackupPolicyPtrType)(v)
}

func (*mysqlDbSystemBackupPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlDbSystemBackupPolicy)(nil)).Elem()
}

func (i *mysqlDbSystemBackupPolicyPtrType) ToMysqlDbSystemBackupPolicyPtrOutput() MysqlDbSystemBackupPolicyPtrOutput {
	return i.ToMysqlDbSystemBackupPolicyPtrOutputWithContext(context.Background())
}

func (i *mysqlDbSystemBackupPolicyPtrType) ToMysqlDbSystemBackupPolicyPtrOutputWithContext(ctx context.Context) MysqlDbSystemBackupPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemBackupPolicyPtrOutput)
}

type MysqlDbSystemBackupPolicyOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemBackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemBackupPolicy)(nil)).Elem()
}

func (o MysqlDbSystemBackupPolicyOutput) ToMysqlDbSystemBackupPolicyOutput() MysqlDbSystemBackupPolicyOutput {
	return o
}

func (o MysqlDbSystemBackupPolicyOutput) ToMysqlDbSystemBackupPolicyOutputWithContext(ctx context.Context) MysqlDbSystemBackupPolicyOutput {
	return o
}

func (o MysqlDbSystemBackupPolicyOutput) ToMysqlDbSystemBackupPolicyPtrOutput() MysqlDbSystemBackupPolicyPtrOutput {
	return o.ToMysqlDbSystemBackupPolicyPtrOutputWithContext(context.Background())
}

func (o MysqlDbSystemBackupPolicyOutput) ToMysqlDbSystemBackupPolicyPtrOutputWithContext(ctx context.Context) MysqlDbSystemBackupPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MysqlDbSystemBackupPolicy) *MysqlDbSystemBackupPolicy {
		return &v
	}).(MysqlDbSystemBackupPolicyPtrOutput)
}

// (Updatable) List of policies of a DB system to schedule cross-region DB system backup copy.
//
// The policy includes the name of the destination region to which the DB system backup will be copied, and an optional parameter which specifies the retention period of the copied DB system backup in days.
//
// **Note:** Currently, only one policy can be specified in the list.
func (o MysqlDbSystemBackupPolicyOutput) CopyPolicies() MysqlDbSystemBackupPolicyCopyPolicyArrayOutput {
	return o.ApplyT(func(v MysqlDbSystemBackupPolicy) []MysqlDbSystemBackupPolicyCopyPolicy { return v.CopyPolicies }).(MysqlDbSystemBackupPolicyCopyPolicyArrayOutput)
}

// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces.
//
// Tags defined here will be copied verbatim as tags on the Backup resource created by this BackupPolicy.
//
// Example: `{"foo-namespace.bar-key": "value"}`
func (o MysqlDbSystemBackupPolicyOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v MysqlDbSystemBackupPolicy) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only.
//
// Tags defined here will be copied verbatim as tags on the Backup resource created by this BackupPolicy.
//
// Example: `{"bar-key": "value"}`
func (o MysqlDbSystemBackupPolicyOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v MysqlDbSystemBackupPolicy) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// (Updatable) Specifies if automatic backups are enabled.
func (o MysqlDbSystemBackupPolicyOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemBackupPolicy) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// (Updatable) The PITR policy for the DB System.
func (o MysqlDbSystemBackupPolicyOutput) PitrPolicy() MysqlDbSystemBackupPolicyPitrPolicyPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemBackupPolicy) *MysqlDbSystemBackupPolicyPitrPolicy { return v.PitrPolicy }).(MysqlDbSystemBackupPolicyPitrPolicyPtrOutput)
}

// (Updatable) Number of days to retain an automatic backup.
func (o MysqlDbSystemBackupPolicyOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemBackupPolicy) *int { return v.RetentionInDays }).(pulumi.IntPtrOutput)
}

// (Updatable) Retains the backup to be deleted due to the retention policy in DELETE SCHEDULED state for 7 days before permanently deleting it.
func (o MysqlDbSystemBackupPolicyOutput) SoftDelete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemBackupPolicy) *string { return v.SoftDelete }).(pulumi.StringPtrOutput)
}

// (Updatable) The start of a 30-minute window of time in which daily, automated backups occur.
//
// This should be in the format of the "Time" portion of an RFC3339-formatted timestamp. Any second or sub-second time data will be truncated to zero.
//
// At some point in the window, the system may incur a brief service disruption as the backup is performed.
func (o MysqlDbSystemBackupPolicyOutput) WindowStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemBackupPolicy) *string { return v.WindowStartTime }).(pulumi.StringPtrOutput)
}

type MysqlDbSystemBackupPolicyPtrOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemBackupPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlDbSystemBackupPolicy)(nil)).Elem()
}

func (o MysqlDbSystemBackupPolicyPtrOutput) ToMysqlDbSystemBackupPolicyPtrOutput() MysqlDbSystemBackupPolicyPtrOutput {
	return o
}

func (o MysqlDbSystemBackupPolicyPtrOutput) ToMysqlDbSystemBackupPolicyPtrOutputWithContext(ctx context.Context) MysqlDbSystemBackupPolicyPtrOutput {
	return o
}

func (o MysqlDbSystemBackupPolicyPtrOutput) Elem() MysqlDbSystemBackupPolicyOutput {
	return o.ApplyT(func(v *MysqlDbSystemBackupPolicy) MysqlDbSystemBackupPolicy {
		if v != nil {
			return *v
		}
		var ret MysqlDbSystemBackupPolicy
		return ret
	}).(MysqlDbSystemBackupPolicyOutput)
}

// (Updatable) List of policies of a DB system to schedule cross-region DB system backup copy.
//
// The policy includes the name of the destination region to which the DB system backup will be copied, and an optional parameter which specifies the retention period of the copied DB system backup in days.
//
// **Note:** Currently, only one policy can be specified in the list.
func (o MysqlDbSystemBackupPolicyPtrOutput) CopyPolicies() MysqlDbSystemBackupPolicyCopyPolicyArrayOutput {
	return o.ApplyT(func(v *MysqlDbSystemBackupPolicy) []MysqlDbSystemBackupPolicyCopyPolicy {
		if v == nil {
			return nil
		}
		return v.CopyPolicies
	}).(MysqlDbSystemBackupPolicyCopyPolicyArrayOutput)
}

// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces.
//
// Tags defined here will be copied verbatim as tags on the Backup resource created by this BackupPolicy.
//
// Example: `{"foo-namespace.bar-key": "value"}`
func (o MysqlDbSystemBackupPolicyPtrOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MysqlDbSystemBackupPolicy) map[string]string {
		if v == nil {
			return nil
		}
		return v.DefinedTags
	}).(pulumi.StringMapOutput)
}

// (Updatable) Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only.
//
// Tags defined here will be copied verbatim as tags on the Backup resource created by this BackupPolicy.
//
// Example: `{"bar-key": "value"}`
func (o MysqlDbSystemBackupPolicyPtrOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MysqlDbSystemBackupPolicy) map[string]string {
		if v == nil {
			return nil
		}
		return v.FreeformTags
	}).(pulumi.StringMapOutput)
}

// (Updatable) Specifies if automatic backups are enabled.
func (o MysqlDbSystemBackupPolicyPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystemBackupPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// (Updatable) The PITR policy for the DB System.
func (o MysqlDbSystemBackupPolicyPtrOutput) PitrPolicy() MysqlDbSystemBackupPolicyPitrPolicyPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystemBackupPolicy) *MysqlDbSystemBackupPolicyPitrPolicy {
		if v == nil {
			return nil
		}
		return v.PitrPolicy
	}).(MysqlDbSystemBackupPolicyPitrPolicyPtrOutput)
}

// (Updatable) Number of days to retain an automatic backup.
func (o MysqlDbSystemBackupPolicyPtrOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystemBackupPolicy) *int {
		if v == nil {
			return nil
		}
		return v.RetentionInDays
	}).(pulumi.IntPtrOutput)
}

// (Updatable) Retains the backup to be deleted due to the retention policy in DELETE SCHEDULED state for 7 days before permanently deleting it.
func (o MysqlDbSystemBackupPolicyPtrOutput) SoftDelete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystemBackupPolicy) *string {
		if v == nil {
			return nil
		}
		return v.SoftDelete
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The start of a 30-minute window of time in which daily, automated backups occur.
//
// This should be in the format of the "Time" portion of an RFC3339-formatted timestamp. Any second or sub-second time data will be truncated to zero.
//
// At some point in the window, the system may incur a brief service disruption as the backup is performed.
func (o MysqlDbSystemBackupPolicyPtrOutput) WindowStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystemBackupPolicy) *string {
		if v == nil {
			return nil
		}
		return v.WindowStartTime
	}).(pulumi.StringPtrOutput)
}

type MysqlDbSystemBackupPolicyCopyPolicy struct {
	// (Updatable) Number of days to retain the copied DB system backup.
	BackupCopyRetentionInDays *int `pulumi:"backupCopyRetentionInDays"`
	// (Updatable) The destination region name to which the DB system backup will be copied.
	CopyToRegion string `pulumi:"copyToRegion"`
}

// MysqlDbSystemBackupPolicyCopyPolicyInput is an input type that accepts MysqlDbSystemBackupPolicyCopyPolicyArgs and MysqlDbSystemBackupPolicyCopyPolicyOutput values.
// You can construct a concrete instance of `MysqlDbSystemBackupPolicyCopyPolicyInput` via:
//
//	MysqlDbSystemBackupPolicyCopyPolicyArgs{...}
type MysqlDbSystemBackupPolicyCopyPolicyInput interface {
	pulumi.Input

	ToMysqlDbSystemBackupPolicyCopyPolicyOutput() MysqlDbSystemBackupPolicyCopyPolicyOutput
	ToMysqlDbSystemBackupPolicyCopyPolicyOutputWithContext(context.Context) MysqlDbSystemBackupPolicyCopyPolicyOutput
}

type MysqlDbSystemBackupPolicyCopyPolicyArgs struct {
	// (Updatable) Number of days to retain the copied DB system backup.
	BackupCopyRetentionInDays pulumi.IntPtrInput `pulumi:"backupCopyRetentionInDays"`
	// (Updatable) The destination region name to which the DB system backup will be copied.
	CopyToRegion pulumi.StringInput `pulumi:"copyToRegion"`
}

func (MysqlDbSystemBackupPolicyCopyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemBackupPolicyCopyPolicy)(nil)).Elem()
}

func (i MysqlDbSystemBackupPolicyCopyPolicyArgs) ToMysqlDbSystemBackupPolicyCopyPolicyOutput() MysqlDbSystemBackupPolicyCopyPolicyOutput {
	return i.ToMysqlDbSystemBackupPolicyCopyPolicyOutputWithContext(context.Background())
}

func (i MysqlDbSystemBackupPolicyCopyPolicyArgs) ToMysqlDbSystemBackupPolicyCopyPolicyOutputWithContext(ctx context.Context) MysqlDbSystemBackupPolicyCopyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemBackupPolicyCopyPolicyOutput)
}

// MysqlDbSystemBackupPolicyCopyPolicyArrayInput is an input type that accepts MysqlDbSystemBackupPolicyCopyPolicyArray and MysqlDbSystemBackupPolicyCopyPolicyArrayOutput values.
// You can construct a concrete instance of `MysqlDbSystemBackupPolicyCopyPolicyArrayInput` via:
//
//	MysqlDbSystemBackupPolicyCopyPolicyArray{ MysqlDbSystemBackupPolicyCopyPolicyArgs{...} }
type MysqlDbSystemBackupPolicyCopyPolicyArrayInput interface {
	pulumi.Input

	ToMysqlDbSystemBackupPolicyCopyPolicyArrayOutput() MysqlDbSystemBackupPolicyCopyPolicyArrayOutput
	ToMysqlDbSystemBackupPolicyCopyPolicyArrayOutputWithContext(context.Context) MysqlDbSystemBackupPolicyCopyPolicyArrayOutput
}

type MysqlDbSystemBackupPolicyCopyPolicyArray []MysqlDbSystemBackupPolicyCopyPolicyInput

func (MysqlDbSystemBackupPolicyCopyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemBackupPolicyCopyPolicy)(nil)).Elem()
}

func (i MysqlDbSystemBackupPolicyCopyPolicyArray) ToMysqlDbSystemBackupPolicyCopyPolicyArrayOutput() MysqlDbSystemBackupPolicyCopyPolicyArrayOutput {
	return i.ToMysqlDbSystemBackupPolicyCopyPolicyArrayOutputWithContext(context.Background())
}

func (i MysqlDbSystemBackupPolicyCopyPolicyArray) ToMysqlDbSystemBackupPolicyCopyPolicyArrayOutputWithContext(ctx context.Context) MysqlDbSystemBackupPolicyCopyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemBackupPolicyCopyPolicyArrayOutput)
}

type MysqlDbSystemBackupPolicyCopyPolicyOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemBackupPolicyCopyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemBackupPolicyCopyPolicy)(nil)).Elem()
}

func (o MysqlDbSystemBackupPolicyCopyPolicyOutput) ToMysqlDbSystemBackupPolicyCopyPolicyOutput() MysqlDbSystemBackupPolicyCopyPolicyOutput {
	return o
}

func (o MysqlDbSystemBackupPolicyCopyPolicyOutput) ToMysqlDbSystemBackupPolicyCopyPolicyOutputWithContext(ctx context.Context) MysqlDbSystemBackupPolicyCopyPolicyOutput {
	return o
}

// (Updatable) Number of days to retain the copied DB system backup.
func (o MysqlDbSystemBackupPolicyCopyPolicyOutput) BackupCopyRetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemBackupPolicyCopyPolicy) *int { return v.BackupCopyRetentionInDays }).(pulumi.IntPtrOutput)
}

// (Updatable) The destination region name to which the DB system backup will be copied.
func (o MysqlDbSystemBackupPolicyCopyPolicyOutput) CopyToRegion() pulumi.StringOutput {
	return o.ApplyT(func(v MysqlDbSystemBackupPolicyCopyPolicy) string { return v.CopyToRegion }).(pulumi.StringOutput)
}

type MysqlDbSystemBackupPolicyCopyPolicyArrayOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemBackupPolicyCopyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemBackupPolicyCopyPolicy)(nil)).Elem()
}

func (o MysqlDbSystemBackupPolicyCopyPolicyArrayOutput) ToMysqlDbSystemBackupPolicyCopyPolicyArrayOutput() MysqlDbSystemBackupPolicyCopyPolicyArrayOutput {
	return o
}

func (o MysqlDbSystemBackupPolicyCopyPolicyArrayOutput) ToMysqlDbSystemBackupPolicyCopyPolicyArrayOutputWithContext(ctx context.Context) MysqlDbSystemBackupPolicyCopyPolicyArrayOutput {
	return o
}

func (o MysqlDbSystemBackupPolicyCopyPolicyArrayOutput) Index(i pulumi.IntInput) MysqlDbSystemBackupPolicyCopyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlDbSystemBackupPolicyCopyPolicy {
		return vs[0].([]MysqlDbSystemBackupPolicyCopyPolicy)[vs[1].(int)]
	}).(MysqlDbSystemBackupPolicyCopyPolicyOutput)
}

type MysqlDbSystemBackupPolicyPitrPolicy struct {
	// (Updatable) Specifies if PITR is enabled or disabled.
	IsEnabled *bool `pulumi:"isEnabled"`
}

// MysqlDbSystemBackupPolicyPitrPolicyInput is an input type that accepts MysqlDbSystemBackupPolicyPitrPolicyArgs and MysqlDbSystemBackupPolicyPitrPolicyOutput values.
// You can construct a concrete instance of `MysqlDbSystemBackupPolicyPitrPolicyInput` via:
//
//	MysqlDbSystemBackupPolicyPitrPolicyArgs{...}
type MysqlDbSystemBackupPolicyPitrPolicyInput interface {
	pulumi.Input

	ToMysqlDbSystemBackupPolicyPitrPolicyOutput() MysqlDbSystemBackupPolicyPitrPolicyOutput
	ToMysqlDbSystemBackupPolicyPitrPolicyOutputWithContext(context.Context) MysqlDbSystemBackupPolicyPitrPolicyOutput
}

type MysqlDbSystemBackupPolicyPitrPolicyArgs struct {
	// (Updatable) Specifies if PITR is enabled or disabled.
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
}

func (MysqlDbSystemBackupPolicyPitrPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemBackupPolicyPitrPolicy)(nil)).Elem()
}

func (i MysqlDbSystemBackupPolicyPitrPolicyArgs) ToMysqlDbSystemBackupPolicyPitrPolicyOutput() MysqlDbSystemBackupPolicyPitrPolicyOutput {
	return i.ToMysqlDbSystemBackupPolicyPitrPolicyOutputWithContext(context.Background())
}

func (i MysqlDbSystemBackupPolicyPitrPolicyArgs) ToMysqlDbSystemBackupPolicyPitrPolicyOutputWithContext(ctx context.Context) MysqlDbSystemBackupPolicyPitrPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemBackupPolicyPitrPolicyOutput)
}

func (i MysqlDbSystemBackupPolicyPitrPolicyArgs) ToMysqlDbSystemBackupPolicyPitrPolicyPtrOutput() MysqlDbSystemBackupPolicyPitrPolicyPtrOutput {
	return i.ToMysqlDbSystemBackupPolicyPitrPolicyPtrOutputWithContext(context.Background())
}

func (i MysqlDbSystemBackupPolicyPitrPolicyArgs) ToMysqlDbSystemBackupPolicyPitrPolicyPtrOutputWithContext(ctx context.Context) MysqlDbSystemBackupPolicyPitrPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemBackupPolicyPitrPolicyOutput).ToMysqlDbSystemBackupPolicyPitrPolicyPtrOutputWithContext(ctx)
}

// MysqlDbSystemBackupPolicyPitrPolicyPtrInput is an input type that accepts MysqlDbSystemBackupPolicyPitrPolicyArgs, MysqlDbSystemBackupPolicyPitrPolicyPtr and MysqlDbSystemBackupPolicyPitrPolicyPtrOutput values.
// You can construct a concrete instance of `MysqlDbSystemBackupPolicyPitrPolicyPtrInput` via:
//
//	        MysqlDbSystemBackupPolicyPitrPolicyArgs{...}
//
//	or:
//
//	        nil
type MysqlDbSystemBackupPolicyPitrPolicyPtrInput interface {
	pulumi.Input

	ToMysqlDbSystemBackupPolicyPitrPolicyPtrOutput() MysqlDbSystemBackupPolicyPitrPolicyPtrOutput
	ToMysqlDbSystemBackupPolicyPitrPolicyPtrOutputWithContext(context.Context) MysqlDbSystemBackupPolicyPitrPolicyPtrOutput
}

type mysqlDbSystemBackupPolicyPitrPolicyPtrType MysqlDbSystemBackupPolicyPitrPolicyArgs

func MysqlDbSystemBackupPolicyPitrPolicyPtr(v *MysqlDbSystemBackupPolicyPitrPolicyArgs) MysqlDbSystemBackupPolicyPitrPolicyPtrInput {
	return (*mysqlDbSystemBackupPolicyPitrPolicyPtrType)(v)
}

func (*mysqlDbSystemBackupPolicyPitrPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlDbSystemBackupPolicyPitrPolicy)(nil)).Elem()
}

func (i *mysqlDbSystemBackupPolicyPitrPolicyPtrType) ToMysqlDbSystemBackupPolicyPitrPolicyPtrOutput() MysqlDbSystemBackupPolicyPitrPolicyPtrOutput {
	return i.ToMysqlDbSystemBackupPolicyPitrPolicyPtrOutputWithContext(context.Background())
}

func (i *mysqlDbSystemBackupPolicyPitrPolicyPtrType) ToMysqlDbSystemBackupPolicyPitrPolicyPtrOutputWithContext(ctx context.Context) MysqlDbSystemBackupPolicyPitrPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemBackupPolicyPitrPolicyPtrOutput)
}

type MysqlDbSystemBackupPolicyPitrPolicyOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemBackupPolicyPitrPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemBackupPolicyPitrPolicy)(nil)).Elem()
}

func (o MysqlDbSystemBackupPolicyPitrPolicyOutput) ToMysqlDbSystemBackupPolicyPitrPolicyOutput() MysqlDbSystemBackupPolicyPitrPolicyOutput {
	return o
}

func (o MysqlDbSystemBackupPolicyPitrPolicyOutput) ToMysqlDbSystemBackupPolicyPitrPolicyOutputWithContext(ctx context.Context) MysqlDbSystemBackupPolicyPitrPolicyOutput {
	return o
}

func (o MysqlDbSystemBackupPolicyPitrPolicyOutput) ToMysqlDbSystemBackupPolicyPitrPolicyPtrOutput() MysqlDbSystemBackupPolicyPitrPolicyPtrOutput {
	return o.ToMysqlDbSystemBackupPolicyPitrPolicyPtrOutputWithContext(context.Background())
}

func (o MysqlDbSystemBackupPolicyPitrPolicyOutput) ToMysqlDbSystemBackupPolicyPitrPolicyPtrOutputWithContext(ctx context.Context) MysqlDbSystemBackupPolicyPitrPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MysqlDbSystemBackupPolicyPitrPolicy) *MysqlDbSystemBackupPolicyPitrPolicy {
		return &v
	}).(MysqlDbSystemBackupPolicyPitrPolicyPtrOutput)
}

// (Updatable) Specifies if PITR is enabled or disabled.
func (o MysqlDbSystemBackupPolicyPitrPolicyOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemBackupPolicyPitrPolicy) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

type MysqlDbSystemBackupPolicyPitrPolicyPtrOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemBackupPolicyPitrPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlDbSystemBackupPolicyPitrPolicy)(nil)).Elem()
}

func (o MysqlDbSystemBackupPolicyPitrPolicyPtrOutput) ToMysqlDbSystemBackupPolicyPitrPolicyPtrOutput() MysqlDbSystemBackupPolicyPitrPolicyPtrOutput {
	return o
}

func (o MysqlDbSystemBackupPolicyPitrPolicyPtrOutput) ToMysqlDbSystemBackupPolicyPitrPolicyPtrOutputWithContext(ctx context.Context) MysqlDbSystemBackupPolicyPitrPolicyPtrOutput {
	return o
}

func (o MysqlDbSystemBackupPolicyPitrPolicyPtrOutput) Elem() MysqlDbSystemBackupPolicyPitrPolicyOutput {
	return o.ApplyT(func(v *MysqlDbSystemBackupPolicyPitrPolicy) MysqlDbSystemBackupPolicyPitrPolicy {
		if v != nil {
			return *v
		}
		var ret MysqlDbSystemBackupPolicyPitrPolicy
		return ret
	}).(MysqlDbSystemBackupPolicyPitrPolicyOutput)
}

// (Updatable) Specifies if PITR is enabled or disabled.
func (o MysqlDbSystemBackupPolicyPitrPolicyPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystemBackupPolicyPitrPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

type MysqlDbSystemChannel struct {
	// The OCID of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) The user-friendly name for the DB System. It does not have to be unique.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The OCID of the DB System.
	Id *string `pulumi:"id"`
	// Specifies if the DB System read endpoint is enabled or not.
	IsEnabled *bool `pulumi:"isEnabled"`
	// Additional information about the current lifecycleState.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// Parameters detailing how to provision the initial data of the system.
	Sources []MysqlDbSystemChannelSource `pulumi:"sources"`
	// (Updatable) The target state for the DB System. Could be set to `ACTIVE` or `INACTIVE`.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// Details about the Channel target.
	Targets []MysqlDbSystemChannelTarget `pulumi:"targets"`
	// The date and time the DB System was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

// MysqlDbSystemChannelInput is an input type that accepts MysqlDbSystemChannelArgs and MysqlDbSystemChannelOutput values.
// You can construct a concrete instance of `MysqlDbSystemChannelInput` via:
//
//	MysqlDbSystemChannelArgs{...}
type MysqlDbSystemChannelInput interface {
	pulumi.Input

	ToMysqlDbSystemChannelOutput() MysqlDbSystemChannelOutput
	ToMysqlDbSystemChannelOutputWithContext(context.Context) MysqlDbSystemChannelOutput
}

type MysqlDbSystemChannelArgs struct {
	// The OCID of the compartment.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// (Updatable) The user-friendly name for the DB System. It does not have to be unique.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// The OCID of the DB System.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Specifies if the DB System read endpoint is enabled or not.
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// Additional information about the current lifecycleState.
	LifecycleDetails pulumi.StringPtrInput `pulumi:"lifecycleDetails"`
	// Parameters detailing how to provision the initial data of the system.
	Sources MysqlDbSystemChannelSourceArrayInput `pulumi:"sources"`
	// (Updatable) The target state for the DB System. Could be set to `ACTIVE` or `INACTIVE`.
	State pulumi.StringPtrInput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput `pulumi:"systemTags"`
	// Details about the Channel target.
	Targets MysqlDbSystemChannelTargetArrayInput `pulumi:"targets"`
	// The date and time the DB System was created.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated pulumi.StringPtrInput `pulumi:"timeUpdated"`
}

func (MysqlDbSystemChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemChannel)(nil)).Elem()
}

func (i MysqlDbSystemChannelArgs) ToMysqlDbSystemChannelOutput() MysqlDbSystemChannelOutput {
	return i.ToMysqlDbSystemChannelOutputWithContext(context.Background())
}

func (i MysqlDbSystemChannelArgs) ToMysqlDbSystemChannelOutputWithContext(ctx context.Context) MysqlDbSystemChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemChannelOutput)
}

// MysqlDbSystemChannelArrayInput is an input type that accepts MysqlDbSystemChannelArray and MysqlDbSystemChannelArrayOutput values.
// You can construct a concrete instance of `MysqlDbSystemChannelArrayInput` via:
//
//	MysqlDbSystemChannelArray{ MysqlDbSystemChannelArgs{...} }
type MysqlDbSystemChannelArrayInput interface {
	pulumi.Input

	ToMysqlDbSystemChannelArrayOutput() MysqlDbSystemChannelArrayOutput
	ToMysqlDbSystemChannelArrayOutputWithContext(context.Context) MysqlDbSystemChannelArrayOutput
}

type MysqlDbSystemChannelArray []MysqlDbSystemChannelInput

func (MysqlDbSystemChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemChannel)(nil)).Elem()
}

func (i MysqlDbSystemChannelArray) ToMysqlDbSystemChannelArrayOutput() MysqlDbSystemChannelArrayOutput {
	return i.ToMysqlDbSystemChannelArrayOutputWithContext(context.Background())
}

func (i MysqlDbSystemChannelArray) ToMysqlDbSystemChannelArrayOutputWithContext(ctx context.Context) MysqlDbSystemChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemChannelArrayOutput)
}

type MysqlDbSystemChannelOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemChannel)(nil)).Elem()
}

func (o MysqlDbSystemChannelOutput) ToMysqlDbSystemChannelOutput() MysqlDbSystemChannelOutput {
	return o
}

func (o MysqlDbSystemChannelOutput) ToMysqlDbSystemChannelOutputWithContext(ctx context.Context) MysqlDbSystemChannelOutput {
	return o
}

// The OCID of the compartment.
func (o MysqlDbSystemChannelOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannel) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
func (o MysqlDbSystemChannelOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v MysqlDbSystemChannel) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) The user-friendly name for the DB System. It does not have to be unique.
func (o MysqlDbSystemChannelOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannel) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// (Updatable) Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o MysqlDbSystemChannelOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v MysqlDbSystemChannel) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The OCID of the DB System.
func (o MysqlDbSystemChannelOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannel) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specifies if the DB System read endpoint is enabled or not.
func (o MysqlDbSystemChannelOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannel) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// Additional information about the current lifecycleState.
func (o MysqlDbSystemChannelOutput) LifecycleDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannel) *string { return v.LifecycleDetails }).(pulumi.StringPtrOutput)
}

// Parameters detailing how to provision the initial data of the system.
func (o MysqlDbSystemChannelOutput) Sources() MysqlDbSystemChannelSourceArrayOutput {
	return o.ApplyT(func(v MysqlDbSystemChannel) []MysqlDbSystemChannelSource { return v.Sources }).(MysqlDbSystemChannelSourceArrayOutput)
}

// (Updatable) The target state for the DB System. Could be set to `ACTIVE` or `INACTIVE`.
func (o MysqlDbSystemChannelOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannel) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o MysqlDbSystemChannelOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v MysqlDbSystemChannel) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// Details about the Channel target.
func (o MysqlDbSystemChannelOutput) Targets() MysqlDbSystemChannelTargetArrayOutput {
	return o.ApplyT(func(v MysqlDbSystemChannel) []MysqlDbSystemChannelTarget { return v.Targets }).(MysqlDbSystemChannelTargetArrayOutput)
}

// The date and time the DB System was created.
func (o MysqlDbSystemChannelOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannel) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The time the DB System was last updated.
func (o MysqlDbSystemChannelOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannel) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

type MysqlDbSystemChannelArrayOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemChannel)(nil)).Elem()
}

func (o MysqlDbSystemChannelArrayOutput) ToMysqlDbSystemChannelArrayOutput() MysqlDbSystemChannelArrayOutput {
	return o
}

func (o MysqlDbSystemChannelArrayOutput) ToMysqlDbSystemChannelArrayOutputWithContext(ctx context.Context) MysqlDbSystemChannelArrayOutput {
	return o
}

func (o MysqlDbSystemChannelArrayOutput) Index(i pulumi.IntInput) MysqlDbSystemChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlDbSystemChannel {
		return vs[0].([]MysqlDbSystemChannel)[vs[1].(int)]
	}).(MysqlDbSystemChannelOutput)
}

type MysqlDbSystemChannelSource struct {
	// Specifies how the replication channel handles replicated transactions without an identifier, enabling replication from a source that does not use transaction-id-based replication to a replica that does.
	AnonymousTransactionsHandlings []MysqlDbSystemChannelSourceAnonymousTransactionsHandling `pulumi:"anonymousTransactionsHandlings"`
	// The network address of the DB System.
	Hostname *string `pulumi:"hostname"`
	// The port for primary endpoint of the DB System to listen on.
	Port *int `pulumi:"port"`
	// The specific source identifier. Use `BACKUP` for creating a new database by restoring from a backup. Use `IMPORTURL` for creating a new database from a URL Object Storage PAR.
	SourceType *string `pulumi:"sourceType"`
	// The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
	SslCaCertificates []MysqlDbSystemChannelSourceSslCaCertificate `pulumi:"sslCaCertificates"`
	// The SSL mode of the Channel.
	SslMode *string `pulumi:"sslMode"`
	// The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
	Username *string `pulumi:"username"`
}

// MysqlDbSystemChannelSourceInput is an input type that accepts MysqlDbSystemChannelSourceArgs and MysqlDbSystemChannelSourceOutput values.
// You can construct a concrete instance of `MysqlDbSystemChannelSourceInput` via:
//
//	MysqlDbSystemChannelSourceArgs{...}
type MysqlDbSystemChannelSourceInput interface {
	pulumi.Input

	ToMysqlDbSystemChannelSourceOutput() MysqlDbSystemChannelSourceOutput
	ToMysqlDbSystemChannelSourceOutputWithContext(context.Context) MysqlDbSystemChannelSourceOutput
}

type MysqlDbSystemChannelSourceArgs struct {
	// Specifies how the replication channel handles replicated transactions without an identifier, enabling replication from a source that does not use transaction-id-based replication to a replica that does.
	AnonymousTransactionsHandlings MysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayInput `pulumi:"anonymousTransactionsHandlings"`
	// The network address of the DB System.
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	// The port for primary endpoint of the DB System to listen on.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The specific source identifier. Use `BACKUP` for creating a new database by restoring from a backup. Use `IMPORTURL` for creating a new database from a URL Object Storage PAR.
	SourceType pulumi.StringPtrInput `pulumi:"sourceType"`
	// The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
	SslCaCertificates MysqlDbSystemChannelSourceSslCaCertificateArrayInput `pulumi:"sslCaCertificates"`
	// The SSL mode of the Channel.
	SslMode pulumi.StringPtrInput `pulumi:"sslMode"`
	// The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (MysqlDbSystemChannelSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemChannelSource)(nil)).Elem()
}

func (i MysqlDbSystemChannelSourceArgs) ToMysqlDbSystemChannelSourceOutput() MysqlDbSystemChannelSourceOutput {
	return i.ToMysqlDbSystemChannelSourceOutputWithContext(context.Background())
}

func (i MysqlDbSystemChannelSourceArgs) ToMysqlDbSystemChannelSourceOutputWithContext(ctx context.Context) MysqlDbSystemChannelSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemChannelSourceOutput)
}

// MysqlDbSystemChannelSourceArrayInput is an input type that accepts MysqlDbSystemChannelSourceArray and MysqlDbSystemChannelSourceArrayOutput values.
// You can construct a concrete instance of `MysqlDbSystemChannelSourceArrayInput` via:
//
//	MysqlDbSystemChannelSourceArray{ MysqlDbSystemChannelSourceArgs{...} }
type MysqlDbSystemChannelSourceArrayInput interface {
	pulumi.Input

	ToMysqlDbSystemChannelSourceArrayOutput() MysqlDbSystemChannelSourceArrayOutput
	ToMysqlDbSystemChannelSourceArrayOutputWithContext(context.Context) MysqlDbSystemChannelSourceArrayOutput
}

type MysqlDbSystemChannelSourceArray []MysqlDbSystemChannelSourceInput

func (MysqlDbSystemChannelSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemChannelSource)(nil)).Elem()
}

func (i MysqlDbSystemChannelSourceArray) ToMysqlDbSystemChannelSourceArrayOutput() MysqlDbSystemChannelSourceArrayOutput {
	return i.ToMysqlDbSystemChannelSourceArrayOutputWithContext(context.Background())
}

func (i MysqlDbSystemChannelSourceArray) ToMysqlDbSystemChannelSourceArrayOutputWithContext(ctx context.Context) MysqlDbSystemChannelSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemChannelSourceArrayOutput)
}

type MysqlDbSystemChannelSourceOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemChannelSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemChannelSource)(nil)).Elem()
}

func (o MysqlDbSystemChannelSourceOutput) ToMysqlDbSystemChannelSourceOutput() MysqlDbSystemChannelSourceOutput {
	return o
}

func (o MysqlDbSystemChannelSourceOutput) ToMysqlDbSystemChannelSourceOutputWithContext(ctx context.Context) MysqlDbSystemChannelSourceOutput {
	return o
}

// Specifies how the replication channel handles replicated transactions without an identifier, enabling replication from a source that does not use transaction-id-based replication to a replica that does.
func (o MysqlDbSystemChannelSourceOutput) AnonymousTransactionsHandlings() MysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput {
	return o.ApplyT(func(v MysqlDbSystemChannelSource) []MysqlDbSystemChannelSourceAnonymousTransactionsHandling {
		return v.AnonymousTransactionsHandlings
	}).(MysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput)
}

// The network address of the DB System.
func (o MysqlDbSystemChannelSourceOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannelSource) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// The port for primary endpoint of the DB System to listen on.
func (o MysqlDbSystemChannelSourceOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannelSource) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The specific source identifier. Use `BACKUP` for creating a new database by restoring from a backup. Use `IMPORTURL` for creating a new database from a URL Object Storage PAR.
func (o MysqlDbSystemChannelSourceOutput) SourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannelSource) *string { return v.SourceType }).(pulumi.StringPtrOutput)
}

// The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
func (o MysqlDbSystemChannelSourceOutput) SslCaCertificates() MysqlDbSystemChannelSourceSslCaCertificateArrayOutput {
	return o.ApplyT(func(v MysqlDbSystemChannelSource) []MysqlDbSystemChannelSourceSslCaCertificate {
		return v.SslCaCertificates
	}).(MysqlDbSystemChannelSourceSslCaCertificateArrayOutput)
}

// The SSL mode of the Channel.
func (o MysqlDbSystemChannelSourceOutput) SslMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannelSource) *string { return v.SslMode }).(pulumi.StringPtrOutput)
}

// The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
func (o MysqlDbSystemChannelSourceOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannelSource) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type MysqlDbSystemChannelSourceArrayOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemChannelSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemChannelSource)(nil)).Elem()
}

func (o MysqlDbSystemChannelSourceArrayOutput) ToMysqlDbSystemChannelSourceArrayOutput() MysqlDbSystemChannelSourceArrayOutput {
	return o
}

func (o MysqlDbSystemChannelSourceArrayOutput) ToMysqlDbSystemChannelSourceArrayOutputWithContext(ctx context.Context) MysqlDbSystemChannelSourceArrayOutput {
	return o
}

func (o MysqlDbSystemChannelSourceArrayOutput) Index(i pulumi.IntInput) MysqlDbSystemChannelSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlDbSystemChannelSource {
		return vs[0].([]MysqlDbSystemChannelSource)[vs[1].(int)]
	}).(MysqlDbSystemChannelSourceOutput)
}

type MysqlDbSystemChannelSourceAnonymousTransactionsHandling struct {
	// Specifies one of the coordinates (file) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
	LastConfiguredLogFilename *string `pulumi:"lastConfiguredLogFilename"`
	// Specifies one of the coordinates (offset) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
	LastConfiguredLogOffset *string `pulumi:"lastConfiguredLogOffset"`
	// Specifies how the replication channel handles anonymous transactions.
	Policy *string `pulumi:"policy"`
	// The UUID that is used as a prefix when generating transaction identifiers for anonymous transactions coming from the source. You can change the UUID later.
	Uuid *string `pulumi:"uuid"`
}

// MysqlDbSystemChannelSourceAnonymousTransactionsHandlingInput is an input type that accepts MysqlDbSystemChannelSourceAnonymousTransactionsHandlingArgs and MysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput values.
// You can construct a concrete instance of `MysqlDbSystemChannelSourceAnonymousTransactionsHandlingInput` via:
//
//	MysqlDbSystemChannelSourceAnonymousTransactionsHandlingArgs{...}
type MysqlDbSystemChannelSourceAnonymousTransactionsHandlingInput interface {
	pulumi.Input

	ToMysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput() MysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput
	ToMysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutputWithContext(context.Context) MysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput
}

type MysqlDbSystemChannelSourceAnonymousTransactionsHandlingArgs struct {
	// Specifies one of the coordinates (file) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
	LastConfiguredLogFilename pulumi.StringPtrInput `pulumi:"lastConfiguredLogFilename"`
	// Specifies one of the coordinates (offset) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
	LastConfiguredLogOffset pulumi.StringPtrInput `pulumi:"lastConfiguredLogOffset"`
	// Specifies how the replication channel handles anonymous transactions.
	Policy pulumi.StringPtrInput `pulumi:"policy"`
	// The UUID that is used as a prefix when generating transaction identifiers for anonymous transactions coming from the source. You can change the UUID later.
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (MysqlDbSystemChannelSourceAnonymousTransactionsHandlingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemChannelSourceAnonymousTransactionsHandling)(nil)).Elem()
}

func (i MysqlDbSystemChannelSourceAnonymousTransactionsHandlingArgs) ToMysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput() MysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput {
	return i.ToMysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutputWithContext(context.Background())
}

func (i MysqlDbSystemChannelSourceAnonymousTransactionsHandlingArgs) ToMysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutputWithContext(ctx context.Context) MysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput)
}

// MysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayInput is an input type that accepts MysqlDbSystemChannelSourceAnonymousTransactionsHandlingArray and MysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput values.
// You can construct a concrete instance of `MysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayInput` via:
//
//	MysqlDbSystemChannelSourceAnonymousTransactionsHandlingArray{ MysqlDbSystemChannelSourceAnonymousTransactionsHandlingArgs{...} }
type MysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayInput interface {
	pulumi.Input

	ToMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput() MysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput
	ToMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutputWithContext(context.Context) MysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput
}

type MysqlDbSystemChannelSourceAnonymousTransactionsHandlingArray []MysqlDbSystemChannelSourceAnonymousTransactionsHandlingInput

func (MysqlDbSystemChannelSourceAnonymousTransactionsHandlingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemChannelSourceAnonymousTransactionsHandling)(nil)).Elem()
}

func (i MysqlDbSystemChannelSourceAnonymousTransactionsHandlingArray) ToMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput() MysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput {
	return i.ToMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutputWithContext(context.Background())
}

func (i MysqlDbSystemChannelSourceAnonymousTransactionsHandlingArray) ToMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutputWithContext(ctx context.Context) MysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput)
}

type MysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemChannelSourceAnonymousTransactionsHandling)(nil)).Elem()
}

func (o MysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput) ToMysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput() MysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput {
	return o
}

func (o MysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput) ToMysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutputWithContext(ctx context.Context) MysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput {
	return o
}

// Specifies one of the coordinates (file) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
func (o MysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput) LastConfiguredLogFilename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannelSourceAnonymousTransactionsHandling) *string {
		return v.LastConfiguredLogFilename
	}).(pulumi.StringPtrOutput)
}

// Specifies one of the coordinates (offset) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
func (o MysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput) LastConfiguredLogOffset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannelSourceAnonymousTransactionsHandling) *string {
		return v.LastConfiguredLogOffset
	}).(pulumi.StringPtrOutput)
}

// Specifies how the replication channel handles anonymous transactions.
func (o MysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannelSourceAnonymousTransactionsHandling) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

// The UUID that is used as a prefix when generating transaction identifiers for anonymous transactions coming from the source. You can change the UUID later.
func (o MysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannelSourceAnonymousTransactionsHandling) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type MysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemChannelSourceAnonymousTransactionsHandling)(nil)).Elem()
}

func (o MysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput) ToMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput() MysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput {
	return o
}

func (o MysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput) ToMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutputWithContext(ctx context.Context) MysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput {
	return o
}

func (o MysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput) Index(i pulumi.IntInput) MysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlDbSystemChannelSourceAnonymousTransactionsHandling {
		return vs[0].([]MysqlDbSystemChannelSourceAnonymousTransactionsHandling)[vs[1].(int)]
	}).(MysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput)
}

type MysqlDbSystemChannelSourceSslCaCertificate struct {
	// The type of CA certificate.
	CertificateType *string `pulumi:"certificateType"`
	// The string containing the CA certificate in PEM format.
	Contents *string `pulumi:"contents"`
}

// MysqlDbSystemChannelSourceSslCaCertificateInput is an input type that accepts MysqlDbSystemChannelSourceSslCaCertificateArgs and MysqlDbSystemChannelSourceSslCaCertificateOutput values.
// You can construct a concrete instance of `MysqlDbSystemChannelSourceSslCaCertificateInput` via:
//
//	MysqlDbSystemChannelSourceSslCaCertificateArgs{...}
type MysqlDbSystemChannelSourceSslCaCertificateInput interface {
	pulumi.Input

	ToMysqlDbSystemChannelSourceSslCaCertificateOutput() MysqlDbSystemChannelSourceSslCaCertificateOutput
	ToMysqlDbSystemChannelSourceSslCaCertificateOutputWithContext(context.Context) MysqlDbSystemChannelSourceSslCaCertificateOutput
}

type MysqlDbSystemChannelSourceSslCaCertificateArgs struct {
	// The type of CA certificate.
	CertificateType pulumi.StringPtrInput `pulumi:"certificateType"`
	// The string containing the CA certificate in PEM format.
	Contents pulumi.StringPtrInput `pulumi:"contents"`
}

func (MysqlDbSystemChannelSourceSslCaCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemChannelSourceSslCaCertificate)(nil)).Elem()
}

func (i MysqlDbSystemChannelSourceSslCaCertificateArgs) ToMysqlDbSystemChannelSourceSslCaCertificateOutput() MysqlDbSystemChannelSourceSslCaCertificateOutput {
	return i.ToMysqlDbSystemChannelSourceSslCaCertificateOutputWithContext(context.Background())
}

func (i MysqlDbSystemChannelSourceSslCaCertificateArgs) ToMysqlDbSystemChannelSourceSslCaCertificateOutputWithContext(ctx context.Context) MysqlDbSystemChannelSourceSslCaCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemChannelSourceSslCaCertificateOutput)
}

// MysqlDbSystemChannelSourceSslCaCertificateArrayInput is an input type that accepts MysqlDbSystemChannelSourceSslCaCertificateArray and MysqlDbSystemChannelSourceSslCaCertificateArrayOutput values.
// You can construct a concrete instance of `MysqlDbSystemChannelSourceSslCaCertificateArrayInput` via:
//
//	MysqlDbSystemChannelSourceSslCaCertificateArray{ MysqlDbSystemChannelSourceSslCaCertificateArgs{...} }
type MysqlDbSystemChannelSourceSslCaCertificateArrayInput interface {
	pulumi.Input

	ToMysqlDbSystemChannelSourceSslCaCertificateArrayOutput() MysqlDbSystemChannelSourceSslCaCertificateArrayOutput
	ToMysqlDbSystemChannelSourceSslCaCertificateArrayOutputWithContext(context.Context) MysqlDbSystemChannelSourceSslCaCertificateArrayOutput
}

type MysqlDbSystemChannelSourceSslCaCertificateArray []MysqlDbSystemChannelSourceSslCaCertificateInput

func (MysqlDbSystemChannelSourceSslCaCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemChannelSourceSslCaCertificate)(nil)).Elem()
}

func (i MysqlDbSystemChannelSourceSslCaCertificateArray) ToMysqlDbSystemChannelSourceSslCaCertificateArrayOutput() MysqlDbSystemChannelSourceSslCaCertificateArrayOutput {
	return i.ToMysqlDbSystemChannelSourceSslCaCertificateArrayOutputWithContext(context.Background())
}

func (i MysqlDbSystemChannelSourceSslCaCertificateArray) ToMysqlDbSystemChannelSourceSslCaCertificateArrayOutputWithContext(ctx context.Context) MysqlDbSystemChannelSourceSslCaCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemChannelSourceSslCaCertificateArrayOutput)
}

type MysqlDbSystemChannelSourceSslCaCertificateOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemChannelSourceSslCaCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemChannelSourceSslCaCertificate)(nil)).Elem()
}

func (o MysqlDbSystemChannelSourceSslCaCertificateOutput) ToMysqlDbSystemChannelSourceSslCaCertificateOutput() MysqlDbSystemChannelSourceSslCaCertificateOutput {
	return o
}

func (o MysqlDbSystemChannelSourceSslCaCertificateOutput) ToMysqlDbSystemChannelSourceSslCaCertificateOutputWithContext(ctx context.Context) MysqlDbSystemChannelSourceSslCaCertificateOutput {
	return o
}

// The type of CA certificate.
func (o MysqlDbSystemChannelSourceSslCaCertificateOutput) CertificateType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannelSourceSslCaCertificate) *string { return v.CertificateType }).(pulumi.StringPtrOutput)
}

// The string containing the CA certificate in PEM format.
func (o MysqlDbSystemChannelSourceSslCaCertificateOutput) Contents() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannelSourceSslCaCertificate) *string { return v.Contents }).(pulumi.StringPtrOutput)
}

type MysqlDbSystemChannelSourceSslCaCertificateArrayOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemChannelSourceSslCaCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemChannelSourceSslCaCertificate)(nil)).Elem()
}

func (o MysqlDbSystemChannelSourceSslCaCertificateArrayOutput) ToMysqlDbSystemChannelSourceSslCaCertificateArrayOutput() MysqlDbSystemChannelSourceSslCaCertificateArrayOutput {
	return o
}

func (o MysqlDbSystemChannelSourceSslCaCertificateArrayOutput) ToMysqlDbSystemChannelSourceSslCaCertificateArrayOutputWithContext(ctx context.Context) MysqlDbSystemChannelSourceSslCaCertificateArrayOutput {
	return o
}

func (o MysqlDbSystemChannelSourceSslCaCertificateArrayOutput) Index(i pulumi.IntInput) MysqlDbSystemChannelSourceSslCaCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlDbSystemChannelSourceSslCaCertificate {
		return vs[0].([]MysqlDbSystemChannelSourceSslCaCertificate)[vs[1].(int)]
	}).(MysqlDbSystemChannelSourceSslCaCertificateOutput)
}

type MysqlDbSystemChannelTarget struct {
	// The username for the replication applier of the target MySQL DB System.
	ApplierUsername *string `pulumi:"applierUsername"`
	// The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
	ChannelName *string `pulumi:"channelName"`
	// The OCID of the DB System from which a backup shall be selected to be restored when creating the new DB System. Use this together with recovery point to perform a point in time recovery operation.
	DbSystemId *string `pulumi:"dbSystemId"`
	// Specifies the amount of time, in seconds, that the channel waits before  applying a transaction received from the source.
	DelayInSeconds *int `pulumi:"delayInSeconds"`
	// Replication filter rules to be applied at the DB System Channel target.
	Filters []MysqlDbSystemChannelTargetFilter `pulumi:"filters"`
	// Specifies how a replication channel handles the creation and alteration of tables  that do not have a primary key.
	TablesWithoutPrimaryKeyHandling *string `pulumi:"tablesWithoutPrimaryKeyHandling"`
	// The specific target identifier.
	TargetType *string `pulumi:"targetType"`
}

// MysqlDbSystemChannelTargetInput is an input type that accepts MysqlDbSystemChannelTargetArgs and MysqlDbSystemChannelTargetOutput values.
// You can construct a concrete instance of `MysqlDbSystemChannelTargetInput` via:
//
//	MysqlDbSystemChannelTargetArgs{...}
type MysqlDbSystemChannelTargetInput interface {
	pulumi.Input

	ToMysqlDbSystemChannelTargetOutput() MysqlDbSystemChannelTargetOutput
	ToMysqlDbSystemChannelTargetOutputWithContext(context.Context) MysqlDbSystemChannelTargetOutput
}

type MysqlDbSystemChannelTargetArgs struct {
	// The username for the replication applier of the target MySQL DB System.
	ApplierUsername pulumi.StringPtrInput `pulumi:"applierUsername"`
	// The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
	ChannelName pulumi.StringPtrInput `pulumi:"channelName"`
	// The OCID of the DB System from which a backup shall be selected to be restored when creating the new DB System. Use this together with recovery point to perform a point in time recovery operation.
	DbSystemId pulumi.StringPtrInput `pulumi:"dbSystemId"`
	// Specifies the amount of time, in seconds, that the channel waits before  applying a transaction received from the source.
	DelayInSeconds pulumi.IntPtrInput `pulumi:"delayInSeconds"`
	// Replication filter rules to be applied at the DB System Channel target.
	Filters MysqlDbSystemChannelTargetFilterArrayInput `pulumi:"filters"`
	// Specifies how a replication channel handles the creation and alteration of tables  that do not have a primary key.
	TablesWithoutPrimaryKeyHandling pulumi.StringPtrInput `pulumi:"tablesWithoutPrimaryKeyHandling"`
	// The specific target identifier.
	TargetType pulumi.StringPtrInput `pulumi:"targetType"`
}

func (MysqlDbSystemChannelTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemChannelTarget)(nil)).Elem()
}

func (i MysqlDbSystemChannelTargetArgs) ToMysqlDbSystemChannelTargetOutput() MysqlDbSystemChannelTargetOutput {
	return i.ToMysqlDbSystemChannelTargetOutputWithContext(context.Background())
}

func (i MysqlDbSystemChannelTargetArgs) ToMysqlDbSystemChannelTargetOutputWithContext(ctx context.Context) MysqlDbSystemChannelTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemChannelTargetOutput)
}

// MysqlDbSystemChannelTargetArrayInput is an input type that accepts MysqlDbSystemChannelTargetArray and MysqlDbSystemChannelTargetArrayOutput values.
// You can construct a concrete instance of `MysqlDbSystemChannelTargetArrayInput` via:
//
//	MysqlDbSystemChannelTargetArray{ MysqlDbSystemChannelTargetArgs{...} }
type MysqlDbSystemChannelTargetArrayInput interface {
	pulumi.Input

	ToMysqlDbSystemChannelTargetArrayOutput() MysqlDbSystemChannelTargetArrayOutput
	ToMysqlDbSystemChannelTargetArrayOutputWithContext(context.Context) MysqlDbSystemChannelTargetArrayOutput
}

type MysqlDbSystemChannelTargetArray []MysqlDbSystemChannelTargetInput

func (MysqlDbSystemChannelTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemChannelTarget)(nil)).Elem()
}

func (i MysqlDbSystemChannelTargetArray) ToMysqlDbSystemChannelTargetArrayOutput() MysqlDbSystemChannelTargetArrayOutput {
	return i.ToMysqlDbSystemChannelTargetArrayOutputWithContext(context.Background())
}

func (i MysqlDbSystemChannelTargetArray) ToMysqlDbSystemChannelTargetArrayOutputWithContext(ctx context.Context) MysqlDbSystemChannelTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemChannelTargetArrayOutput)
}

type MysqlDbSystemChannelTargetOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemChannelTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemChannelTarget)(nil)).Elem()
}

func (o MysqlDbSystemChannelTargetOutput) ToMysqlDbSystemChannelTargetOutput() MysqlDbSystemChannelTargetOutput {
	return o
}

func (o MysqlDbSystemChannelTargetOutput) ToMysqlDbSystemChannelTargetOutputWithContext(ctx context.Context) MysqlDbSystemChannelTargetOutput {
	return o
}

// The username for the replication applier of the target MySQL DB System.
func (o MysqlDbSystemChannelTargetOutput) ApplierUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannelTarget) *string { return v.ApplierUsername }).(pulumi.StringPtrOutput)
}

// The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
func (o MysqlDbSystemChannelTargetOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannelTarget) *string { return v.ChannelName }).(pulumi.StringPtrOutput)
}

// The OCID of the DB System from which a backup shall be selected to be restored when creating the new DB System. Use this together with recovery point to perform a point in time recovery operation.
func (o MysqlDbSystemChannelTargetOutput) DbSystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannelTarget) *string { return v.DbSystemId }).(pulumi.StringPtrOutput)
}

// Specifies the amount of time, in seconds, that the channel waits before  applying a transaction received from the source.
func (o MysqlDbSystemChannelTargetOutput) DelayInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannelTarget) *int { return v.DelayInSeconds }).(pulumi.IntPtrOutput)
}

// Replication filter rules to be applied at the DB System Channel target.
func (o MysqlDbSystemChannelTargetOutput) Filters() MysqlDbSystemChannelTargetFilterArrayOutput {
	return o.ApplyT(func(v MysqlDbSystemChannelTarget) []MysqlDbSystemChannelTargetFilter { return v.Filters }).(MysqlDbSystemChannelTargetFilterArrayOutput)
}

// Specifies how a replication channel handles the creation and alteration of tables  that do not have a primary key.
func (o MysqlDbSystemChannelTargetOutput) TablesWithoutPrimaryKeyHandling() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannelTarget) *string { return v.TablesWithoutPrimaryKeyHandling }).(pulumi.StringPtrOutput)
}

// The specific target identifier.
func (o MysqlDbSystemChannelTargetOutput) TargetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannelTarget) *string { return v.TargetType }).(pulumi.StringPtrOutput)
}

type MysqlDbSystemChannelTargetArrayOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemChannelTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemChannelTarget)(nil)).Elem()
}

func (o MysqlDbSystemChannelTargetArrayOutput) ToMysqlDbSystemChannelTargetArrayOutput() MysqlDbSystemChannelTargetArrayOutput {
	return o
}

func (o MysqlDbSystemChannelTargetArrayOutput) ToMysqlDbSystemChannelTargetArrayOutputWithContext(ctx context.Context) MysqlDbSystemChannelTargetArrayOutput {
	return o
}

func (o MysqlDbSystemChannelTargetArrayOutput) Index(i pulumi.IntInput) MysqlDbSystemChannelTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlDbSystemChannelTarget {
		return vs[0].([]MysqlDbSystemChannelTarget)[vs[1].(int)]
	}).(MysqlDbSystemChannelTargetOutput)
}

type MysqlDbSystemChannelTargetFilter struct {
	// The type of the filter rule.
	Type *string `pulumi:"type"`
	// The body of the filter rule. This can represent a database, a table, or a database pair (represented as "db1->db2"). For more information, see [Replication Filtering Rules](https://dev.mysql.com/doc/refman/8.0/en/replication-rules.html).
	Value *string `pulumi:"value"`
}

// MysqlDbSystemChannelTargetFilterInput is an input type that accepts MysqlDbSystemChannelTargetFilterArgs and MysqlDbSystemChannelTargetFilterOutput values.
// You can construct a concrete instance of `MysqlDbSystemChannelTargetFilterInput` via:
//
//	MysqlDbSystemChannelTargetFilterArgs{...}
type MysqlDbSystemChannelTargetFilterInput interface {
	pulumi.Input

	ToMysqlDbSystemChannelTargetFilterOutput() MysqlDbSystemChannelTargetFilterOutput
	ToMysqlDbSystemChannelTargetFilterOutputWithContext(context.Context) MysqlDbSystemChannelTargetFilterOutput
}

type MysqlDbSystemChannelTargetFilterArgs struct {
	// The type of the filter rule.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The body of the filter rule. This can represent a database, a table, or a database pair (represented as "db1->db2"). For more information, see [Replication Filtering Rules](https://dev.mysql.com/doc/refman/8.0/en/replication-rules.html).
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (MysqlDbSystemChannelTargetFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemChannelTargetFilter)(nil)).Elem()
}

func (i MysqlDbSystemChannelTargetFilterArgs) ToMysqlDbSystemChannelTargetFilterOutput() MysqlDbSystemChannelTargetFilterOutput {
	return i.ToMysqlDbSystemChannelTargetFilterOutputWithContext(context.Background())
}

func (i MysqlDbSystemChannelTargetFilterArgs) ToMysqlDbSystemChannelTargetFilterOutputWithContext(ctx context.Context) MysqlDbSystemChannelTargetFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemChannelTargetFilterOutput)
}

// MysqlDbSystemChannelTargetFilterArrayInput is an input type that accepts MysqlDbSystemChannelTargetFilterArray and MysqlDbSystemChannelTargetFilterArrayOutput values.
// You can construct a concrete instance of `MysqlDbSystemChannelTargetFilterArrayInput` via:
//
//	MysqlDbSystemChannelTargetFilterArray{ MysqlDbSystemChannelTargetFilterArgs{...} }
type MysqlDbSystemChannelTargetFilterArrayInput interface {
	pulumi.Input

	ToMysqlDbSystemChannelTargetFilterArrayOutput() MysqlDbSystemChannelTargetFilterArrayOutput
	ToMysqlDbSystemChannelTargetFilterArrayOutputWithContext(context.Context) MysqlDbSystemChannelTargetFilterArrayOutput
}

type MysqlDbSystemChannelTargetFilterArray []MysqlDbSystemChannelTargetFilterInput

func (MysqlDbSystemChannelTargetFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemChannelTargetFilter)(nil)).Elem()
}

func (i MysqlDbSystemChannelTargetFilterArray) ToMysqlDbSystemChannelTargetFilterArrayOutput() MysqlDbSystemChannelTargetFilterArrayOutput {
	return i.ToMysqlDbSystemChannelTargetFilterArrayOutputWithContext(context.Background())
}

func (i MysqlDbSystemChannelTargetFilterArray) ToMysqlDbSystemChannelTargetFilterArrayOutputWithContext(ctx context.Context) MysqlDbSystemChannelTargetFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemChannelTargetFilterArrayOutput)
}

type MysqlDbSystemChannelTargetFilterOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemChannelTargetFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemChannelTargetFilter)(nil)).Elem()
}

func (o MysqlDbSystemChannelTargetFilterOutput) ToMysqlDbSystemChannelTargetFilterOutput() MysqlDbSystemChannelTargetFilterOutput {
	return o
}

func (o MysqlDbSystemChannelTargetFilterOutput) ToMysqlDbSystemChannelTargetFilterOutputWithContext(ctx context.Context) MysqlDbSystemChannelTargetFilterOutput {
	return o
}

// The type of the filter rule.
func (o MysqlDbSystemChannelTargetFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannelTargetFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The body of the filter rule. This can represent a database, a table, or a database pair (represented as "db1->db2"). For more information, see [Replication Filtering Rules](https://dev.mysql.com/doc/refman/8.0/en/replication-rules.html).
func (o MysqlDbSystemChannelTargetFilterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemChannelTargetFilter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type MysqlDbSystemChannelTargetFilterArrayOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemChannelTargetFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemChannelTargetFilter)(nil)).Elem()
}

func (o MysqlDbSystemChannelTargetFilterArrayOutput) ToMysqlDbSystemChannelTargetFilterArrayOutput() MysqlDbSystemChannelTargetFilterArrayOutput {
	return o
}

func (o MysqlDbSystemChannelTargetFilterArrayOutput) ToMysqlDbSystemChannelTargetFilterArrayOutputWithContext(ctx context.Context) MysqlDbSystemChannelTargetFilterArrayOutput {
	return o
}

func (o MysqlDbSystemChannelTargetFilterArrayOutput) Index(i pulumi.IntInput) MysqlDbSystemChannelTargetFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlDbSystemChannelTargetFilter {
		return vs[0].([]MysqlDbSystemChannelTargetFilter)[vs[1].(int)]
	}).(MysqlDbSystemChannelTargetFilterOutput)
}

type MysqlDbSystemCurrentPlacement struct {
	// The availability domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	//
	// In a failover scenario, the Read/Write endpoint is redirected to one of the other availability domains and the MySQL instance in that domain is promoted to the primary instance. This redirection does not affect the IP address of the DB System in any way.
	//
	// For a standalone DB System, this defines the availability domain in which the DB System is placed.
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	//
	// In a failover scenario, the Read/Write endpoint is redirected to one of the other fault domains and the MySQL instance in that domain is promoted to the primary instance. This redirection does not affect the IP address of the DB System in any way.
	//
	// For a standalone DB System, this defines the fault domain in which the DB System is placed.
	FaultDomain *string `pulumi:"faultDomain"`
}

// MysqlDbSystemCurrentPlacementInput is an input type that accepts MysqlDbSystemCurrentPlacementArgs and MysqlDbSystemCurrentPlacementOutput values.
// You can construct a concrete instance of `MysqlDbSystemCurrentPlacementInput` via:
//
//	MysqlDbSystemCurrentPlacementArgs{...}
type MysqlDbSystemCurrentPlacementInput interface {
	pulumi.Input

	ToMysqlDbSystemCurrentPlacementOutput() MysqlDbSystemCurrentPlacementOutput
	ToMysqlDbSystemCurrentPlacementOutputWithContext(context.Context) MysqlDbSystemCurrentPlacementOutput
}

type MysqlDbSystemCurrentPlacementArgs struct {
	// The availability domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	//
	// In a failover scenario, the Read/Write endpoint is redirected to one of the other availability domains and the MySQL instance in that domain is promoted to the primary instance. This redirection does not affect the IP address of the DB System in any way.
	//
	// For a standalone DB System, this defines the availability domain in which the DB System is placed.
	AvailabilityDomain pulumi.StringPtrInput `pulumi:"availabilityDomain"`
	// The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	//
	// In a failover scenario, the Read/Write endpoint is redirected to one of the other fault domains and the MySQL instance in that domain is promoted to the primary instance. This redirection does not affect the IP address of the DB System in any way.
	//
	// For a standalone DB System, this defines the fault domain in which the DB System is placed.
	FaultDomain pulumi.StringPtrInput `pulumi:"faultDomain"`
}

func (MysqlDbSystemCurrentPlacementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemCurrentPlacement)(nil)).Elem()
}

func (i MysqlDbSystemCurrentPlacementArgs) ToMysqlDbSystemCurrentPlacementOutput() MysqlDbSystemCurrentPlacementOutput {
	return i.ToMysqlDbSystemCurrentPlacementOutputWithContext(context.Background())
}

func (i MysqlDbSystemCurrentPlacementArgs) ToMysqlDbSystemCurrentPlacementOutputWithContext(ctx context.Context) MysqlDbSystemCurrentPlacementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemCurrentPlacementOutput)
}

// MysqlDbSystemCurrentPlacementArrayInput is an input type that accepts MysqlDbSystemCurrentPlacementArray and MysqlDbSystemCurrentPlacementArrayOutput values.
// You can construct a concrete instance of `MysqlDbSystemCurrentPlacementArrayInput` via:
//
//	MysqlDbSystemCurrentPlacementArray{ MysqlDbSystemCurrentPlacementArgs{...} }
type MysqlDbSystemCurrentPlacementArrayInput interface {
	pulumi.Input

	ToMysqlDbSystemCurrentPlacementArrayOutput() MysqlDbSystemCurrentPlacementArrayOutput
	ToMysqlDbSystemCurrentPlacementArrayOutputWithContext(context.Context) MysqlDbSystemCurrentPlacementArrayOutput
}

type MysqlDbSystemCurrentPlacementArray []MysqlDbSystemCurrentPlacementInput

func (MysqlDbSystemCurrentPlacementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemCurrentPlacement)(nil)).Elem()
}

func (i MysqlDbSystemCurrentPlacementArray) ToMysqlDbSystemCurrentPlacementArrayOutput() MysqlDbSystemCurrentPlacementArrayOutput {
	return i.ToMysqlDbSystemCurrentPlacementArrayOutputWithContext(context.Background())
}

func (i MysqlDbSystemCurrentPlacementArray) ToMysqlDbSystemCurrentPlacementArrayOutputWithContext(ctx context.Context) MysqlDbSystemCurrentPlacementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemCurrentPlacementArrayOutput)
}

type MysqlDbSystemCurrentPlacementOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemCurrentPlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemCurrentPlacement)(nil)).Elem()
}

func (o MysqlDbSystemCurrentPlacementOutput) ToMysqlDbSystemCurrentPlacementOutput() MysqlDbSystemCurrentPlacementOutput {
	return o
}

func (o MysqlDbSystemCurrentPlacementOutput) ToMysqlDbSystemCurrentPlacementOutputWithContext(ctx context.Context) MysqlDbSystemCurrentPlacementOutput {
	return o
}

// The availability domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
//
// In a failover scenario, the Read/Write endpoint is redirected to one of the other availability domains and the MySQL instance in that domain is promoted to the primary instance. This redirection does not affect the IP address of the DB System in any way.
//
// For a standalone DB System, this defines the availability domain in which the DB System is placed.
func (o MysqlDbSystemCurrentPlacementOutput) AvailabilityDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemCurrentPlacement) *string { return v.AvailabilityDomain }).(pulumi.StringPtrOutput)
}

// The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
//
// In a failover scenario, the Read/Write endpoint is redirected to one of the other fault domains and the MySQL instance in that domain is promoted to the primary instance. This redirection does not affect the IP address of the DB System in any way.
//
// For a standalone DB System, this defines the fault domain in which the DB System is placed.
func (o MysqlDbSystemCurrentPlacementOutput) FaultDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemCurrentPlacement) *string { return v.FaultDomain }).(pulumi.StringPtrOutput)
}

type MysqlDbSystemCurrentPlacementArrayOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemCurrentPlacementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemCurrentPlacement)(nil)).Elem()
}

func (o MysqlDbSystemCurrentPlacementArrayOutput) ToMysqlDbSystemCurrentPlacementArrayOutput() MysqlDbSystemCurrentPlacementArrayOutput {
	return o
}

func (o MysqlDbSystemCurrentPlacementArrayOutput) ToMysqlDbSystemCurrentPlacementArrayOutputWithContext(ctx context.Context) MysqlDbSystemCurrentPlacementArrayOutput {
	return o
}

func (o MysqlDbSystemCurrentPlacementArrayOutput) Index(i pulumi.IntInput) MysqlDbSystemCurrentPlacementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlDbSystemCurrentPlacement {
		return vs[0].([]MysqlDbSystemCurrentPlacement)[vs[1].(int)]
	}).(MysqlDbSystemCurrentPlacementOutput)
}

type MysqlDbSystemCustomerContact struct {
	// (Updatable) The email address used by Oracle to send notifications regarding the DB System.
	Email string `pulumi:"email"`
}

// MysqlDbSystemCustomerContactInput is an input type that accepts MysqlDbSystemCustomerContactArgs and MysqlDbSystemCustomerContactOutput values.
// You can construct a concrete instance of `MysqlDbSystemCustomerContactInput` via:
//
//	MysqlDbSystemCustomerContactArgs{...}
type MysqlDbSystemCustomerContactInput interface {
	pulumi.Input

	ToMysqlDbSystemCustomerContactOutput() MysqlDbSystemCustomerContactOutput
	ToMysqlDbSystemCustomerContactOutputWithContext(context.Context) MysqlDbSystemCustomerContactOutput
}

type MysqlDbSystemCustomerContactArgs struct {
	// (Updatable) The email address used by Oracle to send notifications regarding the DB System.
	Email pulumi.StringInput `pulumi:"email"`
}

func (MysqlDbSystemCustomerContactArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemCustomerContact)(nil)).Elem()
}

func (i MysqlDbSystemCustomerContactArgs) ToMysqlDbSystemCustomerContactOutput() MysqlDbSystemCustomerContactOutput {
	return i.ToMysqlDbSystemCustomerContactOutputWithContext(context.Background())
}

func (i MysqlDbSystemCustomerContactArgs) ToMysqlDbSystemCustomerContactOutputWithContext(ctx context.Context) MysqlDbSystemCustomerContactOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemCustomerContactOutput)
}

// MysqlDbSystemCustomerContactArrayInput is an input type that accepts MysqlDbSystemCustomerContactArray and MysqlDbSystemCustomerContactArrayOutput values.
// You can construct a concrete instance of `MysqlDbSystemCustomerContactArrayInput` via:
//
//	MysqlDbSystemCustomerContactArray{ MysqlDbSystemCustomerContactArgs{...} }
type MysqlDbSystemCustomerContactArrayInput interface {
	pulumi.Input

	ToMysqlDbSystemCustomerContactArrayOutput() MysqlDbSystemCustomerContactArrayOutput
	ToMysqlDbSystemCustomerContactArrayOutputWithContext(context.Context) MysqlDbSystemCustomerContactArrayOutput
}

type MysqlDbSystemCustomerContactArray []MysqlDbSystemCustomerContactInput

func (MysqlDbSystemCustomerContactArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemCustomerContact)(nil)).Elem()
}

func (i MysqlDbSystemCustomerContactArray) ToMysqlDbSystemCustomerContactArrayOutput() MysqlDbSystemCustomerContactArrayOutput {
	return i.ToMysqlDbSystemCustomerContactArrayOutputWithContext(context.Background())
}

func (i MysqlDbSystemCustomerContactArray) ToMysqlDbSystemCustomerContactArrayOutputWithContext(ctx context.Context) MysqlDbSystemCustomerContactArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemCustomerContactArrayOutput)
}

type MysqlDbSystemCustomerContactOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemCustomerContactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemCustomerContact)(nil)).Elem()
}

func (o MysqlDbSystemCustomerContactOutput) ToMysqlDbSystemCustomerContactOutput() MysqlDbSystemCustomerContactOutput {
	return o
}

func (o MysqlDbSystemCustomerContactOutput) ToMysqlDbSystemCustomerContactOutputWithContext(ctx context.Context) MysqlDbSystemCustomerContactOutput {
	return o
}

// (Updatable) The email address used by Oracle to send notifications regarding the DB System.
func (o MysqlDbSystemCustomerContactOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v MysqlDbSystemCustomerContact) string { return v.Email }).(pulumi.StringOutput)
}

type MysqlDbSystemCustomerContactArrayOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemCustomerContactArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemCustomerContact)(nil)).Elem()
}

func (o MysqlDbSystemCustomerContactArrayOutput) ToMysqlDbSystemCustomerContactArrayOutput() MysqlDbSystemCustomerContactArrayOutput {
	return o
}

func (o MysqlDbSystemCustomerContactArrayOutput) ToMysqlDbSystemCustomerContactArrayOutputWithContext(ctx context.Context) MysqlDbSystemCustomerContactArrayOutput {
	return o
}

func (o MysqlDbSystemCustomerContactArrayOutput) Index(i pulumi.IntInput) MysqlDbSystemCustomerContactOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlDbSystemCustomerContact {
		return vs[0].([]MysqlDbSystemCustomerContact)[vs[1].(int)]
	}).(MysqlDbSystemCustomerContactOutput)
}

type MysqlDbSystemDataStorage struct {
	// The actual allocated storage size for the DB System. This may be higher than dataStorageSizeInGBs if an automatic storage expansion has occurred.
	AllocatedStorageSizeInGbs *int `pulumi:"allocatedStorageSizeInGbs"`
	// (Updatable) Initial size of the data volume in GBs that will be created and attached. Keep in mind that this only specifies the size of the database data volume, the log volume for the database will be scaled appropriately with its shape. It is required if you are creating a new database. It cannot be set if you are creating a database from a backup.
	DataStorageSizeInGb *int `pulumi:"dataStorageSizeInGb"`
	// The absolute limit the DB System's storage size may ever expand to, either manually or automatically. This limit is based based on the initial dataStorageSizeInGBs when the DB System was first created. Both dataStorageSizeInGBs and maxDataStorageSizeInGBs can not exceed this value.
	DataStorageSizeLimitInGbs *int `pulumi:"dataStorageSizeLimitInGbs"`
	// (Updatable) Enable/disable automatic storage expansion. When set to true, the DB System will automatically add storage incrementally up to the value specified in maxStorageSizeInGBs.
	IsAutoExpandStorageEnabled *bool `pulumi:"isAutoExpandStorageEnabled"`
	// (Updatable) Maximum storage size this DB System can expand to. When isAutoExpandStorageEnabled is set to true, the DB System will add storage incrementally up to this value.
	//
	// DB Systems with an initial storage size of 400 GB or less can be expanded up to 32 TB. DB Systems with an initial storage size between 401-800 GB can be expanded up to 64 TB. DB Systems with an initial storage size between 801-1200 GB can be expanded up to 96 TB. DB Systems with an initial storage size of 1201 GB or more can be expanded up to 128 TB.
	//
	// It is not possible to decrease data storage size. You cannot set the maximum data storage size to less than either current DB System dataStorageSizeInGBs or allocatedStorageSizeInGBs.
	MaxStorageSizeInGbs *int `pulumi:"maxStorageSizeInGbs"`
}

// MysqlDbSystemDataStorageInput is an input type that accepts MysqlDbSystemDataStorageArgs and MysqlDbSystemDataStorageOutput values.
// You can construct a concrete instance of `MysqlDbSystemDataStorageInput` via:
//
//	MysqlDbSystemDataStorageArgs{...}
type MysqlDbSystemDataStorageInput interface {
	pulumi.Input

	ToMysqlDbSystemDataStorageOutput() MysqlDbSystemDataStorageOutput
	ToMysqlDbSystemDataStorageOutputWithContext(context.Context) MysqlDbSystemDataStorageOutput
}

type MysqlDbSystemDataStorageArgs struct {
	// The actual allocated storage size for the DB System. This may be higher than dataStorageSizeInGBs if an automatic storage expansion has occurred.
	AllocatedStorageSizeInGbs pulumi.IntPtrInput `pulumi:"allocatedStorageSizeInGbs"`
	// (Updatable) Initial size of the data volume in GBs that will be created and attached. Keep in mind that this only specifies the size of the database data volume, the log volume for the database will be scaled appropriately with its shape. It is required if you are creating a new database. It cannot be set if you are creating a database from a backup.
	DataStorageSizeInGb pulumi.IntPtrInput `pulumi:"dataStorageSizeInGb"`
	// The absolute limit the DB System's storage size may ever expand to, either manually or automatically. This limit is based based on the initial dataStorageSizeInGBs when the DB System was first created. Both dataStorageSizeInGBs and maxDataStorageSizeInGBs can not exceed this value.
	DataStorageSizeLimitInGbs pulumi.IntPtrInput `pulumi:"dataStorageSizeLimitInGbs"`
	// (Updatable) Enable/disable automatic storage expansion. When set to true, the DB System will automatically add storage incrementally up to the value specified in maxStorageSizeInGBs.
	IsAutoExpandStorageEnabled pulumi.BoolPtrInput `pulumi:"isAutoExpandStorageEnabled"`
	// (Updatable) Maximum storage size this DB System can expand to. When isAutoExpandStorageEnabled is set to true, the DB System will add storage incrementally up to this value.
	//
	// DB Systems with an initial storage size of 400 GB or less can be expanded up to 32 TB. DB Systems with an initial storage size between 401-800 GB can be expanded up to 64 TB. DB Systems with an initial storage size between 801-1200 GB can be expanded up to 96 TB. DB Systems with an initial storage size of 1201 GB or more can be expanded up to 128 TB.
	//
	// It is not possible to decrease data storage size. You cannot set the maximum data storage size to less than either current DB System dataStorageSizeInGBs or allocatedStorageSizeInGBs.
	MaxStorageSizeInGbs pulumi.IntPtrInput `pulumi:"maxStorageSizeInGbs"`
}

func (MysqlDbSystemDataStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemDataStorage)(nil)).Elem()
}

func (i MysqlDbSystemDataStorageArgs) ToMysqlDbSystemDataStorageOutput() MysqlDbSystemDataStorageOutput {
	return i.ToMysqlDbSystemDataStorageOutputWithContext(context.Background())
}

func (i MysqlDbSystemDataStorageArgs) ToMysqlDbSystemDataStorageOutputWithContext(ctx context.Context) MysqlDbSystemDataStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemDataStorageOutput)
}

func (i MysqlDbSystemDataStorageArgs) ToMysqlDbSystemDataStoragePtrOutput() MysqlDbSystemDataStoragePtrOutput {
	return i.ToMysqlDbSystemDataStoragePtrOutputWithContext(context.Background())
}

func (i MysqlDbSystemDataStorageArgs) ToMysqlDbSystemDataStoragePtrOutputWithContext(ctx context.Context) MysqlDbSystemDataStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemDataStorageOutput).ToMysqlDbSystemDataStoragePtrOutputWithContext(ctx)
}

// MysqlDbSystemDataStoragePtrInput is an input type that accepts MysqlDbSystemDataStorageArgs, MysqlDbSystemDataStoragePtr and MysqlDbSystemDataStoragePtrOutput values.
// You can construct a concrete instance of `MysqlDbSystemDataStoragePtrInput` via:
//
//	        MysqlDbSystemDataStorageArgs{...}
//
//	or:
//
//	        nil
type MysqlDbSystemDataStoragePtrInput interface {
	pulumi.Input

	ToMysqlDbSystemDataStoragePtrOutput() MysqlDbSystemDataStoragePtrOutput
	ToMysqlDbSystemDataStoragePtrOutputWithContext(context.Context) MysqlDbSystemDataStoragePtrOutput
}

type mysqlDbSystemDataStoragePtrType MysqlDbSystemDataStorageArgs

func MysqlDbSystemDataStoragePtr(v *MysqlDbSystemDataStorageArgs) MysqlDbSystemDataStoragePtrInput {
	return (*mysqlDbSystemDataStoragePtrType)(v)
}

func (*mysqlDbSystemDataStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlDbSystemDataStorage)(nil)).Elem()
}

func (i *mysqlDbSystemDataStoragePtrType) ToMysqlDbSystemDataStoragePtrOutput() MysqlDbSystemDataStoragePtrOutput {
	return i.ToMysqlDbSystemDataStoragePtrOutputWithContext(context.Background())
}

func (i *mysqlDbSystemDataStoragePtrType) ToMysqlDbSystemDataStoragePtrOutputWithContext(ctx context.Context) MysqlDbSystemDataStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemDataStoragePtrOutput)
}

type MysqlDbSystemDataStorageOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemDataStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemDataStorage)(nil)).Elem()
}

func (o MysqlDbSystemDataStorageOutput) ToMysqlDbSystemDataStorageOutput() MysqlDbSystemDataStorageOutput {
	return o
}

func (o MysqlDbSystemDataStorageOutput) ToMysqlDbSystemDataStorageOutputWithContext(ctx context.Context) MysqlDbSystemDataStorageOutput {
	return o
}

func (o MysqlDbSystemDataStorageOutput) ToMysqlDbSystemDataStoragePtrOutput() MysqlDbSystemDataStoragePtrOutput {
	return o.ToMysqlDbSystemDataStoragePtrOutputWithContext(context.Background())
}

func (o MysqlDbSystemDataStorageOutput) ToMysqlDbSystemDataStoragePtrOutputWithContext(ctx context.Context) MysqlDbSystemDataStoragePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MysqlDbSystemDataStorage) *MysqlDbSystemDataStorage {
		return &v
	}).(MysqlDbSystemDataStoragePtrOutput)
}

// The actual allocated storage size for the DB System. This may be higher than dataStorageSizeInGBs if an automatic storage expansion has occurred.
func (o MysqlDbSystemDataStorageOutput) AllocatedStorageSizeInGbs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemDataStorage) *int { return v.AllocatedStorageSizeInGbs }).(pulumi.IntPtrOutput)
}

// (Updatable) Initial size of the data volume in GBs that will be created and attached. Keep in mind that this only specifies the size of the database data volume, the log volume for the database will be scaled appropriately with its shape. It is required if you are creating a new database. It cannot be set if you are creating a database from a backup.
func (o MysqlDbSystemDataStorageOutput) DataStorageSizeInGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemDataStorage) *int { return v.DataStorageSizeInGb }).(pulumi.IntPtrOutput)
}

// The absolute limit the DB System's storage size may ever expand to, either manually or automatically. This limit is based based on the initial dataStorageSizeInGBs when the DB System was first created. Both dataStorageSizeInGBs and maxDataStorageSizeInGBs can not exceed this value.
func (o MysqlDbSystemDataStorageOutput) DataStorageSizeLimitInGbs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemDataStorage) *int { return v.DataStorageSizeLimitInGbs }).(pulumi.IntPtrOutput)
}

// (Updatable) Enable/disable automatic storage expansion. When set to true, the DB System will automatically add storage incrementally up to the value specified in maxStorageSizeInGBs.
func (o MysqlDbSystemDataStorageOutput) IsAutoExpandStorageEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemDataStorage) *bool { return v.IsAutoExpandStorageEnabled }).(pulumi.BoolPtrOutput)
}

// (Updatable) Maximum storage size this DB System can expand to. When isAutoExpandStorageEnabled is set to true, the DB System will add storage incrementally up to this value.
//
// DB Systems with an initial storage size of 400 GB or less can be expanded up to 32 TB. DB Systems with an initial storage size between 401-800 GB can be expanded up to 64 TB. DB Systems with an initial storage size between 801-1200 GB can be expanded up to 96 TB. DB Systems with an initial storage size of 1201 GB or more can be expanded up to 128 TB.
//
// It is not possible to decrease data storage size. You cannot set the maximum data storage size to less than either current DB System dataStorageSizeInGBs or allocatedStorageSizeInGBs.
func (o MysqlDbSystemDataStorageOutput) MaxStorageSizeInGbs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemDataStorage) *int { return v.MaxStorageSizeInGbs }).(pulumi.IntPtrOutput)
}

type MysqlDbSystemDataStoragePtrOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemDataStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlDbSystemDataStorage)(nil)).Elem()
}

func (o MysqlDbSystemDataStoragePtrOutput) ToMysqlDbSystemDataStoragePtrOutput() MysqlDbSystemDataStoragePtrOutput {
	return o
}

func (o MysqlDbSystemDataStoragePtrOutput) ToMysqlDbSystemDataStoragePtrOutputWithContext(ctx context.Context) MysqlDbSystemDataStoragePtrOutput {
	return o
}

func (o MysqlDbSystemDataStoragePtrOutput) Elem() MysqlDbSystemDataStorageOutput {
	return o.ApplyT(func(v *MysqlDbSystemDataStorage) MysqlDbSystemDataStorage {
		if v != nil {
			return *v
		}
		var ret MysqlDbSystemDataStorage
		return ret
	}).(MysqlDbSystemDataStorageOutput)
}

// The actual allocated storage size for the DB System. This may be higher than dataStorageSizeInGBs if an automatic storage expansion has occurred.
func (o MysqlDbSystemDataStoragePtrOutput) AllocatedStorageSizeInGbs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystemDataStorage) *int {
		if v == nil {
			return nil
		}
		return v.AllocatedStorageSizeInGbs
	}).(pulumi.IntPtrOutput)
}

// (Updatable) Initial size of the data volume in GBs that will be created and attached. Keep in mind that this only specifies the size of the database data volume, the log volume for the database will be scaled appropriately with its shape. It is required if you are creating a new database. It cannot be set if you are creating a database from a backup.
func (o MysqlDbSystemDataStoragePtrOutput) DataStorageSizeInGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystemDataStorage) *int {
		if v == nil {
			return nil
		}
		return v.DataStorageSizeInGb
	}).(pulumi.IntPtrOutput)
}

// The absolute limit the DB System's storage size may ever expand to, either manually or automatically. This limit is based based on the initial dataStorageSizeInGBs when the DB System was first created. Both dataStorageSizeInGBs and maxDataStorageSizeInGBs can not exceed this value.
func (o MysqlDbSystemDataStoragePtrOutput) DataStorageSizeLimitInGbs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystemDataStorage) *int {
		if v == nil {
			return nil
		}
		return v.DataStorageSizeLimitInGbs
	}).(pulumi.IntPtrOutput)
}

// (Updatable) Enable/disable automatic storage expansion. When set to true, the DB System will automatically add storage incrementally up to the value specified in maxStorageSizeInGBs.
func (o MysqlDbSystemDataStoragePtrOutput) IsAutoExpandStorageEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystemDataStorage) *bool {
		if v == nil {
			return nil
		}
		return v.IsAutoExpandStorageEnabled
	}).(pulumi.BoolPtrOutput)
}

// (Updatable) Maximum storage size this DB System can expand to. When isAutoExpandStorageEnabled is set to true, the DB System will add storage incrementally up to this value.
//
// DB Systems with an initial storage size of 400 GB or less can be expanded up to 32 TB. DB Systems with an initial storage size between 401-800 GB can be expanded up to 64 TB. DB Systems with an initial storage size between 801-1200 GB can be expanded up to 96 TB. DB Systems with an initial storage size of 1201 GB or more can be expanded up to 128 TB.
//
// It is not possible to decrease data storage size. You cannot set the maximum data storage size to less than either current DB System dataStorageSizeInGBs or allocatedStorageSizeInGBs.
func (o MysqlDbSystemDataStoragePtrOutput) MaxStorageSizeInGbs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystemDataStorage) *int {
		if v == nil {
			return nil
		}
		return v.MaxStorageSizeInGbs
	}).(pulumi.IntPtrOutput)
}

type MysqlDbSystemDeletionPolicy struct {
	// (Updatable) Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
	AutomaticBackupRetention *string `pulumi:"automaticBackupRetention"`
	// (Updatable) Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
	FinalBackup *string `pulumi:"finalBackup"`
	// (Updatable) Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
	IsDeleteProtected *bool `pulumi:"isDeleteProtected"`
}

// MysqlDbSystemDeletionPolicyInput is an input type that accepts MysqlDbSystemDeletionPolicyArgs and MysqlDbSystemDeletionPolicyOutput values.
// You can construct a concrete instance of `MysqlDbSystemDeletionPolicyInput` via:
//
//	MysqlDbSystemDeletionPolicyArgs{...}
type MysqlDbSystemDeletionPolicyInput interface {
	pulumi.Input

	ToMysqlDbSystemDeletionPolicyOutput() MysqlDbSystemDeletionPolicyOutput
	ToMysqlDbSystemDeletionPolicyOutputWithContext(context.Context) MysqlDbSystemDeletionPolicyOutput
}

type MysqlDbSystemDeletionPolicyArgs struct {
	// (Updatable) Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
	AutomaticBackupRetention pulumi.StringPtrInput `pulumi:"automaticBackupRetention"`
	// (Updatable) Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
	FinalBackup pulumi.StringPtrInput `pulumi:"finalBackup"`
	// (Updatable) Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
	IsDeleteProtected pulumi.BoolPtrInput `pulumi:"isDeleteProtected"`
}

func (MysqlDbSystemDeletionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemDeletionPolicy)(nil)).Elem()
}

func (i MysqlDbSystemDeletionPolicyArgs) ToMysqlDbSystemDeletionPolicyOutput() MysqlDbSystemDeletionPolicyOutput {
	return i.ToMysqlDbSystemDeletionPolicyOutputWithContext(context.Background())
}

func (i MysqlDbSystemDeletionPolicyArgs) ToMysqlDbSystemDeletionPolicyOutputWithContext(ctx context.Context) MysqlDbSystemDeletionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemDeletionPolicyOutput)
}

// MysqlDbSystemDeletionPolicyArrayInput is an input type that accepts MysqlDbSystemDeletionPolicyArray and MysqlDbSystemDeletionPolicyArrayOutput values.
// You can construct a concrete instance of `MysqlDbSystemDeletionPolicyArrayInput` via:
//
//	MysqlDbSystemDeletionPolicyArray{ MysqlDbSystemDeletionPolicyArgs{...} }
type MysqlDbSystemDeletionPolicyArrayInput interface {
	pulumi.Input

	ToMysqlDbSystemDeletionPolicyArrayOutput() MysqlDbSystemDeletionPolicyArrayOutput
	ToMysqlDbSystemDeletionPolicyArrayOutputWithContext(context.Context) MysqlDbSystemDeletionPolicyArrayOutput
}

type MysqlDbSystemDeletionPolicyArray []MysqlDbSystemDeletionPolicyInput

func (MysqlDbSystemDeletionPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemDeletionPolicy)(nil)).Elem()
}

func (i MysqlDbSystemDeletionPolicyArray) ToMysqlDbSystemDeletionPolicyArrayOutput() MysqlDbSystemDeletionPolicyArrayOutput {
	return i.ToMysqlDbSystemDeletionPolicyArrayOutputWithContext(context.Background())
}

func (i MysqlDbSystemDeletionPolicyArray) ToMysqlDbSystemDeletionPolicyArrayOutputWithContext(ctx context.Context) MysqlDbSystemDeletionPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemDeletionPolicyArrayOutput)
}

type MysqlDbSystemDeletionPolicyOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemDeletionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemDeletionPolicy)(nil)).Elem()
}

func (o MysqlDbSystemDeletionPolicyOutput) ToMysqlDbSystemDeletionPolicyOutput() MysqlDbSystemDeletionPolicyOutput {
	return o
}

func (o MysqlDbSystemDeletionPolicyOutput) ToMysqlDbSystemDeletionPolicyOutputWithContext(ctx context.Context) MysqlDbSystemDeletionPolicyOutput {
	return o
}

// (Updatable) Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
func (o MysqlDbSystemDeletionPolicyOutput) AutomaticBackupRetention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemDeletionPolicy) *string { return v.AutomaticBackupRetention }).(pulumi.StringPtrOutput)
}

// (Updatable) Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
func (o MysqlDbSystemDeletionPolicyOutput) FinalBackup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemDeletionPolicy) *string { return v.FinalBackup }).(pulumi.StringPtrOutput)
}

// (Updatable) Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
func (o MysqlDbSystemDeletionPolicyOutput) IsDeleteProtected() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemDeletionPolicy) *bool { return v.IsDeleteProtected }).(pulumi.BoolPtrOutput)
}

type MysqlDbSystemDeletionPolicyArrayOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemDeletionPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemDeletionPolicy)(nil)).Elem()
}

func (o MysqlDbSystemDeletionPolicyArrayOutput) ToMysqlDbSystemDeletionPolicyArrayOutput() MysqlDbSystemDeletionPolicyArrayOutput {
	return o
}

func (o MysqlDbSystemDeletionPolicyArrayOutput) ToMysqlDbSystemDeletionPolicyArrayOutputWithContext(ctx context.Context) MysqlDbSystemDeletionPolicyArrayOutput {
	return o
}

func (o MysqlDbSystemDeletionPolicyArrayOutput) Index(i pulumi.IntInput) MysqlDbSystemDeletionPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlDbSystemDeletionPolicy {
		return vs[0].([]MysqlDbSystemDeletionPolicy)[vs[1].(int)]
	}).(MysqlDbSystemDeletionPolicyOutput)
}

type MysqlDbSystemEncryptData struct {
	// (Updatable) Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
	KeyGenerationType string `pulumi:"keyGenerationType"`
	// (Updatable) The OCID of the key to use.
	KeyId *string `pulumi:"keyId"`
}

// MysqlDbSystemEncryptDataInput is an input type that accepts MysqlDbSystemEncryptDataArgs and MysqlDbSystemEncryptDataOutput values.
// You can construct a concrete instance of `MysqlDbSystemEncryptDataInput` via:
//
//	MysqlDbSystemEncryptDataArgs{...}
type MysqlDbSystemEncryptDataInput interface {
	pulumi.Input

	ToMysqlDbSystemEncryptDataOutput() MysqlDbSystemEncryptDataOutput
	ToMysqlDbSystemEncryptDataOutputWithContext(context.Context) MysqlDbSystemEncryptDataOutput
}

type MysqlDbSystemEncryptDataArgs struct {
	// (Updatable) Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
	KeyGenerationType pulumi.StringInput `pulumi:"keyGenerationType"`
	// (Updatable) The OCID of the key to use.
	KeyId pulumi.StringPtrInput `pulumi:"keyId"`
}

func (MysqlDbSystemEncryptDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemEncryptData)(nil)).Elem()
}

func (i MysqlDbSystemEncryptDataArgs) ToMysqlDbSystemEncryptDataOutput() MysqlDbSystemEncryptDataOutput {
	return i.ToMysqlDbSystemEncryptDataOutputWithContext(context.Background())
}

func (i MysqlDbSystemEncryptDataArgs) ToMysqlDbSystemEncryptDataOutputWithContext(ctx context.Context) MysqlDbSystemEncryptDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemEncryptDataOutput)
}

func (i MysqlDbSystemEncryptDataArgs) ToMysqlDbSystemEncryptDataPtrOutput() MysqlDbSystemEncryptDataPtrOutput {
	return i.ToMysqlDbSystemEncryptDataPtrOutputWithContext(context.Background())
}

func (i MysqlDbSystemEncryptDataArgs) ToMysqlDbSystemEncryptDataPtrOutputWithContext(ctx context.Context) MysqlDbSystemEncryptDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemEncryptDataOutput).ToMysqlDbSystemEncryptDataPtrOutputWithContext(ctx)
}

// MysqlDbSystemEncryptDataPtrInput is an input type that accepts MysqlDbSystemEncryptDataArgs, MysqlDbSystemEncryptDataPtr and MysqlDbSystemEncryptDataPtrOutput values.
// You can construct a concrete instance of `MysqlDbSystemEncryptDataPtrInput` via:
//
//	        MysqlDbSystemEncryptDataArgs{...}
//
//	or:
//
//	        nil
type MysqlDbSystemEncryptDataPtrInput interface {
	pulumi.Input

	ToMysqlDbSystemEncryptDataPtrOutput() MysqlDbSystemEncryptDataPtrOutput
	ToMysqlDbSystemEncryptDataPtrOutputWithContext(context.Context) MysqlDbSystemEncryptDataPtrOutput
}

type mysqlDbSystemEncryptDataPtrType MysqlDbSystemEncryptDataArgs

func MysqlDbSystemEncryptDataPtr(v *MysqlDbSystemEncryptDataArgs) MysqlDbSystemEncryptDataPtrInput {
	return (*mysqlDbSystemEncryptDataPtrType)(v)
}

func (*mysqlDbSystemEncryptDataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlDbSystemEncryptData)(nil)).Elem()
}

func (i *mysqlDbSystemEncryptDataPtrType) ToMysqlDbSystemEncryptDataPtrOutput() MysqlDbSystemEncryptDataPtrOutput {
	return i.ToMysqlDbSystemEncryptDataPtrOutputWithContext(context.Background())
}

func (i *mysqlDbSystemEncryptDataPtrType) ToMysqlDbSystemEncryptDataPtrOutputWithContext(ctx context.Context) MysqlDbSystemEncryptDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemEncryptDataPtrOutput)
}

type MysqlDbSystemEncryptDataOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemEncryptDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemEncryptData)(nil)).Elem()
}

func (o MysqlDbSystemEncryptDataOutput) ToMysqlDbSystemEncryptDataOutput() MysqlDbSystemEncryptDataOutput {
	return o
}

func (o MysqlDbSystemEncryptDataOutput) ToMysqlDbSystemEncryptDataOutputWithContext(ctx context.Context) MysqlDbSystemEncryptDataOutput {
	return o
}

func (o MysqlDbSystemEncryptDataOutput) ToMysqlDbSystemEncryptDataPtrOutput() MysqlDbSystemEncryptDataPtrOutput {
	return o.ToMysqlDbSystemEncryptDataPtrOutputWithContext(context.Background())
}

func (o MysqlDbSystemEncryptDataOutput) ToMysqlDbSystemEncryptDataPtrOutputWithContext(ctx context.Context) MysqlDbSystemEncryptDataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MysqlDbSystemEncryptData) *MysqlDbSystemEncryptData {
		return &v
	}).(MysqlDbSystemEncryptDataPtrOutput)
}

// (Updatable) Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
func (o MysqlDbSystemEncryptDataOutput) KeyGenerationType() pulumi.StringOutput {
	return o.ApplyT(func(v MysqlDbSystemEncryptData) string { return v.KeyGenerationType }).(pulumi.StringOutput)
}

// (Updatable) The OCID of the key to use.
func (o MysqlDbSystemEncryptDataOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemEncryptData) *string { return v.KeyId }).(pulumi.StringPtrOutput)
}

type MysqlDbSystemEncryptDataPtrOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemEncryptDataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlDbSystemEncryptData)(nil)).Elem()
}

func (o MysqlDbSystemEncryptDataPtrOutput) ToMysqlDbSystemEncryptDataPtrOutput() MysqlDbSystemEncryptDataPtrOutput {
	return o
}

func (o MysqlDbSystemEncryptDataPtrOutput) ToMysqlDbSystemEncryptDataPtrOutputWithContext(ctx context.Context) MysqlDbSystemEncryptDataPtrOutput {
	return o
}

func (o MysqlDbSystemEncryptDataPtrOutput) Elem() MysqlDbSystemEncryptDataOutput {
	return o.ApplyT(func(v *MysqlDbSystemEncryptData) MysqlDbSystemEncryptData {
		if v != nil {
			return *v
		}
		var ret MysqlDbSystemEncryptData
		return ret
	}).(MysqlDbSystemEncryptDataOutput)
}

// (Updatable) Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
func (o MysqlDbSystemEncryptDataPtrOutput) KeyGenerationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystemEncryptData) *string {
		if v == nil {
			return nil
		}
		return &v.KeyGenerationType
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The OCID of the key to use.
func (o MysqlDbSystemEncryptDataPtrOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystemEncryptData) *string {
		if v == nil {
			return nil
		}
		return v.KeyId
	}).(pulumi.StringPtrOutput)
}

type MysqlDbSystemEndpoint struct {
	// The network address of the DB System.
	Hostname *string `pulumi:"hostname"`
	// The IP address the DB System is configured to listen on. A private IP address of your choice to assign to the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
	IpAddress *string `pulumi:"ipAddress"`
	// The access modes from the client that this endpoint supports.
	Modes []string `pulumi:"modes"`
	// The port for primary endpoint of the DB System to listen on.
	Port *int `pulumi:"port"`
	// The TCP network port on which X Plugin listens for connections. This is the X Plugin equivalent of port.
	PortX *int `pulumi:"portX"`
	// The OCID of the resource that this endpoint is attached to.
	ResourceId *string `pulumi:"resourceId"`
	// The type of endpoint that clients and connectors can connect to.
	ResourceType *string `pulumi:"resourceType"`
	// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
	Status *string `pulumi:"status"`
	// Additional information about the current endpoint status.
	StatusDetails *string `pulumi:"statusDetails"`
}

// MysqlDbSystemEndpointInput is an input type that accepts MysqlDbSystemEndpointArgs and MysqlDbSystemEndpointOutput values.
// You can construct a concrete instance of `MysqlDbSystemEndpointInput` via:
//
//	MysqlDbSystemEndpointArgs{...}
type MysqlDbSystemEndpointInput interface {
	pulumi.Input

	ToMysqlDbSystemEndpointOutput() MysqlDbSystemEndpointOutput
	ToMysqlDbSystemEndpointOutputWithContext(context.Context) MysqlDbSystemEndpointOutput
}

type MysqlDbSystemEndpointArgs struct {
	// The network address of the DB System.
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	// The IP address the DB System is configured to listen on. A private IP address of your choice to assign to the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The access modes from the client that this endpoint supports.
	Modes pulumi.StringArrayInput `pulumi:"modes"`
	// The port for primary endpoint of the DB System to listen on.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The TCP network port on which X Plugin listens for connections. This is the X Plugin equivalent of port.
	PortX pulumi.IntPtrInput `pulumi:"portX"`
	// The OCID of the resource that this endpoint is attached to.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
	// The type of endpoint that clients and connectors can connect to.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Additional information about the current endpoint status.
	StatusDetails pulumi.StringPtrInput `pulumi:"statusDetails"`
}

func (MysqlDbSystemEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemEndpoint)(nil)).Elem()
}

func (i MysqlDbSystemEndpointArgs) ToMysqlDbSystemEndpointOutput() MysqlDbSystemEndpointOutput {
	return i.ToMysqlDbSystemEndpointOutputWithContext(context.Background())
}

func (i MysqlDbSystemEndpointArgs) ToMysqlDbSystemEndpointOutputWithContext(ctx context.Context) MysqlDbSystemEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemEndpointOutput)
}

// MysqlDbSystemEndpointArrayInput is an input type that accepts MysqlDbSystemEndpointArray and MysqlDbSystemEndpointArrayOutput values.
// You can construct a concrete instance of `MysqlDbSystemEndpointArrayInput` via:
//
//	MysqlDbSystemEndpointArray{ MysqlDbSystemEndpointArgs{...} }
type MysqlDbSystemEndpointArrayInput interface {
	pulumi.Input

	ToMysqlDbSystemEndpointArrayOutput() MysqlDbSystemEndpointArrayOutput
	ToMysqlDbSystemEndpointArrayOutputWithContext(context.Context) MysqlDbSystemEndpointArrayOutput
}

type MysqlDbSystemEndpointArray []MysqlDbSystemEndpointInput

func (MysqlDbSystemEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemEndpoint)(nil)).Elem()
}

func (i MysqlDbSystemEndpointArray) ToMysqlDbSystemEndpointArrayOutput() MysqlDbSystemEndpointArrayOutput {
	return i.ToMysqlDbSystemEndpointArrayOutputWithContext(context.Background())
}

func (i MysqlDbSystemEndpointArray) ToMysqlDbSystemEndpointArrayOutputWithContext(ctx context.Context) MysqlDbSystemEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemEndpointArrayOutput)
}

type MysqlDbSystemEndpointOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemEndpoint)(nil)).Elem()
}

func (o MysqlDbSystemEndpointOutput) ToMysqlDbSystemEndpointOutput() MysqlDbSystemEndpointOutput {
	return o
}

func (o MysqlDbSystemEndpointOutput) ToMysqlDbSystemEndpointOutputWithContext(ctx context.Context) MysqlDbSystemEndpointOutput {
	return o
}

// The network address of the DB System.
func (o MysqlDbSystemEndpointOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemEndpoint) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// The IP address the DB System is configured to listen on. A private IP address of your choice to assign to the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
func (o MysqlDbSystemEndpointOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemEndpoint) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The access modes from the client that this endpoint supports.
func (o MysqlDbSystemEndpointOutput) Modes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MysqlDbSystemEndpoint) []string { return v.Modes }).(pulumi.StringArrayOutput)
}

// The port for primary endpoint of the DB System to listen on.
func (o MysqlDbSystemEndpointOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemEndpoint) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The TCP network port on which X Plugin listens for connections. This is the X Plugin equivalent of port.
func (o MysqlDbSystemEndpointOutput) PortX() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemEndpoint) *int { return v.PortX }).(pulumi.IntPtrOutput)
}

// The OCID of the resource that this endpoint is attached to.
func (o MysqlDbSystemEndpointOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemEndpoint) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// The type of endpoint that clients and connectors can connect to.
func (o MysqlDbSystemEndpointOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemEndpoint) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
func (o MysqlDbSystemEndpointOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemEndpoint) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Additional information about the current endpoint status.
func (o MysqlDbSystemEndpointOutput) StatusDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemEndpoint) *string { return v.StatusDetails }).(pulumi.StringPtrOutput)
}

type MysqlDbSystemEndpointArrayOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemEndpoint)(nil)).Elem()
}

func (o MysqlDbSystemEndpointArrayOutput) ToMysqlDbSystemEndpointArrayOutput() MysqlDbSystemEndpointArrayOutput {
	return o
}

func (o MysqlDbSystemEndpointArrayOutput) ToMysqlDbSystemEndpointArrayOutputWithContext(ctx context.Context) MysqlDbSystemEndpointArrayOutput {
	return o
}

func (o MysqlDbSystemEndpointArrayOutput) Index(i pulumi.IntInput) MysqlDbSystemEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlDbSystemEndpoint {
		return vs[0].([]MysqlDbSystemEndpoint)[vs[1].(int)]
	}).(MysqlDbSystemEndpointOutput)
}

type MysqlDbSystemHeatWaveCluster struct {
	// The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
	ClusterSize *int `pulumi:"clusterSize"`
	// Lakehouse enabled status for the HeatWave cluster.
	IsLakehouseEnabled *bool `pulumi:"isLakehouseEnabled"`
	// (Updatable) The name of the shape. The shape determines the resources allocated
	// * CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
	ShapeName *string `pulumi:"shapeName"`
	// (Updatable) The target state for the DB System. Could be set to `ACTIVE` or `INACTIVE`.
	State *string `pulumi:"state"`
	// The date and time the DB System was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

// MysqlDbSystemHeatWaveClusterInput is an input type that accepts MysqlDbSystemHeatWaveClusterArgs and MysqlDbSystemHeatWaveClusterOutput values.
// You can construct a concrete instance of `MysqlDbSystemHeatWaveClusterInput` via:
//
//	MysqlDbSystemHeatWaveClusterArgs{...}
type MysqlDbSystemHeatWaveClusterInput interface {
	pulumi.Input

	ToMysqlDbSystemHeatWaveClusterOutput() MysqlDbSystemHeatWaveClusterOutput
	ToMysqlDbSystemHeatWaveClusterOutputWithContext(context.Context) MysqlDbSystemHeatWaveClusterOutput
}

type MysqlDbSystemHeatWaveClusterArgs struct {
	// The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
	ClusterSize pulumi.IntPtrInput `pulumi:"clusterSize"`
	// Lakehouse enabled status for the HeatWave cluster.
	IsLakehouseEnabled pulumi.BoolPtrInput `pulumi:"isLakehouseEnabled"`
	// (Updatable) The name of the shape. The shape determines the resources allocated
	// * CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
	ShapeName pulumi.StringPtrInput `pulumi:"shapeName"`
	// (Updatable) The target state for the DB System. Could be set to `ACTIVE` or `INACTIVE`.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The date and time the DB System was created.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated pulumi.StringPtrInput `pulumi:"timeUpdated"`
}

func (MysqlDbSystemHeatWaveClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemHeatWaveCluster)(nil)).Elem()
}

func (i MysqlDbSystemHeatWaveClusterArgs) ToMysqlDbSystemHeatWaveClusterOutput() MysqlDbSystemHeatWaveClusterOutput {
	return i.ToMysqlDbSystemHeatWaveClusterOutputWithContext(context.Background())
}

func (i MysqlDbSystemHeatWaveClusterArgs) ToMysqlDbSystemHeatWaveClusterOutputWithContext(ctx context.Context) MysqlDbSystemHeatWaveClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemHeatWaveClusterOutput)
}

// MysqlDbSystemHeatWaveClusterArrayInput is an input type that accepts MysqlDbSystemHeatWaveClusterArray and MysqlDbSystemHeatWaveClusterArrayOutput values.
// You can construct a concrete instance of `MysqlDbSystemHeatWaveClusterArrayInput` via:
//
//	MysqlDbSystemHeatWaveClusterArray{ MysqlDbSystemHeatWaveClusterArgs{...} }
type MysqlDbSystemHeatWaveClusterArrayInput interface {
	pulumi.Input

	ToMysqlDbSystemHeatWaveClusterArrayOutput() MysqlDbSystemHeatWaveClusterArrayOutput
	ToMysqlDbSystemHeatWaveClusterArrayOutputWithContext(context.Context) MysqlDbSystemHeatWaveClusterArrayOutput
}

type MysqlDbSystemHeatWaveClusterArray []MysqlDbSystemHeatWaveClusterInput

func (MysqlDbSystemHeatWaveClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemHeatWaveCluster)(nil)).Elem()
}

func (i MysqlDbSystemHeatWaveClusterArray) ToMysqlDbSystemHeatWaveClusterArrayOutput() MysqlDbSystemHeatWaveClusterArrayOutput {
	return i.ToMysqlDbSystemHeatWaveClusterArrayOutputWithContext(context.Background())
}

func (i MysqlDbSystemHeatWaveClusterArray) ToMysqlDbSystemHeatWaveClusterArrayOutputWithContext(ctx context.Context) MysqlDbSystemHeatWaveClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemHeatWaveClusterArrayOutput)
}

type MysqlDbSystemHeatWaveClusterOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemHeatWaveClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemHeatWaveCluster)(nil)).Elem()
}

func (o MysqlDbSystemHeatWaveClusterOutput) ToMysqlDbSystemHeatWaveClusterOutput() MysqlDbSystemHeatWaveClusterOutput {
	return o
}

func (o MysqlDbSystemHeatWaveClusterOutput) ToMysqlDbSystemHeatWaveClusterOutputWithContext(ctx context.Context) MysqlDbSystemHeatWaveClusterOutput {
	return o
}

// The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
func (o MysqlDbSystemHeatWaveClusterOutput) ClusterSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemHeatWaveCluster) *int { return v.ClusterSize }).(pulumi.IntPtrOutput)
}

// Lakehouse enabled status for the HeatWave cluster.
func (o MysqlDbSystemHeatWaveClusterOutput) IsLakehouseEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemHeatWaveCluster) *bool { return v.IsLakehouseEnabled }).(pulumi.BoolPtrOutput)
}

// (Updatable) The name of the shape. The shape determines the resources allocated
// * CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
func (o MysqlDbSystemHeatWaveClusterOutput) ShapeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemHeatWaveCluster) *string { return v.ShapeName }).(pulumi.StringPtrOutput)
}

// (Updatable) The target state for the DB System. Could be set to `ACTIVE` or `INACTIVE`.
func (o MysqlDbSystemHeatWaveClusterOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemHeatWaveCluster) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The date and time the DB System was created.
func (o MysqlDbSystemHeatWaveClusterOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemHeatWaveCluster) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The time the DB System was last updated.
func (o MysqlDbSystemHeatWaveClusterOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemHeatWaveCluster) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

type MysqlDbSystemHeatWaveClusterArrayOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemHeatWaveClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemHeatWaveCluster)(nil)).Elem()
}

func (o MysqlDbSystemHeatWaveClusterArrayOutput) ToMysqlDbSystemHeatWaveClusterArrayOutput() MysqlDbSystemHeatWaveClusterArrayOutput {
	return o
}

func (o MysqlDbSystemHeatWaveClusterArrayOutput) ToMysqlDbSystemHeatWaveClusterArrayOutputWithContext(ctx context.Context) MysqlDbSystemHeatWaveClusterArrayOutput {
	return o
}

func (o MysqlDbSystemHeatWaveClusterArrayOutput) Index(i pulumi.IntInput) MysqlDbSystemHeatWaveClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlDbSystemHeatWaveCluster {
		return vs[0].([]MysqlDbSystemHeatWaveCluster)[vs[1].(int)]
	}).(MysqlDbSystemHeatWaveClusterOutput)
}

type MysqlDbSystemMaintenance struct {
	// (Updatable) The start of the 2 hour maintenance window.
	//
	// This string is of the format: "{day-of-week} {time-of-day}".
	//
	// "{day-of-week}" is a case-insensitive string like "mon", "tue", &c.
	//
	// "{time-of-day}" is the "Time" portion of an RFC3339-formatted timestamp. Any second or sub-second time data will be truncated to zero.
	//
	// If you set the read replica maintenance window to "" or if not specified, the read replica is set same as the DB system maintenance window.
	WindowStartTime string `pulumi:"windowStartTime"`
}

// MysqlDbSystemMaintenanceInput is an input type that accepts MysqlDbSystemMaintenanceArgs and MysqlDbSystemMaintenanceOutput values.
// You can construct a concrete instance of `MysqlDbSystemMaintenanceInput` via:
//
//	MysqlDbSystemMaintenanceArgs{...}
type MysqlDbSystemMaintenanceInput interface {
	pulumi.Input

	ToMysqlDbSystemMaintenanceOutput() MysqlDbSystemMaintenanceOutput
	ToMysqlDbSystemMaintenanceOutputWithContext(context.Context) MysqlDbSystemMaintenanceOutput
}

type MysqlDbSystemMaintenanceArgs struct {
	// (Updatable) The start of the 2 hour maintenance window.
	//
	// This string is of the format: "{day-of-week} {time-of-day}".
	//
	// "{day-of-week}" is a case-insensitive string like "mon", "tue", &c.
	//
	// "{time-of-day}" is the "Time" portion of an RFC3339-formatted timestamp. Any second or sub-second time data will be truncated to zero.
	//
	// If you set the read replica maintenance window to "" or if not specified, the read replica is set same as the DB system maintenance window.
	WindowStartTime pulumi.StringInput `pulumi:"windowStartTime"`
}

func (MysqlDbSystemMaintenanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemMaintenance)(nil)).Elem()
}

func (i MysqlDbSystemMaintenanceArgs) ToMysqlDbSystemMaintenanceOutput() MysqlDbSystemMaintenanceOutput {
	return i.ToMysqlDbSystemMaintenanceOutputWithContext(context.Background())
}

func (i MysqlDbSystemMaintenanceArgs) ToMysqlDbSystemMaintenanceOutputWithContext(ctx context.Context) MysqlDbSystemMaintenanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemMaintenanceOutput)
}

func (i MysqlDbSystemMaintenanceArgs) ToMysqlDbSystemMaintenancePtrOutput() MysqlDbSystemMaintenancePtrOutput {
	return i.ToMysqlDbSystemMaintenancePtrOutputWithContext(context.Background())
}

func (i MysqlDbSystemMaintenanceArgs) ToMysqlDbSystemMaintenancePtrOutputWithContext(ctx context.Context) MysqlDbSystemMaintenancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemMaintenanceOutput).ToMysqlDbSystemMaintenancePtrOutputWithContext(ctx)
}

// MysqlDbSystemMaintenancePtrInput is an input type that accepts MysqlDbSystemMaintenanceArgs, MysqlDbSystemMaintenancePtr and MysqlDbSystemMaintenancePtrOutput values.
// You can construct a concrete instance of `MysqlDbSystemMaintenancePtrInput` via:
//
//	        MysqlDbSystemMaintenanceArgs{...}
//
//	or:
//
//	        nil
type MysqlDbSystemMaintenancePtrInput interface {
	pulumi.Input

	ToMysqlDbSystemMaintenancePtrOutput() MysqlDbSystemMaintenancePtrOutput
	ToMysqlDbSystemMaintenancePtrOutputWithContext(context.Context) MysqlDbSystemMaintenancePtrOutput
}

type mysqlDbSystemMaintenancePtrType MysqlDbSystemMaintenanceArgs

func MysqlDbSystemMaintenancePtr(v *MysqlDbSystemMaintenanceArgs) MysqlDbSystemMaintenancePtrInput {
	return (*mysqlDbSystemMaintenancePtrType)(v)
}

func (*mysqlDbSystemMaintenancePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlDbSystemMaintenance)(nil)).Elem()
}

func (i *mysqlDbSystemMaintenancePtrType) ToMysqlDbSystemMaintenancePtrOutput() MysqlDbSystemMaintenancePtrOutput {
	return i.ToMysqlDbSystemMaintenancePtrOutputWithContext(context.Background())
}

func (i *mysqlDbSystemMaintenancePtrType) ToMysqlDbSystemMaintenancePtrOutputWithContext(ctx context.Context) MysqlDbSystemMaintenancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemMaintenancePtrOutput)
}

type MysqlDbSystemMaintenanceOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemMaintenanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemMaintenance)(nil)).Elem()
}

func (o MysqlDbSystemMaintenanceOutput) ToMysqlDbSystemMaintenanceOutput() MysqlDbSystemMaintenanceOutput {
	return o
}

func (o MysqlDbSystemMaintenanceOutput) ToMysqlDbSystemMaintenanceOutputWithContext(ctx context.Context) MysqlDbSystemMaintenanceOutput {
	return o
}

func (o MysqlDbSystemMaintenanceOutput) ToMysqlDbSystemMaintenancePtrOutput() MysqlDbSystemMaintenancePtrOutput {
	return o.ToMysqlDbSystemMaintenancePtrOutputWithContext(context.Background())
}

func (o MysqlDbSystemMaintenanceOutput) ToMysqlDbSystemMaintenancePtrOutputWithContext(ctx context.Context) MysqlDbSystemMaintenancePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MysqlDbSystemMaintenance) *MysqlDbSystemMaintenance {
		return &v
	}).(MysqlDbSystemMaintenancePtrOutput)
}

// (Updatable) The start of the 2 hour maintenance window.
//
// This string is of the format: "{day-of-week} {time-of-day}".
//
// "{day-of-week}" is a case-insensitive string like "mon", "tue", &c.
//
// "{time-of-day}" is the "Time" portion of an RFC3339-formatted timestamp. Any second or sub-second time data will be truncated to zero.
//
// If you set the read replica maintenance window to "" or if not specified, the read replica is set same as the DB system maintenance window.
func (o MysqlDbSystemMaintenanceOutput) WindowStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v MysqlDbSystemMaintenance) string { return v.WindowStartTime }).(pulumi.StringOutput)
}

type MysqlDbSystemMaintenancePtrOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemMaintenancePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlDbSystemMaintenance)(nil)).Elem()
}

func (o MysqlDbSystemMaintenancePtrOutput) ToMysqlDbSystemMaintenancePtrOutput() MysqlDbSystemMaintenancePtrOutput {
	return o
}

func (o MysqlDbSystemMaintenancePtrOutput) ToMysqlDbSystemMaintenancePtrOutputWithContext(ctx context.Context) MysqlDbSystemMaintenancePtrOutput {
	return o
}

func (o MysqlDbSystemMaintenancePtrOutput) Elem() MysqlDbSystemMaintenanceOutput {
	return o.ApplyT(func(v *MysqlDbSystemMaintenance) MysqlDbSystemMaintenance {
		if v != nil {
			return *v
		}
		var ret MysqlDbSystemMaintenance
		return ret
	}).(MysqlDbSystemMaintenanceOutput)
}

// (Updatable) The start of the 2 hour maintenance window.
//
// This string is of the format: "{day-of-week} {time-of-day}".
//
// "{day-of-week}" is a case-insensitive string like "mon", "tue", &c.
//
// "{time-of-day}" is the "Time" portion of an RFC3339-formatted timestamp. Any second or sub-second time data will be truncated to zero.
//
// If you set the read replica maintenance window to "" or if not specified, the read replica is set same as the DB system maintenance window.
func (o MysqlDbSystemMaintenancePtrOutput) WindowStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystemMaintenance) *string {
		if v == nil {
			return nil
		}
		return &v.WindowStartTime
	}).(pulumi.StringPtrOutput)
}

type MysqlDbSystemPointInTimeRecoveryDetail struct {
	// Earliest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeEarliestRecoveryPoint *string `pulumi:"timeEarliestRecoveryPoint"`
	// Latest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeLatestRecoveryPoint *string `pulumi:"timeLatestRecoveryPoint"`
}

// MysqlDbSystemPointInTimeRecoveryDetailInput is an input type that accepts MysqlDbSystemPointInTimeRecoveryDetailArgs and MysqlDbSystemPointInTimeRecoveryDetailOutput values.
// You can construct a concrete instance of `MysqlDbSystemPointInTimeRecoveryDetailInput` via:
//
//	MysqlDbSystemPointInTimeRecoveryDetailArgs{...}
type MysqlDbSystemPointInTimeRecoveryDetailInput interface {
	pulumi.Input

	ToMysqlDbSystemPointInTimeRecoveryDetailOutput() MysqlDbSystemPointInTimeRecoveryDetailOutput
	ToMysqlDbSystemPointInTimeRecoveryDetailOutputWithContext(context.Context) MysqlDbSystemPointInTimeRecoveryDetailOutput
}

type MysqlDbSystemPointInTimeRecoveryDetailArgs struct {
	// Earliest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeEarliestRecoveryPoint pulumi.StringPtrInput `pulumi:"timeEarliestRecoveryPoint"`
	// Latest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeLatestRecoveryPoint pulumi.StringPtrInput `pulumi:"timeLatestRecoveryPoint"`
}

func (MysqlDbSystemPointInTimeRecoveryDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemPointInTimeRecoveryDetail)(nil)).Elem()
}

func (i MysqlDbSystemPointInTimeRecoveryDetailArgs) ToMysqlDbSystemPointInTimeRecoveryDetailOutput() MysqlDbSystemPointInTimeRecoveryDetailOutput {
	return i.ToMysqlDbSystemPointInTimeRecoveryDetailOutputWithContext(context.Background())
}

func (i MysqlDbSystemPointInTimeRecoveryDetailArgs) ToMysqlDbSystemPointInTimeRecoveryDetailOutputWithContext(ctx context.Context) MysqlDbSystemPointInTimeRecoveryDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemPointInTimeRecoveryDetailOutput)
}

// MysqlDbSystemPointInTimeRecoveryDetailArrayInput is an input type that accepts MysqlDbSystemPointInTimeRecoveryDetailArray and MysqlDbSystemPointInTimeRecoveryDetailArrayOutput values.
// You can construct a concrete instance of `MysqlDbSystemPointInTimeRecoveryDetailArrayInput` via:
//
//	MysqlDbSystemPointInTimeRecoveryDetailArray{ MysqlDbSystemPointInTimeRecoveryDetailArgs{...} }
type MysqlDbSystemPointInTimeRecoveryDetailArrayInput interface {
	pulumi.Input

	ToMysqlDbSystemPointInTimeRecoveryDetailArrayOutput() MysqlDbSystemPointInTimeRecoveryDetailArrayOutput
	ToMysqlDbSystemPointInTimeRecoveryDetailArrayOutputWithContext(context.Context) MysqlDbSystemPointInTimeRecoveryDetailArrayOutput
}

type MysqlDbSystemPointInTimeRecoveryDetailArray []MysqlDbSystemPointInTimeRecoveryDetailInput

func (MysqlDbSystemPointInTimeRecoveryDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemPointInTimeRecoveryDetail)(nil)).Elem()
}

func (i MysqlDbSystemPointInTimeRecoveryDetailArray) ToMysqlDbSystemPointInTimeRecoveryDetailArrayOutput() MysqlDbSystemPointInTimeRecoveryDetailArrayOutput {
	return i.ToMysqlDbSystemPointInTimeRecoveryDetailArrayOutputWithContext(context.Background())
}

func (i MysqlDbSystemPointInTimeRecoveryDetailArray) ToMysqlDbSystemPointInTimeRecoveryDetailArrayOutputWithContext(ctx context.Context) MysqlDbSystemPointInTimeRecoveryDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemPointInTimeRecoveryDetailArrayOutput)
}

type MysqlDbSystemPointInTimeRecoveryDetailOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemPointInTimeRecoveryDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemPointInTimeRecoveryDetail)(nil)).Elem()
}

func (o MysqlDbSystemPointInTimeRecoveryDetailOutput) ToMysqlDbSystemPointInTimeRecoveryDetailOutput() MysqlDbSystemPointInTimeRecoveryDetailOutput {
	return o
}

func (o MysqlDbSystemPointInTimeRecoveryDetailOutput) ToMysqlDbSystemPointInTimeRecoveryDetailOutputWithContext(ctx context.Context) MysqlDbSystemPointInTimeRecoveryDetailOutput {
	return o
}

// Earliest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o MysqlDbSystemPointInTimeRecoveryDetailOutput) TimeEarliestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemPointInTimeRecoveryDetail) *string { return v.TimeEarliestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// Latest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o MysqlDbSystemPointInTimeRecoveryDetailOutput) TimeLatestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemPointInTimeRecoveryDetail) *string { return v.TimeLatestRecoveryPoint }).(pulumi.StringPtrOutput)
}

type MysqlDbSystemPointInTimeRecoveryDetailArrayOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemPointInTimeRecoveryDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDbSystemPointInTimeRecoveryDetail)(nil)).Elem()
}

func (o MysqlDbSystemPointInTimeRecoveryDetailArrayOutput) ToMysqlDbSystemPointInTimeRecoveryDetailArrayOutput() MysqlDbSystemPointInTimeRecoveryDetailArrayOutput {
	return o
}

func (o MysqlDbSystemPointInTimeRecoveryDetailArrayOutput) ToMysqlDbSystemPointInTimeRecoveryDetailArrayOutputWithContext(ctx context.Context) MysqlDbSystemPointInTimeRecoveryDetailArrayOutput {
	return o
}

func (o MysqlDbSystemPointInTimeRecoveryDetailArrayOutput) Index(i pulumi.IntInput) MysqlDbSystemPointInTimeRecoveryDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlDbSystemPointInTimeRecoveryDetail {
		return vs[0].([]MysqlDbSystemPointInTimeRecoveryDetail)[vs[1].(int)]
	}).(MysqlDbSystemPointInTimeRecoveryDetailOutput)
}

type MysqlDbSystemReadEndpoint struct {
	// (Updatable) A list of IP addresses of read replicas that are excluded from serving read requests.
	ExcludeIps []string `pulumi:"excludeIps"`
	// (Updatable) Specifies if the DB System read endpoint is enabled or not.
	IsEnabled *bool `pulumi:"isEnabled"`
	// (Updatable) The hostname for the read endpoint of the DB System. Used for DNS.
	//
	// The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN)  (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com").
	//
	// Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
	ReadEndpointHostnameLabel *string `pulumi:"readEndpointHostnameLabel"`
	// (Updatable) The IP address the DB System read endpoint is configured to listen on. A private IP address of your choice to assign to the read endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
	ReadEndpointIpAddress *string `pulumi:"readEndpointIpAddress"`
}

// MysqlDbSystemReadEndpointInput is an input type that accepts MysqlDbSystemReadEndpointArgs and MysqlDbSystemReadEndpointOutput values.
// You can construct a concrete instance of `MysqlDbSystemReadEndpointInput` via:
//
//	MysqlDbSystemReadEndpointArgs{...}
type MysqlDbSystemReadEndpointInput interface {
	pulumi.Input

	ToMysqlDbSystemReadEndpointOutput() MysqlDbSystemReadEndpointOutput
	ToMysqlDbSystemReadEndpointOutputWithContext(context.Context) MysqlDbSystemReadEndpointOutput
}

type MysqlDbSystemReadEndpointArgs struct {
	// (Updatable) A list of IP addresses of read replicas that are excluded from serving read requests.
	ExcludeIps pulumi.StringArrayInput `pulumi:"excludeIps"`
	// (Updatable) Specifies if the DB System read endpoint is enabled or not.
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// (Updatable) The hostname for the read endpoint of the DB System. Used for DNS.
	//
	// The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN)  (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com").
	//
	// Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
	ReadEndpointHostnameLabel pulumi.StringPtrInput `pulumi:"readEndpointHostnameLabel"`
	// (Updatable) The IP address the DB System read endpoint is configured to listen on. A private IP address of your choice to assign to the read endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
	ReadEndpointIpAddress pulumi.StringPtrInput `pulumi:"readEndpointIpAddress"`
}

func (MysqlDbSystemReadEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemReadEndpoint)(nil)).Elem()
}

func (i MysqlDbSystemReadEndpointArgs) ToMysqlDbSystemReadEndpointOutput() MysqlDbSystemReadEndpointOutput {
	return i.ToMysqlDbSystemReadEndpointOutputWithContext(context.Background())
}

func (i MysqlDbSystemReadEndpointArgs) ToMysqlDbSystemReadEndpointOutputWithContext(ctx context.Context) MysqlDbSystemReadEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemReadEndpointOutput)
}

func (i MysqlDbSystemReadEndpointArgs) ToMysqlDbSystemReadEndpointPtrOutput() MysqlDbSystemReadEndpointPtrOutput {
	return i.ToMysqlDbSystemReadEndpointPtrOutputWithContext(context.Background())
}

func (i MysqlDbSystemReadEndpointArgs) ToMysqlDbSystemReadEndpointPtrOutputWithContext(ctx context.Context) MysqlDbSystemReadEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemReadEndpointOutput).ToMysqlDbSystemReadEndpointPtrOutputWithContext(ctx)
}

// MysqlDbSystemReadEndpointPtrInput is an input type that accepts MysqlDbSystemReadEndpointArgs, MysqlDbSystemReadEndpointPtr and MysqlDbSystemReadEndpointPtrOutput values.
// You can construct a concrete instance of `MysqlDbSystemReadEndpointPtrInput` via:
//
//	        MysqlDbSystemReadEndpointArgs{...}
//
//	or:
//
//	        nil
type MysqlDbSystemReadEndpointPtrInput interface {
	pulumi.Input

	ToMysqlDbSystemReadEndpointPtrOutput() MysqlDbSystemReadEndpointPtrOutput
	ToMysqlDbSystemReadEndpointPtrOutputWithContext(context.Context) MysqlDbSystemReadEndpointPtrOutput
}

type mysqlDbSystemReadEndpointPtrType MysqlDbSystemReadEndpointArgs

func MysqlDbSystemReadEndpointPtr(v *MysqlDbSystemReadEndpointArgs) MysqlDbSystemReadEndpointPtrInput {
	return (*mysqlDbSystemReadEndpointPtrType)(v)
}

func (*mysqlDbSystemReadEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlDbSystemReadEndpoint)(nil)).Elem()
}

func (i *mysqlDbSystemReadEndpointPtrType) ToMysqlDbSystemReadEndpointPtrOutput() MysqlDbSystemReadEndpointPtrOutput {
	return i.ToMysqlDbSystemReadEndpointPtrOutputWithContext(context.Background())
}

func (i *mysqlDbSystemReadEndpointPtrType) ToMysqlDbSystemReadEndpointPtrOutputWithContext(ctx context.Context) MysqlDbSystemReadEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemReadEndpointPtrOutput)
}

type MysqlDbSystemReadEndpointOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemReadEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemReadEndpoint)(nil)).Elem()
}

func (o MysqlDbSystemReadEndpointOutput) ToMysqlDbSystemReadEndpointOutput() MysqlDbSystemReadEndpointOutput {
	return o
}

func (o MysqlDbSystemReadEndpointOutput) ToMysqlDbSystemReadEndpointOutputWithContext(ctx context.Context) MysqlDbSystemReadEndpointOutput {
	return o
}

func (o MysqlDbSystemReadEndpointOutput) ToMysqlDbSystemReadEndpointPtrOutput() MysqlDbSystemReadEndpointPtrOutput {
	return o.ToMysqlDbSystemReadEndpointPtrOutputWithContext(context.Background())
}

func (o MysqlDbSystemReadEndpointOutput) ToMysqlDbSystemReadEndpointPtrOutputWithContext(ctx context.Context) MysqlDbSystemReadEndpointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MysqlDbSystemReadEndpoint) *MysqlDbSystemReadEndpoint {
		return &v
	}).(MysqlDbSystemReadEndpointPtrOutput)
}

// (Updatable) A list of IP addresses of read replicas that are excluded from serving read requests.
func (o MysqlDbSystemReadEndpointOutput) ExcludeIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MysqlDbSystemReadEndpoint) []string { return v.ExcludeIps }).(pulumi.StringArrayOutput)
}

// (Updatable) Specifies if the DB System read endpoint is enabled or not.
func (o MysqlDbSystemReadEndpointOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemReadEndpoint) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// (Updatable) The hostname for the read endpoint of the DB System. Used for DNS.
//
// The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN)  (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com").
//
// Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
func (o MysqlDbSystemReadEndpointOutput) ReadEndpointHostnameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemReadEndpoint) *string { return v.ReadEndpointHostnameLabel }).(pulumi.StringPtrOutput)
}

// (Updatable) The IP address the DB System read endpoint is configured to listen on. A private IP address of your choice to assign to the read endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
func (o MysqlDbSystemReadEndpointOutput) ReadEndpointIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemReadEndpoint) *string { return v.ReadEndpointIpAddress }).(pulumi.StringPtrOutput)
}

type MysqlDbSystemReadEndpointPtrOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemReadEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlDbSystemReadEndpoint)(nil)).Elem()
}

func (o MysqlDbSystemReadEndpointPtrOutput) ToMysqlDbSystemReadEndpointPtrOutput() MysqlDbSystemReadEndpointPtrOutput {
	return o
}

func (o MysqlDbSystemReadEndpointPtrOutput) ToMysqlDbSystemReadEndpointPtrOutputWithContext(ctx context.Context) MysqlDbSystemReadEndpointPtrOutput {
	return o
}

func (o MysqlDbSystemReadEndpointPtrOutput) Elem() MysqlDbSystemReadEndpointOutput {
	return o.ApplyT(func(v *MysqlDbSystemReadEndpoint) MysqlDbSystemReadEndpoint {
		if v != nil {
			return *v
		}
		var ret MysqlDbSystemReadEndpoint
		return ret
	}).(MysqlDbSystemReadEndpointOutput)
}

// (Updatable) A list of IP addresses of read replicas that are excluded from serving read requests.
func (o MysqlDbSystemReadEndpointPtrOutput) ExcludeIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MysqlDbSystemReadEndpoint) []string {
		if v == nil {
			return nil
		}
		return v.ExcludeIps
	}).(pulumi.StringArrayOutput)
}

// (Updatable) Specifies if the DB System read endpoint is enabled or not.
func (o MysqlDbSystemReadEndpointPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystemReadEndpoint) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// (Updatable) The hostname for the read endpoint of the DB System. Used for DNS.
//
// The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN)  (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com").
//
// Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
func (o MysqlDbSystemReadEndpointPtrOutput) ReadEndpointHostnameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystemReadEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.ReadEndpointHostnameLabel
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The IP address the DB System read endpoint is configured to listen on. A private IP address of your choice to assign to the read endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
func (o MysqlDbSystemReadEndpointPtrOutput) ReadEndpointIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystemReadEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.ReadEndpointIpAddress
	}).(pulumi.StringPtrOutput)
}

type MysqlDbSystemRest struct {
	// (Updatable) Select how REST is configured across the DB System instances.
	Configuration string `pulumi:"configuration"`
	// (Updatable) The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
	Port *int `pulumi:"port"`
}

// MysqlDbSystemRestInput is an input type that accepts MysqlDbSystemRestArgs and MysqlDbSystemRestOutput values.
// You can construct a concrete instance of `MysqlDbSystemRestInput` via:
//
//	MysqlDbSystemRestArgs{...}
type MysqlDbSystemRestInput interface {
	pulumi.Input

	ToMysqlDbSystemRestOutput() MysqlDbSystemRestOutput
	ToMysqlDbSystemRestOutputWithContext(context.Context) MysqlDbSystemRestOutput
}

type MysqlDbSystemRestArgs struct {
	// (Updatable) Select how REST is configured across the DB System instances.
	Configuration pulumi.StringInput `pulumi:"configuration"`
	// (Updatable) The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (MysqlDbSystemRestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemRest)(nil)).Elem()
}

func (i MysqlDbSystemRestArgs) ToMysqlDbSystemRestOutput() MysqlDbSystemRestOutput {
	return i.ToMysqlDbSystemRestOutputWithContext(context.Background())
}

func (i MysqlDbSystemRestArgs) ToMysqlDbSystemRestOutputWithContext(ctx context.Context) MysqlDbSystemRestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemRestOutput)
}

func (i MysqlDbSystemRestArgs) ToMysqlDbSystemRestPtrOutput() MysqlDbSystemRestPtrOutput {
	return i.ToMysqlDbSystemRestPtrOutputWithContext(context.Background())
}

func (i MysqlDbSystemRestArgs) ToMysqlDbSystemRestPtrOutputWithContext(ctx context.Context) MysqlDbSystemRestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemRestOutput).ToMysqlDbSystemRestPtrOutputWithContext(ctx)
}

// MysqlDbSystemRestPtrInput is an input type that accepts MysqlDbSystemRestArgs, MysqlDbSystemRestPtr and MysqlDbSystemRestPtrOutput values.
// You can construct a concrete instance of `MysqlDbSystemRestPtrInput` via:
//
//	        MysqlDbSystemRestArgs{...}
//
//	or:
//
//	        nil
type MysqlDbSystemRestPtrInput interface {
	pulumi.Input

	ToMysqlDbSystemRestPtrOutput() MysqlDbSystemRestPtrOutput
	ToMysqlDbSystemRestPtrOutputWithContext(context.Context) MysqlDbSystemRestPtrOutput
}

type mysqlDbSystemRestPtrType MysqlDbSystemRestArgs

func MysqlDbSystemRestPtr(v *MysqlDbSystemRestArgs) MysqlDbSystemRestPtrInput {
	return (*mysqlDbSystemRestPtrType)(v)
}

func (*mysqlDbSystemRestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlDbSystemRest)(nil)).Elem()
}

func (i *mysqlDbSystemRestPtrType) ToMysqlDbSystemRestPtrOutput() MysqlDbSystemRestPtrOutput {
	return i.ToMysqlDbSystemRestPtrOutputWithContext(context.Background())
}

func (i *mysqlDbSystemRestPtrType) ToMysqlDbSystemRestPtrOutputWithContext(ctx context.Context) MysqlDbSystemRestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemRestPtrOutput)
}

type MysqlDbSystemRestOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemRestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemRest)(nil)).Elem()
}

func (o MysqlDbSystemRestOutput) ToMysqlDbSystemRestOutput() MysqlDbSystemRestOutput {
	return o
}

func (o MysqlDbSystemRestOutput) ToMysqlDbSystemRestOutputWithContext(ctx context.Context) MysqlDbSystemRestOutput {
	return o
}

func (o MysqlDbSystemRestOutput) ToMysqlDbSystemRestPtrOutput() MysqlDbSystemRestPtrOutput {
	return o.ToMysqlDbSystemRestPtrOutputWithContext(context.Background())
}

func (o MysqlDbSystemRestOutput) ToMysqlDbSystemRestPtrOutputWithContext(ctx context.Context) MysqlDbSystemRestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MysqlDbSystemRest) *MysqlDbSystemRest {
		return &v
	}).(MysqlDbSystemRestPtrOutput)
}

// (Updatable) Select how REST is configured across the DB System instances.
func (o MysqlDbSystemRestOutput) Configuration() pulumi.StringOutput {
	return o.ApplyT(func(v MysqlDbSystemRest) string { return v.Configuration }).(pulumi.StringOutput)
}

// (Updatable) The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
func (o MysqlDbSystemRestOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemRest) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type MysqlDbSystemRestPtrOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemRestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlDbSystemRest)(nil)).Elem()
}

func (o MysqlDbSystemRestPtrOutput) ToMysqlDbSystemRestPtrOutput() MysqlDbSystemRestPtrOutput {
	return o
}

func (o MysqlDbSystemRestPtrOutput) ToMysqlDbSystemRestPtrOutputWithContext(ctx context.Context) MysqlDbSystemRestPtrOutput {
	return o
}

func (o MysqlDbSystemRestPtrOutput) Elem() MysqlDbSystemRestOutput {
	return o.ApplyT(func(v *MysqlDbSystemRest) MysqlDbSystemRest {
		if v != nil {
			return *v
		}
		var ret MysqlDbSystemRest
		return ret
	}).(MysqlDbSystemRestOutput)
}

// (Updatable) Select how REST is configured across the DB System instances.
func (o MysqlDbSystemRestPtrOutput) Configuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystemRest) *string {
		if v == nil {
			return nil
		}
		return &v.Configuration
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
func (o MysqlDbSystemRestPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystemRest) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

type MysqlDbSystemSecureConnections struct {
	// (Updatable) Select whether to use MySQL Database Service-managed certificate (SYSTEM) or your own certificate (BYOC).
	CertificateGenerationType string `pulumi:"certificateGenerationType"`
	// (Updatable) The OCID of the certificate to use.
	CertificateId *string `pulumi:"certificateId"`
}

// MysqlDbSystemSecureConnectionsInput is an input type that accepts MysqlDbSystemSecureConnectionsArgs and MysqlDbSystemSecureConnectionsOutput values.
// You can construct a concrete instance of `MysqlDbSystemSecureConnectionsInput` via:
//
//	MysqlDbSystemSecureConnectionsArgs{...}
type MysqlDbSystemSecureConnectionsInput interface {
	pulumi.Input

	ToMysqlDbSystemSecureConnectionsOutput() MysqlDbSystemSecureConnectionsOutput
	ToMysqlDbSystemSecureConnectionsOutputWithContext(context.Context) MysqlDbSystemSecureConnectionsOutput
}

type MysqlDbSystemSecureConnectionsArgs struct {
	// (Updatable) Select whether to use MySQL Database Service-managed certificate (SYSTEM) or your own certificate (BYOC).
	CertificateGenerationType pulumi.StringInput `pulumi:"certificateGenerationType"`
	// (Updatable) The OCID of the certificate to use.
	CertificateId pulumi.StringPtrInput `pulumi:"certificateId"`
}

func (MysqlDbSystemSecureConnectionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemSecureConnections)(nil)).Elem()
}

func (i MysqlDbSystemSecureConnectionsArgs) ToMysqlDbSystemSecureConnectionsOutput() MysqlDbSystemSecureConnectionsOutput {
	return i.ToMysqlDbSystemSecureConnectionsOutputWithContext(context.Background())
}

func (i MysqlDbSystemSecureConnectionsArgs) ToMysqlDbSystemSecureConnectionsOutputWithContext(ctx context.Context) MysqlDbSystemSecureConnectionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemSecureConnectionsOutput)
}

func (i MysqlDbSystemSecureConnectionsArgs) ToMysqlDbSystemSecureConnectionsPtrOutput() MysqlDbSystemSecureConnectionsPtrOutput {
	return i.ToMysqlDbSystemSecureConnectionsPtrOutputWithContext(context.Background())
}

func (i MysqlDbSystemSecureConnectionsArgs) ToMysqlDbSystemSecureConnectionsPtrOutputWithContext(ctx context.Context) MysqlDbSystemSecureConnectionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemSecureConnectionsOutput).ToMysqlDbSystemSecureConnectionsPtrOutputWithContext(ctx)
}

// MysqlDbSystemSecureConnectionsPtrInput is an input type that accepts MysqlDbSystemSecureConnectionsArgs, MysqlDbSystemSecureConnectionsPtr and MysqlDbSystemSecureConnectionsPtrOutput values.
// You can construct a concrete instance of `MysqlDbSystemSecureConnectionsPtrInput` via:
//
//	        MysqlDbSystemSecureConnectionsArgs{...}
//
//	or:
//
//	        nil
type MysqlDbSystemSecureConnectionsPtrInput interface {
	pulumi.Input

	ToMysqlDbSystemSecureConnectionsPtrOutput() MysqlDbSystemSecureConnectionsPtrOutput
	ToMysqlDbSystemSecureConnectionsPtrOutputWithContext(context.Context) MysqlDbSystemSecureConnectionsPtrOutput
}

type mysqlDbSystemSecureConnectionsPtrType MysqlDbSystemSecureConnectionsArgs

func MysqlDbSystemSecureConnectionsPtr(v *MysqlDbSystemSecureConnectionsArgs) MysqlDbSystemSecureConnectionsPtrInput {
	return (*mysqlDbSystemSecureConnectionsPtrType)(v)
}

func (*mysqlDbSystemSecureConnectionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlDbSystemSecureConnections)(nil)).Elem()
}

func (i *mysqlDbSystemSecureConnectionsPtrType) ToMysqlDbSystemSecureConnectionsPtrOutput() MysqlDbSystemSecureConnectionsPtrOutput {
	return i.ToMysqlDbSystemSecureConnectionsPtrOutputWithContext(context.Background())
}

func (i *mysqlDbSystemSecureConnectionsPtrType) ToMysqlDbSystemSecureConnectionsPtrOutputWithContext(ctx context.Context) MysqlDbSystemSecureConnectionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemSecureConnectionsPtrOutput)
}

type MysqlDbSystemSecureConnectionsOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemSecureConnectionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemSecureConnections)(nil)).Elem()
}

func (o MysqlDbSystemSecureConnectionsOutput) ToMysqlDbSystemSecureConnectionsOutput() MysqlDbSystemSecureConnectionsOutput {
	return o
}

func (o MysqlDbSystemSecureConnectionsOutput) ToMysqlDbSystemSecureConnectionsOutputWithContext(ctx context.Context) MysqlDbSystemSecureConnectionsOutput {
	return o
}

func (o MysqlDbSystemSecureConnectionsOutput) ToMysqlDbSystemSecureConnectionsPtrOutput() MysqlDbSystemSecureConnectionsPtrOutput {
	return o.ToMysqlDbSystemSecureConnectionsPtrOutputWithContext(context.Background())
}

func (o MysqlDbSystemSecureConnectionsOutput) ToMysqlDbSystemSecureConnectionsPtrOutputWithContext(ctx context.Context) MysqlDbSystemSecureConnectionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MysqlDbSystemSecureConnections) *MysqlDbSystemSecureConnections {
		return &v
	}).(MysqlDbSystemSecureConnectionsPtrOutput)
}

// (Updatable) Select whether to use MySQL Database Service-managed certificate (SYSTEM) or your own certificate (BYOC).
func (o MysqlDbSystemSecureConnectionsOutput) CertificateGenerationType() pulumi.StringOutput {
	return o.ApplyT(func(v MysqlDbSystemSecureConnections) string { return v.CertificateGenerationType }).(pulumi.StringOutput)
}

// (Updatable) The OCID of the certificate to use.
func (o MysqlDbSystemSecureConnectionsOutput) CertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemSecureConnections) *string { return v.CertificateId }).(pulumi.StringPtrOutput)
}

type MysqlDbSystemSecureConnectionsPtrOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemSecureConnectionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlDbSystemSecureConnections)(nil)).Elem()
}

func (o MysqlDbSystemSecureConnectionsPtrOutput) ToMysqlDbSystemSecureConnectionsPtrOutput() MysqlDbSystemSecureConnectionsPtrOutput {
	return o
}

func (o MysqlDbSystemSecureConnectionsPtrOutput) ToMysqlDbSystemSecureConnectionsPtrOutputWithContext(ctx context.Context) MysqlDbSystemSecureConnectionsPtrOutput {
	return o
}

func (o MysqlDbSystemSecureConnectionsPtrOutput) Elem() MysqlDbSystemSecureConnectionsOutput {
	return o.ApplyT(func(v *MysqlDbSystemSecureConnections) MysqlDbSystemSecureConnections {
		if v != nil {
			return *v
		}
		var ret MysqlDbSystemSecureConnections
		return ret
	}).(MysqlDbSystemSecureConnectionsOutput)
}

// (Updatable) Select whether to use MySQL Database Service-managed certificate (SYSTEM) or your own certificate (BYOC).
func (o MysqlDbSystemSecureConnectionsPtrOutput) CertificateGenerationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystemSecureConnections) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateGenerationType
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The OCID of the certificate to use.
func (o MysqlDbSystemSecureConnectionsPtrOutput) CertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystemSecureConnections) *string {
		if v == nil {
			return nil
		}
		return v.CertificateId
	}).(pulumi.StringPtrOutput)
}

type MysqlDbSystemSource struct {
	// The OCID of the backup to be used as the source for the new DB System.
	BackupId *string `pulumi:"backupId"`
	// The OCID of the DB System from which a backup shall be selected to be restored when creating the new DB System. Use this together with recovery point to perform a point in time recovery operation.
	DbSystemId *string `pulumi:"dbSystemId"`
	// The date and time, as per RFC 3339, of the change up to which the new DB System shall be restored to, using a backup and logs from the original DB System. In case no point in time is specified, then this new DB System shall be restored up to the latest change recorded for the original DB System.
	RecoveryPoint *string `pulumi:"recoveryPoint"`
	// The specific source identifier. Use `BACKUP` for creating a new database by restoring from a backup. Use `IMPORTURL` for creating a new database from a URL Object Storage PAR.
	SourceType string `pulumi:"sourceType"`
	// The Pre-Authenticated Request (PAR) of a bucket/prefix or PAR of a @.manifest.json object from the Object Storage. Check [Using Pre-Authenticated Requests](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/usingpreauthenticatedrequests.htm) for information related to PAR creation. Please create PAR with "Permit object reads" access type and "Enable Object Listing" permission when using a bucket/prefix PAR. Please create PAR with "Permit object reads" access type when using a @.manifest.json object PAR.
	SourceUrl *string `pulumi:"sourceUrl"`
}

// MysqlDbSystemSourceInput is an input type that accepts MysqlDbSystemSourceArgs and MysqlDbSystemSourceOutput values.
// You can construct a concrete instance of `MysqlDbSystemSourceInput` via:
//
//	MysqlDbSystemSourceArgs{...}
type MysqlDbSystemSourceInput interface {
	pulumi.Input

	ToMysqlDbSystemSourceOutput() MysqlDbSystemSourceOutput
	ToMysqlDbSystemSourceOutputWithContext(context.Context) MysqlDbSystemSourceOutput
}

type MysqlDbSystemSourceArgs struct {
	// The OCID of the backup to be used as the source for the new DB System.
	BackupId pulumi.StringPtrInput `pulumi:"backupId"`
	// The OCID of the DB System from which a backup shall be selected to be restored when creating the new DB System. Use this together with recovery point to perform a point in time recovery operation.
	DbSystemId pulumi.StringPtrInput `pulumi:"dbSystemId"`
	// The date and time, as per RFC 3339, of the change up to which the new DB System shall be restored to, using a backup and logs from the original DB System. In case no point in time is specified, then this new DB System shall be restored up to the latest change recorded for the original DB System.
	RecoveryPoint pulumi.StringPtrInput `pulumi:"recoveryPoint"`
	// The specific source identifier. Use `BACKUP` for creating a new database by restoring from a backup. Use `IMPORTURL` for creating a new database from a URL Object Storage PAR.
	SourceType pulumi.StringInput `pulumi:"sourceType"`
	// The Pre-Authenticated Request (PAR) of a bucket/prefix or PAR of a @.manifest.json object from the Object Storage. Check [Using Pre-Authenticated Requests](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/usingpreauthenticatedrequests.htm) for information related to PAR creation. Please create PAR with "Permit object reads" access type and "Enable Object Listing" permission when using a bucket/prefix PAR. Please create PAR with "Permit object reads" access type when using a @.manifest.json object PAR.
	SourceUrl pulumi.StringPtrInput `pulumi:"sourceUrl"`
}

func (MysqlDbSystemSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemSource)(nil)).Elem()
}

func (i MysqlDbSystemSourceArgs) ToMysqlDbSystemSourceOutput() MysqlDbSystemSourceOutput {
	return i.ToMysqlDbSystemSourceOutputWithContext(context.Background())
}

func (i MysqlDbSystemSourceArgs) ToMysqlDbSystemSourceOutputWithContext(ctx context.Context) MysqlDbSystemSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemSourceOutput)
}

func (i MysqlDbSystemSourceArgs) ToMysqlDbSystemSourcePtrOutput() MysqlDbSystemSourcePtrOutput {
	return i.ToMysqlDbSystemSourcePtrOutputWithContext(context.Background())
}

func (i MysqlDbSystemSourceArgs) ToMysqlDbSystemSourcePtrOutputWithContext(ctx context.Context) MysqlDbSystemSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemSourceOutput).ToMysqlDbSystemSourcePtrOutputWithContext(ctx)
}

// MysqlDbSystemSourcePtrInput is an input type that accepts MysqlDbSystemSourceArgs, MysqlDbSystemSourcePtr and MysqlDbSystemSourcePtrOutput values.
// You can construct a concrete instance of `MysqlDbSystemSourcePtrInput` via:
//
//	        MysqlDbSystemSourceArgs{...}
//
//	or:
//
//	        nil
type MysqlDbSystemSourcePtrInput interface {
	pulumi.Input

	ToMysqlDbSystemSourcePtrOutput() MysqlDbSystemSourcePtrOutput
	ToMysqlDbSystemSourcePtrOutputWithContext(context.Context) MysqlDbSystemSourcePtrOutput
}

type mysqlDbSystemSourcePtrType MysqlDbSystemSourceArgs

func MysqlDbSystemSourcePtr(v *MysqlDbSystemSourceArgs) MysqlDbSystemSourcePtrInput {
	return (*mysqlDbSystemSourcePtrType)(v)
}

func (*mysqlDbSystemSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlDbSystemSource)(nil)).Elem()
}

func (i *mysqlDbSystemSourcePtrType) ToMysqlDbSystemSourcePtrOutput() MysqlDbSystemSourcePtrOutput {
	return i.ToMysqlDbSystemSourcePtrOutputWithContext(context.Background())
}

func (i *mysqlDbSystemSourcePtrType) ToMysqlDbSystemSourcePtrOutputWithContext(ctx context.Context) MysqlDbSystemSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDbSystemSourcePtrOutput)
}

type MysqlDbSystemSourceOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDbSystemSource)(nil)).Elem()
}

func (o MysqlDbSystemSourceOutput) ToMysqlDbSystemSourceOutput() MysqlDbSystemSourceOutput {
	return o
}

func (o MysqlDbSystemSourceOutput) ToMysqlDbSystemSourceOutputWithContext(ctx context.Context) MysqlDbSystemSourceOutput {
	return o
}

func (o MysqlDbSystemSourceOutput) ToMysqlDbSystemSourcePtrOutput() MysqlDbSystemSourcePtrOutput {
	return o.ToMysqlDbSystemSourcePtrOutputWithContext(context.Background())
}

func (o MysqlDbSystemSourceOutput) ToMysqlDbSystemSourcePtrOutputWithContext(ctx context.Context) MysqlDbSystemSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MysqlDbSystemSource) *MysqlDbSystemSource {
		return &v
	}).(MysqlDbSystemSourcePtrOutput)
}

// The OCID of the backup to be used as the source for the new DB System.
func (o MysqlDbSystemSourceOutput) BackupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemSource) *string { return v.BackupId }).(pulumi.StringPtrOutput)
}

// The OCID of the DB System from which a backup shall be selected to be restored when creating the new DB System. Use this together with recovery point to perform a point in time recovery operation.
func (o MysqlDbSystemSourceOutput) DbSystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemSource) *string { return v.DbSystemId }).(pulumi.StringPtrOutput)
}

// The date and time, as per RFC 3339, of the change up to which the new DB System shall be restored to, using a backup and logs from the original DB System. In case no point in time is specified, then this new DB System shall be restored up to the latest change recorded for the original DB System.
func (o MysqlDbSystemSourceOutput) RecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemSource) *string { return v.RecoveryPoint }).(pulumi.StringPtrOutput)
}

// The specific source identifier. Use `BACKUP` for creating a new database by restoring from a backup. Use `IMPORTURL` for creating a new database from a URL Object Storage PAR.
func (o MysqlDbSystemSourceOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v MysqlDbSystemSource) string { return v.SourceType }).(pulumi.StringOutput)
}

// The Pre-Authenticated Request (PAR) of a bucket/prefix or PAR of a @.manifest.json object from the Object Storage. Check [Using Pre-Authenticated Requests](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/usingpreauthenticatedrequests.htm) for information related to PAR creation. Please create PAR with "Permit object reads" access type and "Enable Object Listing" permission when using a bucket/prefix PAR. Please create PAR with "Permit object reads" access type when using a @.manifest.json object PAR.
func (o MysqlDbSystemSourceOutput) SourceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlDbSystemSource) *string { return v.SourceUrl }).(pulumi.StringPtrOutput)
}

type MysqlDbSystemSourcePtrOutput struct{ *pulumi.OutputState }

func (MysqlDbSystemSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlDbSystemSource)(nil)).Elem()
}

func (o MysqlDbSystemSourcePtrOutput) ToMysqlDbSystemSourcePtrOutput() MysqlDbSystemSourcePtrOutput {
	return o
}

func (o MysqlDbSystemSourcePtrOutput) ToMysqlDbSystemSourcePtrOutputWithContext(ctx context.Context) MysqlDbSystemSourcePtrOutput {
	return o
}

func (o MysqlDbSystemSourcePtrOutput) Elem() MysqlDbSystemSourceOutput {
	return o.ApplyT(func(v *MysqlDbSystemSource) MysqlDbSystemSource {
		if v != nil {
			return *v
		}
		var ret MysqlDbSystemSource
		return ret
	}).(MysqlDbSystemSourceOutput)
}

// The OCID of the backup to be used as the source for the new DB System.
func (o MysqlDbSystemSourcePtrOutput) BackupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystemSource) *string {
		if v == nil {
			return nil
		}
		return v.BackupId
	}).(pulumi.StringPtrOutput)
}

// The OCID of the DB System from which a backup shall be selected to be restored when creating the new DB System. Use this together with recovery point to perform a point in time recovery operation.
func (o MysqlDbSystemSourcePtrOutput) DbSystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystemSource) *string {
		if v == nil {
			return nil
		}
		return v.DbSystemId
	}).(pulumi.StringPtrOutput)
}

// The date and time, as per RFC 3339, of the change up to which the new DB System shall be restored to, using a backup and logs from the original DB System. In case no point in time is specified, then this new DB System shall be restored up to the latest change recorded for the original DB System.
func (o MysqlDbSystemSourcePtrOutput) RecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystemSource) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// The specific source identifier. Use `BACKUP` for creating a new database by restoring from a backup. Use `IMPORTURL` for creating a new database from a URL Object Storage PAR.
func (o MysqlDbSystemSourcePtrOutput) SourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystemSource) *string {
		if v == nil {
			return nil
		}
		return &v.SourceType
	}).(pulumi.StringPtrOutput)
}

// The Pre-Authenticated Request (PAR) of a bucket/prefix or PAR of a @.manifest.json object from the Object Storage. Check [Using Pre-Authenticated Requests](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/usingpreauthenticatedrequests.htm) for information related to PAR creation. Please create PAR with "Permit object reads" access type and "Enable Object Listing" permission when using a bucket/prefix PAR. Please create PAR with "Permit object reads" access type when using a @.manifest.json object PAR.
func (o MysqlDbSystemSourcePtrOutput) SourceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlDbSystemSource) *string {
		if v == nil {
			return nil
		}
		return v.SourceUrl
	}).(pulumi.StringPtrOutput)
}

type ReplicaEncryptData struct {
	// Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
	KeyGenerationType *string `pulumi:"keyGenerationType"`
	// The OCID of the key to use.
	KeyId *string `pulumi:"keyId"`
}

// ReplicaEncryptDataInput is an input type that accepts ReplicaEncryptDataArgs and ReplicaEncryptDataOutput values.
// You can construct a concrete instance of `ReplicaEncryptDataInput` via:
//
//	ReplicaEncryptDataArgs{...}
type ReplicaEncryptDataInput interface {
	pulumi.Input

	ToReplicaEncryptDataOutput() ReplicaEncryptDataOutput
	ToReplicaEncryptDataOutputWithContext(context.Context) ReplicaEncryptDataOutput
}

type ReplicaEncryptDataArgs struct {
	// Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
	KeyGenerationType pulumi.StringPtrInput `pulumi:"keyGenerationType"`
	// The OCID of the key to use.
	KeyId pulumi.StringPtrInput `pulumi:"keyId"`
}

func (ReplicaEncryptDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicaEncryptData)(nil)).Elem()
}

func (i ReplicaEncryptDataArgs) ToReplicaEncryptDataOutput() ReplicaEncryptDataOutput {
	return i.ToReplicaEncryptDataOutputWithContext(context.Background())
}

func (i ReplicaEncryptDataArgs) ToReplicaEncryptDataOutputWithContext(ctx context.Context) ReplicaEncryptDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicaEncryptDataOutput)
}

// ReplicaEncryptDataArrayInput is an input type that accepts ReplicaEncryptDataArray and ReplicaEncryptDataArrayOutput values.
// You can construct a concrete instance of `ReplicaEncryptDataArrayInput` via:
//
//	ReplicaEncryptDataArray{ ReplicaEncryptDataArgs{...} }
type ReplicaEncryptDataArrayInput interface {
	pulumi.Input

	ToReplicaEncryptDataArrayOutput() ReplicaEncryptDataArrayOutput
	ToReplicaEncryptDataArrayOutputWithContext(context.Context) ReplicaEncryptDataArrayOutput
}

type ReplicaEncryptDataArray []ReplicaEncryptDataInput

func (ReplicaEncryptDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicaEncryptData)(nil)).Elem()
}

func (i ReplicaEncryptDataArray) ToReplicaEncryptDataArrayOutput() ReplicaEncryptDataArrayOutput {
	return i.ToReplicaEncryptDataArrayOutputWithContext(context.Background())
}

func (i ReplicaEncryptDataArray) ToReplicaEncryptDataArrayOutputWithContext(ctx context.Context) ReplicaEncryptDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicaEncryptDataArrayOutput)
}

type ReplicaEncryptDataOutput struct{ *pulumi.OutputState }

func (ReplicaEncryptDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicaEncryptData)(nil)).Elem()
}

func (o ReplicaEncryptDataOutput) ToReplicaEncryptDataOutput() ReplicaEncryptDataOutput {
	return o
}

func (o ReplicaEncryptDataOutput) ToReplicaEncryptDataOutputWithContext(ctx context.Context) ReplicaEncryptDataOutput {
	return o
}

// Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
func (o ReplicaEncryptDataOutput) KeyGenerationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicaEncryptData) *string { return v.KeyGenerationType }).(pulumi.StringPtrOutput)
}

// The OCID of the key to use.
func (o ReplicaEncryptDataOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicaEncryptData) *string { return v.KeyId }).(pulumi.StringPtrOutput)
}

type ReplicaEncryptDataArrayOutput struct{ *pulumi.OutputState }

func (ReplicaEncryptDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicaEncryptData)(nil)).Elem()
}

func (o ReplicaEncryptDataArrayOutput) ToReplicaEncryptDataArrayOutput() ReplicaEncryptDataArrayOutput {
	return o
}

func (o ReplicaEncryptDataArrayOutput) ToReplicaEncryptDataArrayOutputWithContext(ctx context.Context) ReplicaEncryptDataArrayOutput {
	return o
}

func (o ReplicaEncryptDataArrayOutput) Index(i pulumi.IntInput) ReplicaEncryptDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicaEncryptData {
		return vs[0].([]ReplicaEncryptData)[vs[1].(int)]
	}).(ReplicaEncryptDataOutput)
}

type ReplicaReplicaOverrides struct {
	// (Updatable) The OCID of the Configuration to be used by the read replica.
	ConfigurationId *string `pulumi:"configurationId"`
	// (Updatable) The MySQL version to be used by the read replica.
	MysqlVersion *string `pulumi:"mysqlVersion"`
	// (Updatable) Network Security Group OCIDs used for the VNIC attachment.
	NsgIds []string `pulumi:"nsgIds"`
	// (Updatable) The shape to be used by the read replica. The shape determines the resources allocated:  CPU cores and memory for VM shapes, CPU cores, memory and storage for non-VM (bare metal) shapes.  To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ShapeName *string `pulumi:"shapeName"`
}

// ReplicaReplicaOverridesInput is an input type that accepts ReplicaReplicaOverridesArgs and ReplicaReplicaOverridesOutput values.
// You can construct a concrete instance of `ReplicaReplicaOverridesInput` via:
//
//	ReplicaReplicaOverridesArgs{...}
type ReplicaReplicaOverridesInput interface {
	pulumi.Input

	ToReplicaReplicaOverridesOutput() ReplicaReplicaOverridesOutput
	ToReplicaReplicaOverridesOutputWithContext(context.Context) ReplicaReplicaOverridesOutput
}

type ReplicaReplicaOverridesArgs struct {
	// (Updatable) The OCID of the Configuration to be used by the read replica.
	ConfigurationId pulumi.StringPtrInput `pulumi:"configurationId"`
	// (Updatable) The MySQL version to be used by the read replica.
	MysqlVersion pulumi.StringPtrInput `pulumi:"mysqlVersion"`
	// (Updatable) Network Security Group OCIDs used for the VNIC attachment.
	NsgIds pulumi.StringArrayInput `pulumi:"nsgIds"`
	// (Updatable) The shape to be used by the read replica. The shape determines the resources allocated:  CPU cores and memory for VM shapes, CPU cores, memory and storage for non-VM (bare metal) shapes.  To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ShapeName pulumi.StringPtrInput `pulumi:"shapeName"`
}

func (ReplicaReplicaOverridesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicaReplicaOverrides)(nil)).Elem()
}

func (i ReplicaReplicaOverridesArgs) ToReplicaReplicaOverridesOutput() ReplicaReplicaOverridesOutput {
	return i.ToReplicaReplicaOverridesOutputWithContext(context.Background())
}

func (i ReplicaReplicaOverridesArgs) ToReplicaReplicaOverridesOutputWithContext(ctx context.Context) ReplicaReplicaOverridesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicaReplicaOverridesOutput)
}

func (i ReplicaReplicaOverridesArgs) ToReplicaReplicaOverridesPtrOutput() ReplicaReplicaOverridesPtrOutput {
	return i.ToReplicaReplicaOverridesPtrOutputWithContext(context.Background())
}

func (i ReplicaReplicaOverridesArgs) ToReplicaReplicaOverridesPtrOutputWithContext(ctx context.Context) ReplicaReplicaOverridesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicaReplicaOverridesOutput).ToReplicaReplicaOverridesPtrOutputWithContext(ctx)
}

// ReplicaReplicaOverridesPtrInput is an input type that accepts ReplicaReplicaOverridesArgs, ReplicaReplicaOverridesPtr and ReplicaReplicaOverridesPtrOutput values.
// You can construct a concrete instance of `ReplicaReplicaOverridesPtrInput` via:
//
//	        ReplicaReplicaOverridesArgs{...}
//
//	or:
//
//	        nil
type ReplicaReplicaOverridesPtrInput interface {
	pulumi.Input

	ToReplicaReplicaOverridesPtrOutput() ReplicaReplicaOverridesPtrOutput
	ToReplicaReplicaOverridesPtrOutputWithContext(context.Context) ReplicaReplicaOverridesPtrOutput
}

type replicaReplicaOverridesPtrType ReplicaReplicaOverridesArgs

func ReplicaReplicaOverridesPtr(v *ReplicaReplicaOverridesArgs) ReplicaReplicaOverridesPtrInput {
	return (*replicaReplicaOverridesPtrType)(v)
}

func (*replicaReplicaOverridesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicaReplicaOverrides)(nil)).Elem()
}

func (i *replicaReplicaOverridesPtrType) ToReplicaReplicaOverridesPtrOutput() ReplicaReplicaOverridesPtrOutput {
	return i.ToReplicaReplicaOverridesPtrOutputWithContext(context.Background())
}

func (i *replicaReplicaOverridesPtrType) ToReplicaReplicaOverridesPtrOutputWithContext(ctx context.Context) ReplicaReplicaOverridesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicaReplicaOverridesPtrOutput)
}

type ReplicaReplicaOverridesOutput struct{ *pulumi.OutputState }

func (ReplicaReplicaOverridesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicaReplicaOverrides)(nil)).Elem()
}

func (o ReplicaReplicaOverridesOutput) ToReplicaReplicaOverridesOutput() ReplicaReplicaOverridesOutput {
	return o
}

func (o ReplicaReplicaOverridesOutput) ToReplicaReplicaOverridesOutputWithContext(ctx context.Context) ReplicaReplicaOverridesOutput {
	return o
}

func (o ReplicaReplicaOverridesOutput) ToReplicaReplicaOverridesPtrOutput() ReplicaReplicaOverridesPtrOutput {
	return o.ToReplicaReplicaOverridesPtrOutputWithContext(context.Background())
}

func (o ReplicaReplicaOverridesOutput) ToReplicaReplicaOverridesPtrOutputWithContext(ctx context.Context) ReplicaReplicaOverridesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReplicaReplicaOverrides) *ReplicaReplicaOverrides {
		return &v
	}).(ReplicaReplicaOverridesPtrOutput)
}

// (Updatable) The OCID of the Configuration to be used by the read replica.
func (o ReplicaReplicaOverridesOutput) ConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicaReplicaOverrides) *string { return v.ConfigurationId }).(pulumi.StringPtrOutput)
}

// (Updatable) The MySQL version to be used by the read replica.
func (o ReplicaReplicaOverridesOutput) MysqlVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicaReplicaOverrides) *string { return v.MysqlVersion }).(pulumi.StringPtrOutput)
}

// (Updatable) Network Security Group OCIDs used for the VNIC attachment.
func (o ReplicaReplicaOverridesOutput) NsgIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReplicaReplicaOverrides) []string { return v.NsgIds }).(pulumi.StringArrayOutput)
}

// (Updatable) The shape to be used by the read replica. The shape determines the resources allocated:  CPU cores and memory for VM shapes, CPU cores, memory and storage for non-VM (bare metal) shapes.  To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ReplicaReplicaOverridesOutput) ShapeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicaReplicaOverrides) *string { return v.ShapeName }).(pulumi.StringPtrOutput)
}

type ReplicaReplicaOverridesPtrOutput struct{ *pulumi.OutputState }

func (ReplicaReplicaOverridesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicaReplicaOverrides)(nil)).Elem()
}

func (o ReplicaReplicaOverridesPtrOutput) ToReplicaReplicaOverridesPtrOutput() ReplicaReplicaOverridesPtrOutput {
	return o
}

func (o ReplicaReplicaOverridesPtrOutput) ToReplicaReplicaOverridesPtrOutputWithContext(ctx context.Context) ReplicaReplicaOverridesPtrOutput {
	return o
}

func (o ReplicaReplicaOverridesPtrOutput) Elem() ReplicaReplicaOverridesOutput {
	return o.ApplyT(func(v *ReplicaReplicaOverrides) ReplicaReplicaOverrides {
		if v != nil {
			return *v
		}
		var ret ReplicaReplicaOverrides
		return ret
	}).(ReplicaReplicaOverridesOutput)
}

// (Updatable) The OCID of the Configuration to be used by the read replica.
func (o ReplicaReplicaOverridesPtrOutput) ConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicaReplicaOverrides) *string {
		if v == nil {
			return nil
		}
		return v.ConfigurationId
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The MySQL version to be used by the read replica.
func (o ReplicaReplicaOverridesPtrOutput) MysqlVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicaReplicaOverrides) *string {
		if v == nil {
			return nil
		}
		return v.MysqlVersion
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Network Security Group OCIDs used for the VNIC attachment.
func (o ReplicaReplicaOverridesPtrOutput) NsgIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ReplicaReplicaOverrides) []string {
		if v == nil {
			return nil
		}
		return v.NsgIds
	}).(pulumi.StringArrayOutput)
}

// (Updatable) The shape to be used by the read replica. The shape determines the resources allocated:  CPU cores and memory for VM shapes, CPU cores, memory and storage for non-VM (bare metal) shapes.  To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ReplicaReplicaOverridesPtrOutput) ShapeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicaReplicaOverrides) *string {
		if v == nil {
			return nil
		}
		return v.ShapeName
	}).(pulumi.StringPtrOutput)
}

type ReplicaSecureConnection struct {
	// Select whether to use MySQL Database Service-managed certificate (SYSTEM) or your own certificate (BYOC).
	CertificateGenerationType *string `pulumi:"certificateGenerationType"`
	// The OCID of the certificate to use.
	CertificateId *string `pulumi:"certificateId"`
}

// ReplicaSecureConnectionInput is an input type that accepts ReplicaSecureConnectionArgs and ReplicaSecureConnectionOutput values.
// You can construct a concrete instance of `ReplicaSecureConnectionInput` via:
//
//	ReplicaSecureConnectionArgs{...}
type ReplicaSecureConnectionInput interface {
	pulumi.Input

	ToReplicaSecureConnectionOutput() ReplicaSecureConnectionOutput
	ToReplicaSecureConnectionOutputWithContext(context.Context) ReplicaSecureConnectionOutput
}

type ReplicaSecureConnectionArgs struct {
	// Select whether to use MySQL Database Service-managed certificate (SYSTEM) or your own certificate (BYOC).
	CertificateGenerationType pulumi.StringPtrInput `pulumi:"certificateGenerationType"`
	// The OCID of the certificate to use.
	CertificateId pulumi.StringPtrInput `pulumi:"certificateId"`
}

func (ReplicaSecureConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicaSecureConnection)(nil)).Elem()
}

func (i ReplicaSecureConnectionArgs) ToReplicaSecureConnectionOutput() ReplicaSecureConnectionOutput {
	return i.ToReplicaSecureConnectionOutputWithContext(context.Background())
}

func (i ReplicaSecureConnectionArgs) ToReplicaSecureConnectionOutputWithContext(ctx context.Context) ReplicaSecureConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicaSecureConnectionOutput)
}

// ReplicaSecureConnectionArrayInput is an input type that accepts ReplicaSecureConnectionArray and ReplicaSecureConnectionArrayOutput values.
// You can construct a concrete instance of `ReplicaSecureConnectionArrayInput` via:
//
//	ReplicaSecureConnectionArray{ ReplicaSecureConnectionArgs{...} }
type ReplicaSecureConnectionArrayInput interface {
	pulumi.Input

	ToReplicaSecureConnectionArrayOutput() ReplicaSecureConnectionArrayOutput
	ToReplicaSecureConnectionArrayOutputWithContext(context.Context) ReplicaSecureConnectionArrayOutput
}

type ReplicaSecureConnectionArray []ReplicaSecureConnectionInput

func (ReplicaSecureConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicaSecureConnection)(nil)).Elem()
}

func (i ReplicaSecureConnectionArray) ToReplicaSecureConnectionArrayOutput() ReplicaSecureConnectionArrayOutput {
	return i.ToReplicaSecureConnectionArrayOutputWithContext(context.Background())
}

func (i ReplicaSecureConnectionArray) ToReplicaSecureConnectionArrayOutputWithContext(ctx context.Context) ReplicaSecureConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicaSecureConnectionArrayOutput)
}

type ReplicaSecureConnectionOutput struct{ *pulumi.OutputState }

func (ReplicaSecureConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicaSecureConnection)(nil)).Elem()
}

func (o ReplicaSecureConnectionOutput) ToReplicaSecureConnectionOutput() ReplicaSecureConnectionOutput {
	return o
}

func (o ReplicaSecureConnectionOutput) ToReplicaSecureConnectionOutputWithContext(ctx context.Context) ReplicaSecureConnectionOutput {
	return o
}

// Select whether to use MySQL Database Service-managed certificate (SYSTEM) or your own certificate (BYOC).
func (o ReplicaSecureConnectionOutput) CertificateGenerationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicaSecureConnection) *string { return v.CertificateGenerationType }).(pulumi.StringPtrOutput)
}

// The OCID of the certificate to use.
func (o ReplicaSecureConnectionOutput) CertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicaSecureConnection) *string { return v.CertificateId }).(pulumi.StringPtrOutput)
}

type ReplicaSecureConnectionArrayOutput struct{ *pulumi.OutputState }

func (ReplicaSecureConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicaSecureConnection)(nil)).Elem()
}

func (o ReplicaSecureConnectionArrayOutput) ToReplicaSecureConnectionArrayOutput() ReplicaSecureConnectionArrayOutput {
	return o
}

func (o ReplicaSecureConnectionArrayOutput) ToReplicaSecureConnectionArrayOutputWithContext(ctx context.Context) ReplicaSecureConnectionArrayOutput {
	return o
}

func (o ReplicaSecureConnectionArrayOutput) Index(i pulumi.IntInput) ReplicaSecureConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicaSecureConnection {
		return vs[0].([]ReplicaSecureConnection)[vs[1].(int)]
	}).(ReplicaSecureConnectionOutput)
}

type GetChannelSource struct {
	// Specifies how the replication channel handles replicated transactions without an identifier, enabling replication from a source that does not use transaction-id-based replication to a replica that does.
	AnonymousTransactionsHandlings []GetChannelSourceAnonymousTransactionsHandling `pulumi:"anonymousTransactionsHandlings"`
	// The network address of the MySQL instance.
	Hostname string `pulumi:"hostname"`
	Password string `pulumi:"password"`
	// The port the source MySQL instance listens on.
	Port int `pulumi:"port"`
	// The specific source identifier.
	SourceType string `pulumi:"sourceType"`
	// The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
	SslCaCertificates []GetChannelSourceSslCaCertificate `pulumi:"sslCaCertificates"`
	// The SSL mode of the Channel.
	SslMode string `pulumi:"sslMode"`
	// The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
	Username string `pulumi:"username"`
}

// GetChannelSourceInput is an input type that accepts GetChannelSourceArgs and GetChannelSourceOutput values.
// You can construct a concrete instance of `GetChannelSourceInput` via:
//
//	GetChannelSourceArgs{...}
type GetChannelSourceInput interface {
	pulumi.Input

	ToGetChannelSourceOutput() GetChannelSourceOutput
	ToGetChannelSourceOutputWithContext(context.Context) GetChannelSourceOutput
}

type GetChannelSourceArgs struct {
	// Specifies how the replication channel handles replicated transactions without an identifier, enabling replication from a source that does not use transaction-id-based replication to a replica that does.
	AnonymousTransactionsHandlings GetChannelSourceAnonymousTransactionsHandlingArrayInput `pulumi:"anonymousTransactionsHandlings"`
	// The network address of the MySQL instance.
	Hostname pulumi.StringInput `pulumi:"hostname"`
	Password pulumi.StringInput `pulumi:"password"`
	// The port the source MySQL instance listens on.
	Port pulumi.IntInput `pulumi:"port"`
	// The specific source identifier.
	SourceType pulumi.StringInput `pulumi:"sourceType"`
	// The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
	SslCaCertificates GetChannelSourceSslCaCertificateArrayInput `pulumi:"sslCaCertificates"`
	// The SSL mode of the Channel.
	SslMode pulumi.StringInput `pulumi:"sslMode"`
	// The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetChannelSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelSource)(nil)).Elem()
}

func (i GetChannelSourceArgs) ToGetChannelSourceOutput() GetChannelSourceOutput {
	return i.ToGetChannelSourceOutputWithContext(context.Background())
}

func (i GetChannelSourceArgs) ToGetChannelSourceOutputWithContext(ctx context.Context) GetChannelSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelSourceOutput)
}

// GetChannelSourceArrayInput is an input type that accepts GetChannelSourceArray and GetChannelSourceArrayOutput values.
// You can construct a concrete instance of `GetChannelSourceArrayInput` via:
//
//	GetChannelSourceArray{ GetChannelSourceArgs{...} }
type GetChannelSourceArrayInput interface {
	pulumi.Input

	ToGetChannelSourceArrayOutput() GetChannelSourceArrayOutput
	ToGetChannelSourceArrayOutputWithContext(context.Context) GetChannelSourceArrayOutput
}

type GetChannelSourceArray []GetChannelSourceInput

func (GetChannelSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelSource)(nil)).Elem()
}

func (i GetChannelSourceArray) ToGetChannelSourceArrayOutput() GetChannelSourceArrayOutput {
	return i.ToGetChannelSourceArrayOutputWithContext(context.Background())
}

func (i GetChannelSourceArray) ToGetChannelSourceArrayOutputWithContext(ctx context.Context) GetChannelSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelSourceArrayOutput)
}

type GetChannelSourceOutput struct{ *pulumi.OutputState }

func (GetChannelSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelSource)(nil)).Elem()
}

func (o GetChannelSourceOutput) ToGetChannelSourceOutput() GetChannelSourceOutput {
	return o
}

func (o GetChannelSourceOutput) ToGetChannelSourceOutputWithContext(ctx context.Context) GetChannelSourceOutput {
	return o
}

// Specifies how the replication channel handles replicated transactions without an identifier, enabling replication from a source that does not use transaction-id-based replication to a replica that does.
func (o GetChannelSourceOutput) AnonymousTransactionsHandlings() GetChannelSourceAnonymousTransactionsHandlingArrayOutput {
	return o.ApplyT(func(v GetChannelSource) []GetChannelSourceAnonymousTransactionsHandling {
		return v.AnonymousTransactionsHandlings
	}).(GetChannelSourceAnonymousTransactionsHandlingArrayOutput)
}

// The network address of the MySQL instance.
func (o GetChannelSourceOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelSource) string { return v.Hostname }).(pulumi.StringOutput)
}

func (o GetChannelSourceOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelSource) string { return v.Password }).(pulumi.StringOutput)
}

// The port the source MySQL instance listens on.
func (o GetChannelSourceOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetChannelSource) int { return v.Port }).(pulumi.IntOutput)
}

// The specific source identifier.
func (o GetChannelSourceOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelSource) string { return v.SourceType }).(pulumi.StringOutput)
}

// The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
func (o GetChannelSourceOutput) SslCaCertificates() GetChannelSourceSslCaCertificateArrayOutput {
	return o.ApplyT(func(v GetChannelSource) []GetChannelSourceSslCaCertificate { return v.SslCaCertificates }).(GetChannelSourceSslCaCertificateArrayOutput)
}

// The SSL mode of the Channel.
func (o GetChannelSourceOutput) SslMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelSource) string { return v.SslMode }).(pulumi.StringOutput)
}

// The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
func (o GetChannelSourceOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelSource) string { return v.Username }).(pulumi.StringOutput)
}

type GetChannelSourceArrayOutput struct{ *pulumi.OutputState }

func (GetChannelSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelSource)(nil)).Elem()
}

func (o GetChannelSourceArrayOutput) ToGetChannelSourceArrayOutput() GetChannelSourceArrayOutput {
	return o
}

func (o GetChannelSourceArrayOutput) ToGetChannelSourceArrayOutputWithContext(ctx context.Context) GetChannelSourceArrayOutput {
	return o
}

func (o GetChannelSourceArrayOutput) Index(i pulumi.IntInput) GetChannelSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChannelSource {
		return vs[0].([]GetChannelSource)[vs[1].(int)]
	}).(GetChannelSourceOutput)
}

type GetChannelSourceAnonymousTransactionsHandling struct {
	// Specifies one of the coordinates (file) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
	LastConfiguredLogFilename string `pulumi:"lastConfiguredLogFilename"`
	// Specifies one of the coordinates (offset) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
	LastConfiguredLogOffset string `pulumi:"lastConfiguredLogOffset"`
	// Specifies how the replication channel handles anonymous transactions.
	Policy string `pulumi:"policy"`
	// The UUID that is used as a prefix when generating transaction identifiers for anonymous transactions coming from the source. You can change the UUID later.
	Uuid string `pulumi:"uuid"`
}

// GetChannelSourceAnonymousTransactionsHandlingInput is an input type that accepts GetChannelSourceAnonymousTransactionsHandlingArgs and GetChannelSourceAnonymousTransactionsHandlingOutput values.
// You can construct a concrete instance of `GetChannelSourceAnonymousTransactionsHandlingInput` via:
//
//	GetChannelSourceAnonymousTransactionsHandlingArgs{...}
type GetChannelSourceAnonymousTransactionsHandlingInput interface {
	pulumi.Input

	ToGetChannelSourceAnonymousTransactionsHandlingOutput() GetChannelSourceAnonymousTransactionsHandlingOutput
	ToGetChannelSourceAnonymousTransactionsHandlingOutputWithContext(context.Context) GetChannelSourceAnonymousTransactionsHandlingOutput
}

type GetChannelSourceAnonymousTransactionsHandlingArgs struct {
	// Specifies one of the coordinates (file) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
	LastConfiguredLogFilename pulumi.StringInput `pulumi:"lastConfiguredLogFilename"`
	// Specifies one of the coordinates (offset) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
	LastConfiguredLogOffset pulumi.StringInput `pulumi:"lastConfiguredLogOffset"`
	// Specifies how the replication channel handles anonymous transactions.
	Policy pulumi.StringInput `pulumi:"policy"`
	// The UUID that is used as a prefix when generating transaction identifiers for anonymous transactions coming from the source. You can change the UUID later.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (GetChannelSourceAnonymousTransactionsHandlingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelSourceAnonymousTransactionsHandling)(nil)).Elem()
}

func (i GetChannelSourceAnonymousTransactionsHandlingArgs) ToGetChannelSourceAnonymousTransactionsHandlingOutput() GetChannelSourceAnonymousTransactionsHandlingOutput {
	return i.ToGetChannelSourceAnonymousTransactionsHandlingOutputWithContext(context.Background())
}

func (i GetChannelSourceAnonymousTransactionsHandlingArgs) ToGetChannelSourceAnonymousTransactionsHandlingOutputWithContext(ctx context.Context) GetChannelSourceAnonymousTransactionsHandlingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelSourceAnonymousTransactionsHandlingOutput)
}

// GetChannelSourceAnonymousTransactionsHandlingArrayInput is an input type that accepts GetChannelSourceAnonymousTransactionsHandlingArray and GetChannelSourceAnonymousTransactionsHandlingArrayOutput values.
// You can construct a concrete instance of `GetChannelSourceAnonymousTransactionsHandlingArrayInput` via:
//
//	GetChannelSourceAnonymousTransactionsHandlingArray{ GetChannelSourceAnonymousTransactionsHandlingArgs{...} }
type GetChannelSourceAnonymousTransactionsHandlingArrayInput interface {
	pulumi.Input

	ToGetChannelSourceAnonymousTransactionsHandlingArrayOutput() GetChannelSourceAnonymousTransactionsHandlingArrayOutput
	ToGetChannelSourceAnonymousTransactionsHandlingArrayOutputWithContext(context.Context) GetChannelSourceAnonymousTransactionsHandlingArrayOutput
}

type GetChannelSourceAnonymousTransactionsHandlingArray []GetChannelSourceAnonymousTransactionsHandlingInput

func (GetChannelSourceAnonymousTransactionsHandlingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelSourceAnonymousTransactionsHandling)(nil)).Elem()
}

func (i GetChannelSourceAnonymousTransactionsHandlingArray) ToGetChannelSourceAnonymousTransactionsHandlingArrayOutput() GetChannelSourceAnonymousTransactionsHandlingArrayOutput {
	return i.ToGetChannelSourceAnonymousTransactionsHandlingArrayOutputWithContext(context.Background())
}

func (i GetChannelSourceAnonymousTransactionsHandlingArray) ToGetChannelSourceAnonymousTransactionsHandlingArrayOutputWithContext(ctx context.Context) GetChannelSourceAnonymousTransactionsHandlingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelSourceAnonymousTransactionsHandlingArrayOutput)
}

type GetChannelSourceAnonymousTransactionsHandlingOutput struct{ *pulumi.OutputState }

func (GetChannelSourceAnonymousTransactionsHandlingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelSourceAnonymousTransactionsHandling)(nil)).Elem()
}

func (o GetChannelSourceAnonymousTransactionsHandlingOutput) ToGetChannelSourceAnonymousTransactionsHandlingOutput() GetChannelSourceAnonymousTransactionsHandlingOutput {
	return o
}

func (o GetChannelSourceAnonymousTransactionsHandlingOutput) ToGetChannelSourceAnonymousTransactionsHandlingOutputWithContext(ctx context.Context) GetChannelSourceAnonymousTransactionsHandlingOutput {
	return o
}

// Specifies one of the coordinates (file) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
func (o GetChannelSourceAnonymousTransactionsHandlingOutput) LastConfiguredLogFilename() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelSourceAnonymousTransactionsHandling) string { return v.LastConfiguredLogFilename }).(pulumi.StringOutput)
}

// Specifies one of the coordinates (offset) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
func (o GetChannelSourceAnonymousTransactionsHandlingOutput) LastConfiguredLogOffset() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelSourceAnonymousTransactionsHandling) string { return v.LastConfiguredLogOffset }).(pulumi.StringOutput)
}

// Specifies how the replication channel handles anonymous transactions.
func (o GetChannelSourceAnonymousTransactionsHandlingOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelSourceAnonymousTransactionsHandling) string { return v.Policy }).(pulumi.StringOutput)
}

// The UUID that is used as a prefix when generating transaction identifiers for anonymous transactions coming from the source. You can change the UUID later.
func (o GetChannelSourceAnonymousTransactionsHandlingOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelSourceAnonymousTransactionsHandling) string { return v.Uuid }).(pulumi.StringOutput)
}

type GetChannelSourceAnonymousTransactionsHandlingArrayOutput struct{ *pulumi.OutputState }

func (GetChannelSourceAnonymousTransactionsHandlingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelSourceAnonymousTransactionsHandling)(nil)).Elem()
}

func (o GetChannelSourceAnonymousTransactionsHandlingArrayOutput) ToGetChannelSourceAnonymousTransactionsHandlingArrayOutput() GetChannelSourceAnonymousTransactionsHandlingArrayOutput {
	return o
}

func (o GetChannelSourceAnonymousTransactionsHandlingArrayOutput) ToGetChannelSourceAnonymousTransactionsHandlingArrayOutputWithContext(ctx context.Context) GetChannelSourceAnonymousTransactionsHandlingArrayOutput {
	return o
}

func (o GetChannelSourceAnonymousTransactionsHandlingArrayOutput) Index(i pulumi.IntInput) GetChannelSourceAnonymousTransactionsHandlingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChannelSourceAnonymousTransactionsHandling {
		return vs[0].([]GetChannelSourceAnonymousTransactionsHandling)[vs[1].(int)]
	}).(GetChannelSourceAnonymousTransactionsHandlingOutput)
}

type GetChannelSourceSslCaCertificate struct {
	// The type of CA certificate.
	CertificateType string `pulumi:"certificateType"`
	// The string containing the CA certificate in PEM format.
	Contents string `pulumi:"contents"`
}

// GetChannelSourceSslCaCertificateInput is an input type that accepts GetChannelSourceSslCaCertificateArgs and GetChannelSourceSslCaCertificateOutput values.
// You can construct a concrete instance of `GetChannelSourceSslCaCertificateInput` via:
//
//	GetChannelSourceSslCaCertificateArgs{...}
type GetChannelSourceSslCaCertificateInput interface {
	pulumi.Input

	ToGetChannelSourceSslCaCertificateOutput() GetChannelSourceSslCaCertificateOutput
	ToGetChannelSourceSslCaCertificateOutputWithContext(context.Context) GetChannelSourceSslCaCertificateOutput
}

type GetChannelSourceSslCaCertificateArgs struct {
	// The type of CA certificate.
	CertificateType pulumi.StringInput `pulumi:"certificateType"`
	// The string containing the CA certificate in PEM format.
	Contents pulumi.StringInput `pulumi:"contents"`
}

func (GetChannelSourceSslCaCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelSourceSslCaCertificate)(nil)).Elem()
}

func (i GetChannelSourceSslCaCertificateArgs) ToGetChannelSourceSslCaCertificateOutput() GetChannelSourceSslCaCertificateOutput {
	return i.ToGetChannelSourceSslCaCertificateOutputWithContext(context.Background())
}

func (i GetChannelSourceSslCaCertificateArgs) ToGetChannelSourceSslCaCertificateOutputWithContext(ctx context.Context) GetChannelSourceSslCaCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelSourceSslCaCertificateOutput)
}

// GetChannelSourceSslCaCertificateArrayInput is an input type that accepts GetChannelSourceSslCaCertificateArray and GetChannelSourceSslCaCertificateArrayOutput values.
// You can construct a concrete instance of `GetChannelSourceSslCaCertificateArrayInput` via:
//
//	GetChannelSourceSslCaCertificateArray{ GetChannelSourceSslCaCertificateArgs{...} }
type GetChannelSourceSslCaCertificateArrayInput interface {
	pulumi.Input

	ToGetChannelSourceSslCaCertificateArrayOutput() GetChannelSourceSslCaCertificateArrayOutput
	ToGetChannelSourceSslCaCertificateArrayOutputWithContext(context.Context) GetChannelSourceSslCaCertificateArrayOutput
}

type GetChannelSourceSslCaCertificateArray []GetChannelSourceSslCaCertificateInput

func (GetChannelSourceSslCaCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelSourceSslCaCertificate)(nil)).Elem()
}

func (i GetChannelSourceSslCaCertificateArray) ToGetChannelSourceSslCaCertificateArrayOutput() GetChannelSourceSslCaCertificateArrayOutput {
	return i.ToGetChannelSourceSslCaCertificateArrayOutputWithContext(context.Background())
}

func (i GetChannelSourceSslCaCertificateArray) ToGetChannelSourceSslCaCertificateArrayOutputWithContext(ctx context.Context) GetChannelSourceSslCaCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelSourceSslCaCertificateArrayOutput)
}

type GetChannelSourceSslCaCertificateOutput struct{ *pulumi.OutputState }

func (GetChannelSourceSslCaCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelSourceSslCaCertificate)(nil)).Elem()
}

func (o GetChannelSourceSslCaCertificateOutput) ToGetChannelSourceSslCaCertificateOutput() GetChannelSourceSslCaCertificateOutput {
	return o
}

func (o GetChannelSourceSslCaCertificateOutput) ToGetChannelSourceSslCaCertificateOutputWithContext(ctx context.Context) GetChannelSourceSslCaCertificateOutput {
	return o
}

// The type of CA certificate.
func (o GetChannelSourceSslCaCertificateOutput) CertificateType() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelSourceSslCaCertificate) string { return v.CertificateType }).(pulumi.StringOutput)
}

// The string containing the CA certificate in PEM format.
func (o GetChannelSourceSslCaCertificateOutput) Contents() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelSourceSslCaCertificate) string { return v.Contents }).(pulumi.StringOutput)
}

type GetChannelSourceSslCaCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetChannelSourceSslCaCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelSourceSslCaCertificate)(nil)).Elem()
}

func (o GetChannelSourceSslCaCertificateArrayOutput) ToGetChannelSourceSslCaCertificateArrayOutput() GetChannelSourceSslCaCertificateArrayOutput {
	return o
}

func (o GetChannelSourceSslCaCertificateArrayOutput) ToGetChannelSourceSslCaCertificateArrayOutputWithContext(ctx context.Context) GetChannelSourceSslCaCertificateArrayOutput {
	return o
}

func (o GetChannelSourceSslCaCertificateArrayOutput) Index(i pulumi.IntInput) GetChannelSourceSslCaCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChannelSourceSslCaCertificate {
		return vs[0].([]GetChannelSourceSslCaCertificate)[vs[1].(int)]
	}).(GetChannelSourceSslCaCertificateOutput)
}

type GetChannelTarget struct {
	// The username for the replication applier of the target MySQL DB System.
	ApplierUsername string `pulumi:"applierUsername"`
	// The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
	ChannelName string `pulumi:"channelName"`
	// The OCID of the source DB System.
	DbSystemId string `pulumi:"dbSystemId"`
	// Specifies the amount of time, in seconds, that the channel waits before  applying a transaction received from the source.
	DelayInSeconds int `pulumi:"delayInSeconds"`
	// Replication filter rules to be applied at the DB System Channel target.
	Filters []GetChannelTargetFilter `pulumi:"filters"`
	// Specifies how a replication channel handles the creation and alteration of tables  that do not have a primary key.
	TablesWithoutPrimaryKeyHandling string `pulumi:"tablesWithoutPrimaryKeyHandling"`
	// The specific target identifier.
	TargetType string `pulumi:"targetType"`
}

// GetChannelTargetInput is an input type that accepts GetChannelTargetArgs and GetChannelTargetOutput values.
// You can construct a concrete instance of `GetChannelTargetInput` via:
//
//	GetChannelTargetArgs{...}
type GetChannelTargetInput interface {
	pulumi.Input

	ToGetChannelTargetOutput() GetChannelTargetOutput
	ToGetChannelTargetOutputWithContext(context.Context) GetChannelTargetOutput
}

type GetChannelTargetArgs struct {
	// The username for the replication applier of the target MySQL DB System.
	ApplierUsername pulumi.StringInput `pulumi:"applierUsername"`
	// The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// The OCID of the source DB System.
	DbSystemId pulumi.StringInput `pulumi:"dbSystemId"`
	// Specifies the amount of time, in seconds, that the channel waits before  applying a transaction received from the source.
	DelayInSeconds pulumi.IntInput `pulumi:"delayInSeconds"`
	// Replication filter rules to be applied at the DB System Channel target.
	Filters GetChannelTargetFilterArrayInput `pulumi:"filters"`
	// Specifies how a replication channel handles the creation and alteration of tables  that do not have a primary key.
	TablesWithoutPrimaryKeyHandling pulumi.StringInput `pulumi:"tablesWithoutPrimaryKeyHandling"`
	// The specific target identifier.
	TargetType pulumi.StringInput `pulumi:"targetType"`
}

func (GetChannelTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelTarget)(nil)).Elem()
}

func (i GetChannelTargetArgs) ToGetChannelTargetOutput() GetChannelTargetOutput {
	return i.ToGetChannelTargetOutputWithContext(context.Background())
}

func (i GetChannelTargetArgs) ToGetChannelTargetOutputWithContext(ctx context.Context) GetChannelTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelTargetOutput)
}

// GetChannelTargetArrayInput is an input type that accepts GetChannelTargetArray and GetChannelTargetArrayOutput values.
// You can construct a concrete instance of `GetChannelTargetArrayInput` via:
//
//	GetChannelTargetArray{ GetChannelTargetArgs{...} }
type GetChannelTargetArrayInput interface {
	pulumi.Input

	ToGetChannelTargetArrayOutput() GetChannelTargetArrayOutput
	ToGetChannelTargetArrayOutputWithContext(context.Context) GetChannelTargetArrayOutput
}

type GetChannelTargetArray []GetChannelTargetInput

func (GetChannelTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelTarget)(nil)).Elem()
}

func (i GetChannelTargetArray) ToGetChannelTargetArrayOutput() GetChannelTargetArrayOutput {
	return i.ToGetChannelTargetArrayOutputWithContext(context.Background())
}

func (i GetChannelTargetArray) ToGetChannelTargetArrayOutputWithContext(ctx context.Context) GetChannelTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelTargetArrayOutput)
}

type GetChannelTargetOutput struct{ *pulumi.OutputState }

func (GetChannelTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelTarget)(nil)).Elem()
}

func (o GetChannelTargetOutput) ToGetChannelTargetOutput() GetChannelTargetOutput {
	return o
}

func (o GetChannelTargetOutput) ToGetChannelTargetOutputWithContext(ctx context.Context) GetChannelTargetOutput {
	return o
}

// The username for the replication applier of the target MySQL DB System.
func (o GetChannelTargetOutput) ApplierUsername() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelTarget) string { return v.ApplierUsername }).(pulumi.StringOutput)
}

// The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
func (o GetChannelTargetOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelTarget) string { return v.ChannelName }).(pulumi.StringOutput)
}

// The OCID of the source DB System.
func (o GetChannelTargetOutput) DbSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelTarget) string { return v.DbSystemId }).(pulumi.StringOutput)
}

// Specifies the amount of time, in seconds, that the channel waits before  applying a transaction received from the source.
func (o GetChannelTargetOutput) DelayInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetChannelTarget) int { return v.DelayInSeconds }).(pulumi.IntOutput)
}

// Replication filter rules to be applied at the DB System Channel target.
func (o GetChannelTargetOutput) Filters() GetChannelTargetFilterArrayOutput {
	return o.ApplyT(func(v GetChannelTarget) []GetChannelTargetFilter { return v.Filters }).(GetChannelTargetFilterArrayOutput)
}

// Specifies how a replication channel handles the creation and alteration of tables  that do not have a primary key.
func (o GetChannelTargetOutput) TablesWithoutPrimaryKeyHandling() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelTarget) string { return v.TablesWithoutPrimaryKeyHandling }).(pulumi.StringOutput)
}

// The specific target identifier.
func (o GetChannelTargetOutput) TargetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelTarget) string { return v.TargetType }).(pulumi.StringOutput)
}

type GetChannelTargetArrayOutput struct{ *pulumi.OutputState }

func (GetChannelTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelTarget)(nil)).Elem()
}

func (o GetChannelTargetArrayOutput) ToGetChannelTargetArrayOutput() GetChannelTargetArrayOutput {
	return o
}

func (o GetChannelTargetArrayOutput) ToGetChannelTargetArrayOutputWithContext(ctx context.Context) GetChannelTargetArrayOutput {
	return o
}

func (o GetChannelTargetArrayOutput) Index(i pulumi.IntInput) GetChannelTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChannelTarget {
		return vs[0].([]GetChannelTarget)[vs[1].(int)]
	}).(GetChannelTargetOutput)
}

type GetChannelTargetFilter struct {
	// The type of the filter rule.
	Type string `pulumi:"type"`
	// The body of the filter rule. This can represent a database, a table, or a database pair (represented as "db1->db2"). For more information, see [Replication Filtering Rules](https://dev.mysql.com/doc/refman/8.0/en/replication-rules.html).
	Value string `pulumi:"value"`
}

// GetChannelTargetFilterInput is an input type that accepts GetChannelTargetFilterArgs and GetChannelTargetFilterOutput values.
// You can construct a concrete instance of `GetChannelTargetFilterInput` via:
//
//	GetChannelTargetFilterArgs{...}
type GetChannelTargetFilterInput interface {
	pulumi.Input

	ToGetChannelTargetFilterOutput() GetChannelTargetFilterOutput
	ToGetChannelTargetFilterOutputWithContext(context.Context) GetChannelTargetFilterOutput
}

type GetChannelTargetFilterArgs struct {
	// The type of the filter rule.
	Type pulumi.StringInput `pulumi:"type"`
	// The body of the filter rule. This can represent a database, a table, or a database pair (represented as "db1->db2"). For more information, see [Replication Filtering Rules](https://dev.mysql.com/doc/refman/8.0/en/replication-rules.html).
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetChannelTargetFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelTargetFilter)(nil)).Elem()
}

func (i GetChannelTargetFilterArgs) ToGetChannelTargetFilterOutput() GetChannelTargetFilterOutput {
	return i.ToGetChannelTargetFilterOutputWithContext(context.Background())
}

func (i GetChannelTargetFilterArgs) ToGetChannelTargetFilterOutputWithContext(ctx context.Context) GetChannelTargetFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelTargetFilterOutput)
}

// GetChannelTargetFilterArrayInput is an input type that accepts GetChannelTargetFilterArray and GetChannelTargetFilterArrayOutput values.
// You can construct a concrete instance of `GetChannelTargetFilterArrayInput` via:
//
//	GetChannelTargetFilterArray{ GetChannelTargetFilterArgs{...} }
type GetChannelTargetFilterArrayInput interface {
	pulumi.Input

	ToGetChannelTargetFilterArrayOutput() GetChannelTargetFilterArrayOutput
	ToGetChannelTargetFilterArrayOutputWithContext(context.Context) GetChannelTargetFilterArrayOutput
}

type GetChannelTargetFilterArray []GetChannelTargetFilterInput

func (GetChannelTargetFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelTargetFilter)(nil)).Elem()
}

func (i GetChannelTargetFilterArray) ToGetChannelTargetFilterArrayOutput() GetChannelTargetFilterArrayOutput {
	return i.ToGetChannelTargetFilterArrayOutputWithContext(context.Background())
}

func (i GetChannelTargetFilterArray) ToGetChannelTargetFilterArrayOutputWithContext(ctx context.Context) GetChannelTargetFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelTargetFilterArrayOutput)
}

type GetChannelTargetFilterOutput struct{ *pulumi.OutputState }

func (GetChannelTargetFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelTargetFilter)(nil)).Elem()
}

func (o GetChannelTargetFilterOutput) ToGetChannelTargetFilterOutput() GetChannelTargetFilterOutput {
	return o
}

func (o GetChannelTargetFilterOutput) ToGetChannelTargetFilterOutputWithContext(ctx context.Context) GetChannelTargetFilterOutput {
	return o
}

// The type of the filter rule.
func (o GetChannelTargetFilterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelTargetFilter) string { return v.Type }).(pulumi.StringOutput)
}

// The body of the filter rule. This can represent a database, a table, or a database pair (represented as "db1->db2"). For more information, see [Replication Filtering Rules](https://dev.mysql.com/doc/refman/8.0/en/replication-rules.html).
func (o GetChannelTargetFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelTargetFilter) string { return v.Value }).(pulumi.StringOutput)
}

type GetChannelTargetFilterArrayOutput struct{ *pulumi.OutputState }

func (GetChannelTargetFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelTargetFilter)(nil)).Elem()
}

func (o GetChannelTargetFilterArrayOutput) ToGetChannelTargetFilterArrayOutput() GetChannelTargetFilterArrayOutput {
	return o
}

func (o GetChannelTargetFilterArrayOutput) ToGetChannelTargetFilterArrayOutputWithContext(ctx context.Context) GetChannelTargetFilterArrayOutput {
	return o
}

func (o GetChannelTargetFilterArrayOutput) Index(i pulumi.IntInput) GetChannelTargetFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChannelTargetFilter {
		return vs[0].([]GetChannelTargetFilter)[vs[1].(int)]
	}).(GetChannelTargetFilterOutput)
}

type GetChannelsChannel struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// User provided description of the Channel.
	Description string `pulumi:"description"`
	// A filter to return only the resource matching the given display name exactly.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The OCID of the Channel.
	Id string `pulumi:"id"`
	// If true, returns only Channels that are enabled. If false, returns only Channels that are disabled.
	IsEnabled bool `pulumi:"isEnabled"`
	// A message describing the state of the Channel.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Parameters detailing how to provision the source for the given Channel.
	Sources []GetChannelsChannelSource `pulumi:"sources"`
	// The LifecycleState of the Channel.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// Details about the Channel target.
	Targets []GetChannelsChannelTarget `pulumi:"targets"`
	// The date and time the Channel was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeCreated string `pulumi:"timeCreated"`
	// The time the Channel was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetChannelsChannelInput is an input type that accepts GetChannelsChannelArgs and GetChannelsChannelOutput values.
// You can construct a concrete instance of `GetChannelsChannelInput` via:
//
//	GetChannelsChannelArgs{...}
type GetChannelsChannelInput interface {
	pulumi.Input

	ToGetChannelsChannelOutput() GetChannelsChannelOutput
	ToGetChannelsChannelOutputWithContext(context.Context) GetChannelsChannelOutput
}

type GetChannelsChannelArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// User provided description of the Channel.
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only the resource matching the given display name exactly.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// The OCID of the Channel.
	Id pulumi.StringInput `pulumi:"id"`
	// If true, returns only Channels that are enabled. If false, returns only Channels that are disabled.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// A message describing the state of the Channel.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// Parameters detailing how to provision the source for the given Channel.
	Sources GetChannelsChannelSourceArrayInput `pulumi:"sources"`
	// The LifecycleState of the Channel.
	State pulumi.StringInput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput `pulumi:"systemTags"`
	// Details about the Channel target.
	Targets GetChannelsChannelTargetArrayInput `pulumi:"targets"`
	// The date and time the Channel was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the Channel was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetChannelsChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelsChannel)(nil)).Elem()
}

func (i GetChannelsChannelArgs) ToGetChannelsChannelOutput() GetChannelsChannelOutput {
	return i.ToGetChannelsChannelOutputWithContext(context.Background())
}

func (i GetChannelsChannelArgs) ToGetChannelsChannelOutputWithContext(ctx context.Context) GetChannelsChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelsChannelOutput)
}

// GetChannelsChannelArrayInput is an input type that accepts GetChannelsChannelArray and GetChannelsChannelArrayOutput values.
// You can construct a concrete instance of `GetChannelsChannelArrayInput` via:
//
//	GetChannelsChannelArray{ GetChannelsChannelArgs{...} }
type GetChannelsChannelArrayInput interface {
	pulumi.Input

	ToGetChannelsChannelArrayOutput() GetChannelsChannelArrayOutput
	ToGetChannelsChannelArrayOutputWithContext(context.Context) GetChannelsChannelArrayOutput
}

type GetChannelsChannelArray []GetChannelsChannelInput

func (GetChannelsChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelsChannel)(nil)).Elem()
}

func (i GetChannelsChannelArray) ToGetChannelsChannelArrayOutput() GetChannelsChannelArrayOutput {
	return i.ToGetChannelsChannelArrayOutputWithContext(context.Background())
}

func (i GetChannelsChannelArray) ToGetChannelsChannelArrayOutputWithContext(ctx context.Context) GetChannelsChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelsChannelArrayOutput)
}

type GetChannelsChannelOutput struct{ *pulumi.OutputState }

func (GetChannelsChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelsChannel)(nil)).Elem()
}

func (o GetChannelsChannelOutput) ToGetChannelsChannelOutput() GetChannelsChannelOutput {
	return o
}

func (o GetChannelsChannelOutput) ToGetChannelsChannelOutputWithContext(ctx context.Context) GetChannelsChannelOutput {
	return o
}

// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetChannelsChannelOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannel) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetChannelsChannelOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetChannelsChannel) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// User provided description of the Channel.
func (o GetChannelsChannelOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannel) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only the resource matching the given display name exactly.
func (o GetChannelsChannelOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannel) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetChannelsChannelOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetChannelsChannel) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The OCID of the Channel.
func (o GetChannelsChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannel) string { return v.Id }).(pulumi.StringOutput)
}

// If true, returns only Channels that are enabled. If false, returns only Channels that are disabled.
func (o GetChannelsChannelOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetChannelsChannel) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// A message describing the state of the Channel.
func (o GetChannelsChannelOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannel) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Parameters detailing how to provision the source for the given Channel.
func (o GetChannelsChannelOutput) Sources() GetChannelsChannelSourceArrayOutput {
	return o.ApplyT(func(v GetChannelsChannel) []GetChannelsChannelSource { return v.Sources }).(GetChannelsChannelSourceArrayOutput)
}

// The LifecycleState of the Channel.
func (o GetChannelsChannelOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannel) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetChannelsChannelOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetChannelsChannel) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// Details about the Channel target.
func (o GetChannelsChannelOutput) Targets() GetChannelsChannelTargetArrayOutput {
	return o.ApplyT(func(v GetChannelsChannel) []GetChannelsChannelTarget { return v.Targets }).(GetChannelsChannelTargetArrayOutput)
}

// The date and time the Channel was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o GetChannelsChannelOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannel) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the Channel was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o GetChannelsChannelOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannel) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetChannelsChannelArrayOutput struct{ *pulumi.OutputState }

func (GetChannelsChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelsChannel)(nil)).Elem()
}

func (o GetChannelsChannelArrayOutput) ToGetChannelsChannelArrayOutput() GetChannelsChannelArrayOutput {
	return o
}

func (o GetChannelsChannelArrayOutput) ToGetChannelsChannelArrayOutputWithContext(ctx context.Context) GetChannelsChannelArrayOutput {
	return o
}

func (o GetChannelsChannelArrayOutput) Index(i pulumi.IntInput) GetChannelsChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChannelsChannel {
		return vs[0].([]GetChannelsChannel)[vs[1].(int)]
	}).(GetChannelsChannelOutput)
}

type GetChannelsChannelSource struct {
	// Specifies how the replication channel handles replicated transactions without an identifier, enabling replication from a source that does not use transaction-id-based replication to a replica that does.
	AnonymousTransactionsHandlings []GetChannelsChannelSourceAnonymousTransactionsHandling `pulumi:"anonymousTransactionsHandlings"`
	// The network address of the MySQL instance.
	Hostname string `pulumi:"hostname"`
	Password string `pulumi:"password"`
	// The port the source MySQL instance listens on.
	Port int `pulumi:"port"`
	// The specific source identifier.
	SourceType string `pulumi:"sourceType"`
	// The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
	SslCaCertificates []GetChannelsChannelSourceSslCaCertificate `pulumi:"sslCaCertificates"`
	// The SSL mode of the Channel.
	SslMode string `pulumi:"sslMode"`
	// The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
	Username string `pulumi:"username"`
}

// GetChannelsChannelSourceInput is an input type that accepts GetChannelsChannelSourceArgs and GetChannelsChannelSourceOutput values.
// You can construct a concrete instance of `GetChannelsChannelSourceInput` via:
//
//	GetChannelsChannelSourceArgs{...}
type GetChannelsChannelSourceInput interface {
	pulumi.Input

	ToGetChannelsChannelSourceOutput() GetChannelsChannelSourceOutput
	ToGetChannelsChannelSourceOutputWithContext(context.Context) GetChannelsChannelSourceOutput
}

type GetChannelsChannelSourceArgs struct {
	// Specifies how the replication channel handles replicated transactions without an identifier, enabling replication from a source that does not use transaction-id-based replication to a replica that does.
	AnonymousTransactionsHandlings GetChannelsChannelSourceAnonymousTransactionsHandlingArrayInput `pulumi:"anonymousTransactionsHandlings"`
	// The network address of the MySQL instance.
	Hostname pulumi.StringInput `pulumi:"hostname"`
	Password pulumi.StringInput `pulumi:"password"`
	// The port the source MySQL instance listens on.
	Port pulumi.IntInput `pulumi:"port"`
	// The specific source identifier.
	SourceType pulumi.StringInput `pulumi:"sourceType"`
	// The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
	SslCaCertificates GetChannelsChannelSourceSslCaCertificateArrayInput `pulumi:"sslCaCertificates"`
	// The SSL mode of the Channel.
	SslMode pulumi.StringInput `pulumi:"sslMode"`
	// The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetChannelsChannelSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelsChannelSource)(nil)).Elem()
}

func (i GetChannelsChannelSourceArgs) ToGetChannelsChannelSourceOutput() GetChannelsChannelSourceOutput {
	return i.ToGetChannelsChannelSourceOutputWithContext(context.Background())
}

func (i GetChannelsChannelSourceArgs) ToGetChannelsChannelSourceOutputWithContext(ctx context.Context) GetChannelsChannelSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelsChannelSourceOutput)
}

// GetChannelsChannelSourceArrayInput is an input type that accepts GetChannelsChannelSourceArray and GetChannelsChannelSourceArrayOutput values.
// You can construct a concrete instance of `GetChannelsChannelSourceArrayInput` via:
//
//	GetChannelsChannelSourceArray{ GetChannelsChannelSourceArgs{...} }
type GetChannelsChannelSourceArrayInput interface {
	pulumi.Input

	ToGetChannelsChannelSourceArrayOutput() GetChannelsChannelSourceArrayOutput
	ToGetChannelsChannelSourceArrayOutputWithContext(context.Context) GetChannelsChannelSourceArrayOutput
}

type GetChannelsChannelSourceArray []GetChannelsChannelSourceInput

func (GetChannelsChannelSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelsChannelSource)(nil)).Elem()
}

func (i GetChannelsChannelSourceArray) ToGetChannelsChannelSourceArrayOutput() GetChannelsChannelSourceArrayOutput {
	return i.ToGetChannelsChannelSourceArrayOutputWithContext(context.Background())
}

func (i GetChannelsChannelSourceArray) ToGetChannelsChannelSourceArrayOutputWithContext(ctx context.Context) GetChannelsChannelSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelsChannelSourceArrayOutput)
}

type GetChannelsChannelSourceOutput struct{ *pulumi.OutputState }

func (GetChannelsChannelSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelsChannelSource)(nil)).Elem()
}

func (o GetChannelsChannelSourceOutput) ToGetChannelsChannelSourceOutput() GetChannelsChannelSourceOutput {
	return o
}

func (o GetChannelsChannelSourceOutput) ToGetChannelsChannelSourceOutputWithContext(ctx context.Context) GetChannelsChannelSourceOutput {
	return o
}

// Specifies how the replication channel handles replicated transactions without an identifier, enabling replication from a source that does not use transaction-id-based replication to a replica that does.
func (o GetChannelsChannelSourceOutput) AnonymousTransactionsHandlings() GetChannelsChannelSourceAnonymousTransactionsHandlingArrayOutput {
	return o.ApplyT(func(v GetChannelsChannelSource) []GetChannelsChannelSourceAnonymousTransactionsHandling {
		return v.AnonymousTransactionsHandlings
	}).(GetChannelsChannelSourceAnonymousTransactionsHandlingArrayOutput)
}

// The network address of the MySQL instance.
func (o GetChannelsChannelSourceOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannelSource) string { return v.Hostname }).(pulumi.StringOutput)
}

func (o GetChannelsChannelSourceOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannelSource) string { return v.Password }).(pulumi.StringOutput)
}

// The port the source MySQL instance listens on.
func (o GetChannelsChannelSourceOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetChannelsChannelSource) int { return v.Port }).(pulumi.IntOutput)
}

// The specific source identifier.
func (o GetChannelsChannelSourceOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannelSource) string { return v.SourceType }).(pulumi.StringOutput)
}

// The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
func (o GetChannelsChannelSourceOutput) SslCaCertificates() GetChannelsChannelSourceSslCaCertificateArrayOutput {
	return o.ApplyT(func(v GetChannelsChannelSource) []GetChannelsChannelSourceSslCaCertificate {
		return v.SslCaCertificates
	}).(GetChannelsChannelSourceSslCaCertificateArrayOutput)
}

// The SSL mode of the Channel.
func (o GetChannelsChannelSourceOutput) SslMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannelSource) string { return v.SslMode }).(pulumi.StringOutput)
}

// The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
func (o GetChannelsChannelSourceOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannelSource) string { return v.Username }).(pulumi.StringOutput)
}

type GetChannelsChannelSourceArrayOutput struct{ *pulumi.OutputState }

func (GetChannelsChannelSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelsChannelSource)(nil)).Elem()
}

func (o GetChannelsChannelSourceArrayOutput) ToGetChannelsChannelSourceArrayOutput() GetChannelsChannelSourceArrayOutput {
	return o
}

func (o GetChannelsChannelSourceArrayOutput) ToGetChannelsChannelSourceArrayOutputWithContext(ctx context.Context) GetChannelsChannelSourceArrayOutput {
	return o
}

func (o GetChannelsChannelSourceArrayOutput) Index(i pulumi.IntInput) GetChannelsChannelSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChannelsChannelSource {
		return vs[0].([]GetChannelsChannelSource)[vs[1].(int)]
	}).(GetChannelsChannelSourceOutput)
}

type GetChannelsChannelSourceAnonymousTransactionsHandling struct {
	// Specifies one of the coordinates (file) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
	LastConfiguredLogFilename string `pulumi:"lastConfiguredLogFilename"`
	// Specifies one of the coordinates (offset) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
	LastConfiguredLogOffset string `pulumi:"lastConfiguredLogOffset"`
	// Specifies how the replication channel handles anonymous transactions.
	Policy string `pulumi:"policy"`
	// The UUID that is used as a prefix when generating transaction identifiers for anonymous transactions coming from the source. You can change the UUID later.
	Uuid string `pulumi:"uuid"`
}

// GetChannelsChannelSourceAnonymousTransactionsHandlingInput is an input type that accepts GetChannelsChannelSourceAnonymousTransactionsHandlingArgs and GetChannelsChannelSourceAnonymousTransactionsHandlingOutput values.
// You can construct a concrete instance of `GetChannelsChannelSourceAnonymousTransactionsHandlingInput` via:
//
//	GetChannelsChannelSourceAnonymousTransactionsHandlingArgs{...}
type GetChannelsChannelSourceAnonymousTransactionsHandlingInput interface {
	pulumi.Input

	ToGetChannelsChannelSourceAnonymousTransactionsHandlingOutput() GetChannelsChannelSourceAnonymousTransactionsHandlingOutput
	ToGetChannelsChannelSourceAnonymousTransactionsHandlingOutputWithContext(context.Context) GetChannelsChannelSourceAnonymousTransactionsHandlingOutput
}

type GetChannelsChannelSourceAnonymousTransactionsHandlingArgs struct {
	// Specifies one of the coordinates (file) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
	LastConfiguredLogFilename pulumi.StringInput `pulumi:"lastConfiguredLogFilename"`
	// Specifies one of the coordinates (offset) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
	LastConfiguredLogOffset pulumi.StringInput `pulumi:"lastConfiguredLogOffset"`
	// Specifies how the replication channel handles anonymous transactions.
	Policy pulumi.StringInput `pulumi:"policy"`
	// The UUID that is used as a prefix when generating transaction identifiers for anonymous transactions coming from the source. You can change the UUID later.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (GetChannelsChannelSourceAnonymousTransactionsHandlingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelsChannelSourceAnonymousTransactionsHandling)(nil)).Elem()
}

func (i GetChannelsChannelSourceAnonymousTransactionsHandlingArgs) ToGetChannelsChannelSourceAnonymousTransactionsHandlingOutput() GetChannelsChannelSourceAnonymousTransactionsHandlingOutput {
	return i.ToGetChannelsChannelSourceAnonymousTransactionsHandlingOutputWithContext(context.Background())
}

func (i GetChannelsChannelSourceAnonymousTransactionsHandlingArgs) ToGetChannelsChannelSourceAnonymousTransactionsHandlingOutputWithContext(ctx context.Context) GetChannelsChannelSourceAnonymousTransactionsHandlingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelsChannelSourceAnonymousTransactionsHandlingOutput)
}

// GetChannelsChannelSourceAnonymousTransactionsHandlingArrayInput is an input type that accepts GetChannelsChannelSourceAnonymousTransactionsHandlingArray and GetChannelsChannelSourceAnonymousTransactionsHandlingArrayOutput values.
// You can construct a concrete instance of `GetChannelsChannelSourceAnonymousTransactionsHandlingArrayInput` via:
//
//	GetChannelsChannelSourceAnonymousTransactionsHandlingArray{ GetChannelsChannelSourceAnonymousTransactionsHandlingArgs{...} }
type GetChannelsChannelSourceAnonymousTransactionsHandlingArrayInput interface {
	pulumi.Input

	ToGetChannelsChannelSourceAnonymousTransactionsHandlingArrayOutput() GetChannelsChannelSourceAnonymousTransactionsHandlingArrayOutput
	ToGetChannelsChannelSourceAnonymousTransactionsHandlingArrayOutputWithContext(context.Context) GetChannelsChannelSourceAnonymousTransactionsHandlingArrayOutput
}

type GetChannelsChannelSourceAnonymousTransactionsHandlingArray []GetChannelsChannelSourceAnonymousTransactionsHandlingInput

func (GetChannelsChannelSourceAnonymousTransactionsHandlingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelsChannelSourceAnonymousTransactionsHandling)(nil)).Elem()
}

func (i GetChannelsChannelSourceAnonymousTransactionsHandlingArray) ToGetChannelsChannelSourceAnonymousTransactionsHandlingArrayOutput() GetChannelsChannelSourceAnonymousTransactionsHandlingArrayOutput {
	return i.ToGetChannelsChannelSourceAnonymousTransactionsHandlingArrayOutputWithContext(context.Background())
}

func (i GetChannelsChannelSourceAnonymousTransactionsHandlingArray) ToGetChannelsChannelSourceAnonymousTransactionsHandlingArrayOutputWithContext(ctx context.Context) GetChannelsChannelSourceAnonymousTransactionsHandlingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelsChannelSourceAnonymousTransactionsHandlingArrayOutput)
}

type GetChannelsChannelSourceAnonymousTransactionsHandlingOutput struct{ *pulumi.OutputState }

func (GetChannelsChannelSourceAnonymousTransactionsHandlingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelsChannelSourceAnonymousTransactionsHandling)(nil)).Elem()
}

func (o GetChannelsChannelSourceAnonymousTransactionsHandlingOutput) ToGetChannelsChannelSourceAnonymousTransactionsHandlingOutput() GetChannelsChannelSourceAnonymousTransactionsHandlingOutput {
	return o
}

func (o GetChannelsChannelSourceAnonymousTransactionsHandlingOutput) ToGetChannelsChannelSourceAnonymousTransactionsHandlingOutputWithContext(ctx context.Context) GetChannelsChannelSourceAnonymousTransactionsHandlingOutput {
	return o
}

// Specifies one of the coordinates (file) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
func (o GetChannelsChannelSourceAnonymousTransactionsHandlingOutput) LastConfiguredLogFilename() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannelSourceAnonymousTransactionsHandling) string {
		return v.LastConfiguredLogFilename
	}).(pulumi.StringOutput)
}

// Specifies one of the coordinates (offset) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
func (o GetChannelsChannelSourceAnonymousTransactionsHandlingOutput) LastConfiguredLogOffset() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannelSourceAnonymousTransactionsHandling) string { return v.LastConfiguredLogOffset }).(pulumi.StringOutput)
}

// Specifies how the replication channel handles anonymous transactions.
func (o GetChannelsChannelSourceAnonymousTransactionsHandlingOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannelSourceAnonymousTransactionsHandling) string { return v.Policy }).(pulumi.StringOutput)
}

// The UUID that is used as a prefix when generating transaction identifiers for anonymous transactions coming from the source. You can change the UUID later.
func (o GetChannelsChannelSourceAnonymousTransactionsHandlingOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannelSourceAnonymousTransactionsHandling) string { return v.Uuid }).(pulumi.StringOutput)
}

type GetChannelsChannelSourceAnonymousTransactionsHandlingArrayOutput struct{ *pulumi.OutputState }

func (GetChannelsChannelSourceAnonymousTransactionsHandlingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelsChannelSourceAnonymousTransactionsHandling)(nil)).Elem()
}

func (o GetChannelsChannelSourceAnonymousTransactionsHandlingArrayOutput) ToGetChannelsChannelSourceAnonymousTransactionsHandlingArrayOutput() GetChannelsChannelSourceAnonymousTransactionsHandlingArrayOutput {
	return o
}

func (o GetChannelsChannelSourceAnonymousTransactionsHandlingArrayOutput) ToGetChannelsChannelSourceAnonymousTransactionsHandlingArrayOutputWithContext(ctx context.Context) GetChannelsChannelSourceAnonymousTransactionsHandlingArrayOutput {
	return o
}

func (o GetChannelsChannelSourceAnonymousTransactionsHandlingArrayOutput) Index(i pulumi.IntInput) GetChannelsChannelSourceAnonymousTransactionsHandlingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChannelsChannelSourceAnonymousTransactionsHandling {
		return vs[0].([]GetChannelsChannelSourceAnonymousTransactionsHandling)[vs[1].(int)]
	}).(GetChannelsChannelSourceAnonymousTransactionsHandlingOutput)
}

type GetChannelsChannelSourceSslCaCertificate struct {
	// The type of CA certificate.
	CertificateType string `pulumi:"certificateType"`
	// The string containing the CA certificate in PEM format.
	Contents string `pulumi:"contents"`
}

// GetChannelsChannelSourceSslCaCertificateInput is an input type that accepts GetChannelsChannelSourceSslCaCertificateArgs and GetChannelsChannelSourceSslCaCertificateOutput values.
// You can construct a concrete instance of `GetChannelsChannelSourceSslCaCertificateInput` via:
//
//	GetChannelsChannelSourceSslCaCertificateArgs{...}
type GetChannelsChannelSourceSslCaCertificateInput interface {
	pulumi.Input

	ToGetChannelsChannelSourceSslCaCertificateOutput() GetChannelsChannelSourceSslCaCertificateOutput
	ToGetChannelsChannelSourceSslCaCertificateOutputWithContext(context.Context) GetChannelsChannelSourceSslCaCertificateOutput
}

type GetChannelsChannelSourceSslCaCertificateArgs struct {
	// The type of CA certificate.
	CertificateType pulumi.StringInput `pulumi:"certificateType"`
	// The string containing the CA certificate in PEM format.
	Contents pulumi.StringInput `pulumi:"contents"`
}

func (GetChannelsChannelSourceSslCaCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelsChannelSourceSslCaCertificate)(nil)).Elem()
}

func (i GetChannelsChannelSourceSslCaCertificateArgs) ToGetChannelsChannelSourceSslCaCertificateOutput() GetChannelsChannelSourceSslCaCertificateOutput {
	return i.ToGetChannelsChannelSourceSslCaCertificateOutputWithContext(context.Background())
}

func (i GetChannelsChannelSourceSslCaCertificateArgs) ToGetChannelsChannelSourceSslCaCertificateOutputWithContext(ctx context.Context) GetChannelsChannelSourceSslCaCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelsChannelSourceSslCaCertificateOutput)
}

// GetChannelsChannelSourceSslCaCertificateArrayInput is an input type that accepts GetChannelsChannelSourceSslCaCertificateArray and GetChannelsChannelSourceSslCaCertificateArrayOutput values.
// You can construct a concrete instance of `GetChannelsChannelSourceSslCaCertificateArrayInput` via:
//
//	GetChannelsChannelSourceSslCaCertificateArray{ GetChannelsChannelSourceSslCaCertificateArgs{...} }
type GetChannelsChannelSourceSslCaCertificateArrayInput interface {
	pulumi.Input

	ToGetChannelsChannelSourceSslCaCertificateArrayOutput() GetChannelsChannelSourceSslCaCertificateArrayOutput
	ToGetChannelsChannelSourceSslCaCertificateArrayOutputWithContext(context.Context) GetChannelsChannelSourceSslCaCertificateArrayOutput
}

type GetChannelsChannelSourceSslCaCertificateArray []GetChannelsChannelSourceSslCaCertificateInput

func (GetChannelsChannelSourceSslCaCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelsChannelSourceSslCaCertificate)(nil)).Elem()
}

func (i GetChannelsChannelSourceSslCaCertificateArray) ToGetChannelsChannelSourceSslCaCertificateArrayOutput() GetChannelsChannelSourceSslCaCertificateArrayOutput {
	return i.ToGetChannelsChannelSourceSslCaCertificateArrayOutputWithContext(context.Background())
}

func (i GetChannelsChannelSourceSslCaCertificateArray) ToGetChannelsChannelSourceSslCaCertificateArrayOutputWithContext(ctx context.Context) GetChannelsChannelSourceSslCaCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelsChannelSourceSslCaCertificateArrayOutput)
}

type GetChannelsChannelSourceSslCaCertificateOutput struct{ *pulumi.OutputState }

func (GetChannelsChannelSourceSslCaCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelsChannelSourceSslCaCertificate)(nil)).Elem()
}

func (o GetChannelsChannelSourceSslCaCertificateOutput) ToGetChannelsChannelSourceSslCaCertificateOutput() GetChannelsChannelSourceSslCaCertificateOutput {
	return o
}

func (o GetChannelsChannelSourceSslCaCertificateOutput) ToGetChannelsChannelSourceSslCaCertificateOutputWithContext(ctx context.Context) GetChannelsChannelSourceSslCaCertificateOutput {
	return o
}

// The type of CA certificate.
func (o GetChannelsChannelSourceSslCaCertificateOutput) CertificateType() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannelSourceSslCaCertificate) string { return v.CertificateType }).(pulumi.StringOutput)
}

// The string containing the CA certificate in PEM format.
func (o GetChannelsChannelSourceSslCaCertificateOutput) Contents() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannelSourceSslCaCertificate) string { return v.Contents }).(pulumi.StringOutput)
}

type GetChannelsChannelSourceSslCaCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetChannelsChannelSourceSslCaCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelsChannelSourceSslCaCertificate)(nil)).Elem()
}

func (o GetChannelsChannelSourceSslCaCertificateArrayOutput) ToGetChannelsChannelSourceSslCaCertificateArrayOutput() GetChannelsChannelSourceSslCaCertificateArrayOutput {
	return o
}

func (o GetChannelsChannelSourceSslCaCertificateArrayOutput) ToGetChannelsChannelSourceSslCaCertificateArrayOutputWithContext(ctx context.Context) GetChannelsChannelSourceSslCaCertificateArrayOutput {
	return o
}

func (o GetChannelsChannelSourceSslCaCertificateArrayOutput) Index(i pulumi.IntInput) GetChannelsChannelSourceSslCaCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChannelsChannelSourceSslCaCertificate {
		return vs[0].([]GetChannelsChannelSourceSslCaCertificate)[vs[1].(int)]
	}).(GetChannelsChannelSourceSslCaCertificateOutput)
}

type GetChannelsChannelTarget struct {
	// The username for the replication applier of the target MySQL DB System.
	ApplierUsername string `pulumi:"applierUsername"`
	// The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
	ChannelName string `pulumi:"channelName"`
	// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId string `pulumi:"dbSystemId"`
	// Specifies the amount of time, in seconds, that the channel waits before  applying a transaction received from the source.
	DelayInSeconds int `pulumi:"delayInSeconds"`
	// Replication filter rules to be applied at the DB System Channel target.
	Filters []GetChannelsChannelTargetFilter `pulumi:"filters"`
	// Specifies how a replication channel handles the creation and alteration of tables  that do not have a primary key.
	TablesWithoutPrimaryKeyHandling string `pulumi:"tablesWithoutPrimaryKeyHandling"`
	// The specific target identifier.
	TargetType string `pulumi:"targetType"`
}

// GetChannelsChannelTargetInput is an input type that accepts GetChannelsChannelTargetArgs and GetChannelsChannelTargetOutput values.
// You can construct a concrete instance of `GetChannelsChannelTargetInput` via:
//
//	GetChannelsChannelTargetArgs{...}
type GetChannelsChannelTargetInput interface {
	pulumi.Input

	ToGetChannelsChannelTargetOutput() GetChannelsChannelTargetOutput
	ToGetChannelsChannelTargetOutputWithContext(context.Context) GetChannelsChannelTargetOutput
}

type GetChannelsChannelTargetArgs struct {
	// The username for the replication applier of the target MySQL DB System.
	ApplierUsername pulumi.StringInput `pulumi:"applierUsername"`
	// The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId pulumi.StringInput `pulumi:"dbSystemId"`
	// Specifies the amount of time, in seconds, that the channel waits before  applying a transaction received from the source.
	DelayInSeconds pulumi.IntInput `pulumi:"delayInSeconds"`
	// Replication filter rules to be applied at the DB System Channel target.
	Filters GetChannelsChannelTargetFilterArrayInput `pulumi:"filters"`
	// Specifies how a replication channel handles the creation and alteration of tables  that do not have a primary key.
	TablesWithoutPrimaryKeyHandling pulumi.StringInput `pulumi:"tablesWithoutPrimaryKeyHandling"`
	// The specific target identifier.
	TargetType pulumi.StringInput `pulumi:"targetType"`
}

func (GetChannelsChannelTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelsChannelTarget)(nil)).Elem()
}

func (i GetChannelsChannelTargetArgs) ToGetChannelsChannelTargetOutput() GetChannelsChannelTargetOutput {
	return i.ToGetChannelsChannelTargetOutputWithContext(context.Background())
}

func (i GetChannelsChannelTargetArgs) ToGetChannelsChannelTargetOutputWithContext(ctx context.Context) GetChannelsChannelTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelsChannelTargetOutput)
}

// GetChannelsChannelTargetArrayInput is an input type that accepts GetChannelsChannelTargetArray and GetChannelsChannelTargetArrayOutput values.
// You can construct a concrete instance of `GetChannelsChannelTargetArrayInput` via:
//
//	GetChannelsChannelTargetArray{ GetChannelsChannelTargetArgs{...} }
type GetChannelsChannelTargetArrayInput interface {
	pulumi.Input

	ToGetChannelsChannelTargetArrayOutput() GetChannelsChannelTargetArrayOutput
	ToGetChannelsChannelTargetArrayOutputWithContext(context.Context) GetChannelsChannelTargetArrayOutput
}

type GetChannelsChannelTargetArray []GetChannelsChannelTargetInput

func (GetChannelsChannelTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelsChannelTarget)(nil)).Elem()
}

func (i GetChannelsChannelTargetArray) ToGetChannelsChannelTargetArrayOutput() GetChannelsChannelTargetArrayOutput {
	return i.ToGetChannelsChannelTargetArrayOutputWithContext(context.Background())
}

func (i GetChannelsChannelTargetArray) ToGetChannelsChannelTargetArrayOutputWithContext(ctx context.Context) GetChannelsChannelTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelsChannelTargetArrayOutput)
}

type GetChannelsChannelTargetOutput struct{ *pulumi.OutputState }

func (GetChannelsChannelTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelsChannelTarget)(nil)).Elem()
}

func (o GetChannelsChannelTargetOutput) ToGetChannelsChannelTargetOutput() GetChannelsChannelTargetOutput {
	return o
}

func (o GetChannelsChannelTargetOutput) ToGetChannelsChannelTargetOutputWithContext(ctx context.Context) GetChannelsChannelTargetOutput {
	return o
}

// The username for the replication applier of the target MySQL DB System.
func (o GetChannelsChannelTargetOutput) ApplierUsername() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannelTarget) string { return v.ApplierUsername }).(pulumi.StringOutput)
}

// The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
func (o GetChannelsChannelTargetOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannelTarget) string { return v.ChannelName }).(pulumi.StringOutput)
}

// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetChannelsChannelTargetOutput) DbSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannelTarget) string { return v.DbSystemId }).(pulumi.StringOutput)
}

// Specifies the amount of time, in seconds, that the channel waits before  applying a transaction received from the source.
func (o GetChannelsChannelTargetOutput) DelayInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetChannelsChannelTarget) int { return v.DelayInSeconds }).(pulumi.IntOutput)
}

// Replication filter rules to be applied at the DB System Channel target.
func (o GetChannelsChannelTargetOutput) Filters() GetChannelsChannelTargetFilterArrayOutput {
	return o.ApplyT(func(v GetChannelsChannelTarget) []GetChannelsChannelTargetFilter { return v.Filters }).(GetChannelsChannelTargetFilterArrayOutput)
}

// Specifies how a replication channel handles the creation and alteration of tables  that do not have a primary key.
func (o GetChannelsChannelTargetOutput) TablesWithoutPrimaryKeyHandling() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannelTarget) string { return v.TablesWithoutPrimaryKeyHandling }).(pulumi.StringOutput)
}

// The specific target identifier.
func (o GetChannelsChannelTargetOutput) TargetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannelTarget) string { return v.TargetType }).(pulumi.StringOutput)
}

type GetChannelsChannelTargetArrayOutput struct{ *pulumi.OutputState }

func (GetChannelsChannelTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelsChannelTarget)(nil)).Elem()
}

func (o GetChannelsChannelTargetArrayOutput) ToGetChannelsChannelTargetArrayOutput() GetChannelsChannelTargetArrayOutput {
	return o
}

func (o GetChannelsChannelTargetArrayOutput) ToGetChannelsChannelTargetArrayOutputWithContext(ctx context.Context) GetChannelsChannelTargetArrayOutput {
	return o
}

func (o GetChannelsChannelTargetArrayOutput) Index(i pulumi.IntInput) GetChannelsChannelTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChannelsChannelTarget {
		return vs[0].([]GetChannelsChannelTarget)[vs[1].(int)]
	}).(GetChannelsChannelTargetOutput)
}

type GetChannelsChannelTargetFilter struct {
	// The type of the filter rule.
	Type string `pulumi:"type"`
	// The body of the filter rule. This can represent a database, a table, or a database pair (represented as "db1->db2"). For more information, see [Replication Filtering Rules](https://dev.mysql.com/doc/refman/8.0/en/replication-rules.html).
	Value string `pulumi:"value"`
}

// GetChannelsChannelTargetFilterInput is an input type that accepts GetChannelsChannelTargetFilterArgs and GetChannelsChannelTargetFilterOutput values.
// You can construct a concrete instance of `GetChannelsChannelTargetFilterInput` via:
//
//	GetChannelsChannelTargetFilterArgs{...}
type GetChannelsChannelTargetFilterInput interface {
	pulumi.Input

	ToGetChannelsChannelTargetFilterOutput() GetChannelsChannelTargetFilterOutput
	ToGetChannelsChannelTargetFilterOutputWithContext(context.Context) GetChannelsChannelTargetFilterOutput
}

type GetChannelsChannelTargetFilterArgs struct {
	// The type of the filter rule.
	Type pulumi.StringInput `pulumi:"type"`
	// The body of the filter rule. This can represent a database, a table, or a database pair (represented as "db1->db2"). For more information, see [Replication Filtering Rules](https://dev.mysql.com/doc/refman/8.0/en/replication-rules.html).
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetChannelsChannelTargetFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelsChannelTargetFilter)(nil)).Elem()
}

func (i GetChannelsChannelTargetFilterArgs) ToGetChannelsChannelTargetFilterOutput() GetChannelsChannelTargetFilterOutput {
	return i.ToGetChannelsChannelTargetFilterOutputWithContext(context.Background())
}

func (i GetChannelsChannelTargetFilterArgs) ToGetChannelsChannelTargetFilterOutputWithContext(ctx context.Context) GetChannelsChannelTargetFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelsChannelTargetFilterOutput)
}

// GetChannelsChannelTargetFilterArrayInput is an input type that accepts GetChannelsChannelTargetFilterArray and GetChannelsChannelTargetFilterArrayOutput values.
// You can construct a concrete instance of `GetChannelsChannelTargetFilterArrayInput` via:
//
//	GetChannelsChannelTargetFilterArray{ GetChannelsChannelTargetFilterArgs{...} }
type GetChannelsChannelTargetFilterArrayInput interface {
	pulumi.Input

	ToGetChannelsChannelTargetFilterArrayOutput() GetChannelsChannelTargetFilterArrayOutput
	ToGetChannelsChannelTargetFilterArrayOutputWithContext(context.Context) GetChannelsChannelTargetFilterArrayOutput
}

type GetChannelsChannelTargetFilterArray []GetChannelsChannelTargetFilterInput

func (GetChannelsChannelTargetFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelsChannelTargetFilter)(nil)).Elem()
}

func (i GetChannelsChannelTargetFilterArray) ToGetChannelsChannelTargetFilterArrayOutput() GetChannelsChannelTargetFilterArrayOutput {
	return i.ToGetChannelsChannelTargetFilterArrayOutputWithContext(context.Background())
}

func (i GetChannelsChannelTargetFilterArray) ToGetChannelsChannelTargetFilterArrayOutputWithContext(ctx context.Context) GetChannelsChannelTargetFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelsChannelTargetFilterArrayOutput)
}

type GetChannelsChannelTargetFilterOutput struct{ *pulumi.OutputState }

func (GetChannelsChannelTargetFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelsChannelTargetFilter)(nil)).Elem()
}

func (o GetChannelsChannelTargetFilterOutput) ToGetChannelsChannelTargetFilterOutput() GetChannelsChannelTargetFilterOutput {
	return o
}

func (o GetChannelsChannelTargetFilterOutput) ToGetChannelsChannelTargetFilterOutputWithContext(ctx context.Context) GetChannelsChannelTargetFilterOutput {
	return o
}

// The type of the filter rule.
func (o GetChannelsChannelTargetFilterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannelTargetFilter) string { return v.Type }).(pulumi.StringOutput)
}

// The body of the filter rule. This can represent a database, a table, or a database pair (represented as "db1->db2"). For more information, see [Replication Filtering Rules](https://dev.mysql.com/doc/refman/8.0/en/replication-rules.html).
func (o GetChannelsChannelTargetFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsChannelTargetFilter) string { return v.Value }).(pulumi.StringOutput)
}

type GetChannelsChannelTargetFilterArrayOutput struct{ *pulumi.OutputState }

func (GetChannelsChannelTargetFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelsChannelTargetFilter)(nil)).Elem()
}

func (o GetChannelsChannelTargetFilterArrayOutput) ToGetChannelsChannelTargetFilterArrayOutput() GetChannelsChannelTargetFilterArrayOutput {
	return o
}

func (o GetChannelsChannelTargetFilterArrayOutput) ToGetChannelsChannelTargetFilterArrayOutputWithContext(ctx context.Context) GetChannelsChannelTargetFilterArrayOutput {
	return o
}

func (o GetChannelsChannelTargetFilterArrayOutput) Index(i pulumi.IntInput) GetChannelsChannelTargetFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChannelsChannelTargetFilter {
		return vs[0].([]GetChannelsChannelTargetFilter)[vs[1].(int)]
	}).(GetChannelsChannelTargetFilterOutput)
}

type GetChannelsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetChannelsFilterInput is an input type that accepts GetChannelsFilterArgs and GetChannelsFilterOutput values.
// You can construct a concrete instance of `GetChannelsFilterInput` via:
//
//	GetChannelsFilterArgs{...}
type GetChannelsFilterInput interface {
	pulumi.Input

	ToGetChannelsFilterOutput() GetChannelsFilterOutput
	ToGetChannelsFilterOutputWithContext(context.Context) GetChannelsFilterOutput
}

type GetChannelsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetChannelsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelsFilter)(nil)).Elem()
}

func (i GetChannelsFilterArgs) ToGetChannelsFilterOutput() GetChannelsFilterOutput {
	return i.ToGetChannelsFilterOutputWithContext(context.Background())
}

func (i GetChannelsFilterArgs) ToGetChannelsFilterOutputWithContext(ctx context.Context) GetChannelsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelsFilterOutput)
}

// GetChannelsFilterArrayInput is an input type that accepts GetChannelsFilterArray and GetChannelsFilterArrayOutput values.
// You can construct a concrete instance of `GetChannelsFilterArrayInput` via:
//
//	GetChannelsFilterArray{ GetChannelsFilterArgs{...} }
type GetChannelsFilterArrayInput interface {
	pulumi.Input

	ToGetChannelsFilterArrayOutput() GetChannelsFilterArrayOutput
	ToGetChannelsFilterArrayOutputWithContext(context.Context) GetChannelsFilterArrayOutput
}

type GetChannelsFilterArray []GetChannelsFilterInput

func (GetChannelsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelsFilter)(nil)).Elem()
}

func (i GetChannelsFilterArray) ToGetChannelsFilterArrayOutput() GetChannelsFilterArrayOutput {
	return i.ToGetChannelsFilterArrayOutputWithContext(context.Background())
}

func (i GetChannelsFilterArray) ToGetChannelsFilterArrayOutputWithContext(ctx context.Context) GetChannelsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChannelsFilterArrayOutput)
}

type GetChannelsFilterOutput struct{ *pulumi.OutputState }

func (GetChannelsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChannelsFilter)(nil)).Elem()
}

func (o GetChannelsFilterOutput) ToGetChannelsFilterOutput() GetChannelsFilterOutput {
	return o
}

func (o GetChannelsFilterOutput) ToGetChannelsFilterOutputWithContext(ctx context.Context) GetChannelsFilterOutput {
	return o
}

func (o GetChannelsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetChannelsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetChannelsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetChannelsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetChannelsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetChannelsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetChannelsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetChannelsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChannelsFilter)(nil)).Elem()
}

func (o GetChannelsFilterArrayOutput) ToGetChannelsFilterArrayOutput() GetChannelsFilterArrayOutput {
	return o
}

func (o GetChannelsFilterArrayOutput) ToGetChannelsFilterArrayOutputWithContext(ctx context.Context) GetChannelsFilterArrayOutput {
	return o
}

func (o GetChannelsFilterArrayOutput) Index(i pulumi.IntInput) GetChannelsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChannelsFilter {
		return vs[0].([]GetChannelsFilter)[vs[1].(int)]
	}).(GetChannelsFilterOutput)
}

type GetHeatWaveClusterClusterNode struct {
	// The ID of the node within MySQL HeatWave cluster.
	NodeId string `pulumi:"nodeId"`
	// The current state of the HeatWave cluster.
	State string `pulumi:"state"`
	// The date and time the HeatWave cluster was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeCreated string `pulumi:"timeCreated"`
	// The time the HeatWave cluster was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetHeatWaveClusterClusterNodeInput is an input type that accepts GetHeatWaveClusterClusterNodeArgs and GetHeatWaveClusterClusterNodeOutput values.
// You can construct a concrete instance of `GetHeatWaveClusterClusterNodeInput` via:
//
//	GetHeatWaveClusterClusterNodeArgs{...}
type GetHeatWaveClusterClusterNodeInput interface {
	pulumi.Input

	ToGetHeatWaveClusterClusterNodeOutput() GetHeatWaveClusterClusterNodeOutput
	ToGetHeatWaveClusterClusterNodeOutputWithContext(context.Context) GetHeatWaveClusterClusterNodeOutput
}

type GetHeatWaveClusterClusterNodeArgs struct {
	// The ID of the node within MySQL HeatWave cluster.
	NodeId pulumi.StringInput `pulumi:"nodeId"`
	// The current state of the HeatWave cluster.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the HeatWave cluster was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the HeatWave cluster was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetHeatWaveClusterClusterNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHeatWaveClusterClusterNode)(nil)).Elem()
}

func (i GetHeatWaveClusterClusterNodeArgs) ToGetHeatWaveClusterClusterNodeOutput() GetHeatWaveClusterClusterNodeOutput {
	return i.ToGetHeatWaveClusterClusterNodeOutputWithContext(context.Background())
}

func (i GetHeatWaveClusterClusterNodeArgs) ToGetHeatWaveClusterClusterNodeOutputWithContext(ctx context.Context) GetHeatWaveClusterClusterNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHeatWaveClusterClusterNodeOutput)
}

// GetHeatWaveClusterClusterNodeArrayInput is an input type that accepts GetHeatWaveClusterClusterNodeArray and GetHeatWaveClusterClusterNodeArrayOutput values.
// You can construct a concrete instance of `GetHeatWaveClusterClusterNodeArrayInput` via:
//
//	GetHeatWaveClusterClusterNodeArray{ GetHeatWaveClusterClusterNodeArgs{...} }
type GetHeatWaveClusterClusterNodeArrayInput interface {
	pulumi.Input

	ToGetHeatWaveClusterClusterNodeArrayOutput() GetHeatWaveClusterClusterNodeArrayOutput
	ToGetHeatWaveClusterClusterNodeArrayOutputWithContext(context.Context) GetHeatWaveClusterClusterNodeArrayOutput
}

type GetHeatWaveClusterClusterNodeArray []GetHeatWaveClusterClusterNodeInput

func (GetHeatWaveClusterClusterNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHeatWaveClusterClusterNode)(nil)).Elem()
}

func (i GetHeatWaveClusterClusterNodeArray) ToGetHeatWaveClusterClusterNodeArrayOutput() GetHeatWaveClusterClusterNodeArrayOutput {
	return i.ToGetHeatWaveClusterClusterNodeArrayOutputWithContext(context.Background())
}

func (i GetHeatWaveClusterClusterNodeArray) ToGetHeatWaveClusterClusterNodeArrayOutputWithContext(ctx context.Context) GetHeatWaveClusterClusterNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHeatWaveClusterClusterNodeArrayOutput)
}

type GetHeatWaveClusterClusterNodeOutput struct{ *pulumi.OutputState }

func (GetHeatWaveClusterClusterNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHeatWaveClusterClusterNode)(nil)).Elem()
}

func (o GetHeatWaveClusterClusterNodeOutput) ToGetHeatWaveClusterClusterNodeOutput() GetHeatWaveClusterClusterNodeOutput {
	return o
}

func (o GetHeatWaveClusterClusterNodeOutput) ToGetHeatWaveClusterClusterNodeOutputWithContext(ctx context.Context) GetHeatWaveClusterClusterNodeOutput {
	return o
}

// The ID of the node within MySQL HeatWave cluster.
func (o GetHeatWaveClusterClusterNodeOutput) NodeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHeatWaveClusterClusterNode) string { return v.NodeId }).(pulumi.StringOutput)
}

// The current state of the HeatWave cluster.
func (o GetHeatWaveClusterClusterNodeOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetHeatWaveClusterClusterNode) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the HeatWave cluster was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o GetHeatWaveClusterClusterNodeOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetHeatWaveClusterClusterNode) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the HeatWave cluster was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o GetHeatWaveClusterClusterNodeOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetHeatWaveClusterClusterNode) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetHeatWaveClusterClusterNodeArrayOutput struct{ *pulumi.OutputState }

func (GetHeatWaveClusterClusterNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHeatWaveClusterClusterNode)(nil)).Elem()
}

func (o GetHeatWaveClusterClusterNodeArrayOutput) ToGetHeatWaveClusterClusterNodeArrayOutput() GetHeatWaveClusterClusterNodeArrayOutput {
	return o
}

func (o GetHeatWaveClusterClusterNodeArrayOutput) ToGetHeatWaveClusterClusterNodeArrayOutputWithContext(ctx context.Context) GetHeatWaveClusterClusterNodeArrayOutput {
	return o
}

func (o GetHeatWaveClusterClusterNodeArrayOutput) Index(i pulumi.IntInput) GetHeatWaveClusterClusterNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHeatWaveClusterClusterNode {
		return vs[0].([]GetHeatWaveClusterClusterNode)[vs[1].(int)]
	}).(GetHeatWaveClusterClusterNodeOutput)
}

type GetMysqlBackupDbSystemSnapshot struct {
	// The username for the administrative user.
	AdminUsername string `pulumi:"adminUsername"`
	// The Availability Domain where the primary DB System should be located.
	AvailabilityDomain string `pulumi:"availabilityDomain"`
	// The Backup policy for the DB System.
	BackupPolicies []GetMysqlBackupDbSystemSnapshotBackupPolicy `pulumi:"backupPolicies"`
	// The OCID of the compartment the DB System belongs in.
	CompartmentId string `pulumi:"compartmentId"`
	// The OCID of the Configuration to be used for Instances in this DB System.
	ConfigurationId string `pulumi:"configurationId"`
	// Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
	CrashRecovery string `pulumi:"crashRecovery"`
	// DEPRECATED: User specified size of the data volume. May be less than current allocatedStorageSizeInGBs. Replaced by dataStorage.dataStorageSizeInGBs.
	DataStorageSizeInGb int `pulumi:"dataStorageSizeInGb"`
	// Data Storage information.
	DataStorages []GetMysqlBackupDbSystemSnapshotDataStorage `pulumi:"dataStorages"`
	// Whether to enable monitoring via the Database Management service.
	DatabaseManagement string `pulumi:"databaseManagement"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// The Deletion policy for the DB System.
	DeletionPolicies []GetMysqlBackupDbSystemSnapshotDeletionPolicy `pulumi:"deletionPolicies"`
	// A user-supplied description for the backup.
	Description string `pulumi:"description"`
	// A user-supplied display name for the backup.
	DisplayName string `pulumi:"displayName"`
	// Encrypt data details.
	EncryptDatas []GetMysqlBackupDbSystemSnapshotEncryptData `pulumi:"encryptDatas"`
	// The network endpoints available for this DB System.
	Endpoints []GetMysqlBackupDbSystemSnapshotEndpoint `pulumi:"endpoints"`
	// The name of the Fault Domain the DB System is located in.
	FaultDomain string `pulumi:"faultDomain"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The hostname for the primary endpoint of the DB System. Used for DNS. The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com"). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
	HostnameLabel string `pulumi:"hostnameLabel"`
	// OCID of the backup itself
	Id string `pulumi:"id"`
	// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
	IpAddress string `pulumi:"ipAddress"`
	// Specifies if the DB System is highly available.
	IsHighlyAvailable bool `pulumi:"isHighlyAvailable"`
	// The Maintenance Policy for the DB System or Read Replica that this model is included in.
	Maintenances []GetMysqlBackupDbSystemSnapshotMaintenance `pulumi:"maintenances"`
	// The MySQL server version of the DB System used for backup.
	MysqlVersion string `pulumi:"mysqlVersion"`
	// Network Security Group OCIDs used for the VNIC attachment.
	NsgIds []string `pulumi:"nsgIds"`
	// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
	Port int `pulumi:"port"`
	// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
	PortX int `pulumi:"portX"`
	// The read endpoint of a DB System.
	ReadEndpoints []GetMysqlBackupDbSystemSnapshotReadEndpoint `pulumi:"readEndpoints"`
	// The region identifier of the region where the DB system exists. For more information, please see [Regions and Availability Domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm).
	Region string `pulumi:"region"`
	// REST configuration details.
	Rests []GetMysqlBackupDbSystemSnapshotRest `pulumi:"rests"`
	// Secure connection configuration details.
	SecureConnections []GetMysqlBackupDbSystemSnapshotSecureConnection `pulumi:"secureConnections"`
	// The shape of the DB System instance used for backup.
	ShapeName string `pulumi:"shapeName"`
	// The OCID of the subnet the DB System is associated with.
	SubnetId string `pulumi:"subnetId"`
}

// GetMysqlBackupDbSystemSnapshotInput is an input type that accepts GetMysqlBackupDbSystemSnapshotArgs and GetMysqlBackupDbSystemSnapshotOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotInput` via:
//
//	GetMysqlBackupDbSystemSnapshotArgs{...}
type GetMysqlBackupDbSystemSnapshotInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotOutput() GetMysqlBackupDbSystemSnapshotOutput
	ToGetMysqlBackupDbSystemSnapshotOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotOutput
}

type GetMysqlBackupDbSystemSnapshotArgs struct {
	// The username for the administrative user.
	AdminUsername pulumi.StringInput `pulumi:"adminUsername"`
	// The Availability Domain where the primary DB System should be located.
	AvailabilityDomain pulumi.StringInput `pulumi:"availabilityDomain"`
	// The Backup policy for the DB System.
	BackupPolicies GetMysqlBackupDbSystemSnapshotBackupPolicyArrayInput `pulumi:"backupPolicies"`
	// The OCID of the compartment the DB System belongs in.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The OCID of the Configuration to be used for Instances in this DB System.
	ConfigurationId pulumi.StringInput `pulumi:"configurationId"`
	// Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
	CrashRecovery pulumi.StringInput `pulumi:"crashRecovery"`
	// DEPRECATED: User specified size of the data volume. May be less than current allocatedStorageSizeInGBs. Replaced by dataStorage.dataStorageSizeInGBs.
	DataStorageSizeInGb pulumi.IntInput `pulumi:"dataStorageSizeInGb"`
	// Data Storage information.
	DataStorages GetMysqlBackupDbSystemSnapshotDataStorageArrayInput `pulumi:"dataStorages"`
	// Whether to enable monitoring via the Database Management service.
	DatabaseManagement pulumi.StringInput `pulumi:"databaseManagement"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// The Deletion policy for the DB System.
	DeletionPolicies GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayInput `pulumi:"deletionPolicies"`
	// A user-supplied description for the backup.
	Description pulumi.StringInput `pulumi:"description"`
	// A user-supplied display name for the backup.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Encrypt data details.
	EncryptDatas GetMysqlBackupDbSystemSnapshotEncryptDataArrayInput `pulumi:"encryptDatas"`
	// The network endpoints available for this DB System.
	Endpoints GetMysqlBackupDbSystemSnapshotEndpointArrayInput `pulumi:"endpoints"`
	// The name of the Fault Domain the DB System is located in.
	FaultDomain pulumi.StringInput `pulumi:"faultDomain"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// The hostname for the primary endpoint of the DB System. Used for DNS. The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com"). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
	HostnameLabel pulumi.StringInput `pulumi:"hostnameLabel"`
	// OCID of the backup itself
	Id pulumi.StringInput `pulumi:"id"`
	// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// Specifies if the DB System is highly available.
	IsHighlyAvailable pulumi.BoolInput `pulumi:"isHighlyAvailable"`
	// The Maintenance Policy for the DB System or Read Replica that this model is included in.
	Maintenances GetMysqlBackupDbSystemSnapshotMaintenanceArrayInput `pulumi:"maintenances"`
	// The MySQL server version of the DB System used for backup.
	MysqlVersion pulumi.StringInput `pulumi:"mysqlVersion"`
	// Network Security Group OCIDs used for the VNIC attachment.
	NsgIds pulumi.StringArrayInput `pulumi:"nsgIds"`
	// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
	Port pulumi.IntInput `pulumi:"port"`
	// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
	PortX pulumi.IntInput `pulumi:"portX"`
	// The read endpoint of a DB System.
	ReadEndpoints GetMysqlBackupDbSystemSnapshotReadEndpointArrayInput `pulumi:"readEndpoints"`
	// The region identifier of the region where the DB system exists. For more information, please see [Regions and Availability Domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm).
	Region pulumi.StringInput `pulumi:"region"`
	// REST configuration details.
	Rests GetMysqlBackupDbSystemSnapshotRestArrayInput `pulumi:"rests"`
	// Secure connection configuration details.
	SecureConnections GetMysqlBackupDbSystemSnapshotSecureConnectionArrayInput `pulumi:"secureConnections"`
	// The shape of the DB System instance used for backup.
	ShapeName pulumi.StringInput `pulumi:"shapeName"`
	// The OCID of the subnet the DB System is associated with.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (GetMysqlBackupDbSystemSnapshotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshot)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotArgs) ToGetMysqlBackupDbSystemSnapshotOutput() GetMysqlBackupDbSystemSnapshotOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotArgs) ToGetMysqlBackupDbSystemSnapshotOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotOutput)
}

// GetMysqlBackupDbSystemSnapshotArrayInput is an input type that accepts GetMysqlBackupDbSystemSnapshotArray and GetMysqlBackupDbSystemSnapshotArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotArrayInput` via:
//
//	GetMysqlBackupDbSystemSnapshotArray{ GetMysqlBackupDbSystemSnapshotArgs{...} }
type GetMysqlBackupDbSystemSnapshotArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotArrayOutput() GetMysqlBackupDbSystemSnapshotArrayOutput
	ToGetMysqlBackupDbSystemSnapshotArrayOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotArrayOutput
}

type GetMysqlBackupDbSystemSnapshotArray []GetMysqlBackupDbSystemSnapshotInput

func (GetMysqlBackupDbSystemSnapshotArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshot)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotArray) ToGetMysqlBackupDbSystemSnapshotArrayOutput() GetMysqlBackupDbSystemSnapshotArrayOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotArray) ToGetMysqlBackupDbSystemSnapshotArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotArrayOutput)
}

type GetMysqlBackupDbSystemSnapshotOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshot)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotOutput) ToGetMysqlBackupDbSystemSnapshotOutput() GetMysqlBackupDbSystemSnapshotOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotOutput) ToGetMysqlBackupDbSystemSnapshotOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotOutput {
	return o
}

// The username for the administrative user.
func (o GetMysqlBackupDbSystemSnapshotOutput) AdminUsername() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) string { return v.AdminUsername }).(pulumi.StringOutput)
}

// The Availability Domain where the primary DB System should be located.
func (o GetMysqlBackupDbSystemSnapshotOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) string { return v.AvailabilityDomain }).(pulumi.StringOutput)
}

// The Backup policy for the DB System.
func (o GetMysqlBackupDbSystemSnapshotOutput) BackupPolicies() GetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) []GetMysqlBackupDbSystemSnapshotBackupPolicy {
		return v.BackupPolicies
	}).(GetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput)
}

// The OCID of the compartment the DB System belongs in.
func (o GetMysqlBackupDbSystemSnapshotOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The OCID of the Configuration to be used for Instances in this DB System.
func (o GetMysqlBackupDbSystemSnapshotOutput) ConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) string { return v.ConfigurationId }).(pulumi.StringOutput)
}

// Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
func (o GetMysqlBackupDbSystemSnapshotOutput) CrashRecovery() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) string { return v.CrashRecovery }).(pulumi.StringOutput)
}

// DEPRECATED: User specified size of the data volume. May be less than current allocatedStorageSizeInGBs. Replaced by dataStorage.dataStorageSizeInGBs.
func (o GetMysqlBackupDbSystemSnapshotOutput) DataStorageSizeInGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) int { return v.DataStorageSizeInGb }).(pulumi.IntOutput)
}

// Data Storage information.
func (o GetMysqlBackupDbSystemSnapshotOutput) DataStorages() GetMysqlBackupDbSystemSnapshotDataStorageArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) []GetMysqlBackupDbSystemSnapshotDataStorage {
		return v.DataStorages
	}).(GetMysqlBackupDbSystemSnapshotDataStorageArrayOutput)
}

// Whether to enable monitoring via the Database Management service.
func (o GetMysqlBackupDbSystemSnapshotOutput) DatabaseManagement() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) string { return v.DatabaseManagement }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetMysqlBackupDbSystemSnapshotOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// The Deletion policy for the DB System.
func (o GetMysqlBackupDbSystemSnapshotOutput) DeletionPolicies() GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) []GetMysqlBackupDbSystemSnapshotDeletionPolicy {
		return v.DeletionPolicies
	}).(GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput)
}

// A user-supplied description for the backup.
func (o GetMysqlBackupDbSystemSnapshotOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) string { return v.Description }).(pulumi.StringOutput)
}

// A user-supplied display name for the backup.
func (o GetMysqlBackupDbSystemSnapshotOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Encrypt data details.
func (o GetMysqlBackupDbSystemSnapshotOutput) EncryptDatas() GetMysqlBackupDbSystemSnapshotEncryptDataArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) []GetMysqlBackupDbSystemSnapshotEncryptData {
		return v.EncryptDatas
	}).(GetMysqlBackupDbSystemSnapshotEncryptDataArrayOutput)
}

// The network endpoints available for this DB System.
func (o GetMysqlBackupDbSystemSnapshotOutput) Endpoints() GetMysqlBackupDbSystemSnapshotEndpointArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) []GetMysqlBackupDbSystemSnapshotEndpoint { return v.Endpoints }).(GetMysqlBackupDbSystemSnapshotEndpointArrayOutput)
}

// The name of the Fault Domain the DB System is located in.
func (o GetMysqlBackupDbSystemSnapshotOutput) FaultDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) string { return v.FaultDomain }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetMysqlBackupDbSystemSnapshotOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The hostname for the primary endpoint of the DB System. Used for DNS. The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com"). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
func (o GetMysqlBackupDbSystemSnapshotOutput) HostnameLabel() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) string { return v.HostnameLabel }).(pulumi.StringOutput)
}

// OCID of the backup itself
func (o GetMysqlBackupDbSystemSnapshotOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) string { return v.Id }).(pulumi.StringOutput)
}

// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
func (o GetMysqlBackupDbSystemSnapshotOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) string { return v.IpAddress }).(pulumi.StringOutput)
}

// Specifies if the DB System is highly available.
func (o GetMysqlBackupDbSystemSnapshotOutput) IsHighlyAvailable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) bool { return v.IsHighlyAvailable }).(pulumi.BoolOutput)
}

// The Maintenance Policy for the DB System or Read Replica that this model is included in.
func (o GetMysqlBackupDbSystemSnapshotOutput) Maintenances() GetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) []GetMysqlBackupDbSystemSnapshotMaintenance {
		return v.Maintenances
	}).(GetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput)
}

// The MySQL server version of the DB System used for backup.
func (o GetMysqlBackupDbSystemSnapshotOutput) MysqlVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) string { return v.MysqlVersion }).(pulumi.StringOutput)
}

// Network Security Group OCIDs used for the VNIC attachment.
func (o GetMysqlBackupDbSystemSnapshotOutput) NsgIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) []string { return v.NsgIds }).(pulumi.StringArrayOutput)
}

// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
func (o GetMysqlBackupDbSystemSnapshotOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) int { return v.Port }).(pulumi.IntOutput)
}

// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
func (o GetMysqlBackupDbSystemSnapshotOutput) PortX() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) int { return v.PortX }).(pulumi.IntOutput)
}

// The read endpoint of a DB System.
func (o GetMysqlBackupDbSystemSnapshotOutput) ReadEndpoints() GetMysqlBackupDbSystemSnapshotReadEndpointArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) []GetMysqlBackupDbSystemSnapshotReadEndpoint {
		return v.ReadEndpoints
	}).(GetMysqlBackupDbSystemSnapshotReadEndpointArrayOutput)
}

// The region identifier of the region where the DB system exists. For more information, please see [Regions and Availability Domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm).
func (o GetMysqlBackupDbSystemSnapshotOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) string { return v.Region }).(pulumi.StringOutput)
}

// REST configuration details.
func (o GetMysqlBackupDbSystemSnapshotOutput) Rests() GetMysqlBackupDbSystemSnapshotRestArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) []GetMysqlBackupDbSystemSnapshotRest { return v.Rests }).(GetMysqlBackupDbSystemSnapshotRestArrayOutput)
}

// Secure connection configuration details.
func (o GetMysqlBackupDbSystemSnapshotOutput) SecureConnections() GetMysqlBackupDbSystemSnapshotSecureConnectionArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) []GetMysqlBackupDbSystemSnapshotSecureConnection {
		return v.SecureConnections
	}).(GetMysqlBackupDbSystemSnapshotSecureConnectionArrayOutput)
}

// The shape of the DB System instance used for backup.
func (o GetMysqlBackupDbSystemSnapshotOutput) ShapeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) string { return v.ShapeName }).(pulumi.StringOutput)
}

// The OCID of the subnet the DB System is associated with.
func (o GetMysqlBackupDbSystemSnapshotOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshot) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetMysqlBackupDbSystemSnapshotArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshot)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotArrayOutput) ToGetMysqlBackupDbSystemSnapshotArrayOutput() GetMysqlBackupDbSystemSnapshotArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotArrayOutput) ToGetMysqlBackupDbSystemSnapshotArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupDbSystemSnapshotOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupDbSystemSnapshot {
		return vs[0].([]GetMysqlBackupDbSystemSnapshot)[vs[1].(int)]
	}).(GetMysqlBackupDbSystemSnapshotOutput)
}

type GetMysqlBackupDbSystemSnapshotBackupPolicy struct {
	// List of policies of a DB system to schedule cross-region DB system backup copy.
	CopyPolicies []GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicy `pulumi:"copyPolicies"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Specifies if the DB System read endpoint is enabled or not.
	IsEnabled bool `pulumi:"isEnabled"`
	// The PITR policy for the DB System.
	PitrPolicies []GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy `pulumi:"pitrPolicies"`
	// Number of days to retain this backup.
	RetentionInDays int `pulumi:"retentionInDays"`
	// Retains the backup to be deleted due to the retention policy in DELETE SCHEDULED state for 7 days before permanently deleting it.
	SoftDelete string `pulumi:"softDelete"`
	// The start time of the maintenance window.
	WindowStartTime string `pulumi:"windowStartTime"`
}

// GetMysqlBackupDbSystemSnapshotBackupPolicyInput is an input type that accepts GetMysqlBackupDbSystemSnapshotBackupPolicyArgs and GetMysqlBackupDbSystemSnapshotBackupPolicyOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotBackupPolicyInput` via:
//
//	GetMysqlBackupDbSystemSnapshotBackupPolicyArgs{...}
type GetMysqlBackupDbSystemSnapshotBackupPolicyInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotBackupPolicyOutput() GetMysqlBackupDbSystemSnapshotBackupPolicyOutput
	ToGetMysqlBackupDbSystemSnapshotBackupPolicyOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotBackupPolicyOutput
}

type GetMysqlBackupDbSystemSnapshotBackupPolicyArgs struct {
	// List of policies of a DB system to schedule cross-region DB system backup copy.
	CopyPolicies GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayInput `pulumi:"copyPolicies"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// Specifies if the DB System read endpoint is enabled or not.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The PITR policy for the DB System.
	PitrPolicies GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayInput `pulumi:"pitrPolicies"`
	// Number of days to retain this backup.
	RetentionInDays pulumi.IntInput `pulumi:"retentionInDays"`
	// Retains the backup to be deleted due to the retention policy in DELETE SCHEDULED state for 7 days before permanently deleting it.
	SoftDelete pulumi.StringInput `pulumi:"softDelete"`
	// The start time of the maintenance window.
	WindowStartTime pulumi.StringInput `pulumi:"windowStartTime"`
}

func (GetMysqlBackupDbSystemSnapshotBackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotBackupPolicy)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotBackupPolicyArgs) ToGetMysqlBackupDbSystemSnapshotBackupPolicyOutput() GetMysqlBackupDbSystemSnapshotBackupPolicyOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotBackupPolicyOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotBackupPolicyArgs) ToGetMysqlBackupDbSystemSnapshotBackupPolicyOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotBackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotBackupPolicyOutput)
}

// GetMysqlBackupDbSystemSnapshotBackupPolicyArrayInput is an input type that accepts GetMysqlBackupDbSystemSnapshotBackupPolicyArray and GetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotBackupPolicyArrayInput` via:
//
//	GetMysqlBackupDbSystemSnapshotBackupPolicyArray{ GetMysqlBackupDbSystemSnapshotBackupPolicyArgs{...} }
type GetMysqlBackupDbSystemSnapshotBackupPolicyArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput() GetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput
	ToGetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput
}

type GetMysqlBackupDbSystemSnapshotBackupPolicyArray []GetMysqlBackupDbSystemSnapshotBackupPolicyInput

func (GetMysqlBackupDbSystemSnapshotBackupPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshotBackupPolicy)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotBackupPolicyArray) ToGetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput() GetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotBackupPolicyArray) ToGetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput)
}

type GetMysqlBackupDbSystemSnapshotBackupPolicyOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotBackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotBackupPolicy)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotBackupPolicyOutput) ToGetMysqlBackupDbSystemSnapshotBackupPolicyOutput() GetMysqlBackupDbSystemSnapshotBackupPolicyOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotBackupPolicyOutput) ToGetMysqlBackupDbSystemSnapshotBackupPolicyOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotBackupPolicyOutput {
	return o
}

// List of policies of a DB system to schedule cross-region DB system backup copy.
func (o GetMysqlBackupDbSystemSnapshotBackupPolicyOutput) CopyPolicies() GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotBackupPolicy) []GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicy {
		return v.CopyPolicies
	}).(GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetMysqlBackupDbSystemSnapshotBackupPolicyOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotBackupPolicy) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetMysqlBackupDbSystemSnapshotBackupPolicyOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotBackupPolicy) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Specifies if the DB System read endpoint is enabled or not.
func (o GetMysqlBackupDbSystemSnapshotBackupPolicyOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotBackupPolicy) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The PITR policy for the DB System.
func (o GetMysqlBackupDbSystemSnapshotBackupPolicyOutput) PitrPolicies() GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotBackupPolicy) []GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy {
		return v.PitrPolicies
	}).(GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput)
}

// Number of days to retain this backup.
func (o GetMysqlBackupDbSystemSnapshotBackupPolicyOutput) RetentionInDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotBackupPolicy) int { return v.RetentionInDays }).(pulumi.IntOutput)
}

// Retains the backup to be deleted due to the retention policy in DELETE SCHEDULED state for 7 days before permanently deleting it.
func (o GetMysqlBackupDbSystemSnapshotBackupPolicyOutput) SoftDelete() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotBackupPolicy) string { return v.SoftDelete }).(pulumi.StringOutput)
}

// The start time of the maintenance window.
func (o GetMysqlBackupDbSystemSnapshotBackupPolicyOutput) WindowStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotBackupPolicy) string { return v.WindowStartTime }).(pulumi.StringOutput)
}

type GetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshotBackupPolicy)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput) ToGetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput() GetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput) ToGetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupDbSystemSnapshotBackupPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupDbSystemSnapshotBackupPolicy {
		return vs[0].([]GetMysqlBackupDbSystemSnapshotBackupPolicy)[vs[1].(int)]
	}).(GetMysqlBackupDbSystemSnapshotBackupPolicyOutput)
}

type GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicy struct {
	// Number of days to retain the copied DB system backup.
	BackupCopyRetentionInDays int `pulumi:"backupCopyRetentionInDays"`
	// The destination region name to which the DB system backup will be copied.
	CopyToRegion string `pulumi:"copyToRegion"`
}

// GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyInput is an input type that accepts GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArgs and GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyInput` via:
//
//	GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArgs{...}
type GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput() GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput
	ToGetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput
}

type GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArgs struct {
	// Number of days to retain the copied DB system backup.
	BackupCopyRetentionInDays pulumi.IntInput `pulumi:"backupCopyRetentionInDays"`
	// The destination region name to which the DB system backup will be copied.
	CopyToRegion pulumi.StringInput `pulumi:"copyToRegion"`
}

func (GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicy)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArgs) ToGetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput() GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArgs) ToGetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput)
}

// GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayInput is an input type that accepts GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArray and GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayInput` via:
//
//	GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArray{ GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArgs{...} }
type GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput() GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput
	ToGetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput
}

type GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArray []GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyInput

func (GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicy)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArray) ToGetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput() GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArray) ToGetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput)
}

type GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicy)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput) ToGetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput() GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput) ToGetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput {
	return o
}

// Number of days to retain the copied DB system backup.
func (o GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput) BackupCopyRetentionInDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicy) int { return v.BackupCopyRetentionInDays }).(pulumi.IntOutput)
}

// The destination region name to which the DB system backup will be copied.
func (o GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput) CopyToRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicy) string { return v.CopyToRegion }).(pulumi.StringOutput)
}

type GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicy)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput) ToGetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput() GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput) ToGetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicy {
		return vs[0].([]GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicy)[vs[1].(int)]
	}).(GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput)
}

type GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy struct {
	// Specifies if the DB System read endpoint is enabled or not.
	IsEnabled bool `pulumi:"isEnabled"`
}

// GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyInput is an input type that accepts GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs and GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyInput` via:
//
//	GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs{...}
type GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput() GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput
	ToGetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput
}

type GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs struct {
	// Specifies if the DB System read endpoint is enabled or not.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
}

func (GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs) ToGetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput() GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs) ToGetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput)
}

// GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayInput is an input type that accepts GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArray and GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayInput` via:
//
//	GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArray{ GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs{...} }
type GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput() GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput
	ToGetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput
}

type GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArray []GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyInput

func (GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArray) ToGetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput() GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArray) ToGetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput)
}

type GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput) ToGetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput() GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput) ToGetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput {
	return o
}

// Specifies if the DB System read endpoint is enabled or not.
func (o GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

type GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput) ToGetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput() GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput) ToGetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy {
		return vs[0].([]GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy)[vs[1].(int)]
	}).(GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput)
}

type GetMysqlBackupDbSystemSnapshotDataStorage struct {
	// The actual allocated storage size for the DB System. This may be higher than dataStorageSizeInGBs if an automatic storage expansion has occurred.
	AllocatedStorageSizeInGbs int `pulumi:"allocatedStorageSizeInGbs"`
	// DEPRECATED: User specified size of the data volume. May be less than current allocatedStorageSizeInGBs. Replaced by dataStorage.dataStorageSizeInGBs.
	DataStorageSizeInGb int `pulumi:"dataStorageSizeInGb"`
	// The absolute limit the DB System's storage size may ever expand to, either manually or automatically. This limit is based based on the initial dataStorageSizeInGBs when the DB System was first created. Both dataStorageSizeInGBs and maxDataStorageSizeInGBs can not exceed this value.
	DataStorageSizeLimitInGbs int `pulumi:"dataStorageSizeLimitInGbs"`
	// Enable/disable automatic storage expansion. When set to true, the DB System will automatically add storage incrementally up to the value specified in maxStorageSizeInGBs.
	IsAutoExpandStorageEnabled bool `pulumi:"isAutoExpandStorageEnabled"`
	// Maximum storage size this DB System can expand to. When isAutoExpandStorageEnabled is set to true, the DB System will add storage incrementally up to this value.
	MaxStorageSizeInGbs int `pulumi:"maxStorageSizeInGbs"`
}

// GetMysqlBackupDbSystemSnapshotDataStorageInput is an input type that accepts GetMysqlBackupDbSystemSnapshotDataStorageArgs and GetMysqlBackupDbSystemSnapshotDataStorageOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotDataStorageInput` via:
//
//	GetMysqlBackupDbSystemSnapshotDataStorageArgs{...}
type GetMysqlBackupDbSystemSnapshotDataStorageInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotDataStorageOutput() GetMysqlBackupDbSystemSnapshotDataStorageOutput
	ToGetMysqlBackupDbSystemSnapshotDataStorageOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotDataStorageOutput
}

type GetMysqlBackupDbSystemSnapshotDataStorageArgs struct {
	// The actual allocated storage size for the DB System. This may be higher than dataStorageSizeInGBs if an automatic storage expansion has occurred.
	AllocatedStorageSizeInGbs pulumi.IntInput `pulumi:"allocatedStorageSizeInGbs"`
	// DEPRECATED: User specified size of the data volume. May be less than current allocatedStorageSizeInGBs. Replaced by dataStorage.dataStorageSizeInGBs.
	DataStorageSizeInGb pulumi.IntInput `pulumi:"dataStorageSizeInGb"`
	// The absolute limit the DB System's storage size may ever expand to, either manually or automatically. This limit is based based on the initial dataStorageSizeInGBs when the DB System was first created. Both dataStorageSizeInGBs and maxDataStorageSizeInGBs can not exceed this value.
	DataStorageSizeLimitInGbs pulumi.IntInput `pulumi:"dataStorageSizeLimitInGbs"`
	// Enable/disable automatic storage expansion. When set to true, the DB System will automatically add storage incrementally up to the value specified in maxStorageSizeInGBs.
	IsAutoExpandStorageEnabled pulumi.BoolInput `pulumi:"isAutoExpandStorageEnabled"`
	// Maximum storage size this DB System can expand to. When isAutoExpandStorageEnabled is set to true, the DB System will add storage incrementally up to this value.
	MaxStorageSizeInGbs pulumi.IntInput `pulumi:"maxStorageSizeInGbs"`
}

func (GetMysqlBackupDbSystemSnapshotDataStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotDataStorage)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotDataStorageArgs) ToGetMysqlBackupDbSystemSnapshotDataStorageOutput() GetMysqlBackupDbSystemSnapshotDataStorageOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotDataStorageOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotDataStorageArgs) ToGetMysqlBackupDbSystemSnapshotDataStorageOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotDataStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotDataStorageOutput)
}

// GetMysqlBackupDbSystemSnapshotDataStorageArrayInput is an input type that accepts GetMysqlBackupDbSystemSnapshotDataStorageArray and GetMysqlBackupDbSystemSnapshotDataStorageArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotDataStorageArrayInput` via:
//
//	GetMysqlBackupDbSystemSnapshotDataStorageArray{ GetMysqlBackupDbSystemSnapshotDataStorageArgs{...} }
type GetMysqlBackupDbSystemSnapshotDataStorageArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotDataStorageArrayOutput() GetMysqlBackupDbSystemSnapshotDataStorageArrayOutput
	ToGetMysqlBackupDbSystemSnapshotDataStorageArrayOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotDataStorageArrayOutput
}

type GetMysqlBackupDbSystemSnapshotDataStorageArray []GetMysqlBackupDbSystemSnapshotDataStorageInput

func (GetMysqlBackupDbSystemSnapshotDataStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshotDataStorage)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotDataStorageArray) ToGetMysqlBackupDbSystemSnapshotDataStorageArrayOutput() GetMysqlBackupDbSystemSnapshotDataStorageArrayOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotDataStorageArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotDataStorageArray) ToGetMysqlBackupDbSystemSnapshotDataStorageArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotDataStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotDataStorageArrayOutput)
}

type GetMysqlBackupDbSystemSnapshotDataStorageOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotDataStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotDataStorage)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotDataStorageOutput) ToGetMysqlBackupDbSystemSnapshotDataStorageOutput() GetMysqlBackupDbSystemSnapshotDataStorageOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotDataStorageOutput) ToGetMysqlBackupDbSystemSnapshotDataStorageOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotDataStorageOutput {
	return o
}

// The actual allocated storage size for the DB System. This may be higher than dataStorageSizeInGBs if an automatic storage expansion has occurred.
func (o GetMysqlBackupDbSystemSnapshotDataStorageOutput) AllocatedStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotDataStorage) int { return v.AllocatedStorageSizeInGbs }).(pulumi.IntOutput)
}

// DEPRECATED: User specified size of the data volume. May be less than current allocatedStorageSizeInGBs. Replaced by dataStorage.dataStorageSizeInGBs.
func (o GetMysqlBackupDbSystemSnapshotDataStorageOutput) DataStorageSizeInGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotDataStorage) int { return v.DataStorageSizeInGb }).(pulumi.IntOutput)
}

// The absolute limit the DB System's storage size may ever expand to, either manually or automatically. This limit is based based on the initial dataStorageSizeInGBs when the DB System was first created. Both dataStorageSizeInGBs and maxDataStorageSizeInGBs can not exceed this value.
func (o GetMysqlBackupDbSystemSnapshotDataStorageOutput) DataStorageSizeLimitInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotDataStorage) int { return v.DataStorageSizeLimitInGbs }).(pulumi.IntOutput)
}

// Enable/disable automatic storage expansion. When set to true, the DB System will automatically add storage incrementally up to the value specified in maxStorageSizeInGBs.
func (o GetMysqlBackupDbSystemSnapshotDataStorageOutput) IsAutoExpandStorageEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotDataStorage) bool { return v.IsAutoExpandStorageEnabled }).(pulumi.BoolOutput)
}

// Maximum storage size this DB System can expand to. When isAutoExpandStorageEnabled is set to true, the DB System will add storage incrementally up to this value.
func (o GetMysqlBackupDbSystemSnapshotDataStorageOutput) MaxStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotDataStorage) int { return v.MaxStorageSizeInGbs }).(pulumi.IntOutput)
}

type GetMysqlBackupDbSystemSnapshotDataStorageArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotDataStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshotDataStorage)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotDataStorageArrayOutput) ToGetMysqlBackupDbSystemSnapshotDataStorageArrayOutput() GetMysqlBackupDbSystemSnapshotDataStorageArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotDataStorageArrayOutput) ToGetMysqlBackupDbSystemSnapshotDataStorageArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotDataStorageArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotDataStorageArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupDbSystemSnapshotDataStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupDbSystemSnapshotDataStorage {
		return vs[0].([]GetMysqlBackupDbSystemSnapshotDataStorage)[vs[1].(int)]
	}).(GetMysqlBackupDbSystemSnapshotDataStorageOutput)
}

type GetMysqlBackupDbSystemSnapshotDeletionPolicy struct {
	// Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
	AutomaticBackupRetention string `pulumi:"automaticBackupRetention"`
	// Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
	FinalBackup string `pulumi:"finalBackup"`
	// Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
	IsDeleteProtected bool `pulumi:"isDeleteProtected"`
}

// GetMysqlBackupDbSystemSnapshotDeletionPolicyInput is an input type that accepts GetMysqlBackupDbSystemSnapshotDeletionPolicyArgs and GetMysqlBackupDbSystemSnapshotDeletionPolicyOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotDeletionPolicyInput` via:
//
//	GetMysqlBackupDbSystemSnapshotDeletionPolicyArgs{...}
type GetMysqlBackupDbSystemSnapshotDeletionPolicyInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotDeletionPolicyOutput() GetMysqlBackupDbSystemSnapshotDeletionPolicyOutput
	ToGetMysqlBackupDbSystemSnapshotDeletionPolicyOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotDeletionPolicyOutput
}

type GetMysqlBackupDbSystemSnapshotDeletionPolicyArgs struct {
	// Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
	AutomaticBackupRetention pulumi.StringInput `pulumi:"automaticBackupRetention"`
	// Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
	FinalBackup pulumi.StringInput `pulumi:"finalBackup"`
	// Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
	IsDeleteProtected pulumi.BoolInput `pulumi:"isDeleteProtected"`
}

func (GetMysqlBackupDbSystemSnapshotDeletionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotDeletionPolicy)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotDeletionPolicyArgs) ToGetMysqlBackupDbSystemSnapshotDeletionPolicyOutput() GetMysqlBackupDbSystemSnapshotDeletionPolicyOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotDeletionPolicyOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotDeletionPolicyArgs) ToGetMysqlBackupDbSystemSnapshotDeletionPolicyOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotDeletionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotDeletionPolicyOutput)
}

// GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayInput is an input type that accepts GetMysqlBackupDbSystemSnapshotDeletionPolicyArray and GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayInput` via:
//
//	GetMysqlBackupDbSystemSnapshotDeletionPolicyArray{ GetMysqlBackupDbSystemSnapshotDeletionPolicyArgs{...} }
type GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput() GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput
	ToGetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput
}

type GetMysqlBackupDbSystemSnapshotDeletionPolicyArray []GetMysqlBackupDbSystemSnapshotDeletionPolicyInput

func (GetMysqlBackupDbSystemSnapshotDeletionPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshotDeletionPolicy)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotDeletionPolicyArray) ToGetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput() GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotDeletionPolicyArray) ToGetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput)
}

type GetMysqlBackupDbSystemSnapshotDeletionPolicyOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotDeletionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotDeletionPolicy)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotDeletionPolicyOutput) ToGetMysqlBackupDbSystemSnapshotDeletionPolicyOutput() GetMysqlBackupDbSystemSnapshotDeletionPolicyOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotDeletionPolicyOutput) ToGetMysqlBackupDbSystemSnapshotDeletionPolicyOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotDeletionPolicyOutput {
	return o
}

// Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
func (o GetMysqlBackupDbSystemSnapshotDeletionPolicyOutput) AutomaticBackupRetention() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotDeletionPolicy) string { return v.AutomaticBackupRetention }).(pulumi.StringOutput)
}

// Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
func (o GetMysqlBackupDbSystemSnapshotDeletionPolicyOutput) FinalBackup() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotDeletionPolicy) string { return v.FinalBackup }).(pulumi.StringOutput)
}

// Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
func (o GetMysqlBackupDbSystemSnapshotDeletionPolicyOutput) IsDeleteProtected() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotDeletionPolicy) bool { return v.IsDeleteProtected }).(pulumi.BoolOutput)
}

type GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshotDeletionPolicy)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput) ToGetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput() GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput) ToGetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupDbSystemSnapshotDeletionPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupDbSystemSnapshotDeletionPolicy {
		return vs[0].([]GetMysqlBackupDbSystemSnapshotDeletionPolicy)[vs[1].(int)]
	}).(GetMysqlBackupDbSystemSnapshotDeletionPolicyOutput)
}

type GetMysqlBackupDbSystemSnapshotEncryptData struct {
	// Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
	KeyGenerationType string `pulumi:"keyGenerationType"`
	// The OCID of the key to use.
	KeyId string `pulumi:"keyId"`
}

// GetMysqlBackupDbSystemSnapshotEncryptDataInput is an input type that accepts GetMysqlBackupDbSystemSnapshotEncryptDataArgs and GetMysqlBackupDbSystemSnapshotEncryptDataOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotEncryptDataInput` via:
//
//	GetMysqlBackupDbSystemSnapshotEncryptDataArgs{...}
type GetMysqlBackupDbSystemSnapshotEncryptDataInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotEncryptDataOutput() GetMysqlBackupDbSystemSnapshotEncryptDataOutput
	ToGetMysqlBackupDbSystemSnapshotEncryptDataOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotEncryptDataOutput
}

type GetMysqlBackupDbSystemSnapshotEncryptDataArgs struct {
	// Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
	KeyGenerationType pulumi.StringInput `pulumi:"keyGenerationType"`
	// The OCID of the key to use.
	KeyId pulumi.StringInput `pulumi:"keyId"`
}

func (GetMysqlBackupDbSystemSnapshotEncryptDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotEncryptData)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotEncryptDataArgs) ToGetMysqlBackupDbSystemSnapshotEncryptDataOutput() GetMysqlBackupDbSystemSnapshotEncryptDataOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotEncryptDataOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotEncryptDataArgs) ToGetMysqlBackupDbSystemSnapshotEncryptDataOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotEncryptDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotEncryptDataOutput)
}

// GetMysqlBackupDbSystemSnapshotEncryptDataArrayInput is an input type that accepts GetMysqlBackupDbSystemSnapshotEncryptDataArray and GetMysqlBackupDbSystemSnapshotEncryptDataArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotEncryptDataArrayInput` via:
//
//	GetMysqlBackupDbSystemSnapshotEncryptDataArray{ GetMysqlBackupDbSystemSnapshotEncryptDataArgs{...} }
type GetMysqlBackupDbSystemSnapshotEncryptDataArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotEncryptDataArrayOutput() GetMysqlBackupDbSystemSnapshotEncryptDataArrayOutput
	ToGetMysqlBackupDbSystemSnapshotEncryptDataArrayOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotEncryptDataArrayOutput
}

type GetMysqlBackupDbSystemSnapshotEncryptDataArray []GetMysqlBackupDbSystemSnapshotEncryptDataInput

func (GetMysqlBackupDbSystemSnapshotEncryptDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshotEncryptData)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotEncryptDataArray) ToGetMysqlBackupDbSystemSnapshotEncryptDataArrayOutput() GetMysqlBackupDbSystemSnapshotEncryptDataArrayOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotEncryptDataArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotEncryptDataArray) ToGetMysqlBackupDbSystemSnapshotEncryptDataArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotEncryptDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotEncryptDataArrayOutput)
}

type GetMysqlBackupDbSystemSnapshotEncryptDataOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotEncryptDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotEncryptData)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotEncryptDataOutput) ToGetMysqlBackupDbSystemSnapshotEncryptDataOutput() GetMysqlBackupDbSystemSnapshotEncryptDataOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotEncryptDataOutput) ToGetMysqlBackupDbSystemSnapshotEncryptDataOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotEncryptDataOutput {
	return o
}

// Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
func (o GetMysqlBackupDbSystemSnapshotEncryptDataOutput) KeyGenerationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotEncryptData) string { return v.KeyGenerationType }).(pulumi.StringOutput)
}

// The OCID of the key to use.
func (o GetMysqlBackupDbSystemSnapshotEncryptDataOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotEncryptData) string { return v.KeyId }).(pulumi.StringOutput)
}

type GetMysqlBackupDbSystemSnapshotEncryptDataArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotEncryptDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshotEncryptData)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotEncryptDataArrayOutput) ToGetMysqlBackupDbSystemSnapshotEncryptDataArrayOutput() GetMysqlBackupDbSystemSnapshotEncryptDataArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotEncryptDataArrayOutput) ToGetMysqlBackupDbSystemSnapshotEncryptDataArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotEncryptDataArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotEncryptDataArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupDbSystemSnapshotEncryptDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupDbSystemSnapshotEncryptData {
		return vs[0].([]GetMysqlBackupDbSystemSnapshotEncryptData)[vs[1].(int)]
	}).(GetMysqlBackupDbSystemSnapshotEncryptDataOutput)
}

type GetMysqlBackupDbSystemSnapshotEndpoint struct {
	// The network address of the DB System.
	Hostname string `pulumi:"hostname"`
	// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
	IpAddress string `pulumi:"ipAddress"`
	// The access modes from the client that this endpoint supports.
	Modes []string `pulumi:"modes"`
	// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
	Port int `pulumi:"port"`
	// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
	PortX int `pulumi:"portX"`
	// The OCID of the resource that this endpoint is attached to.
	ResourceId string `pulumi:"resourceId"`
	// The type of endpoint that clients and connectors can connect to.
	ResourceType string `pulumi:"resourceType"`
	// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
	Status string `pulumi:"status"`
	// Additional information about the current endpoint status.
	StatusDetails string `pulumi:"statusDetails"`
}

// GetMysqlBackupDbSystemSnapshotEndpointInput is an input type that accepts GetMysqlBackupDbSystemSnapshotEndpointArgs and GetMysqlBackupDbSystemSnapshotEndpointOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotEndpointInput` via:
//
//	GetMysqlBackupDbSystemSnapshotEndpointArgs{...}
type GetMysqlBackupDbSystemSnapshotEndpointInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotEndpointOutput() GetMysqlBackupDbSystemSnapshotEndpointOutput
	ToGetMysqlBackupDbSystemSnapshotEndpointOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotEndpointOutput
}

type GetMysqlBackupDbSystemSnapshotEndpointArgs struct {
	// The network address of the DB System.
	Hostname pulumi.StringInput `pulumi:"hostname"`
	// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// The access modes from the client that this endpoint supports.
	Modes pulumi.StringArrayInput `pulumi:"modes"`
	// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
	Port pulumi.IntInput `pulumi:"port"`
	// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
	PortX pulumi.IntInput `pulumi:"portX"`
	// The OCID of the resource that this endpoint is attached to.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// The type of endpoint that clients and connectors can connect to.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
	Status pulumi.StringInput `pulumi:"status"`
	// Additional information about the current endpoint status.
	StatusDetails pulumi.StringInput `pulumi:"statusDetails"`
}

func (GetMysqlBackupDbSystemSnapshotEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotEndpoint)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotEndpointArgs) ToGetMysqlBackupDbSystemSnapshotEndpointOutput() GetMysqlBackupDbSystemSnapshotEndpointOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotEndpointOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotEndpointArgs) ToGetMysqlBackupDbSystemSnapshotEndpointOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotEndpointOutput)
}

// GetMysqlBackupDbSystemSnapshotEndpointArrayInput is an input type that accepts GetMysqlBackupDbSystemSnapshotEndpointArray and GetMysqlBackupDbSystemSnapshotEndpointArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotEndpointArrayInput` via:
//
//	GetMysqlBackupDbSystemSnapshotEndpointArray{ GetMysqlBackupDbSystemSnapshotEndpointArgs{...} }
type GetMysqlBackupDbSystemSnapshotEndpointArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotEndpointArrayOutput() GetMysqlBackupDbSystemSnapshotEndpointArrayOutput
	ToGetMysqlBackupDbSystemSnapshotEndpointArrayOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotEndpointArrayOutput
}

type GetMysqlBackupDbSystemSnapshotEndpointArray []GetMysqlBackupDbSystemSnapshotEndpointInput

func (GetMysqlBackupDbSystemSnapshotEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshotEndpoint)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotEndpointArray) ToGetMysqlBackupDbSystemSnapshotEndpointArrayOutput() GetMysqlBackupDbSystemSnapshotEndpointArrayOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotEndpointArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotEndpointArray) ToGetMysqlBackupDbSystemSnapshotEndpointArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotEndpointArrayOutput)
}

type GetMysqlBackupDbSystemSnapshotEndpointOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotEndpoint)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotEndpointOutput) ToGetMysqlBackupDbSystemSnapshotEndpointOutput() GetMysqlBackupDbSystemSnapshotEndpointOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotEndpointOutput) ToGetMysqlBackupDbSystemSnapshotEndpointOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotEndpointOutput {
	return o
}

// The network address of the DB System.
func (o GetMysqlBackupDbSystemSnapshotEndpointOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotEndpoint) string { return v.Hostname }).(pulumi.StringOutput)
}

// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
func (o GetMysqlBackupDbSystemSnapshotEndpointOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotEndpoint) string { return v.IpAddress }).(pulumi.StringOutput)
}

// The access modes from the client that this endpoint supports.
func (o GetMysqlBackupDbSystemSnapshotEndpointOutput) Modes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotEndpoint) []string { return v.Modes }).(pulumi.StringArrayOutput)
}

// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
func (o GetMysqlBackupDbSystemSnapshotEndpointOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotEndpoint) int { return v.Port }).(pulumi.IntOutput)
}

// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
func (o GetMysqlBackupDbSystemSnapshotEndpointOutput) PortX() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotEndpoint) int { return v.PortX }).(pulumi.IntOutput)
}

// The OCID of the resource that this endpoint is attached to.
func (o GetMysqlBackupDbSystemSnapshotEndpointOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotEndpoint) string { return v.ResourceId }).(pulumi.StringOutput)
}

// The type of endpoint that clients and connectors can connect to.
func (o GetMysqlBackupDbSystemSnapshotEndpointOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotEndpoint) string { return v.ResourceType }).(pulumi.StringOutput)
}

// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
func (o GetMysqlBackupDbSystemSnapshotEndpointOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotEndpoint) string { return v.Status }).(pulumi.StringOutput)
}

// Additional information about the current endpoint status.
func (o GetMysqlBackupDbSystemSnapshotEndpointOutput) StatusDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotEndpoint) string { return v.StatusDetails }).(pulumi.StringOutput)
}

type GetMysqlBackupDbSystemSnapshotEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshotEndpoint)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotEndpointArrayOutput) ToGetMysqlBackupDbSystemSnapshotEndpointArrayOutput() GetMysqlBackupDbSystemSnapshotEndpointArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotEndpointArrayOutput) ToGetMysqlBackupDbSystemSnapshotEndpointArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotEndpointArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotEndpointArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupDbSystemSnapshotEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupDbSystemSnapshotEndpoint {
		return vs[0].([]GetMysqlBackupDbSystemSnapshotEndpoint)[vs[1].(int)]
	}).(GetMysqlBackupDbSystemSnapshotEndpointOutput)
}

type GetMysqlBackupDbSystemSnapshotMaintenance struct {
	// The start time of the maintenance window.
	WindowStartTime string `pulumi:"windowStartTime"`
}

// GetMysqlBackupDbSystemSnapshotMaintenanceInput is an input type that accepts GetMysqlBackupDbSystemSnapshotMaintenanceArgs and GetMysqlBackupDbSystemSnapshotMaintenanceOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotMaintenanceInput` via:
//
//	GetMysqlBackupDbSystemSnapshotMaintenanceArgs{...}
type GetMysqlBackupDbSystemSnapshotMaintenanceInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotMaintenanceOutput() GetMysqlBackupDbSystemSnapshotMaintenanceOutput
	ToGetMysqlBackupDbSystemSnapshotMaintenanceOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotMaintenanceOutput
}

type GetMysqlBackupDbSystemSnapshotMaintenanceArgs struct {
	// The start time of the maintenance window.
	WindowStartTime pulumi.StringInput `pulumi:"windowStartTime"`
}

func (GetMysqlBackupDbSystemSnapshotMaintenanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotMaintenance)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotMaintenanceArgs) ToGetMysqlBackupDbSystemSnapshotMaintenanceOutput() GetMysqlBackupDbSystemSnapshotMaintenanceOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotMaintenanceOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotMaintenanceArgs) ToGetMysqlBackupDbSystemSnapshotMaintenanceOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotMaintenanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotMaintenanceOutput)
}

// GetMysqlBackupDbSystemSnapshotMaintenanceArrayInput is an input type that accepts GetMysqlBackupDbSystemSnapshotMaintenanceArray and GetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotMaintenanceArrayInput` via:
//
//	GetMysqlBackupDbSystemSnapshotMaintenanceArray{ GetMysqlBackupDbSystemSnapshotMaintenanceArgs{...} }
type GetMysqlBackupDbSystemSnapshotMaintenanceArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput() GetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput
	ToGetMysqlBackupDbSystemSnapshotMaintenanceArrayOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput
}

type GetMysqlBackupDbSystemSnapshotMaintenanceArray []GetMysqlBackupDbSystemSnapshotMaintenanceInput

func (GetMysqlBackupDbSystemSnapshotMaintenanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshotMaintenance)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotMaintenanceArray) ToGetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput() GetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotMaintenanceArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotMaintenanceArray) ToGetMysqlBackupDbSystemSnapshotMaintenanceArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput)
}

type GetMysqlBackupDbSystemSnapshotMaintenanceOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotMaintenanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotMaintenance)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotMaintenanceOutput) ToGetMysqlBackupDbSystemSnapshotMaintenanceOutput() GetMysqlBackupDbSystemSnapshotMaintenanceOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotMaintenanceOutput) ToGetMysqlBackupDbSystemSnapshotMaintenanceOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotMaintenanceOutput {
	return o
}

// The start time of the maintenance window.
func (o GetMysqlBackupDbSystemSnapshotMaintenanceOutput) WindowStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotMaintenance) string { return v.WindowStartTime }).(pulumi.StringOutput)
}

type GetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshotMaintenance)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput) ToGetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput() GetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput) ToGetMysqlBackupDbSystemSnapshotMaintenanceArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupDbSystemSnapshotMaintenanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupDbSystemSnapshotMaintenance {
		return vs[0].([]GetMysqlBackupDbSystemSnapshotMaintenance)[vs[1].(int)]
	}).(GetMysqlBackupDbSystemSnapshotMaintenanceOutput)
}

type GetMysqlBackupDbSystemSnapshotReadEndpoint struct {
	// A list of IP addresses of read replicas that are excluded from serving read requests.
	ExcludeIps []string `pulumi:"excludeIps"`
	// Specifies if the DB System read endpoint is enabled or not.
	IsEnabled bool `pulumi:"isEnabled"`
	// The hostname for the read endpoint of the DB System. Used for DNS.
	ReadEndpointHostnameLabel string `pulumi:"readEndpointHostnameLabel"`
	// The IP address the DB System read endpoint is configured to listen on. A private IP address of your choice to assign to the read endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
	ReadEndpointIpAddress string `pulumi:"readEndpointIpAddress"`
}

// GetMysqlBackupDbSystemSnapshotReadEndpointInput is an input type that accepts GetMysqlBackupDbSystemSnapshotReadEndpointArgs and GetMysqlBackupDbSystemSnapshotReadEndpointOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotReadEndpointInput` via:
//
//	GetMysqlBackupDbSystemSnapshotReadEndpointArgs{...}
type GetMysqlBackupDbSystemSnapshotReadEndpointInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotReadEndpointOutput() GetMysqlBackupDbSystemSnapshotReadEndpointOutput
	ToGetMysqlBackupDbSystemSnapshotReadEndpointOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotReadEndpointOutput
}

type GetMysqlBackupDbSystemSnapshotReadEndpointArgs struct {
	// A list of IP addresses of read replicas that are excluded from serving read requests.
	ExcludeIps pulumi.StringArrayInput `pulumi:"excludeIps"`
	// Specifies if the DB System read endpoint is enabled or not.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The hostname for the read endpoint of the DB System. Used for DNS.
	ReadEndpointHostnameLabel pulumi.StringInput `pulumi:"readEndpointHostnameLabel"`
	// The IP address the DB System read endpoint is configured to listen on. A private IP address of your choice to assign to the read endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
	ReadEndpointIpAddress pulumi.StringInput `pulumi:"readEndpointIpAddress"`
}

func (GetMysqlBackupDbSystemSnapshotReadEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotReadEndpoint)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotReadEndpointArgs) ToGetMysqlBackupDbSystemSnapshotReadEndpointOutput() GetMysqlBackupDbSystemSnapshotReadEndpointOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotReadEndpointOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotReadEndpointArgs) ToGetMysqlBackupDbSystemSnapshotReadEndpointOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotReadEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotReadEndpointOutput)
}

// GetMysqlBackupDbSystemSnapshotReadEndpointArrayInput is an input type that accepts GetMysqlBackupDbSystemSnapshotReadEndpointArray and GetMysqlBackupDbSystemSnapshotReadEndpointArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotReadEndpointArrayInput` via:
//
//	GetMysqlBackupDbSystemSnapshotReadEndpointArray{ GetMysqlBackupDbSystemSnapshotReadEndpointArgs{...} }
type GetMysqlBackupDbSystemSnapshotReadEndpointArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotReadEndpointArrayOutput() GetMysqlBackupDbSystemSnapshotReadEndpointArrayOutput
	ToGetMysqlBackupDbSystemSnapshotReadEndpointArrayOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotReadEndpointArrayOutput
}

type GetMysqlBackupDbSystemSnapshotReadEndpointArray []GetMysqlBackupDbSystemSnapshotReadEndpointInput

func (GetMysqlBackupDbSystemSnapshotReadEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshotReadEndpoint)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotReadEndpointArray) ToGetMysqlBackupDbSystemSnapshotReadEndpointArrayOutput() GetMysqlBackupDbSystemSnapshotReadEndpointArrayOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotReadEndpointArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotReadEndpointArray) ToGetMysqlBackupDbSystemSnapshotReadEndpointArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotReadEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotReadEndpointArrayOutput)
}

type GetMysqlBackupDbSystemSnapshotReadEndpointOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotReadEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotReadEndpoint)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotReadEndpointOutput) ToGetMysqlBackupDbSystemSnapshotReadEndpointOutput() GetMysqlBackupDbSystemSnapshotReadEndpointOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotReadEndpointOutput) ToGetMysqlBackupDbSystemSnapshotReadEndpointOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotReadEndpointOutput {
	return o
}

// A list of IP addresses of read replicas that are excluded from serving read requests.
func (o GetMysqlBackupDbSystemSnapshotReadEndpointOutput) ExcludeIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotReadEndpoint) []string { return v.ExcludeIps }).(pulumi.StringArrayOutput)
}

// Specifies if the DB System read endpoint is enabled or not.
func (o GetMysqlBackupDbSystemSnapshotReadEndpointOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotReadEndpoint) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The hostname for the read endpoint of the DB System. Used for DNS.
func (o GetMysqlBackupDbSystemSnapshotReadEndpointOutput) ReadEndpointHostnameLabel() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotReadEndpoint) string { return v.ReadEndpointHostnameLabel }).(pulumi.StringOutput)
}

// The IP address the DB System read endpoint is configured to listen on. A private IP address of your choice to assign to the read endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
func (o GetMysqlBackupDbSystemSnapshotReadEndpointOutput) ReadEndpointIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotReadEndpoint) string { return v.ReadEndpointIpAddress }).(pulumi.StringOutput)
}

type GetMysqlBackupDbSystemSnapshotReadEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotReadEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshotReadEndpoint)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotReadEndpointArrayOutput) ToGetMysqlBackupDbSystemSnapshotReadEndpointArrayOutput() GetMysqlBackupDbSystemSnapshotReadEndpointArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotReadEndpointArrayOutput) ToGetMysqlBackupDbSystemSnapshotReadEndpointArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotReadEndpointArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotReadEndpointArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupDbSystemSnapshotReadEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupDbSystemSnapshotReadEndpoint {
		return vs[0].([]GetMysqlBackupDbSystemSnapshotReadEndpoint)[vs[1].(int)]
	}).(GetMysqlBackupDbSystemSnapshotReadEndpointOutput)
}

type GetMysqlBackupDbSystemSnapshotRest struct {
	// Select how REST is configured across the DB System instances.
	Configuration string `pulumi:"configuration"`
	// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
	Port int `pulumi:"port"`
}

// GetMysqlBackupDbSystemSnapshotRestInput is an input type that accepts GetMysqlBackupDbSystemSnapshotRestArgs and GetMysqlBackupDbSystemSnapshotRestOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotRestInput` via:
//
//	GetMysqlBackupDbSystemSnapshotRestArgs{...}
type GetMysqlBackupDbSystemSnapshotRestInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotRestOutput() GetMysqlBackupDbSystemSnapshotRestOutput
	ToGetMysqlBackupDbSystemSnapshotRestOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotRestOutput
}

type GetMysqlBackupDbSystemSnapshotRestArgs struct {
	// Select how REST is configured across the DB System instances.
	Configuration pulumi.StringInput `pulumi:"configuration"`
	// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
	Port pulumi.IntInput `pulumi:"port"`
}

func (GetMysqlBackupDbSystemSnapshotRestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotRest)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotRestArgs) ToGetMysqlBackupDbSystemSnapshotRestOutput() GetMysqlBackupDbSystemSnapshotRestOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotRestOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotRestArgs) ToGetMysqlBackupDbSystemSnapshotRestOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotRestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotRestOutput)
}

// GetMysqlBackupDbSystemSnapshotRestArrayInput is an input type that accepts GetMysqlBackupDbSystemSnapshotRestArray and GetMysqlBackupDbSystemSnapshotRestArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotRestArrayInput` via:
//
//	GetMysqlBackupDbSystemSnapshotRestArray{ GetMysqlBackupDbSystemSnapshotRestArgs{...} }
type GetMysqlBackupDbSystemSnapshotRestArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotRestArrayOutput() GetMysqlBackupDbSystemSnapshotRestArrayOutput
	ToGetMysqlBackupDbSystemSnapshotRestArrayOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotRestArrayOutput
}

type GetMysqlBackupDbSystemSnapshotRestArray []GetMysqlBackupDbSystemSnapshotRestInput

func (GetMysqlBackupDbSystemSnapshotRestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshotRest)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotRestArray) ToGetMysqlBackupDbSystemSnapshotRestArrayOutput() GetMysqlBackupDbSystemSnapshotRestArrayOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotRestArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotRestArray) ToGetMysqlBackupDbSystemSnapshotRestArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotRestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotRestArrayOutput)
}

type GetMysqlBackupDbSystemSnapshotRestOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotRestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotRest)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotRestOutput) ToGetMysqlBackupDbSystemSnapshotRestOutput() GetMysqlBackupDbSystemSnapshotRestOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotRestOutput) ToGetMysqlBackupDbSystemSnapshotRestOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotRestOutput {
	return o
}

// Select how REST is configured across the DB System instances.
func (o GetMysqlBackupDbSystemSnapshotRestOutput) Configuration() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotRest) string { return v.Configuration }).(pulumi.StringOutput)
}

// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
func (o GetMysqlBackupDbSystemSnapshotRestOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotRest) int { return v.Port }).(pulumi.IntOutput)
}

type GetMysqlBackupDbSystemSnapshotRestArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotRestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshotRest)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotRestArrayOutput) ToGetMysqlBackupDbSystemSnapshotRestArrayOutput() GetMysqlBackupDbSystemSnapshotRestArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotRestArrayOutput) ToGetMysqlBackupDbSystemSnapshotRestArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotRestArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotRestArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupDbSystemSnapshotRestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupDbSystemSnapshotRest {
		return vs[0].([]GetMysqlBackupDbSystemSnapshotRest)[vs[1].(int)]
	}).(GetMysqlBackupDbSystemSnapshotRestOutput)
}

type GetMysqlBackupDbSystemSnapshotSecureConnection struct {
	// Select whether to use MySQL Database Service-managed certificate (SYSTEM) or your own certificate (BYOC).
	CertificateGenerationType string `pulumi:"certificateGenerationType"`
	// The OCID of the certificate to use.
	CertificateId string `pulumi:"certificateId"`
}

// GetMysqlBackupDbSystemSnapshotSecureConnectionInput is an input type that accepts GetMysqlBackupDbSystemSnapshotSecureConnectionArgs and GetMysqlBackupDbSystemSnapshotSecureConnectionOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotSecureConnectionInput` via:
//
//	GetMysqlBackupDbSystemSnapshotSecureConnectionArgs{...}
type GetMysqlBackupDbSystemSnapshotSecureConnectionInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotSecureConnectionOutput() GetMysqlBackupDbSystemSnapshotSecureConnectionOutput
	ToGetMysqlBackupDbSystemSnapshotSecureConnectionOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotSecureConnectionOutput
}

type GetMysqlBackupDbSystemSnapshotSecureConnectionArgs struct {
	// Select whether to use MySQL Database Service-managed certificate (SYSTEM) or your own certificate (BYOC).
	CertificateGenerationType pulumi.StringInput `pulumi:"certificateGenerationType"`
	// The OCID of the certificate to use.
	CertificateId pulumi.StringInput `pulumi:"certificateId"`
}

func (GetMysqlBackupDbSystemSnapshotSecureConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotSecureConnection)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotSecureConnectionArgs) ToGetMysqlBackupDbSystemSnapshotSecureConnectionOutput() GetMysqlBackupDbSystemSnapshotSecureConnectionOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotSecureConnectionOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotSecureConnectionArgs) ToGetMysqlBackupDbSystemSnapshotSecureConnectionOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotSecureConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotSecureConnectionOutput)
}

// GetMysqlBackupDbSystemSnapshotSecureConnectionArrayInput is an input type that accepts GetMysqlBackupDbSystemSnapshotSecureConnectionArray and GetMysqlBackupDbSystemSnapshotSecureConnectionArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotSecureConnectionArrayInput` via:
//
//	GetMysqlBackupDbSystemSnapshotSecureConnectionArray{ GetMysqlBackupDbSystemSnapshotSecureConnectionArgs{...} }
type GetMysqlBackupDbSystemSnapshotSecureConnectionArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotSecureConnectionArrayOutput() GetMysqlBackupDbSystemSnapshotSecureConnectionArrayOutput
	ToGetMysqlBackupDbSystemSnapshotSecureConnectionArrayOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotSecureConnectionArrayOutput
}

type GetMysqlBackupDbSystemSnapshotSecureConnectionArray []GetMysqlBackupDbSystemSnapshotSecureConnectionInput

func (GetMysqlBackupDbSystemSnapshotSecureConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshotSecureConnection)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotSecureConnectionArray) ToGetMysqlBackupDbSystemSnapshotSecureConnectionArrayOutput() GetMysqlBackupDbSystemSnapshotSecureConnectionArrayOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotSecureConnectionArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotSecureConnectionArray) ToGetMysqlBackupDbSystemSnapshotSecureConnectionArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotSecureConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotSecureConnectionArrayOutput)
}

type GetMysqlBackupDbSystemSnapshotSecureConnectionOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotSecureConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotSecureConnection)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotSecureConnectionOutput) ToGetMysqlBackupDbSystemSnapshotSecureConnectionOutput() GetMysqlBackupDbSystemSnapshotSecureConnectionOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotSecureConnectionOutput) ToGetMysqlBackupDbSystemSnapshotSecureConnectionOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotSecureConnectionOutput {
	return o
}

// Select whether to use MySQL Database Service-managed certificate (SYSTEM) or your own certificate (BYOC).
func (o GetMysqlBackupDbSystemSnapshotSecureConnectionOutput) CertificateGenerationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotSecureConnection) string { return v.CertificateGenerationType }).(pulumi.StringOutput)
}

// The OCID of the certificate to use.
func (o GetMysqlBackupDbSystemSnapshotSecureConnectionOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotSecureConnection) string { return v.CertificateId }).(pulumi.StringOutput)
}

type GetMysqlBackupDbSystemSnapshotSecureConnectionArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotSecureConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshotSecureConnection)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotSecureConnectionArrayOutput) ToGetMysqlBackupDbSystemSnapshotSecureConnectionArrayOutput() GetMysqlBackupDbSystemSnapshotSecureConnectionArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotSecureConnectionArrayOutput) ToGetMysqlBackupDbSystemSnapshotSecureConnectionArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotSecureConnectionArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotSecureConnectionArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupDbSystemSnapshotSecureConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupDbSystemSnapshotSecureConnection {
		return vs[0].([]GetMysqlBackupDbSystemSnapshotSecureConnection)[vs[1].(int)]
	}).(GetMysqlBackupDbSystemSnapshotSecureConnectionOutput)
}

type GetMysqlBackupDbSystemSnapshotSummary struct {
	// A user-supplied display name for the backup.
	DisplayName string `pulumi:"displayName"`
	// OCID of the backup itself
	Id string `pulumi:"id"`
	// The region identifier of the region where the DB system exists. For more information, please see [Regions and Availability Domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm).
	Region string `pulumi:"region"`
}

// GetMysqlBackupDbSystemSnapshotSummaryInput is an input type that accepts GetMysqlBackupDbSystemSnapshotSummaryArgs and GetMysqlBackupDbSystemSnapshotSummaryOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotSummaryInput` via:
//
//	GetMysqlBackupDbSystemSnapshotSummaryArgs{...}
type GetMysqlBackupDbSystemSnapshotSummaryInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotSummaryOutput() GetMysqlBackupDbSystemSnapshotSummaryOutput
	ToGetMysqlBackupDbSystemSnapshotSummaryOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotSummaryOutput
}

type GetMysqlBackupDbSystemSnapshotSummaryArgs struct {
	// A user-supplied display name for the backup.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// OCID of the backup itself
	Id pulumi.StringInput `pulumi:"id"`
	// The region identifier of the region where the DB system exists. For more information, please see [Regions and Availability Domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm).
	Region pulumi.StringInput `pulumi:"region"`
}

func (GetMysqlBackupDbSystemSnapshotSummaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotSummary)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotSummaryArgs) ToGetMysqlBackupDbSystemSnapshotSummaryOutput() GetMysqlBackupDbSystemSnapshotSummaryOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotSummaryOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotSummaryArgs) ToGetMysqlBackupDbSystemSnapshotSummaryOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotSummaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotSummaryOutput)
}

// GetMysqlBackupDbSystemSnapshotSummaryArrayInput is an input type that accepts GetMysqlBackupDbSystemSnapshotSummaryArray and GetMysqlBackupDbSystemSnapshotSummaryArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupDbSystemSnapshotSummaryArrayInput` via:
//
//	GetMysqlBackupDbSystemSnapshotSummaryArray{ GetMysqlBackupDbSystemSnapshotSummaryArgs{...} }
type GetMysqlBackupDbSystemSnapshotSummaryArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupDbSystemSnapshotSummaryArrayOutput() GetMysqlBackupDbSystemSnapshotSummaryArrayOutput
	ToGetMysqlBackupDbSystemSnapshotSummaryArrayOutputWithContext(context.Context) GetMysqlBackupDbSystemSnapshotSummaryArrayOutput
}

type GetMysqlBackupDbSystemSnapshotSummaryArray []GetMysqlBackupDbSystemSnapshotSummaryInput

func (GetMysqlBackupDbSystemSnapshotSummaryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshotSummary)(nil)).Elem()
}

func (i GetMysqlBackupDbSystemSnapshotSummaryArray) ToGetMysqlBackupDbSystemSnapshotSummaryArrayOutput() GetMysqlBackupDbSystemSnapshotSummaryArrayOutput {
	return i.ToGetMysqlBackupDbSystemSnapshotSummaryArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupDbSystemSnapshotSummaryArray) ToGetMysqlBackupDbSystemSnapshotSummaryArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotSummaryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupDbSystemSnapshotSummaryArrayOutput)
}

type GetMysqlBackupDbSystemSnapshotSummaryOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotSummaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotSummary)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotSummaryOutput) ToGetMysqlBackupDbSystemSnapshotSummaryOutput() GetMysqlBackupDbSystemSnapshotSummaryOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotSummaryOutput) ToGetMysqlBackupDbSystemSnapshotSummaryOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotSummaryOutput {
	return o
}

// A user-supplied display name for the backup.
func (o GetMysqlBackupDbSystemSnapshotSummaryOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotSummary) string { return v.DisplayName }).(pulumi.StringOutput)
}

// OCID of the backup itself
func (o GetMysqlBackupDbSystemSnapshotSummaryOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotSummary) string { return v.Id }).(pulumi.StringOutput)
}

// The region identifier of the region where the DB system exists. For more information, please see [Regions and Availability Domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm).
func (o GetMysqlBackupDbSystemSnapshotSummaryOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupDbSystemSnapshotSummary) string { return v.Region }).(pulumi.StringOutput)
}

type GetMysqlBackupDbSystemSnapshotSummaryArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupDbSystemSnapshotSummaryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupDbSystemSnapshotSummary)(nil)).Elem()
}

func (o GetMysqlBackupDbSystemSnapshotSummaryArrayOutput) ToGetMysqlBackupDbSystemSnapshotSummaryArrayOutput() GetMysqlBackupDbSystemSnapshotSummaryArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotSummaryArrayOutput) ToGetMysqlBackupDbSystemSnapshotSummaryArrayOutputWithContext(ctx context.Context) GetMysqlBackupDbSystemSnapshotSummaryArrayOutput {
	return o
}

func (o GetMysqlBackupDbSystemSnapshotSummaryArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupDbSystemSnapshotSummaryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupDbSystemSnapshotSummary {
		return vs[0].([]GetMysqlBackupDbSystemSnapshotSummary)[vs[1].(int)]
	}).(GetMysqlBackupDbSystemSnapshotSummaryOutput)
}

type GetMysqlBackupEncryptData struct {
	// Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
	KeyGenerationType string `pulumi:"keyGenerationType"`
	// The OCID of the key to use.
	KeyId string `pulumi:"keyId"`
}

// GetMysqlBackupEncryptDataInput is an input type that accepts GetMysqlBackupEncryptDataArgs and GetMysqlBackupEncryptDataOutput values.
// You can construct a concrete instance of `GetMysqlBackupEncryptDataInput` via:
//
//	GetMysqlBackupEncryptDataArgs{...}
type GetMysqlBackupEncryptDataInput interface {
	pulumi.Input

	ToGetMysqlBackupEncryptDataOutput() GetMysqlBackupEncryptDataOutput
	ToGetMysqlBackupEncryptDataOutputWithContext(context.Context) GetMysqlBackupEncryptDataOutput
}

type GetMysqlBackupEncryptDataArgs struct {
	// Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
	KeyGenerationType pulumi.StringInput `pulumi:"keyGenerationType"`
	// The OCID of the key to use.
	KeyId pulumi.StringInput `pulumi:"keyId"`
}

func (GetMysqlBackupEncryptDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupEncryptData)(nil)).Elem()
}

func (i GetMysqlBackupEncryptDataArgs) ToGetMysqlBackupEncryptDataOutput() GetMysqlBackupEncryptDataOutput {
	return i.ToGetMysqlBackupEncryptDataOutputWithContext(context.Background())
}

func (i GetMysqlBackupEncryptDataArgs) ToGetMysqlBackupEncryptDataOutputWithContext(ctx context.Context) GetMysqlBackupEncryptDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupEncryptDataOutput)
}

// GetMysqlBackupEncryptDataArrayInput is an input type that accepts GetMysqlBackupEncryptDataArray and GetMysqlBackupEncryptDataArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupEncryptDataArrayInput` via:
//
//	GetMysqlBackupEncryptDataArray{ GetMysqlBackupEncryptDataArgs{...} }
type GetMysqlBackupEncryptDataArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupEncryptDataArrayOutput() GetMysqlBackupEncryptDataArrayOutput
	ToGetMysqlBackupEncryptDataArrayOutputWithContext(context.Context) GetMysqlBackupEncryptDataArrayOutput
}

type GetMysqlBackupEncryptDataArray []GetMysqlBackupEncryptDataInput

func (GetMysqlBackupEncryptDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupEncryptData)(nil)).Elem()
}

func (i GetMysqlBackupEncryptDataArray) ToGetMysqlBackupEncryptDataArrayOutput() GetMysqlBackupEncryptDataArrayOutput {
	return i.ToGetMysqlBackupEncryptDataArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupEncryptDataArray) ToGetMysqlBackupEncryptDataArrayOutputWithContext(ctx context.Context) GetMysqlBackupEncryptDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupEncryptDataArrayOutput)
}

type GetMysqlBackupEncryptDataOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupEncryptDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupEncryptData)(nil)).Elem()
}

func (o GetMysqlBackupEncryptDataOutput) ToGetMysqlBackupEncryptDataOutput() GetMysqlBackupEncryptDataOutput {
	return o
}

func (o GetMysqlBackupEncryptDataOutput) ToGetMysqlBackupEncryptDataOutputWithContext(ctx context.Context) GetMysqlBackupEncryptDataOutput {
	return o
}

// Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
func (o GetMysqlBackupEncryptDataOutput) KeyGenerationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupEncryptData) string { return v.KeyGenerationType }).(pulumi.StringOutput)
}

// The OCID of the key to use.
func (o GetMysqlBackupEncryptDataOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupEncryptData) string { return v.KeyId }).(pulumi.StringOutput)
}

type GetMysqlBackupEncryptDataArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupEncryptDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupEncryptData)(nil)).Elem()
}

func (o GetMysqlBackupEncryptDataArrayOutput) ToGetMysqlBackupEncryptDataArrayOutput() GetMysqlBackupEncryptDataArrayOutput {
	return o
}

func (o GetMysqlBackupEncryptDataArrayOutput) ToGetMysqlBackupEncryptDataArrayOutputWithContext(ctx context.Context) GetMysqlBackupEncryptDataArrayOutput {
	return o
}

func (o GetMysqlBackupEncryptDataArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupEncryptDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupEncryptData {
		return vs[0].([]GetMysqlBackupEncryptData)[vs[1].(int)]
	}).(GetMysqlBackupEncryptDataOutput)
}

type GetMysqlBackupSourceDetail struct {
	// The OCID of the Backup
	BackupId string `pulumi:"backupId"`
	// The OCID of the compartment the DB System belongs in.
	CompartmentId string `pulumi:"compartmentId"`
	// The region identifier of the region where the DB system exists. For more information, please see [Regions and Availability Domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm).
	Region string `pulumi:"region"`
}

// GetMysqlBackupSourceDetailInput is an input type that accepts GetMysqlBackupSourceDetailArgs and GetMysqlBackupSourceDetailOutput values.
// You can construct a concrete instance of `GetMysqlBackupSourceDetailInput` via:
//
//	GetMysqlBackupSourceDetailArgs{...}
type GetMysqlBackupSourceDetailInput interface {
	pulumi.Input

	ToGetMysqlBackupSourceDetailOutput() GetMysqlBackupSourceDetailOutput
	ToGetMysqlBackupSourceDetailOutputWithContext(context.Context) GetMysqlBackupSourceDetailOutput
}

type GetMysqlBackupSourceDetailArgs struct {
	// The OCID of the Backup
	BackupId pulumi.StringInput `pulumi:"backupId"`
	// The OCID of the compartment the DB System belongs in.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The region identifier of the region where the DB system exists. For more information, please see [Regions and Availability Domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm).
	Region pulumi.StringInput `pulumi:"region"`
}

func (GetMysqlBackupSourceDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupSourceDetail)(nil)).Elem()
}

func (i GetMysqlBackupSourceDetailArgs) ToGetMysqlBackupSourceDetailOutput() GetMysqlBackupSourceDetailOutput {
	return i.ToGetMysqlBackupSourceDetailOutputWithContext(context.Background())
}

func (i GetMysqlBackupSourceDetailArgs) ToGetMysqlBackupSourceDetailOutputWithContext(ctx context.Context) GetMysqlBackupSourceDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupSourceDetailOutput)
}

// GetMysqlBackupSourceDetailArrayInput is an input type that accepts GetMysqlBackupSourceDetailArray and GetMysqlBackupSourceDetailArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupSourceDetailArrayInput` via:
//
//	GetMysqlBackupSourceDetailArray{ GetMysqlBackupSourceDetailArgs{...} }
type GetMysqlBackupSourceDetailArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupSourceDetailArrayOutput() GetMysqlBackupSourceDetailArrayOutput
	ToGetMysqlBackupSourceDetailArrayOutputWithContext(context.Context) GetMysqlBackupSourceDetailArrayOutput
}

type GetMysqlBackupSourceDetailArray []GetMysqlBackupSourceDetailInput

func (GetMysqlBackupSourceDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupSourceDetail)(nil)).Elem()
}

func (i GetMysqlBackupSourceDetailArray) ToGetMysqlBackupSourceDetailArrayOutput() GetMysqlBackupSourceDetailArrayOutput {
	return i.ToGetMysqlBackupSourceDetailArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupSourceDetailArray) ToGetMysqlBackupSourceDetailArrayOutputWithContext(ctx context.Context) GetMysqlBackupSourceDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupSourceDetailArrayOutput)
}

type GetMysqlBackupSourceDetailOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupSourceDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupSourceDetail)(nil)).Elem()
}

func (o GetMysqlBackupSourceDetailOutput) ToGetMysqlBackupSourceDetailOutput() GetMysqlBackupSourceDetailOutput {
	return o
}

func (o GetMysqlBackupSourceDetailOutput) ToGetMysqlBackupSourceDetailOutputWithContext(ctx context.Context) GetMysqlBackupSourceDetailOutput {
	return o
}

// The OCID of the Backup
func (o GetMysqlBackupSourceDetailOutput) BackupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupSourceDetail) string { return v.BackupId }).(pulumi.StringOutput)
}

// The OCID of the compartment the DB System belongs in.
func (o GetMysqlBackupSourceDetailOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupSourceDetail) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The region identifier of the region where the DB system exists. For more information, please see [Regions and Availability Domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm).
func (o GetMysqlBackupSourceDetailOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupSourceDetail) string { return v.Region }).(pulumi.StringOutput)
}

type GetMysqlBackupSourceDetailArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupSourceDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupSourceDetail)(nil)).Elem()
}

func (o GetMysqlBackupSourceDetailArrayOutput) ToGetMysqlBackupSourceDetailArrayOutput() GetMysqlBackupSourceDetailArrayOutput {
	return o
}

func (o GetMysqlBackupSourceDetailArrayOutput) ToGetMysqlBackupSourceDetailArrayOutputWithContext(ctx context.Context) GetMysqlBackupSourceDetailArrayOutput {
	return o
}

func (o GetMysqlBackupSourceDetailArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupSourceDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupSourceDetail {
		return vs[0].([]GetMysqlBackupSourceDetail)[vs[1].(int)]
	}).(GetMysqlBackupSourceDetailOutput)
}

type GetMysqlBackupsBackup struct {
	// The size of the backup in base-2 (IEC) gibibytes. (GiB).
	BackupSizeInGbs int `pulumi:"backupSizeInGbs"`
	// The type of backup.
	BackupType string `pulumi:"backupType"`
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// Backup creationType
	CreationType string `pulumi:"creationType"`
	// DEPRECATED: User specified size of the data volume. May be less than current allocatedStorageSizeInGBs. Replaced by dataStorage.dataStorageSizeInGBs.
	DataStorageSizeInGb int `pulumi:"dataStorageSizeInGb"`
	// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId                string                                         `pulumi:"dbSystemId"`
	DbSystemSnapshotSummaries []GetMysqlBackupsBackupDbSystemSnapshotSummary `pulumi:"dbSystemSnapshotSummaries"`
	// Snapshot of the DbSystem details at the time of the backup
	DbSystemSnapshots []GetMysqlBackupsBackupDbSystemSnapshot `pulumi:"dbSystemSnapshots"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A user-supplied description for the backup.
	Description string `pulumi:"description"`
	// A filter to return only the resource matching the given display name exactly.
	DisplayName string `pulumi:"displayName"`
	// Encrypt data details.
	EncryptDatas []GetMysqlBackupsBackupEncryptData `pulumi:"encryptDatas"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// OCID of the backup itself
	Id string `pulumi:"id"`
	// The OCID of the immediate source DB system backup from which this DB system backup was copied.
	ImmediateSourceBackupId string `pulumi:"immediateSourceBackupId"`
	// Additional information about the current lifecycleState.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The MySQL server version of the DB System used for backup.
	MysqlVersion string `pulumi:"mysqlVersion"`
	// The OCID of the original source DB system backup from which this DB system backup was copied.
	OriginalSourceBackupId string `pulumi:"originalSourceBackupId"`
	// Number of days to retain this backup.
	RetentionInDays int `pulumi:"retentionInDays"`
	// The shape of the DB System instance used for backup.
	ShapeName string `pulumi:"shapeName"`
	// Backup Soft Delete
	SoftDelete    string                              `pulumi:"softDelete"`
	SourceDetails []GetMysqlBackupsBackupSourceDetail `pulumi:"sourceDetails"`
	// Backup Lifecycle State
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time the DB system backup copy was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeCopyCreated string `pulumi:"timeCopyCreated"`
	// The time the backup record was created.
	TimeCreated string `pulumi:"timeCreated"`
	// The time at which the backup was updated.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetMysqlBackupsBackupInput is an input type that accepts GetMysqlBackupsBackupArgs and GetMysqlBackupsBackupOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupInput` via:
//
//	GetMysqlBackupsBackupArgs{...}
type GetMysqlBackupsBackupInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupOutput() GetMysqlBackupsBackupOutput
	ToGetMysqlBackupsBackupOutputWithContext(context.Context) GetMysqlBackupsBackupOutput
}

type GetMysqlBackupsBackupArgs struct {
	// The size of the backup in base-2 (IEC) gibibytes. (GiB).
	BackupSizeInGbs pulumi.IntInput `pulumi:"backupSizeInGbs"`
	// The type of backup.
	BackupType pulumi.StringInput `pulumi:"backupType"`
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Backup creationType
	CreationType pulumi.StringInput `pulumi:"creationType"`
	// DEPRECATED: User specified size of the data volume. May be less than current allocatedStorageSizeInGBs. Replaced by dataStorage.dataStorageSizeInGBs.
	DataStorageSizeInGb pulumi.IntInput `pulumi:"dataStorageSizeInGb"`
	// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId                pulumi.StringInput                                     `pulumi:"dbSystemId"`
	DbSystemSnapshotSummaries GetMysqlBackupsBackupDbSystemSnapshotSummaryArrayInput `pulumi:"dbSystemSnapshotSummaries"`
	// Snapshot of the DbSystem details at the time of the backup
	DbSystemSnapshots GetMysqlBackupsBackupDbSystemSnapshotArrayInput `pulumi:"dbSystemSnapshots"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// A user-supplied description for the backup.
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only the resource matching the given display name exactly.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Encrypt data details.
	EncryptDatas GetMysqlBackupsBackupEncryptDataArrayInput `pulumi:"encryptDatas"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// OCID of the backup itself
	Id pulumi.StringInput `pulumi:"id"`
	// The OCID of the immediate source DB system backup from which this DB system backup was copied.
	ImmediateSourceBackupId pulumi.StringInput `pulumi:"immediateSourceBackupId"`
	// Additional information about the current lifecycleState.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// The MySQL server version of the DB System used for backup.
	MysqlVersion pulumi.StringInput `pulumi:"mysqlVersion"`
	// The OCID of the original source DB system backup from which this DB system backup was copied.
	OriginalSourceBackupId pulumi.StringInput `pulumi:"originalSourceBackupId"`
	// Number of days to retain this backup.
	RetentionInDays pulumi.IntInput `pulumi:"retentionInDays"`
	// The shape of the DB System instance used for backup.
	ShapeName pulumi.StringInput `pulumi:"shapeName"`
	// Backup Soft Delete
	SoftDelete    pulumi.StringInput                          `pulumi:"softDelete"`
	SourceDetails GetMysqlBackupsBackupSourceDetailArrayInput `pulumi:"sourceDetails"`
	// Backup Lifecycle State
	State pulumi.StringInput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput `pulumi:"systemTags"`
	// The date and time the DB system backup copy was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeCopyCreated pulumi.StringInput `pulumi:"timeCopyCreated"`
	// The time the backup record was created.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time at which the backup was updated.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetMysqlBackupsBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackup)(nil)).Elem()
}

func (i GetMysqlBackupsBackupArgs) ToGetMysqlBackupsBackupOutput() GetMysqlBackupsBackupOutput {
	return i.ToGetMysqlBackupsBackupOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupArgs) ToGetMysqlBackupsBackupOutputWithContext(ctx context.Context) GetMysqlBackupsBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupOutput)
}

// GetMysqlBackupsBackupArrayInput is an input type that accepts GetMysqlBackupsBackupArray and GetMysqlBackupsBackupArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupArrayInput` via:
//
//	GetMysqlBackupsBackupArray{ GetMysqlBackupsBackupArgs{...} }
type GetMysqlBackupsBackupArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupArrayOutput() GetMysqlBackupsBackupArrayOutput
	ToGetMysqlBackupsBackupArrayOutputWithContext(context.Context) GetMysqlBackupsBackupArrayOutput
}

type GetMysqlBackupsBackupArray []GetMysqlBackupsBackupInput

func (GetMysqlBackupsBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackup)(nil)).Elem()
}

func (i GetMysqlBackupsBackupArray) ToGetMysqlBackupsBackupArrayOutput() GetMysqlBackupsBackupArrayOutput {
	return i.ToGetMysqlBackupsBackupArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupArray) ToGetMysqlBackupsBackupArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupArrayOutput)
}

type GetMysqlBackupsBackupOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackup)(nil)).Elem()
}

func (o GetMysqlBackupsBackupOutput) ToGetMysqlBackupsBackupOutput() GetMysqlBackupsBackupOutput {
	return o
}

func (o GetMysqlBackupsBackupOutput) ToGetMysqlBackupsBackupOutputWithContext(ctx context.Context) GetMysqlBackupsBackupOutput {
	return o
}

// The size of the backup in base-2 (IEC) gibibytes. (GiB).
func (o GetMysqlBackupsBackupOutput) BackupSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) int { return v.BackupSizeInGbs }).(pulumi.IntOutput)
}

// The type of backup.
func (o GetMysqlBackupsBackupOutput) BackupType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) string { return v.BackupType }).(pulumi.StringOutput)
}

// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetMysqlBackupsBackupOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Backup creationType
func (o GetMysqlBackupsBackupOutput) CreationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) string { return v.CreationType }).(pulumi.StringOutput)
}

// DEPRECATED: User specified size of the data volume. May be less than current allocatedStorageSizeInGBs. Replaced by dataStorage.dataStorageSizeInGBs.
func (o GetMysqlBackupsBackupOutput) DataStorageSizeInGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) int { return v.DataStorageSizeInGb }).(pulumi.IntOutput)
}

// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetMysqlBackupsBackupOutput) DbSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) string { return v.DbSystemId }).(pulumi.StringOutput)
}

func (o GetMysqlBackupsBackupOutput) DbSystemSnapshotSummaries() GetMysqlBackupsBackupDbSystemSnapshotSummaryArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) []GetMysqlBackupsBackupDbSystemSnapshotSummary {
		return v.DbSystemSnapshotSummaries
	}).(GetMysqlBackupsBackupDbSystemSnapshotSummaryArrayOutput)
}

// Snapshot of the DbSystem details at the time of the backup
func (o GetMysqlBackupsBackupOutput) DbSystemSnapshots() GetMysqlBackupsBackupDbSystemSnapshotArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) []GetMysqlBackupsBackupDbSystemSnapshot { return v.DbSystemSnapshots }).(GetMysqlBackupsBackupDbSystemSnapshotArrayOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetMysqlBackupsBackupOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A user-supplied description for the backup.
func (o GetMysqlBackupsBackupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only the resource matching the given display name exactly.
func (o GetMysqlBackupsBackupOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Encrypt data details.
func (o GetMysqlBackupsBackupOutput) EncryptDatas() GetMysqlBackupsBackupEncryptDataArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) []GetMysqlBackupsBackupEncryptData { return v.EncryptDatas }).(GetMysqlBackupsBackupEncryptDataArrayOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetMysqlBackupsBackupOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// OCID of the backup itself
func (o GetMysqlBackupsBackupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) string { return v.Id }).(pulumi.StringOutput)
}

// The OCID of the immediate source DB system backup from which this DB system backup was copied.
func (o GetMysqlBackupsBackupOutput) ImmediateSourceBackupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) string { return v.ImmediateSourceBackupId }).(pulumi.StringOutput)
}

// Additional information about the current lifecycleState.
func (o GetMysqlBackupsBackupOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The MySQL server version of the DB System used for backup.
func (o GetMysqlBackupsBackupOutput) MysqlVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) string { return v.MysqlVersion }).(pulumi.StringOutput)
}

// The OCID of the original source DB system backup from which this DB system backup was copied.
func (o GetMysqlBackupsBackupOutput) OriginalSourceBackupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) string { return v.OriginalSourceBackupId }).(pulumi.StringOutput)
}

// Number of days to retain this backup.
func (o GetMysqlBackupsBackupOutput) RetentionInDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) int { return v.RetentionInDays }).(pulumi.IntOutput)
}

// The shape of the DB System instance used for backup.
func (o GetMysqlBackupsBackupOutput) ShapeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) string { return v.ShapeName }).(pulumi.StringOutput)
}

// Backup Soft Delete
func (o GetMysqlBackupsBackupOutput) SoftDelete() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) string { return v.SoftDelete }).(pulumi.StringOutput)
}

func (o GetMysqlBackupsBackupOutput) SourceDetails() GetMysqlBackupsBackupSourceDetailArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) []GetMysqlBackupsBackupSourceDetail { return v.SourceDetails }).(GetMysqlBackupsBackupSourceDetailArrayOutput)
}

// Backup Lifecycle State
func (o GetMysqlBackupsBackupOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetMysqlBackupsBackupOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The date and time the DB system backup copy was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o GetMysqlBackupsBackupOutput) TimeCopyCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) string { return v.TimeCopyCreated }).(pulumi.StringOutput)
}

// The time the backup record was created.
func (o GetMysqlBackupsBackupOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time at which the backup was updated.
func (o GetMysqlBackupsBackupOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackup) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetMysqlBackupsBackupArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackup)(nil)).Elem()
}

func (o GetMysqlBackupsBackupArrayOutput) ToGetMysqlBackupsBackupArrayOutput() GetMysqlBackupsBackupArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupArrayOutput) ToGetMysqlBackupsBackupArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupsBackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupsBackup {
		return vs[0].([]GetMysqlBackupsBackup)[vs[1].(int)]
	}).(GetMysqlBackupsBackupOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshot struct {
	// The username for the administrative user.
	AdminUsername string `pulumi:"adminUsername"`
	// The Availability Domain where the primary DB System should be located.
	AvailabilityDomain string `pulumi:"availabilityDomain"`
	// The Backup policy for the DB System.
	BackupPolicies []GetMysqlBackupsBackupDbSystemSnapshotBackupPolicy `pulumi:"backupPolicies"`
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// The OCID of the Configuration to be used for Instances in this DB System.
	ConfigurationId string `pulumi:"configurationId"`
	// Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
	CrashRecovery string `pulumi:"crashRecovery"`
	// DEPRECATED: User specified size of the data volume. May be less than current allocatedStorageSizeInGBs. Replaced by dataStorage.dataStorageSizeInGBs.
	DataStorageSizeInGb int `pulumi:"dataStorageSizeInGb"`
	// Data Storage information.
	DataStorages []GetMysqlBackupsBackupDbSystemSnapshotDataStorage `pulumi:"dataStorages"`
	// Whether to enable monitoring via the Database Management service.
	DatabaseManagement string `pulumi:"databaseManagement"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// The Deletion policy for the DB System.
	DeletionPolicies []GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicy `pulumi:"deletionPolicies"`
	// A user-supplied description for the backup.
	Description string `pulumi:"description"`
	// A filter to return only the resource matching the given display name exactly.
	DisplayName string `pulumi:"displayName"`
	// Encrypt data details.
	EncryptDatas []GetMysqlBackupsBackupDbSystemSnapshotEncryptData `pulumi:"encryptDatas"`
	// The network endpoints available for this DB System.
	Endpoints []GetMysqlBackupsBackupDbSystemSnapshotEndpoint `pulumi:"endpoints"`
	// The name of the Fault Domain the DB System is located in.
	FaultDomain string `pulumi:"faultDomain"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The hostname for the primary endpoint of the DB System. Used for DNS. The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com"). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
	HostnameLabel string `pulumi:"hostnameLabel"`
	// OCID of the backup itself
	Id string `pulumi:"id"`
	// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
	IpAddress string `pulumi:"ipAddress"`
	// Specifies if the DB System is highly available.
	IsHighlyAvailable bool `pulumi:"isHighlyAvailable"`
	// The Maintenance Policy for the DB System or Read Replica that this model is included in.
	Maintenances []GetMysqlBackupsBackupDbSystemSnapshotMaintenance `pulumi:"maintenances"`
	// The MySQL server version of the DB System used for backup.
	MysqlVersion string `pulumi:"mysqlVersion"`
	// Network Security Group OCIDs used for the VNIC attachment.
	NsgIds []string `pulumi:"nsgIds"`
	// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
	Port int `pulumi:"port"`
	// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
	PortX int `pulumi:"portX"`
	// The read endpoint of a DB System.
	ReadEndpoints []GetMysqlBackupsBackupDbSystemSnapshotReadEndpoint `pulumi:"readEndpoints"`
	// The region identifier of the region where the DB system exists. For more information, please see [Regions and Availability Domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm).
	Region string `pulumi:"region"`
	// REST configuration details.
	Rests []GetMysqlBackupsBackupDbSystemSnapshotRest `pulumi:"rests"`
	// Secure connection configuration details.
	SecureConnections []GetMysqlBackupsBackupDbSystemSnapshotSecureConnection `pulumi:"secureConnections"`
	// The shape of the DB System instance used for backup.
	ShapeName string `pulumi:"shapeName"`
	// The OCID of the subnet the DB System is associated with.
	SubnetId string `pulumi:"subnetId"`
}

// GetMysqlBackupsBackupDbSystemSnapshotInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotArgs and GetMysqlBackupsBackupDbSystemSnapshotOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotInput` via:
//
//	GetMysqlBackupsBackupDbSystemSnapshotArgs{...}
type GetMysqlBackupsBackupDbSystemSnapshotInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotOutput() GetMysqlBackupsBackupDbSystemSnapshotOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotArgs struct {
	// The username for the administrative user.
	AdminUsername pulumi.StringInput `pulumi:"adminUsername"`
	// The Availability Domain where the primary DB System should be located.
	AvailabilityDomain pulumi.StringInput `pulumi:"availabilityDomain"`
	// The Backup policy for the DB System.
	BackupPolicies GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayInput `pulumi:"backupPolicies"`
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The OCID of the Configuration to be used for Instances in this DB System.
	ConfigurationId pulumi.StringInput `pulumi:"configurationId"`
	// Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
	CrashRecovery pulumi.StringInput `pulumi:"crashRecovery"`
	// DEPRECATED: User specified size of the data volume. May be less than current allocatedStorageSizeInGBs. Replaced by dataStorage.dataStorageSizeInGBs.
	DataStorageSizeInGb pulumi.IntInput `pulumi:"dataStorageSizeInGb"`
	// Data Storage information.
	DataStorages GetMysqlBackupsBackupDbSystemSnapshotDataStorageArrayInput `pulumi:"dataStorages"`
	// Whether to enable monitoring via the Database Management service.
	DatabaseManagement pulumi.StringInput `pulumi:"databaseManagement"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// The Deletion policy for the DB System.
	DeletionPolicies GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayInput `pulumi:"deletionPolicies"`
	// A user-supplied description for the backup.
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only the resource matching the given display name exactly.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Encrypt data details.
	EncryptDatas GetMysqlBackupsBackupDbSystemSnapshotEncryptDataArrayInput `pulumi:"encryptDatas"`
	// The network endpoints available for this DB System.
	Endpoints GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayInput `pulumi:"endpoints"`
	// The name of the Fault Domain the DB System is located in.
	FaultDomain pulumi.StringInput `pulumi:"faultDomain"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// The hostname for the primary endpoint of the DB System. Used for DNS. The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com"). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
	HostnameLabel pulumi.StringInput `pulumi:"hostnameLabel"`
	// OCID of the backup itself
	Id pulumi.StringInput `pulumi:"id"`
	// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// Specifies if the DB System is highly available.
	IsHighlyAvailable pulumi.BoolInput `pulumi:"isHighlyAvailable"`
	// The Maintenance Policy for the DB System or Read Replica that this model is included in.
	Maintenances GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayInput `pulumi:"maintenances"`
	// The MySQL server version of the DB System used for backup.
	MysqlVersion pulumi.StringInput `pulumi:"mysqlVersion"`
	// Network Security Group OCIDs used for the VNIC attachment.
	NsgIds pulumi.StringArrayInput `pulumi:"nsgIds"`
	// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
	Port pulumi.IntInput `pulumi:"port"`
	// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
	PortX pulumi.IntInput `pulumi:"portX"`
	// The read endpoint of a DB System.
	ReadEndpoints GetMysqlBackupsBackupDbSystemSnapshotReadEndpointArrayInput `pulumi:"readEndpoints"`
	// The region identifier of the region where the DB system exists. For more information, please see [Regions and Availability Domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm).
	Region pulumi.StringInput `pulumi:"region"`
	// REST configuration details.
	Rests GetMysqlBackupsBackupDbSystemSnapshotRestArrayInput `pulumi:"rests"`
	// Secure connection configuration details.
	SecureConnections GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArrayInput `pulumi:"secureConnections"`
	// The shape of the DB System instance used for backup.
	ShapeName pulumi.StringInput `pulumi:"shapeName"`
	// The OCID of the subnet the DB System is associated with.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (GetMysqlBackupsBackupDbSystemSnapshotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshot)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotArgs) ToGetMysqlBackupsBackupDbSystemSnapshotOutput() GetMysqlBackupsBackupDbSystemSnapshotOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotArgs) ToGetMysqlBackupsBackupDbSystemSnapshotOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotOutput)
}

// GetMysqlBackupsBackupDbSystemSnapshotArrayInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotArray and GetMysqlBackupsBackupDbSystemSnapshotArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotArrayInput` via:
//
//	GetMysqlBackupsBackupDbSystemSnapshotArray{ GetMysqlBackupsBackupDbSystemSnapshotArgs{...} }
type GetMysqlBackupsBackupDbSystemSnapshotArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotArrayOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotArrayOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotArrayOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotArray []GetMysqlBackupsBackupDbSystemSnapshotInput

func (GetMysqlBackupsBackupDbSystemSnapshotArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshot)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotArray) ToGetMysqlBackupsBackupDbSystemSnapshotArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotArrayOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotArray) ToGetMysqlBackupsBackupDbSystemSnapshotArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotArrayOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshot)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) ToGetMysqlBackupsBackupDbSystemSnapshotOutput() GetMysqlBackupsBackupDbSystemSnapshotOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) ToGetMysqlBackupsBackupDbSystemSnapshotOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotOutput {
	return o
}

// The username for the administrative user.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) AdminUsername() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) string { return v.AdminUsername }).(pulumi.StringOutput)
}

// The Availability Domain where the primary DB System should be located.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) string { return v.AvailabilityDomain }).(pulumi.StringOutput)
}

// The Backup policy for the DB System.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) BackupPolicies() GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) []GetMysqlBackupsBackupDbSystemSnapshotBackupPolicy {
		return v.BackupPolicies
	}).(GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput)
}

// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The OCID of the Configuration to be used for Instances in this DB System.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) ConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) string { return v.ConfigurationId }).(pulumi.StringOutput)
}

// Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) CrashRecovery() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) string { return v.CrashRecovery }).(pulumi.StringOutput)
}

// DEPRECATED: User specified size of the data volume. May be less than current allocatedStorageSizeInGBs. Replaced by dataStorage.dataStorageSizeInGBs.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) DataStorageSizeInGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) int { return v.DataStorageSizeInGb }).(pulumi.IntOutput)
}

// Data Storage information.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) DataStorages() GetMysqlBackupsBackupDbSystemSnapshotDataStorageArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) []GetMysqlBackupsBackupDbSystemSnapshotDataStorage {
		return v.DataStorages
	}).(GetMysqlBackupsBackupDbSystemSnapshotDataStorageArrayOutput)
}

// Whether to enable monitoring via the Database Management service.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) DatabaseManagement() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) string { return v.DatabaseManagement }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// The Deletion policy for the DB System.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) DeletionPolicies() GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) []GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicy {
		return v.DeletionPolicies
	}).(GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput)
}

// A user-supplied description for the backup.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only the resource matching the given display name exactly.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Encrypt data details.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) EncryptDatas() GetMysqlBackupsBackupDbSystemSnapshotEncryptDataArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) []GetMysqlBackupsBackupDbSystemSnapshotEncryptData {
		return v.EncryptDatas
	}).(GetMysqlBackupsBackupDbSystemSnapshotEncryptDataArrayOutput)
}

// The network endpoints available for this DB System.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) Endpoints() GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) []GetMysqlBackupsBackupDbSystemSnapshotEndpoint {
		return v.Endpoints
	}).(GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput)
}

// The name of the Fault Domain the DB System is located in.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) FaultDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) string { return v.FaultDomain }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The hostname for the primary endpoint of the DB System. Used for DNS. The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com"). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) HostnameLabel() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) string { return v.HostnameLabel }).(pulumi.StringOutput)
}

// OCID of the backup itself
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) string { return v.Id }).(pulumi.StringOutput)
}

// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) string { return v.IpAddress }).(pulumi.StringOutput)
}

// Specifies if the DB System is highly available.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) IsHighlyAvailable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) bool { return v.IsHighlyAvailable }).(pulumi.BoolOutput)
}

// The Maintenance Policy for the DB System or Read Replica that this model is included in.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) Maintenances() GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) []GetMysqlBackupsBackupDbSystemSnapshotMaintenance {
		return v.Maintenances
	}).(GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput)
}

// The MySQL server version of the DB System used for backup.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) MysqlVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) string { return v.MysqlVersion }).(pulumi.StringOutput)
}

// Network Security Group OCIDs used for the VNIC attachment.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) NsgIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) []string { return v.NsgIds }).(pulumi.StringArrayOutput)
}

// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) int { return v.Port }).(pulumi.IntOutput)
}

// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) PortX() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) int { return v.PortX }).(pulumi.IntOutput)
}

// The read endpoint of a DB System.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) ReadEndpoints() GetMysqlBackupsBackupDbSystemSnapshotReadEndpointArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) []GetMysqlBackupsBackupDbSystemSnapshotReadEndpoint {
		return v.ReadEndpoints
	}).(GetMysqlBackupsBackupDbSystemSnapshotReadEndpointArrayOutput)
}

// The region identifier of the region where the DB system exists. For more information, please see [Regions and Availability Domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm).
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) string { return v.Region }).(pulumi.StringOutput)
}

// REST configuration details.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) Rests() GetMysqlBackupsBackupDbSystemSnapshotRestArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) []GetMysqlBackupsBackupDbSystemSnapshotRest {
		return v.Rests
	}).(GetMysqlBackupsBackupDbSystemSnapshotRestArrayOutput)
}

// Secure connection configuration details.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) SecureConnections() GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) []GetMysqlBackupsBackupDbSystemSnapshotSecureConnection {
		return v.SecureConnections
	}).(GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArrayOutput)
}

// The shape of the DB System instance used for backup.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) ShapeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) string { return v.ShapeName }).(pulumi.StringOutput)
}

// The OCID of the subnet the DB System is associated with.
func (o GetMysqlBackupsBackupDbSystemSnapshotOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshot) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshot)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupsBackupDbSystemSnapshotOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupsBackupDbSystemSnapshot {
		return vs[0].([]GetMysqlBackupsBackupDbSystemSnapshot)[vs[1].(int)]
	}).(GetMysqlBackupsBackupDbSystemSnapshotOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotBackupPolicy struct {
	// List of policies of a DB system to schedule cross-region DB system backup copy.
	CopyPolicies []GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicy `pulumi:"copyPolicies"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Specifies if the DB System read endpoint is enabled or not.
	IsEnabled bool `pulumi:"isEnabled"`
	// The PITR policy for the DB System.
	PitrPolicies []GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicy `pulumi:"pitrPolicies"`
	// Number of days to retain this backup.
	RetentionInDays int `pulumi:"retentionInDays"`
	// Backup Soft Delete
	SoftDelete string `pulumi:"softDelete"`
	// The start time of the maintenance window.
	WindowStartTime string `pulumi:"windowStartTime"`
}

// GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArgs and GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyInput` via:
//
//	GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArgs{...}
type GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput() GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArgs struct {
	// List of policies of a DB system to schedule cross-region DB system backup copy.
	CopyPolicies GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayInput `pulumi:"copyPolicies"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// Specifies if the DB System read endpoint is enabled or not.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The PITR policy for the DB System.
	PitrPolicies GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayInput `pulumi:"pitrPolicies"`
	// Number of days to retain this backup.
	RetentionInDays pulumi.IntInput `pulumi:"retentionInDays"`
	// Backup Soft Delete
	SoftDelete pulumi.StringInput `pulumi:"softDelete"`
	// The start time of the maintenance window.
	WindowStartTime pulumi.StringInput `pulumi:"windowStartTime"`
}

func (GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotBackupPolicy)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArgs) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput() GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArgs) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput)
}

// GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArray and GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayInput` via:
//
//	GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArray{ GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArgs{...} }
type GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArray []GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyInput

func (GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshotBackupPolicy)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArray) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArray) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotBackupPolicy)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput() GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput {
	return o
}

// List of policies of a DB system to schedule cross-region DB system backup copy.
func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput) CopyPolicies() GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotBackupPolicy) []GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicy {
		return v.CopyPolicies
	}).(GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotBackupPolicy) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotBackupPolicy) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Specifies if the DB System read endpoint is enabled or not.
func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotBackupPolicy) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The PITR policy for the DB System.
func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput) PitrPolicies() GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotBackupPolicy) []GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicy {
		return v.PitrPolicies
	}).(GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput)
}

// Number of days to retain this backup.
func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput) RetentionInDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotBackupPolicy) int { return v.RetentionInDays }).(pulumi.IntOutput)
}

// Backup Soft Delete
func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput) SoftDelete() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotBackupPolicy) string { return v.SoftDelete }).(pulumi.StringOutput)
}

// The start time of the maintenance window.
func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput) WindowStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotBackupPolicy) string { return v.WindowStartTime }).(pulumi.StringOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshotBackupPolicy)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicy {
		return vs[0].([]GetMysqlBackupsBackupDbSystemSnapshotBackupPolicy)[vs[1].(int)]
	}).(GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicy struct {
	// Number of days to retain the copied DB system backup.
	BackupCopyRetentionInDays int `pulumi:"backupCopyRetentionInDays"`
	// The destination region name to which the DB system backup will be copied.
	CopyToRegion string `pulumi:"copyToRegion"`
}

// GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArgs and GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyInput` via:
//
//	GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArgs{...}
type GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput() GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArgs struct {
	// Number of days to retain the copied DB system backup.
	BackupCopyRetentionInDays pulumi.IntInput `pulumi:"backupCopyRetentionInDays"`
	// The destination region name to which the DB system backup will be copied.
	CopyToRegion pulumi.StringInput `pulumi:"copyToRegion"`
}

func (GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicy)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArgs) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput() GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArgs) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput)
}

// GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArray and GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayInput` via:
//
//	GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArray{ GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArgs{...} }
type GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArray []GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyInput

func (GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicy)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArray) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArray) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicy)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput() GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput {
	return o
}

// Number of days to retain the copied DB system backup.
func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput) BackupCopyRetentionInDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicy) int {
		return v.BackupCopyRetentionInDays
	}).(pulumi.IntOutput)
}

// The destination region name to which the DB system backup will be copied.
func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput) CopyToRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicy) string { return v.CopyToRegion }).(pulumi.StringOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicy)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicy {
		return vs[0].([]GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicy)[vs[1].(int)]
	}).(GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicy struct {
	// Specifies if the DB System read endpoint is enabled or not.
	IsEnabled bool `pulumi:"isEnabled"`
}

// GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs and GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyInput` via:
//
//	GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs{...}
type GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput() GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs struct {
	// Specifies if the DB System read endpoint is enabled or not.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
}

func (GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicy)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput() GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput)
}

// GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArray and GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayInput` via:
//
//	GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArray{ GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs{...} }
type GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArray []GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyInput

func (GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicy)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArray) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArray) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicy)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput() GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput {
	return o
}

// Specifies if the DB System read endpoint is enabled or not.
func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicy) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicy)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicy {
		return vs[0].([]GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicy)[vs[1].(int)]
	}).(GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotDataStorage struct {
	// The actual allocated storage size for the DB System. This may be higher than dataStorageSizeInGBs if an automatic storage expansion has occurred.
	AllocatedStorageSizeInGbs int `pulumi:"allocatedStorageSizeInGbs"`
	// DEPRECATED: User specified size of the data volume. May be less than current allocatedStorageSizeInGBs. Replaced by dataStorage.dataStorageSizeInGBs.
	DataStorageSizeInGb int `pulumi:"dataStorageSizeInGb"`
	// The absolute limit the DB System's storage size may ever expand to, either manually or automatically. This limit is based based on the initial dataStorageSizeInGBs when the DB System was first created. Both dataStorageSizeInGBs and maxDataStorageSizeInGBs can not exceed this value.
	DataStorageSizeLimitInGbs int `pulumi:"dataStorageSizeLimitInGbs"`
	// Enable/disable automatic storage expansion. When set to true, the DB System will automatically add storage incrementally up to the value specified in maxStorageSizeInGBs.
	IsAutoExpandStorageEnabled bool `pulumi:"isAutoExpandStorageEnabled"`
	// Maximum storage size this DB System can expand to. When isAutoExpandStorageEnabled is set to true, the DB System will add storage incrementally up to this value.
	MaxStorageSizeInGbs int `pulumi:"maxStorageSizeInGbs"`
}

// GetMysqlBackupsBackupDbSystemSnapshotDataStorageInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotDataStorageArgs and GetMysqlBackupsBackupDbSystemSnapshotDataStorageOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotDataStorageInput` via:
//
//	GetMysqlBackupsBackupDbSystemSnapshotDataStorageArgs{...}
type GetMysqlBackupsBackupDbSystemSnapshotDataStorageInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotDataStorageOutput() GetMysqlBackupsBackupDbSystemSnapshotDataStorageOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotDataStorageOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotDataStorageOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotDataStorageArgs struct {
	// The actual allocated storage size for the DB System. This may be higher than dataStorageSizeInGBs if an automatic storage expansion has occurred.
	AllocatedStorageSizeInGbs pulumi.IntInput `pulumi:"allocatedStorageSizeInGbs"`
	// DEPRECATED: User specified size of the data volume. May be less than current allocatedStorageSizeInGBs. Replaced by dataStorage.dataStorageSizeInGBs.
	DataStorageSizeInGb pulumi.IntInput `pulumi:"dataStorageSizeInGb"`
	// The absolute limit the DB System's storage size may ever expand to, either manually or automatically. This limit is based based on the initial dataStorageSizeInGBs when the DB System was first created. Both dataStorageSizeInGBs and maxDataStorageSizeInGBs can not exceed this value.
	DataStorageSizeLimitInGbs pulumi.IntInput `pulumi:"dataStorageSizeLimitInGbs"`
	// Enable/disable automatic storage expansion. When set to true, the DB System will automatically add storage incrementally up to the value specified in maxStorageSizeInGBs.
	IsAutoExpandStorageEnabled pulumi.BoolInput `pulumi:"isAutoExpandStorageEnabled"`
	// Maximum storage size this DB System can expand to. When isAutoExpandStorageEnabled is set to true, the DB System will add storage incrementally up to this value.
	MaxStorageSizeInGbs pulumi.IntInput `pulumi:"maxStorageSizeInGbs"`
}

func (GetMysqlBackupsBackupDbSystemSnapshotDataStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotDataStorage)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotDataStorageArgs) ToGetMysqlBackupsBackupDbSystemSnapshotDataStorageOutput() GetMysqlBackupsBackupDbSystemSnapshotDataStorageOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotDataStorageOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotDataStorageArgs) ToGetMysqlBackupsBackupDbSystemSnapshotDataStorageOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotDataStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotDataStorageOutput)
}

// GetMysqlBackupsBackupDbSystemSnapshotDataStorageArrayInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotDataStorageArray and GetMysqlBackupsBackupDbSystemSnapshotDataStorageArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotDataStorageArrayInput` via:
//
//	GetMysqlBackupsBackupDbSystemSnapshotDataStorageArray{ GetMysqlBackupsBackupDbSystemSnapshotDataStorageArgs{...} }
type GetMysqlBackupsBackupDbSystemSnapshotDataStorageArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotDataStorageArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotDataStorageArrayOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotDataStorageArrayOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotDataStorageArrayOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotDataStorageArray []GetMysqlBackupsBackupDbSystemSnapshotDataStorageInput

func (GetMysqlBackupsBackupDbSystemSnapshotDataStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshotDataStorage)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotDataStorageArray) ToGetMysqlBackupsBackupDbSystemSnapshotDataStorageArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotDataStorageArrayOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotDataStorageArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotDataStorageArray) ToGetMysqlBackupsBackupDbSystemSnapshotDataStorageArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotDataStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotDataStorageArrayOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotDataStorageOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotDataStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotDataStorage)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotDataStorageOutput) ToGetMysqlBackupsBackupDbSystemSnapshotDataStorageOutput() GetMysqlBackupsBackupDbSystemSnapshotDataStorageOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotDataStorageOutput) ToGetMysqlBackupsBackupDbSystemSnapshotDataStorageOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotDataStorageOutput {
	return o
}

// The actual allocated storage size for the DB System. This may be higher than dataStorageSizeInGBs if an automatic storage expansion has occurred.
func (o GetMysqlBackupsBackupDbSystemSnapshotDataStorageOutput) AllocatedStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotDataStorage) int { return v.AllocatedStorageSizeInGbs }).(pulumi.IntOutput)
}

// DEPRECATED: User specified size of the data volume. May be less than current allocatedStorageSizeInGBs. Replaced by dataStorage.dataStorageSizeInGBs.
func (o GetMysqlBackupsBackupDbSystemSnapshotDataStorageOutput) DataStorageSizeInGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotDataStorage) int { return v.DataStorageSizeInGb }).(pulumi.IntOutput)
}

// The absolute limit the DB System's storage size may ever expand to, either manually or automatically. This limit is based based on the initial dataStorageSizeInGBs when the DB System was first created. Both dataStorageSizeInGBs and maxDataStorageSizeInGBs can not exceed this value.
func (o GetMysqlBackupsBackupDbSystemSnapshotDataStorageOutput) DataStorageSizeLimitInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotDataStorage) int { return v.DataStorageSizeLimitInGbs }).(pulumi.IntOutput)
}

// Enable/disable automatic storage expansion. When set to true, the DB System will automatically add storage incrementally up to the value specified in maxStorageSizeInGBs.
func (o GetMysqlBackupsBackupDbSystemSnapshotDataStorageOutput) IsAutoExpandStorageEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotDataStorage) bool { return v.IsAutoExpandStorageEnabled }).(pulumi.BoolOutput)
}

// Maximum storage size this DB System can expand to. When isAutoExpandStorageEnabled is set to true, the DB System will add storage incrementally up to this value.
func (o GetMysqlBackupsBackupDbSystemSnapshotDataStorageOutput) MaxStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotDataStorage) int { return v.MaxStorageSizeInGbs }).(pulumi.IntOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotDataStorageArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotDataStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshotDataStorage)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotDataStorageArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotDataStorageArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotDataStorageArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotDataStorageArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotDataStorageArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotDataStorageArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotDataStorageArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupsBackupDbSystemSnapshotDataStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupsBackupDbSystemSnapshotDataStorage {
		return vs[0].([]GetMysqlBackupsBackupDbSystemSnapshotDataStorage)[vs[1].(int)]
	}).(GetMysqlBackupsBackupDbSystemSnapshotDataStorageOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicy struct {
	// Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
	AutomaticBackupRetention string `pulumi:"automaticBackupRetention"`
	// Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
	FinalBackup string `pulumi:"finalBackup"`
	// Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
	IsDeleteProtected bool `pulumi:"isDeleteProtected"`
}

// GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArgs and GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyInput` via:
//
//	GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArgs{...}
type GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput() GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArgs struct {
	// Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
	AutomaticBackupRetention pulumi.StringInput `pulumi:"automaticBackupRetention"`
	// Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
	FinalBackup pulumi.StringInput `pulumi:"finalBackup"`
	// Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
	IsDeleteProtected pulumi.BoolInput `pulumi:"isDeleteProtected"`
}

func (GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicy)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArgs) ToGetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput() GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArgs) ToGetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput)
}

// GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArray and GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayInput` via:
//
//	GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArray{ GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArgs{...} }
type GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArray []GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyInput

func (GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicy)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArray) ToGetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArray) ToGetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicy)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput) ToGetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput() GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput) ToGetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput {
	return o
}

// Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
func (o GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput) AutomaticBackupRetention() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicy) string { return v.AutomaticBackupRetention }).(pulumi.StringOutput)
}

// Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
func (o GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput) FinalBackup() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicy) string { return v.FinalBackup }).(pulumi.StringOutput)
}

// Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
func (o GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput) IsDeleteProtected() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicy) bool { return v.IsDeleteProtected }).(pulumi.BoolOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicy)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicy {
		return vs[0].([]GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicy)[vs[1].(int)]
	}).(GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotEncryptData struct {
	// Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
	KeyGenerationType string `pulumi:"keyGenerationType"`
	// The OCID of the key to use.
	KeyId string `pulumi:"keyId"`
}

// GetMysqlBackupsBackupDbSystemSnapshotEncryptDataInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotEncryptDataArgs and GetMysqlBackupsBackupDbSystemSnapshotEncryptDataOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotEncryptDataInput` via:
//
//	GetMysqlBackupsBackupDbSystemSnapshotEncryptDataArgs{...}
type GetMysqlBackupsBackupDbSystemSnapshotEncryptDataInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotEncryptDataOutput() GetMysqlBackupsBackupDbSystemSnapshotEncryptDataOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotEncryptDataOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotEncryptDataOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotEncryptDataArgs struct {
	// Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
	KeyGenerationType pulumi.StringInput `pulumi:"keyGenerationType"`
	// The OCID of the key to use.
	KeyId pulumi.StringInput `pulumi:"keyId"`
}

func (GetMysqlBackupsBackupDbSystemSnapshotEncryptDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotEncryptData)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotEncryptDataArgs) ToGetMysqlBackupsBackupDbSystemSnapshotEncryptDataOutput() GetMysqlBackupsBackupDbSystemSnapshotEncryptDataOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotEncryptDataOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotEncryptDataArgs) ToGetMysqlBackupsBackupDbSystemSnapshotEncryptDataOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotEncryptDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotEncryptDataOutput)
}

// GetMysqlBackupsBackupDbSystemSnapshotEncryptDataArrayInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotEncryptDataArray and GetMysqlBackupsBackupDbSystemSnapshotEncryptDataArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotEncryptDataArrayInput` via:
//
//	GetMysqlBackupsBackupDbSystemSnapshotEncryptDataArray{ GetMysqlBackupsBackupDbSystemSnapshotEncryptDataArgs{...} }
type GetMysqlBackupsBackupDbSystemSnapshotEncryptDataArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotEncryptDataArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotEncryptDataArrayOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotEncryptDataArrayOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotEncryptDataArrayOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotEncryptDataArray []GetMysqlBackupsBackupDbSystemSnapshotEncryptDataInput

func (GetMysqlBackupsBackupDbSystemSnapshotEncryptDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshotEncryptData)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotEncryptDataArray) ToGetMysqlBackupsBackupDbSystemSnapshotEncryptDataArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotEncryptDataArrayOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotEncryptDataArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotEncryptDataArray) ToGetMysqlBackupsBackupDbSystemSnapshotEncryptDataArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotEncryptDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotEncryptDataArrayOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotEncryptDataOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotEncryptDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotEncryptData)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotEncryptDataOutput) ToGetMysqlBackupsBackupDbSystemSnapshotEncryptDataOutput() GetMysqlBackupsBackupDbSystemSnapshotEncryptDataOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotEncryptDataOutput) ToGetMysqlBackupsBackupDbSystemSnapshotEncryptDataOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotEncryptDataOutput {
	return o
}

// Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
func (o GetMysqlBackupsBackupDbSystemSnapshotEncryptDataOutput) KeyGenerationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotEncryptData) string { return v.KeyGenerationType }).(pulumi.StringOutput)
}

// The OCID of the key to use.
func (o GetMysqlBackupsBackupDbSystemSnapshotEncryptDataOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotEncryptData) string { return v.KeyId }).(pulumi.StringOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotEncryptDataArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotEncryptDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshotEncryptData)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotEncryptDataArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotEncryptDataArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotEncryptDataArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotEncryptDataArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotEncryptDataArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotEncryptDataArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotEncryptDataArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupsBackupDbSystemSnapshotEncryptDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupsBackupDbSystemSnapshotEncryptData {
		return vs[0].([]GetMysqlBackupsBackupDbSystemSnapshotEncryptData)[vs[1].(int)]
	}).(GetMysqlBackupsBackupDbSystemSnapshotEncryptDataOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotEndpoint struct {
	// The network address of the DB System.
	Hostname string `pulumi:"hostname"`
	// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
	IpAddress string `pulumi:"ipAddress"`
	// The access modes from the client that this endpoint supports.
	Modes []string `pulumi:"modes"`
	// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
	Port int `pulumi:"port"`
	// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
	PortX int `pulumi:"portX"`
	// The OCID of the resource that this endpoint is attached to.
	ResourceId string `pulumi:"resourceId"`
	// The type of endpoint that clients and connectors can connect to.
	ResourceType string `pulumi:"resourceType"`
	// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
	Status string `pulumi:"status"`
	// Additional information about the current endpoint status.
	StatusDetails string `pulumi:"statusDetails"`
}

// GetMysqlBackupsBackupDbSystemSnapshotEndpointInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotEndpointArgs and GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotEndpointInput` via:
//
//	GetMysqlBackupsBackupDbSystemSnapshotEndpointArgs{...}
type GetMysqlBackupsBackupDbSystemSnapshotEndpointInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotEndpointOutput() GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotEndpointOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotEndpointArgs struct {
	// The network address of the DB System.
	Hostname pulumi.StringInput `pulumi:"hostname"`
	// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// The access modes from the client that this endpoint supports.
	Modes pulumi.StringArrayInput `pulumi:"modes"`
	// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
	Port pulumi.IntInput `pulumi:"port"`
	// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
	PortX pulumi.IntInput `pulumi:"portX"`
	// The OCID of the resource that this endpoint is attached to.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// The type of endpoint that clients and connectors can connect to.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
	Status pulumi.StringInput `pulumi:"status"`
	// Additional information about the current endpoint status.
	StatusDetails pulumi.StringInput `pulumi:"statusDetails"`
}

func (GetMysqlBackupsBackupDbSystemSnapshotEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotEndpoint)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotEndpointArgs) ToGetMysqlBackupsBackupDbSystemSnapshotEndpointOutput() GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotEndpointOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotEndpointArgs) ToGetMysqlBackupsBackupDbSystemSnapshotEndpointOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput)
}

// GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotEndpointArray and GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayInput` via:
//
//	GetMysqlBackupsBackupDbSystemSnapshotEndpointArray{ GetMysqlBackupsBackupDbSystemSnapshotEndpointArgs{...} }
type GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotEndpointArray []GetMysqlBackupsBackupDbSystemSnapshotEndpointInput

func (GetMysqlBackupsBackupDbSystemSnapshotEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshotEndpoint)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotEndpointArray) ToGetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotEndpointArray) ToGetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotEndpoint)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput) ToGetMysqlBackupsBackupDbSystemSnapshotEndpointOutput() GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput) ToGetMysqlBackupsBackupDbSystemSnapshotEndpointOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput {
	return o
}

// The network address of the DB System.
func (o GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotEndpoint) string { return v.Hostname }).(pulumi.StringOutput)
}

// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
func (o GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotEndpoint) string { return v.IpAddress }).(pulumi.StringOutput)
}

// The access modes from the client that this endpoint supports.
func (o GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput) Modes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotEndpoint) []string { return v.Modes }).(pulumi.StringArrayOutput)
}

// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
func (o GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotEndpoint) int { return v.Port }).(pulumi.IntOutput)
}

// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
func (o GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput) PortX() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotEndpoint) int { return v.PortX }).(pulumi.IntOutput)
}

// The OCID of the resource that this endpoint is attached to.
func (o GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotEndpoint) string { return v.ResourceId }).(pulumi.StringOutput)
}

// The type of endpoint that clients and connectors can connect to.
func (o GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotEndpoint) string { return v.ResourceType }).(pulumi.StringOutput)
}

// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
func (o GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotEndpoint) string { return v.Status }).(pulumi.StringOutput)
}

// Additional information about the current endpoint status.
func (o GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput) StatusDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotEndpoint) string { return v.StatusDetails }).(pulumi.StringOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshotEndpoint)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupsBackupDbSystemSnapshotEndpoint {
		return vs[0].([]GetMysqlBackupsBackupDbSystemSnapshotEndpoint)[vs[1].(int)]
	}).(GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotMaintenance struct {
	// The start time of the maintenance window.
	WindowStartTime string `pulumi:"windowStartTime"`
}

// GetMysqlBackupsBackupDbSystemSnapshotMaintenanceInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArgs and GetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotMaintenanceInput` via:
//
//	GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArgs{...}
type GetMysqlBackupsBackupDbSystemSnapshotMaintenanceInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput() GetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArgs struct {
	// The start time of the maintenance window.
	WindowStartTime pulumi.StringInput `pulumi:"windowStartTime"`
}

func (GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotMaintenance)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArgs) ToGetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput() GetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArgs) ToGetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput)
}

// GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArray and GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayInput` via:
//
//	GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArray{ GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArgs{...} }
type GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArray []GetMysqlBackupsBackupDbSystemSnapshotMaintenanceInput

func (GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshotMaintenance)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArray) ToGetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArray) ToGetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotMaintenance)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput) ToGetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput() GetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput) ToGetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput {
	return o
}

// The start time of the maintenance window.
func (o GetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput) WindowStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotMaintenance) string { return v.WindowStartTime }).(pulumi.StringOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshotMaintenance)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupsBackupDbSystemSnapshotMaintenance {
		return vs[0].([]GetMysqlBackupsBackupDbSystemSnapshotMaintenance)[vs[1].(int)]
	}).(GetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotReadEndpoint struct {
	// A list of IP addresses of read replicas that are excluded from serving read requests.
	ExcludeIps []string `pulumi:"excludeIps"`
	// Specifies if the DB System read endpoint is enabled or not.
	IsEnabled bool `pulumi:"isEnabled"`
	// The hostname for the read endpoint of the DB System. Used for DNS.
	ReadEndpointHostnameLabel string `pulumi:"readEndpointHostnameLabel"`
	// The IP address the DB System read endpoint is configured to listen on. A private IP address of your choice to assign to the read endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
	ReadEndpointIpAddress string `pulumi:"readEndpointIpAddress"`
}

// GetMysqlBackupsBackupDbSystemSnapshotReadEndpointInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotReadEndpointArgs and GetMysqlBackupsBackupDbSystemSnapshotReadEndpointOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotReadEndpointInput` via:
//
//	GetMysqlBackupsBackupDbSystemSnapshotReadEndpointArgs{...}
type GetMysqlBackupsBackupDbSystemSnapshotReadEndpointInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotReadEndpointOutput() GetMysqlBackupsBackupDbSystemSnapshotReadEndpointOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotReadEndpointOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotReadEndpointOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotReadEndpointArgs struct {
	// A list of IP addresses of read replicas that are excluded from serving read requests.
	ExcludeIps pulumi.StringArrayInput `pulumi:"excludeIps"`
	// Specifies if the DB System read endpoint is enabled or not.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The hostname for the read endpoint of the DB System. Used for DNS.
	ReadEndpointHostnameLabel pulumi.StringInput `pulumi:"readEndpointHostnameLabel"`
	// The IP address the DB System read endpoint is configured to listen on. A private IP address of your choice to assign to the read endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
	ReadEndpointIpAddress pulumi.StringInput `pulumi:"readEndpointIpAddress"`
}

func (GetMysqlBackupsBackupDbSystemSnapshotReadEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotReadEndpoint)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotReadEndpointArgs) ToGetMysqlBackupsBackupDbSystemSnapshotReadEndpointOutput() GetMysqlBackupsBackupDbSystemSnapshotReadEndpointOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotReadEndpointOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotReadEndpointArgs) ToGetMysqlBackupsBackupDbSystemSnapshotReadEndpointOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotReadEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotReadEndpointOutput)
}

// GetMysqlBackupsBackupDbSystemSnapshotReadEndpointArrayInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotReadEndpointArray and GetMysqlBackupsBackupDbSystemSnapshotReadEndpointArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotReadEndpointArrayInput` via:
//
//	GetMysqlBackupsBackupDbSystemSnapshotReadEndpointArray{ GetMysqlBackupsBackupDbSystemSnapshotReadEndpointArgs{...} }
type GetMysqlBackupsBackupDbSystemSnapshotReadEndpointArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotReadEndpointArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotReadEndpointArrayOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotReadEndpointArrayOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotReadEndpointArrayOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotReadEndpointArray []GetMysqlBackupsBackupDbSystemSnapshotReadEndpointInput

func (GetMysqlBackupsBackupDbSystemSnapshotReadEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshotReadEndpoint)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotReadEndpointArray) ToGetMysqlBackupsBackupDbSystemSnapshotReadEndpointArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotReadEndpointArrayOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotReadEndpointArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotReadEndpointArray) ToGetMysqlBackupsBackupDbSystemSnapshotReadEndpointArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotReadEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotReadEndpointArrayOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotReadEndpointOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotReadEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotReadEndpoint)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotReadEndpointOutput) ToGetMysqlBackupsBackupDbSystemSnapshotReadEndpointOutput() GetMysqlBackupsBackupDbSystemSnapshotReadEndpointOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotReadEndpointOutput) ToGetMysqlBackupsBackupDbSystemSnapshotReadEndpointOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotReadEndpointOutput {
	return o
}

// A list of IP addresses of read replicas that are excluded from serving read requests.
func (o GetMysqlBackupsBackupDbSystemSnapshotReadEndpointOutput) ExcludeIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotReadEndpoint) []string { return v.ExcludeIps }).(pulumi.StringArrayOutput)
}

// Specifies if the DB System read endpoint is enabled or not.
func (o GetMysqlBackupsBackupDbSystemSnapshotReadEndpointOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotReadEndpoint) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The hostname for the read endpoint of the DB System. Used for DNS.
func (o GetMysqlBackupsBackupDbSystemSnapshotReadEndpointOutput) ReadEndpointHostnameLabel() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotReadEndpoint) string { return v.ReadEndpointHostnameLabel }).(pulumi.StringOutput)
}

// The IP address the DB System read endpoint is configured to listen on. A private IP address of your choice to assign to the read endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
func (o GetMysqlBackupsBackupDbSystemSnapshotReadEndpointOutput) ReadEndpointIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotReadEndpoint) string { return v.ReadEndpointIpAddress }).(pulumi.StringOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotReadEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotReadEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshotReadEndpoint)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotReadEndpointArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotReadEndpointArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotReadEndpointArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotReadEndpointArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotReadEndpointArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotReadEndpointArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotReadEndpointArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupsBackupDbSystemSnapshotReadEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupsBackupDbSystemSnapshotReadEndpoint {
		return vs[0].([]GetMysqlBackupsBackupDbSystemSnapshotReadEndpoint)[vs[1].(int)]
	}).(GetMysqlBackupsBackupDbSystemSnapshotReadEndpointOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotRest struct {
	// Select how REST is configured across the DB System instances.
	Configuration string `pulumi:"configuration"`
	// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
	Port int `pulumi:"port"`
}

// GetMysqlBackupsBackupDbSystemSnapshotRestInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotRestArgs and GetMysqlBackupsBackupDbSystemSnapshotRestOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotRestInput` via:
//
//	GetMysqlBackupsBackupDbSystemSnapshotRestArgs{...}
type GetMysqlBackupsBackupDbSystemSnapshotRestInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotRestOutput() GetMysqlBackupsBackupDbSystemSnapshotRestOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotRestOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotRestOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotRestArgs struct {
	// Select how REST is configured across the DB System instances.
	Configuration pulumi.StringInput `pulumi:"configuration"`
	// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
	Port pulumi.IntInput `pulumi:"port"`
}

func (GetMysqlBackupsBackupDbSystemSnapshotRestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotRest)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotRestArgs) ToGetMysqlBackupsBackupDbSystemSnapshotRestOutput() GetMysqlBackupsBackupDbSystemSnapshotRestOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotRestOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotRestArgs) ToGetMysqlBackupsBackupDbSystemSnapshotRestOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotRestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotRestOutput)
}

// GetMysqlBackupsBackupDbSystemSnapshotRestArrayInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotRestArray and GetMysqlBackupsBackupDbSystemSnapshotRestArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotRestArrayInput` via:
//
//	GetMysqlBackupsBackupDbSystemSnapshotRestArray{ GetMysqlBackupsBackupDbSystemSnapshotRestArgs{...} }
type GetMysqlBackupsBackupDbSystemSnapshotRestArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotRestArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotRestArrayOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotRestArrayOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotRestArrayOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotRestArray []GetMysqlBackupsBackupDbSystemSnapshotRestInput

func (GetMysqlBackupsBackupDbSystemSnapshotRestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshotRest)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotRestArray) ToGetMysqlBackupsBackupDbSystemSnapshotRestArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotRestArrayOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotRestArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotRestArray) ToGetMysqlBackupsBackupDbSystemSnapshotRestArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotRestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotRestArrayOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotRestOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotRestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotRest)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotRestOutput) ToGetMysqlBackupsBackupDbSystemSnapshotRestOutput() GetMysqlBackupsBackupDbSystemSnapshotRestOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotRestOutput) ToGetMysqlBackupsBackupDbSystemSnapshotRestOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotRestOutput {
	return o
}

// Select how REST is configured across the DB System instances.
func (o GetMysqlBackupsBackupDbSystemSnapshotRestOutput) Configuration() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotRest) string { return v.Configuration }).(pulumi.StringOutput)
}

// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
func (o GetMysqlBackupsBackupDbSystemSnapshotRestOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotRest) int { return v.Port }).(pulumi.IntOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotRestArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotRestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshotRest)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotRestArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotRestArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotRestArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotRestArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotRestArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotRestArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotRestArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupsBackupDbSystemSnapshotRestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupsBackupDbSystemSnapshotRest {
		return vs[0].([]GetMysqlBackupsBackupDbSystemSnapshotRest)[vs[1].(int)]
	}).(GetMysqlBackupsBackupDbSystemSnapshotRestOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotSecureConnection struct {
	// Select whether to use MySQL Database Service-managed certificate (SYSTEM) or your own certificate (BYOC).
	CertificateGenerationType string `pulumi:"certificateGenerationType"`
	// The OCID of the certificate to use.
	CertificateId string `pulumi:"certificateId"`
}

// GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArgs and GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionInput` via:
//
//	GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArgs{...}
type GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotSecureConnectionOutput() GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotSecureConnectionOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArgs struct {
	// Select whether to use MySQL Database Service-managed certificate (SYSTEM) or your own certificate (BYOC).
	CertificateGenerationType pulumi.StringInput `pulumi:"certificateGenerationType"`
	// The OCID of the certificate to use.
	CertificateId pulumi.StringInput `pulumi:"certificateId"`
}

func (GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotSecureConnection)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArgs) ToGetMysqlBackupsBackupDbSystemSnapshotSecureConnectionOutput() GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotSecureConnectionOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArgs) ToGetMysqlBackupsBackupDbSystemSnapshotSecureConnectionOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionOutput)
}

// GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArrayInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArray and GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArrayInput` via:
//
//	GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArray{ GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArgs{...} }
type GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArrayOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArrayOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArrayOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArray []GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionInput

func (GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshotSecureConnection)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArray) ToGetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArrayOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArray) ToGetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArrayOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotSecureConnection)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionOutput) ToGetMysqlBackupsBackupDbSystemSnapshotSecureConnectionOutput() GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionOutput) ToGetMysqlBackupsBackupDbSystemSnapshotSecureConnectionOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionOutput {
	return o
}

// Select whether to use MySQL Database Service-managed certificate (SYSTEM) or your own certificate (BYOC).
func (o GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionOutput) CertificateGenerationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotSecureConnection) string {
		return v.CertificateGenerationType
	}).(pulumi.StringOutput)
}

// The OCID of the certificate to use.
func (o GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotSecureConnection) string { return v.CertificateId }).(pulumi.StringOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshotSecureConnection)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupsBackupDbSystemSnapshotSecureConnection {
		return vs[0].([]GetMysqlBackupsBackupDbSystemSnapshotSecureConnection)[vs[1].(int)]
	}).(GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotSummary struct {
	// A filter to return only the resource matching the given display name exactly.
	DisplayName string `pulumi:"displayName"`
	// OCID of the backup itself
	Id string `pulumi:"id"`
	// The region identifier of the region where the DB system exists. For more information, please see [Regions and Availability Domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm).
	Region string `pulumi:"region"`
}

// GetMysqlBackupsBackupDbSystemSnapshotSummaryInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotSummaryArgs and GetMysqlBackupsBackupDbSystemSnapshotSummaryOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotSummaryInput` via:
//
//	GetMysqlBackupsBackupDbSystemSnapshotSummaryArgs{...}
type GetMysqlBackupsBackupDbSystemSnapshotSummaryInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotSummaryOutput() GetMysqlBackupsBackupDbSystemSnapshotSummaryOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotSummaryOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotSummaryOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotSummaryArgs struct {
	// A filter to return only the resource matching the given display name exactly.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// OCID of the backup itself
	Id pulumi.StringInput `pulumi:"id"`
	// The region identifier of the region where the DB system exists. For more information, please see [Regions and Availability Domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm).
	Region pulumi.StringInput `pulumi:"region"`
}

func (GetMysqlBackupsBackupDbSystemSnapshotSummaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotSummary)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotSummaryArgs) ToGetMysqlBackupsBackupDbSystemSnapshotSummaryOutput() GetMysqlBackupsBackupDbSystemSnapshotSummaryOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotSummaryOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotSummaryArgs) ToGetMysqlBackupsBackupDbSystemSnapshotSummaryOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotSummaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotSummaryOutput)
}

// GetMysqlBackupsBackupDbSystemSnapshotSummaryArrayInput is an input type that accepts GetMysqlBackupsBackupDbSystemSnapshotSummaryArray and GetMysqlBackupsBackupDbSystemSnapshotSummaryArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupDbSystemSnapshotSummaryArrayInput` via:
//
//	GetMysqlBackupsBackupDbSystemSnapshotSummaryArray{ GetMysqlBackupsBackupDbSystemSnapshotSummaryArgs{...} }
type GetMysqlBackupsBackupDbSystemSnapshotSummaryArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupDbSystemSnapshotSummaryArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotSummaryArrayOutput
	ToGetMysqlBackupsBackupDbSystemSnapshotSummaryArrayOutputWithContext(context.Context) GetMysqlBackupsBackupDbSystemSnapshotSummaryArrayOutput
}

type GetMysqlBackupsBackupDbSystemSnapshotSummaryArray []GetMysqlBackupsBackupDbSystemSnapshotSummaryInput

func (GetMysqlBackupsBackupDbSystemSnapshotSummaryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshotSummary)(nil)).Elem()
}

func (i GetMysqlBackupsBackupDbSystemSnapshotSummaryArray) ToGetMysqlBackupsBackupDbSystemSnapshotSummaryArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotSummaryArrayOutput {
	return i.ToGetMysqlBackupsBackupDbSystemSnapshotSummaryArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupDbSystemSnapshotSummaryArray) ToGetMysqlBackupsBackupDbSystemSnapshotSummaryArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotSummaryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupDbSystemSnapshotSummaryArrayOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotSummaryOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotSummaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotSummary)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotSummaryOutput) ToGetMysqlBackupsBackupDbSystemSnapshotSummaryOutput() GetMysqlBackupsBackupDbSystemSnapshotSummaryOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotSummaryOutput) ToGetMysqlBackupsBackupDbSystemSnapshotSummaryOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotSummaryOutput {
	return o
}

// A filter to return only the resource matching the given display name exactly.
func (o GetMysqlBackupsBackupDbSystemSnapshotSummaryOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotSummary) string { return v.DisplayName }).(pulumi.StringOutput)
}

// OCID of the backup itself
func (o GetMysqlBackupsBackupDbSystemSnapshotSummaryOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotSummary) string { return v.Id }).(pulumi.StringOutput)
}

// The region identifier of the region where the DB system exists. For more information, please see [Regions and Availability Domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm).
func (o GetMysqlBackupsBackupDbSystemSnapshotSummaryOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupDbSystemSnapshotSummary) string { return v.Region }).(pulumi.StringOutput)
}

type GetMysqlBackupsBackupDbSystemSnapshotSummaryArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupDbSystemSnapshotSummaryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupDbSystemSnapshotSummary)(nil)).Elem()
}

func (o GetMysqlBackupsBackupDbSystemSnapshotSummaryArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotSummaryArrayOutput() GetMysqlBackupsBackupDbSystemSnapshotSummaryArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotSummaryArrayOutput) ToGetMysqlBackupsBackupDbSystemSnapshotSummaryArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupDbSystemSnapshotSummaryArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupDbSystemSnapshotSummaryArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupsBackupDbSystemSnapshotSummaryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupsBackupDbSystemSnapshotSummary {
		return vs[0].([]GetMysqlBackupsBackupDbSystemSnapshotSummary)[vs[1].(int)]
	}).(GetMysqlBackupsBackupDbSystemSnapshotSummaryOutput)
}

type GetMysqlBackupsBackupEncryptData struct {
	// Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
	KeyGenerationType string `pulumi:"keyGenerationType"`
	// The OCID of the key to use.
	KeyId string `pulumi:"keyId"`
}

// GetMysqlBackupsBackupEncryptDataInput is an input type that accepts GetMysqlBackupsBackupEncryptDataArgs and GetMysqlBackupsBackupEncryptDataOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupEncryptDataInput` via:
//
//	GetMysqlBackupsBackupEncryptDataArgs{...}
type GetMysqlBackupsBackupEncryptDataInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupEncryptDataOutput() GetMysqlBackupsBackupEncryptDataOutput
	ToGetMysqlBackupsBackupEncryptDataOutputWithContext(context.Context) GetMysqlBackupsBackupEncryptDataOutput
}

type GetMysqlBackupsBackupEncryptDataArgs struct {
	// Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
	KeyGenerationType pulumi.StringInput `pulumi:"keyGenerationType"`
	// The OCID of the key to use.
	KeyId pulumi.StringInput `pulumi:"keyId"`
}

func (GetMysqlBackupsBackupEncryptDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupEncryptData)(nil)).Elem()
}

func (i GetMysqlBackupsBackupEncryptDataArgs) ToGetMysqlBackupsBackupEncryptDataOutput() GetMysqlBackupsBackupEncryptDataOutput {
	return i.ToGetMysqlBackupsBackupEncryptDataOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupEncryptDataArgs) ToGetMysqlBackupsBackupEncryptDataOutputWithContext(ctx context.Context) GetMysqlBackupsBackupEncryptDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupEncryptDataOutput)
}

// GetMysqlBackupsBackupEncryptDataArrayInput is an input type that accepts GetMysqlBackupsBackupEncryptDataArray and GetMysqlBackupsBackupEncryptDataArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupEncryptDataArrayInput` via:
//
//	GetMysqlBackupsBackupEncryptDataArray{ GetMysqlBackupsBackupEncryptDataArgs{...} }
type GetMysqlBackupsBackupEncryptDataArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupEncryptDataArrayOutput() GetMysqlBackupsBackupEncryptDataArrayOutput
	ToGetMysqlBackupsBackupEncryptDataArrayOutputWithContext(context.Context) GetMysqlBackupsBackupEncryptDataArrayOutput
}

type GetMysqlBackupsBackupEncryptDataArray []GetMysqlBackupsBackupEncryptDataInput

func (GetMysqlBackupsBackupEncryptDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupEncryptData)(nil)).Elem()
}

func (i GetMysqlBackupsBackupEncryptDataArray) ToGetMysqlBackupsBackupEncryptDataArrayOutput() GetMysqlBackupsBackupEncryptDataArrayOutput {
	return i.ToGetMysqlBackupsBackupEncryptDataArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupEncryptDataArray) ToGetMysqlBackupsBackupEncryptDataArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupEncryptDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupEncryptDataArrayOutput)
}

type GetMysqlBackupsBackupEncryptDataOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupEncryptDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupEncryptData)(nil)).Elem()
}

func (o GetMysqlBackupsBackupEncryptDataOutput) ToGetMysqlBackupsBackupEncryptDataOutput() GetMysqlBackupsBackupEncryptDataOutput {
	return o
}

func (o GetMysqlBackupsBackupEncryptDataOutput) ToGetMysqlBackupsBackupEncryptDataOutputWithContext(ctx context.Context) GetMysqlBackupsBackupEncryptDataOutput {
	return o
}

// Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
func (o GetMysqlBackupsBackupEncryptDataOutput) KeyGenerationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupEncryptData) string { return v.KeyGenerationType }).(pulumi.StringOutput)
}

// The OCID of the key to use.
func (o GetMysqlBackupsBackupEncryptDataOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupEncryptData) string { return v.KeyId }).(pulumi.StringOutput)
}

type GetMysqlBackupsBackupEncryptDataArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupEncryptDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupEncryptData)(nil)).Elem()
}

func (o GetMysqlBackupsBackupEncryptDataArrayOutput) ToGetMysqlBackupsBackupEncryptDataArrayOutput() GetMysqlBackupsBackupEncryptDataArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupEncryptDataArrayOutput) ToGetMysqlBackupsBackupEncryptDataArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupEncryptDataArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupEncryptDataArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupsBackupEncryptDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupsBackupEncryptData {
		return vs[0].([]GetMysqlBackupsBackupEncryptData)[vs[1].(int)]
	}).(GetMysqlBackupsBackupEncryptDataOutput)
}

type GetMysqlBackupsBackupSourceDetail struct {
	// Backup OCID
	BackupId string `pulumi:"backupId"`
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// The region identifier of the region where the DB system exists. For more information, please see [Regions and Availability Domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm).
	Region string `pulumi:"region"`
}

// GetMysqlBackupsBackupSourceDetailInput is an input type that accepts GetMysqlBackupsBackupSourceDetailArgs and GetMysqlBackupsBackupSourceDetailOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupSourceDetailInput` via:
//
//	GetMysqlBackupsBackupSourceDetailArgs{...}
type GetMysqlBackupsBackupSourceDetailInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupSourceDetailOutput() GetMysqlBackupsBackupSourceDetailOutput
	ToGetMysqlBackupsBackupSourceDetailOutputWithContext(context.Context) GetMysqlBackupsBackupSourceDetailOutput
}

type GetMysqlBackupsBackupSourceDetailArgs struct {
	// Backup OCID
	BackupId pulumi.StringInput `pulumi:"backupId"`
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The region identifier of the region where the DB system exists. For more information, please see [Regions and Availability Domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm).
	Region pulumi.StringInput `pulumi:"region"`
}

func (GetMysqlBackupsBackupSourceDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupSourceDetail)(nil)).Elem()
}

func (i GetMysqlBackupsBackupSourceDetailArgs) ToGetMysqlBackupsBackupSourceDetailOutput() GetMysqlBackupsBackupSourceDetailOutput {
	return i.ToGetMysqlBackupsBackupSourceDetailOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupSourceDetailArgs) ToGetMysqlBackupsBackupSourceDetailOutputWithContext(ctx context.Context) GetMysqlBackupsBackupSourceDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupSourceDetailOutput)
}

// GetMysqlBackupsBackupSourceDetailArrayInput is an input type that accepts GetMysqlBackupsBackupSourceDetailArray and GetMysqlBackupsBackupSourceDetailArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupsBackupSourceDetailArrayInput` via:
//
//	GetMysqlBackupsBackupSourceDetailArray{ GetMysqlBackupsBackupSourceDetailArgs{...} }
type GetMysqlBackupsBackupSourceDetailArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupsBackupSourceDetailArrayOutput() GetMysqlBackupsBackupSourceDetailArrayOutput
	ToGetMysqlBackupsBackupSourceDetailArrayOutputWithContext(context.Context) GetMysqlBackupsBackupSourceDetailArrayOutput
}

type GetMysqlBackupsBackupSourceDetailArray []GetMysqlBackupsBackupSourceDetailInput

func (GetMysqlBackupsBackupSourceDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupSourceDetail)(nil)).Elem()
}

func (i GetMysqlBackupsBackupSourceDetailArray) ToGetMysqlBackupsBackupSourceDetailArrayOutput() GetMysqlBackupsBackupSourceDetailArrayOutput {
	return i.ToGetMysqlBackupsBackupSourceDetailArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupsBackupSourceDetailArray) ToGetMysqlBackupsBackupSourceDetailArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupSourceDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsBackupSourceDetailArrayOutput)
}

type GetMysqlBackupsBackupSourceDetailOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupSourceDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsBackupSourceDetail)(nil)).Elem()
}

func (o GetMysqlBackupsBackupSourceDetailOutput) ToGetMysqlBackupsBackupSourceDetailOutput() GetMysqlBackupsBackupSourceDetailOutput {
	return o
}

func (o GetMysqlBackupsBackupSourceDetailOutput) ToGetMysqlBackupsBackupSourceDetailOutputWithContext(ctx context.Context) GetMysqlBackupsBackupSourceDetailOutput {
	return o
}

// Backup OCID
func (o GetMysqlBackupsBackupSourceDetailOutput) BackupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupSourceDetail) string { return v.BackupId }).(pulumi.StringOutput)
}

// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetMysqlBackupsBackupSourceDetailOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupSourceDetail) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The region identifier of the region where the DB system exists. For more information, please see [Regions and Availability Domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm).
func (o GetMysqlBackupsBackupSourceDetailOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsBackupSourceDetail) string { return v.Region }).(pulumi.StringOutput)
}

type GetMysqlBackupsBackupSourceDetailArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsBackupSourceDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsBackupSourceDetail)(nil)).Elem()
}

func (o GetMysqlBackupsBackupSourceDetailArrayOutput) ToGetMysqlBackupsBackupSourceDetailArrayOutput() GetMysqlBackupsBackupSourceDetailArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupSourceDetailArrayOutput) ToGetMysqlBackupsBackupSourceDetailArrayOutputWithContext(ctx context.Context) GetMysqlBackupsBackupSourceDetailArrayOutput {
	return o
}

func (o GetMysqlBackupsBackupSourceDetailArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupsBackupSourceDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupsBackupSourceDetail {
		return vs[0].([]GetMysqlBackupsBackupSourceDetail)[vs[1].(int)]
	}).(GetMysqlBackupsBackupSourceDetailOutput)
}

type GetMysqlBackupsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetMysqlBackupsFilterInput is an input type that accepts GetMysqlBackupsFilterArgs and GetMysqlBackupsFilterOutput values.
// You can construct a concrete instance of `GetMysqlBackupsFilterInput` via:
//
//	GetMysqlBackupsFilterArgs{...}
type GetMysqlBackupsFilterInput interface {
	pulumi.Input

	ToGetMysqlBackupsFilterOutput() GetMysqlBackupsFilterOutput
	ToGetMysqlBackupsFilterOutputWithContext(context.Context) GetMysqlBackupsFilterOutput
}

type GetMysqlBackupsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetMysqlBackupsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsFilter)(nil)).Elem()
}

func (i GetMysqlBackupsFilterArgs) ToGetMysqlBackupsFilterOutput() GetMysqlBackupsFilterOutput {
	return i.ToGetMysqlBackupsFilterOutputWithContext(context.Background())
}

func (i GetMysqlBackupsFilterArgs) ToGetMysqlBackupsFilterOutputWithContext(ctx context.Context) GetMysqlBackupsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsFilterOutput)
}

// GetMysqlBackupsFilterArrayInput is an input type that accepts GetMysqlBackupsFilterArray and GetMysqlBackupsFilterArrayOutput values.
// You can construct a concrete instance of `GetMysqlBackupsFilterArrayInput` via:
//
//	GetMysqlBackupsFilterArray{ GetMysqlBackupsFilterArgs{...} }
type GetMysqlBackupsFilterArrayInput interface {
	pulumi.Input

	ToGetMysqlBackupsFilterArrayOutput() GetMysqlBackupsFilterArrayOutput
	ToGetMysqlBackupsFilterArrayOutputWithContext(context.Context) GetMysqlBackupsFilterArrayOutput
}

type GetMysqlBackupsFilterArray []GetMysqlBackupsFilterInput

func (GetMysqlBackupsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsFilter)(nil)).Elem()
}

func (i GetMysqlBackupsFilterArray) ToGetMysqlBackupsFilterArrayOutput() GetMysqlBackupsFilterArrayOutput {
	return i.ToGetMysqlBackupsFilterArrayOutputWithContext(context.Background())
}

func (i GetMysqlBackupsFilterArray) ToGetMysqlBackupsFilterArrayOutputWithContext(ctx context.Context) GetMysqlBackupsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlBackupsFilterArrayOutput)
}

type GetMysqlBackupsFilterOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlBackupsFilter)(nil)).Elem()
}

func (o GetMysqlBackupsFilterOutput) ToGetMysqlBackupsFilterOutput() GetMysqlBackupsFilterOutput {
	return o
}

func (o GetMysqlBackupsFilterOutput) ToGetMysqlBackupsFilterOutputWithContext(ctx context.Context) GetMysqlBackupsFilterOutput {
	return o
}

func (o GetMysqlBackupsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlBackupsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetMysqlBackupsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetMysqlBackupsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetMysqlBackupsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMysqlBackupsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetMysqlBackupsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlBackupsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlBackupsFilter)(nil)).Elem()
}

func (o GetMysqlBackupsFilterArrayOutput) ToGetMysqlBackupsFilterArrayOutput() GetMysqlBackupsFilterArrayOutput {
	return o
}

func (o GetMysqlBackupsFilterArrayOutput) ToGetMysqlBackupsFilterArrayOutputWithContext(ctx context.Context) GetMysqlBackupsFilterArrayOutput {
	return o
}

func (o GetMysqlBackupsFilterArrayOutput) Index(i pulumi.IntInput) GetMysqlBackupsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlBackupsFilter {
		return vs[0].([]GetMysqlBackupsFilter)[vs[1].(int)]
	}).(GetMysqlBackupsFilterOutput)
}

type GetMysqlConfigurationInitVariable struct {
	// Represents the MySQL server system variable lowerCaseTableNames (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_lower_case_table_names).
	LowerCaseTableNames string `pulumi:"lowerCaseTableNames"`
}

// GetMysqlConfigurationInitVariableInput is an input type that accepts GetMysqlConfigurationInitVariableArgs and GetMysqlConfigurationInitVariableOutput values.
// You can construct a concrete instance of `GetMysqlConfigurationInitVariableInput` via:
//
//	GetMysqlConfigurationInitVariableArgs{...}
type GetMysqlConfigurationInitVariableInput interface {
	pulumi.Input

	ToGetMysqlConfigurationInitVariableOutput() GetMysqlConfigurationInitVariableOutput
	ToGetMysqlConfigurationInitVariableOutputWithContext(context.Context) GetMysqlConfigurationInitVariableOutput
}

type GetMysqlConfigurationInitVariableArgs struct {
	// Represents the MySQL server system variable lowerCaseTableNames (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_lower_case_table_names).
	LowerCaseTableNames pulumi.StringInput `pulumi:"lowerCaseTableNames"`
}

func (GetMysqlConfigurationInitVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlConfigurationInitVariable)(nil)).Elem()
}

func (i GetMysqlConfigurationInitVariableArgs) ToGetMysqlConfigurationInitVariableOutput() GetMysqlConfigurationInitVariableOutput {
	return i.ToGetMysqlConfigurationInitVariableOutputWithContext(context.Background())
}

func (i GetMysqlConfigurationInitVariableArgs) ToGetMysqlConfigurationInitVariableOutputWithContext(ctx context.Context) GetMysqlConfigurationInitVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlConfigurationInitVariableOutput)
}

// GetMysqlConfigurationInitVariableArrayInput is an input type that accepts GetMysqlConfigurationInitVariableArray and GetMysqlConfigurationInitVariableArrayOutput values.
// You can construct a concrete instance of `GetMysqlConfigurationInitVariableArrayInput` via:
//
//	GetMysqlConfigurationInitVariableArray{ GetMysqlConfigurationInitVariableArgs{...} }
type GetMysqlConfigurationInitVariableArrayInput interface {
	pulumi.Input

	ToGetMysqlConfigurationInitVariableArrayOutput() GetMysqlConfigurationInitVariableArrayOutput
	ToGetMysqlConfigurationInitVariableArrayOutputWithContext(context.Context) GetMysqlConfigurationInitVariableArrayOutput
}

type GetMysqlConfigurationInitVariableArray []GetMysqlConfigurationInitVariableInput

func (GetMysqlConfigurationInitVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlConfigurationInitVariable)(nil)).Elem()
}

func (i GetMysqlConfigurationInitVariableArray) ToGetMysqlConfigurationInitVariableArrayOutput() GetMysqlConfigurationInitVariableArrayOutput {
	return i.ToGetMysqlConfigurationInitVariableArrayOutputWithContext(context.Background())
}

func (i GetMysqlConfigurationInitVariableArray) ToGetMysqlConfigurationInitVariableArrayOutputWithContext(ctx context.Context) GetMysqlConfigurationInitVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlConfigurationInitVariableArrayOutput)
}

type GetMysqlConfigurationInitVariableOutput struct{ *pulumi.OutputState }

func (GetMysqlConfigurationInitVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlConfigurationInitVariable)(nil)).Elem()
}

func (o GetMysqlConfigurationInitVariableOutput) ToGetMysqlConfigurationInitVariableOutput() GetMysqlConfigurationInitVariableOutput {
	return o
}

func (o GetMysqlConfigurationInitVariableOutput) ToGetMysqlConfigurationInitVariableOutputWithContext(ctx context.Context) GetMysqlConfigurationInitVariableOutput {
	return o
}

// Represents the MySQL server system variable lowerCaseTableNames (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_lower_case_table_names).
func (o GetMysqlConfigurationInitVariableOutput) LowerCaseTableNames() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationInitVariable) string { return v.LowerCaseTableNames }).(pulumi.StringOutput)
}

type GetMysqlConfigurationInitVariableArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlConfigurationInitVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlConfigurationInitVariable)(nil)).Elem()
}

func (o GetMysqlConfigurationInitVariableArrayOutput) ToGetMysqlConfigurationInitVariableArrayOutput() GetMysqlConfigurationInitVariableArrayOutput {
	return o
}

func (o GetMysqlConfigurationInitVariableArrayOutput) ToGetMysqlConfigurationInitVariableArrayOutputWithContext(ctx context.Context) GetMysqlConfigurationInitVariableArrayOutput {
	return o
}

func (o GetMysqlConfigurationInitVariableArrayOutput) Index(i pulumi.IntInput) GetMysqlConfigurationInitVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlConfigurationInitVariable {
		return vs[0].([]GetMysqlConfigurationInitVariable)[vs[1].(int)]
	}).(GetMysqlConfigurationInitVariableOutput)
}

type GetMysqlConfigurationVariable struct {
	// auto_increment_increment and autoIncrementOffset are intended for use with circular (source-to-source) replication, and can be used to control the operation of AUTO_INCREMENT columns. Both variables have global and session values, and each can assume an integer value between 1 and 65,535 inclusive.
	AutoIncrementIncrement int `pulumi:"autoIncrementIncrement"`
	// This variable has a default value of 1. If it is left with its default value, and Group Replication is started on the server in multi-primary mode, it is changed to the server ID.
	AutoIncrementOffset int `pulumi:"autoIncrementOffset"`
	// ("autocommit")
	Autocommit bool `pulumi:"autocommit"`
	// If enabled, the server stores all temporary tables on disk rather than in memory.
	BigTables bool `pulumi:"bigTables"`
	// Sets the binary log expiration period in seconds. binlogExpireLogsSeconds corresponds to the MySQL binary logging system variable [binlogExpireLogsSeconds](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds).
	BinlogExpireLogsSeconds int `pulumi:"binlogExpireLogsSeconds"`
	// Controls how many microseconds the binary log commit waits before synchronizing the binary log file to disk. There is no delay by default. Setting this variable to a microsecond delay enables more transactions to be synchronized together to disk at once, reducing the overall time to commit a group of transactions because the larger groups required fewer time units per group.
	BinlogGroupCommitSyncDelay int `pulumi:"binlogGroupCommitSyncDelay"`
	// The maximum number of transactions to wait for before aborting the current delay as specified by binlog_group_commit_sync_delay. If binlogGroupCommitSyncDelay is set to 0, then this option has no effect.
	BinlogGroupCommitSyncNoDelayCount int `pulumi:"binlogGroupCommitSyncNoDelayCount"`
	// Configures the amount of table metadata added to the binary log when using row-based logging. binlogRowMetadata corresponds to the MySQL binary logging system variable [binlogRowMetadata](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_metadata).
	BinlogRowMetadata string `pulumi:"binlogRowMetadata"`
	// When set to PARTIAL_JSON, this enables use of a space-efficient binary log format for updates that modify only a small portion of a JSON document. binlogRowValueOptions corresponds to the MySQL binary logging system variable [binlogRowValueOptions](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_value_options).
	BinlogRowValueOptions string `pulumi:"binlogRowValueOptions"`
	// Enables compression for transactions that are written to binary log files on this server. binlogTransactionCompression corresponds to the MySQL binary logging system variable [binlogTransactionCompression](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_transaction_compression).
	BinlogTransactionCompression bool `pulumi:"binlogTransactionCompression"`
	// This variable controls the block encryption mode for block-based algorithms such as AES. It affects encryption for AES_ENCRYPT() and AES_DECRYPT(). blockEncryptionMode takes a value in aes-keylen-mode format, where keylen is the key length in bits and mode is the encryption mode. The value is not case-sensitive. Permitted keylen values are 128, 192, and 256. Permitted mode values are ECB, CBC, CFB1, CFB8, CFB128, and OFB.
	BlockEncryptionMode string `pulumi:"blockEncryptionMode"`
	// The server's default character set. If you set this variable, you should also set collationServer to specify the collation for the character set.
	CharacterSetServer string `pulumi:"characterSetServer"`
	// The server's default collation.
	CollationServer string `pulumi:"collationServer"`
	// ("completionType")
	CompletionType string `pulumi:"completionType"`
	// The number of seconds that the mysqld server waits for a connect packet before responding with Bad handshake.
	ConnectTimeout int `pulumi:"connectTimeout"`
	// Set the chunking size for updates to the global memory usage counter Global_connection_memory.
	ConnectionMemoryChunkSize int `pulumi:"connectionMemoryChunkSize"`
	// Set the maximum amount of memory that can be used by a single user connection.
	ConnectionMemoryLimit string `pulumi:"connectionMemoryLimit"`
	// ("cteMaxRecursionDepth")
	CteMaxRecursionDepth string `pulumi:"cteMaxRecursionDepth"`
	// The default authentication plugin. This must be a plugin that uses internal credentials storage, so these values are permitted: mysql_native_password, sha256_password, caching_sha2_password.
	DefaultAuthenticationPlugin string `pulumi:"defaultAuthenticationPlugin"`
	// This variable determines the default output format used by EXPLAIN in the absence of a FORMAT option when displaying a query execution plan.
	ExplainFormat string `pulumi:"explainFormat"`
	// This system variable determines whether the server enables certain nonstandard behaviors for default values and NULL-value handling in TIMESTAMP columns. By default, explicitDefaultsForTimestamp is enabled, which disables the nonstandard behaviors. Disabling explicitDefaultsForTimestamp results in a warning.
	ExplicitDefaultsForTimestamp bool `pulumi:"explicitDefaultsForTimestamp"`
	// ("foreignKeyChecks")
	ForeignKeyChecks bool `pulumi:"foreignKeyChecks"`
	// ("generatedRandomPasswordLength") DEPRECATED -- variable should not be settable and will be ignored
	//
	// Deprecated: The 'generated_random_password_length' field has been deprecated and may be removed in a future version. Do not use this field.
	GeneratedRandomPasswordLength int `pulumi:"generatedRandomPasswordLength"`
	// Set the total amount of memory that can be used by all user connections.
	GlobalConnectionMemoryLimit string `pulumi:"globalConnectionMemoryLimit"`
	// Determines whether the MySQL server calculates Global_connection_memory.
	GlobalConnectionMemoryTracking bool `pulumi:"globalConnectionMemoryTracking"`
	// Specifies the maximum permitted result length in bytes for the GROUP_CONCAT() function.
	GroupConcatMaxLen string `pulumi:"groupConcatMaxLen"`
	// * EVENTUAL: Both RO and RW transactions do not wait for preceding transactions to be applied before executing. A RW transaction does not wait for other members to apply a transaction. This means that a transaction could be externalized on one member before the others. This also means that in the event of a primary failover, the new primary can accept new RO and RW transactions before the previous primary transactions are all applied. RO transactions could result in outdated values, RW transactions could result in a rollback due to conflicts.
	// * BEFORE_ON_PRIMARY_FAILOVER: New RO or RW transactions with a newly elected primary that is applying backlog from the old primary are held (not applied) until any backlog has been applied. This ensures that when a primary failover happens, intentionally or not, clients always see the latest value on the primary. This guarantees consistency, but means that clients must be able to handle the delay in the event that a backlog is being applied. Usually this delay should be minimal, but does depend on the size of the backlog.
	// * BEFORE: A RW transaction waits for all preceding transactions to complete before being applied. A RO transaction waits for all preceding transactions to complete before being executed. This ensures that this transaction reads the latest value by only affecting the latency of the transaction. This reduces the overhead of synchronization on every RW transaction, by ensuring synchronization is used only on RO transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
	// * AFTER: A RW transaction waits until its changes have been applied to all of the other members. This value has no effect on RO transactions. This mode ensures that when a transaction is committed on the local member, any subsequent transaction reads the written value or a more recent value on any group member. Use this mode with a group that is used for predominantly RO operations to ensure that applied RW transactions are applied everywhere once they commit. This could be used by your application to ensure that subsequent reads fetch the latest data which includes the latest writes. This reduces the overhead of synchronization on every RO transaction, by ensuring synchronization is used only on RW transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
	// * BEFORE_AND_AFTER: A RW transaction waits for 1) all preceding transactions to complete before being applied and 2) until its changes have been applied on other members. A RO transaction waits for all preceding transactions to complete before execution takes place. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
	GroupReplicationConsistency string `pulumi:"groupReplicationConsistency"`
	// ("informationSchemaStatsExpiry")
	InformationSchemaStatsExpiry int `pulumi:"informationSchemaStatsExpiry"`
	// Whether the InnoDB adaptive hash index is enabled or disabled. It may be desirable, depending on your workload, to dynamically enable or disable adaptive hash indexing to improve query performance. Because the adaptive hash index may not be useful for all workloads, conduct benchmarks with it both enabled and disabled, using realistic workloads.
	InnodbAdaptiveHashIndex bool `pulumi:"innodbAdaptiveHashIndex"`
	// The lock mode to use for generating auto-increment values. Permissible values are 0, 1, or 2, for traditional, consecutive, or interleaved, respectively.
	InnodbAutoincLockMode int `pulumi:"innodbAutoincLockMode"`
	// Specifies the percentage of the most recently used pages for each buffer pool to read out and dump.
	InnodbBufferPoolDumpPct int `pulumi:"innodbBufferPoolDumpPct"`
	// ("innodbBufferPoolInstances")
	InnodbBufferPoolInstances int `pulumi:"innodbBufferPoolInstances"`
	// The size (in bytes) of the buffer pool, that is, the memory area where InnoDB caches table and index data.
	InnodbBufferPoolSize string `pulumi:"innodbBufferPoolSize"`
	// Whether InnoDB performs change buffering, an optimization that delays write operations to secondary indexes so that the I/O operations can be performed sequentially. Permitted values are described in the following table. Values may also be specified numerically.
	InnodbChangeBuffering string `pulumi:"innodbChangeBuffering"`
	// innodbDdlBufferSize corresponds to the MySQL system variable [innodbDdlBufferSize] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_ddl_buffer_size)
	InnodbDdlBufferSize string `pulumi:"innodbDdlBufferSize"`
	// innodbDdlThreads corresponds to the MySQL system variable [innodbDdlThreads] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_ddl_threads)
	InnodbDdlThreads int `pulumi:"innodbDdlThreads"`
	// ("innodbFtEnableStopword")
	InnodbFtEnableStopword bool `pulumi:"innodbFtEnableStopword"`
	// ("innodbFtMaxTokenSize")
	InnodbFtMaxTokenSize int `pulumi:"innodbFtMaxTokenSize"`
	// ("innodbFtMinTokenSize")
	InnodbFtMinTokenSize int `pulumi:"innodbFtMinTokenSize"`
	// ("innodbFtNumWordOptimize")
	InnodbFtNumWordOptimize int `pulumi:"innodbFtNumWordOptimize"`
	// ("innodbFtResultCacheLimit")
	InnodbFtResultCacheLimit string `pulumi:"innodbFtResultCacheLimit"`
	// ("innodbFtServerStopwordTable")
	InnodbFtServerStopwordTable string `pulumi:"innodbFtServerStopwordTable"`
	// ("innodbLockWaitTimeout")
	InnodbLockWaitTimeout int `pulumi:"innodbLockWaitTimeout"`
	// Enables dedicated log writer threads for writing redo log records from the log buffer to the system buffers and flushing the system buffers to the redo log files.
	InnodbLogWriterThreads bool `pulumi:"innodbLogWriterThreads"`
	// The desired maximum purge lag in terms of transactions.
	InnodbMaxPurgeLag string `pulumi:"innodbMaxPurgeLag"`
	// The maximum delay in microseconds for the delay imposed when the innodbMaxPurgeLag threshold is exceeded.
	InnodbMaxPurgeLagDelay int `pulumi:"innodbMaxPurgeLagDelay"`
	// Enables the NUMA interleave memory policy for allocation of the InnoDB buffer pool. When innodbNumaInterleave is enabled, the NUMA memory policy is set to MPOL_INTERLEAVE for the mysqld process. After the InnoDB buffer pool is allocated, the NUMA memory policy is set back to MPOL_DEFAULT. For the innodbNumaInterleave option to be available, MySQL must be compiled on a NUMA-enabled Linux system.
	InnodbNumaInterleave bool `pulumi:"innodbNumaInterleave"`
	// Specifies an upper limit in bytes on the size of the temporary log files used during online DDL operations for InnoDB tables. There is one such log file for each index being created or table being altered. This log file stores data inserted, updated, or deleted in the table during the DDL operation.
	InnodbOnlineAlterLogMaxSize string `pulumi:"innodbOnlineAlterLogMaxSize"`
	// Defines the amount of disk space occupied by redo log files. innodbRedoLogCapacity supercedes the innodbLogFilesInGroup and innodbLogFileSize variables, which are both ignored if innodbRedoLogCapacity is defined. If innodbRedoLogCapacity is not defined, and if neither innodbLogFileSize or innodbLogFilesInGroup are defined, then the default innodbRedoLogCapacity value is used.
	InnodbRedoLogCapacity string `pulumi:"innodbRedoLogCapacity"`
	// InnoDB rolls back only the last statement on a transaction timeout by default. If --innodb-rollback-on-timeout is specified, a transaction timeout causes InnoDB to abort and roll back the entire transaction.
	InnodbRollbackOnTimeout bool `pulumi:"innodbRollbackOnTimeout"`
	// This variable defines:
	// * The sort buffer size for online DDL operations that create or rebuild secondary indexes. However, as of MySQL 8.0.27, this responsibility is subsumed by the innodbDdlBufferSize variable.
	// * The amount by which the temporary log file is extended when recording concurrent DML during an online DDL operation, and the size of the temporary log file read buffer and write buffer.
	InnodbSortBufferSize int `pulumi:"innodbSortBufferSize"`
	// The number of index pages to sample when estimating cardinality and other statistics for an indexed column, such as those calculated by ANALYZE TABLE.
	InnodbStatsPersistentSamplePages string `pulumi:"innodbStatsPersistentSamplePages"`
	// The number of index pages to sample when estimating cardinality and other statistics for an indexed column, such as those calculated by [ANALYZE TABLE](https://dev.mysql.com/doc/refman/8.0/en/analyze-table.html).
	InnodbStatsTransientSamplePages string `pulumi:"innodbStatsTransientSamplePages"`
	// When you enable innodbStrictMode, the InnoDB storage engine returns errors instead of warnings for invalid or incompatible table options.
	InnodbStrictMode bool `pulumi:"innodbStrictMode"`
	// When enabled, undo tablespaces that exceed the threshold value defined by innodbMaxUndoLogSize are marked for truncation. Only undo tablespaces can be truncated. Truncating undo logs that reside in the system tablespace is not supported. For truncation to occur, there must be at least two undo tablespaces.
	InnodbUndoLogTruncate bool `pulumi:"innodbUndoLogTruncate"`
	// The number of seconds the server waits for activity on an interactive connection before closing it.
	InteractiveTimeout int `pulumi:"interactiveTimeout"`
	// The minimum size of the buffer that is used for plain index scans, range index scans, and joins that do not use indexes and thus perform full table scans. In MySQL 8.0.18 and later, this variable also controls the amount of memory used for hash joins. Normally, the best way to get fast joins is to add indexes. Increase the value of joinBufferSize to get a faster full join when adding indexes is not possible. One join buffer is allocated for each full join between two tables. For a complex join between several tables for which indexes are not used, multiple join buffers might be necessary.
	JoinBufferSize string `pulumi:"joinBufferSize"`
	// This variable controls server-side LOCAL capability for LOAD DATA statements. Depending on the localInfile setting, the server refuses or permits local data loading by clients that have LOCAL enabled on the client side.
	LocalInfile bool `pulumi:"localInfile"`
	// If a query takes longer than this many seconds, the server increments the Slow_queries status variable. If the slow query log is enabled, the query is logged to the slow query log file. This value is measured in real time, not CPU time, so a query that is under the threshold on a lightly loaded system might be above the threshold on a heavily loaded one.
	LongQueryTime int `pulumi:"longQueryTime"`
	// ("mandatoryRoles")
	MandatoryRoles string `pulumi:"mandatoryRoles"`
	// The maximum size of one packet or any generated/intermediate string.
	MaxAllowedPacket int `pulumi:"maxAllowedPacket"`
	// Sets the size of the transaction cache.
	MaxBinlogCacheSize string `pulumi:"maxBinlogCacheSize"`
	// ("maxConnectErrors")
	MaxConnectErrors string `pulumi:"maxConnectErrors"`
	// ("maxConnections")
	MaxConnections int `pulumi:"maxConnections"`
	// ("maxExecutionTime")
	MaxExecutionTime string `pulumi:"maxExecutionTime"`
	// This variable sets the maximum size to which user-created MEMORY tables are permitted to grow.
	MaxHeapTableSize string `pulumi:"maxHeapTableSize"`
	// ("maxPreparedStmtCount")
	MaxPreparedStmtCount int `pulumi:"maxPreparedStmtCount"`
	// Limit the assumed maximum number of seeks when looking up rows based on a key. The MySQL optimizer assumes that no more than this number of key seeks are required when searching for matching rows in a table by scanning an index, regardless of the actual cardinality of the index (see Section 15.7.7.22, “SHOW INDEX Statement”). By setting this to a low value (say, 100), you can force MySQL to prefer indexes instead of table scans.
	MaxSeeksForKey string `pulumi:"maxSeeksForKey"`
	// The maximum number of simultaneous connections permitted to any given MySQL user account. A value of 0 (the default) means “no limit.” This variable has a global value that can be set at server startup or runtime. It also has a read-only session value that indicates the effective simultaneous-connection limit that applies to the account associated with the current session.
	MaxUserConnections string `pulumi:"maxUserConnections"`
	// ("mysqlFirewallMode")
	MysqlFirewallMode bool `pulumi:"mysqlFirewallMode"`
	// DEPRECATED -- typo of mysqlx_zstd_default_compression_level. variable will be ignored.
	//
	// Deprecated: The 'mysql_zstd_default_compression_level' field has been deprecated and may be removed in a future version. Do not use this field.
	MysqlZstdDefaultCompressionLevel int `pulumi:"mysqlZstdDefaultCompressionLevel"`
	// The number of seconds X Plugin waits for the first packet to be received from newly connected clients.
	MysqlxConnectTimeout int `pulumi:"mysqlxConnectTimeout"`
	// Set the default compression level for the deflate algorithm. ("mysqlxDeflateDefaultCompressionLevel")
	MysqlxDeflateDefaultCompressionLevel int `pulumi:"mysqlxDeflateDefaultCompressionLevel"`
	// Limit the upper bound of accepted compression levels for the deflate algorithm. ("mysqlxDeflateMaxClientCompressionLevel")
	MysqlxDeflateMaxClientCompressionLevel int `pulumi:"mysqlxDeflateMaxClientCompressionLevel"`
	// ("mysqlxDocumentIdUniquePrefix") DEPRECATED -- variable should not be settable and will be ignored
	//
	// Deprecated: The 'mysqlx_document_id_unique_prefix' field has been deprecated and may be removed in a future version. Do not use this field.
	MysqlxDocumentIdUniquePrefix int `pulumi:"mysqlxDocumentIdUniquePrefix"`
	// ("mysqlxEnableHelloNotice") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxEnableHelloNotice bool `pulumi:"mysqlxEnableHelloNotice"`
	// ("mysqlxIdleWorkerThreadTimeout") DEPRECATED -- variable should not be settable and will be ignored
	//
	// Deprecated: The 'mysqlx_idle_worker_thread_timeout' field has been deprecated and may be removed in a future version. Do not use this field.
	MysqlxIdleWorkerThreadTimeout int `pulumi:"mysqlxIdleWorkerThreadTimeout"`
	// The number of seconds to wait for interactive clients to timeout.
	MysqlxInteractiveTimeout int `pulumi:"mysqlxInteractiveTimeout"`
	// Set the default compression level for the lz4 algorithm. ("mysqlxLz4DefaultCompressionLevel")
	MysqlxLz4defaultCompressionLevel int `pulumi:"mysqlxLz4defaultCompressionLevel"`
	// Limit the upper bound of accepted compression levels for the lz4 algorithm. ("mysqlxLz4MaxClientCompressionLevel")
	MysqlxLz4maxClientCompressionLevel int `pulumi:"mysqlxLz4maxClientCompressionLevel"`
	// The maximum size of network packets that can be received by X Plugin.
	MysqlxMaxAllowedPacket int `pulumi:"mysqlxMaxAllowedPacket"`
	// ("mysqlxMinWorkerThreads") DEPRECATED -- variable should not be settable and will be ignored
	//
	// Deprecated: The 'mysqlx_min_worker_threads' field has been deprecated and may be removed in a future version. Do not use this field.
	MysqlxMinWorkerThreads int `pulumi:"mysqlxMinWorkerThreads"`
	// The number of seconds that X Plugin waits for blocking read operations to complete. After this time, if the read operation is not successful, X Plugin closes the connection and returns a warning notice with the error code ER_IO_READ_ERROR to the client application.
	MysqlxReadTimeout int `pulumi:"mysqlxReadTimeout"`
	// The number of seconds that X Plugin waits for activity on a connection.
	MysqlxWaitTimeout int `pulumi:"mysqlxWaitTimeout"`
	// The number of seconds that X Plugin waits for blocking write operations to complete. After this time, if the write operation is not successful, X Plugin closes the connection.
	MysqlxWriteTimeout int `pulumi:"mysqlxWriteTimeout"`
	// Set the default compression level for the zstd algorithm. ("mysqlxZstdDefaultCompressionLevel")
	MysqlxZstdDefaultCompressionLevel int `pulumi:"mysqlxZstdDefaultCompressionLevel"`
	// Limit the upper bound of accepted compression levels for the zstd algorithm. ("mysqlxZstdMaxClientCompressionLevel")
	MysqlxZstdMaxClientCompressionLevel int `pulumi:"mysqlxZstdMaxClientCompressionLevel"`
	// The number of seconds to wait for more data from a connection before aborting the read.
	NetReadTimeout int `pulumi:"netReadTimeout"`
	// The number of seconds to wait for a block to be written to a connection before aborting the write.
	NetWriteTimeout int `pulumi:"netWriteTimeout"`
	// The optimizerSwitch system variable enables control over optimizer behavior. The value of this variable is a set of flags, each of which has a value of on or off to indicate whether the corresponding optimizer behavior is enabled or disabled. This variable has global and session values and can be changed at runtime. The global default can be set at server startup.
	OptimizerSwitch string `pulumi:"optimizerSwitch"`
	// ("parserMaxMemSize")
	ParserMaxMemSize string `pulumi:"parserMaxMemSize"`
	// ("queryAllocBlockSize") DEPRECATED -- variable should not be settable and will be ignored
	//
	// Deprecated: The 'query_alloc_block_size' field has been deprecated and may be removed in a future version. Do not use this field.
	QueryAllocBlockSize string `pulumi:"queryAllocBlockSize"`
	// ("queryPreallocSize") DEPRECATED -- variable should not be settable and will be ignored
	QueryPreallocSize string `pulumi:"queryPreallocSize"`
	// The limit on memory consumption for the range optimizer. A value of 0 means “no limit.” If an execution plan considered by the optimizer uses the range access method but the optimizer estimates that the amount of memory needed for this method would exceed the limit, it abandons the plan and considers other plans.
	//
	// Deprecated: The 'query_prealloc_size' field has been deprecated and may be removed in a future version. Do not use this field.
	RangeOptimizerMaxMemSize string `pulumi:"rangeOptimizerMaxMemSize"`
	// regexpTimeLimit corresponds to the MySQL system variable [regexpTimeLimit] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_regexp_time_limit)
	RegexpTimeLimit int `pulumi:"regexpTimeLimit"`
	// The maximum amount of space to use for all relay logs.
	RelayLogSpaceLimit string `pulumi:"relayLogSpaceLimit"`
	// Specifies the number of seconds to wait for more data or a heartbeat signal from the source before the replica considers the connection broken, aborts the read, and tries to reconnect. Setting this variable has no immediate effect. The state of the variable applies on all subsequent START REPLICA commands.
	ReplicaNetTimeout int `pulumi:"replicaNetTimeout"`
	// Beginning with MySQL 8.0.26, slaveParallelWorkers is deprecated, and you should use replicaParallelWorkers instead. (Prior to MySQL 8.0.26, you must use slaveParallelWorkers to set the number of applier threads.)
	ReplicaParallelWorkers int `pulumi:"replicaParallelWorkers"`
	// From MySQL 8.0.26, use replicaTypeConversions in place of slave_type_conversions, which is deprecated from that release. In releases before MySQL 8.0.26, use slave_type_conversions.
	ReplicaTypeConversions string `pulumi:"replicaTypeConversions"`
	// Whether client connections to the server are required to use some form of secure transport. When this variable is enabled, the server permits only TCP/IP connections encrypted using TLS/SSL, or connections that use a socket file or shared memory. The server rejects nonsecure connection attempts, which fail with an ER_SECURE_TRANSPORT_REQUIRED error.
	RequireSecureTransport bool `pulumi:"requireSecureTransport"`
	// Whether to resolve host names when checking client connections. If this variable is OFF, mysqld resolves host names when checking client connections. If it is ON, mysqld uses only IP numbers; in this case, all Host column values in the grant tables must be IP addresses. See Section 7.1.12.3, “DNS Lookups and the Host Cache”.
	SkipNameResolve bool `pulumi:"skipNameResolve"`
	// Each session that must perform a sort allocates a buffer of this size.
	SortBufferSize string `pulumi:"sortBufferSize"`
	// Whether GIPK mode is in effect, in which case a MySQL replication source server adds a generated invisible primary key to any InnoDB table that is created without one.
	SqlGenerateInvisiblePrimaryKey bool `pulumi:"sqlGenerateInvisiblePrimaryKey"`
	// ("sqlMode")
	SqlMode string `pulumi:"sqlMode"`
	// ("sqlRequirePrimaryKey")
	SqlRequirePrimaryKey bool `pulumi:"sqlRequirePrimaryKey"`
	// ("sqlWarnings")
	SqlWarnings bool `pulumi:"sqlWarnings"`
	// The number of table definitions that can be stored in the table definition cache. If you use a large number of tables, you can create a large table definition cache to speed up opening of tables. The table definition cache takes less space and does not use file descriptors, unlike the normal table cache.
	TableDefinitionCache int `pulumi:"tableDefinitionCache"`
	// The number of open tables for all threads. Increasing this value increases the number of file descriptors that mysqld requires.
	TableOpenCache int `pulumi:"tableOpenCache"`
	// Defines the maximum amount of memory that can be occupied by the TempTable storage engine before it starts storing data on disk. The default value is 1073741824 bytes (1GiB). For more information, see Section 10.4.4, “Internal Temporary Table Use in MySQL”.
	TemptableMaxRam string `pulumi:"temptableMaxRam"`
	// Controls whether the thread pool uses dedicated listener threads. If enabled, a listener thread in each thread group is dedicated to the task of listening for network events from clients, ensuring that the maximum number of query worker threads is no more than the value specified by threadPoolMaxTransactionsLimit. threadPoolDedicatedListeners corresponds to the MySQL Database Service-specific system variable thread_pool_dedicated_listeners.
	ThreadPoolDedicatedListeners bool `pulumi:"threadPoolDedicatedListeners"`
	// Limits the maximum number of open transactions to the defined value. The default value is 0, which enforces no limit. threadPoolMaxTransactionsLimit corresponds to the MySQL Database Service-specific system variable thread_pool_max_transactions_limit.
	ThreadPoolMaxTransactionsLimit int `pulumi:"threadPoolMaxTransactionsLimit"`
	// The maximum number of query threads permitted in a thread group. The maximum value is 4096, but if threadPoolMaxTransactionsLimit is set, threadPoolQueryThreadsPerGroup must not exceed that value. The default value of 1 means there is one active query thread in each thread group, which works well for many loads. When you are using the high concurrency thread pool algorithm (thread_pool_algorithm = 1), consider increasing the value if you experience slower response times due to long-running transactions.
	ThreadPoolQueryThreadsPerGroup int `pulumi:"threadPoolQueryThreadsPerGroup"`
	// The number of thread groups in the thread pool. This is the most important parameter controlling thread pool performance. It affects how many statements can execute simultaneously. If a value outside the range of permissible values is specified, the thread pool plugin does not load and the server writes a message to the error log.
	ThreadPoolSize int `pulumi:"threadPoolSize"`
	// The delay period before executing a new transaction, in milliseconds. The maximum value is 300000 (5 minutes). A transaction delay can be used in cases where parallel transactions affect the performance of other operations due to resource contention. For example, if parallel transactions affect index creation or an online buffer pool resizing operation, you can configure a transaction delay to reduce resource contention while those operations are running.
	ThreadPoolTransactionDelay int `pulumi:"threadPoolTransactionDelay"`
	// Initializes the time zone for each client that connects.
	TimeZone string `pulumi:"timeZone"`
	// The maximum size of internal in-memory temporary tables. This variable does not apply to user-created MEMORY tables.
	TmpTableSize string `pulumi:"tmpTableSize"`
	// ("transactionIsolation")
	TransactionIsolation string `pulumi:"transactionIsolation"`
	// The number of seconds the server waits for activity on a noninteractive connection before closing it.
	WaitTimeout int `pulumi:"waitTimeout"`
}

// GetMysqlConfigurationVariableInput is an input type that accepts GetMysqlConfigurationVariableArgs and GetMysqlConfigurationVariableOutput values.
// You can construct a concrete instance of `GetMysqlConfigurationVariableInput` via:
//
//	GetMysqlConfigurationVariableArgs{...}
type GetMysqlConfigurationVariableInput interface {
	pulumi.Input

	ToGetMysqlConfigurationVariableOutput() GetMysqlConfigurationVariableOutput
	ToGetMysqlConfigurationVariableOutputWithContext(context.Context) GetMysqlConfigurationVariableOutput
}

type GetMysqlConfigurationVariableArgs struct {
	// auto_increment_increment and autoIncrementOffset are intended for use with circular (source-to-source) replication, and can be used to control the operation of AUTO_INCREMENT columns. Both variables have global and session values, and each can assume an integer value between 1 and 65,535 inclusive.
	AutoIncrementIncrement pulumi.IntInput `pulumi:"autoIncrementIncrement"`
	// This variable has a default value of 1. If it is left with its default value, and Group Replication is started on the server in multi-primary mode, it is changed to the server ID.
	AutoIncrementOffset pulumi.IntInput `pulumi:"autoIncrementOffset"`
	// ("autocommit")
	Autocommit pulumi.BoolInput `pulumi:"autocommit"`
	// If enabled, the server stores all temporary tables on disk rather than in memory.
	BigTables pulumi.BoolInput `pulumi:"bigTables"`
	// Sets the binary log expiration period in seconds. binlogExpireLogsSeconds corresponds to the MySQL binary logging system variable [binlogExpireLogsSeconds](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds).
	BinlogExpireLogsSeconds pulumi.IntInput `pulumi:"binlogExpireLogsSeconds"`
	// Controls how many microseconds the binary log commit waits before synchronizing the binary log file to disk. There is no delay by default. Setting this variable to a microsecond delay enables more transactions to be synchronized together to disk at once, reducing the overall time to commit a group of transactions because the larger groups required fewer time units per group.
	BinlogGroupCommitSyncDelay pulumi.IntInput `pulumi:"binlogGroupCommitSyncDelay"`
	// The maximum number of transactions to wait for before aborting the current delay as specified by binlog_group_commit_sync_delay. If binlogGroupCommitSyncDelay is set to 0, then this option has no effect.
	BinlogGroupCommitSyncNoDelayCount pulumi.IntInput `pulumi:"binlogGroupCommitSyncNoDelayCount"`
	// Configures the amount of table metadata added to the binary log when using row-based logging. binlogRowMetadata corresponds to the MySQL binary logging system variable [binlogRowMetadata](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_metadata).
	BinlogRowMetadata pulumi.StringInput `pulumi:"binlogRowMetadata"`
	// When set to PARTIAL_JSON, this enables use of a space-efficient binary log format for updates that modify only a small portion of a JSON document. binlogRowValueOptions corresponds to the MySQL binary logging system variable [binlogRowValueOptions](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_value_options).
	BinlogRowValueOptions pulumi.StringInput `pulumi:"binlogRowValueOptions"`
	// Enables compression for transactions that are written to binary log files on this server. binlogTransactionCompression corresponds to the MySQL binary logging system variable [binlogTransactionCompression](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_transaction_compression).
	BinlogTransactionCompression pulumi.BoolInput `pulumi:"binlogTransactionCompression"`
	// This variable controls the block encryption mode for block-based algorithms such as AES. It affects encryption for AES_ENCRYPT() and AES_DECRYPT(). blockEncryptionMode takes a value in aes-keylen-mode format, where keylen is the key length in bits and mode is the encryption mode. The value is not case-sensitive. Permitted keylen values are 128, 192, and 256. Permitted mode values are ECB, CBC, CFB1, CFB8, CFB128, and OFB.
	BlockEncryptionMode pulumi.StringInput `pulumi:"blockEncryptionMode"`
	// The server's default character set. If you set this variable, you should also set collationServer to specify the collation for the character set.
	CharacterSetServer pulumi.StringInput `pulumi:"characterSetServer"`
	// The server's default collation.
	CollationServer pulumi.StringInput `pulumi:"collationServer"`
	// ("completionType")
	CompletionType pulumi.StringInput `pulumi:"completionType"`
	// The number of seconds that the mysqld server waits for a connect packet before responding with Bad handshake.
	ConnectTimeout pulumi.IntInput `pulumi:"connectTimeout"`
	// Set the chunking size for updates to the global memory usage counter Global_connection_memory.
	ConnectionMemoryChunkSize pulumi.IntInput `pulumi:"connectionMemoryChunkSize"`
	// Set the maximum amount of memory that can be used by a single user connection.
	ConnectionMemoryLimit pulumi.StringInput `pulumi:"connectionMemoryLimit"`
	// ("cteMaxRecursionDepth")
	CteMaxRecursionDepth pulumi.StringInput `pulumi:"cteMaxRecursionDepth"`
	// The default authentication plugin. This must be a plugin that uses internal credentials storage, so these values are permitted: mysql_native_password, sha256_password, caching_sha2_password.
	DefaultAuthenticationPlugin pulumi.StringInput `pulumi:"defaultAuthenticationPlugin"`
	// This variable determines the default output format used by EXPLAIN in the absence of a FORMAT option when displaying a query execution plan.
	ExplainFormat pulumi.StringInput `pulumi:"explainFormat"`
	// This system variable determines whether the server enables certain nonstandard behaviors for default values and NULL-value handling in TIMESTAMP columns. By default, explicitDefaultsForTimestamp is enabled, which disables the nonstandard behaviors. Disabling explicitDefaultsForTimestamp results in a warning.
	ExplicitDefaultsForTimestamp pulumi.BoolInput `pulumi:"explicitDefaultsForTimestamp"`
	// ("foreignKeyChecks")
	ForeignKeyChecks pulumi.BoolInput `pulumi:"foreignKeyChecks"`
	// ("generatedRandomPasswordLength") DEPRECATED -- variable should not be settable and will be ignored
	//
	// Deprecated: The 'generated_random_password_length' field has been deprecated and may be removed in a future version. Do not use this field.
	GeneratedRandomPasswordLength pulumi.IntInput `pulumi:"generatedRandomPasswordLength"`
	// Set the total amount of memory that can be used by all user connections.
	GlobalConnectionMemoryLimit pulumi.StringInput `pulumi:"globalConnectionMemoryLimit"`
	// Determines whether the MySQL server calculates Global_connection_memory.
	GlobalConnectionMemoryTracking pulumi.BoolInput `pulumi:"globalConnectionMemoryTracking"`
	// Specifies the maximum permitted result length in bytes for the GROUP_CONCAT() function.
	GroupConcatMaxLen pulumi.StringInput `pulumi:"groupConcatMaxLen"`
	// * EVENTUAL: Both RO and RW transactions do not wait for preceding transactions to be applied before executing. A RW transaction does not wait for other members to apply a transaction. This means that a transaction could be externalized on one member before the others. This also means that in the event of a primary failover, the new primary can accept new RO and RW transactions before the previous primary transactions are all applied. RO transactions could result in outdated values, RW transactions could result in a rollback due to conflicts.
	// * BEFORE_ON_PRIMARY_FAILOVER: New RO or RW transactions with a newly elected primary that is applying backlog from the old primary are held (not applied) until any backlog has been applied. This ensures that when a primary failover happens, intentionally or not, clients always see the latest value on the primary. This guarantees consistency, but means that clients must be able to handle the delay in the event that a backlog is being applied. Usually this delay should be minimal, but does depend on the size of the backlog.
	// * BEFORE: A RW transaction waits for all preceding transactions to complete before being applied. A RO transaction waits for all preceding transactions to complete before being executed. This ensures that this transaction reads the latest value by only affecting the latency of the transaction. This reduces the overhead of synchronization on every RW transaction, by ensuring synchronization is used only on RO transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
	// * AFTER: A RW transaction waits until its changes have been applied to all of the other members. This value has no effect on RO transactions. This mode ensures that when a transaction is committed on the local member, any subsequent transaction reads the written value or a more recent value on any group member. Use this mode with a group that is used for predominantly RO operations to ensure that applied RW transactions are applied everywhere once they commit. This could be used by your application to ensure that subsequent reads fetch the latest data which includes the latest writes. This reduces the overhead of synchronization on every RO transaction, by ensuring synchronization is used only on RW transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
	// * BEFORE_AND_AFTER: A RW transaction waits for 1) all preceding transactions to complete before being applied and 2) until its changes have been applied on other members. A RO transaction waits for all preceding transactions to complete before execution takes place. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
	GroupReplicationConsistency pulumi.StringInput `pulumi:"groupReplicationConsistency"`
	// ("informationSchemaStatsExpiry")
	InformationSchemaStatsExpiry pulumi.IntInput `pulumi:"informationSchemaStatsExpiry"`
	// Whether the InnoDB adaptive hash index is enabled or disabled. It may be desirable, depending on your workload, to dynamically enable or disable adaptive hash indexing to improve query performance. Because the adaptive hash index may not be useful for all workloads, conduct benchmarks with it both enabled and disabled, using realistic workloads.
	InnodbAdaptiveHashIndex pulumi.BoolInput `pulumi:"innodbAdaptiveHashIndex"`
	// The lock mode to use for generating auto-increment values. Permissible values are 0, 1, or 2, for traditional, consecutive, or interleaved, respectively.
	InnodbAutoincLockMode pulumi.IntInput `pulumi:"innodbAutoincLockMode"`
	// Specifies the percentage of the most recently used pages for each buffer pool to read out and dump.
	InnodbBufferPoolDumpPct pulumi.IntInput `pulumi:"innodbBufferPoolDumpPct"`
	// ("innodbBufferPoolInstances")
	InnodbBufferPoolInstances pulumi.IntInput `pulumi:"innodbBufferPoolInstances"`
	// The size (in bytes) of the buffer pool, that is, the memory area where InnoDB caches table and index data.
	InnodbBufferPoolSize pulumi.StringInput `pulumi:"innodbBufferPoolSize"`
	// Whether InnoDB performs change buffering, an optimization that delays write operations to secondary indexes so that the I/O operations can be performed sequentially. Permitted values are described in the following table. Values may also be specified numerically.
	InnodbChangeBuffering pulumi.StringInput `pulumi:"innodbChangeBuffering"`
	// innodbDdlBufferSize corresponds to the MySQL system variable [innodbDdlBufferSize] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_ddl_buffer_size)
	InnodbDdlBufferSize pulumi.StringInput `pulumi:"innodbDdlBufferSize"`
	// innodbDdlThreads corresponds to the MySQL system variable [innodbDdlThreads] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_ddl_threads)
	InnodbDdlThreads pulumi.IntInput `pulumi:"innodbDdlThreads"`
	// ("innodbFtEnableStopword")
	InnodbFtEnableStopword pulumi.BoolInput `pulumi:"innodbFtEnableStopword"`
	// ("innodbFtMaxTokenSize")
	InnodbFtMaxTokenSize pulumi.IntInput `pulumi:"innodbFtMaxTokenSize"`
	// ("innodbFtMinTokenSize")
	InnodbFtMinTokenSize pulumi.IntInput `pulumi:"innodbFtMinTokenSize"`
	// ("innodbFtNumWordOptimize")
	InnodbFtNumWordOptimize pulumi.IntInput `pulumi:"innodbFtNumWordOptimize"`
	// ("innodbFtResultCacheLimit")
	InnodbFtResultCacheLimit pulumi.StringInput `pulumi:"innodbFtResultCacheLimit"`
	// ("innodbFtServerStopwordTable")
	InnodbFtServerStopwordTable pulumi.StringInput `pulumi:"innodbFtServerStopwordTable"`
	// ("innodbLockWaitTimeout")
	InnodbLockWaitTimeout pulumi.IntInput `pulumi:"innodbLockWaitTimeout"`
	// Enables dedicated log writer threads for writing redo log records from the log buffer to the system buffers and flushing the system buffers to the redo log files.
	InnodbLogWriterThreads pulumi.BoolInput `pulumi:"innodbLogWriterThreads"`
	// The desired maximum purge lag in terms of transactions.
	InnodbMaxPurgeLag pulumi.StringInput `pulumi:"innodbMaxPurgeLag"`
	// The maximum delay in microseconds for the delay imposed when the innodbMaxPurgeLag threshold is exceeded.
	InnodbMaxPurgeLagDelay pulumi.IntInput `pulumi:"innodbMaxPurgeLagDelay"`
	// Enables the NUMA interleave memory policy for allocation of the InnoDB buffer pool. When innodbNumaInterleave is enabled, the NUMA memory policy is set to MPOL_INTERLEAVE for the mysqld process. After the InnoDB buffer pool is allocated, the NUMA memory policy is set back to MPOL_DEFAULT. For the innodbNumaInterleave option to be available, MySQL must be compiled on a NUMA-enabled Linux system.
	InnodbNumaInterleave pulumi.BoolInput `pulumi:"innodbNumaInterleave"`
	// Specifies an upper limit in bytes on the size of the temporary log files used during online DDL operations for InnoDB tables. There is one such log file for each index being created or table being altered. This log file stores data inserted, updated, or deleted in the table during the DDL operation.
	InnodbOnlineAlterLogMaxSize pulumi.StringInput `pulumi:"innodbOnlineAlterLogMaxSize"`
	// Defines the amount of disk space occupied by redo log files. innodbRedoLogCapacity supercedes the innodbLogFilesInGroup and innodbLogFileSize variables, which are both ignored if innodbRedoLogCapacity is defined. If innodbRedoLogCapacity is not defined, and if neither innodbLogFileSize or innodbLogFilesInGroup are defined, then the default innodbRedoLogCapacity value is used.
	InnodbRedoLogCapacity pulumi.StringInput `pulumi:"innodbRedoLogCapacity"`
	// InnoDB rolls back only the last statement on a transaction timeout by default. If --innodb-rollback-on-timeout is specified, a transaction timeout causes InnoDB to abort and roll back the entire transaction.
	InnodbRollbackOnTimeout pulumi.BoolInput `pulumi:"innodbRollbackOnTimeout"`
	// This variable defines:
	// * The sort buffer size for online DDL operations that create or rebuild secondary indexes. However, as of MySQL 8.0.27, this responsibility is subsumed by the innodbDdlBufferSize variable.
	// * The amount by which the temporary log file is extended when recording concurrent DML during an online DDL operation, and the size of the temporary log file read buffer and write buffer.
	InnodbSortBufferSize pulumi.IntInput `pulumi:"innodbSortBufferSize"`
	// The number of index pages to sample when estimating cardinality and other statistics for an indexed column, such as those calculated by ANALYZE TABLE.
	InnodbStatsPersistentSamplePages pulumi.StringInput `pulumi:"innodbStatsPersistentSamplePages"`
	// The number of index pages to sample when estimating cardinality and other statistics for an indexed column, such as those calculated by [ANALYZE TABLE](https://dev.mysql.com/doc/refman/8.0/en/analyze-table.html).
	InnodbStatsTransientSamplePages pulumi.StringInput `pulumi:"innodbStatsTransientSamplePages"`
	// When you enable innodbStrictMode, the InnoDB storage engine returns errors instead of warnings for invalid or incompatible table options.
	InnodbStrictMode pulumi.BoolInput `pulumi:"innodbStrictMode"`
	// When enabled, undo tablespaces that exceed the threshold value defined by innodbMaxUndoLogSize are marked for truncation. Only undo tablespaces can be truncated. Truncating undo logs that reside in the system tablespace is not supported. For truncation to occur, there must be at least two undo tablespaces.
	InnodbUndoLogTruncate pulumi.BoolInput `pulumi:"innodbUndoLogTruncate"`
	// The number of seconds the server waits for activity on an interactive connection before closing it.
	InteractiveTimeout pulumi.IntInput `pulumi:"interactiveTimeout"`
	// The minimum size of the buffer that is used for plain index scans, range index scans, and joins that do not use indexes and thus perform full table scans. In MySQL 8.0.18 and later, this variable also controls the amount of memory used for hash joins. Normally, the best way to get fast joins is to add indexes. Increase the value of joinBufferSize to get a faster full join when adding indexes is not possible. One join buffer is allocated for each full join between two tables. For a complex join between several tables for which indexes are not used, multiple join buffers might be necessary.
	JoinBufferSize pulumi.StringInput `pulumi:"joinBufferSize"`
	// This variable controls server-side LOCAL capability for LOAD DATA statements. Depending on the localInfile setting, the server refuses or permits local data loading by clients that have LOCAL enabled on the client side.
	LocalInfile pulumi.BoolInput `pulumi:"localInfile"`
	// If a query takes longer than this many seconds, the server increments the Slow_queries status variable. If the slow query log is enabled, the query is logged to the slow query log file. This value is measured in real time, not CPU time, so a query that is under the threshold on a lightly loaded system might be above the threshold on a heavily loaded one.
	LongQueryTime pulumi.IntInput `pulumi:"longQueryTime"`
	// ("mandatoryRoles")
	MandatoryRoles pulumi.StringInput `pulumi:"mandatoryRoles"`
	// The maximum size of one packet or any generated/intermediate string.
	MaxAllowedPacket pulumi.IntInput `pulumi:"maxAllowedPacket"`
	// Sets the size of the transaction cache.
	MaxBinlogCacheSize pulumi.StringInput `pulumi:"maxBinlogCacheSize"`
	// ("maxConnectErrors")
	MaxConnectErrors pulumi.StringInput `pulumi:"maxConnectErrors"`
	// ("maxConnections")
	MaxConnections pulumi.IntInput `pulumi:"maxConnections"`
	// ("maxExecutionTime")
	MaxExecutionTime pulumi.StringInput `pulumi:"maxExecutionTime"`
	// This variable sets the maximum size to which user-created MEMORY tables are permitted to grow.
	MaxHeapTableSize pulumi.StringInput `pulumi:"maxHeapTableSize"`
	// ("maxPreparedStmtCount")
	MaxPreparedStmtCount pulumi.IntInput `pulumi:"maxPreparedStmtCount"`
	// Limit the assumed maximum number of seeks when looking up rows based on a key. The MySQL optimizer assumes that no more than this number of key seeks are required when searching for matching rows in a table by scanning an index, regardless of the actual cardinality of the index (see Section 15.7.7.22, “SHOW INDEX Statement”). By setting this to a low value (say, 100), you can force MySQL to prefer indexes instead of table scans.
	MaxSeeksForKey pulumi.StringInput `pulumi:"maxSeeksForKey"`
	// The maximum number of simultaneous connections permitted to any given MySQL user account. A value of 0 (the default) means “no limit.” This variable has a global value that can be set at server startup or runtime. It also has a read-only session value that indicates the effective simultaneous-connection limit that applies to the account associated with the current session.
	MaxUserConnections pulumi.StringInput `pulumi:"maxUserConnections"`
	// ("mysqlFirewallMode")
	MysqlFirewallMode pulumi.BoolInput `pulumi:"mysqlFirewallMode"`
	// DEPRECATED -- typo of mysqlx_zstd_default_compression_level. variable will be ignored.
	//
	// Deprecated: The 'mysql_zstd_default_compression_level' field has been deprecated and may be removed in a future version. Do not use this field.
	MysqlZstdDefaultCompressionLevel pulumi.IntInput `pulumi:"mysqlZstdDefaultCompressionLevel"`
	// The number of seconds X Plugin waits for the first packet to be received from newly connected clients.
	MysqlxConnectTimeout pulumi.IntInput `pulumi:"mysqlxConnectTimeout"`
	// Set the default compression level for the deflate algorithm. ("mysqlxDeflateDefaultCompressionLevel")
	MysqlxDeflateDefaultCompressionLevel pulumi.IntInput `pulumi:"mysqlxDeflateDefaultCompressionLevel"`
	// Limit the upper bound of accepted compression levels for the deflate algorithm. ("mysqlxDeflateMaxClientCompressionLevel")
	MysqlxDeflateMaxClientCompressionLevel pulumi.IntInput `pulumi:"mysqlxDeflateMaxClientCompressionLevel"`
	// ("mysqlxDocumentIdUniquePrefix") DEPRECATED -- variable should not be settable and will be ignored
	//
	// Deprecated: The 'mysqlx_document_id_unique_prefix' field has been deprecated and may be removed in a future version. Do not use this field.
	MysqlxDocumentIdUniquePrefix pulumi.IntInput `pulumi:"mysqlxDocumentIdUniquePrefix"`
	// ("mysqlxEnableHelloNotice") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxEnableHelloNotice pulumi.BoolInput `pulumi:"mysqlxEnableHelloNotice"`
	// ("mysqlxIdleWorkerThreadTimeout") DEPRECATED -- variable should not be settable and will be ignored
	//
	// Deprecated: The 'mysqlx_idle_worker_thread_timeout' field has been deprecated and may be removed in a future version. Do not use this field.
	MysqlxIdleWorkerThreadTimeout pulumi.IntInput `pulumi:"mysqlxIdleWorkerThreadTimeout"`
	// The number of seconds to wait for interactive clients to timeout.
	MysqlxInteractiveTimeout pulumi.IntInput `pulumi:"mysqlxInteractiveTimeout"`
	// Set the default compression level for the lz4 algorithm. ("mysqlxLz4DefaultCompressionLevel")
	MysqlxLz4defaultCompressionLevel pulumi.IntInput `pulumi:"mysqlxLz4defaultCompressionLevel"`
	// Limit the upper bound of accepted compression levels for the lz4 algorithm. ("mysqlxLz4MaxClientCompressionLevel")
	MysqlxLz4maxClientCompressionLevel pulumi.IntInput `pulumi:"mysqlxLz4maxClientCompressionLevel"`
	// The maximum size of network packets that can be received by X Plugin.
	MysqlxMaxAllowedPacket pulumi.IntInput `pulumi:"mysqlxMaxAllowedPacket"`
	// ("mysqlxMinWorkerThreads") DEPRECATED -- variable should not be settable and will be ignored
	//
	// Deprecated: The 'mysqlx_min_worker_threads' field has been deprecated and may be removed in a future version. Do not use this field.
	MysqlxMinWorkerThreads pulumi.IntInput `pulumi:"mysqlxMinWorkerThreads"`
	// The number of seconds that X Plugin waits for blocking read operations to complete. After this time, if the read operation is not successful, X Plugin closes the connection and returns a warning notice with the error code ER_IO_READ_ERROR to the client application.
	MysqlxReadTimeout pulumi.IntInput `pulumi:"mysqlxReadTimeout"`
	// The number of seconds that X Plugin waits for activity on a connection.
	MysqlxWaitTimeout pulumi.IntInput `pulumi:"mysqlxWaitTimeout"`
	// The number of seconds that X Plugin waits for blocking write operations to complete. After this time, if the write operation is not successful, X Plugin closes the connection.
	MysqlxWriteTimeout pulumi.IntInput `pulumi:"mysqlxWriteTimeout"`
	// Set the default compression level for the zstd algorithm. ("mysqlxZstdDefaultCompressionLevel")
	MysqlxZstdDefaultCompressionLevel pulumi.IntInput `pulumi:"mysqlxZstdDefaultCompressionLevel"`
	// Limit the upper bound of accepted compression levels for the zstd algorithm. ("mysqlxZstdMaxClientCompressionLevel")
	MysqlxZstdMaxClientCompressionLevel pulumi.IntInput `pulumi:"mysqlxZstdMaxClientCompressionLevel"`
	// The number of seconds to wait for more data from a connection before aborting the read.
	NetReadTimeout pulumi.IntInput `pulumi:"netReadTimeout"`
	// The number of seconds to wait for a block to be written to a connection before aborting the write.
	NetWriteTimeout pulumi.IntInput `pulumi:"netWriteTimeout"`
	// The optimizerSwitch system variable enables control over optimizer behavior. The value of this variable is a set of flags, each of which has a value of on or off to indicate whether the corresponding optimizer behavior is enabled or disabled. This variable has global and session values and can be changed at runtime. The global default can be set at server startup.
	OptimizerSwitch pulumi.StringInput `pulumi:"optimizerSwitch"`
	// ("parserMaxMemSize")
	ParserMaxMemSize pulumi.StringInput `pulumi:"parserMaxMemSize"`
	// ("queryAllocBlockSize") DEPRECATED -- variable should not be settable and will be ignored
	//
	// Deprecated: The 'query_alloc_block_size' field has been deprecated and may be removed in a future version. Do not use this field.
	QueryAllocBlockSize pulumi.StringInput `pulumi:"queryAllocBlockSize"`
	// ("queryPreallocSize") DEPRECATED -- variable should not be settable and will be ignored
	QueryPreallocSize pulumi.StringInput `pulumi:"queryPreallocSize"`
	// The limit on memory consumption for the range optimizer. A value of 0 means “no limit.” If an execution plan considered by the optimizer uses the range access method but the optimizer estimates that the amount of memory needed for this method would exceed the limit, it abandons the plan and considers other plans.
	//
	// Deprecated: The 'query_prealloc_size' field has been deprecated and may be removed in a future version. Do not use this field.
	RangeOptimizerMaxMemSize pulumi.StringInput `pulumi:"rangeOptimizerMaxMemSize"`
	// regexpTimeLimit corresponds to the MySQL system variable [regexpTimeLimit] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_regexp_time_limit)
	RegexpTimeLimit pulumi.IntInput `pulumi:"regexpTimeLimit"`
	// The maximum amount of space to use for all relay logs.
	RelayLogSpaceLimit pulumi.StringInput `pulumi:"relayLogSpaceLimit"`
	// Specifies the number of seconds to wait for more data or a heartbeat signal from the source before the replica considers the connection broken, aborts the read, and tries to reconnect. Setting this variable has no immediate effect. The state of the variable applies on all subsequent START REPLICA commands.
	ReplicaNetTimeout pulumi.IntInput `pulumi:"replicaNetTimeout"`
	// Beginning with MySQL 8.0.26, slaveParallelWorkers is deprecated, and you should use replicaParallelWorkers instead. (Prior to MySQL 8.0.26, you must use slaveParallelWorkers to set the number of applier threads.)
	ReplicaParallelWorkers pulumi.IntInput `pulumi:"replicaParallelWorkers"`
	// From MySQL 8.0.26, use replicaTypeConversions in place of slave_type_conversions, which is deprecated from that release. In releases before MySQL 8.0.26, use slave_type_conversions.
	ReplicaTypeConversions pulumi.StringInput `pulumi:"replicaTypeConversions"`
	// Whether client connections to the server are required to use some form of secure transport. When this variable is enabled, the server permits only TCP/IP connections encrypted using TLS/SSL, or connections that use a socket file or shared memory. The server rejects nonsecure connection attempts, which fail with an ER_SECURE_TRANSPORT_REQUIRED error.
	RequireSecureTransport pulumi.BoolInput `pulumi:"requireSecureTransport"`
	// Whether to resolve host names when checking client connections. If this variable is OFF, mysqld resolves host names when checking client connections. If it is ON, mysqld uses only IP numbers; in this case, all Host column values in the grant tables must be IP addresses. See Section 7.1.12.3, “DNS Lookups and the Host Cache”.
	SkipNameResolve pulumi.BoolInput `pulumi:"skipNameResolve"`
	// Each session that must perform a sort allocates a buffer of this size.
	SortBufferSize pulumi.StringInput `pulumi:"sortBufferSize"`
	// Whether GIPK mode is in effect, in which case a MySQL replication source server adds a generated invisible primary key to any InnoDB table that is created without one.
	SqlGenerateInvisiblePrimaryKey pulumi.BoolInput `pulumi:"sqlGenerateInvisiblePrimaryKey"`
	// ("sqlMode")
	SqlMode pulumi.StringInput `pulumi:"sqlMode"`
	// ("sqlRequirePrimaryKey")
	SqlRequirePrimaryKey pulumi.BoolInput `pulumi:"sqlRequirePrimaryKey"`
	// ("sqlWarnings")
	SqlWarnings pulumi.BoolInput `pulumi:"sqlWarnings"`
	// The number of table definitions that can be stored in the table definition cache. If you use a large number of tables, you can create a large table definition cache to speed up opening of tables. The table definition cache takes less space and does not use file descriptors, unlike the normal table cache.
	TableDefinitionCache pulumi.IntInput `pulumi:"tableDefinitionCache"`
	// The number of open tables for all threads. Increasing this value increases the number of file descriptors that mysqld requires.
	TableOpenCache pulumi.IntInput `pulumi:"tableOpenCache"`
	// Defines the maximum amount of memory that can be occupied by the TempTable storage engine before it starts storing data on disk. The default value is 1073741824 bytes (1GiB). For more information, see Section 10.4.4, “Internal Temporary Table Use in MySQL”.
	TemptableMaxRam pulumi.StringInput `pulumi:"temptableMaxRam"`
	// Controls whether the thread pool uses dedicated listener threads. If enabled, a listener thread in each thread group is dedicated to the task of listening for network events from clients, ensuring that the maximum number of query worker threads is no more than the value specified by threadPoolMaxTransactionsLimit. threadPoolDedicatedListeners corresponds to the MySQL Database Service-specific system variable thread_pool_dedicated_listeners.
	ThreadPoolDedicatedListeners pulumi.BoolInput `pulumi:"threadPoolDedicatedListeners"`
	// Limits the maximum number of open transactions to the defined value. The default value is 0, which enforces no limit. threadPoolMaxTransactionsLimit corresponds to the MySQL Database Service-specific system variable thread_pool_max_transactions_limit.
	ThreadPoolMaxTransactionsLimit pulumi.IntInput `pulumi:"threadPoolMaxTransactionsLimit"`
	// The maximum number of query threads permitted in a thread group. The maximum value is 4096, but if threadPoolMaxTransactionsLimit is set, threadPoolQueryThreadsPerGroup must not exceed that value. The default value of 1 means there is one active query thread in each thread group, which works well for many loads. When you are using the high concurrency thread pool algorithm (thread_pool_algorithm = 1), consider increasing the value if you experience slower response times due to long-running transactions.
	ThreadPoolQueryThreadsPerGroup pulumi.IntInput `pulumi:"threadPoolQueryThreadsPerGroup"`
	// The number of thread groups in the thread pool. This is the most important parameter controlling thread pool performance. It affects how many statements can execute simultaneously. If a value outside the range of permissible values is specified, the thread pool plugin does not load and the server writes a message to the error log.
	ThreadPoolSize pulumi.IntInput `pulumi:"threadPoolSize"`
	// The delay period before executing a new transaction, in milliseconds. The maximum value is 300000 (5 minutes). A transaction delay can be used in cases where parallel transactions affect the performance of other operations due to resource contention. For example, if parallel transactions affect index creation or an online buffer pool resizing operation, you can configure a transaction delay to reduce resource contention while those operations are running.
	ThreadPoolTransactionDelay pulumi.IntInput `pulumi:"threadPoolTransactionDelay"`
	// Initializes the time zone for each client that connects.
	TimeZone pulumi.StringInput `pulumi:"timeZone"`
	// The maximum size of internal in-memory temporary tables. This variable does not apply to user-created MEMORY tables.
	TmpTableSize pulumi.StringInput `pulumi:"tmpTableSize"`
	// ("transactionIsolation")
	TransactionIsolation pulumi.StringInput `pulumi:"transactionIsolation"`
	// The number of seconds the server waits for activity on a noninteractive connection before closing it.
	WaitTimeout pulumi.IntInput `pulumi:"waitTimeout"`
}

func (GetMysqlConfigurationVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlConfigurationVariable)(nil)).Elem()
}

func (i GetMysqlConfigurationVariableArgs) ToGetMysqlConfigurationVariableOutput() GetMysqlConfigurationVariableOutput {
	return i.ToGetMysqlConfigurationVariableOutputWithContext(context.Background())
}

func (i GetMysqlConfigurationVariableArgs) ToGetMysqlConfigurationVariableOutputWithContext(ctx context.Context) GetMysqlConfigurationVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlConfigurationVariableOutput)
}

// GetMysqlConfigurationVariableArrayInput is an input type that accepts GetMysqlConfigurationVariableArray and GetMysqlConfigurationVariableArrayOutput values.
// You can construct a concrete instance of `GetMysqlConfigurationVariableArrayInput` via:
//
//	GetMysqlConfigurationVariableArray{ GetMysqlConfigurationVariableArgs{...} }
type GetMysqlConfigurationVariableArrayInput interface {
	pulumi.Input

	ToGetMysqlConfigurationVariableArrayOutput() GetMysqlConfigurationVariableArrayOutput
	ToGetMysqlConfigurationVariableArrayOutputWithContext(context.Context) GetMysqlConfigurationVariableArrayOutput
}

type GetMysqlConfigurationVariableArray []GetMysqlConfigurationVariableInput

func (GetMysqlConfigurationVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlConfigurationVariable)(nil)).Elem()
}

func (i GetMysqlConfigurationVariableArray) ToGetMysqlConfigurationVariableArrayOutput() GetMysqlConfigurationVariableArrayOutput {
	return i.ToGetMysqlConfigurationVariableArrayOutputWithContext(context.Background())
}

func (i GetMysqlConfigurationVariableArray) ToGetMysqlConfigurationVariableArrayOutputWithContext(ctx context.Context) GetMysqlConfigurationVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlConfigurationVariableArrayOutput)
}

type GetMysqlConfigurationVariableOutput struct{ *pulumi.OutputState }

func (GetMysqlConfigurationVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlConfigurationVariable)(nil)).Elem()
}

func (o GetMysqlConfigurationVariableOutput) ToGetMysqlConfigurationVariableOutput() GetMysqlConfigurationVariableOutput {
	return o
}

func (o GetMysqlConfigurationVariableOutput) ToGetMysqlConfigurationVariableOutputWithContext(ctx context.Context) GetMysqlConfigurationVariableOutput {
	return o
}

// auto_increment_increment and autoIncrementOffset are intended for use with circular (source-to-source) replication, and can be used to control the operation of AUTO_INCREMENT columns. Both variables have global and session values, and each can assume an integer value between 1 and 65,535 inclusive.
func (o GetMysqlConfigurationVariableOutput) AutoIncrementIncrement() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.AutoIncrementIncrement }).(pulumi.IntOutput)
}

// This variable has a default value of 1. If it is left with its default value, and Group Replication is started on the server in multi-primary mode, it is changed to the server ID.
func (o GetMysqlConfigurationVariableOutput) AutoIncrementOffset() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.AutoIncrementOffset }).(pulumi.IntOutput)
}

// ("autocommit")
func (o GetMysqlConfigurationVariableOutput) Autocommit() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) bool { return v.Autocommit }).(pulumi.BoolOutput)
}

// If enabled, the server stores all temporary tables on disk rather than in memory.
func (o GetMysqlConfigurationVariableOutput) BigTables() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) bool { return v.BigTables }).(pulumi.BoolOutput)
}

// Sets the binary log expiration period in seconds. binlogExpireLogsSeconds corresponds to the MySQL binary logging system variable [binlogExpireLogsSeconds](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds).
func (o GetMysqlConfigurationVariableOutput) BinlogExpireLogsSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.BinlogExpireLogsSeconds }).(pulumi.IntOutput)
}

// Controls how many microseconds the binary log commit waits before synchronizing the binary log file to disk. There is no delay by default. Setting this variable to a microsecond delay enables more transactions to be synchronized together to disk at once, reducing the overall time to commit a group of transactions because the larger groups required fewer time units per group.
func (o GetMysqlConfigurationVariableOutput) BinlogGroupCommitSyncDelay() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.BinlogGroupCommitSyncDelay }).(pulumi.IntOutput)
}

// The maximum number of transactions to wait for before aborting the current delay as specified by binlog_group_commit_sync_delay. If binlogGroupCommitSyncDelay is set to 0, then this option has no effect.
func (o GetMysqlConfigurationVariableOutput) BinlogGroupCommitSyncNoDelayCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.BinlogGroupCommitSyncNoDelayCount }).(pulumi.IntOutput)
}

// Configures the amount of table metadata added to the binary log when using row-based logging. binlogRowMetadata corresponds to the MySQL binary logging system variable [binlogRowMetadata](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_metadata).
func (o GetMysqlConfigurationVariableOutput) BinlogRowMetadata() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.BinlogRowMetadata }).(pulumi.StringOutput)
}

// When set to PARTIAL_JSON, this enables use of a space-efficient binary log format for updates that modify only a small portion of a JSON document. binlogRowValueOptions corresponds to the MySQL binary logging system variable [binlogRowValueOptions](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_value_options).
func (o GetMysqlConfigurationVariableOutput) BinlogRowValueOptions() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.BinlogRowValueOptions }).(pulumi.StringOutput)
}

// Enables compression for transactions that are written to binary log files on this server. binlogTransactionCompression corresponds to the MySQL binary logging system variable [binlogTransactionCompression](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_transaction_compression).
func (o GetMysqlConfigurationVariableOutput) BinlogTransactionCompression() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) bool { return v.BinlogTransactionCompression }).(pulumi.BoolOutput)
}

// This variable controls the block encryption mode for block-based algorithms such as AES. It affects encryption for AES_ENCRYPT() and AES_DECRYPT(). blockEncryptionMode takes a value in aes-keylen-mode format, where keylen is the key length in bits and mode is the encryption mode. The value is not case-sensitive. Permitted keylen values are 128, 192, and 256. Permitted mode values are ECB, CBC, CFB1, CFB8, CFB128, and OFB.
func (o GetMysqlConfigurationVariableOutput) BlockEncryptionMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.BlockEncryptionMode }).(pulumi.StringOutput)
}

// The server's default character set. If you set this variable, you should also set collationServer to specify the collation for the character set.
func (o GetMysqlConfigurationVariableOutput) CharacterSetServer() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.CharacterSetServer }).(pulumi.StringOutput)
}

// The server's default collation.
func (o GetMysqlConfigurationVariableOutput) CollationServer() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.CollationServer }).(pulumi.StringOutput)
}

// ("completionType")
func (o GetMysqlConfigurationVariableOutput) CompletionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.CompletionType }).(pulumi.StringOutput)
}

// The number of seconds that the mysqld server waits for a connect packet before responding with Bad handshake.
func (o GetMysqlConfigurationVariableOutput) ConnectTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.ConnectTimeout }).(pulumi.IntOutput)
}

// Set the chunking size for updates to the global memory usage counter Global_connection_memory.
func (o GetMysqlConfigurationVariableOutput) ConnectionMemoryChunkSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.ConnectionMemoryChunkSize }).(pulumi.IntOutput)
}

// Set the maximum amount of memory that can be used by a single user connection.
func (o GetMysqlConfigurationVariableOutput) ConnectionMemoryLimit() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.ConnectionMemoryLimit }).(pulumi.StringOutput)
}

// ("cteMaxRecursionDepth")
func (o GetMysqlConfigurationVariableOutput) CteMaxRecursionDepth() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.CteMaxRecursionDepth }).(pulumi.StringOutput)
}

// The default authentication plugin. This must be a plugin that uses internal credentials storage, so these values are permitted: mysql_native_password, sha256_password, caching_sha2_password.
func (o GetMysqlConfigurationVariableOutput) DefaultAuthenticationPlugin() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.DefaultAuthenticationPlugin }).(pulumi.StringOutput)
}

// This variable determines the default output format used by EXPLAIN in the absence of a FORMAT option when displaying a query execution plan.
func (o GetMysqlConfigurationVariableOutput) ExplainFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.ExplainFormat }).(pulumi.StringOutput)
}

// This system variable determines whether the server enables certain nonstandard behaviors for default values and NULL-value handling in TIMESTAMP columns. By default, explicitDefaultsForTimestamp is enabled, which disables the nonstandard behaviors. Disabling explicitDefaultsForTimestamp results in a warning.
func (o GetMysqlConfigurationVariableOutput) ExplicitDefaultsForTimestamp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) bool { return v.ExplicitDefaultsForTimestamp }).(pulumi.BoolOutput)
}

// ("foreignKeyChecks")
func (o GetMysqlConfigurationVariableOutput) ForeignKeyChecks() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) bool { return v.ForeignKeyChecks }).(pulumi.BoolOutput)
}

// ("generatedRandomPasswordLength") DEPRECATED -- variable should not be settable and will be ignored
//
// Deprecated: The 'generated_random_password_length' field has been deprecated and may be removed in a future version. Do not use this field.
func (o GetMysqlConfigurationVariableOutput) GeneratedRandomPasswordLength() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.GeneratedRandomPasswordLength }).(pulumi.IntOutput)
}

// Set the total amount of memory that can be used by all user connections.
func (o GetMysqlConfigurationVariableOutput) GlobalConnectionMemoryLimit() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.GlobalConnectionMemoryLimit }).(pulumi.StringOutput)
}

// Determines whether the MySQL server calculates Global_connection_memory.
func (o GetMysqlConfigurationVariableOutput) GlobalConnectionMemoryTracking() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) bool { return v.GlobalConnectionMemoryTracking }).(pulumi.BoolOutput)
}

// Specifies the maximum permitted result length in bytes for the GROUP_CONCAT() function.
func (o GetMysqlConfigurationVariableOutput) GroupConcatMaxLen() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.GroupConcatMaxLen }).(pulumi.StringOutput)
}

// * EVENTUAL: Both RO and RW transactions do not wait for preceding transactions to be applied before executing. A RW transaction does not wait for other members to apply a transaction. This means that a transaction could be externalized on one member before the others. This also means that in the event of a primary failover, the new primary can accept new RO and RW transactions before the previous primary transactions are all applied. RO transactions could result in outdated values, RW transactions could result in a rollback due to conflicts.
// * BEFORE_ON_PRIMARY_FAILOVER: New RO or RW transactions with a newly elected primary that is applying backlog from the old primary are held (not applied) until any backlog has been applied. This ensures that when a primary failover happens, intentionally or not, clients always see the latest value on the primary. This guarantees consistency, but means that clients must be able to handle the delay in the event that a backlog is being applied. Usually this delay should be minimal, but does depend on the size of the backlog.
// * BEFORE: A RW transaction waits for all preceding transactions to complete before being applied. A RO transaction waits for all preceding transactions to complete before being executed. This ensures that this transaction reads the latest value by only affecting the latency of the transaction. This reduces the overhead of synchronization on every RW transaction, by ensuring synchronization is used only on RO transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
// * AFTER: A RW transaction waits until its changes have been applied to all of the other members. This value has no effect on RO transactions. This mode ensures that when a transaction is committed on the local member, any subsequent transaction reads the written value or a more recent value on any group member. Use this mode with a group that is used for predominantly RO operations to ensure that applied RW transactions are applied everywhere once they commit. This could be used by your application to ensure that subsequent reads fetch the latest data which includes the latest writes. This reduces the overhead of synchronization on every RO transaction, by ensuring synchronization is used only on RW transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
// * BEFORE_AND_AFTER: A RW transaction waits for 1) all preceding transactions to complete before being applied and 2) until its changes have been applied on other members. A RO transaction waits for all preceding transactions to complete before execution takes place. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
func (o GetMysqlConfigurationVariableOutput) GroupReplicationConsistency() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.GroupReplicationConsistency }).(pulumi.StringOutput)
}

// ("informationSchemaStatsExpiry")
func (o GetMysqlConfigurationVariableOutput) InformationSchemaStatsExpiry() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.InformationSchemaStatsExpiry }).(pulumi.IntOutput)
}

// Whether the InnoDB adaptive hash index is enabled or disabled. It may be desirable, depending on your workload, to dynamically enable or disable adaptive hash indexing to improve query performance. Because the adaptive hash index may not be useful for all workloads, conduct benchmarks with it both enabled and disabled, using realistic workloads.
func (o GetMysqlConfigurationVariableOutput) InnodbAdaptiveHashIndex() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) bool { return v.InnodbAdaptiveHashIndex }).(pulumi.BoolOutput)
}

// The lock mode to use for generating auto-increment values. Permissible values are 0, 1, or 2, for traditional, consecutive, or interleaved, respectively.
func (o GetMysqlConfigurationVariableOutput) InnodbAutoincLockMode() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.InnodbAutoincLockMode }).(pulumi.IntOutput)
}

// Specifies the percentage of the most recently used pages for each buffer pool to read out and dump.
func (o GetMysqlConfigurationVariableOutput) InnodbBufferPoolDumpPct() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.InnodbBufferPoolDumpPct }).(pulumi.IntOutput)
}

// ("innodbBufferPoolInstances")
func (o GetMysqlConfigurationVariableOutput) InnodbBufferPoolInstances() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.InnodbBufferPoolInstances }).(pulumi.IntOutput)
}

// The size (in bytes) of the buffer pool, that is, the memory area where InnoDB caches table and index data.
func (o GetMysqlConfigurationVariableOutput) InnodbBufferPoolSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.InnodbBufferPoolSize }).(pulumi.StringOutput)
}

// Whether InnoDB performs change buffering, an optimization that delays write operations to secondary indexes so that the I/O operations can be performed sequentially. Permitted values are described in the following table. Values may also be specified numerically.
func (o GetMysqlConfigurationVariableOutput) InnodbChangeBuffering() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.InnodbChangeBuffering }).(pulumi.StringOutput)
}

// innodbDdlBufferSize corresponds to the MySQL system variable [innodbDdlBufferSize] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_ddl_buffer_size)
func (o GetMysqlConfigurationVariableOutput) InnodbDdlBufferSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.InnodbDdlBufferSize }).(pulumi.StringOutput)
}

// innodbDdlThreads corresponds to the MySQL system variable [innodbDdlThreads] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_ddl_threads)
func (o GetMysqlConfigurationVariableOutput) InnodbDdlThreads() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.InnodbDdlThreads }).(pulumi.IntOutput)
}

// ("innodbFtEnableStopword")
func (o GetMysqlConfigurationVariableOutput) InnodbFtEnableStopword() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) bool { return v.InnodbFtEnableStopword }).(pulumi.BoolOutput)
}

// ("innodbFtMaxTokenSize")
func (o GetMysqlConfigurationVariableOutput) InnodbFtMaxTokenSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.InnodbFtMaxTokenSize }).(pulumi.IntOutput)
}

// ("innodbFtMinTokenSize")
func (o GetMysqlConfigurationVariableOutput) InnodbFtMinTokenSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.InnodbFtMinTokenSize }).(pulumi.IntOutput)
}

// ("innodbFtNumWordOptimize")
func (o GetMysqlConfigurationVariableOutput) InnodbFtNumWordOptimize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.InnodbFtNumWordOptimize }).(pulumi.IntOutput)
}

// ("innodbFtResultCacheLimit")
func (o GetMysqlConfigurationVariableOutput) InnodbFtResultCacheLimit() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.InnodbFtResultCacheLimit }).(pulumi.StringOutput)
}

// ("innodbFtServerStopwordTable")
func (o GetMysqlConfigurationVariableOutput) InnodbFtServerStopwordTable() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.InnodbFtServerStopwordTable }).(pulumi.StringOutput)
}

// ("innodbLockWaitTimeout")
func (o GetMysqlConfigurationVariableOutput) InnodbLockWaitTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.InnodbLockWaitTimeout }).(pulumi.IntOutput)
}

// Enables dedicated log writer threads for writing redo log records from the log buffer to the system buffers and flushing the system buffers to the redo log files.
func (o GetMysqlConfigurationVariableOutput) InnodbLogWriterThreads() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) bool { return v.InnodbLogWriterThreads }).(pulumi.BoolOutput)
}

// The desired maximum purge lag in terms of transactions.
func (o GetMysqlConfigurationVariableOutput) InnodbMaxPurgeLag() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.InnodbMaxPurgeLag }).(pulumi.StringOutput)
}

// The maximum delay in microseconds for the delay imposed when the innodbMaxPurgeLag threshold is exceeded.
func (o GetMysqlConfigurationVariableOutput) InnodbMaxPurgeLagDelay() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.InnodbMaxPurgeLagDelay }).(pulumi.IntOutput)
}

// Enables the NUMA interleave memory policy for allocation of the InnoDB buffer pool. When innodbNumaInterleave is enabled, the NUMA memory policy is set to MPOL_INTERLEAVE for the mysqld process. After the InnoDB buffer pool is allocated, the NUMA memory policy is set back to MPOL_DEFAULT. For the innodbNumaInterleave option to be available, MySQL must be compiled on a NUMA-enabled Linux system.
func (o GetMysqlConfigurationVariableOutput) InnodbNumaInterleave() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) bool { return v.InnodbNumaInterleave }).(pulumi.BoolOutput)
}

// Specifies an upper limit in bytes on the size of the temporary log files used during online DDL operations for InnoDB tables. There is one such log file for each index being created or table being altered. This log file stores data inserted, updated, or deleted in the table during the DDL operation.
func (o GetMysqlConfigurationVariableOutput) InnodbOnlineAlterLogMaxSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.InnodbOnlineAlterLogMaxSize }).(pulumi.StringOutput)
}

// Defines the amount of disk space occupied by redo log files. innodbRedoLogCapacity supercedes the innodbLogFilesInGroup and innodbLogFileSize variables, which are both ignored if innodbRedoLogCapacity is defined. If innodbRedoLogCapacity is not defined, and if neither innodbLogFileSize or innodbLogFilesInGroup are defined, then the default innodbRedoLogCapacity value is used.
func (o GetMysqlConfigurationVariableOutput) InnodbRedoLogCapacity() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.InnodbRedoLogCapacity }).(pulumi.StringOutput)
}

// InnoDB rolls back only the last statement on a transaction timeout by default. If --innodb-rollback-on-timeout is specified, a transaction timeout causes InnoDB to abort and roll back the entire transaction.
func (o GetMysqlConfigurationVariableOutput) InnodbRollbackOnTimeout() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) bool { return v.InnodbRollbackOnTimeout }).(pulumi.BoolOutput)
}

// This variable defines:
// * The sort buffer size for online DDL operations that create or rebuild secondary indexes. However, as of MySQL 8.0.27, this responsibility is subsumed by the innodbDdlBufferSize variable.
// * The amount by which the temporary log file is extended when recording concurrent DML during an online DDL operation, and the size of the temporary log file read buffer and write buffer.
func (o GetMysqlConfigurationVariableOutput) InnodbSortBufferSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.InnodbSortBufferSize }).(pulumi.IntOutput)
}

// The number of index pages to sample when estimating cardinality and other statistics for an indexed column, such as those calculated by ANALYZE TABLE.
func (o GetMysqlConfigurationVariableOutput) InnodbStatsPersistentSamplePages() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.InnodbStatsPersistentSamplePages }).(pulumi.StringOutput)
}

// The number of index pages to sample when estimating cardinality and other statistics for an indexed column, such as those calculated by [ANALYZE TABLE](https://dev.mysql.com/doc/refman/8.0/en/analyze-table.html).
func (o GetMysqlConfigurationVariableOutput) InnodbStatsTransientSamplePages() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.InnodbStatsTransientSamplePages }).(pulumi.StringOutput)
}

// When you enable innodbStrictMode, the InnoDB storage engine returns errors instead of warnings for invalid or incompatible table options.
func (o GetMysqlConfigurationVariableOutput) InnodbStrictMode() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) bool { return v.InnodbStrictMode }).(pulumi.BoolOutput)
}

// When enabled, undo tablespaces that exceed the threshold value defined by innodbMaxUndoLogSize are marked for truncation. Only undo tablespaces can be truncated. Truncating undo logs that reside in the system tablespace is not supported. For truncation to occur, there must be at least two undo tablespaces.
func (o GetMysqlConfigurationVariableOutput) InnodbUndoLogTruncate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) bool { return v.InnodbUndoLogTruncate }).(pulumi.BoolOutput)
}

// The number of seconds the server waits for activity on an interactive connection before closing it.
func (o GetMysqlConfigurationVariableOutput) InteractiveTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.InteractiveTimeout }).(pulumi.IntOutput)
}

// The minimum size of the buffer that is used for plain index scans, range index scans, and joins that do not use indexes and thus perform full table scans. In MySQL 8.0.18 and later, this variable also controls the amount of memory used for hash joins. Normally, the best way to get fast joins is to add indexes. Increase the value of joinBufferSize to get a faster full join when adding indexes is not possible. One join buffer is allocated for each full join between two tables. For a complex join between several tables for which indexes are not used, multiple join buffers might be necessary.
func (o GetMysqlConfigurationVariableOutput) JoinBufferSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.JoinBufferSize }).(pulumi.StringOutput)
}

// This variable controls server-side LOCAL capability for LOAD DATA statements. Depending on the localInfile setting, the server refuses or permits local data loading by clients that have LOCAL enabled on the client side.
func (o GetMysqlConfigurationVariableOutput) LocalInfile() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) bool { return v.LocalInfile }).(pulumi.BoolOutput)
}

// If a query takes longer than this many seconds, the server increments the Slow_queries status variable. If the slow query log is enabled, the query is logged to the slow query log file. This value is measured in real time, not CPU time, so a query that is under the threshold on a lightly loaded system might be above the threshold on a heavily loaded one.
func (o GetMysqlConfigurationVariableOutput) LongQueryTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.LongQueryTime }).(pulumi.IntOutput)
}

// ("mandatoryRoles")
func (o GetMysqlConfigurationVariableOutput) MandatoryRoles() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.MandatoryRoles }).(pulumi.StringOutput)
}

// The maximum size of one packet or any generated/intermediate string.
func (o GetMysqlConfigurationVariableOutput) MaxAllowedPacket() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MaxAllowedPacket }).(pulumi.IntOutput)
}

// Sets the size of the transaction cache.
func (o GetMysqlConfigurationVariableOutput) MaxBinlogCacheSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.MaxBinlogCacheSize }).(pulumi.StringOutput)
}

// ("maxConnectErrors")
func (o GetMysqlConfigurationVariableOutput) MaxConnectErrors() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.MaxConnectErrors }).(pulumi.StringOutput)
}

// ("maxConnections")
func (o GetMysqlConfigurationVariableOutput) MaxConnections() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MaxConnections }).(pulumi.IntOutput)
}

// ("maxExecutionTime")
func (o GetMysqlConfigurationVariableOutput) MaxExecutionTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.MaxExecutionTime }).(pulumi.StringOutput)
}

// This variable sets the maximum size to which user-created MEMORY tables are permitted to grow.
func (o GetMysqlConfigurationVariableOutput) MaxHeapTableSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.MaxHeapTableSize }).(pulumi.StringOutput)
}

// ("maxPreparedStmtCount")
func (o GetMysqlConfigurationVariableOutput) MaxPreparedStmtCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MaxPreparedStmtCount }).(pulumi.IntOutput)
}

// Limit the assumed maximum number of seeks when looking up rows based on a key. The MySQL optimizer assumes that no more than this number of key seeks are required when searching for matching rows in a table by scanning an index, regardless of the actual cardinality of the index (see Section 15.7.7.22, “SHOW INDEX Statement”). By setting this to a low value (say, 100), you can force MySQL to prefer indexes instead of table scans.
func (o GetMysqlConfigurationVariableOutput) MaxSeeksForKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.MaxSeeksForKey }).(pulumi.StringOutput)
}

// The maximum number of simultaneous connections permitted to any given MySQL user account. A value of 0 (the default) means “no limit.” This variable has a global value that can be set at server startup or runtime. It also has a read-only session value that indicates the effective simultaneous-connection limit that applies to the account associated with the current session.
func (o GetMysqlConfigurationVariableOutput) MaxUserConnections() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.MaxUserConnections }).(pulumi.StringOutput)
}

// ("mysqlFirewallMode")
func (o GetMysqlConfigurationVariableOutput) MysqlFirewallMode() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) bool { return v.MysqlFirewallMode }).(pulumi.BoolOutput)
}

// DEPRECATED -- typo of mysqlx_zstd_default_compression_level. variable will be ignored.
//
// Deprecated: The 'mysql_zstd_default_compression_level' field has been deprecated and may be removed in a future version. Do not use this field.
func (o GetMysqlConfigurationVariableOutput) MysqlZstdDefaultCompressionLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MysqlZstdDefaultCompressionLevel }).(pulumi.IntOutput)
}

// The number of seconds X Plugin waits for the first packet to be received from newly connected clients.
func (o GetMysqlConfigurationVariableOutput) MysqlxConnectTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MysqlxConnectTimeout }).(pulumi.IntOutput)
}

// Set the default compression level for the deflate algorithm. ("mysqlxDeflateDefaultCompressionLevel")
func (o GetMysqlConfigurationVariableOutput) MysqlxDeflateDefaultCompressionLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MysqlxDeflateDefaultCompressionLevel }).(pulumi.IntOutput)
}

// Limit the upper bound of accepted compression levels for the deflate algorithm. ("mysqlxDeflateMaxClientCompressionLevel")
func (o GetMysqlConfigurationVariableOutput) MysqlxDeflateMaxClientCompressionLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MysqlxDeflateMaxClientCompressionLevel }).(pulumi.IntOutput)
}

// ("mysqlxDocumentIdUniquePrefix") DEPRECATED -- variable should not be settable and will be ignored
//
// Deprecated: The 'mysqlx_document_id_unique_prefix' field has been deprecated and may be removed in a future version. Do not use this field.
func (o GetMysqlConfigurationVariableOutput) MysqlxDocumentIdUniquePrefix() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MysqlxDocumentIdUniquePrefix }).(pulumi.IntOutput)
}

// ("mysqlxEnableHelloNotice") DEPRECATED -- variable should not be settable and will be ignored
func (o GetMysqlConfigurationVariableOutput) MysqlxEnableHelloNotice() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) bool { return v.MysqlxEnableHelloNotice }).(pulumi.BoolOutput)
}

// ("mysqlxIdleWorkerThreadTimeout") DEPRECATED -- variable should not be settable and will be ignored
//
// Deprecated: The 'mysqlx_idle_worker_thread_timeout' field has been deprecated and may be removed in a future version. Do not use this field.
func (o GetMysqlConfigurationVariableOutput) MysqlxIdleWorkerThreadTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MysqlxIdleWorkerThreadTimeout }).(pulumi.IntOutput)
}

// The number of seconds to wait for interactive clients to timeout.
func (o GetMysqlConfigurationVariableOutput) MysqlxInteractiveTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MysqlxInteractiveTimeout }).(pulumi.IntOutput)
}

// Set the default compression level for the lz4 algorithm. ("mysqlxLz4DefaultCompressionLevel")
func (o GetMysqlConfigurationVariableOutput) MysqlxLz4defaultCompressionLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MysqlxLz4defaultCompressionLevel }).(pulumi.IntOutput)
}

// Limit the upper bound of accepted compression levels for the lz4 algorithm. ("mysqlxLz4MaxClientCompressionLevel")
func (o GetMysqlConfigurationVariableOutput) MysqlxLz4maxClientCompressionLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MysqlxLz4maxClientCompressionLevel }).(pulumi.IntOutput)
}

// The maximum size of network packets that can be received by X Plugin.
func (o GetMysqlConfigurationVariableOutput) MysqlxMaxAllowedPacket() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MysqlxMaxAllowedPacket }).(pulumi.IntOutput)
}

// ("mysqlxMinWorkerThreads") DEPRECATED -- variable should not be settable and will be ignored
//
// Deprecated: The 'mysqlx_min_worker_threads' field has been deprecated and may be removed in a future version. Do not use this field.
func (o GetMysqlConfigurationVariableOutput) MysqlxMinWorkerThreads() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MysqlxMinWorkerThreads }).(pulumi.IntOutput)
}

// The number of seconds that X Plugin waits for blocking read operations to complete. After this time, if the read operation is not successful, X Plugin closes the connection and returns a warning notice with the error code ER_IO_READ_ERROR to the client application.
func (o GetMysqlConfigurationVariableOutput) MysqlxReadTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MysqlxReadTimeout }).(pulumi.IntOutput)
}

// The number of seconds that X Plugin waits for activity on a connection.
func (o GetMysqlConfigurationVariableOutput) MysqlxWaitTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MysqlxWaitTimeout }).(pulumi.IntOutput)
}

// The number of seconds that X Plugin waits for blocking write operations to complete. After this time, if the write operation is not successful, X Plugin closes the connection.
func (o GetMysqlConfigurationVariableOutput) MysqlxWriteTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MysqlxWriteTimeout }).(pulumi.IntOutput)
}

// Set the default compression level for the zstd algorithm. ("mysqlxZstdDefaultCompressionLevel")
func (o GetMysqlConfigurationVariableOutput) MysqlxZstdDefaultCompressionLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MysqlxZstdDefaultCompressionLevel }).(pulumi.IntOutput)
}

// Limit the upper bound of accepted compression levels for the zstd algorithm. ("mysqlxZstdMaxClientCompressionLevel")
func (o GetMysqlConfigurationVariableOutput) MysqlxZstdMaxClientCompressionLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.MysqlxZstdMaxClientCompressionLevel }).(pulumi.IntOutput)
}

// The number of seconds to wait for more data from a connection before aborting the read.
func (o GetMysqlConfigurationVariableOutput) NetReadTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.NetReadTimeout }).(pulumi.IntOutput)
}

// The number of seconds to wait for a block to be written to a connection before aborting the write.
func (o GetMysqlConfigurationVariableOutput) NetWriteTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.NetWriteTimeout }).(pulumi.IntOutput)
}

// The optimizerSwitch system variable enables control over optimizer behavior. The value of this variable is a set of flags, each of which has a value of on or off to indicate whether the corresponding optimizer behavior is enabled or disabled. This variable has global and session values and can be changed at runtime. The global default can be set at server startup.
func (o GetMysqlConfigurationVariableOutput) OptimizerSwitch() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.OptimizerSwitch }).(pulumi.StringOutput)
}

// ("parserMaxMemSize")
func (o GetMysqlConfigurationVariableOutput) ParserMaxMemSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.ParserMaxMemSize }).(pulumi.StringOutput)
}

// ("queryAllocBlockSize") DEPRECATED -- variable should not be settable and will be ignored
//
// Deprecated: The 'query_alloc_block_size' field has been deprecated and may be removed in a future version. Do not use this field.
func (o GetMysqlConfigurationVariableOutput) QueryAllocBlockSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.QueryAllocBlockSize }).(pulumi.StringOutput)
}

// ("queryPreallocSize") DEPRECATED -- variable should not be settable and will be ignored
func (o GetMysqlConfigurationVariableOutput) QueryPreallocSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.QueryPreallocSize }).(pulumi.StringOutput)
}

// The limit on memory consumption for the range optimizer. A value of 0 means “no limit.” If an execution plan considered by the optimizer uses the range access method but the optimizer estimates that the amount of memory needed for this method would exceed the limit, it abandons the plan and considers other plans.
//
// Deprecated: The 'query_prealloc_size' field has been deprecated and may be removed in a future version. Do not use this field.
func (o GetMysqlConfigurationVariableOutput) RangeOptimizerMaxMemSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.RangeOptimizerMaxMemSize }).(pulumi.StringOutput)
}

// regexpTimeLimit corresponds to the MySQL system variable [regexpTimeLimit] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_regexp_time_limit)
func (o GetMysqlConfigurationVariableOutput) RegexpTimeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.RegexpTimeLimit }).(pulumi.IntOutput)
}

// The maximum amount of space to use for all relay logs.
func (o GetMysqlConfigurationVariableOutput) RelayLogSpaceLimit() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.RelayLogSpaceLimit }).(pulumi.StringOutput)
}

// Specifies the number of seconds to wait for more data or a heartbeat signal from the source before the replica considers the connection broken, aborts the read, and tries to reconnect. Setting this variable has no immediate effect. The state of the variable applies on all subsequent START REPLICA commands.
func (o GetMysqlConfigurationVariableOutput) ReplicaNetTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.ReplicaNetTimeout }).(pulumi.IntOutput)
}

// Beginning with MySQL 8.0.26, slaveParallelWorkers is deprecated, and you should use replicaParallelWorkers instead. (Prior to MySQL 8.0.26, you must use slaveParallelWorkers to set the number of applier threads.)
func (o GetMysqlConfigurationVariableOutput) ReplicaParallelWorkers() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.ReplicaParallelWorkers }).(pulumi.IntOutput)
}

// From MySQL 8.0.26, use replicaTypeConversions in place of slave_type_conversions, which is deprecated from that release. In releases before MySQL 8.0.26, use slave_type_conversions.
func (o GetMysqlConfigurationVariableOutput) ReplicaTypeConversions() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.ReplicaTypeConversions }).(pulumi.StringOutput)
}

// Whether client connections to the server are required to use some form of secure transport. When this variable is enabled, the server permits only TCP/IP connections encrypted using TLS/SSL, or connections that use a socket file or shared memory. The server rejects nonsecure connection attempts, which fail with an ER_SECURE_TRANSPORT_REQUIRED error.
func (o GetMysqlConfigurationVariableOutput) RequireSecureTransport() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) bool { return v.RequireSecureTransport }).(pulumi.BoolOutput)
}

// Whether to resolve host names when checking client connections. If this variable is OFF, mysqld resolves host names when checking client connections. If it is ON, mysqld uses only IP numbers; in this case, all Host column values in the grant tables must be IP addresses. See Section 7.1.12.3, “DNS Lookups and the Host Cache”.
func (o GetMysqlConfigurationVariableOutput) SkipNameResolve() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) bool { return v.SkipNameResolve }).(pulumi.BoolOutput)
}

// Each session that must perform a sort allocates a buffer of this size.
func (o GetMysqlConfigurationVariableOutput) SortBufferSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.SortBufferSize }).(pulumi.StringOutput)
}

// Whether GIPK mode is in effect, in which case a MySQL replication source server adds a generated invisible primary key to any InnoDB table that is created without one.
func (o GetMysqlConfigurationVariableOutput) SqlGenerateInvisiblePrimaryKey() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) bool { return v.SqlGenerateInvisiblePrimaryKey }).(pulumi.BoolOutput)
}

// ("sqlMode")
func (o GetMysqlConfigurationVariableOutput) SqlMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.SqlMode }).(pulumi.StringOutput)
}

// ("sqlRequirePrimaryKey")
func (o GetMysqlConfigurationVariableOutput) SqlRequirePrimaryKey() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) bool { return v.SqlRequirePrimaryKey }).(pulumi.BoolOutput)
}

// ("sqlWarnings")
func (o GetMysqlConfigurationVariableOutput) SqlWarnings() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) bool { return v.SqlWarnings }).(pulumi.BoolOutput)
}

// The number of table definitions that can be stored in the table definition cache. If you use a large number of tables, you can create a large table definition cache to speed up opening of tables. The table definition cache takes less space and does not use file descriptors, unlike the normal table cache.
func (o GetMysqlConfigurationVariableOutput) TableDefinitionCache() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.TableDefinitionCache }).(pulumi.IntOutput)
}

// The number of open tables for all threads. Increasing this value increases the number of file descriptors that mysqld requires.
func (o GetMysqlConfigurationVariableOutput) TableOpenCache() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.TableOpenCache }).(pulumi.IntOutput)
}

// Defines the maximum amount of memory that can be occupied by the TempTable storage engine before it starts storing data on disk. The default value is 1073741824 bytes (1GiB). For more information, see Section 10.4.4, “Internal Temporary Table Use in MySQL”.
func (o GetMysqlConfigurationVariableOutput) TemptableMaxRam() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.TemptableMaxRam }).(pulumi.StringOutput)
}

// Controls whether the thread pool uses dedicated listener threads. If enabled, a listener thread in each thread group is dedicated to the task of listening for network events from clients, ensuring that the maximum number of query worker threads is no more than the value specified by threadPoolMaxTransactionsLimit. threadPoolDedicatedListeners corresponds to the MySQL Database Service-specific system variable thread_pool_dedicated_listeners.
func (o GetMysqlConfigurationVariableOutput) ThreadPoolDedicatedListeners() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) bool { return v.ThreadPoolDedicatedListeners }).(pulumi.BoolOutput)
}

// Limits the maximum number of open transactions to the defined value. The default value is 0, which enforces no limit. threadPoolMaxTransactionsLimit corresponds to the MySQL Database Service-specific system variable thread_pool_max_transactions_limit.
func (o GetMysqlConfigurationVariableOutput) ThreadPoolMaxTransactionsLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.ThreadPoolMaxTransactionsLimit }).(pulumi.IntOutput)
}

// The maximum number of query threads permitted in a thread group. The maximum value is 4096, but if threadPoolMaxTransactionsLimit is set, threadPoolQueryThreadsPerGroup must not exceed that value. The default value of 1 means there is one active query thread in each thread group, which works well for many loads. When you are using the high concurrency thread pool algorithm (thread_pool_algorithm = 1), consider increasing the value if you experience slower response times due to long-running transactions.
func (o GetMysqlConfigurationVariableOutput) ThreadPoolQueryThreadsPerGroup() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.ThreadPoolQueryThreadsPerGroup }).(pulumi.IntOutput)
}

// The number of thread groups in the thread pool. This is the most important parameter controlling thread pool performance. It affects how many statements can execute simultaneously. If a value outside the range of permissible values is specified, the thread pool plugin does not load and the server writes a message to the error log.
func (o GetMysqlConfigurationVariableOutput) ThreadPoolSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.ThreadPoolSize }).(pulumi.IntOutput)
}

// The delay period before executing a new transaction, in milliseconds. The maximum value is 300000 (5 minutes). A transaction delay can be used in cases where parallel transactions affect the performance of other operations due to resource contention. For example, if parallel transactions affect index creation or an online buffer pool resizing operation, you can configure a transaction delay to reduce resource contention while those operations are running.
func (o GetMysqlConfigurationVariableOutput) ThreadPoolTransactionDelay() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.ThreadPoolTransactionDelay }).(pulumi.IntOutput)
}

// Initializes the time zone for each client that connects.
func (o GetMysqlConfigurationVariableOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.TimeZone }).(pulumi.StringOutput)
}

// The maximum size of internal in-memory temporary tables. This variable does not apply to user-created MEMORY tables.
func (o GetMysqlConfigurationVariableOutput) TmpTableSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.TmpTableSize }).(pulumi.StringOutput)
}

// ("transactionIsolation")
func (o GetMysqlConfigurationVariableOutput) TransactionIsolation() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) string { return v.TransactionIsolation }).(pulumi.StringOutput)
}

// The number of seconds the server waits for activity on a noninteractive connection before closing it.
func (o GetMysqlConfigurationVariableOutput) WaitTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationVariable) int { return v.WaitTimeout }).(pulumi.IntOutput)
}

type GetMysqlConfigurationVariableArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlConfigurationVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlConfigurationVariable)(nil)).Elem()
}

func (o GetMysqlConfigurationVariableArrayOutput) ToGetMysqlConfigurationVariableArrayOutput() GetMysqlConfigurationVariableArrayOutput {
	return o
}

func (o GetMysqlConfigurationVariableArrayOutput) ToGetMysqlConfigurationVariableArrayOutputWithContext(ctx context.Context) GetMysqlConfigurationVariableArrayOutput {
	return o
}

func (o GetMysqlConfigurationVariableArrayOutput) Index(i pulumi.IntInput) GetMysqlConfigurationVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlConfigurationVariable {
		return vs[0].([]GetMysqlConfigurationVariable)[vs[1].(int)]
	}).(GetMysqlConfigurationVariableOutput)
}

type GetMysqlConfigurationsConfiguration struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// User-provided data about the Configuration.
	Description string `pulumi:"description"`
	// A filter to return only the resource matching the given display name exactly.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The OCID of the Configuration.
	Id string `pulumi:"id"`
	// User-defined service variables set only at DB system initialization. These variables cannot be changed later at runtime.
	InitVariables []GetMysqlConfigurationsConfigurationInitVariable `pulumi:"initVariables"`
	// The OCID of the Configuration from which this Configuration is "derived". This is entirely a metadata relationship. There is no relation between the values in this Configuration and its parent.
	ParentConfigurationId string `pulumi:"parentConfigurationId"`
	// The requested Shape name.
	ShapeName string `pulumi:"shapeName"`
	// Configuration Lifecycle State
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time the Configuration was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the Configuration was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeUpdated string `pulumi:"timeUpdated"`
	// The requested Configuration types.
	Type string `pulumi:"type"`
	// User-defined service variables.
	Variables []GetMysqlConfigurationsConfigurationVariable `pulumi:"variables"`
}

// GetMysqlConfigurationsConfigurationInput is an input type that accepts GetMysqlConfigurationsConfigurationArgs and GetMysqlConfigurationsConfigurationOutput values.
// You can construct a concrete instance of `GetMysqlConfigurationsConfigurationInput` via:
//
//	GetMysqlConfigurationsConfigurationArgs{...}
type GetMysqlConfigurationsConfigurationInput interface {
	pulumi.Input

	ToGetMysqlConfigurationsConfigurationOutput() GetMysqlConfigurationsConfigurationOutput
	ToGetMysqlConfigurationsConfigurationOutputWithContext(context.Context) GetMysqlConfigurationsConfigurationOutput
}

type GetMysqlConfigurationsConfigurationArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// User-provided data about the Configuration.
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only the resource matching the given display name exactly.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// The OCID of the Configuration.
	Id pulumi.StringInput `pulumi:"id"`
	// User-defined service variables set only at DB system initialization. These variables cannot be changed later at runtime.
	InitVariables GetMysqlConfigurationsConfigurationInitVariableArrayInput `pulumi:"initVariables"`
	// The OCID of the Configuration from which this Configuration is "derived". This is entirely a metadata relationship. There is no relation between the values in this Configuration and its parent.
	ParentConfigurationId pulumi.StringInput `pulumi:"parentConfigurationId"`
	// The requested Shape name.
	ShapeName pulumi.StringInput `pulumi:"shapeName"`
	// Configuration Lifecycle State
	State pulumi.StringInput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput `pulumi:"systemTags"`
	// The date and time the Configuration was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the Configuration was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// The requested Configuration types.
	Type pulumi.StringInput `pulumi:"type"`
	// User-defined service variables.
	Variables GetMysqlConfigurationsConfigurationVariableArrayInput `pulumi:"variables"`
}

func (GetMysqlConfigurationsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlConfigurationsConfiguration)(nil)).Elem()
}

func (i GetMysqlConfigurationsConfigurationArgs) ToGetMysqlConfigurationsConfigurationOutput() GetMysqlConfigurationsConfigurationOutput {
	return i.ToGetMysqlConfigurationsConfigurationOutputWithContext(context.Background())
}

func (i GetMysqlConfigurationsConfigurationArgs) ToGetMysqlConfigurationsConfigurationOutputWithContext(ctx context.Context) GetMysqlConfigurationsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlConfigurationsConfigurationOutput)
}

// GetMysqlConfigurationsConfigurationArrayInput is an input type that accepts GetMysqlConfigurationsConfigurationArray and GetMysqlConfigurationsConfigurationArrayOutput values.
// You can construct a concrete instance of `GetMysqlConfigurationsConfigurationArrayInput` via:
//
//	GetMysqlConfigurationsConfigurationArray{ GetMysqlConfigurationsConfigurationArgs{...} }
type GetMysqlConfigurationsConfigurationArrayInput interface {
	pulumi.Input

	ToGetMysqlConfigurationsConfigurationArrayOutput() GetMysqlConfigurationsConfigurationArrayOutput
	ToGetMysqlConfigurationsConfigurationArrayOutputWithContext(context.Context) GetMysqlConfigurationsConfigurationArrayOutput
}

type GetMysqlConfigurationsConfigurationArray []GetMysqlConfigurationsConfigurationInput

func (GetMysqlConfigurationsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlConfigurationsConfiguration)(nil)).Elem()
}

func (i GetMysqlConfigurationsConfigurationArray) ToGetMysqlConfigurationsConfigurationArrayOutput() GetMysqlConfigurationsConfigurationArrayOutput {
	return i.ToGetMysqlConfigurationsConfigurationArrayOutputWithContext(context.Background())
}

func (i GetMysqlConfigurationsConfigurationArray) ToGetMysqlConfigurationsConfigurationArrayOutputWithContext(ctx context.Context) GetMysqlConfigurationsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlConfigurationsConfigurationArrayOutput)
}

type GetMysqlConfigurationsConfigurationOutput struct{ *pulumi.OutputState }

func (GetMysqlConfigurationsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlConfigurationsConfiguration)(nil)).Elem()
}

func (o GetMysqlConfigurationsConfigurationOutput) ToGetMysqlConfigurationsConfigurationOutput() GetMysqlConfigurationsConfigurationOutput {
	return o
}

func (o GetMysqlConfigurationsConfigurationOutput) ToGetMysqlConfigurationsConfigurationOutputWithContext(ctx context.Context) GetMysqlConfigurationsConfigurationOutput {
	return o
}

// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetMysqlConfigurationsConfigurationOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfiguration) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetMysqlConfigurationsConfigurationOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfiguration) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// User-provided data about the Configuration.
func (o GetMysqlConfigurationsConfigurationOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfiguration) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only the resource matching the given display name exactly.
func (o GetMysqlConfigurationsConfigurationOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfiguration) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetMysqlConfigurationsConfigurationOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfiguration) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The OCID of the Configuration.
func (o GetMysqlConfigurationsConfigurationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfiguration) string { return v.Id }).(pulumi.StringOutput)
}

// User-defined service variables set only at DB system initialization. These variables cannot be changed later at runtime.
func (o GetMysqlConfigurationsConfigurationOutput) InitVariables() GetMysqlConfigurationsConfigurationInitVariableArrayOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfiguration) []GetMysqlConfigurationsConfigurationInitVariable {
		return v.InitVariables
	}).(GetMysqlConfigurationsConfigurationInitVariableArrayOutput)
}

// The OCID of the Configuration from which this Configuration is "derived". This is entirely a metadata relationship. There is no relation between the values in this Configuration and its parent.
func (o GetMysqlConfigurationsConfigurationOutput) ParentConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfiguration) string { return v.ParentConfigurationId }).(pulumi.StringOutput)
}

// The requested Shape name.
func (o GetMysqlConfigurationsConfigurationOutput) ShapeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfiguration) string { return v.ShapeName }).(pulumi.StringOutput)
}

// Configuration Lifecycle State
func (o GetMysqlConfigurationsConfigurationOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfiguration) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetMysqlConfigurationsConfigurationOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfiguration) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The date and time the Configuration was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o GetMysqlConfigurationsConfigurationOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfiguration) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the Configuration was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o GetMysqlConfigurationsConfigurationOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfiguration) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The requested Configuration types.
func (o GetMysqlConfigurationsConfigurationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfiguration) string { return v.Type }).(pulumi.StringOutput)
}

// User-defined service variables.
func (o GetMysqlConfigurationsConfigurationOutput) Variables() GetMysqlConfigurationsConfigurationVariableArrayOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfiguration) []GetMysqlConfigurationsConfigurationVariable {
		return v.Variables
	}).(GetMysqlConfigurationsConfigurationVariableArrayOutput)
}

type GetMysqlConfigurationsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlConfigurationsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlConfigurationsConfiguration)(nil)).Elem()
}

func (o GetMysqlConfigurationsConfigurationArrayOutput) ToGetMysqlConfigurationsConfigurationArrayOutput() GetMysqlConfigurationsConfigurationArrayOutput {
	return o
}

func (o GetMysqlConfigurationsConfigurationArrayOutput) ToGetMysqlConfigurationsConfigurationArrayOutputWithContext(ctx context.Context) GetMysqlConfigurationsConfigurationArrayOutput {
	return o
}

func (o GetMysqlConfigurationsConfigurationArrayOutput) Index(i pulumi.IntInput) GetMysqlConfigurationsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlConfigurationsConfiguration {
		return vs[0].([]GetMysqlConfigurationsConfiguration)[vs[1].(int)]
	}).(GetMysqlConfigurationsConfigurationOutput)
}

type GetMysqlConfigurationsConfigurationInitVariable struct {
	// Represents the MySQL server system variable lowerCaseTableNames (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_lower_case_table_names).
	LowerCaseTableNames string `pulumi:"lowerCaseTableNames"`
}

// GetMysqlConfigurationsConfigurationInitVariableInput is an input type that accepts GetMysqlConfigurationsConfigurationInitVariableArgs and GetMysqlConfigurationsConfigurationInitVariableOutput values.
// You can construct a concrete instance of `GetMysqlConfigurationsConfigurationInitVariableInput` via:
//
//	GetMysqlConfigurationsConfigurationInitVariableArgs{...}
type GetMysqlConfigurationsConfigurationInitVariableInput interface {
	pulumi.Input

	ToGetMysqlConfigurationsConfigurationInitVariableOutput() GetMysqlConfigurationsConfigurationInitVariableOutput
	ToGetMysqlConfigurationsConfigurationInitVariableOutputWithContext(context.Context) GetMysqlConfigurationsConfigurationInitVariableOutput
}

type GetMysqlConfigurationsConfigurationInitVariableArgs struct {
	// Represents the MySQL server system variable lowerCaseTableNames (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_lower_case_table_names).
	LowerCaseTableNames pulumi.StringInput `pulumi:"lowerCaseTableNames"`
}

func (GetMysqlConfigurationsConfigurationInitVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlConfigurationsConfigurationInitVariable)(nil)).Elem()
}

func (i GetMysqlConfigurationsConfigurationInitVariableArgs) ToGetMysqlConfigurationsConfigurationInitVariableOutput() GetMysqlConfigurationsConfigurationInitVariableOutput {
	return i.ToGetMysqlConfigurationsConfigurationInitVariableOutputWithContext(context.Background())
}

func (i GetMysqlConfigurationsConfigurationInitVariableArgs) ToGetMysqlConfigurationsConfigurationInitVariableOutputWithContext(ctx context.Context) GetMysqlConfigurationsConfigurationInitVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlConfigurationsConfigurationInitVariableOutput)
}

// GetMysqlConfigurationsConfigurationInitVariableArrayInput is an input type that accepts GetMysqlConfigurationsConfigurationInitVariableArray and GetMysqlConfigurationsConfigurationInitVariableArrayOutput values.
// You can construct a concrete instance of `GetMysqlConfigurationsConfigurationInitVariableArrayInput` via:
//
//	GetMysqlConfigurationsConfigurationInitVariableArray{ GetMysqlConfigurationsConfigurationInitVariableArgs{...} }
type GetMysqlConfigurationsConfigurationInitVariableArrayInput interface {
	pulumi.Input

	ToGetMysqlConfigurationsConfigurationInitVariableArrayOutput() GetMysqlConfigurationsConfigurationInitVariableArrayOutput
	ToGetMysqlConfigurationsConfigurationInitVariableArrayOutputWithContext(context.Context) GetMysqlConfigurationsConfigurationInitVariableArrayOutput
}

type GetMysqlConfigurationsConfigurationInitVariableArray []GetMysqlConfigurationsConfigurationInitVariableInput

func (GetMysqlConfigurationsConfigurationInitVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlConfigurationsConfigurationInitVariable)(nil)).Elem()
}

func (i GetMysqlConfigurationsConfigurationInitVariableArray) ToGetMysqlConfigurationsConfigurationInitVariableArrayOutput() GetMysqlConfigurationsConfigurationInitVariableArrayOutput {
	return i.ToGetMysqlConfigurationsConfigurationInitVariableArrayOutputWithContext(context.Background())
}

func (i GetMysqlConfigurationsConfigurationInitVariableArray) ToGetMysqlConfigurationsConfigurationInitVariableArrayOutputWithContext(ctx context.Context) GetMysqlConfigurationsConfigurationInitVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlConfigurationsConfigurationInitVariableArrayOutput)
}

type GetMysqlConfigurationsConfigurationInitVariableOutput struct{ *pulumi.OutputState }

func (GetMysqlConfigurationsConfigurationInitVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlConfigurationsConfigurationInitVariable)(nil)).Elem()
}

func (o GetMysqlConfigurationsConfigurationInitVariableOutput) ToGetMysqlConfigurationsConfigurationInitVariableOutput() GetMysqlConfigurationsConfigurationInitVariableOutput {
	return o
}

func (o GetMysqlConfigurationsConfigurationInitVariableOutput) ToGetMysqlConfigurationsConfigurationInitVariableOutputWithContext(ctx context.Context) GetMysqlConfigurationsConfigurationInitVariableOutput {
	return o
}

// Represents the MySQL server system variable lowerCaseTableNames (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_lower_case_table_names).
func (o GetMysqlConfigurationsConfigurationInitVariableOutput) LowerCaseTableNames() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationInitVariable) string { return v.LowerCaseTableNames }).(pulumi.StringOutput)
}

type GetMysqlConfigurationsConfigurationInitVariableArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlConfigurationsConfigurationInitVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlConfigurationsConfigurationInitVariable)(nil)).Elem()
}

func (o GetMysqlConfigurationsConfigurationInitVariableArrayOutput) ToGetMysqlConfigurationsConfigurationInitVariableArrayOutput() GetMysqlConfigurationsConfigurationInitVariableArrayOutput {
	return o
}

func (o GetMysqlConfigurationsConfigurationInitVariableArrayOutput) ToGetMysqlConfigurationsConfigurationInitVariableArrayOutputWithContext(ctx context.Context) GetMysqlConfigurationsConfigurationInitVariableArrayOutput {
	return o
}

func (o GetMysqlConfigurationsConfigurationInitVariableArrayOutput) Index(i pulumi.IntInput) GetMysqlConfigurationsConfigurationInitVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlConfigurationsConfigurationInitVariable {
		return vs[0].([]GetMysqlConfigurationsConfigurationInitVariable)[vs[1].(int)]
	}).(GetMysqlConfigurationsConfigurationInitVariableOutput)
}

type GetMysqlConfigurationsConfigurationVariable struct {
	// auto_increment_increment and autoIncrementOffset are intended for use with circular (source-to-source) replication, and can be used to control the operation of AUTO_INCREMENT columns. Both variables have global and session values, and each can assume an integer value between 1 and 65,535 inclusive.
	AutoIncrementIncrement int `pulumi:"autoIncrementIncrement"`
	// This variable has a default value of 1. If it is left with its default value, and Group Replication is started on the server in multi-primary mode, it is changed to the server ID.
	AutoIncrementOffset int `pulumi:"autoIncrementOffset"`
	// ("autocommit")
	Autocommit bool `pulumi:"autocommit"`
	// If enabled, the server stores all temporary tables on disk rather than in memory.
	BigTables bool `pulumi:"bigTables"`
	// Sets the binary log expiration period in seconds. binlogExpireLogsSeconds corresponds to the MySQL binary logging system variable [binlogExpireLogsSeconds](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds).
	BinlogExpireLogsSeconds int `pulumi:"binlogExpireLogsSeconds"`
	// Controls how many microseconds the binary log commit waits before synchronizing the binary log file to disk. There is no delay by default. Setting this variable to a microsecond delay enables more transactions to be synchronized together to disk at once, reducing the overall time to commit a group of transactions because the larger groups required fewer time units per group.
	BinlogGroupCommitSyncDelay int `pulumi:"binlogGroupCommitSyncDelay"`
	// The maximum number of transactions to wait for before aborting the current delay as specified by binlog_group_commit_sync_delay. If binlogGroupCommitSyncDelay is set to 0, then this option has no effect.
	BinlogGroupCommitSyncNoDelayCount int `pulumi:"binlogGroupCommitSyncNoDelayCount"`
	// Configures the amount of table metadata added to the binary log when using row-based logging. binlogRowMetadata corresponds to the MySQL binary logging system variable [binlogRowMetadata](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_metadata).
	BinlogRowMetadata string `pulumi:"binlogRowMetadata"`
	// When set to PARTIAL_JSON, this enables use of a space-efficient binary log format for updates that modify only a small portion of a JSON document. binlogRowValueOptions corresponds to the MySQL binary logging system variable [binlogRowValueOptions](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_value_options).
	BinlogRowValueOptions string `pulumi:"binlogRowValueOptions"`
	// Enables compression for transactions that are written to binary log files on this server. binlogTransactionCompression corresponds to the MySQL binary logging system variable [binlogTransactionCompression](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_transaction_compression).
	BinlogTransactionCompression bool `pulumi:"binlogTransactionCompression"`
	// This variable controls the block encryption mode for block-based algorithms such as AES. It affects encryption for AES_ENCRYPT() and AES_DECRYPT(). blockEncryptionMode takes a value in aes-keylen-mode format, where keylen is the key length in bits and mode is the encryption mode. The value is not case-sensitive. Permitted keylen values are 128, 192, and 256. Permitted mode values are ECB, CBC, CFB1, CFB8, CFB128, and OFB.
	BlockEncryptionMode string `pulumi:"blockEncryptionMode"`
	// The server's default character set. If you set this variable, you should also set collationServer to specify the collation for the character set.
	CharacterSetServer string `pulumi:"characterSetServer"`
	// The server's default collation.
	CollationServer string `pulumi:"collationServer"`
	// ("completionType")
	CompletionType string `pulumi:"completionType"`
	// The number of seconds that the mysqld server waits for a connect packet before responding with Bad handshake.
	ConnectTimeout int `pulumi:"connectTimeout"`
	// Set the chunking size for updates to the global memory usage counter Global_connection_memory.
	ConnectionMemoryChunkSize int `pulumi:"connectionMemoryChunkSize"`
	// Set the maximum amount of memory that can be used by a single user connection.
	ConnectionMemoryLimit string `pulumi:"connectionMemoryLimit"`
	// ("cteMaxRecursionDepth")
	CteMaxRecursionDepth string `pulumi:"cteMaxRecursionDepth"`
	// The default authentication plugin. This must be a plugin that uses internal credentials storage, so these values are permitted: mysql_native_password, sha256_password, caching_sha2_password.
	DefaultAuthenticationPlugin string `pulumi:"defaultAuthenticationPlugin"`
	// This variable determines the default output format used by EXPLAIN in the absence of a FORMAT option when displaying a query execution plan.
	ExplainFormat string `pulumi:"explainFormat"`
	// This system variable determines whether the server enables certain nonstandard behaviors for default values and NULL-value handling in TIMESTAMP columns. By default, explicitDefaultsForTimestamp is enabled, which disables the nonstandard behaviors. Disabling explicitDefaultsForTimestamp results in a warning.
	ExplicitDefaultsForTimestamp bool `pulumi:"explicitDefaultsForTimestamp"`
	// ("foreignKeyChecks")
	ForeignKeyChecks bool `pulumi:"foreignKeyChecks"`
	// ("generatedRandomPasswordLength") DEPRECATED -- variable should not be settable and will be ignored
	//
	// Deprecated: The 'generated_random_password_length' field has been deprecated and may be removed in a future version. Do not use this field.
	GeneratedRandomPasswordLength int `pulumi:"generatedRandomPasswordLength"`
	// Set the total amount of memory that can be used by all user connections.
	GlobalConnectionMemoryLimit string `pulumi:"globalConnectionMemoryLimit"`
	// Determines whether the MySQL server calculates Global_connection_memory.
	GlobalConnectionMemoryTracking bool `pulumi:"globalConnectionMemoryTracking"`
	// Specifies the maximum permitted result length in bytes for the GROUP_CONCAT() function.
	GroupConcatMaxLen string `pulumi:"groupConcatMaxLen"`
	// * EVENTUAL: Both RO and RW transactions do not wait for preceding transactions to be applied before executing. A RW transaction does not wait for other members to apply a transaction. This means that a transaction could be externalized on one member before the others. This also means that in the event of a primary failover, the new primary can accept new RO and RW transactions before the previous primary transactions are all applied. RO transactions could result in outdated values, RW transactions could result in a rollback due to conflicts.
	// * BEFORE_ON_PRIMARY_FAILOVER: New RO or RW transactions with a newly elected primary that is applying backlog from the old primary are held (not applied) until any backlog has been applied. This ensures that when a primary failover happens, intentionally or not, clients always see the latest value on the primary. This guarantees consistency, but means that clients must be able to handle the delay in the event that a backlog is being applied. Usually this delay should be minimal, but does depend on the size of the backlog.
	// * BEFORE: A RW transaction waits for all preceding transactions to complete before being applied. A RO transaction waits for all preceding transactions to complete before being executed. This ensures that this transaction reads the latest value by only affecting the latency of the transaction. This reduces the overhead of synchronization on every RW transaction, by ensuring synchronization is used only on RO transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
	// * AFTER: A RW transaction waits until its changes have been applied to all of the other members. This value has no effect on RO transactions. This mode ensures that when a transaction is committed on the local member, any subsequent transaction reads the written value or a more recent value on any group member. Use this mode with a group that is used for predominantly RO operations to ensure that applied RW transactions are applied everywhere once they commit. This could be used by your application to ensure that subsequent reads fetch the latest data which includes the latest writes. This reduces the overhead of synchronization on every RO transaction, by ensuring synchronization is used only on RW transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
	// * BEFORE_AND_AFTER: A RW transaction waits for 1) all preceding transactions to complete before being applied and 2) until its changes have been applied on other members. A RO transaction waits for all preceding transactions to complete before execution takes place. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
	GroupReplicationConsistency string `pulumi:"groupReplicationConsistency"`
	// ("informationSchemaStatsExpiry")
	InformationSchemaStatsExpiry int `pulumi:"informationSchemaStatsExpiry"`
	// Whether the InnoDB adaptive hash index is enabled or disabled. It may be desirable, depending on your workload, to dynamically enable or disable adaptive hash indexing to improve query performance. Because the adaptive hash index may not be useful for all workloads, conduct benchmarks with it both enabled and disabled, using realistic workloads.
	InnodbAdaptiveHashIndex bool `pulumi:"innodbAdaptiveHashIndex"`
	// The lock mode to use for generating auto-increment values. Permissible values are 0, 1, or 2, for traditional, consecutive, or interleaved, respectively.
	InnodbAutoincLockMode int `pulumi:"innodbAutoincLockMode"`
	// Specifies the percentage of the most recently used pages for each buffer pool to read out and dump.
	InnodbBufferPoolDumpPct int `pulumi:"innodbBufferPoolDumpPct"`
	// ("innodbBufferPoolInstances")
	InnodbBufferPoolInstances int `pulumi:"innodbBufferPoolInstances"`
	// The size (in bytes) of the buffer pool, that is, the memory area where InnoDB caches table and index data.
	InnodbBufferPoolSize string `pulumi:"innodbBufferPoolSize"`
	// Whether InnoDB performs change buffering, an optimization that delays write operations to secondary indexes so that the I/O operations can be performed sequentially. Permitted values are described in the following table. Values may also be specified numerically.
	InnodbChangeBuffering string `pulumi:"innodbChangeBuffering"`
	// innodbDdlBufferSize corresponds to the MySQL system variable [innodbDdlBufferSize] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_ddl_buffer_size)
	InnodbDdlBufferSize string `pulumi:"innodbDdlBufferSize"`
	// innodbDdlThreads corresponds to the MySQL system variable [innodbDdlThreads] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_ddl_threads)
	InnodbDdlThreads int `pulumi:"innodbDdlThreads"`
	// ("innodbFtEnableStopword")
	InnodbFtEnableStopword bool `pulumi:"innodbFtEnableStopword"`
	// ("innodbFtMaxTokenSize")
	InnodbFtMaxTokenSize int `pulumi:"innodbFtMaxTokenSize"`
	// ("innodbFtMinTokenSize")
	InnodbFtMinTokenSize int `pulumi:"innodbFtMinTokenSize"`
	// ("innodbFtNumWordOptimize")
	InnodbFtNumWordOptimize int `pulumi:"innodbFtNumWordOptimize"`
	// ("innodbFtResultCacheLimit")
	InnodbFtResultCacheLimit string `pulumi:"innodbFtResultCacheLimit"`
	// ("innodbFtServerStopwordTable")
	InnodbFtServerStopwordTable string `pulumi:"innodbFtServerStopwordTable"`
	// ("innodbLockWaitTimeout")
	InnodbLockWaitTimeout int `pulumi:"innodbLockWaitTimeout"`
	// Enables dedicated log writer threads for writing redo log records from the log buffer to the system buffers and flushing the system buffers to the redo log files.
	InnodbLogWriterThreads bool `pulumi:"innodbLogWriterThreads"`
	// The desired maximum purge lag in terms of transactions.
	InnodbMaxPurgeLag string `pulumi:"innodbMaxPurgeLag"`
	// The maximum delay in microseconds for the delay imposed when the innodbMaxPurgeLag threshold is exceeded.
	InnodbMaxPurgeLagDelay int `pulumi:"innodbMaxPurgeLagDelay"`
	// Enables the NUMA interleave memory policy for allocation of the InnoDB buffer pool. When innodbNumaInterleave is enabled, the NUMA memory policy is set to MPOL_INTERLEAVE for the mysqld process. After the InnoDB buffer pool is allocated, the NUMA memory policy is set back to MPOL_DEFAULT. For the innodbNumaInterleave option to be available, MySQL must be compiled on a NUMA-enabled Linux system.
	InnodbNumaInterleave bool `pulumi:"innodbNumaInterleave"`
	// Specifies an upper limit in bytes on the size of the temporary log files used during online DDL operations for InnoDB tables. There is one such log file for each index being created or table being altered. This log file stores data inserted, updated, or deleted in the table during the DDL operation.
	InnodbOnlineAlterLogMaxSize string `pulumi:"innodbOnlineAlterLogMaxSize"`
	// Defines the amount of disk space occupied by redo log files. innodbRedoLogCapacity supercedes the innodbLogFilesInGroup and innodbLogFileSize variables, which are both ignored if innodbRedoLogCapacity is defined. If innodbRedoLogCapacity is not defined, and if neither innodbLogFileSize or innodbLogFilesInGroup are defined, then the default innodbRedoLogCapacity value is used.
	InnodbRedoLogCapacity string `pulumi:"innodbRedoLogCapacity"`
	// InnoDB rolls back only the last statement on a transaction timeout by default. If --innodb-rollback-on-timeout is specified, a transaction timeout causes InnoDB to abort and roll back the entire transaction.
	InnodbRollbackOnTimeout bool `pulumi:"innodbRollbackOnTimeout"`
	// This variable defines:
	// * The sort buffer size for online DDL operations that create or rebuild secondary indexes. However, as of MySQL 8.0.27, this responsibility is subsumed by the innodbDdlBufferSize variable.
	// * The amount by which the temporary log file is extended when recording concurrent DML during an online DDL operation, and the size of the temporary log file read buffer and write buffer.
	InnodbSortBufferSize int `pulumi:"innodbSortBufferSize"`
	// The number of index pages to sample when estimating cardinality and other statistics for an indexed column, such as those calculated by ANALYZE TABLE.
	InnodbStatsPersistentSamplePages string `pulumi:"innodbStatsPersistentSamplePages"`
	// The number of index pages to sample when estimating cardinality and other statistics for an indexed column, such as those calculated by [ANALYZE TABLE](https://dev.mysql.com/doc/refman/8.0/en/analyze-table.html).
	InnodbStatsTransientSamplePages string `pulumi:"innodbStatsTransientSamplePages"`
	// When you enable innodbStrictMode, the InnoDB storage engine returns errors instead of warnings for invalid or incompatible table options.
	InnodbStrictMode bool `pulumi:"innodbStrictMode"`
	// When enabled, undo tablespaces that exceed the threshold value defined by innodbMaxUndoLogSize are marked for truncation. Only undo tablespaces can be truncated. Truncating undo logs that reside in the system tablespace is not supported. For truncation to occur, there must be at least two undo tablespaces.
	InnodbUndoLogTruncate bool `pulumi:"innodbUndoLogTruncate"`
	// The number of seconds the server waits for activity on an interactive connection before closing it.
	InteractiveTimeout int `pulumi:"interactiveTimeout"`
	// The minimum size of the buffer that is used for plain index scans, range index scans, and joins that do not use indexes and thus perform full table scans. In MySQL 8.0.18 and later, this variable also controls the amount of memory used for hash joins. Normally, the best way to get fast joins is to add indexes. Increase the value of joinBufferSize to get a faster full join when adding indexes is not possible. One join buffer is allocated for each full join between two tables. For a complex join between several tables for which indexes are not used, multiple join buffers might be necessary.
	JoinBufferSize string `pulumi:"joinBufferSize"`
	// This variable controls server-side LOCAL capability for LOAD DATA statements. Depending on the localInfile setting, the server refuses or permits local data loading by clients that have LOCAL enabled on the client side.
	LocalInfile bool `pulumi:"localInfile"`
	// If a query takes longer than this many seconds, the server increments the Slow_queries status variable. If the slow query log is enabled, the query is logged to the slow query log file. This value is measured in real time, not CPU time, so a query that is under the threshold on a lightly loaded system might be above the threshold on a heavily loaded one.
	LongQueryTime int `pulumi:"longQueryTime"`
	// ("mandatoryRoles")
	MandatoryRoles string `pulumi:"mandatoryRoles"`
	// The maximum size of one packet or any generated/intermediate string.
	MaxAllowedPacket int `pulumi:"maxAllowedPacket"`
	// Sets the size of the transaction cache.
	MaxBinlogCacheSize string `pulumi:"maxBinlogCacheSize"`
	// ("maxConnectErrors")
	MaxConnectErrors string `pulumi:"maxConnectErrors"`
	// ("maxConnections")
	MaxConnections int `pulumi:"maxConnections"`
	// ("maxExecutionTime")
	MaxExecutionTime string `pulumi:"maxExecutionTime"`
	// This variable sets the maximum size to which user-created MEMORY tables are permitted to grow.
	MaxHeapTableSize string `pulumi:"maxHeapTableSize"`
	// ("maxPreparedStmtCount")
	MaxPreparedStmtCount int `pulumi:"maxPreparedStmtCount"`
	// Limit the assumed maximum number of seeks when looking up rows based on a key. The MySQL optimizer assumes that no more than this number of key seeks are required when searching for matching rows in a table by scanning an index, regardless of the actual cardinality of the index (see Section 15.7.7.22, “SHOW INDEX Statement”). By setting this to a low value (say, 100), you can force MySQL to prefer indexes instead of table scans.
	MaxSeeksForKey string `pulumi:"maxSeeksForKey"`
	// The maximum number of simultaneous connections permitted to any given MySQL user account. A value of 0 (the default) means “no limit.” This variable has a global value that can be set at server startup or runtime. It also has a read-only session value that indicates the effective simultaneous-connection limit that applies to the account associated with the current session.
	MaxUserConnections string `pulumi:"maxUserConnections"`
	// ("mysqlFirewallMode")
	MysqlFirewallMode bool `pulumi:"mysqlFirewallMode"`
	// DEPRECATED -- typo of mysqlx_zstd_default_compression_level. variable will be ignored.
	//
	// Deprecated: The 'mysql_zstd_default_compression_level' field has been deprecated and may be removed in a future version. Do not use this field.
	MysqlZstdDefaultCompressionLevel int `pulumi:"mysqlZstdDefaultCompressionLevel"`
	// The number of seconds X Plugin waits for the first packet to be received from newly connected clients.
	MysqlxConnectTimeout int `pulumi:"mysqlxConnectTimeout"`
	// Set the default compression level for the deflate algorithm. ("mysqlxDeflateDefaultCompressionLevel")
	MysqlxDeflateDefaultCompressionLevel int `pulumi:"mysqlxDeflateDefaultCompressionLevel"`
	// Limit the upper bound of accepted compression levels for the deflate algorithm. ("mysqlxDeflateMaxClientCompressionLevel")
	MysqlxDeflateMaxClientCompressionLevel int `pulumi:"mysqlxDeflateMaxClientCompressionLevel"`
	// ("mysqlxDocumentIdUniquePrefix") DEPRECATED -- variable should not be settable and will be ignored
	//
	// Deprecated: The 'mysqlx_document_id_unique_prefix' field has been deprecated and may be removed in a future version. Do not use this field.
	MysqlxDocumentIdUniquePrefix int `pulumi:"mysqlxDocumentIdUniquePrefix"`
	// ("mysqlxEnableHelloNotice") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxEnableHelloNotice bool `pulumi:"mysqlxEnableHelloNotice"`
	// ("mysqlxIdleWorkerThreadTimeout") DEPRECATED -- variable should not be settable and will be ignored
	//
	// Deprecated: The 'mysqlx_idle_worker_thread_timeout' field has been deprecated and may be removed in a future version. Do not use this field.
	MysqlxIdleWorkerThreadTimeout int `pulumi:"mysqlxIdleWorkerThreadTimeout"`
	// The number of seconds to wait for interactive clients to timeout.
	MysqlxInteractiveTimeout int `pulumi:"mysqlxInteractiveTimeout"`
	// Set the default compression level for the lz4 algorithm. ("mysqlxLz4DefaultCompressionLevel")
	MysqlxLz4defaultCompressionLevel int `pulumi:"mysqlxLz4defaultCompressionLevel"`
	// Limit the upper bound of accepted compression levels for the lz4 algorithm. ("mysqlxLz4MaxClientCompressionLevel")
	MysqlxLz4maxClientCompressionLevel int `pulumi:"mysqlxLz4maxClientCompressionLevel"`
	// The maximum size of network packets that can be received by X Plugin.
	MysqlxMaxAllowedPacket int `pulumi:"mysqlxMaxAllowedPacket"`
	// ("mysqlxMinWorkerThreads") DEPRECATED -- variable should not be settable and will be ignored
	//
	// Deprecated: The 'mysqlx_min_worker_threads' field has been deprecated and may be removed in a future version. Do not use this field.
	MysqlxMinWorkerThreads int `pulumi:"mysqlxMinWorkerThreads"`
	// The number of seconds that X Plugin waits for blocking read operations to complete. After this time, if the read operation is not successful, X Plugin closes the connection and returns a warning notice with the error code ER_IO_READ_ERROR to the client application.
	MysqlxReadTimeout int `pulumi:"mysqlxReadTimeout"`
	// The number of seconds that X Plugin waits for activity on a connection.
	MysqlxWaitTimeout int `pulumi:"mysqlxWaitTimeout"`
	// The number of seconds that X Plugin waits for blocking write operations to complete. After this time, if the write operation is not successful, X Plugin closes the connection.
	MysqlxWriteTimeout int `pulumi:"mysqlxWriteTimeout"`
	// Set the default compression level for the zstd algorithm. ("mysqlxZstdDefaultCompressionLevel")
	MysqlxZstdDefaultCompressionLevel int `pulumi:"mysqlxZstdDefaultCompressionLevel"`
	// Limit the upper bound of accepted compression levels for the zstd algorithm. ("mysqlxZstdMaxClientCompressionLevel")
	MysqlxZstdMaxClientCompressionLevel int `pulumi:"mysqlxZstdMaxClientCompressionLevel"`
	// The number of seconds to wait for more data from a connection before aborting the read.
	NetReadTimeout int `pulumi:"netReadTimeout"`
	// The number of seconds to wait for a block to be written to a connection before aborting the write.
	NetWriteTimeout int `pulumi:"netWriteTimeout"`
	// The optimizerSwitch system variable enables control over optimizer behavior. The value of this variable is a set of flags, each of which has a value of on or off to indicate whether the corresponding optimizer behavior is enabled or disabled. This variable has global and session values and can be changed at runtime. The global default can be set at server startup.
	OptimizerSwitch string `pulumi:"optimizerSwitch"`
	// ("parserMaxMemSize")
	ParserMaxMemSize string `pulumi:"parserMaxMemSize"`
	// ("queryAllocBlockSize") DEPRECATED -- variable should not be settable and will be ignored
	//
	// Deprecated: The 'query_alloc_block_size' field has been deprecated and may be removed in a future version. Do not use this field.
	QueryAllocBlockSize string `pulumi:"queryAllocBlockSize"`
	// ("queryPreallocSize") DEPRECATED -- variable should not be settable and will be ignored
	QueryPreallocSize string `pulumi:"queryPreallocSize"`
	// The limit on memory consumption for the range optimizer. A value of 0 means “no limit.” If an execution plan considered by the optimizer uses the range access method but the optimizer estimates that the amount of memory needed for this method would exceed the limit, it abandons the plan and considers other plans.
	//
	// Deprecated: The 'query_prealloc_size' field has been deprecated and may be removed in a future version. Do not use this field.
	RangeOptimizerMaxMemSize string `pulumi:"rangeOptimizerMaxMemSize"`
	// regexpTimeLimit corresponds to the MySQL system variable [regexpTimeLimit] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_regexp_time_limit)
	RegexpTimeLimit int `pulumi:"regexpTimeLimit"`
	// The maximum amount of space to use for all relay logs.
	RelayLogSpaceLimit string `pulumi:"relayLogSpaceLimit"`
	// Specifies the number of seconds to wait for more data or a heartbeat signal from the source before the replica considers the connection broken, aborts the read, and tries to reconnect. Setting this variable has no immediate effect. The state of the variable applies on all subsequent START REPLICA commands.
	ReplicaNetTimeout int `pulumi:"replicaNetTimeout"`
	// Beginning with MySQL 8.0.26, slaveParallelWorkers is deprecated, and you should use replicaParallelWorkers instead. (Prior to MySQL 8.0.26, you must use slaveParallelWorkers to set the number of applier threads.)
	ReplicaParallelWorkers int `pulumi:"replicaParallelWorkers"`
	// From MySQL 8.0.26, use replicaTypeConversions in place of slave_type_conversions, which is deprecated from that release. In releases before MySQL 8.0.26, use slave_type_conversions.
	ReplicaTypeConversions string `pulumi:"replicaTypeConversions"`
	// Whether client connections to the server are required to use some form of secure transport. When this variable is enabled, the server permits only TCP/IP connections encrypted using TLS/SSL, or connections that use a socket file or shared memory. The server rejects nonsecure connection attempts, which fail with an ER_SECURE_TRANSPORT_REQUIRED error.
	RequireSecureTransport bool `pulumi:"requireSecureTransport"`
	// Whether to resolve host names when checking client connections. If this variable is OFF, mysqld resolves host names when checking client connections. If it is ON, mysqld uses only IP numbers; in this case, all Host column values in the grant tables must be IP addresses. See Section 7.1.12.3, “DNS Lookups and the Host Cache”.
	SkipNameResolve bool `pulumi:"skipNameResolve"`
	// Each session that must perform a sort allocates a buffer of this size.
	SortBufferSize string `pulumi:"sortBufferSize"`
	// Whether GIPK mode is in effect, in which case a MySQL replication source server adds a generated invisible primary key to any InnoDB table that is created without one.
	SqlGenerateInvisiblePrimaryKey bool `pulumi:"sqlGenerateInvisiblePrimaryKey"`
	// ("sqlMode")
	SqlMode string `pulumi:"sqlMode"`
	// ("sqlRequirePrimaryKey")
	SqlRequirePrimaryKey bool `pulumi:"sqlRequirePrimaryKey"`
	// ("sqlWarnings")
	SqlWarnings bool `pulumi:"sqlWarnings"`
	// The number of table definitions that can be stored in the table definition cache. If you use a large number of tables, you can create a large table definition cache to speed up opening of tables. The table definition cache takes less space and does not use file descriptors, unlike the normal table cache.
	TableDefinitionCache int `pulumi:"tableDefinitionCache"`
	// The number of open tables for all threads. Increasing this value increases the number of file descriptors that mysqld requires.
	TableOpenCache int `pulumi:"tableOpenCache"`
	// Defines the maximum amount of memory that can be occupied by the TempTable storage engine before it starts storing data on disk. The default value is 1073741824 bytes (1GiB). For more information, see Section 10.4.4, “Internal Temporary Table Use in MySQL”.
	TemptableMaxRam string `pulumi:"temptableMaxRam"`
	// Controls whether the thread pool uses dedicated listener threads. If enabled, a listener thread in each thread group is dedicated to the task of listening for network events from clients, ensuring that the maximum number of query worker threads is no more than the value specified by threadPoolMaxTransactionsLimit. threadPoolDedicatedListeners corresponds to the MySQL Database Service-specific system variable thread_pool_dedicated_listeners.
	ThreadPoolDedicatedListeners bool `pulumi:"threadPoolDedicatedListeners"`
	// Limits the maximum number of open transactions to the defined value. The default value is 0, which enforces no limit. threadPoolMaxTransactionsLimit corresponds to the MySQL Database Service-specific system variable thread_pool_max_transactions_limit.
	ThreadPoolMaxTransactionsLimit int `pulumi:"threadPoolMaxTransactionsLimit"`
	// The maximum number of query threads permitted in a thread group. The maximum value is 4096, but if threadPoolMaxTransactionsLimit is set, threadPoolQueryThreadsPerGroup must not exceed that value. The default value of 1 means there is one active query thread in each thread group, which works well for many loads. When you are using the high concurrency thread pool algorithm (thread_pool_algorithm = 1), consider increasing the value if you experience slower response times due to long-running transactions.
	ThreadPoolQueryThreadsPerGroup int `pulumi:"threadPoolQueryThreadsPerGroup"`
	// The number of thread groups in the thread pool. This is the most important parameter controlling thread pool performance. It affects how many statements can execute simultaneously. If a value outside the range of permissible values is specified, the thread pool plugin does not load and the server writes a message to the error log.
	ThreadPoolSize int `pulumi:"threadPoolSize"`
	// The delay period before executing a new transaction, in milliseconds. The maximum value is 300000 (5 minutes). A transaction delay can be used in cases where parallel transactions affect the performance of other operations due to resource contention. For example, if parallel transactions affect index creation or an online buffer pool resizing operation, you can configure a transaction delay to reduce resource contention while those operations are running.
	ThreadPoolTransactionDelay int `pulumi:"threadPoolTransactionDelay"`
	// Initializes the time zone for each client that connects.
	TimeZone string `pulumi:"timeZone"`
	// The maximum size of internal in-memory temporary tables. This variable does not apply to user-created MEMORY tables.
	TmpTableSize string `pulumi:"tmpTableSize"`
	// ("transactionIsolation")
	TransactionIsolation string `pulumi:"transactionIsolation"`
	// The number of seconds the server waits for activity on a noninteractive connection before closing it.
	WaitTimeout int `pulumi:"waitTimeout"`
}

// GetMysqlConfigurationsConfigurationVariableInput is an input type that accepts GetMysqlConfigurationsConfigurationVariableArgs and GetMysqlConfigurationsConfigurationVariableOutput values.
// You can construct a concrete instance of `GetMysqlConfigurationsConfigurationVariableInput` via:
//
//	GetMysqlConfigurationsConfigurationVariableArgs{...}
type GetMysqlConfigurationsConfigurationVariableInput interface {
	pulumi.Input

	ToGetMysqlConfigurationsConfigurationVariableOutput() GetMysqlConfigurationsConfigurationVariableOutput
	ToGetMysqlConfigurationsConfigurationVariableOutputWithContext(context.Context) GetMysqlConfigurationsConfigurationVariableOutput
}

type GetMysqlConfigurationsConfigurationVariableArgs struct {
	// auto_increment_increment and autoIncrementOffset are intended for use with circular (source-to-source) replication, and can be used to control the operation of AUTO_INCREMENT columns. Both variables have global and session values, and each can assume an integer value between 1 and 65,535 inclusive.
	AutoIncrementIncrement pulumi.IntInput `pulumi:"autoIncrementIncrement"`
	// This variable has a default value of 1. If it is left with its default value, and Group Replication is started on the server in multi-primary mode, it is changed to the server ID.
	AutoIncrementOffset pulumi.IntInput `pulumi:"autoIncrementOffset"`
	// ("autocommit")
	Autocommit pulumi.BoolInput `pulumi:"autocommit"`
	// If enabled, the server stores all temporary tables on disk rather than in memory.
	BigTables pulumi.BoolInput `pulumi:"bigTables"`
	// Sets the binary log expiration period in seconds. binlogExpireLogsSeconds corresponds to the MySQL binary logging system variable [binlogExpireLogsSeconds](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds).
	BinlogExpireLogsSeconds pulumi.IntInput `pulumi:"binlogExpireLogsSeconds"`
	// Controls how many microseconds the binary log commit waits before synchronizing the binary log file to disk. There is no delay by default. Setting this variable to a microsecond delay enables more transactions to be synchronized together to disk at once, reducing the overall time to commit a group of transactions because the larger groups required fewer time units per group.
	BinlogGroupCommitSyncDelay pulumi.IntInput `pulumi:"binlogGroupCommitSyncDelay"`
	// The maximum number of transactions to wait for before aborting the current delay as specified by binlog_group_commit_sync_delay. If binlogGroupCommitSyncDelay is set to 0, then this option has no effect.
	BinlogGroupCommitSyncNoDelayCount pulumi.IntInput `pulumi:"binlogGroupCommitSyncNoDelayCount"`
	// Configures the amount of table metadata added to the binary log when using row-based logging. binlogRowMetadata corresponds to the MySQL binary logging system variable [binlogRowMetadata](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_metadata).
	BinlogRowMetadata pulumi.StringInput `pulumi:"binlogRowMetadata"`
	// When set to PARTIAL_JSON, this enables use of a space-efficient binary log format for updates that modify only a small portion of a JSON document. binlogRowValueOptions corresponds to the MySQL binary logging system variable [binlogRowValueOptions](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_value_options).
	BinlogRowValueOptions pulumi.StringInput `pulumi:"binlogRowValueOptions"`
	// Enables compression for transactions that are written to binary log files on this server. binlogTransactionCompression corresponds to the MySQL binary logging system variable [binlogTransactionCompression](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_transaction_compression).
	BinlogTransactionCompression pulumi.BoolInput `pulumi:"binlogTransactionCompression"`
	// This variable controls the block encryption mode for block-based algorithms such as AES. It affects encryption for AES_ENCRYPT() and AES_DECRYPT(). blockEncryptionMode takes a value in aes-keylen-mode format, where keylen is the key length in bits and mode is the encryption mode. The value is not case-sensitive. Permitted keylen values are 128, 192, and 256. Permitted mode values are ECB, CBC, CFB1, CFB8, CFB128, and OFB.
	BlockEncryptionMode pulumi.StringInput `pulumi:"blockEncryptionMode"`
	// The server's default character set. If you set this variable, you should also set collationServer to specify the collation for the character set.
	CharacterSetServer pulumi.StringInput `pulumi:"characterSetServer"`
	// The server's default collation.
	CollationServer pulumi.StringInput `pulumi:"collationServer"`
	// ("completionType")
	CompletionType pulumi.StringInput `pulumi:"completionType"`
	// The number of seconds that the mysqld server waits for a connect packet before responding with Bad handshake.
	ConnectTimeout pulumi.IntInput `pulumi:"connectTimeout"`
	// Set the chunking size for updates to the global memory usage counter Global_connection_memory.
	ConnectionMemoryChunkSize pulumi.IntInput `pulumi:"connectionMemoryChunkSize"`
	// Set the maximum amount of memory that can be used by a single user connection.
	ConnectionMemoryLimit pulumi.StringInput `pulumi:"connectionMemoryLimit"`
	// ("cteMaxRecursionDepth")
	CteMaxRecursionDepth pulumi.StringInput `pulumi:"cteMaxRecursionDepth"`
	// The default authentication plugin. This must be a plugin that uses internal credentials storage, so these values are permitted: mysql_native_password, sha256_password, caching_sha2_password.
	DefaultAuthenticationPlugin pulumi.StringInput `pulumi:"defaultAuthenticationPlugin"`
	// This variable determines the default output format used by EXPLAIN in the absence of a FORMAT option when displaying a query execution plan.
	ExplainFormat pulumi.StringInput `pulumi:"explainFormat"`
	// This system variable determines whether the server enables certain nonstandard behaviors for default values and NULL-value handling in TIMESTAMP columns. By default, explicitDefaultsForTimestamp is enabled, which disables the nonstandard behaviors. Disabling explicitDefaultsForTimestamp results in a warning.
	ExplicitDefaultsForTimestamp pulumi.BoolInput `pulumi:"explicitDefaultsForTimestamp"`
	// ("foreignKeyChecks")
	ForeignKeyChecks pulumi.BoolInput `pulumi:"foreignKeyChecks"`
	// ("generatedRandomPasswordLength") DEPRECATED -- variable should not be settable and will be ignored
	//
	// Deprecated: The 'generated_random_password_length' field has been deprecated and may be removed in a future version. Do not use this field.
	GeneratedRandomPasswordLength pulumi.IntInput `pulumi:"generatedRandomPasswordLength"`
	// Set the total amount of memory that can be used by all user connections.
	GlobalConnectionMemoryLimit pulumi.StringInput `pulumi:"globalConnectionMemoryLimit"`
	// Determines whether the MySQL server calculates Global_connection_memory.
	GlobalConnectionMemoryTracking pulumi.BoolInput `pulumi:"globalConnectionMemoryTracking"`
	// Specifies the maximum permitted result length in bytes for the GROUP_CONCAT() function.
	GroupConcatMaxLen pulumi.StringInput `pulumi:"groupConcatMaxLen"`
	// * EVENTUAL: Both RO and RW transactions do not wait for preceding transactions to be applied before executing. A RW transaction does not wait for other members to apply a transaction. This means that a transaction could be externalized on one member before the others. This also means that in the event of a primary failover, the new primary can accept new RO and RW transactions before the previous primary transactions are all applied. RO transactions could result in outdated values, RW transactions could result in a rollback due to conflicts.
	// * BEFORE_ON_PRIMARY_FAILOVER: New RO or RW transactions with a newly elected primary that is applying backlog from the old primary are held (not applied) until any backlog has been applied. This ensures that when a primary failover happens, intentionally or not, clients always see the latest value on the primary. This guarantees consistency, but means that clients must be able to handle the delay in the event that a backlog is being applied. Usually this delay should be minimal, but does depend on the size of the backlog.
	// * BEFORE: A RW transaction waits for all preceding transactions to complete before being applied. A RO transaction waits for all preceding transactions to complete before being executed. This ensures that this transaction reads the latest value by only affecting the latency of the transaction. This reduces the overhead of synchronization on every RW transaction, by ensuring synchronization is used only on RO transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
	// * AFTER: A RW transaction waits until its changes have been applied to all of the other members. This value has no effect on RO transactions. This mode ensures that when a transaction is committed on the local member, any subsequent transaction reads the written value or a more recent value on any group member. Use this mode with a group that is used for predominantly RO operations to ensure that applied RW transactions are applied everywhere once they commit. This could be used by your application to ensure that subsequent reads fetch the latest data which includes the latest writes. This reduces the overhead of synchronization on every RO transaction, by ensuring synchronization is used only on RW transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
	// * BEFORE_AND_AFTER: A RW transaction waits for 1) all preceding transactions to complete before being applied and 2) until its changes have been applied on other members. A RO transaction waits for all preceding transactions to complete before execution takes place. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
	GroupReplicationConsistency pulumi.StringInput `pulumi:"groupReplicationConsistency"`
	// ("informationSchemaStatsExpiry")
	InformationSchemaStatsExpiry pulumi.IntInput `pulumi:"informationSchemaStatsExpiry"`
	// Whether the InnoDB adaptive hash index is enabled or disabled. It may be desirable, depending on your workload, to dynamically enable or disable adaptive hash indexing to improve query performance. Because the adaptive hash index may not be useful for all workloads, conduct benchmarks with it both enabled and disabled, using realistic workloads.
	InnodbAdaptiveHashIndex pulumi.BoolInput `pulumi:"innodbAdaptiveHashIndex"`
	// The lock mode to use for generating auto-increment values. Permissible values are 0, 1, or 2, for traditional, consecutive, or interleaved, respectively.
	InnodbAutoincLockMode pulumi.IntInput `pulumi:"innodbAutoincLockMode"`
	// Specifies the percentage of the most recently used pages for each buffer pool to read out and dump.
	InnodbBufferPoolDumpPct pulumi.IntInput `pulumi:"innodbBufferPoolDumpPct"`
	// ("innodbBufferPoolInstances")
	InnodbBufferPoolInstances pulumi.IntInput `pulumi:"innodbBufferPoolInstances"`
	// The size (in bytes) of the buffer pool, that is, the memory area where InnoDB caches table and index data.
	InnodbBufferPoolSize pulumi.StringInput `pulumi:"innodbBufferPoolSize"`
	// Whether InnoDB performs change buffering, an optimization that delays write operations to secondary indexes so that the I/O operations can be performed sequentially. Permitted values are described in the following table. Values may also be specified numerically.
	InnodbChangeBuffering pulumi.StringInput `pulumi:"innodbChangeBuffering"`
	// innodbDdlBufferSize corresponds to the MySQL system variable [innodbDdlBufferSize] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_ddl_buffer_size)
	InnodbDdlBufferSize pulumi.StringInput `pulumi:"innodbDdlBufferSize"`
	// innodbDdlThreads corresponds to the MySQL system variable [innodbDdlThreads] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_ddl_threads)
	InnodbDdlThreads pulumi.IntInput `pulumi:"innodbDdlThreads"`
	// ("innodbFtEnableStopword")
	InnodbFtEnableStopword pulumi.BoolInput `pulumi:"innodbFtEnableStopword"`
	// ("innodbFtMaxTokenSize")
	InnodbFtMaxTokenSize pulumi.IntInput `pulumi:"innodbFtMaxTokenSize"`
	// ("innodbFtMinTokenSize")
	InnodbFtMinTokenSize pulumi.IntInput `pulumi:"innodbFtMinTokenSize"`
	// ("innodbFtNumWordOptimize")
	InnodbFtNumWordOptimize pulumi.IntInput `pulumi:"innodbFtNumWordOptimize"`
	// ("innodbFtResultCacheLimit")
	InnodbFtResultCacheLimit pulumi.StringInput `pulumi:"innodbFtResultCacheLimit"`
	// ("innodbFtServerStopwordTable")
	InnodbFtServerStopwordTable pulumi.StringInput `pulumi:"innodbFtServerStopwordTable"`
	// ("innodbLockWaitTimeout")
	InnodbLockWaitTimeout pulumi.IntInput `pulumi:"innodbLockWaitTimeout"`
	// Enables dedicated log writer threads for writing redo log records from the log buffer to the system buffers and flushing the system buffers to the redo log files.
	InnodbLogWriterThreads pulumi.BoolInput `pulumi:"innodbLogWriterThreads"`
	// The desired maximum purge lag in terms of transactions.
	InnodbMaxPurgeLag pulumi.StringInput `pulumi:"innodbMaxPurgeLag"`
	// The maximum delay in microseconds for the delay imposed when the innodbMaxPurgeLag threshold is exceeded.
	InnodbMaxPurgeLagDelay pulumi.IntInput `pulumi:"innodbMaxPurgeLagDelay"`
	// Enables the NUMA interleave memory policy for allocation of the InnoDB buffer pool. When innodbNumaInterleave is enabled, the NUMA memory policy is set to MPOL_INTERLEAVE for the mysqld process. After the InnoDB buffer pool is allocated, the NUMA memory policy is set back to MPOL_DEFAULT. For the innodbNumaInterleave option to be available, MySQL must be compiled on a NUMA-enabled Linux system.
	InnodbNumaInterleave pulumi.BoolInput `pulumi:"innodbNumaInterleave"`
	// Specifies an upper limit in bytes on the size of the temporary log files used during online DDL operations for InnoDB tables. There is one such log file for each index being created or table being altered. This log file stores data inserted, updated, or deleted in the table during the DDL operation.
	InnodbOnlineAlterLogMaxSize pulumi.StringInput `pulumi:"innodbOnlineAlterLogMaxSize"`
	// Defines the amount of disk space occupied by redo log files. innodbRedoLogCapacity supercedes the innodbLogFilesInGroup and innodbLogFileSize variables, which are both ignored if innodbRedoLogCapacity is defined. If innodbRedoLogCapacity is not defined, and if neither innodbLogFileSize or innodbLogFilesInGroup are defined, then the default innodbRedoLogCapacity value is used.
	InnodbRedoLogCapacity pulumi.StringInput `pulumi:"innodbRedoLogCapacity"`
	// InnoDB rolls back only the last statement on a transaction timeout by default. If --innodb-rollback-on-timeout is specified, a transaction timeout causes InnoDB to abort and roll back the entire transaction.
	InnodbRollbackOnTimeout pulumi.BoolInput `pulumi:"innodbRollbackOnTimeout"`
	// This variable defines:
	// * The sort buffer size for online DDL operations that create or rebuild secondary indexes. However, as of MySQL 8.0.27, this responsibility is subsumed by the innodbDdlBufferSize variable.
	// * The amount by which the temporary log file is extended when recording concurrent DML during an online DDL operation, and the size of the temporary log file read buffer and write buffer.
	InnodbSortBufferSize pulumi.IntInput `pulumi:"innodbSortBufferSize"`
	// The number of index pages to sample when estimating cardinality and other statistics for an indexed column, such as those calculated by ANALYZE TABLE.
	InnodbStatsPersistentSamplePages pulumi.StringInput `pulumi:"innodbStatsPersistentSamplePages"`
	// The number of index pages to sample when estimating cardinality and other statistics for an indexed column, such as those calculated by [ANALYZE TABLE](https://dev.mysql.com/doc/refman/8.0/en/analyze-table.html).
	InnodbStatsTransientSamplePages pulumi.StringInput `pulumi:"innodbStatsTransientSamplePages"`
	// When you enable innodbStrictMode, the InnoDB storage engine returns errors instead of warnings for invalid or incompatible table options.
	InnodbStrictMode pulumi.BoolInput `pulumi:"innodbStrictMode"`
	// When enabled, undo tablespaces that exceed the threshold value defined by innodbMaxUndoLogSize are marked for truncation. Only undo tablespaces can be truncated. Truncating undo logs that reside in the system tablespace is not supported. For truncation to occur, there must be at least two undo tablespaces.
	InnodbUndoLogTruncate pulumi.BoolInput `pulumi:"innodbUndoLogTruncate"`
	// The number of seconds the server waits for activity on an interactive connection before closing it.
	InteractiveTimeout pulumi.IntInput `pulumi:"interactiveTimeout"`
	// The minimum size of the buffer that is used for plain index scans, range index scans, and joins that do not use indexes and thus perform full table scans. In MySQL 8.0.18 and later, this variable also controls the amount of memory used for hash joins. Normally, the best way to get fast joins is to add indexes. Increase the value of joinBufferSize to get a faster full join when adding indexes is not possible. One join buffer is allocated for each full join between two tables. For a complex join between several tables for which indexes are not used, multiple join buffers might be necessary.
	JoinBufferSize pulumi.StringInput `pulumi:"joinBufferSize"`
	// This variable controls server-side LOCAL capability for LOAD DATA statements. Depending on the localInfile setting, the server refuses or permits local data loading by clients that have LOCAL enabled on the client side.
	LocalInfile pulumi.BoolInput `pulumi:"localInfile"`
	// If a query takes longer than this many seconds, the server increments the Slow_queries status variable. If the slow query log is enabled, the query is logged to the slow query log file. This value is measured in real time, not CPU time, so a query that is under the threshold on a lightly loaded system might be above the threshold on a heavily loaded one.
	LongQueryTime pulumi.IntInput `pulumi:"longQueryTime"`
	// ("mandatoryRoles")
	MandatoryRoles pulumi.StringInput `pulumi:"mandatoryRoles"`
	// The maximum size of one packet or any generated/intermediate string.
	MaxAllowedPacket pulumi.IntInput `pulumi:"maxAllowedPacket"`
	// Sets the size of the transaction cache.
	MaxBinlogCacheSize pulumi.StringInput `pulumi:"maxBinlogCacheSize"`
	// ("maxConnectErrors")
	MaxConnectErrors pulumi.StringInput `pulumi:"maxConnectErrors"`
	// ("maxConnections")
	MaxConnections pulumi.IntInput `pulumi:"maxConnections"`
	// ("maxExecutionTime")
	MaxExecutionTime pulumi.StringInput `pulumi:"maxExecutionTime"`
	// This variable sets the maximum size to which user-created MEMORY tables are permitted to grow.
	MaxHeapTableSize pulumi.StringInput `pulumi:"maxHeapTableSize"`
	// ("maxPreparedStmtCount")
	MaxPreparedStmtCount pulumi.IntInput `pulumi:"maxPreparedStmtCount"`
	// Limit the assumed maximum number of seeks when looking up rows based on a key. The MySQL optimizer assumes that no more than this number of key seeks are required when searching for matching rows in a table by scanning an index, regardless of the actual cardinality of the index (see Section 15.7.7.22, “SHOW INDEX Statement”). By setting this to a low value (say, 100), you can force MySQL to prefer indexes instead of table scans.
	MaxSeeksForKey pulumi.StringInput `pulumi:"maxSeeksForKey"`
	// The maximum number of simultaneous connections permitted to any given MySQL user account. A value of 0 (the default) means “no limit.” This variable has a global value that can be set at server startup or runtime. It also has a read-only session value that indicates the effective simultaneous-connection limit that applies to the account associated with the current session.
	MaxUserConnections pulumi.StringInput `pulumi:"maxUserConnections"`
	// ("mysqlFirewallMode")
	MysqlFirewallMode pulumi.BoolInput `pulumi:"mysqlFirewallMode"`
	// DEPRECATED -- typo of mysqlx_zstd_default_compression_level. variable will be ignored.
	//
	// Deprecated: The 'mysql_zstd_default_compression_level' field has been deprecated and may be removed in a future version. Do not use this field.
	MysqlZstdDefaultCompressionLevel pulumi.IntInput `pulumi:"mysqlZstdDefaultCompressionLevel"`
	// The number of seconds X Plugin waits for the first packet to be received from newly connected clients.
	MysqlxConnectTimeout pulumi.IntInput `pulumi:"mysqlxConnectTimeout"`
	// Set the default compression level for the deflate algorithm. ("mysqlxDeflateDefaultCompressionLevel")
	MysqlxDeflateDefaultCompressionLevel pulumi.IntInput `pulumi:"mysqlxDeflateDefaultCompressionLevel"`
	// Limit the upper bound of accepted compression levels for the deflate algorithm. ("mysqlxDeflateMaxClientCompressionLevel")
	MysqlxDeflateMaxClientCompressionLevel pulumi.IntInput `pulumi:"mysqlxDeflateMaxClientCompressionLevel"`
	// ("mysqlxDocumentIdUniquePrefix") DEPRECATED -- variable should not be settable and will be ignored
	//
	// Deprecated: The 'mysqlx_document_id_unique_prefix' field has been deprecated and may be removed in a future version. Do not use this field.
	MysqlxDocumentIdUniquePrefix pulumi.IntInput `pulumi:"mysqlxDocumentIdUniquePrefix"`
	// ("mysqlxEnableHelloNotice") DEPRECATED -- variable should not be settable and will be ignored
	MysqlxEnableHelloNotice pulumi.BoolInput `pulumi:"mysqlxEnableHelloNotice"`
	// ("mysqlxIdleWorkerThreadTimeout") DEPRECATED -- variable should not be settable and will be ignored
	//
	// Deprecated: The 'mysqlx_idle_worker_thread_timeout' field has been deprecated and may be removed in a future version. Do not use this field.
	MysqlxIdleWorkerThreadTimeout pulumi.IntInput `pulumi:"mysqlxIdleWorkerThreadTimeout"`
	// The number of seconds to wait for interactive clients to timeout.
	MysqlxInteractiveTimeout pulumi.IntInput `pulumi:"mysqlxInteractiveTimeout"`
	// Set the default compression level for the lz4 algorithm. ("mysqlxLz4DefaultCompressionLevel")
	MysqlxLz4defaultCompressionLevel pulumi.IntInput `pulumi:"mysqlxLz4defaultCompressionLevel"`
	// Limit the upper bound of accepted compression levels for the lz4 algorithm. ("mysqlxLz4MaxClientCompressionLevel")
	MysqlxLz4maxClientCompressionLevel pulumi.IntInput `pulumi:"mysqlxLz4maxClientCompressionLevel"`
	// The maximum size of network packets that can be received by X Plugin.
	MysqlxMaxAllowedPacket pulumi.IntInput `pulumi:"mysqlxMaxAllowedPacket"`
	// ("mysqlxMinWorkerThreads") DEPRECATED -- variable should not be settable and will be ignored
	//
	// Deprecated: The 'mysqlx_min_worker_threads' field has been deprecated and may be removed in a future version. Do not use this field.
	MysqlxMinWorkerThreads pulumi.IntInput `pulumi:"mysqlxMinWorkerThreads"`
	// The number of seconds that X Plugin waits for blocking read operations to complete. After this time, if the read operation is not successful, X Plugin closes the connection and returns a warning notice with the error code ER_IO_READ_ERROR to the client application.
	MysqlxReadTimeout pulumi.IntInput `pulumi:"mysqlxReadTimeout"`
	// The number of seconds that X Plugin waits for activity on a connection.
	MysqlxWaitTimeout pulumi.IntInput `pulumi:"mysqlxWaitTimeout"`
	// The number of seconds that X Plugin waits for blocking write operations to complete. After this time, if the write operation is not successful, X Plugin closes the connection.
	MysqlxWriteTimeout pulumi.IntInput `pulumi:"mysqlxWriteTimeout"`
	// Set the default compression level for the zstd algorithm. ("mysqlxZstdDefaultCompressionLevel")
	MysqlxZstdDefaultCompressionLevel pulumi.IntInput `pulumi:"mysqlxZstdDefaultCompressionLevel"`
	// Limit the upper bound of accepted compression levels for the zstd algorithm. ("mysqlxZstdMaxClientCompressionLevel")
	MysqlxZstdMaxClientCompressionLevel pulumi.IntInput `pulumi:"mysqlxZstdMaxClientCompressionLevel"`
	// The number of seconds to wait for more data from a connection before aborting the read.
	NetReadTimeout pulumi.IntInput `pulumi:"netReadTimeout"`
	// The number of seconds to wait for a block to be written to a connection before aborting the write.
	NetWriteTimeout pulumi.IntInput `pulumi:"netWriteTimeout"`
	// The optimizerSwitch system variable enables control over optimizer behavior. The value of this variable is a set of flags, each of which has a value of on or off to indicate whether the corresponding optimizer behavior is enabled or disabled. This variable has global and session values and can be changed at runtime. The global default can be set at server startup.
	OptimizerSwitch pulumi.StringInput `pulumi:"optimizerSwitch"`
	// ("parserMaxMemSize")
	ParserMaxMemSize pulumi.StringInput `pulumi:"parserMaxMemSize"`
	// ("queryAllocBlockSize") DEPRECATED -- variable should not be settable and will be ignored
	//
	// Deprecated: The 'query_alloc_block_size' field has been deprecated and may be removed in a future version. Do not use this field.
	QueryAllocBlockSize pulumi.StringInput `pulumi:"queryAllocBlockSize"`
	// ("queryPreallocSize") DEPRECATED -- variable should not be settable and will be ignored
	QueryPreallocSize pulumi.StringInput `pulumi:"queryPreallocSize"`
	// The limit on memory consumption for the range optimizer. A value of 0 means “no limit.” If an execution plan considered by the optimizer uses the range access method but the optimizer estimates that the amount of memory needed for this method would exceed the limit, it abandons the plan and considers other plans.
	//
	// Deprecated: The 'query_prealloc_size' field has been deprecated and may be removed in a future version. Do not use this field.
	RangeOptimizerMaxMemSize pulumi.StringInput `pulumi:"rangeOptimizerMaxMemSize"`
	// regexpTimeLimit corresponds to the MySQL system variable [regexpTimeLimit] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_regexp_time_limit)
	RegexpTimeLimit pulumi.IntInput `pulumi:"regexpTimeLimit"`
	// The maximum amount of space to use for all relay logs.
	RelayLogSpaceLimit pulumi.StringInput `pulumi:"relayLogSpaceLimit"`
	// Specifies the number of seconds to wait for more data or a heartbeat signal from the source before the replica considers the connection broken, aborts the read, and tries to reconnect. Setting this variable has no immediate effect. The state of the variable applies on all subsequent START REPLICA commands.
	ReplicaNetTimeout pulumi.IntInput `pulumi:"replicaNetTimeout"`
	// Beginning with MySQL 8.0.26, slaveParallelWorkers is deprecated, and you should use replicaParallelWorkers instead. (Prior to MySQL 8.0.26, you must use slaveParallelWorkers to set the number of applier threads.)
	ReplicaParallelWorkers pulumi.IntInput `pulumi:"replicaParallelWorkers"`
	// From MySQL 8.0.26, use replicaTypeConversions in place of slave_type_conversions, which is deprecated from that release. In releases before MySQL 8.0.26, use slave_type_conversions.
	ReplicaTypeConversions pulumi.StringInput `pulumi:"replicaTypeConversions"`
	// Whether client connections to the server are required to use some form of secure transport. When this variable is enabled, the server permits only TCP/IP connections encrypted using TLS/SSL, or connections that use a socket file or shared memory. The server rejects nonsecure connection attempts, which fail with an ER_SECURE_TRANSPORT_REQUIRED error.
	RequireSecureTransport pulumi.BoolInput `pulumi:"requireSecureTransport"`
	// Whether to resolve host names when checking client connections. If this variable is OFF, mysqld resolves host names when checking client connections. If it is ON, mysqld uses only IP numbers; in this case, all Host column values in the grant tables must be IP addresses. See Section 7.1.12.3, “DNS Lookups and the Host Cache”.
	SkipNameResolve pulumi.BoolInput `pulumi:"skipNameResolve"`
	// Each session that must perform a sort allocates a buffer of this size.
	SortBufferSize pulumi.StringInput `pulumi:"sortBufferSize"`
	// Whether GIPK mode is in effect, in which case a MySQL replication source server adds a generated invisible primary key to any InnoDB table that is created without one.
	SqlGenerateInvisiblePrimaryKey pulumi.BoolInput `pulumi:"sqlGenerateInvisiblePrimaryKey"`
	// ("sqlMode")
	SqlMode pulumi.StringInput `pulumi:"sqlMode"`
	// ("sqlRequirePrimaryKey")
	SqlRequirePrimaryKey pulumi.BoolInput `pulumi:"sqlRequirePrimaryKey"`
	// ("sqlWarnings")
	SqlWarnings pulumi.BoolInput `pulumi:"sqlWarnings"`
	// The number of table definitions that can be stored in the table definition cache. If you use a large number of tables, you can create a large table definition cache to speed up opening of tables. The table definition cache takes less space and does not use file descriptors, unlike the normal table cache.
	TableDefinitionCache pulumi.IntInput `pulumi:"tableDefinitionCache"`
	// The number of open tables for all threads. Increasing this value increases the number of file descriptors that mysqld requires.
	TableOpenCache pulumi.IntInput `pulumi:"tableOpenCache"`
	// Defines the maximum amount of memory that can be occupied by the TempTable storage engine before it starts storing data on disk. The default value is 1073741824 bytes (1GiB). For more information, see Section 10.4.4, “Internal Temporary Table Use in MySQL”.
	TemptableMaxRam pulumi.StringInput `pulumi:"temptableMaxRam"`
	// Controls whether the thread pool uses dedicated listener threads. If enabled, a listener thread in each thread group is dedicated to the task of listening for network events from clients, ensuring that the maximum number of query worker threads is no more than the value specified by threadPoolMaxTransactionsLimit. threadPoolDedicatedListeners corresponds to the MySQL Database Service-specific system variable thread_pool_dedicated_listeners.
	ThreadPoolDedicatedListeners pulumi.BoolInput `pulumi:"threadPoolDedicatedListeners"`
	// Limits the maximum number of open transactions to the defined value. The default value is 0, which enforces no limit. threadPoolMaxTransactionsLimit corresponds to the MySQL Database Service-specific system variable thread_pool_max_transactions_limit.
	ThreadPoolMaxTransactionsLimit pulumi.IntInput `pulumi:"threadPoolMaxTransactionsLimit"`
	// The maximum number of query threads permitted in a thread group. The maximum value is 4096, but if threadPoolMaxTransactionsLimit is set, threadPoolQueryThreadsPerGroup must not exceed that value. The default value of 1 means there is one active query thread in each thread group, which works well for many loads. When you are using the high concurrency thread pool algorithm (thread_pool_algorithm = 1), consider increasing the value if you experience slower response times due to long-running transactions.
	ThreadPoolQueryThreadsPerGroup pulumi.IntInput `pulumi:"threadPoolQueryThreadsPerGroup"`
	// The number of thread groups in the thread pool. This is the most important parameter controlling thread pool performance. It affects how many statements can execute simultaneously. If a value outside the range of permissible values is specified, the thread pool plugin does not load and the server writes a message to the error log.
	ThreadPoolSize pulumi.IntInput `pulumi:"threadPoolSize"`
	// The delay period before executing a new transaction, in milliseconds. The maximum value is 300000 (5 minutes). A transaction delay can be used in cases where parallel transactions affect the performance of other operations due to resource contention. For example, if parallel transactions affect index creation or an online buffer pool resizing operation, you can configure a transaction delay to reduce resource contention while those operations are running.
	ThreadPoolTransactionDelay pulumi.IntInput `pulumi:"threadPoolTransactionDelay"`
	// Initializes the time zone for each client that connects.
	TimeZone pulumi.StringInput `pulumi:"timeZone"`
	// The maximum size of internal in-memory temporary tables. This variable does not apply to user-created MEMORY tables.
	TmpTableSize pulumi.StringInput `pulumi:"tmpTableSize"`
	// ("transactionIsolation")
	TransactionIsolation pulumi.StringInput `pulumi:"transactionIsolation"`
	// The number of seconds the server waits for activity on a noninteractive connection before closing it.
	WaitTimeout pulumi.IntInput `pulumi:"waitTimeout"`
}

func (GetMysqlConfigurationsConfigurationVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlConfigurationsConfigurationVariable)(nil)).Elem()
}

func (i GetMysqlConfigurationsConfigurationVariableArgs) ToGetMysqlConfigurationsConfigurationVariableOutput() GetMysqlConfigurationsConfigurationVariableOutput {
	return i.ToGetMysqlConfigurationsConfigurationVariableOutputWithContext(context.Background())
}

func (i GetMysqlConfigurationsConfigurationVariableArgs) ToGetMysqlConfigurationsConfigurationVariableOutputWithContext(ctx context.Context) GetMysqlConfigurationsConfigurationVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlConfigurationsConfigurationVariableOutput)
}

// GetMysqlConfigurationsConfigurationVariableArrayInput is an input type that accepts GetMysqlConfigurationsConfigurationVariableArray and GetMysqlConfigurationsConfigurationVariableArrayOutput values.
// You can construct a concrete instance of `GetMysqlConfigurationsConfigurationVariableArrayInput` via:
//
//	GetMysqlConfigurationsConfigurationVariableArray{ GetMysqlConfigurationsConfigurationVariableArgs{...} }
type GetMysqlConfigurationsConfigurationVariableArrayInput interface {
	pulumi.Input

	ToGetMysqlConfigurationsConfigurationVariableArrayOutput() GetMysqlConfigurationsConfigurationVariableArrayOutput
	ToGetMysqlConfigurationsConfigurationVariableArrayOutputWithContext(context.Context) GetMysqlConfigurationsConfigurationVariableArrayOutput
}

type GetMysqlConfigurationsConfigurationVariableArray []GetMysqlConfigurationsConfigurationVariableInput

func (GetMysqlConfigurationsConfigurationVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlConfigurationsConfigurationVariable)(nil)).Elem()
}

func (i GetMysqlConfigurationsConfigurationVariableArray) ToGetMysqlConfigurationsConfigurationVariableArrayOutput() GetMysqlConfigurationsConfigurationVariableArrayOutput {
	return i.ToGetMysqlConfigurationsConfigurationVariableArrayOutputWithContext(context.Background())
}

func (i GetMysqlConfigurationsConfigurationVariableArray) ToGetMysqlConfigurationsConfigurationVariableArrayOutputWithContext(ctx context.Context) GetMysqlConfigurationsConfigurationVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlConfigurationsConfigurationVariableArrayOutput)
}

type GetMysqlConfigurationsConfigurationVariableOutput struct{ *pulumi.OutputState }

func (GetMysqlConfigurationsConfigurationVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlConfigurationsConfigurationVariable)(nil)).Elem()
}

func (o GetMysqlConfigurationsConfigurationVariableOutput) ToGetMysqlConfigurationsConfigurationVariableOutput() GetMysqlConfigurationsConfigurationVariableOutput {
	return o
}

func (o GetMysqlConfigurationsConfigurationVariableOutput) ToGetMysqlConfigurationsConfigurationVariableOutputWithContext(ctx context.Context) GetMysqlConfigurationsConfigurationVariableOutput {
	return o
}

// auto_increment_increment and autoIncrementOffset are intended for use with circular (source-to-source) replication, and can be used to control the operation of AUTO_INCREMENT columns. Both variables have global and session values, and each can assume an integer value between 1 and 65,535 inclusive.
func (o GetMysqlConfigurationsConfigurationVariableOutput) AutoIncrementIncrement() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.AutoIncrementIncrement }).(pulumi.IntOutput)
}

// This variable has a default value of 1. If it is left with its default value, and Group Replication is started on the server in multi-primary mode, it is changed to the server ID.
func (o GetMysqlConfigurationsConfigurationVariableOutput) AutoIncrementOffset() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.AutoIncrementOffset }).(pulumi.IntOutput)
}

// ("autocommit")
func (o GetMysqlConfigurationsConfigurationVariableOutput) Autocommit() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) bool { return v.Autocommit }).(pulumi.BoolOutput)
}

// If enabled, the server stores all temporary tables on disk rather than in memory.
func (o GetMysqlConfigurationsConfigurationVariableOutput) BigTables() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) bool { return v.BigTables }).(pulumi.BoolOutput)
}

// Sets the binary log expiration period in seconds. binlogExpireLogsSeconds corresponds to the MySQL binary logging system variable [binlogExpireLogsSeconds](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds).
func (o GetMysqlConfigurationsConfigurationVariableOutput) BinlogExpireLogsSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.BinlogExpireLogsSeconds }).(pulumi.IntOutput)
}

// Controls how many microseconds the binary log commit waits before synchronizing the binary log file to disk. There is no delay by default. Setting this variable to a microsecond delay enables more transactions to be synchronized together to disk at once, reducing the overall time to commit a group of transactions because the larger groups required fewer time units per group.
func (o GetMysqlConfigurationsConfigurationVariableOutput) BinlogGroupCommitSyncDelay() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.BinlogGroupCommitSyncDelay }).(pulumi.IntOutput)
}

// The maximum number of transactions to wait for before aborting the current delay as specified by binlog_group_commit_sync_delay. If binlogGroupCommitSyncDelay is set to 0, then this option has no effect.
func (o GetMysqlConfigurationsConfigurationVariableOutput) BinlogGroupCommitSyncNoDelayCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.BinlogGroupCommitSyncNoDelayCount }).(pulumi.IntOutput)
}

// Configures the amount of table metadata added to the binary log when using row-based logging. binlogRowMetadata corresponds to the MySQL binary logging system variable [binlogRowMetadata](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_metadata).
func (o GetMysqlConfigurationsConfigurationVariableOutput) BinlogRowMetadata() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.BinlogRowMetadata }).(pulumi.StringOutput)
}

// When set to PARTIAL_JSON, this enables use of a space-efficient binary log format for updates that modify only a small portion of a JSON document. binlogRowValueOptions corresponds to the MySQL binary logging system variable [binlogRowValueOptions](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_row_value_options).
func (o GetMysqlConfigurationsConfigurationVariableOutput) BinlogRowValueOptions() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.BinlogRowValueOptions }).(pulumi.StringOutput)
}

// Enables compression for transactions that are written to binary log files on this server. binlogTransactionCompression corresponds to the MySQL binary logging system variable [binlogTransactionCompression](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_binlog_transaction_compression).
func (o GetMysqlConfigurationsConfigurationVariableOutput) BinlogTransactionCompression() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) bool { return v.BinlogTransactionCompression }).(pulumi.BoolOutput)
}

// This variable controls the block encryption mode for block-based algorithms such as AES. It affects encryption for AES_ENCRYPT() and AES_DECRYPT(). blockEncryptionMode takes a value in aes-keylen-mode format, where keylen is the key length in bits and mode is the encryption mode. The value is not case-sensitive. Permitted keylen values are 128, 192, and 256. Permitted mode values are ECB, CBC, CFB1, CFB8, CFB128, and OFB.
func (o GetMysqlConfigurationsConfigurationVariableOutput) BlockEncryptionMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.BlockEncryptionMode }).(pulumi.StringOutput)
}

// The server's default character set. If you set this variable, you should also set collationServer to specify the collation for the character set.
func (o GetMysqlConfigurationsConfigurationVariableOutput) CharacterSetServer() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.CharacterSetServer }).(pulumi.StringOutput)
}

// The server's default collation.
func (o GetMysqlConfigurationsConfigurationVariableOutput) CollationServer() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.CollationServer }).(pulumi.StringOutput)
}

// ("completionType")
func (o GetMysqlConfigurationsConfigurationVariableOutput) CompletionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.CompletionType }).(pulumi.StringOutput)
}

// The number of seconds that the mysqld server waits for a connect packet before responding with Bad handshake.
func (o GetMysqlConfigurationsConfigurationVariableOutput) ConnectTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.ConnectTimeout }).(pulumi.IntOutput)
}

// Set the chunking size for updates to the global memory usage counter Global_connection_memory.
func (o GetMysqlConfigurationsConfigurationVariableOutput) ConnectionMemoryChunkSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.ConnectionMemoryChunkSize }).(pulumi.IntOutput)
}

// Set the maximum amount of memory that can be used by a single user connection.
func (o GetMysqlConfigurationsConfigurationVariableOutput) ConnectionMemoryLimit() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.ConnectionMemoryLimit }).(pulumi.StringOutput)
}

// ("cteMaxRecursionDepth")
func (o GetMysqlConfigurationsConfigurationVariableOutput) CteMaxRecursionDepth() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.CteMaxRecursionDepth }).(pulumi.StringOutput)
}

// The default authentication plugin. This must be a plugin that uses internal credentials storage, so these values are permitted: mysql_native_password, sha256_password, caching_sha2_password.
func (o GetMysqlConfigurationsConfigurationVariableOutput) DefaultAuthenticationPlugin() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.DefaultAuthenticationPlugin }).(pulumi.StringOutput)
}

// This variable determines the default output format used by EXPLAIN in the absence of a FORMAT option when displaying a query execution plan.
func (o GetMysqlConfigurationsConfigurationVariableOutput) ExplainFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.ExplainFormat }).(pulumi.StringOutput)
}

// This system variable determines whether the server enables certain nonstandard behaviors for default values and NULL-value handling in TIMESTAMP columns. By default, explicitDefaultsForTimestamp is enabled, which disables the nonstandard behaviors. Disabling explicitDefaultsForTimestamp results in a warning.
func (o GetMysqlConfigurationsConfigurationVariableOutput) ExplicitDefaultsForTimestamp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) bool { return v.ExplicitDefaultsForTimestamp }).(pulumi.BoolOutput)
}

// ("foreignKeyChecks")
func (o GetMysqlConfigurationsConfigurationVariableOutput) ForeignKeyChecks() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) bool { return v.ForeignKeyChecks }).(pulumi.BoolOutput)
}

// ("generatedRandomPasswordLength") DEPRECATED -- variable should not be settable and will be ignored
//
// Deprecated: The 'generated_random_password_length' field has been deprecated and may be removed in a future version. Do not use this field.
func (o GetMysqlConfigurationsConfigurationVariableOutput) GeneratedRandomPasswordLength() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.GeneratedRandomPasswordLength }).(pulumi.IntOutput)
}

// Set the total amount of memory that can be used by all user connections.
func (o GetMysqlConfigurationsConfigurationVariableOutput) GlobalConnectionMemoryLimit() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.GlobalConnectionMemoryLimit }).(pulumi.StringOutput)
}

// Determines whether the MySQL server calculates Global_connection_memory.
func (o GetMysqlConfigurationsConfigurationVariableOutput) GlobalConnectionMemoryTracking() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) bool { return v.GlobalConnectionMemoryTracking }).(pulumi.BoolOutput)
}

// Specifies the maximum permitted result length in bytes for the GROUP_CONCAT() function.
func (o GetMysqlConfigurationsConfigurationVariableOutput) GroupConcatMaxLen() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.GroupConcatMaxLen }).(pulumi.StringOutput)
}

// * EVENTUAL: Both RO and RW transactions do not wait for preceding transactions to be applied before executing. A RW transaction does not wait for other members to apply a transaction. This means that a transaction could be externalized on one member before the others. This also means that in the event of a primary failover, the new primary can accept new RO and RW transactions before the previous primary transactions are all applied. RO transactions could result in outdated values, RW transactions could result in a rollback due to conflicts.
// * BEFORE_ON_PRIMARY_FAILOVER: New RO or RW transactions with a newly elected primary that is applying backlog from the old primary are held (not applied) until any backlog has been applied. This ensures that when a primary failover happens, intentionally or not, clients always see the latest value on the primary. This guarantees consistency, but means that clients must be able to handle the delay in the event that a backlog is being applied. Usually this delay should be minimal, but does depend on the size of the backlog.
// * BEFORE: A RW transaction waits for all preceding transactions to complete before being applied. A RO transaction waits for all preceding transactions to complete before being executed. This ensures that this transaction reads the latest value by only affecting the latency of the transaction. This reduces the overhead of synchronization on every RW transaction, by ensuring synchronization is used only on RO transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
// * AFTER: A RW transaction waits until its changes have been applied to all of the other members. This value has no effect on RO transactions. This mode ensures that when a transaction is committed on the local member, any subsequent transaction reads the written value or a more recent value on any group member. Use this mode with a group that is used for predominantly RO operations to ensure that applied RW transactions are applied everywhere once they commit. This could be used by your application to ensure that subsequent reads fetch the latest data which includes the latest writes. This reduces the overhead of synchronization on every RO transaction, by ensuring synchronization is used only on RW transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
// * BEFORE_AND_AFTER: A RW transaction waits for 1) all preceding transactions to complete before being applied and 2) until its changes have been applied on other members. A RO transaction waits for all preceding transactions to complete before execution takes place. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
func (o GetMysqlConfigurationsConfigurationVariableOutput) GroupReplicationConsistency() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.GroupReplicationConsistency }).(pulumi.StringOutput)
}

// ("informationSchemaStatsExpiry")
func (o GetMysqlConfigurationsConfigurationVariableOutput) InformationSchemaStatsExpiry() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.InformationSchemaStatsExpiry }).(pulumi.IntOutput)
}

// Whether the InnoDB adaptive hash index is enabled or disabled. It may be desirable, depending on your workload, to dynamically enable or disable adaptive hash indexing to improve query performance. Because the adaptive hash index may not be useful for all workloads, conduct benchmarks with it both enabled and disabled, using realistic workloads.
func (o GetMysqlConfigurationsConfigurationVariableOutput) InnodbAdaptiveHashIndex() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) bool { return v.InnodbAdaptiveHashIndex }).(pulumi.BoolOutput)
}

// The lock mode to use for generating auto-increment values. Permissible values are 0, 1, or 2, for traditional, consecutive, or interleaved, respectively.
func (o GetMysqlConfigurationsConfigurationVariableOutput) InnodbAutoincLockMode() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.InnodbAutoincLockMode }).(pulumi.IntOutput)
}

// Specifies the percentage of the most recently used pages for each buffer pool to read out and dump.
func (o GetMysqlConfigurationsConfigurationVariableOutput) InnodbBufferPoolDumpPct() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.InnodbBufferPoolDumpPct }).(pulumi.IntOutput)
}

// ("innodbBufferPoolInstances")
func (o GetMysqlConfigurationsConfigurationVariableOutput) InnodbBufferPoolInstances() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.InnodbBufferPoolInstances }).(pulumi.IntOutput)
}

// The size (in bytes) of the buffer pool, that is, the memory area where InnoDB caches table and index data.
func (o GetMysqlConfigurationsConfigurationVariableOutput) InnodbBufferPoolSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.InnodbBufferPoolSize }).(pulumi.StringOutput)
}

// Whether InnoDB performs change buffering, an optimization that delays write operations to secondary indexes so that the I/O operations can be performed sequentially. Permitted values are described in the following table. Values may also be specified numerically.
func (o GetMysqlConfigurationsConfigurationVariableOutput) InnodbChangeBuffering() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.InnodbChangeBuffering }).(pulumi.StringOutput)
}

// innodbDdlBufferSize corresponds to the MySQL system variable [innodbDdlBufferSize] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_ddl_buffer_size)
func (o GetMysqlConfigurationsConfigurationVariableOutput) InnodbDdlBufferSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.InnodbDdlBufferSize }).(pulumi.StringOutput)
}

// innodbDdlThreads corresponds to the MySQL system variable [innodbDdlThreads] (https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_ddl_threads)
func (o GetMysqlConfigurationsConfigurationVariableOutput) InnodbDdlThreads() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.InnodbDdlThreads }).(pulumi.IntOutput)
}

// ("innodbFtEnableStopword")
func (o GetMysqlConfigurationsConfigurationVariableOutput) InnodbFtEnableStopword() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) bool { return v.InnodbFtEnableStopword }).(pulumi.BoolOutput)
}

// ("innodbFtMaxTokenSize")
func (o GetMysqlConfigurationsConfigurationVariableOutput) InnodbFtMaxTokenSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.InnodbFtMaxTokenSize }).(pulumi.IntOutput)
}

// ("innodbFtMinTokenSize")
func (o GetMysqlConfigurationsConfigurationVariableOutput) InnodbFtMinTokenSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.InnodbFtMinTokenSize }).(pulumi.IntOutput)
}

// ("innodbFtNumWordOptimize")
func (o GetMysqlConfigurationsConfigurationVariableOutput) InnodbFtNumWordOptimize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.InnodbFtNumWordOptimize }).(pulumi.IntOutput)
}

// ("innodbFtResultCacheLimit")
func (o GetMysqlConfigurationsConfigurationVariableOutput) InnodbFtResultCacheLimit() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.InnodbFtResultCacheLimit }).(pulumi.StringOutput)
}

// ("innodbFtServerStopwordTable")
func (o GetMysqlConfigurationsConfigurationVariableOutput) InnodbFtServerStopwordTable() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.InnodbFtServerStopwordTable }).(pulumi.StringOutput)
}

// ("innodbLockWaitTimeout")
func (o GetMysqlConfigurationsConfigurationVariableOutput) InnodbLockWaitTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.InnodbLockWaitTimeout }).(pulumi.IntOutput)
}

// Enables dedicated log writer threads for writing redo log records from the log buffer to the system buffers and flushing the system buffers to the redo log files.
func (o GetMysqlConfigurationsConfigurationVariableOutput) InnodbLogWriterThreads() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) bool { return v.InnodbLogWriterThreads }).(pulumi.BoolOutput)
}

// The desired maximum purge lag in terms of transactions.
func (o GetMysqlConfigurationsConfigurationVariableOutput) InnodbMaxPurgeLag() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.InnodbMaxPurgeLag }).(pulumi.StringOutput)
}

// The maximum delay in microseconds for the delay imposed when the innodbMaxPurgeLag threshold is exceeded.
func (o GetMysqlConfigurationsConfigurationVariableOutput) InnodbMaxPurgeLagDelay() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.InnodbMaxPurgeLagDelay }).(pulumi.IntOutput)
}

// Enables the NUMA interleave memory policy for allocation of the InnoDB buffer pool. When innodbNumaInterleave is enabled, the NUMA memory policy is set to MPOL_INTERLEAVE for the mysqld process. After the InnoDB buffer pool is allocated, the NUMA memory policy is set back to MPOL_DEFAULT. For the innodbNumaInterleave option to be available, MySQL must be compiled on a NUMA-enabled Linux system.
func (o GetMysqlConfigurationsConfigurationVariableOutput) InnodbNumaInterleave() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) bool { return v.InnodbNumaInterleave }).(pulumi.BoolOutput)
}

// Specifies an upper limit in bytes on the size of the temporary log files used during online DDL operations for InnoDB tables. There is one such log file for each index being created or table being altered. This log file stores data inserted, updated, or deleted in the table during the DDL operation.
func (o GetMysqlConfigurationsConfigurationVariableOutput) InnodbOnlineAlterLogMaxSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.InnodbOnlineAlterLogMaxSize }).(pulumi.StringOutput)
}

// Defines the amount of disk space occupied by redo log files. innodbRedoLogCapacity supercedes the innodbLogFilesInGroup and innodbLogFileSize variables, which are both ignored if innodbRedoLogCapacity is defined. If innodbRedoLogCapacity is not defined, and if neither innodbLogFileSize or innodbLogFilesInGroup are defined, then the default innodbRedoLogCapacity value is used.
func (o GetMysqlConfigurationsConfigurationVariableOutput) InnodbRedoLogCapacity() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.InnodbRedoLogCapacity }).(pulumi.StringOutput)
}

// InnoDB rolls back only the last statement on a transaction timeout by default. If --innodb-rollback-on-timeout is specified, a transaction timeout causes InnoDB to abort and roll back the entire transaction.
func (o GetMysqlConfigurationsConfigurationVariableOutput) InnodbRollbackOnTimeout() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) bool { return v.InnodbRollbackOnTimeout }).(pulumi.BoolOutput)
}

// This variable defines:
// * The sort buffer size for online DDL operations that create or rebuild secondary indexes. However, as of MySQL 8.0.27, this responsibility is subsumed by the innodbDdlBufferSize variable.
// * The amount by which the temporary log file is extended when recording concurrent DML during an online DDL operation, and the size of the temporary log file read buffer and write buffer.
func (o GetMysqlConfigurationsConfigurationVariableOutput) InnodbSortBufferSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.InnodbSortBufferSize }).(pulumi.IntOutput)
}

// The number of index pages to sample when estimating cardinality and other statistics for an indexed column, such as those calculated by ANALYZE TABLE.
func (o GetMysqlConfigurationsConfigurationVariableOutput) InnodbStatsPersistentSamplePages() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.InnodbStatsPersistentSamplePages }).(pulumi.StringOutput)
}

// The number of index pages to sample when estimating cardinality and other statistics for an indexed column, such as those calculated by [ANALYZE TABLE](https://dev.mysql.com/doc/refman/8.0/en/analyze-table.html).
func (o GetMysqlConfigurationsConfigurationVariableOutput) InnodbStatsTransientSamplePages() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.InnodbStatsTransientSamplePages }).(pulumi.StringOutput)
}

// When you enable innodbStrictMode, the InnoDB storage engine returns errors instead of warnings for invalid or incompatible table options.
func (o GetMysqlConfigurationsConfigurationVariableOutput) InnodbStrictMode() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) bool { return v.InnodbStrictMode }).(pulumi.BoolOutput)
}

// When enabled, undo tablespaces that exceed the threshold value defined by innodbMaxUndoLogSize are marked for truncation. Only undo tablespaces can be truncated. Truncating undo logs that reside in the system tablespace is not supported. For truncation to occur, there must be at least two undo tablespaces.
func (o GetMysqlConfigurationsConfigurationVariableOutput) InnodbUndoLogTruncate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) bool { return v.InnodbUndoLogTruncate }).(pulumi.BoolOutput)
}

// The number of seconds the server waits for activity on an interactive connection before closing it.
func (o GetMysqlConfigurationsConfigurationVariableOutput) InteractiveTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.InteractiveTimeout }).(pulumi.IntOutput)
}

// The minimum size of the buffer that is used for plain index scans, range index scans, and joins that do not use indexes and thus perform full table scans. In MySQL 8.0.18 and later, this variable also controls the amount of memory used for hash joins. Normally, the best way to get fast joins is to add indexes. Increase the value of joinBufferSize to get a faster full join when adding indexes is not possible. One join buffer is allocated for each full join between two tables. For a complex join between several tables for which indexes are not used, multiple join buffers might be necessary.
func (o GetMysqlConfigurationsConfigurationVariableOutput) JoinBufferSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.JoinBufferSize }).(pulumi.StringOutput)
}

// This variable controls server-side LOCAL capability for LOAD DATA statements. Depending on the localInfile setting, the server refuses or permits local data loading by clients that have LOCAL enabled on the client side.
func (o GetMysqlConfigurationsConfigurationVariableOutput) LocalInfile() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) bool { return v.LocalInfile }).(pulumi.BoolOutput)
}

// If a query takes longer than this many seconds, the server increments the Slow_queries status variable. If the slow query log is enabled, the query is logged to the slow query log file. This value is measured in real time, not CPU time, so a query that is under the threshold on a lightly loaded system might be above the threshold on a heavily loaded one.
func (o GetMysqlConfigurationsConfigurationVariableOutput) LongQueryTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.LongQueryTime }).(pulumi.IntOutput)
}

// ("mandatoryRoles")
func (o GetMysqlConfigurationsConfigurationVariableOutput) MandatoryRoles() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.MandatoryRoles }).(pulumi.StringOutput)
}

// The maximum size of one packet or any generated/intermediate string.
func (o GetMysqlConfigurationsConfigurationVariableOutput) MaxAllowedPacket() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.MaxAllowedPacket }).(pulumi.IntOutput)
}

// Sets the size of the transaction cache.
func (o GetMysqlConfigurationsConfigurationVariableOutput) MaxBinlogCacheSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.MaxBinlogCacheSize }).(pulumi.StringOutput)
}

// ("maxConnectErrors")
func (o GetMysqlConfigurationsConfigurationVariableOutput) MaxConnectErrors() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.MaxConnectErrors }).(pulumi.StringOutput)
}

// ("maxConnections")
func (o GetMysqlConfigurationsConfigurationVariableOutput) MaxConnections() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.MaxConnections }).(pulumi.IntOutput)
}

// ("maxExecutionTime")
func (o GetMysqlConfigurationsConfigurationVariableOutput) MaxExecutionTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.MaxExecutionTime }).(pulumi.StringOutput)
}

// This variable sets the maximum size to which user-created MEMORY tables are permitted to grow.
func (o GetMysqlConfigurationsConfigurationVariableOutput) MaxHeapTableSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.MaxHeapTableSize }).(pulumi.StringOutput)
}

// ("maxPreparedStmtCount")
func (o GetMysqlConfigurationsConfigurationVariableOutput) MaxPreparedStmtCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.MaxPreparedStmtCount }).(pulumi.IntOutput)
}

// Limit the assumed maximum number of seeks when looking up rows based on a key. The MySQL optimizer assumes that no more than this number of key seeks are required when searching for matching rows in a table by scanning an index, regardless of the actual cardinality of the index (see Section 15.7.7.22, “SHOW INDEX Statement”). By setting this to a low value (say, 100), you can force MySQL to prefer indexes instead of table scans.
func (o GetMysqlConfigurationsConfigurationVariableOutput) MaxSeeksForKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.MaxSeeksForKey }).(pulumi.StringOutput)
}

// The maximum number of simultaneous connections permitted to any given MySQL user account. A value of 0 (the default) means “no limit.” This variable has a global value that can be set at server startup or runtime. It also has a read-only session value that indicates the effective simultaneous-connection limit that applies to the account associated with the current session.
func (o GetMysqlConfigurationsConfigurationVariableOutput) MaxUserConnections() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.MaxUserConnections }).(pulumi.StringOutput)
}

// ("mysqlFirewallMode")
func (o GetMysqlConfigurationsConfigurationVariableOutput) MysqlFirewallMode() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) bool { return v.MysqlFirewallMode }).(pulumi.BoolOutput)
}

// DEPRECATED -- typo of mysqlx_zstd_default_compression_level. variable will be ignored.
//
// Deprecated: The 'mysql_zstd_default_compression_level' field has been deprecated and may be removed in a future version. Do not use this field.
func (o GetMysqlConfigurationsConfigurationVariableOutput) MysqlZstdDefaultCompressionLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.MysqlZstdDefaultCompressionLevel }).(pulumi.IntOutput)
}

// The number of seconds X Plugin waits for the first packet to be received from newly connected clients.
func (o GetMysqlConfigurationsConfigurationVariableOutput) MysqlxConnectTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.MysqlxConnectTimeout }).(pulumi.IntOutput)
}

// Set the default compression level for the deflate algorithm. ("mysqlxDeflateDefaultCompressionLevel")
func (o GetMysqlConfigurationsConfigurationVariableOutput) MysqlxDeflateDefaultCompressionLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.MysqlxDeflateDefaultCompressionLevel }).(pulumi.IntOutput)
}

// Limit the upper bound of accepted compression levels for the deflate algorithm. ("mysqlxDeflateMaxClientCompressionLevel")
func (o GetMysqlConfigurationsConfigurationVariableOutput) MysqlxDeflateMaxClientCompressionLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int {
		return v.MysqlxDeflateMaxClientCompressionLevel
	}).(pulumi.IntOutput)
}

// ("mysqlxDocumentIdUniquePrefix") DEPRECATED -- variable should not be settable and will be ignored
//
// Deprecated: The 'mysqlx_document_id_unique_prefix' field has been deprecated and may be removed in a future version. Do not use this field.
func (o GetMysqlConfigurationsConfigurationVariableOutput) MysqlxDocumentIdUniquePrefix() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.MysqlxDocumentIdUniquePrefix }).(pulumi.IntOutput)
}

// ("mysqlxEnableHelloNotice") DEPRECATED -- variable should not be settable and will be ignored
func (o GetMysqlConfigurationsConfigurationVariableOutput) MysqlxEnableHelloNotice() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) bool { return v.MysqlxEnableHelloNotice }).(pulumi.BoolOutput)
}

// ("mysqlxIdleWorkerThreadTimeout") DEPRECATED -- variable should not be settable and will be ignored
//
// Deprecated: The 'mysqlx_idle_worker_thread_timeout' field has been deprecated and may be removed in a future version. Do not use this field.
func (o GetMysqlConfigurationsConfigurationVariableOutput) MysqlxIdleWorkerThreadTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.MysqlxIdleWorkerThreadTimeout }).(pulumi.IntOutput)
}

// The number of seconds to wait for interactive clients to timeout.
func (o GetMysqlConfigurationsConfigurationVariableOutput) MysqlxInteractiveTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.MysqlxInteractiveTimeout }).(pulumi.IntOutput)
}

// Set the default compression level for the lz4 algorithm. ("mysqlxLz4DefaultCompressionLevel")
func (o GetMysqlConfigurationsConfigurationVariableOutput) MysqlxLz4defaultCompressionLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.MysqlxLz4defaultCompressionLevel }).(pulumi.IntOutput)
}

// Limit the upper bound of accepted compression levels for the lz4 algorithm. ("mysqlxLz4MaxClientCompressionLevel")
func (o GetMysqlConfigurationsConfigurationVariableOutput) MysqlxLz4maxClientCompressionLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.MysqlxLz4maxClientCompressionLevel }).(pulumi.IntOutput)
}

// The maximum size of network packets that can be received by X Plugin.
func (o GetMysqlConfigurationsConfigurationVariableOutput) MysqlxMaxAllowedPacket() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.MysqlxMaxAllowedPacket }).(pulumi.IntOutput)
}

// ("mysqlxMinWorkerThreads") DEPRECATED -- variable should not be settable and will be ignored
//
// Deprecated: The 'mysqlx_min_worker_threads' field has been deprecated and may be removed in a future version. Do not use this field.
func (o GetMysqlConfigurationsConfigurationVariableOutput) MysqlxMinWorkerThreads() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.MysqlxMinWorkerThreads }).(pulumi.IntOutput)
}

// The number of seconds that X Plugin waits for blocking read operations to complete. After this time, if the read operation is not successful, X Plugin closes the connection and returns a warning notice with the error code ER_IO_READ_ERROR to the client application.
func (o GetMysqlConfigurationsConfigurationVariableOutput) MysqlxReadTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.MysqlxReadTimeout }).(pulumi.IntOutput)
}

// The number of seconds that X Plugin waits for activity on a connection.
func (o GetMysqlConfigurationsConfigurationVariableOutput) MysqlxWaitTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.MysqlxWaitTimeout }).(pulumi.IntOutput)
}

// The number of seconds that X Plugin waits for blocking write operations to complete. After this time, if the write operation is not successful, X Plugin closes the connection.
func (o GetMysqlConfigurationsConfigurationVariableOutput) MysqlxWriteTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.MysqlxWriteTimeout }).(pulumi.IntOutput)
}

// Set the default compression level for the zstd algorithm. ("mysqlxZstdDefaultCompressionLevel")
func (o GetMysqlConfigurationsConfigurationVariableOutput) MysqlxZstdDefaultCompressionLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.MysqlxZstdDefaultCompressionLevel }).(pulumi.IntOutput)
}

// Limit the upper bound of accepted compression levels for the zstd algorithm. ("mysqlxZstdMaxClientCompressionLevel")
func (o GetMysqlConfigurationsConfigurationVariableOutput) MysqlxZstdMaxClientCompressionLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.MysqlxZstdMaxClientCompressionLevel }).(pulumi.IntOutput)
}

// The number of seconds to wait for more data from a connection before aborting the read.
func (o GetMysqlConfigurationsConfigurationVariableOutput) NetReadTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.NetReadTimeout }).(pulumi.IntOutput)
}

// The number of seconds to wait for a block to be written to a connection before aborting the write.
func (o GetMysqlConfigurationsConfigurationVariableOutput) NetWriteTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.NetWriteTimeout }).(pulumi.IntOutput)
}

// The optimizerSwitch system variable enables control over optimizer behavior. The value of this variable is a set of flags, each of which has a value of on or off to indicate whether the corresponding optimizer behavior is enabled or disabled. This variable has global and session values and can be changed at runtime. The global default can be set at server startup.
func (o GetMysqlConfigurationsConfigurationVariableOutput) OptimizerSwitch() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.OptimizerSwitch }).(pulumi.StringOutput)
}

// ("parserMaxMemSize")
func (o GetMysqlConfigurationsConfigurationVariableOutput) ParserMaxMemSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.ParserMaxMemSize }).(pulumi.StringOutput)
}

// ("queryAllocBlockSize") DEPRECATED -- variable should not be settable and will be ignored
//
// Deprecated: The 'query_alloc_block_size' field has been deprecated and may be removed in a future version. Do not use this field.
func (o GetMysqlConfigurationsConfigurationVariableOutput) QueryAllocBlockSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.QueryAllocBlockSize }).(pulumi.StringOutput)
}

// ("queryPreallocSize") DEPRECATED -- variable should not be settable and will be ignored
func (o GetMysqlConfigurationsConfigurationVariableOutput) QueryPreallocSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.QueryPreallocSize }).(pulumi.StringOutput)
}

// The limit on memory consumption for the range optimizer. A value of 0 means “no limit.” If an execution plan considered by the optimizer uses the range access method but the optimizer estimates that the amount of memory needed for this method would exceed the limit, it abandons the plan and considers other plans.
//
// Deprecated: The 'query_prealloc_size' field has been deprecated and may be removed in a future version. Do not use this field.
func (o GetMysqlConfigurationsConfigurationVariableOutput) RangeOptimizerMaxMemSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.RangeOptimizerMaxMemSize }).(pulumi.StringOutput)
}

// regexpTimeLimit corresponds to the MySQL system variable [regexpTimeLimit] (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_regexp_time_limit)
func (o GetMysqlConfigurationsConfigurationVariableOutput) RegexpTimeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.RegexpTimeLimit }).(pulumi.IntOutput)
}

// The maximum amount of space to use for all relay logs.
func (o GetMysqlConfigurationsConfigurationVariableOutput) RelayLogSpaceLimit() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.RelayLogSpaceLimit }).(pulumi.StringOutput)
}

// Specifies the number of seconds to wait for more data or a heartbeat signal from the source before the replica considers the connection broken, aborts the read, and tries to reconnect. Setting this variable has no immediate effect. The state of the variable applies on all subsequent START REPLICA commands.
func (o GetMysqlConfigurationsConfigurationVariableOutput) ReplicaNetTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.ReplicaNetTimeout }).(pulumi.IntOutput)
}

// Beginning with MySQL 8.0.26, slaveParallelWorkers is deprecated, and you should use replicaParallelWorkers instead. (Prior to MySQL 8.0.26, you must use slaveParallelWorkers to set the number of applier threads.)
func (o GetMysqlConfigurationsConfigurationVariableOutput) ReplicaParallelWorkers() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.ReplicaParallelWorkers }).(pulumi.IntOutput)
}

// From MySQL 8.0.26, use replicaTypeConversions in place of slave_type_conversions, which is deprecated from that release. In releases before MySQL 8.0.26, use slave_type_conversions.
func (o GetMysqlConfigurationsConfigurationVariableOutput) ReplicaTypeConversions() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.ReplicaTypeConversions }).(pulumi.StringOutput)
}

// Whether client connections to the server are required to use some form of secure transport. When this variable is enabled, the server permits only TCP/IP connections encrypted using TLS/SSL, or connections that use a socket file or shared memory. The server rejects nonsecure connection attempts, which fail with an ER_SECURE_TRANSPORT_REQUIRED error.
func (o GetMysqlConfigurationsConfigurationVariableOutput) RequireSecureTransport() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) bool { return v.RequireSecureTransport }).(pulumi.BoolOutput)
}

// Whether to resolve host names when checking client connections. If this variable is OFF, mysqld resolves host names when checking client connections. If it is ON, mysqld uses only IP numbers; in this case, all Host column values in the grant tables must be IP addresses. See Section 7.1.12.3, “DNS Lookups and the Host Cache”.
func (o GetMysqlConfigurationsConfigurationVariableOutput) SkipNameResolve() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) bool { return v.SkipNameResolve }).(pulumi.BoolOutput)
}

// Each session that must perform a sort allocates a buffer of this size.
func (o GetMysqlConfigurationsConfigurationVariableOutput) SortBufferSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.SortBufferSize }).(pulumi.StringOutput)
}

// Whether GIPK mode is in effect, in which case a MySQL replication source server adds a generated invisible primary key to any InnoDB table that is created without one.
func (o GetMysqlConfigurationsConfigurationVariableOutput) SqlGenerateInvisiblePrimaryKey() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) bool { return v.SqlGenerateInvisiblePrimaryKey }).(pulumi.BoolOutput)
}

// ("sqlMode")
func (o GetMysqlConfigurationsConfigurationVariableOutput) SqlMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.SqlMode }).(pulumi.StringOutput)
}

// ("sqlRequirePrimaryKey")
func (o GetMysqlConfigurationsConfigurationVariableOutput) SqlRequirePrimaryKey() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) bool { return v.SqlRequirePrimaryKey }).(pulumi.BoolOutput)
}

// ("sqlWarnings")
func (o GetMysqlConfigurationsConfigurationVariableOutput) SqlWarnings() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) bool { return v.SqlWarnings }).(pulumi.BoolOutput)
}

// The number of table definitions that can be stored in the table definition cache. If you use a large number of tables, you can create a large table definition cache to speed up opening of tables. The table definition cache takes less space and does not use file descriptors, unlike the normal table cache.
func (o GetMysqlConfigurationsConfigurationVariableOutput) TableDefinitionCache() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.TableDefinitionCache }).(pulumi.IntOutput)
}

// The number of open tables for all threads. Increasing this value increases the number of file descriptors that mysqld requires.
func (o GetMysqlConfigurationsConfigurationVariableOutput) TableOpenCache() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.TableOpenCache }).(pulumi.IntOutput)
}

// Defines the maximum amount of memory that can be occupied by the TempTable storage engine before it starts storing data on disk. The default value is 1073741824 bytes (1GiB). For more information, see Section 10.4.4, “Internal Temporary Table Use in MySQL”.
func (o GetMysqlConfigurationsConfigurationVariableOutput) TemptableMaxRam() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.TemptableMaxRam }).(pulumi.StringOutput)
}

// Controls whether the thread pool uses dedicated listener threads. If enabled, a listener thread in each thread group is dedicated to the task of listening for network events from clients, ensuring that the maximum number of query worker threads is no more than the value specified by threadPoolMaxTransactionsLimit. threadPoolDedicatedListeners corresponds to the MySQL Database Service-specific system variable thread_pool_dedicated_listeners.
func (o GetMysqlConfigurationsConfigurationVariableOutput) ThreadPoolDedicatedListeners() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) bool { return v.ThreadPoolDedicatedListeners }).(pulumi.BoolOutput)
}

// Limits the maximum number of open transactions to the defined value. The default value is 0, which enforces no limit. threadPoolMaxTransactionsLimit corresponds to the MySQL Database Service-specific system variable thread_pool_max_transactions_limit.
func (o GetMysqlConfigurationsConfigurationVariableOutput) ThreadPoolMaxTransactionsLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.ThreadPoolMaxTransactionsLimit }).(pulumi.IntOutput)
}

// The maximum number of query threads permitted in a thread group. The maximum value is 4096, but if threadPoolMaxTransactionsLimit is set, threadPoolQueryThreadsPerGroup must not exceed that value. The default value of 1 means there is one active query thread in each thread group, which works well for many loads. When you are using the high concurrency thread pool algorithm (thread_pool_algorithm = 1), consider increasing the value if you experience slower response times due to long-running transactions.
func (o GetMysqlConfigurationsConfigurationVariableOutput) ThreadPoolQueryThreadsPerGroup() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.ThreadPoolQueryThreadsPerGroup }).(pulumi.IntOutput)
}

// The number of thread groups in the thread pool. This is the most important parameter controlling thread pool performance. It affects how many statements can execute simultaneously. If a value outside the range of permissible values is specified, the thread pool plugin does not load and the server writes a message to the error log.
func (o GetMysqlConfigurationsConfigurationVariableOutput) ThreadPoolSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.ThreadPoolSize }).(pulumi.IntOutput)
}

// The delay period before executing a new transaction, in milliseconds. The maximum value is 300000 (5 minutes). A transaction delay can be used in cases where parallel transactions affect the performance of other operations due to resource contention. For example, if parallel transactions affect index creation or an online buffer pool resizing operation, you can configure a transaction delay to reduce resource contention while those operations are running.
func (o GetMysqlConfigurationsConfigurationVariableOutput) ThreadPoolTransactionDelay() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.ThreadPoolTransactionDelay }).(pulumi.IntOutput)
}

// Initializes the time zone for each client that connects.
func (o GetMysqlConfigurationsConfigurationVariableOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.TimeZone }).(pulumi.StringOutput)
}

// The maximum size of internal in-memory temporary tables. This variable does not apply to user-created MEMORY tables.
func (o GetMysqlConfigurationsConfigurationVariableOutput) TmpTableSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.TmpTableSize }).(pulumi.StringOutput)
}

// ("transactionIsolation")
func (o GetMysqlConfigurationsConfigurationVariableOutput) TransactionIsolation() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) string { return v.TransactionIsolation }).(pulumi.StringOutput)
}

// The number of seconds the server waits for activity on a noninteractive connection before closing it.
func (o GetMysqlConfigurationsConfigurationVariableOutput) WaitTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsConfigurationVariable) int { return v.WaitTimeout }).(pulumi.IntOutput)
}

type GetMysqlConfigurationsConfigurationVariableArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlConfigurationsConfigurationVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlConfigurationsConfigurationVariable)(nil)).Elem()
}

func (o GetMysqlConfigurationsConfigurationVariableArrayOutput) ToGetMysqlConfigurationsConfigurationVariableArrayOutput() GetMysqlConfigurationsConfigurationVariableArrayOutput {
	return o
}

func (o GetMysqlConfigurationsConfigurationVariableArrayOutput) ToGetMysqlConfigurationsConfigurationVariableArrayOutputWithContext(ctx context.Context) GetMysqlConfigurationsConfigurationVariableArrayOutput {
	return o
}

func (o GetMysqlConfigurationsConfigurationVariableArrayOutput) Index(i pulumi.IntInput) GetMysqlConfigurationsConfigurationVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlConfigurationsConfigurationVariable {
		return vs[0].([]GetMysqlConfigurationsConfigurationVariable)[vs[1].(int)]
	}).(GetMysqlConfigurationsConfigurationVariableOutput)
}

type GetMysqlConfigurationsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetMysqlConfigurationsFilterInput is an input type that accepts GetMysqlConfigurationsFilterArgs and GetMysqlConfigurationsFilterOutput values.
// You can construct a concrete instance of `GetMysqlConfigurationsFilterInput` via:
//
//	GetMysqlConfigurationsFilterArgs{...}
type GetMysqlConfigurationsFilterInput interface {
	pulumi.Input

	ToGetMysqlConfigurationsFilterOutput() GetMysqlConfigurationsFilterOutput
	ToGetMysqlConfigurationsFilterOutputWithContext(context.Context) GetMysqlConfigurationsFilterOutput
}

type GetMysqlConfigurationsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetMysqlConfigurationsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlConfigurationsFilter)(nil)).Elem()
}

func (i GetMysqlConfigurationsFilterArgs) ToGetMysqlConfigurationsFilterOutput() GetMysqlConfigurationsFilterOutput {
	return i.ToGetMysqlConfigurationsFilterOutputWithContext(context.Background())
}

func (i GetMysqlConfigurationsFilterArgs) ToGetMysqlConfigurationsFilterOutputWithContext(ctx context.Context) GetMysqlConfigurationsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlConfigurationsFilterOutput)
}

// GetMysqlConfigurationsFilterArrayInput is an input type that accepts GetMysqlConfigurationsFilterArray and GetMysqlConfigurationsFilterArrayOutput values.
// You can construct a concrete instance of `GetMysqlConfigurationsFilterArrayInput` via:
//
//	GetMysqlConfigurationsFilterArray{ GetMysqlConfigurationsFilterArgs{...} }
type GetMysqlConfigurationsFilterArrayInput interface {
	pulumi.Input

	ToGetMysqlConfigurationsFilterArrayOutput() GetMysqlConfigurationsFilterArrayOutput
	ToGetMysqlConfigurationsFilterArrayOutputWithContext(context.Context) GetMysqlConfigurationsFilterArrayOutput
}

type GetMysqlConfigurationsFilterArray []GetMysqlConfigurationsFilterInput

func (GetMysqlConfigurationsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlConfigurationsFilter)(nil)).Elem()
}

func (i GetMysqlConfigurationsFilterArray) ToGetMysqlConfigurationsFilterArrayOutput() GetMysqlConfigurationsFilterArrayOutput {
	return i.ToGetMysqlConfigurationsFilterArrayOutputWithContext(context.Background())
}

func (i GetMysqlConfigurationsFilterArray) ToGetMysqlConfigurationsFilterArrayOutputWithContext(ctx context.Context) GetMysqlConfigurationsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlConfigurationsFilterArrayOutput)
}

type GetMysqlConfigurationsFilterOutput struct{ *pulumi.OutputState }

func (GetMysqlConfigurationsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlConfigurationsFilter)(nil)).Elem()
}

func (o GetMysqlConfigurationsFilterOutput) ToGetMysqlConfigurationsFilterOutput() GetMysqlConfigurationsFilterOutput {
	return o
}

func (o GetMysqlConfigurationsFilterOutput) ToGetMysqlConfigurationsFilterOutputWithContext(ctx context.Context) GetMysqlConfigurationsFilterOutput {
	return o
}

func (o GetMysqlConfigurationsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetMysqlConfigurationsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetMysqlConfigurationsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMysqlConfigurationsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetMysqlConfigurationsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlConfigurationsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlConfigurationsFilter)(nil)).Elem()
}

func (o GetMysqlConfigurationsFilterArrayOutput) ToGetMysqlConfigurationsFilterArrayOutput() GetMysqlConfigurationsFilterArrayOutput {
	return o
}

func (o GetMysqlConfigurationsFilterArrayOutput) ToGetMysqlConfigurationsFilterArrayOutputWithContext(ctx context.Context) GetMysqlConfigurationsFilterArrayOutput {
	return o
}

func (o GetMysqlConfigurationsFilterArrayOutput) Index(i pulumi.IntInput) GetMysqlConfigurationsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlConfigurationsFilter {
		return vs[0].([]GetMysqlConfigurationsFilter)[vs[1].(int)]
	}).(GetMysqlConfigurationsFilterOutput)
}

type GetMysqlDbSystemBackupPolicy struct {
	// List of policies of a DB system to schedule cross-region DB system backup copy.
	CopyPolicies []GetMysqlDbSystemBackupPolicyCopyPolicy `pulumi:"copyPolicies"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Specifies if the DB System read endpoint is enabled or not.
	IsEnabled bool `pulumi:"isEnabled"`
	// The PITR policy for the DB System.
	PitrPolicies []GetMysqlDbSystemBackupPolicyPitrPolicy `pulumi:"pitrPolicies"`
	// The number of days automated backups are retained.
	RetentionInDays int `pulumi:"retentionInDays"`
	// Retains the backup to be deleted due to the retention policy in DELETE SCHEDULED state for 7 days before permanently deleting it.
	SoftDelete string `pulumi:"softDelete"`
	// The start time of the maintenance window.
	WindowStartTime string `pulumi:"windowStartTime"`
}

// GetMysqlDbSystemBackupPolicyInput is an input type that accepts GetMysqlDbSystemBackupPolicyArgs and GetMysqlDbSystemBackupPolicyOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemBackupPolicyInput` via:
//
//	GetMysqlDbSystemBackupPolicyArgs{...}
type GetMysqlDbSystemBackupPolicyInput interface {
	pulumi.Input

	ToGetMysqlDbSystemBackupPolicyOutput() GetMysqlDbSystemBackupPolicyOutput
	ToGetMysqlDbSystemBackupPolicyOutputWithContext(context.Context) GetMysqlDbSystemBackupPolicyOutput
}

type GetMysqlDbSystemBackupPolicyArgs struct {
	// List of policies of a DB system to schedule cross-region DB system backup copy.
	CopyPolicies GetMysqlDbSystemBackupPolicyCopyPolicyArrayInput `pulumi:"copyPolicies"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// Specifies if the DB System read endpoint is enabled or not.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The PITR policy for the DB System.
	PitrPolicies GetMysqlDbSystemBackupPolicyPitrPolicyArrayInput `pulumi:"pitrPolicies"`
	// The number of days automated backups are retained.
	RetentionInDays pulumi.IntInput `pulumi:"retentionInDays"`
	// Retains the backup to be deleted due to the retention policy in DELETE SCHEDULED state for 7 days before permanently deleting it.
	SoftDelete pulumi.StringInput `pulumi:"softDelete"`
	// The start time of the maintenance window.
	WindowStartTime pulumi.StringInput `pulumi:"windowStartTime"`
}

func (GetMysqlDbSystemBackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemBackupPolicy)(nil)).Elem()
}

func (i GetMysqlDbSystemBackupPolicyArgs) ToGetMysqlDbSystemBackupPolicyOutput() GetMysqlDbSystemBackupPolicyOutput {
	return i.ToGetMysqlDbSystemBackupPolicyOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemBackupPolicyArgs) ToGetMysqlDbSystemBackupPolicyOutputWithContext(ctx context.Context) GetMysqlDbSystemBackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemBackupPolicyOutput)
}

// GetMysqlDbSystemBackupPolicyArrayInput is an input type that accepts GetMysqlDbSystemBackupPolicyArray and GetMysqlDbSystemBackupPolicyArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemBackupPolicyArrayInput` via:
//
//	GetMysqlDbSystemBackupPolicyArray{ GetMysqlDbSystemBackupPolicyArgs{...} }
type GetMysqlDbSystemBackupPolicyArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemBackupPolicyArrayOutput() GetMysqlDbSystemBackupPolicyArrayOutput
	ToGetMysqlDbSystemBackupPolicyArrayOutputWithContext(context.Context) GetMysqlDbSystemBackupPolicyArrayOutput
}

type GetMysqlDbSystemBackupPolicyArray []GetMysqlDbSystemBackupPolicyInput

func (GetMysqlDbSystemBackupPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemBackupPolicy)(nil)).Elem()
}

func (i GetMysqlDbSystemBackupPolicyArray) ToGetMysqlDbSystemBackupPolicyArrayOutput() GetMysqlDbSystemBackupPolicyArrayOutput {
	return i.ToGetMysqlDbSystemBackupPolicyArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemBackupPolicyArray) ToGetMysqlDbSystemBackupPolicyArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemBackupPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemBackupPolicyArrayOutput)
}

type GetMysqlDbSystemBackupPolicyOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemBackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemBackupPolicy)(nil)).Elem()
}

func (o GetMysqlDbSystemBackupPolicyOutput) ToGetMysqlDbSystemBackupPolicyOutput() GetMysqlDbSystemBackupPolicyOutput {
	return o
}

func (o GetMysqlDbSystemBackupPolicyOutput) ToGetMysqlDbSystemBackupPolicyOutputWithContext(ctx context.Context) GetMysqlDbSystemBackupPolicyOutput {
	return o
}

// List of policies of a DB system to schedule cross-region DB system backup copy.
func (o GetMysqlDbSystemBackupPolicyOutput) CopyPolicies() GetMysqlDbSystemBackupPolicyCopyPolicyArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemBackupPolicy) []GetMysqlDbSystemBackupPolicyCopyPolicy { return v.CopyPolicies }).(GetMysqlDbSystemBackupPolicyCopyPolicyArrayOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetMysqlDbSystemBackupPolicyOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMysqlDbSystemBackupPolicy) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetMysqlDbSystemBackupPolicyOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMysqlDbSystemBackupPolicy) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Specifies if the DB System read endpoint is enabled or not.
func (o GetMysqlDbSystemBackupPolicyOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlDbSystemBackupPolicy) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The PITR policy for the DB System.
func (o GetMysqlDbSystemBackupPolicyOutput) PitrPolicies() GetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemBackupPolicy) []GetMysqlDbSystemBackupPolicyPitrPolicy { return v.PitrPolicies }).(GetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput)
}

// The number of days automated backups are retained.
func (o GetMysqlDbSystemBackupPolicyOutput) RetentionInDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemBackupPolicy) int { return v.RetentionInDays }).(pulumi.IntOutput)
}

// Retains the backup to be deleted due to the retention policy in DELETE SCHEDULED state for 7 days before permanently deleting it.
func (o GetMysqlDbSystemBackupPolicyOutput) SoftDelete() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemBackupPolicy) string { return v.SoftDelete }).(pulumi.StringOutput)
}

// The start time of the maintenance window.
func (o GetMysqlDbSystemBackupPolicyOutput) WindowStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemBackupPolicy) string { return v.WindowStartTime }).(pulumi.StringOutput)
}

type GetMysqlDbSystemBackupPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemBackupPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemBackupPolicy)(nil)).Elem()
}

func (o GetMysqlDbSystemBackupPolicyArrayOutput) ToGetMysqlDbSystemBackupPolicyArrayOutput() GetMysqlDbSystemBackupPolicyArrayOutput {
	return o
}

func (o GetMysqlDbSystemBackupPolicyArrayOutput) ToGetMysqlDbSystemBackupPolicyArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemBackupPolicyArrayOutput {
	return o
}

func (o GetMysqlDbSystemBackupPolicyArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemBackupPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemBackupPolicy {
		return vs[0].([]GetMysqlDbSystemBackupPolicy)[vs[1].(int)]
	}).(GetMysqlDbSystemBackupPolicyOutput)
}

type GetMysqlDbSystemBackupPolicyCopyPolicy struct {
	// Number of days to retain the copied DB system backup.
	BackupCopyRetentionInDays int `pulumi:"backupCopyRetentionInDays"`
	// The destination region name to which the DB system backup will be copied.
	CopyToRegion string `pulumi:"copyToRegion"`
}

// GetMysqlDbSystemBackupPolicyCopyPolicyInput is an input type that accepts GetMysqlDbSystemBackupPolicyCopyPolicyArgs and GetMysqlDbSystemBackupPolicyCopyPolicyOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemBackupPolicyCopyPolicyInput` via:
//
//	GetMysqlDbSystemBackupPolicyCopyPolicyArgs{...}
type GetMysqlDbSystemBackupPolicyCopyPolicyInput interface {
	pulumi.Input

	ToGetMysqlDbSystemBackupPolicyCopyPolicyOutput() GetMysqlDbSystemBackupPolicyCopyPolicyOutput
	ToGetMysqlDbSystemBackupPolicyCopyPolicyOutputWithContext(context.Context) GetMysqlDbSystemBackupPolicyCopyPolicyOutput
}

type GetMysqlDbSystemBackupPolicyCopyPolicyArgs struct {
	// Number of days to retain the copied DB system backup.
	BackupCopyRetentionInDays pulumi.IntInput `pulumi:"backupCopyRetentionInDays"`
	// The destination region name to which the DB system backup will be copied.
	CopyToRegion pulumi.StringInput `pulumi:"copyToRegion"`
}

func (GetMysqlDbSystemBackupPolicyCopyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemBackupPolicyCopyPolicy)(nil)).Elem()
}

func (i GetMysqlDbSystemBackupPolicyCopyPolicyArgs) ToGetMysqlDbSystemBackupPolicyCopyPolicyOutput() GetMysqlDbSystemBackupPolicyCopyPolicyOutput {
	return i.ToGetMysqlDbSystemBackupPolicyCopyPolicyOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemBackupPolicyCopyPolicyArgs) ToGetMysqlDbSystemBackupPolicyCopyPolicyOutputWithContext(ctx context.Context) GetMysqlDbSystemBackupPolicyCopyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemBackupPolicyCopyPolicyOutput)
}

// GetMysqlDbSystemBackupPolicyCopyPolicyArrayInput is an input type that accepts GetMysqlDbSystemBackupPolicyCopyPolicyArray and GetMysqlDbSystemBackupPolicyCopyPolicyArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemBackupPolicyCopyPolicyArrayInput` via:
//
//	GetMysqlDbSystemBackupPolicyCopyPolicyArray{ GetMysqlDbSystemBackupPolicyCopyPolicyArgs{...} }
type GetMysqlDbSystemBackupPolicyCopyPolicyArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemBackupPolicyCopyPolicyArrayOutput() GetMysqlDbSystemBackupPolicyCopyPolicyArrayOutput
	ToGetMysqlDbSystemBackupPolicyCopyPolicyArrayOutputWithContext(context.Context) GetMysqlDbSystemBackupPolicyCopyPolicyArrayOutput
}

type GetMysqlDbSystemBackupPolicyCopyPolicyArray []GetMysqlDbSystemBackupPolicyCopyPolicyInput

func (GetMysqlDbSystemBackupPolicyCopyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemBackupPolicyCopyPolicy)(nil)).Elem()
}

func (i GetMysqlDbSystemBackupPolicyCopyPolicyArray) ToGetMysqlDbSystemBackupPolicyCopyPolicyArrayOutput() GetMysqlDbSystemBackupPolicyCopyPolicyArrayOutput {
	return i.ToGetMysqlDbSystemBackupPolicyCopyPolicyArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemBackupPolicyCopyPolicyArray) ToGetMysqlDbSystemBackupPolicyCopyPolicyArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemBackupPolicyCopyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemBackupPolicyCopyPolicyArrayOutput)
}

type GetMysqlDbSystemBackupPolicyCopyPolicyOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemBackupPolicyCopyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemBackupPolicyCopyPolicy)(nil)).Elem()
}

func (o GetMysqlDbSystemBackupPolicyCopyPolicyOutput) ToGetMysqlDbSystemBackupPolicyCopyPolicyOutput() GetMysqlDbSystemBackupPolicyCopyPolicyOutput {
	return o
}

func (o GetMysqlDbSystemBackupPolicyCopyPolicyOutput) ToGetMysqlDbSystemBackupPolicyCopyPolicyOutputWithContext(ctx context.Context) GetMysqlDbSystemBackupPolicyCopyPolicyOutput {
	return o
}

// Number of days to retain the copied DB system backup.
func (o GetMysqlDbSystemBackupPolicyCopyPolicyOutput) BackupCopyRetentionInDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemBackupPolicyCopyPolicy) int { return v.BackupCopyRetentionInDays }).(pulumi.IntOutput)
}

// The destination region name to which the DB system backup will be copied.
func (o GetMysqlDbSystemBackupPolicyCopyPolicyOutput) CopyToRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemBackupPolicyCopyPolicy) string { return v.CopyToRegion }).(pulumi.StringOutput)
}

type GetMysqlDbSystemBackupPolicyCopyPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemBackupPolicyCopyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemBackupPolicyCopyPolicy)(nil)).Elem()
}

func (o GetMysqlDbSystemBackupPolicyCopyPolicyArrayOutput) ToGetMysqlDbSystemBackupPolicyCopyPolicyArrayOutput() GetMysqlDbSystemBackupPolicyCopyPolicyArrayOutput {
	return o
}

func (o GetMysqlDbSystemBackupPolicyCopyPolicyArrayOutput) ToGetMysqlDbSystemBackupPolicyCopyPolicyArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemBackupPolicyCopyPolicyArrayOutput {
	return o
}

func (o GetMysqlDbSystemBackupPolicyCopyPolicyArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemBackupPolicyCopyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemBackupPolicyCopyPolicy {
		return vs[0].([]GetMysqlDbSystemBackupPolicyCopyPolicy)[vs[1].(int)]
	}).(GetMysqlDbSystemBackupPolicyCopyPolicyOutput)
}

type GetMysqlDbSystemBackupPolicyPitrPolicy struct {
	// Specifies if the DB System read endpoint is enabled or not.
	IsEnabled bool `pulumi:"isEnabled"`
}

// GetMysqlDbSystemBackupPolicyPitrPolicyInput is an input type that accepts GetMysqlDbSystemBackupPolicyPitrPolicyArgs and GetMysqlDbSystemBackupPolicyPitrPolicyOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemBackupPolicyPitrPolicyInput` via:
//
//	GetMysqlDbSystemBackupPolicyPitrPolicyArgs{...}
type GetMysqlDbSystemBackupPolicyPitrPolicyInput interface {
	pulumi.Input

	ToGetMysqlDbSystemBackupPolicyPitrPolicyOutput() GetMysqlDbSystemBackupPolicyPitrPolicyOutput
	ToGetMysqlDbSystemBackupPolicyPitrPolicyOutputWithContext(context.Context) GetMysqlDbSystemBackupPolicyPitrPolicyOutput
}

type GetMysqlDbSystemBackupPolicyPitrPolicyArgs struct {
	// Specifies if the DB System read endpoint is enabled or not.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
}

func (GetMysqlDbSystemBackupPolicyPitrPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemBackupPolicyPitrPolicy)(nil)).Elem()
}

func (i GetMysqlDbSystemBackupPolicyPitrPolicyArgs) ToGetMysqlDbSystemBackupPolicyPitrPolicyOutput() GetMysqlDbSystemBackupPolicyPitrPolicyOutput {
	return i.ToGetMysqlDbSystemBackupPolicyPitrPolicyOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemBackupPolicyPitrPolicyArgs) ToGetMysqlDbSystemBackupPolicyPitrPolicyOutputWithContext(ctx context.Context) GetMysqlDbSystemBackupPolicyPitrPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemBackupPolicyPitrPolicyOutput)
}

// GetMysqlDbSystemBackupPolicyPitrPolicyArrayInput is an input type that accepts GetMysqlDbSystemBackupPolicyPitrPolicyArray and GetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemBackupPolicyPitrPolicyArrayInput` via:
//
//	GetMysqlDbSystemBackupPolicyPitrPolicyArray{ GetMysqlDbSystemBackupPolicyPitrPolicyArgs{...} }
type GetMysqlDbSystemBackupPolicyPitrPolicyArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput() GetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput
	ToGetMysqlDbSystemBackupPolicyPitrPolicyArrayOutputWithContext(context.Context) GetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput
}

type GetMysqlDbSystemBackupPolicyPitrPolicyArray []GetMysqlDbSystemBackupPolicyPitrPolicyInput

func (GetMysqlDbSystemBackupPolicyPitrPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemBackupPolicyPitrPolicy)(nil)).Elem()
}

func (i GetMysqlDbSystemBackupPolicyPitrPolicyArray) ToGetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput() GetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput {
	return i.ToGetMysqlDbSystemBackupPolicyPitrPolicyArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemBackupPolicyPitrPolicyArray) ToGetMysqlDbSystemBackupPolicyPitrPolicyArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput)
}

type GetMysqlDbSystemBackupPolicyPitrPolicyOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemBackupPolicyPitrPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemBackupPolicyPitrPolicy)(nil)).Elem()
}

func (o GetMysqlDbSystemBackupPolicyPitrPolicyOutput) ToGetMysqlDbSystemBackupPolicyPitrPolicyOutput() GetMysqlDbSystemBackupPolicyPitrPolicyOutput {
	return o
}

func (o GetMysqlDbSystemBackupPolicyPitrPolicyOutput) ToGetMysqlDbSystemBackupPolicyPitrPolicyOutputWithContext(ctx context.Context) GetMysqlDbSystemBackupPolicyPitrPolicyOutput {
	return o
}

// Specifies if the DB System read endpoint is enabled or not.
func (o GetMysqlDbSystemBackupPolicyPitrPolicyOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlDbSystemBackupPolicyPitrPolicy) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

type GetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemBackupPolicyPitrPolicy)(nil)).Elem()
}

func (o GetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput) ToGetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput() GetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput {
	return o
}

func (o GetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput) ToGetMysqlDbSystemBackupPolicyPitrPolicyArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput {
	return o
}

func (o GetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemBackupPolicyPitrPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemBackupPolicyPitrPolicy {
		return vs[0].([]GetMysqlDbSystemBackupPolicyPitrPolicy)[vs[1].(int)]
	}).(GetMysqlDbSystemBackupPolicyPitrPolicyOutput)
}

type GetMysqlDbSystemChannel struct {
	// The OCID of the compartment the DB System belongs in.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// The user-friendly name for the DB System. It does not have to be unique.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The OCID of the DB System.
	Id string `pulumi:"id"`
	// Specifies if the DB System read endpoint is enabled or not.
	IsEnabled bool `pulumi:"isEnabled"`
	// Additional information about the current lifecycleState.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Parameters detailing how to provision the initial data of the DB System.
	Sources []GetMysqlDbSystemChannelSource `pulumi:"sources"`
	// The current state of the DB System.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// Details about the Channel target.
	Targets []GetMysqlDbSystemChannelTarget `pulumi:"targets"`
	// The date and time the DB System was created.
	TimeCreated string `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetMysqlDbSystemChannelInput is an input type that accepts GetMysqlDbSystemChannelArgs and GetMysqlDbSystemChannelOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemChannelInput` via:
//
//	GetMysqlDbSystemChannelArgs{...}
type GetMysqlDbSystemChannelInput interface {
	pulumi.Input

	ToGetMysqlDbSystemChannelOutput() GetMysqlDbSystemChannelOutput
	ToGetMysqlDbSystemChannelOutputWithContext(context.Context) GetMysqlDbSystemChannelOutput
}

type GetMysqlDbSystemChannelArgs struct {
	// The OCID of the compartment the DB System belongs in.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// The user-friendly name for the DB System. It does not have to be unique.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// The OCID of the DB System.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies if the DB System read endpoint is enabled or not.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Additional information about the current lifecycleState.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// Parameters detailing how to provision the initial data of the DB System.
	Sources GetMysqlDbSystemChannelSourceArrayInput `pulumi:"sources"`
	// The current state of the DB System.
	State pulumi.StringInput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput `pulumi:"systemTags"`
	// Details about the Channel target.
	Targets GetMysqlDbSystemChannelTargetArrayInput `pulumi:"targets"`
	// The date and time the DB System was created.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetMysqlDbSystemChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemChannel)(nil)).Elem()
}

func (i GetMysqlDbSystemChannelArgs) ToGetMysqlDbSystemChannelOutput() GetMysqlDbSystemChannelOutput {
	return i.ToGetMysqlDbSystemChannelOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemChannelArgs) ToGetMysqlDbSystemChannelOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemChannelOutput)
}

// GetMysqlDbSystemChannelArrayInput is an input type that accepts GetMysqlDbSystemChannelArray and GetMysqlDbSystemChannelArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemChannelArrayInput` via:
//
//	GetMysqlDbSystemChannelArray{ GetMysqlDbSystemChannelArgs{...} }
type GetMysqlDbSystemChannelArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemChannelArrayOutput() GetMysqlDbSystemChannelArrayOutput
	ToGetMysqlDbSystemChannelArrayOutputWithContext(context.Context) GetMysqlDbSystemChannelArrayOutput
}

type GetMysqlDbSystemChannelArray []GetMysqlDbSystemChannelInput

func (GetMysqlDbSystemChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemChannel)(nil)).Elem()
}

func (i GetMysqlDbSystemChannelArray) ToGetMysqlDbSystemChannelArrayOutput() GetMysqlDbSystemChannelArrayOutput {
	return i.ToGetMysqlDbSystemChannelArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemChannelArray) ToGetMysqlDbSystemChannelArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemChannelArrayOutput)
}

type GetMysqlDbSystemChannelOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemChannel)(nil)).Elem()
}

func (o GetMysqlDbSystemChannelOutput) ToGetMysqlDbSystemChannelOutput() GetMysqlDbSystemChannelOutput {
	return o
}

func (o GetMysqlDbSystemChannelOutput) ToGetMysqlDbSystemChannelOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelOutput {
	return o
}

// The OCID of the compartment the DB System belongs in.
func (o GetMysqlDbSystemChannelOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannel) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetMysqlDbSystemChannelOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannel) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// The user-friendly name for the DB System. It does not have to be unique.
func (o GetMysqlDbSystemChannelOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannel) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetMysqlDbSystemChannelOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannel) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The OCID of the DB System.
func (o GetMysqlDbSystemChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannel) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies if the DB System read endpoint is enabled or not.
func (o GetMysqlDbSystemChannelOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannel) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Additional information about the current lifecycleState.
func (o GetMysqlDbSystemChannelOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannel) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Parameters detailing how to provision the initial data of the DB System.
func (o GetMysqlDbSystemChannelOutput) Sources() GetMysqlDbSystemChannelSourceArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannel) []GetMysqlDbSystemChannelSource { return v.Sources }).(GetMysqlDbSystemChannelSourceArrayOutput)
}

// The current state of the DB System.
func (o GetMysqlDbSystemChannelOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannel) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetMysqlDbSystemChannelOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannel) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// Details about the Channel target.
func (o GetMysqlDbSystemChannelOutput) Targets() GetMysqlDbSystemChannelTargetArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannel) []GetMysqlDbSystemChannelTarget { return v.Targets }).(GetMysqlDbSystemChannelTargetArrayOutput)
}

// The date and time the DB System was created.
func (o GetMysqlDbSystemChannelOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannel) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the DB System was last updated.
func (o GetMysqlDbSystemChannelOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannel) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetMysqlDbSystemChannelArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemChannel)(nil)).Elem()
}

func (o GetMysqlDbSystemChannelArrayOutput) ToGetMysqlDbSystemChannelArrayOutput() GetMysqlDbSystemChannelArrayOutput {
	return o
}

func (o GetMysqlDbSystemChannelArrayOutput) ToGetMysqlDbSystemChannelArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelArrayOutput {
	return o
}

func (o GetMysqlDbSystemChannelArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemChannel {
		return vs[0].([]GetMysqlDbSystemChannel)[vs[1].(int)]
	}).(GetMysqlDbSystemChannelOutput)
}

type GetMysqlDbSystemChannelSource struct {
	// Specifies how the replication channel handles replicated transactions without an identifier, enabling replication from a source that does not use transaction-id-based replication to a replica that does.
	AnonymousTransactionsHandlings []GetMysqlDbSystemChannelSourceAnonymousTransactionsHandling `pulumi:"anonymousTransactionsHandlings"`
	// The network address of the DB System.
	Hostname string `pulumi:"hostname"`
	// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
	Port int `pulumi:"port"`
	// The specific source identifier.
	SourceType string `pulumi:"sourceType"`
	// The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
	SslCaCertificates []GetMysqlDbSystemChannelSourceSslCaCertificate `pulumi:"sslCaCertificates"`
	// The SSL mode of the Channel.
	SslMode string `pulumi:"sslMode"`
	// The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
	Username string `pulumi:"username"`
}

// GetMysqlDbSystemChannelSourceInput is an input type that accepts GetMysqlDbSystemChannelSourceArgs and GetMysqlDbSystemChannelSourceOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemChannelSourceInput` via:
//
//	GetMysqlDbSystemChannelSourceArgs{...}
type GetMysqlDbSystemChannelSourceInput interface {
	pulumi.Input

	ToGetMysqlDbSystemChannelSourceOutput() GetMysqlDbSystemChannelSourceOutput
	ToGetMysqlDbSystemChannelSourceOutputWithContext(context.Context) GetMysqlDbSystemChannelSourceOutput
}

type GetMysqlDbSystemChannelSourceArgs struct {
	// Specifies how the replication channel handles replicated transactions without an identifier, enabling replication from a source that does not use transaction-id-based replication to a replica that does.
	AnonymousTransactionsHandlings GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayInput `pulumi:"anonymousTransactionsHandlings"`
	// The network address of the DB System.
	Hostname pulumi.StringInput `pulumi:"hostname"`
	// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
	Port pulumi.IntInput `pulumi:"port"`
	// The specific source identifier.
	SourceType pulumi.StringInput `pulumi:"sourceType"`
	// The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
	SslCaCertificates GetMysqlDbSystemChannelSourceSslCaCertificateArrayInput `pulumi:"sslCaCertificates"`
	// The SSL mode of the Channel.
	SslMode pulumi.StringInput `pulumi:"sslMode"`
	// The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetMysqlDbSystemChannelSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemChannelSource)(nil)).Elem()
}

func (i GetMysqlDbSystemChannelSourceArgs) ToGetMysqlDbSystemChannelSourceOutput() GetMysqlDbSystemChannelSourceOutput {
	return i.ToGetMysqlDbSystemChannelSourceOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemChannelSourceArgs) ToGetMysqlDbSystemChannelSourceOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemChannelSourceOutput)
}

// GetMysqlDbSystemChannelSourceArrayInput is an input type that accepts GetMysqlDbSystemChannelSourceArray and GetMysqlDbSystemChannelSourceArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemChannelSourceArrayInput` via:
//
//	GetMysqlDbSystemChannelSourceArray{ GetMysqlDbSystemChannelSourceArgs{...} }
type GetMysqlDbSystemChannelSourceArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemChannelSourceArrayOutput() GetMysqlDbSystemChannelSourceArrayOutput
	ToGetMysqlDbSystemChannelSourceArrayOutputWithContext(context.Context) GetMysqlDbSystemChannelSourceArrayOutput
}

type GetMysqlDbSystemChannelSourceArray []GetMysqlDbSystemChannelSourceInput

func (GetMysqlDbSystemChannelSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemChannelSource)(nil)).Elem()
}

func (i GetMysqlDbSystemChannelSourceArray) ToGetMysqlDbSystemChannelSourceArrayOutput() GetMysqlDbSystemChannelSourceArrayOutput {
	return i.ToGetMysqlDbSystemChannelSourceArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemChannelSourceArray) ToGetMysqlDbSystemChannelSourceArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemChannelSourceArrayOutput)
}

type GetMysqlDbSystemChannelSourceOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemChannelSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemChannelSource)(nil)).Elem()
}

func (o GetMysqlDbSystemChannelSourceOutput) ToGetMysqlDbSystemChannelSourceOutput() GetMysqlDbSystemChannelSourceOutput {
	return o
}

func (o GetMysqlDbSystemChannelSourceOutput) ToGetMysqlDbSystemChannelSourceOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelSourceOutput {
	return o
}

// Specifies how the replication channel handles replicated transactions without an identifier, enabling replication from a source that does not use transaction-id-based replication to a replica that does.
func (o GetMysqlDbSystemChannelSourceOutput) AnonymousTransactionsHandlings() GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannelSource) []GetMysqlDbSystemChannelSourceAnonymousTransactionsHandling {
		return v.AnonymousTransactionsHandlings
	}).(GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput)
}

// The network address of the DB System.
func (o GetMysqlDbSystemChannelSourceOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannelSource) string { return v.Hostname }).(pulumi.StringOutput)
}

// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
func (o GetMysqlDbSystemChannelSourceOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannelSource) int { return v.Port }).(pulumi.IntOutput)
}

// The specific source identifier.
func (o GetMysqlDbSystemChannelSourceOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannelSource) string { return v.SourceType }).(pulumi.StringOutput)
}

// The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
func (o GetMysqlDbSystemChannelSourceOutput) SslCaCertificates() GetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannelSource) []GetMysqlDbSystemChannelSourceSslCaCertificate {
		return v.SslCaCertificates
	}).(GetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput)
}

// The SSL mode of the Channel.
func (o GetMysqlDbSystemChannelSourceOutput) SslMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannelSource) string { return v.SslMode }).(pulumi.StringOutput)
}

// The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
func (o GetMysqlDbSystemChannelSourceOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannelSource) string { return v.Username }).(pulumi.StringOutput)
}

type GetMysqlDbSystemChannelSourceArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemChannelSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemChannelSource)(nil)).Elem()
}

func (o GetMysqlDbSystemChannelSourceArrayOutput) ToGetMysqlDbSystemChannelSourceArrayOutput() GetMysqlDbSystemChannelSourceArrayOutput {
	return o
}

func (o GetMysqlDbSystemChannelSourceArrayOutput) ToGetMysqlDbSystemChannelSourceArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelSourceArrayOutput {
	return o
}

func (o GetMysqlDbSystemChannelSourceArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemChannelSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemChannelSource {
		return vs[0].([]GetMysqlDbSystemChannelSource)[vs[1].(int)]
	}).(GetMysqlDbSystemChannelSourceOutput)
}

type GetMysqlDbSystemChannelSourceAnonymousTransactionsHandling struct {
	// Specifies one of the coordinates (file) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
	LastConfiguredLogFilename string `pulumi:"lastConfiguredLogFilename"`
	// Specifies one of the coordinates (offset) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
	LastConfiguredLogOffset string `pulumi:"lastConfiguredLogOffset"`
	// Specifies how the replication channel handles anonymous transactions.
	Policy string `pulumi:"policy"`
	// The UUID that is used as a prefix when generating transaction identifiers for anonymous transactions coming from the source. You can change the UUID later.
	Uuid string `pulumi:"uuid"`
}

// GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingInput is an input type that accepts GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArgs and GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingInput` via:
//
//	GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArgs{...}
type GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingInput interface {
	pulumi.Input

	ToGetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput() GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput
	ToGetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutputWithContext(context.Context) GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput
}

type GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArgs struct {
	// Specifies one of the coordinates (file) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
	LastConfiguredLogFilename pulumi.StringInput `pulumi:"lastConfiguredLogFilename"`
	// Specifies one of the coordinates (offset) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
	LastConfiguredLogOffset pulumi.StringInput `pulumi:"lastConfiguredLogOffset"`
	// Specifies how the replication channel handles anonymous transactions.
	Policy pulumi.StringInput `pulumi:"policy"`
	// The UUID that is used as a prefix when generating transaction identifiers for anonymous transactions coming from the source. You can change the UUID later.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemChannelSourceAnonymousTransactionsHandling)(nil)).Elem()
}

func (i GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArgs) ToGetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput() GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput {
	return i.ToGetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArgs) ToGetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput)
}

// GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayInput is an input type that accepts GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArray and GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayInput` via:
//
//	GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArray{ GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArgs{...} }
type GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput() GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput
	ToGetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutputWithContext(context.Context) GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput
}

type GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArray []GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingInput

func (GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemChannelSourceAnonymousTransactionsHandling)(nil)).Elem()
}

func (i GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArray) ToGetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput() GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput {
	return i.ToGetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArray) ToGetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput)
}

type GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemChannelSourceAnonymousTransactionsHandling)(nil)).Elem()
}

func (o GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput) ToGetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput() GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput {
	return o
}

func (o GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput) ToGetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput {
	return o
}

// Specifies one of the coordinates (file) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
func (o GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput) LastConfiguredLogFilename() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannelSourceAnonymousTransactionsHandling) string {
		return v.LastConfiguredLogFilename
	}).(pulumi.StringOutput)
}

// Specifies one of the coordinates (offset) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
func (o GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput) LastConfiguredLogOffset() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannelSourceAnonymousTransactionsHandling) string {
		return v.LastConfiguredLogOffset
	}).(pulumi.StringOutput)
}

// Specifies how the replication channel handles anonymous transactions.
func (o GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannelSourceAnonymousTransactionsHandling) string { return v.Policy }).(pulumi.StringOutput)
}

// The UUID that is used as a prefix when generating transaction identifiers for anonymous transactions coming from the source. You can change the UUID later.
func (o GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannelSourceAnonymousTransactionsHandling) string { return v.Uuid }).(pulumi.StringOutput)
}

type GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemChannelSourceAnonymousTransactionsHandling)(nil)).Elem()
}

func (o GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput) ToGetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput() GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput {
	return o
}

func (o GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput) ToGetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput {
	return o
}

func (o GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemChannelSourceAnonymousTransactionsHandling {
		return vs[0].([]GetMysqlDbSystemChannelSourceAnonymousTransactionsHandling)[vs[1].(int)]
	}).(GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput)
}

type GetMysqlDbSystemChannelSourceSslCaCertificate struct {
	// The type of CA certificate.
	CertificateType string `pulumi:"certificateType"`
	// The string containing the CA certificate in PEM format.
	Contents string `pulumi:"contents"`
}

// GetMysqlDbSystemChannelSourceSslCaCertificateInput is an input type that accepts GetMysqlDbSystemChannelSourceSslCaCertificateArgs and GetMysqlDbSystemChannelSourceSslCaCertificateOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemChannelSourceSslCaCertificateInput` via:
//
//	GetMysqlDbSystemChannelSourceSslCaCertificateArgs{...}
type GetMysqlDbSystemChannelSourceSslCaCertificateInput interface {
	pulumi.Input

	ToGetMysqlDbSystemChannelSourceSslCaCertificateOutput() GetMysqlDbSystemChannelSourceSslCaCertificateOutput
	ToGetMysqlDbSystemChannelSourceSslCaCertificateOutputWithContext(context.Context) GetMysqlDbSystemChannelSourceSslCaCertificateOutput
}

type GetMysqlDbSystemChannelSourceSslCaCertificateArgs struct {
	// The type of CA certificate.
	CertificateType pulumi.StringInput `pulumi:"certificateType"`
	// The string containing the CA certificate in PEM format.
	Contents pulumi.StringInput `pulumi:"contents"`
}

func (GetMysqlDbSystemChannelSourceSslCaCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemChannelSourceSslCaCertificate)(nil)).Elem()
}

func (i GetMysqlDbSystemChannelSourceSslCaCertificateArgs) ToGetMysqlDbSystemChannelSourceSslCaCertificateOutput() GetMysqlDbSystemChannelSourceSslCaCertificateOutput {
	return i.ToGetMysqlDbSystemChannelSourceSslCaCertificateOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemChannelSourceSslCaCertificateArgs) ToGetMysqlDbSystemChannelSourceSslCaCertificateOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelSourceSslCaCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemChannelSourceSslCaCertificateOutput)
}

// GetMysqlDbSystemChannelSourceSslCaCertificateArrayInput is an input type that accepts GetMysqlDbSystemChannelSourceSslCaCertificateArray and GetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemChannelSourceSslCaCertificateArrayInput` via:
//
//	GetMysqlDbSystemChannelSourceSslCaCertificateArray{ GetMysqlDbSystemChannelSourceSslCaCertificateArgs{...} }
type GetMysqlDbSystemChannelSourceSslCaCertificateArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput() GetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput
	ToGetMysqlDbSystemChannelSourceSslCaCertificateArrayOutputWithContext(context.Context) GetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput
}

type GetMysqlDbSystemChannelSourceSslCaCertificateArray []GetMysqlDbSystemChannelSourceSslCaCertificateInput

func (GetMysqlDbSystemChannelSourceSslCaCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemChannelSourceSslCaCertificate)(nil)).Elem()
}

func (i GetMysqlDbSystemChannelSourceSslCaCertificateArray) ToGetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput() GetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput {
	return i.ToGetMysqlDbSystemChannelSourceSslCaCertificateArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemChannelSourceSslCaCertificateArray) ToGetMysqlDbSystemChannelSourceSslCaCertificateArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput)
}

type GetMysqlDbSystemChannelSourceSslCaCertificateOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemChannelSourceSslCaCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemChannelSourceSslCaCertificate)(nil)).Elem()
}

func (o GetMysqlDbSystemChannelSourceSslCaCertificateOutput) ToGetMysqlDbSystemChannelSourceSslCaCertificateOutput() GetMysqlDbSystemChannelSourceSslCaCertificateOutput {
	return o
}

func (o GetMysqlDbSystemChannelSourceSslCaCertificateOutput) ToGetMysqlDbSystemChannelSourceSslCaCertificateOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelSourceSslCaCertificateOutput {
	return o
}

// The type of CA certificate.
func (o GetMysqlDbSystemChannelSourceSslCaCertificateOutput) CertificateType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannelSourceSslCaCertificate) string { return v.CertificateType }).(pulumi.StringOutput)
}

// The string containing the CA certificate in PEM format.
func (o GetMysqlDbSystemChannelSourceSslCaCertificateOutput) Contents() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannelSourceSslCaCertificate) string { return v.Contents }).(pulumi.StringOutput)
}

type GetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemChannelSourceSslCaCertificate)(nil)).Elem()
}

func (o GetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput) ToGetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput() GetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput {
	return o
}

func (o GetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput) ToGetMysqlDbSystemChannelSourceSslCaCertificateArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput {
	return o
}

func (o GetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemChannelSourceSslCaCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemChannelSourceSslCaCertificate {
		return vs[0].([]GetMysqlDbSystemChannelSourceSslCaCertificate)[vs[1].(int)]
	}).(GetMysqlDbSystemChannelSourceSslCaCertificateOutput)
}

type GetMysqlDbSystemChannelTarget struct {
	// The username for the replication applier of the target MySQL DB System.
	ApplierUsername string `pulumi:"applierUsername"`
	// The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
	ChannelName string `pulumi:"channelName"`
	// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId string `pulumi:"dbSystemId"`
	// Specifies the amount of time, in seconds, that the channel waits before  applying a transaction received from the source.
	DelayInSeconds int `pulumi:"delayInSeconds"`
	// Replication filter rules to be applied at the DB System Channel target.
	Filters []GetMysqlDbSystemChannelTargetFilter `pulumi:"filters"`
	// Specifies how a replication channel handles the creation and alteration of tables  that do not have a primary key.
	TablesWithoutPrimaryKeyHandling string `pulumi:"tablesWithoutPrimaryKeyHandling"`
	// The specific target identifier.
	TargetType string `pulumi:"targetType"`
}

// GetMysqlDbSystemChannelTargetInput is an input type that accepts GetMysqlDbSystemChannelTargetArgs and GetMysqlDbSystemChannelTargetOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemChannelTargetInput` via:
//
//	GetMysqlDbSystemChannelTargetArgs{...}
type GetMysqlDbSystemChannelTargetInput interface {
	pulumi.Input

	ToGetMysqlDbSystemChannelTargetOutput() GetMysqlDbSystemChannelTargetOutput
	ToGetMysqlDbSystemChannelTargetOutputWithContext(context.Context) GetMysqlDbSystemChannelTargetOutput
}

type GetMysqlDbSystemChannelTargetArgs struct {
	// The username for the replication applier of the target MySQL DB System.
	ApplierUsername pulumi.StringInput `pulumi:"applierUsername"`
	// The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId pulumi.StringInput `pulumi:"dbSystemId"`
	// Specifies the amount of time, in seconds, that the channel waits before  applying a transaction received from the source.
	DelayInSeconds pulumi.IntInput `pulumi:"delayInSeconds"`
	// Replication filter rules to be applied at the DB System Channel target.
	Filters GetMysqlDbSystemChannelTargetFilterArrayInput `pulumi:"filters"`
	// Specifies how a replication channel handles the creation and alteration of tables  that do not have a primary key.
	TablesWithoutPrimaryKeyHandling pulumi.StringInput `pulumi:"tablesWithoutPrimaryKeyHandling"`
	// The specific target identifier.
	TargetType pulumi.StringInput `pulumi:"targetType"`
}

func (GetMysqlDbSystemChannelTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemChannelTarget)(nil)).Elem()
}

func (i GetMysqlDbSystemChannelTargetArgs) ToGetMysqlDbSystemChannelTargetOutput() GetMysqlDbSystemChannelTargetOutput {
	return i.ToGetMysqlDbSystemChannelTargetOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemChannelTargetArgs) ToGetMysqlDbSystemChannelTargetOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemChannelTargetOutput)
}

// GetMysqlDbSystemChannelTargetArrayInput is an input type that accepts GetMysqlDbSystemChannelTargetArray and GetMysqlDbSystemChannelTargetArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemChannelTargetArrayInput` via:
//
//	GetMysqlDbSystemChannelTargetArray{ GetMysqlDbSystemChannelTargetArgs{...} }
type GetMysqlDbSystemChannelTargetArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemChannelTargetArrayOutput() GetMysqlDbSystemChannelTargetArrayOutput
	ToGetMysqlDbSystemChannelTargetArrayOutputWithContext(context.Context) GetMysqlDbSystemChannelTargetArrayOutput
}

type GetMysqlDbSystemChannelTargetArray []GetMysqlDbSystemChannelTargetInput

func (GetMysqlDbSystemChannelTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemChannelTarget)(nil)).Elem()
}

func (i GetMysqlDbSystemChannelTargetArray) ToGetMysqlDbSystemChannelTargetArrayOutput() GetMysqlDbSystemChannelTargetArrayOutput {
	return i.ToGetMysqlDbSystemChannelTargetArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemChannelTargetArray) ToGetMysqlDbSystemChannelTargetArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemChannelTargetArrayOutput)
}

type GetMysqlDbSystemChannelTargetOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemChannelTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemChannelTarget)(nil)).Elem()
}

func (o GetMysqlDbSystemChannelTargetOutput) ToGetMysqlDbSystemChannelTargetOutput() GetMysqlDbSystemChannelTargetOutput {
	return o
}

func (o GetMysqlDbSystemChannelTargetOutput) ToGetMysqlDbSystemChannelTargetOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelTargetOutput {
	return o
}

// The username for the replication applier of the target MySQL DB System.
func (o GetMysqlDbSystemChannelTargetOutput) ApplierUsername() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannelTarget) string { return v.ApplierUsername }).(pulumi.StringOutput)
}

// The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
func (o GetMysqlDbSystemChannelTargetOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannelTarget) string { return v.ChannelName }).(pulumi.StringOutput)
}

// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetMysqlDbSystemChannelTargetOutput) DbSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannelTarget) string { return v.DbSystemId }).(pulumi.StringOutput)
}

// Specifies the amount of time, in seconds, that the channel waits before  applying a transaction received from the source.
func (o GetMysqlDbSystemChannelTargetOutput) DelayInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannelTarget) int { return v.DelayInSeconds }).(pulumi.IntOutput)
}

// Replication filter rules to be applied at the DB System Channel target.
func (o GetMysqlDbSystemChannelTargetOutput) Filters() GetMysqlDbSystemChannelTargetFilterArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannelTarget) []GetMysqlDbSystemChannelTargetFilter { return v.Filters }).(GetMysqlDbSystemChannelTargetFilterArrayOutput)
}

// Specifies how a replication channel handles the creation and alteration of tables  that do not have a primary key.
func (o GetMysqlDbSystemChannelTargetOutput) TablesWithoutPrimaryKeyHandling() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannelTarget) string { return v.TablesWithoutPrimaryKeyHandling }).(pulumi.StringOutput)
}

// The specific target identifier.
func (o GetMysqlDbSystemChannelTargetOutput) TargetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannelTarget) string { return v.TargetType }).(pulumi.StringOutput)
}

type GetMysqlDbSystemChannelTargetArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemChannelTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemChannelTarget)(nil)).Elem()
}

func (o GetMysqlDbSystemChannelTargetArrayOutput) ToGetMysqlDbSystemChannelTargetArrayOutput() GetMysqlDbSystemChannelTargetArrayOutput {
	return o
}

func (o GetMysqlDbSystemChannelTargetArrayOutput) ToGetMysqlDbSystemChannelTargetArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelTargetArrayOutput {
	return o
}

func (o GetMysqlDbSystemChannelTargetArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemChannelTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemChannelTarget {
		return vs[0].([]GetMysqlDbSystemChannelTarget)[vs[1].(int)]
	}).(GetMysqlDbSystemChannelTargetOutput)
}

type GetMysqlDbSystemChannelTargetFilter struct {
	// The type of the filter rule.
	Type string `pulumi:"type"`
	// The body of the filter rule. This can represent a database, a table, or a database pair (represented as "db1->db2"). For more information, see [Replication Filtering Rules](https://dev.mysql.com/doc/refman/8.0/en/replication-rules.html).
	Value string `pulumi:"value"`
}

// GetMysqlDbSystemChannelTargetFilterInput is an input type that accepts GetMysqlDbSystemChannelTargetFilterArgs and GetMysqlDbSystemChannelTargetFilterOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemChannelTargetFilterInput` via:
//
//	GetMysqlDbSystemChannelTargetFilterArgs{...}
type GetMysqlDbSystemChannelTargetFilterInput interface {
	pulumi.Input

	ToGetMysqlDbSystemChannelTargetFilterOutput() GetMysqlDbSystemChannelTargetFilterOutput
	ToGetMysqlDbSystemChannelTargetFilterOutputWithContext(context.Context) GetMysqlDbSystemChannelTargetFilterOutput
}

type GetMysqlDbSystemChannelTargetFilterArgs struct {
	// The type of the filter rule.
	Type pulumi.StringInput `pulumi:"type"`
	// The body of the filter rule. This can represent a database, a table, or a database pair (represented as "db1->db2"). For more information, see [Replication Filtering Rules](https://dev.mysql.com/doc/refman/8.0/en/replication-rules.html).
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetMysqlDbSystemChannelTargetFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemChannelTargetFilter)(nil)).Elem()
}

func (i GetMysqlDbSystemChannelTargetFilterArgs) ToGetMysqlDbSystemChannelTargetFilterOutput() GetMysqlDbSystemChannelTargetFilterOutput {
	return i.ToGetMysqlDbSystemChannelTargetFilterOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemChannelTargetFilterArgs) ToGetMysqlDbSystemChannelTargetFilterOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelTargetFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemChannelTargetFilterOutput)
}

// GetMysqlDbSystemChannelTargetFilterArrayInput is an input type that accepts GetMysqlDbSystemChannelTargetFilterArray and GetMysqlDbSystemChannelTargetFilterArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemChannelTargetFilterArrayInput` via:
//
//	GetMysqlDbSystemChannelTargetFilterArray{ GetMysqlDbSystemChannelTargetFilterArgs{...} }
type GetMysqlDbSystemChannelTargetFilterArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemChannelTargetFilterArrayOutput() GetMysqlDbSystemChannelTargetFilterArrayOutput
	ToGetMysqlDbSystemChannelTargetFilterArrayOutputWithContext(context.Context) GetMysqlDbSystemChannelTargetFilterArrayOutput
}

type GetMysqlDbSystemChannelTargetFilterArray []GetMysqlDbSystemChannelTargetFilterInput

func (GetMysqlDbSystemChannelTargetFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemChannelTargetFilter)(nil)).Elem()
}

func (i GetMysqlDbSystemChannelTargetFilterArray) ToGetMysqlDbSystemChannelTargetFilterArrayOutput() GetMysqlDbSystemChannelTargetFilterArrayOutput {
	return i.ToGetMysqlDbSystemChannelTargetFilterArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemChannelTargetFilterArray) ToGetMysqlDbSystemChannelTargetFilterArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelTargetFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemChannelTargetFilterArrayOutput)
}

type GetMysqlDbSystemChannelTargetFilterOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemChannelTargetFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemChannelTargetFilter)(nil)).Elem()
}

func (o GetMysqlDbSystemChannelTargetFilterOutput) ToGetMysqlDbSystemChannelTargetFilterOutput() GetMysqlDbSystemChannelTargetFilterOutput {
	return o
}

func (o GetMysqlDbSystemChannelTargetFilterOutput) ToGetMysqlDbSystemChannelTargetFilterOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelTargetFilterOutput {
	return o
}

// The type of the filter rule.
func (o GetMysqlDbSystemChannelTargetFilterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannelTargetFilter) string { return v.Type }).(pulumi.StringOutput)
}

// The body of the filter rule. This can represent a database, a table, or a database pair (represented as "db1->db2"). For more information, see [Replication Filtering Rules](https://dev.mysql.com/doc/refman/8.0/en/replication-rules.html).
func (o GetMysqlDbSystemChannelTargetFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemChannelTargetFilter) string { return v.Value }).(pulumi.StringOutput)
}

type GetMysqlDbSystemChannelTargetFilterArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemChannelTargetFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemChannelTargetFilter)(nil)).Elem()
}

func (o GetMysqlDbSystemChannelTargetFilterArrayOutput) ToGetMysqlDbSystemChannelTargetFilterArrayOutput() GetMysqlDbSystemChannelTargetFilterArrayOutput {
	return o
}

func (o GetMysqlDbSystemChannelTargetFilterArrayOutput) ToGetMysqlDbSystemChannelTargetFilterArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemChannelTargetFilterArrayOutput {
	return o
}

func (o GetMysqlDbSystemChannelTargetFilterArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemChannelTargetFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemChannelTargetFilter {
		return vs[0].([]GetMysqlDbSystemChannelTargetFilter)[vs[1].(int)]
	}).(GetMysqlDbSystemChannelTargetFilterOutput)
}

type GetMysqlDbSystemCurrentPlacement struct {
	// The availability domain in which the DB System is placed.
	AvailabilityDomain string `pulumi:"availabilityDomain"`
	// The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	FaultDomain string `pulumi:"faultDomain"`
}

// GetMysqlDbSystemCurrentPlacementInput is an input type that accepts GetMysqlDbSystemCurrentPlacementArgs and GetMysqlDbSystemCurrentPlacementOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemCurrentPlacementInput` via:
//
//	GetMysqlDbSystemCurrentPlacementArgs{...}
type GetMysqlDbSystemCurrentPlacementInput interface {
	pulumi.Input

	ToGetMysqlDbSystemCurrentPlacementOutput() GetMysqlDbSystemCurrentPlacementOutput
	ToGetMysqlDbSystemCurrentPlacementOutputWithContext(context.Context) GetMysqlDbSystemCurrentPlacementOutput
}

type GetMysqlDbSystemCurrentPlacementArgs struct {
	// The availability domain in which the DB System is placed.
	AvailabilityDomain pulumi.StringInput `pulumi:"availabilityDomain"`
	// The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	FaultDomain pulumi.StringInput `pulumi:"faultDomain"`
}

func (GetMysqlDbSystemCurrentPlacementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemCurrentPlacement)(nil)).Elem()
}

func (i GetMysqlDbSystemCurrentPlacementArgs) ToGetMysqlDbSystemCurrentPlacementOutput() GetMysqlDbSystemCurrentPlacementOutput {
	return i.ToGetMysqlDbSystemCurrentPlacementOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemCurrentPlacementArgs) ToGetMysqlDbSystemCurrentPlacementOutputWithContext(ctx context.Context) GetMysqlDbSystemCurrentPlacementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemCurrentPlacementOutput)
}

// GetMysqlDbSystemCurrentPlacementArrayInput is an input type that accepts GetMysqlDbSystemCurrentPlacementArray and GetMysqlDbSystemCurrentPlacementArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemCurrentPlacementArrayInput` via:
//
//	GetMysqlDbSystemCurrentPlacementArray{ GetMysqlDbSystemCurrentPlacementArgs{...} }
type GetMysqlDbSystemCurrentPlacementArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemCurrentPlacementArrayOutput() GetMysqlDbSystemCurrentPlacementArrayOutput
	ToGetMysqlDbSystemCurrentPlacementArrayOutputWithContext(context.Context) GetMysqlDbSystemCurrentPlacementArrayOutput
}

type GetMysqlDbSystemCurrentPlacementArray []GetMysqlDbSystemCurrentPlacementInput

func (GetMysqlDbSystemCurrentPlacementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemCurrentPlacement)(nil)).Elem()
}

func (i GetMysqlDbSystemCurrentPlacementArray) ToGetMysqlDbSystemCurrentPlacementArrayOutput() GetMysqlDbSystemCurrentPlacementArrayOutput {
	return i.ToGetMysqlDbSystemCurrentPlacementArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemCurrentPlacementArray) ToGetMysqlDbSystemCurrentPlacementArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemCurrentPlacementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemCurrentPlacementArrayOutput)
}

type GetMysqlDbSystemCurrentPlacementOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemCurrentPlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemCurrentPlacement)(nil)).Elem()
}

func (o GetMysqlDbSystemCurrentPlacementOutput) ToGetMysqlDbSystemCurrentPlacementOutput() GetMysqlDbSystemCurrentPlacementOutput {
	return o
}

func (o GetMysqlDbSystemCurrentPlacementOutput) ToGetMysqlDbSystemCurrentPlacementOutputWithContext(ctx context.Context) GetMysqlDbSystemCurrentPlacementOutput {
	return o
}

// The availability domain in which the DB System is placed.
func (o GetMysqlDbSystemCurrentPlacementOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemCurrentPlacement) string { return v.AvailabilityDomain }).(pulumi.StringOutput)
}

// The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
func (o GetMysqlDbSystemCurrentPlacementOutput) FaultDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemCurrentPlacement) string { return v.FaultDomain }).(pulumi.StringOutput)
}

type GetMysqlDbSystemCurrentPlacementArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemCurrentPlacementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemCurrentPlacement)(nil)).Elem()
}

func (o GetMysqlDbSystemCurrentPlacementArrayOutput) ToGetMysqlDbSystemCurrentPlacementArrayOutput() GetMysqlDbSystemCurrentPlacementArrayOutput {
	return o
}

func (o GetMysqlDbSystemCurrentPlacementArrayOutput) ToGetMysqlDbSystemCurrentPlacementArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemCurrentPlacementArrayOutput {
	return o
}

func (o GetMysqlDbSystemCurrentPlacementArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemCurrentPlacementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemCurrentPlacement {
		return vs[0].([]GetMysqlDbSystemCurrentPlacement)[vs[1].(int)]
	}).(GetMysqlDbSystemCurrentPlacementOutput)
}

type GetMysqlDbSystemCustomerContact struct {
	// The email address used by Oracle to send notifications regarding the DB System.
	Email string `pulumi:"email"`
}

// GetMysqlDbSystemCustomerContactInput is an input type that accepts GetMysqlDbSystemCustomerContactArgs and GetMysqlDbSystemCustomerContactOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemCustomerContactInput` via:
//
//	GetMysqlDbSystemCustomerContactArgs{...}
type GetMysqlDbSystemCustomerContactInput interface {
	pulumi.Input

	ToGetMysqlDbSystemCustomerContactOutput() GetMysqlDbSystemCustomerContactOutput
	ToGetMysqlDbSystemCustomerContactOutputWithContext(context.Context) GetMysqlDbSystemCustomerContactOutput
}

type GetMysqlDbSystemCustomerContactArgs struct {
	// The email address used by Oracle to send notifications regarding the DB System.
	Email pulumi.StringInput `pulumi:"email"`
}

func (GetMysqlDbSystemCustomerContactArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemCustomerContact)(nil)).Elem()
}

func (i GetMysqlDbSystemCustomerContactArgs) ToGetMysqlDbSystemCustomerContactOutput() GetMysqlDbSystemCustomerContactOutput {
	return i.ToGetMysqlDbSystemCustomerContactOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemCustomerContactArgs) ToGetMysqlDbSystemCustomerContactOutputWithContext(ctx context.Context) GetMysqlDbSystemCustomerContactOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemCustomerContactOutput)
}

// GetMysqlDbSystemCustomerContactArrayInput is an input type that accepts GetMysqlDbSystemCustomerContactArray and GetMysqlDbSystemCustomerContactArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemCustomerContactArrayInput` via:
//
//	GetMysqlDbSystemCustomerContactArray{ GetMysqlDbSystemCustomerContactArgs{...} }
type GetMysqlDbSystemCustomerContactArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemCustomerContactArrayOutput() GetMysqlDbSystemCustomerContactArrayOutput
	ToGetMysqlDbSystemCustomerContactArrayOutputWithContext(context.Context) GetMysqlDbSystemCustomerContactArrayOutput
}

type GetMysqlDbSystemCustomerContactArray []GetMysqlDbSystemCustomerContactInput

func (GetMysqlDbSystemCustomerContactArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemCustomerContact)(nil)).Elem()
}

func (i GetMysqlDbSystemCustomerContactArray) ToGetMysqlDbSystemCustomerContactArrayOutput() GetMysqlDbSystemCustomerContactArrayOutput {
	return i.ToGetMysqlDbSystemCustomerContactArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemCustomerContactArray) ToGetMysqlDbSystemCustomerContactArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemCustomerContactArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemCustomerContactArrayOutput)
}

type GetMysqlDbSystemCustomerContactOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemCustomerContactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemCustomerContact)(nil)).Elem()
}

func (o GetMysqlDbSystemCustomerContactOutput) ToGetMysqlDbSystemCustomerContactOutput() GetMysqlDbSystemCustomerContactOutput {
	return o
}

func (o GetMysqlDbSystemCustomerContactOutput) ToGetMysqlDbSystemCustomerContactOutputWithContext(ctx context.Context) GetMysqlDbSystemCustomerContactOutput {
	return o
}

// The email address used by Oracle to send notifications regarding the DB System.
func (o GetMysqlDbSystemCustomerContactOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemCustomerContact) string { return v.Email }).(pulumi.StringOutput)
}

type GetMysqlDbSystemCustomerContactArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemCustomerContactArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemCustomerContact)(nil)).Elem()
}

func (o GetMysqlDbSystemCustomerContactArrayOutput) ToGetMysqlDbSystemCustomerContactArrayOutput() GetMysqlDbSystemCustomerContactArrayOutput {
	return o
}

func (o GetMysqlDbSystemCustomerContactArrayOutput) ToGetMysqlDbSystemCustomerContactArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemCustomerContactArrayOutput {
	return o
}

func (o GetMysqlDbSystemCustomerContactArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemCustomerContactOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemCustomerContact {
		return vs[0].([]GetMysqlDbSystemCustomerContact)[vs[1].(int)]
	}).(GetMysqlDbSystemCustomerContactOutput)
}

type GetMysqlDbSystemDataStorage struct {
	// The actual allocated storage size for the DB System. This may be higher than dataStorageSizeInGBs if an automatic storage expansion has occurred.
	AllocatedStorageSizeInGbs int `pulumi:"allocatedStorageSizeInGbs"`
	// Initial size of the data volume in GiBs that will be created and attached.
	DataStorageSizeInGb int `pulumi:"dataStorageSizeInGb"`
	// The absolute limit the DB System's storage size may ever expand to, either manually or automatically. This limit is based based on the initial dataStorageSizeInGBs when the DB System was first created. Both dataStorageSizeInGBs and maxDataStorageSizeInGBs can not exceed this value.
	DataStorageSizeLimitInGbs int `pulumi:"dataStorageSizeLimitInGbs"`
	// Enable/disable automatic storage expansion. When set to true, the DB System will automatically add storage incrementally up to the value specified in maxStorageSizeInGBs.
	IsAutoExpandStorageEnabled bool `pulumi:"isAutoExpandStorageEnabled"`
	// Maximum storage size this DB System can expand to. When isAutoExpandStorageEnabled is set to true, the DB System will add storage incrementally up to this value.
	MaxStorageSizeInGbs int `pulumi:"maxStorageSizeInGbs"`
}

// GetMysqlDbSystemDataStorageInput is an input type that accepts GetMysqlDbSystemDataStorageArgs and GetMysqlDbSystemDataStorageOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemDataStorageInput` via:
//
//	GetMysqlDbSystemDataStorageArgs{...}
type GetMysqlDbSystemDataStorageInput interface {
	pulumi.Input

	ToGetMysqlDbSystemDataStorageOutput() GetMysqlDbSystemDataStorageOutput
	ToGetMysqlDbSystemDataStorageOutputWithContext(context.Context) GetMysqlDbSystemDataStorageOutput
}

type GetMysqlDbSystemDataStorageArgs struct {
	// The actual allocated storage size for the DB System. This may be higher than dataStorageSizeInGBs if an automatic storage expansion has occurred.
	AllocatedStorageSizeInGbs pulumi.IntInput `pulumi:"allocatedStorageSizeInGbs"`
	// Initial size of the data volume in GiBs that will be created and attached.
	DataStorageSizeInGb pulumi.IntInput `pulumi:"dataStorageSizeInGb"`
	// The absolute limit the DB System's storage size may ever expand to, either manually or automatically. This limit is based based on the initial dataStorageSizeInGBs when the DB System was first created. Both dataStorageSizeInGBs and maxDataStorageSizeInGBs can not exceed this value.
	DataStorageSizeLimitInGbs pulumi.IntInput `pulumi:"dataStorageSizeLimitInGbs"`
	// Enable/disable automatic storage expansion. When set to true, the DB System will automatically add storage incrementally up to the value specified in maxStorageSizeInGBs.
	IsAutoExpandStorageEnabled pulumi.BoolInput `pulumi:"isAutoExpandStorageEnabled"`
	// Maximum storage size this DB System can expand to. When isAutoExpandStorageEnabled is set to true, the DB System will add storage incrementally up to this value.
	MaxStorageSizeInGbs pulumi.IntInput `pulumi:"maxStorageSizeInGbs"`
}

func (GetMysqlDbSystemDataStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemDataStorage)(nil)).Elem()
}

func (i GetMysqlDbSystemDataStorageArgs) ToGetMysqlDbSystemDataStorageOutput() GetMysqlDbSystemDataStorageOutput {
	return i.ToGetMysqlDbSystemDataStorageOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemDataStorageArgs) ToGetMysqlDbSystemDataStorageOutputWithContext(ctx context.Context) GetMysqlDbSystemDataStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemDataStorageOutput)
}

// GetMysqlDbSystemDataStorageArrayInput is an input type that accepts GetMysqlDbSystemDataStorageArray and GetMysqlDbSystemDataStorageArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemDataStorageArrayInput` via:
//
//	GetMysqlDbSystemDataStorageArray{ GetMysqlDbSystemDataStorageArgs{...} }
type GetMysqlDbSystemDataStorageArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemDataStorageArrayOutput() GetMysqlDbSystemDataStorageArrayOutput
	ToGetMysqlDbSystemDataStorageArrayOutputWithContext(context.Context) GetMysqlDbSystemDataStorageArrayOutput
}

type GetMysqlDbSystemDataStorageArray []GetMysqlDbSystemDataStorageInput

func (GetMysqlDbSystemDataStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemDataStorage)(nil)).Elem()
}

func (i GetMysqlDbSystemDataStorageArray) ToGetMysqlDbSystemDataStorageArrayOutput() GetMysqlDbSystemDataStorageArrayOutput {
	return i.ToGetMysqlDbSystemDataStorageArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemDataStorageArray) ToGetMysqlDbSystemDataStorageArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemDataStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemDataStorageArrayOutput)
}

type GetMysqlDbSystemDataStorageOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemDataStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemDataStorage)(nil)).Elem()
}

func (o GetMysqlDbSystemDataStorageOutput) ToGetMysqlDbSystemDataStorageOutput() GetMysqlDbSystemDataStorageOutput {
	return o
}

func (o GetMysqlDbSystemDataStorageOutput) ToGetMysqlDbSystemDataStorageOutputWithContext(ctx context.Context) GetMysqlDbSystemDataStorageOutput {
	return o
}

// The actual allocated storage size for the DB System. This may be higher than dataStorageSizeInGBs if an automatic storage expansion has occurred.
func (o GetMysqlDbSystemDataStorageOutput) AllocatedStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemDataStorage) int { return v.AllocatedStorageSizeInGbs }).(pulumi.IntOutput)
}

// Initial size of the data volume in GiBs that will be created and attached.
func (o GetMysqlDbSystemDataStorageOutput) DataStorageSizeInGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemDataStorage) int { return v.DataStorageSizeInGb }).(pulumi.IntOutput)
}

// The absolute limit the DB System's storage size may ever expand to, either manually or automatically. This limit is based based on the initial dataStorageSizeInGBs when the DB System was first created. Both dataStorageSizeInGBs and maxDataStorageSizeInGBs can not exceed this value.
func (o GetMysqlDbSystemDataStorageOutput) DataStorageSizeLimitInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemDataStorage) int { return v.DataStorageSizeLimitInGbs }).(pulumi.IntOutput)
}

// Enable/disable automatic storage expansion. When set to true, the DB System will automatically add storage incrementally up to the value specified in maxStorageSizeInGBs.
func (o GetMysqlDbSystemDataStorageOutput) IsAutoExpandStorageEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlDbSystemDataStorage) bool { return v.IsAutoExpandStorageEnabled }).(pulumi.BoolOutput)
}

// Maximum storage size this DB System can expand to. When isAutoExpandStorageEnabled is set to true, the DB System will add storage incrementally up to this value.
func (o GetMysqlDbSystemDataStorageOutput) MaxStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemDataStorage) int { return v.MaxStorageSizeInGbs }).(pulumi.IntOutput)
}

type GetMysqlDbSystemDataStorageArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemDataStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemDataStorage)(nil)).Elem()
}

func (o GetMysqlDbSystemDataStorageArrayOutput) ToGetMysqlDbSystemDataStorageArrayOutput() GetMysqlDbSystemDataStorageArrayOutput {
	return o
}

func (o GetMysqlDbSystemDataStorageArrayOutput) ToGetMysqlDbSystemDataStorageArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemDataStorageArrayOutput {
	return o
}

func (o GetMysqlDbSystemDataStorageArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemDataStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemDataStorage {
		return vs[0].([]GetMysqlDbSystemDataStorage)[vs[1].(int)]
	}).(GetMysqlDbSystemDataStorageOutput)
}

type GetMysqlDbSystemDeletionPolicy struct {
	// Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
	AutomaticBackupRetention string `pulumi:"automaticBackupRetention"`
	// Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
	FinalBackup string `pulumi:"finalBackup"`
	// Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
	IsDeleteProtected bool `pulumi:"isDeleteProtected"`
}

// GetMysqlDbSystemDeletionPolicyInput is an input type that accepts GetMysqlDbSystemDeletionPolicyArgs and GetMysqlDbSystemDeletionPolicyOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemDeletionPolicyInput` via:
//
//	GetMysqlDbSystemDeletionPolicyArgs{...}
type GetMysqlDbSystemDeletionPolicyInput interface {
	pulumi.Input

	ToGetMysqlDbSystemDeletionPolicyOutput() GetMysqlDbSystemDeletionPolicyOutput
	ToGetMysqlDbSystemDeletionPolicyOutputWithContext(context.Context) GetMysqlDbSystemDeletionPolicyOutput
}

type GetMysqlDbSystemDeletionPolicyArgs struct {
	// Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
	AutomaticBackupRetention pulumi.StringInput `pulumi:"automaticBackupRetention"`
	// Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
	FinalBackup pulumi.StringInput `pulumi:"finalBackup"`
	// Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
	IsDeleteProtected pulumi.BoolInput `pulumi:"isDeleteProtected"`
}

func (GetMysqlDbSystemDeletionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemDeletionPolicy)(nil)).Elem()
}

func (i GetMysqlDbSystemDeletionPolicyArgs) ToGetMysqlDbSystemDeletionPolicyOutput() GetMysqlDbSystemDeletionPolicyOutput {
	return i.ToGetMysqlDbSystemDeletionPolicyOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemDeletionPolicyArgs) ToGetMysqlDbSystemDeletionPolicyOutputWithContext(ctx context.Context) GetMysqlDbSystemDeletionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemDeletionPolicyOutput)
}

// GetMysqlDbSystemDeletionPolicyArrayInput is an input type that accepts GetMysqlDbSystemDeletionPolicyArray and GetMysqlDbSystemDeletionPolicyArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemDeletionPolicyArrayInput` via:
//
//	GetMysqlDbSystemDeletionPolicyArray{ GetMysqlDbSystemDeletionPolicyArgs{...} }
type GetMysqlDbSystemDeletionPolicyArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemDeletionPolicyArrayOutput() GetMysqlDbSystemDeletionPolicyArrayOutput
	ToGetMysqlDbSystemDeletionPolicyArrayOutputWithContext(context.Context) GetMysqlDbSystemDeletionPolicyArrayOutput
}

type GetMysqlDbSystemDeletionPolicyArray []GetMysqlDbSystemDeletionPolicyInput

func (GetMysqlDbSystemDeletionPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemDeletionPolicy)(nil)).Elem()
}

func (i GetMysqlDbSystemDeletionPolicyArray) ToGetMysqlDbSystemDeletionPolicyArrayOutput() GetMysqlDbSystemDeletionPolicyArrayOutput {
	return i.ToGetMysqlDbSystemDeletionPolicyArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemDeletionPolicyArray) ToGetMysqlDbSystemDeletionPolicyArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemDeletionPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemDeletionPolicyArrayOutput)
}

type GetMysqlDbSystemDeletionPolicyOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemDeletionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemDeletionPolicy)(nil)).Elem()
}

func (o GetMysqlDbSystemDeletionPolicyOutput) ToGetMysqlDbSystemDeletionPolicyOutput() GetMysqlDbSystemDeletionPolicyOutput {
	return o
}

func (o GetMysqlDbSystemDeletionPolicyOutput) ToGetMysqlDbSystemDeletionPolicyOutputWithContext(ctx context.Context) GetMysqlDbSystemDeletionPolicyOutput {
	return o
}

// Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
func (o GetMysqlDbSystemDeletionPolicyOutput) AutomaticBackupRetention() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemDeletionPolicy) string { return v.AutomaticBackupRetention }).(pulumi.StringOutput)
}

// Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
func (o GetMysqlDbSystemDeletionPolicyOutput) FinalBackup() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemDeletionPolicy) string { return v.FinalBackup }).(pulumi.StringOutput)
}

// Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
func (o GetMysqlDbSystemDeletionPolicyOutput) IsDeleteProtected() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlDbSystemDeletionPolicy) bool { return v.IsDeleteProtected }).(pulumi.BoolOutput)
}

type GetMysqlDbSystemDeletionPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemDeletionPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemDeletionPolicy)(nil)).Elem()
}

func (o GetMysqlDbSystemDeletionPolicyArrayOutput) ToGetMysqlDbSystemDeletionPolicyArrayOutput() GetMysqlDbSystemDeletionPolicyArrayOutput {
	return o
}

func (o GetMysqlDbSystemDeletionPolicyArrayOutput) ToGetMysqlDbSystemDeletionPolicyArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemDeletionPolicyArrayOutput {
	return o
}

func (o GetMysqlDbSystemDeletionPolicyArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemDeletionPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemDeletionPolicy {
		return vs[0].([]GetMysqlDbSystemDeletionPolicy)[vs[1].(int)]
	}).(GetMysqlDbSystemDeletionPolicyOutput)
}

type GetMysqlDbSystemEncryptData struct {
	// Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
	KeyGenerationType string `pulumi:"keyGenerationType"`
	// The OCID of the key to use.
	KeyId string `pulumi:"keyId"`
}

// GetMysqlDbSystemEncryptDataInput is an input type that accepts GetMysqlDbSystemEncryptDataArgs and GetMysqlDbSystemEncryptDataOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemEncryptDataInput` via:
//
//	GetMysqlDbSystemEncryptDataArgs{...}
type GetMysqlDbSystemEncryptDataInput interface {
	pulumi.Input

	ToGetMysqlDbSystemEncryptDataOutput() GetMysqlDbSystemEncryptDataOutput
	ToGetMysqlDbSystemEncryptDataOutputWithContext(context.Context) GetMysqlDbSystemEncryptDataOutput
}

type GetMysqlDbSystemEncryptDataArgs struct {
	// Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
	KeyGenerationType pulumi.StringInput `pulumi:"keyGenerationType"`
	// The OCID of the key to use.
	KeyId pulumi.StringInput `pulumi:"keyId"`
}

func (GetMysqlDbSystemEncryptDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemEncryptData)(nil)).Elem()
}

func (i GetMysqlDbSystemEncryptDataArgs) ToGetMysqlDbSystemEncryptDataOutput() GetMysqlDbSystemEncryptDataOutput {
	return i.ToGetMysqlDbSystemEncryptDataOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemEncryptDataArgs) ToGetMysqlDbSystemEncryptDataOutputWithContext(ctx context.Context) GetMysqlDbSystemEncryptDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemEncryptDataOutput)
}

// GetMysqlDbSystemEncryptDataArrayInput is an input type that accepts GetMysqlDbSystemEncryptDataArray and GetMysqlDbSystemEncryptDataArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemEncryptDataArrayInput` via:
//
//	GetMysqlDbSystemEncryptDataArray{ GetMysqlDbSystemEncryptDataArgs{...} }
type GetMysqlDbSystemEncryptDataArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemEncryptDataArrayOutput() GetMysqlDbSystemEncryptDataArrayOutput
	ToGetMysqlDbSystemEncryptDataArrayOutputWithContext(context.Context) GetMysqlDbSystemEncryptDataArrayOutput
}

type GetMysqlDbSystemEncryptDataArray []GetMysqlDbSystemEncryptDataInput

func (GetMysqlDbSystemEncryptDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemEncryptData)(nil)).Elem()
}

func (i GetMysqlDbSystemEncryptDataArray) ToGetMysqlDbSystemEncryptDataArrayOutput() GetMysqlDbSystemEncryptDataArrayOutput {
	return i.ToGetMysqlDbSystemEncryptDataArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemEncryptDataArray) ToGetMysqlDbSystemEncryptDataArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemEncryptDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemEncryptDataArrayOutput)
}

type GetMysqlDbSystemEncryptDataOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemEncryptDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemEncryptData)(nil)).Elem()
}

func (o GetMysqlDbSystemEncryptDataOutput) ToGetMysqlDbSystemEncryptDataOutput() GetMysqlDbSystemEncryptDataOutput {
	return o
}

func (o GetMysqlDbSystemEncryptDataOutput) ToGetMysqlDbSystemEncryptDataOutputWithContext(ctx context.Context) GetMysqlDbSystemEncryptDataOutput {
	return o
}

// Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
func (o GetMysqlDbSystemEncryptDataOutput) KeyGenerationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemEncryptData) string { return v.KeyGenerationType }).(pulumi.StringOutput)
}

// The OCID of the key to use.
func (o GetMysqlDbSystemEncryptDataOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemEncryptData) string { return v.KeyId }).(pulumi.StringOutput)
}

type GetMysqlDbSystemEncryptDataArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemEncryptDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemEncryptData)(nil)).Elem()
}

func (o GetMysqlDbSystemEncryptDataArrayOutput) ToGetMysqlDbSystemEncryptDataArrayOutput() GetMysqlDbSystemEncryptDataArrayOutput {
	return o
}

func (o GetMysqlDbSystemEncryptDataArrayOutput) ToGetMysqlDbSystemEncryptDataArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemEncryptDataArrayOutput {
	return o
}

func (o GetMysqlDbSystemEncryptDataArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemEncryptDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemEncryptData {
		return vs[0].([]GetMysqlDbSystemEncryptData)[vs[1].(int)]
	}).(GetMysqlDbSystemEncryptDataOutput)
}

type GetMysqlDbSystemEndpoint struct {
	// The network address of the DB System.
	Hostname string `pulumi:"hostname"`
	// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
	IpAddress string `pulumi:"ipAddress"`
	// The access modes from the client that this endpoint supports.
	Modes []string `pulumi:"modes"`
	// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
	Port int `pulumi:"port"`
	// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
	PortX int `pulumi:"portX"`
	// The OCID of the resource that this endpoint is attached to.
	ResourceId string `pulumi:"resourceId"`
	// The type of endpoint that clients and connectors can connect to.
	ResourceType string `pulumi:"resourceType"`
	// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
	Status string `pulumi:"status"`
	// Additional information about the current endpoint status.
	StatusDetails string `pulumi:"statusDetails"`
}

// GetMysqlDbSystemEndpointInput is an input type that accepts GetMysqlDbSystemEndpointArgs and GetMysqlDbSystemEndpointOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemEndpointInput` via:
//
//	GetMysqlDbSystemEndpointArgs{...}
type GetMysqlDbSystemEndpointInput interface {
	pulumi.Input

	ToGetMysqlDbSystemEndpointOutput() GetMysqlDbSystemEndpointOutput
	ToGetMysqlDbSystemEndpointOutputWithContext(context.Context) GetMysqlDbSystemEndpointOutput
}

type GetMysqlDbSystemEndpointArgs struct {
	// The network address of the DB System.
	Hostname pulumi.StringInput `pulumi:"hostname"`
	// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// The access modes from the client that this endpoint supports.
	Modes pulumi.StringArrayInput `pulumi:"modes"`
	// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
	Port pulumi.IntInput `pulumi:"port"`
	// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
	PortX pulumi.IntInput `pulumi:"portX"`
	// The OCID of the resource that this endpoint is attached to.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// The type of endpoint that clients and connectors can connect to.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
	Status pulumi.StringInput `pulumi:"status"`
	// Additional information about the current endpoint status.
	StatusDetails pulumi.StringInput `pulumi:"statusDetails"`
}

func (GetMysqlDbSystemEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemEndpoint)(nil)).Elem()
}

func (i GetMysqlDbSystemEndpointArgs) ToGetMysqlDbSystemEndpointOutput() GetMysqlDbSystemEndpointOutput {
	return i.ToGetMysqlDbSystemEndpointOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemEndpointArgs) ToGetMysqlDbSystemEndpointOutputWithContext(ctx context.Context) GetMysqlDbSystemEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemEndpointOutput)
}

// GetMysqlDbSystemEndpointArrayInput is an input type that accepts GetMysqlDbSystemEndpointArray and GetMysqlDbSystemEndpointArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemEndpointArrayInput` via:
//
//	GetMysqlDbSystemEndpointArray{ GetMysqlDbSystemEndpointArgs{...} }
type GetMysqlDbSystemEndpointArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemEndpointArrayOutput() GetMysqlDbSystemEndpointArrayOutput
	ToGetMysqlDbSystemEndpointArrayOutputWithContext(context.Context) GetMysqlDbSystemEndpointArrayOutput
}

type GetMysqlDbSystemEndpointArray []GetMysqlDbSystemEndpointInput

func (GetMysqlDbSystemEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemEndpoint)(nil)).Elem()
}

func (i GetMysqlDbSystemEndpointArray) ToGetMysqlDbSystemEndpointArrayOutput() GetMysqlDbSystemEndpointArrayOutput {
	return i.ToGetMysqlDbSystemEndpointArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemEndpointArray) ToGetMysqlDbSystemEndpointArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemEndpointArrayOutput)
}

type GetMysqlDbSystemEndpointOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemEndpoint)(nil)).Elem()
}

func (o GetMysqlDbSystemEndpointOutput) ToGetMysqlDbSystemEndpointOutput() GetMysqlDbSystemEndpointOutput {
	return o
}

func (o GetMysqlDbSystemEndpointOutput) ToGetMysqlDbSystemEndpointOutputWithContext(ctx context.Context) GetMysqlDbSystemEndpointOutput {
	return o
}

// The network address of the DB System.
func (o GetMysqlDbSystemEndpointOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemEndpoint) string { return v.Hostname }).(pulumi.StringOutput)
}

// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
func (o GetMysqlDbSystemEndpointOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemEndpoint) string { return v.IpAddress }).(pulumi.StringOutput)
}

// The access modes from the client that this endpoint supports.
func (o GetMysqlDbSystemEndpointOutput) Modes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemEndpoint) []string { return v.Modes }).(pulumi.StringArrayOutput)
}

// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
func (o GetMysqlDbSystemEndpointOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemEndpoint) int { return v.Port }).(pulumi.IntOutput)
}

// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
func (o GetMysqlDbSystemEndpointOutput) PortX() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemEndpoint) int { return v.PortX }).(pulumi.IntOutput)
}

// The OCID of the resource that this endpoint is attached to.
func (o GetMysqlDbSystemEndpointOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemEndpoint) string { return v.ResourceId }).(pulumi.StringOutput)
}

// The type of endpoint that clients and connectors can connect to.
func (o GetMysqlDbSystemEndpointOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemEndpoint) string { return v.ResourceType }).(pulumi.StringOutput)
}

// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
func (o GetMysqlDbSystemEndpointOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemEndpoint) string { return v.Status }).(pulumi.StringOutput)
}

// Additional information about the current endpoint status.
func (o GetMysqlDbSystemEndpointOutput) StatusDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemEndpoint) string { return v.StatusDetails }).(pulumi.StringOutput)
}

type GetMysqlDbSystemEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemEndpoint)(nil)).Elem()
}

func (o GetMysqlDbSystemEndpointArrayOutput) ToGetMysqlDbSystemEndpointArrayOutput() GetMysqlDbSystemEndpointArrayOutput {
	return o
}

func (o GetMysqlDbSystemEndpointArrayOutput) ToGetMysqlDbSystemEndpointArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemEndpointArrayOutput {
	return o
}

func (o GetMysqlDbSystemEndpointArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemEndpoint {
		return vs[0].([]GetMysqlDbSystemEndpoint)[vs[1].(int)]
	}).(GetMysqlDbSystemEndpointOutput)
}

type GetMysqlDbSystemHeatWaveCluster struct {
	// The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
	ClusterSize int `pulumi:"clusterSize"`
	// Lakehouse enabled status for the HeatWave cluster.
	IsLakehouseEnabled bool `pulumi:"isLakehouseEnabled"`
	// The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
	ShapeName string `pulumi:"shapeName"`
	// The current state of the DB System.
	State string `pulumi:"state"`
	// The date and time the DB System was created.
	TimeCreated string `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetMysqlDbSystemHeatWaveClusterInput is an input type that accepts GetMysqlDbSystemHeatWaveClusterArgs and GetMysqlDbSystemHeatWaveClusterOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemHeatWaveClusterInput` via:
//
//	GetMysqlDbSystemHeatWaveClusterArgs{...}
type GetMysqlDbSystemHeatWaveClusterInput interface {
	pulumi.Input

	ToGetMysqlDbSystemHeatWaveClusterOutput() GetMysqlDbSystemHeatWaveClusterOutput
	ToGetMysqlDbSystemHeatWaveClusterOutputWithContext(context.Context) GetMysqlDbSystemHeatWaveClusterOutput
}

type GetMysqlDbSystemHeatWaveClusterArgs struct {
	// The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
	ClusterSize pulumi.IntInput `pulumi:"clusterSize"`
	// Lakehouse enabled status for the HeatWave cluster.
	IsLakehouseEnabled pulumi.BoolInput `pulumi:"isLakehouseEnabled"`
	// The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
	ShapeName pulumi.StringInput `pulumi:"shapeName"`
	// The current state of the DB System.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the DB System was created.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetMysqlDbSystemHeatWaveClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemHeatWaveCluster)(nil)).Elem()
}

func (i GetMysqlDbSystemHeatWaveClusterArgs) ToGetMysqlDbSystemHeatWaveClusterOutput() GetMysqlDbSystemHeatWaveClusterOutput {
	return i.ToGetMysqlDbSystemHeatWaveClusterOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemHeatWaveClusterArgs) ToGetMysqlDbSystemHeatWaveClusterOutputWithContext(ctx context.Context) GetMysqlDbSystemHeatWaveClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemHeatWaveClusterOutput)
}

// GetMysqlDbSystemHeatWaveClusterArrayInput is an input type that accepts GetMysqlDbSystemHeatWaveClusterArray and GetMysqlDbSystemHeatWaveClusterArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemHeatWaveClusterArrayInput` via:
//
//	GetMysqlDbSystemHeatWaveClusterArray{ GetMysqlDbSystemHeatWaveClusterArgs{...} }
type GetMysqlDbSystemHeatWaveClusterArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemHeatWaveClusterArrayOutput() GetMysqlDbSystemHeatWaveClusterArrayOutput
	ToGetMysqlDbSystemHeatWaveClusterArrayOutputWithContext(context.Context) GetMysqlDbSystemHeatWaveClusterArrayOutput
}

type GetMysqlDbSystemHeatWaveClusterArray []GetMysqlDbSystemHeatWaveClusterInput

func (GetMysqlDbSystemHeatWaveClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemHeatWaveCluster)(nil)).Elem()
}

func (i GetMysqlDbSystemHeatWaveClusterArray) ToGetMysqlDbSystemHeatWaveClusterArrayOutput() GetMysqlDbSystemHeatWaveClusterArrayOutput {
	return i.ToGetMysqlDbSystemHeatWaveClusterArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemHeatWaveClusterArray) ToGetMysqlDbSystemHeatWaveClusterArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemHeatWaveClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemHeatWaveClusterArrayOutput)
}

type GetMysqlDbSystemHeatWaveClusterOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemHeatWaveClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemHeatWaveCluster)(nil)).Elem()
}

func (o GetMysqlDbSystemHeatWaveClusterOutput) ToGetMysqlDbSystemHeatWaveClusterOutput() GetMysqlDbSystemHeatWaveClusterOutput {
	return o
}

func (o GetMysqlDbSystemHeatWaveClusterOutput) ToGetMysqlDbSystemHeatWaveClusterOutputWithContext(ctx context.Context) GetMysqlDbSystemHeatWaveClusterOutput {
	return o
}

// The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
func (o GetMysqlDbSystemHeatWaveClusterOutput) ClusterSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemHeatWaveCluster) int { return v.ClusterSize }).(pulumi.IntOutput)
}

// Lakehouse enabled status for the HeatWave cluster.
func (o GetMysqlDbSystemHeatWaveClusterOutput) IsLakehouseEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlDbSystemHeatWaveCluster) bool { return v.IsLakehouseEnabled }).(pulumi.BoolOutput)
}

// The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
func (o GetMysqlDbSystemHeatWaveClusterOutput) ShapeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemHeatWaveCluster) string { return v.ShapeName }).(pulumi.StringOutput)
}

// The current state of the DB System.
func (o GetMysqlDbSystemHeatWaveClusterOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemHeatWaveCluster) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the DB System was created.
func (o GetMysqlDbSystemHeatWaveClusterOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemHeatWaveCluster) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the DB System was last updated.
func (o GetMysqlDbSystemHeatWaveClusterOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemHeatWaveCluster) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetMysqlDbSystemHeatWaveClusterArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemHeatWaveClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemHeatWaveCluster)(nil)).Elem()
}

func (o GetMysqlDbSystemHeatWaveClusterArrayOutput) ToGetMysqlDbSystemHeatWaveClusterArrayOutput() GetMysqlDbSystemHeatWaveClusterArrayOutput {
	return o
}

func (o GetMysqlDbSystemHeatWaveClusterArrayOutput) ToGetMysqlDbSystemHeatWaveClusterArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemHeatWaveClusterArrayOutput {
	return o
}

func (o GetMysqlDbSystemHeatWaveClusterArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemHeatWaveClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemHeatWaveCluster {
		return vs[0].([]GetMysqlDbSystemHeatWaveCluster)[vs[1].(int)]
	}).(GetMysqlDbSystemHeatWaveClusterOutput)
}

type GetMysqlDbSystemMaintenance struct {
	// The start time of the maintenance window.
	WindowStartTime string `pulumi:"windowStartTime"`
}

// GetMysqlDbSystemMaintenanceInput is an input type that accepts GetMysqlDbSystemMaintenanceArgs and GetMysqlDbSystemMaintenanceOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemMaintenanceInput` via:
//
//	GetMysqlDbSystemMaintenanceArgs{...}
type GetMysqlDbSystemMaintenanceInput interface {
	pulumi.Input

	ToGetMysqlDbSystemMaintenanceOutput() GetMysqlDbSystemMaintenanceOutput
	ToGetMysqlDbSystemMaintenanceOutputWithContext(context.Context) GetMysqlDbSystemMaintenanceOutput
}

type GetMysqlDbSystemMaintenanceArgs struct {
	// The start time of the maintenance window.
	WindowStartTime pulumi.StringInput `pulumi:"windowStartTime"`
}

func (GetMysqlDbSystemMaintenanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemMaintenance)(nil)).Elem()
}

func (i GetMysqlDbSystemMaintenanceArgs) ToGetMysqlDbSystemMaintenanceOutput() GetMysqlDbSystemMaintenanceOutput {
	return i.ToGetMysqlDbSystemMaintenanceOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemMaintenanceArgs) ToGetMysqlDbSystemMaintenanceOutputWithContext(ctx context.Context) GetMysqlDbSystemMaintenanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemMaintenanceOutput)
}

// GetMysqlDbSystemMaintenanceArrayInput is an input type that accepts GetMysqlDbSystemMaintenanceArray and GetMysqlDbSystemMaintenanceArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemMaintenanceArrayInput` via:
//
//	GetMysqlDbSystemMaintenanceArray{ GetMysqlDbSystemMaintenanceArgs{...} }
type GetMysqlDbSystemMaintenanceArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemMaintenanceArrayOutput() GetMysqlDbSystemMaintenanceArrayOutput
	ToGetMysqlDbSystemMaintenanceArrayOutputWithContext(context.Context) GetMysqlDbSystemMaintenanceArrayOutput
}

type GetMysqlDbSystemMaintenanceArray []GetMysqlDbSystemMaintenanceInput

func (GetMysqlDbSystemMaintenanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemMaintenance)(nil)).Elem()
}

func (i GetMysqlDbSystemMaintenanceArray) ToGetMysqlDbSystemMaintenanceArrayOutput() GetMysqlDbSystemMaintenanceArrayOutput {
	return i.ToGetMysqlDbSystemMaintenanceArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemMaintenanceArray) ToGetMysqlDbSystemMaintenanceArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemMaintenanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemMaintenanceArrayOutput)
}

type GetMysqlDbSystemMaintenanceOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemMaintenanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemMaintenance)(nil)).Elem()
}

func (o GetMysqlDbSystemMaintenanceOutput) ToGetMysqlDbSystemMaintenanceOutput() GetMysqlDbSystemMaintenanceOutput {
	return o
}

func (o GetMysqlDbSystemMaintenanceOutput) ToGetMysqlDbSystemMaintenanceOutputWithContext(ctx context.Context) GetMysqlDbSystemMaintenanceOutput {
	return o
}

// The start time of the maintenance window.
func (o GetMysqlDbSystemMaintenanceOutput) WindowStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemMaintenance) string { return v.WindowStartTime }).(pulumi.StringOutput)
}

type GetMysqlDbSystemMaintenanceArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemMaintenanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemMaintenance)(nil)).Elem()
}

func (o GetMysqlDbSystemMaintenanceArrayOutput) ToGetMysqlDbSystemMaintenanceArrayOutput() GetMysqlDbSystemMaintenanceArrayOutput {
	return o
}

func (o GetMysqlDbSystemMaintenanceArrayOutput) ToGetMysqlDbSystemMaintenanceArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemMaintenanceArrayOutput {
	return o
}

func (o GetMysqlDbSystemMaintenanceArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemMaintenanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemMaintenance {
		return vs[0].([]GetMysqlDbSystemMaintenance)[vs[1].(int)]
	}).(GetMysqlDbSystemMaintenanceOutput)
}

type GetMysqlDbSystemPointInTimeRecoveryDetail struct {
	// Earliest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeEarliestRecoveryPoint string `pulumi:"timeEarliestRecoveryPoint"`
	// Latest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeLatestRecoveryPoint string `pulumi:"timeLatestRecoveryPoint"`
}

// GetMysqlDbSystemPointInTimeRecoveryDetailInput is an input type that accepts GetMysqlDbSystemPointInTimeRecoveryDetailArgs and GetMysqlDbSystemPointInTimeRecoveryDetailOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemPointInTimeRecoveryDetailInput` via:
//
//	GetMysqlDbSystemPointInTimeRecoveryDetailArgs{...}
type GetMysqlDbSystemPointInTimeRecoveryDetailInput interface {
	pulumi.Input

	ToGetMysqlDbSystemPointInTimeRecoveryDetailOutput() GetMysqlDbSystemPointInTimeRecoveryDetailOutput
	ToGetMysqlDbSystemPointInTimeRecoveryDetailOutputWithContext(context.Context) GetMysqlDbSystemPointInTimeRecoveryDetailOutput
}

type GetMysqlDbSystemPointInTimeRecoveryDetailArgs struct {
	// Earliest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeEarliestRecoveryPoint pulumi.StringInput `pulumi:"timeEarliestRecoveryPoint"`
	// Latest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeLatestRecoveryPoint pulumi.StringInput `pulumi:"timeLatestRecoveryPoint"`
}

func (GetMysqlDbSystemPointInTimeRecoveryDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemPointInTimeRecoveryDetail)(nil)).Elem()
}

func (i GetMysqlDbSystemPointInTimeRecoveryDetailArgs) ToGetMysqlDbSystemPointInTimeRecoveryDetailOutput() GetMysqlDbSystemPointInTimeRecoveryDetailOutput {
	return i.ToGetMysqlDbSystemPointInTimeRecoveryDetailOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemPointInTimeRecoveryDetailArgs) ToGetMysqlDbSystemPointInTimeRecoveryDetailOutputWithContext(ctx context.Context) GetMysqlDbSystemPointInTimeRecoveryDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemPointInTimeRecoveryDetailOutput)
}

// GetMysqlDbSystemPointInTimeRecoveryDetailArrayInput is an input type that accepts GetMysqlDbSystemPointInTimeRecoveryDetailArray and GetMysqlDbSystemPointInTimeRecoveryDetailArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemPointInTimeRecoveryDetailArrayInput` via:
//
//	GetMysqlDbSystemPointInTimeRecoveryDetailArray{ GetMysqlDbSystemPointInTimeRecoveryDetailArgs{...} }
type GetMysqlDbSystemPointInTimeRecoveryDetailArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemPointInTimeRecoveryDetailArrayOutput() GetMysqlDbSystemPointInTimeRecoveryDetailArrayOutput
	ToGetMysqlDbSystemPointInTimeRecoveryDetailArrayOutputWithContext(context.Context) GetMysqlDbSystemPointInTimeRecoveryDetailArrayOutput
}

type GetMysqlDbSystemPointInTimeRecoveryDetailArray []GetMysqlDbSystemPointInTimeRecoveryDetailInput

func (GetMysqlDbSystemPointInTimeRecoveryDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemPointInTimeRecoveryDetail)(nil)).Elem()
}

func (i GetMysqlDbSystemPointInTimeRecoveryDetailArray) ToGetMysqlDbSystemPointInTimeRecoveryDetailArrayOutput() GetMysqlDbSystemPointInTimeRecoveryDetailArrayOutput {
	return i.ToGetMysqlDbSystemPointInTimeRecoveryDetailArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemPointInTimeRecoveryDetailArray) ToGetMysqlDbSystemPointInTimeRecoveryDetailArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemPointInTimeRecoveryDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemPointInTimeRecoveryDetailArrayOutput)
}

type GetMysqlDbSystemPointInTimeRecoveryDetailOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemPointInTimeRecoveryDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemPointInTimeRecoveryDetail)(nil)).Elem()
}

func (o GetMysqlDbSystemPointInTimeRecoveryDetailOutput) ToGetMysqlDbSystemPointInTimeRecoveryDetailOutput() GetMysqlDbSystemPointInTimeRecoveryDetailOutput {
	return o
}

func (o GetMysqlDbSystemPointInTimeRecoveryDetailOutput) ToGetMysqlDbSystemPointInTimeRecoveryDetailOutputWithContext(ctx context.Context) GetMysqlDbSystemPointInTimeRecoveryDetailOutput {
	return o
}

// Earliest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o GetMysqlDbSystemPointInTimeRecoveryDetailOutput) TimeEarliestRecoveryPoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemPointInTimeRecoveryDetail) string { return v.TimeEarliestRecoveryPoint }).(pulumi.StringOutput)
}

// Latest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o GetMysqlDbSystemPointInTimeRecoveryDetailOutput) TimeLatestRecoveryPoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemPointInTimeRecoveryDetail) string { return v.TimeLatestRecoveryPoint }).(pulumi.StringOutput)
}

type GetMysqlDbSystemPointInTimeRecoveryDetailArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemPointInTimeRecoveryDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemPointInTimeRecoveryDetail)(nil)).Elem()
}

func (o GetMysqlDbSystemPointInTimeRecoveryDetailArrayOutput) ToGetMysqlDbSystemPointInTimeRecoveryDetailArrayOutput() GetMysqlDbSystemPointInTimeRecoveryDetailArrayOutput {
	return o
}

func (o GetMysqlDbSystemPointInTimeRecoveryDetailArrayOutput) ToGetMysqlDbSystemPointInTimeRecoveryDetailArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemPointInTimeRecoveryDetailArrayOutput {
	return o
}

func (o GetMysqlDbSystemPointInTimeRecoveryDetailArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemPointInTimeRecoveryDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemPointInTimeRecoveryDetail {
		return vs[0].([]GetMysqlDbSystemPointInTimeRecoveryDetail)[vs[1].(int)]
	}).(GetMysqlDbSystemPointInTimeRecoveryDetailOutput)
}

type GetMysqlDbSystemReadEndpoint struct {
	// A list of IP addresses of read replicas that are excluded from serving read requests.
	ExcludeIps []string `pulumi:"excludeIps"`
	// Specifies if the DB System read endpoint is enabled or not.
	IsEnabled bool `pulumi:"isEnabled"`
	// The hostname for the read endpoint of the DB System. Used for DNS.
	ReadEndpointHostnameLabel string `pulumi:"readEndpointHostnameLabel"`
	// The IP address the DB System read endpoint is configured to listen on. A private IP address of your choice to assign to the read endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
	ReadEndpointIpAddress string `pulumi:"readEndpointIpAddress"`
}

// GetMysqlDbSystemReadEndpointInput is an input type that accepts GetMysqlDbSystemReadEndpointArgs and GetMysqlDbSystemReadEndpointOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemReadEndpointInput` via:
//
//	GetMysqlDbSystemReadEndpointArgs{...}
type GetMysqlDbSystemReadEndpointInput interface {
	pulumi.Input

	ToGetMysqlDbSystemReadEndpointOutput() GetMysqlDbSystemReadEndpointOutput
	ToGetMysqlDbSystemReadEndpointOutputWithContext(context.Context) GetMysqlDbSystemReadEndpointOutput
}

type GetMysqlDbSystemReadEndpointArgs struct {
	// A list of IP addresses of read replicas that are excluded from serving read requests.
	ExcludeIps pulumi.StringArrayInput `pulumi:"excludeIps"`
	// Specifies if the DB System read endpoint is enabled or not.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The hostname for the read endpoint of the DB System. Used for DNS.
	ReadEndpointHostnameLabel pulumi.StringInput `pulumi:"readEndpointHostnameLabel"`
	// The IP address the DB System read endpoint is configured to listen on. A private IP address of your choice to assign to the read endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
	ReadEndpointIpAddress pulumi.StringInput `pulumi:"readEndpointIpAddress"`
}

func (GetMysqlDbSystemReadEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemReadEndpoint)(nil)).Elem()
}

func (i GetMysqlDbSystemReadEndpointArgs) ToGetMysqlDbSystemReadEndpointOutput() GetMysqlDbSystemReadEndpointOutput {
	return i.ToGetMysqlDbSystemReadEndpointOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemReadEndpointArgs) ToGetMysqlDbSystemReadEndpointOutputWithContext(ctx context.Context) GetMysqlDbSystemReadEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemReadEndpointOutput)
}

// GetMysqlDbSystemReadEndpointArrayInput is an input type that accepts GetMysqlDbSystemReadEndpointArray and GetMysqlDbSystemReadEndpointArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemReadEndpointArrayInput` via:
//
//	GetMysqlDbSystemReadEndpointArray{ GetMysqlDbSystemReadEndpointArgs{...} }
type GetMysqlDbSystemReadEndpointArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemReadEndpointArrayOutput() GetMysqlDbSystemReadEndpointArrayOutput
	ToGetMysqlDbSystemReadEndpointArrayOutputWithContext(context.Context) GetMysqlDbSystemReadEndpointArrayOutput
}

type GetMysqlDbSystemReadEndpointArray []GetMysqlDbSystemReadEndpointInput

func (GetMysqlDbSystemReadEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemReadEndpoint)(nil)).Elem()
}

func (i GetMysqlDbSystemReadEndpointArray) ToGetMysqlDbSystemReadEndpointArrayOutput() GetMysqlDbSystemReadEndpointArrayOutput {
	return i.ToGetMysqlDbSystemReadEndpointArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemReadEndpointArray) ToGetMysqlDbSystemReadEndpointArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemReadEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemReadEndpointArrayOutput)
}

type GetMysqlDbSystemReadEndpointOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemReadEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemReadEndpoint)(nil)).Elem()
}

func (o GetMysqlDbSystemReadEndpointOutput) ToGetMysqlDbSystemReadEndpointOutput() GetMysqlDbSystemReadEndpointOutput {
	return o
}

func (o GetMysqlDbSystemReadEndpointOutput) ToGetMysqlDbSystemReadEndpointOutputWithContext(ctx context.Context) GetMysqlDbSystemReadEndpointOutput {
	return o
}

// A list of IP addresses of read replicas that are excluded from serving read requests.
func (o GetMysqlDbSystemReadEndpointOutput) ExcludeIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemReadEndpoint) []string { return v.ExcludeIps }).(pulumi.StringArrayOutput)
}

// Specifies if the DB System read endpoint is enabled or not.
func (o GetMysqlDbSystemReadEndpointOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlDbSystemReadEndpoint) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The hostname for the read endpoint of the DB System. Used for DNS.
func (o GetMysqlDbSystemReadEndpointOutput) ReadEndpointHostnameLabel() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemReadEndpoint) string { return v.ReadEndpointHostnameLabel }).(pulumi.StringOutput)
}

// The IP address the DB System read endpoint is configured to listen on. A private IP address of your choice to assign to the read endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
func (o GetMysqlDbSystemReadEndpointOutput) ReadEndpointIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemReadEndpoint) string { return v.ReadEndpointIpAddress }).(pulumi.StringOutput)
}

type GetMysqlDbSystemReadEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemReadEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemReadEndpoint)(nil)).Elem()
}

func (o GetMysqlDbSystemReadEndpointArrayOutput) ToGetMysqlDbSystemReadEndpointArrayOutput() GetMysqlDbSystemReadEndpointArrayOutput {
	return o
}

func (o GetMysqlDbSystemReadEndpointArrayOutput) ToGetMysqlDbSystemReadEndpointArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemReadEndpointArrayOutput {
	return o
}

func (o GetMysqlDbSystemReadEndpointArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemReadEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemReadEndpoint {
		return vs[0].([]GetMysqlDbSystemReadEndpoint)[vs[1].(int)]
	}).(GetMysqlDbSystemReadEndpointOutput)
}

type GetMysqlDbSystemRest struct {
	// Select how REST is configured across the DB System instances.
	Configuration string `pulumi:"configuration"`
	// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
	Port int `pulumi:"port"`
}

// GetMysqlDbSystemRestInput is an input type that accepts GetMysqlDbSystemRestArgs and GetMysqlDbSystemRestOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemRestInput` via:
//
//	GetMysqlDbSystemRestArgs{...}
type GetMysqlDbSystemRestInput interface {
	pulumi.Input

	ToGetMysqlDbSystemRestOutput() GetMysqlDbSystemRestOutput
	ToGetMysqlDbSystemRestOutputWithContext(context.Context) GetMysqlDbSystemRestOutput
}

type GetMysqlDbSystemRestArgs struct {
	// Select how REST is configured across the DB System instances.
	Configuration pulumi.StringInput `pulumi:"configuration"`
	// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
	Port pulumi.IntInput `pulumi:"port"`
}

func (GetMysqlDbSystemRestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemRest)(nil)).Elem()
}

func (i GetMysqlDbSystemRestArgs) ToGetMysqlDbSystemRestOutput() GetMysqlDbSystemRestOutput {
	return i.ToGetMysqlDbSystemRestOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemRestArgs) ToGetMysqlDbSystemRestOutputWithContext(ctx context.Context) GetMysqlDbSystemRestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemRestOutput)
}

// GetMysqlDbSystemRestArrayInput is an input type that accepts GetMysqlDbSystemRestArray and GetMysqlDbSystemRestArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemRestArrayInput` via:
//
//	GetMysqlDbSystemRestArray{ GetMysqlDbSystemRestArgs{...} }
type GetMysqlDbSystemRestArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemRestArrayOutput() GetMysqlDbSystemRestArrayOutput
	ToGetMysqlDbSystemRestArrayOutputWithContext(context.Context) GetMysqlDbSystemRestArrayOutput
}

type GetMysqlDbSystemRestArray []GetMysqlDbSystemRestInput

func (GetMysqlDbSystemRestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemRest)(nil)).Elem()
}

func (i GetMysqlDbSystemRestArray) ToGetMysqlDbSystemRestArrayOutput() GetMysqlDbSystemRestArrayOutput {
	return i.ToGetMysqlDbSystemRestArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemRestArray) ToGetMysqlDbSystemRestArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemRestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemRestArrayOutput)
}

type GetMysqlDbSystemRestOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemRestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemRest)(nil)).Elem()
}

func (o GetMysqlDbSystemRestOutput) ToGetMysqlDbSystemRestOutput() GetMysqlDbSystemRestOutput {
	return o
}

func (o GetMysqlDbSystemRestOutput) ToGetMysqlDbSystemRestOutputWithContext(ctx context.Context) GetMysqlDbSystemRestOutput {
	return o
}

// Select how REST is configured across the DB System instances.
func (o GetMysqlDbSystemRestOutput) Configuration() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemRest) string { return v.Configuration }).(pulumi.StringOutput)
}

// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
func (o GetMysqlDbSystemRestOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemRest) int { return v.Port }).(pulumi.IntOutput)
}

type GetMysqlDbSystemRestArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemRestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemRest)(nil)).Elem()
}

func (o GetMysqlDbSystemRestArrayOutput) ToGetMysqlDbSystemRestArrayOutput() GetMysqlDbSystemRestArrayOutput {
	return o
}

func (o GetMysqlDbSystemRestArrayOutput) ToGetMysqlDbSystemRestArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemRestArrayOutput {
	return o
}

func (o GetMysqlDbSystemRestArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemRestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemRest {
		return vs[0].([]GetMysqlDbSystemRest)[vs[1].(int)]
	}).(GetMysqlDbSystemRestOutput)
}

type GetMysqlDbSystemSecureConnection struct {
	// Select whether to use MySQL Database Service-managed certificate (SYSTEM) or your own certificate (BYOC).
	CertificateGenerationType string `pulumi:"certificateGenerationType"`
	// The OCID of the certificate to use.
	CertificateId string `pulumi:"certificateId"`
}

// GetMysqlDbSystemSecureConnectionInput is an input type that accepts GetMysqlDbSystemSecureConnectionArgs and GetMysqlDbSystemSecureConnectionOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemSecureConnectionInput` via:
//
//	GetMysqlDbSystemSecureConnectionArgs{...}
type GetMysqlDbSystemSecureConnectionInput interface {
	pulumi.Input

	ToGetMysqlDbSystemSecureConnectionOutput() GetMysqlDbSystemSecureConnectionOutput
	ToGetMysqlDbSystemSecureConnectionOutputWithContext(context.Context) GetMysqlDbSystemSecureConnectionOutput
}

type GetMysqlDbSystemSecureConnectionArgs struct {
	// Select whether to use MySQL Database Service-managed certificate (SYSTEM) or your own certificate (BYOC).
	CertificateGenerationType pulumi.StringInput `pulumi:"certificateGenerationType"`
	// The OCID of the certificate to use.
	CertificateId pulumi.StringInput `pulumi:"certificateId"`
}

func (GetMysqlDbSystemSecureConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemSecureConnection)(nil)).Elem()
}

func (i GetMysqlDbSystemSecureConnectionArgs) ToGetMysqlDbSystemSecureConnectionOutput() GetMysqlDbSystemSecureConnectionOutput {
	return i.ToGetMysqlDbSystemSecureConnectionOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemSecureConnectionArgs) ToGetMysqlDbSystemSecureConnectionOutputWithContext(ctx context.Context) GetMysqlDbSystemSecureConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemSecureConnectionOutput)
}

// GetMysqlDbSystemSecureConnectionArrayInput is an input type that accepts GetMysqlDbSystemSecureConnectionArray and GetMysqlDbSystemSecureConnectionArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemSecureConnectionArrayInput` via:
//
//	GetMysqlDbSystemSecureConnectionArray{ GetMysqlDbSystemSecureConnectionArgs{...} }
type GetMysqlDbSystemSecureConnectionArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemSecureConnectionArrayOutput() GetMysqlDbSystemSecureConnectionArrayOutput
	ToGetMysqlDbSystemSecureConnectionArrayOutputWithContext(context.Context) GetMysqlDbSystemSecureConnectionArrayOutput
}

type GetMysqlDbSystemSecureConnectionArray []GetMysqlDbSystemSecureConnectionInput

func (GetMysqlDbSystemSecureConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemSecureConnection)(nil)).Elem()
}

func (i GetMysqlDbSystemSecureConnectionArray) ToGetMysqlDbSystemSecureConnectionArrayOutput() GetMysqlDbSystemSecureConnectionArrayOutput {
	return i.ToGetMysqlDbSystemSecureConnectionArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemSecureConnectionArray) ToGetMysqlDbSystemSecureConnectionArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemSecureConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemSecureConnectionArrayOutput)
}

type GetMysqlDbSystemSecureConnectionOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemSecureConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemSecureConnection)(nil)).Elem()
}

func (o GetMysqlDbSystemSecureConnectionOutput) ToGetMysqlDbSystemSecureConnectionOutput() GetMysqlDbSystemSecureConnectionOutput {
	return o
}

func (o GetMysqlDbSystemSecureConnectionOutput) ToGetMysqlDbSystemSecureConnectionOutputWithContext(ctx context.Context) GetMysqlDbSystemSecureConnectionOutput {
	return o
}

// Select whether to use MySQL Database Service-managed certificate (SYSTEM) or your own certificate (BYOC).
func (o GetMysqlDbSystemSecureConnectionOutput) CertificateGenerationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemSecureConnection) string { return v.CertificateGenerationType }).(pulumi.StringOutput)
}

// The OCID of the certificate to use.
func (o GetMysqlDbSystemSecureConnectionOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemSecureConnection) string { return v.CertificateId }).(pulumi.StringOutput)
}

type GetMysqlDbSystemSecureConnectionArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemSecureConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemSecureConnection)(nil)).Elem()
}

func (o GetMysqlDbSystemSecureConnectionArrayOutput) ToGetMysqlDbSystemSecureConnectionArrayOutput() GetMysqlDbSystemSecureConnectionArrayOutput {
	return o
}

func (o GetMysqlDbSystemSecureConnectionArrayOutput) ToGetMysqlDbSystemSecureConnectionArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemSecureConnectionArrayOutput {
	return o
}

func (o GetMysqlDbSystemSecureConnectionArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemSecureConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemSecureConnection {
		return vs[0].([]GetMysqlDbSystemSecureConnection)[vs[1].(int)]
	}).(GetMysqlDbSystemSecureConnectionOutput)
}

type GetMysqlDbSystemSource struct {
	// The OCID of the backup to be used as the source for the new DB System.
	BackupId string `pulumi:"backupId"`
	// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId string `pulumi:"dbSystemId"`
	// The date and time, as per RFC 3339, of the change up to which the new DB System shall be restored to, using a backup and logs from the original DB System. In case no point in time is specified, then this new DB System shall be restored up to the latest change recorded for the original DB System.
	RecoveryPoint string `pulumi:"recoveryPoint"`
	// The specific source identifier.
	SourceType string `pulumi:"sourceType"`
	SourceUrl  string `pulumi:"sourceUrl"`
}

// GetMysqlDbSystemSourceInput is an input type that accepts GetMysqlDbSystemSourceArgs and GetMysqlDbSystemSourceOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemSourceInput` via:
//
//	GetMysqlDbSystemSourceArgs{...}
type GetMysqlDbSystemSourceInput interface {
	pulumi.Input

	ToGetMysqlDbSystemSourceOutput() GetMysqlDbSystemSourceOutput
	ToGetMysqlDbSystemSourceOutputWithContext(context.Context) GetMysqlDbSystemSourceOutput
}

type GetMysqlDbSystemSourceArgs struct {
	// The OCID of the backup to be used as the source for the new DB System.
	BackupId pulumi.StringInput `pulumi:"backupId"`
	// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId pulumi.StringInput `pulumi:"dbSystemId"`
	// The date and time, as per RFC 3339, of the change up to which the new DB System shall be restored to, using a backup and logs from the original DB System. In case no point in time is specified, then this new DB System shall be restored up to the latest change recorded for the original DB System.
	RecoveryPoint pulumi.StringInput `pulumi:"recoveryPoint"`
	// The specific source identifier.
	SourceType pulumi.StringInput `pulumi:"sourceType"`
	SourceUrl  pulumi.StringInput `pulumi:"sourceUrl"`
}

func (GetMysqlDbSystemSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemSource)(nil)).Elem()
}

func (i GetMysqlDbSystemSourceArgs) ToGetMysqlDbSystemSourceOutput() GetMysqlDbSystemSourceOutput {
	return i.ToGetMysqlDbSystemSourceOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemSourceArgs) ToGetMysqlDbSystemSourceOutputWithContext(ctx context.Context) GetMysqlDbSystemSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemSourceOutput)
}

// GetMysqlDbSystemSourceArrayInput is an input type that accepts GetMysqlDbSystemSourceArray and GetMysqlDbSystemSourceArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemSourceArrayInput` via:
//
//	GetMysqlDbSystemSourceArray{ GetMysqlDbSystemSourceArgs{...} }
type GetMysqlDbSystemSourceArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemSourceArrayOutput() GetMysqlDbSystemSourceArrayOutput
	ToGetMysqlDbSystemSourceArrayOutputWithContext(context.Context) GetMysqlDbSystemSourceArrayOutput
}

type GetMysqlDbSystemSourceArray []GetMysqlDbSystemSourceInput

func (GetMysqlDbSystemSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemSource)(nil)).Elem()
}

func (i GetMysqlDbSystemSourceArray) ToGetMysqlDbSystemSourceArrayOutput() GetMysqlDbSystemSourceArrayOutput {
	return i.ToGetMysqlDbSystemSourceArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemSourceArray) ToGetMysqlDbSystemSourceArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemSourceArrayOutput)
}

type GetMysqlDbSystemSourceOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemSource)(nil)).Elem()
}

func (o GetMysqlDbSystemSourceOutput) ToGetMysqlDbSystemSourceOutput() GetMysqlDbSystemSourceOutput {
	return o
}

func (o GetMysqlDbSystemSourceOutput) ToGetMysqlDbSystemSourceOutputWithContext(ctx context.Context) GetMysqlDbSystemSourceOutput {
	return o
}

// The OCID of the backup to be used as the source for the new DB System.
func (o GetMysqlDbSystemSourceOutput) BackupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemSource) string { return v.BackupId }).(pulumi.StringOutput)
}

// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetMysqlDbSystemSourceOutput) DbSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemSource) string { return v.DbSystemId }).(pulumi.StringOutput)
}

// The date and time, as per RFC 3339, of the change up to which the new DB System shall be restored to, using a backup and logs from the original DB System. In case no point in time is specified, then this new DB System shall be restored up to the latest change recorded for the original DB System.
func (o GetMysqlDbSystemSourceOutput) RecoveryPoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemSource) string { return v.RecoveryPoint }).(pulumi.StringOutput)
}

// The specific source identifier.
func (o GetMysqlDbSystemSourceOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemSource) string { return v.SourceType }).(pulumi.StringOutput)
}

func (o GetMysqlDbSystemSourceOutput) SourceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemSource) string { return v.SourceUrl }).(pulumi.StringOutput)
}

type GetMysqlDbSystemSourceArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemSource)(nil)).Elem()
}

func (o GetMysqlDbSystemSourceArrayOutput) ToGetMysqlDbSystemSourceArrayOutput() GetMysqlDbSystemSourceArrayOutput {
	return o
}

func (o GetMysqlDbSystemSourceArrayOutput) ToGetMysqlDbSystemSourceArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemSourceArrayOutput {
	return o
}

func (o GetMysqlDbSystemSourceArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemSource {
		return vs[0].([]GetMysqlDbSystemSource)[vs[1].(int)]
	}).(GetMysqlDbSystemSourceOutput)
}

type GetMysqlDbSystemsDbSystem struct {
	// The access mode indicating if the database access is unrestricted (to all MySQL user accounts),  or restricted (to only certain users with specific privileges):
	// * UNRESTRICTED: the access to the database is not restricted;
	// * RESTRICTED: the access is allowed only to users with specific privileges;  RESTRICTED will correspond to setting the MySQL system variable  [offlineMode](https://dev.mysql.com/doc/en/server-system-variables.html#sysvar_offline_mode) to ON.
	AccessMode    string `pulumi:"accessMode"`
	AdminPassword string `pulumi:"adminPassword"`
	AdminUsername string `pulumi:"adminUsername"`
	// The availability domain in which the DB System is placed.
	AvailabilityDomain string `pulumi:"availabilityDomain"`
	// The Backup policy for the DB System.
	BackupPolicies []GetMysqlDbSystemsDbSystemBackupPolicy `pulumi:"backupPolicies"`
	// A list with a summary of all the Channels attached to the DB System.
	Channels []GetMysqlDbSystemsDbSystemChannel `pulumi:"channels"`
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// The requested Configuration instance.
	ConfigurationId string `pulumi:"configurationId"`
	// Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
	CrashRecovery string `pulumi:"crashRecovery"`
	// The availability domain and fault domain a DB System is placed in.
	CurrentPlacements []GetMysqlDbSystemsDbSystemCurrentPlacement `pulumi:"currentPlacements"`
	// The list of customer email addresses that receive information from Oracle about the specified Oracle Cloud Infrastructure DB System resource.  Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators.  Up to 10 email addresses can be added to the customer contacts for a DB System.
	CustomerContacts []GetMysqlDbSystemsDbSystemCustomerContact `pulumi:"customerContacts"`
	// Initial size of the data volume in GiBs that will be created and attached.
	DataStorageSizeInGb int `pulumi:"dataStorageSizeInGb"`
	// Data Storage information.
	DataStorages []GetMysqlDbSystemsDbSystemDataStorage `pulumi:"dataStorages"`
	// Filter DB Systems by their Database Management configuration.
	DatabaseManagement string `pulumi:"databaseManagement"`
	// The database mode indicating the types of statements that are allowed to run in the the DB system. This mode applies only to statements run by user connections. Replicated write statements continue  to be allowed regardless of the DatabaseMode.
	// * READ_WRITE: allow running read and write statements on the DB system;
	// * READ_ONLY: only allow running read statements on the DB system.
	DatabaseMode string `pulumi:"databaseMode"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// The Deletion policy for the DB System.
	DeletionPolicies []GetMysqlDbSystemsDbSystemDeletionPolicy `pulumi:"deletionPolicies"`
	// User-provided data about the DB System.
	Description string `pulumi:"description"`
	// A filter to return only the resource matching the given display name exactly.
	DisplayName string `pulumi:"displayName"`
	// Encrypt data details.
	EncryptDatas []GetMysqlDbSystemsDbSystemEncryptData `pulumi:"encryptDatas"`
	// The network endpoints available for this DB System.
	Endpoints []GetMysqlDbSystemsDbSystemEndpoint `pulumi:"endpoints"`
	// The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	FaultDomain string `pulumi:"faultDomain"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// A summary of a HeatWave cluster.
	HeatWaveClusters []GetMysqlDbSystemsDbSystemHeatWaveCluster `pulumi:"heatWaveClusters"`
	// The hostname for the primary endpoint of the DB System. Used for DNS. The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com"). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
	HostnameLabel string `pulumi:"hostnameLabel"`
	// The OCID of the DB System.
	Id string `pulumi:"id"`
	// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
	IpAddress string `pulumi:"ipAddress"`
	// If true, return only DB Systems with a HeatWave cluster attached, if false return only DB Systems with no HeatWave cluster attached. If not present, return all DB Systems.
	IsHeatWaveClusterAttached bool `pulumi:"isHeatWaveClusterAttached"`
	// Specifies if the DB System is highly available.
	IsHighlyAvailable bool `pulumi:"isHighlyAvailable"`
	// Additional information about the current lifecycleState.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The Maintenance Policy for the DB System or Read Replica that this model is included in.
	Maintenances []GetMysqlDbSystemsDbSystemMaintenance `pulumi:"maintenances"`
	// Name of the MySQL Version in use for the DB System.
	MysqlVersion string `pulumi:"mysqlVersion"`
	// Network Security Group OCIDs used for the VNIC attachment.
	NsgIds []string `pulumi:"nsgIds"`
	// Point-in-time Recovery details like earliest and latest recovery time point for the DB System.
	PointInTimeRecoveryDetails []GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetail `pulumi:"pointInTimeRecoveryDetails"`
	// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
	Port int `pulumi:"port"`
	// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
	PortX int `pulumi:"portX"`
	// The read endpoint of a DB System.
	ReadEndpoints []GetMysqlDbSystemsDbSystemReadEndpoint `pulumi:"readEndpoints"`
	// REST configuration details.
	Rests []GetMysqlDbSystemsDbSystemRest `pulumi:"rests"`
	// Secure connection configuration details.
	SecureConnections []GetMysqlDbSystemsDbSystemSecureConnection `pulumi:"secureConnections"`
	// The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
	ShapeName    string `pulumi:"shapeName"`
	ShutdownType string `pulumi:"shutdownType"`
	// Parameters detailing how to provision the initial data of the DB System.
	Sources []GetMysqlDbSystemsDbSystemSource `pulumi:"sources"`
	// DbSystem Lifecycle State
	State string `pulumi:"state"`
	// The OCID of the subnet the DB System is associated with.
	SubnetId string `pulumi:"subnetId"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time the DB System was created.
	TimeCreated string `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetMysqlDbSystemsDbSystemInput is an input type that accepts GetMysqlDbSystemsDbSystemArgs and GetMysqlDbSystemsDbSystemOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemInput` via:
//
//	GetMysqlDbSystemsDbSystemArgs{...}
type GetMysqlDbSystemsDbSystemInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemOutput() GetMysqlDbSystemsDbSystemOutput
	ToGetMysqlDbSystemsDbSystemOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemOutput
}

type GetMysqlDbSystemsDbSystemArgs struct {
	// The access mode indicating if the database access is unrestricted (to all MySQL user accounts),  or restricted (to only certain users with specific privileges):
	// * UNRESTRICTED: the access to the database is not restricted;
	// * RESTRICTED: the access is allowed only to users with specific privileges;  RESTRICTED will correspond to setting the MySQL system variable  [offlineMode](https://dev.mysql.com/doc/en/server-system-variables.html#sysvar_offline_mode) to ON.
	AccessMode    pulumi.StringInput `pulumi:"accessMode"`
	AdminPassword pulumi.StringInput `pulumi:"adminPassword"`
	AdminUsername pulumi.StringInput `pulumi:"adminUsername"`
	// The availability domain in which the DB System is placed.
	AvailabilityDomain pulumi.StringInput `pulumi:"availabilityDomain"`
	// The Backup policy for the DB System.
	BackupPolicies GetMysqlDbSystemsDbSystemBackupPolicyArrayInput `pulumi:"backupPolicies"`
	// A list with a summary of all the Channels attached to the DB System.
	Channels GetMysqlDbSystemsDbSystemChannelArrayInput `pulumi:"channels"`
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The requested Configuration instance.
	ConfigurationId pulumi.StringInput `pulumi:"configurationId"`
	// Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
	CrashRecovery pulumi.StringInput `pulumi:"crashRecovery"`
	// The availability domain and fault domain a DB System is placed in.
	CurrentPlacements GetMysqlDbSystemsDbSystemCurrentPlacementArrayInput `pulumi:"currentPlacements"`
	// The list of customer email addresses that receive information from Oracle about the specified Oracle Cloud Infrastructure DB System resource.  Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators.  Up to 10 email addresses can be added to the customer contacts for a DB System.
	CustomerContacts GetMysqlDbSystemsDbSystemCustomerContactArrayInput `pulumi:"customerContacts"`
	// Initial size of the data volume in GiBs that will be created and attached.
	DataStorageSizeInGb pulumi.IntInput `pulumi:"dataStorageSizeInGb"`
	// Data Storage information.
	DataStorages GetMysqlDbSystemsDbSystemDataStorageArrayInput `pulumi:"dataStorages"`
	// Filter DB Systems by their Database Management configuration.
	DatabaseManagement pulumi.StringInput `pulumi:"databaseManagement"`
	// The database mode indicating the types of statements that are allowed to run in the the DB system. This mode applies only to statements run by user connections. Replicated write statements continue  to be allowed regardless of the DatabaseMode.
	// * READ_WRITE: allow running read and write statements on the DB system;
	// * READ_ONLY: only allow running read statements on the DB system.
	DatabaseMode pulumi.StringInput `pulumi:"databaseMode"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// The Deletion policy for the DB System.
	DeletionPolicies GetMysqlDbSystemsDbSystemDeletionPolicyArrayInput `pulumi:"deletionPolicies"`
	// User-provided data about the DB System.
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only the resource matching the given display name exactly.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Encrypt data details.
	EncryptDatas GetMysqlDbSystemsDbSystemEncryptDataArrayInput `pulumi:"encryptDatas"`
	// The network endpoints available for this DB System.
	Endpoints GetMysqlDbSystemsDbSystemEndpointArrayInput `pulumi:"endpoints"`
	// The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	FaultDomain pulumi.StringInput `pulumi:"faultDomain"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// A summary of a HeatWave cluster.
	HeatWaveClusters GetMysqlDbSystemsDbSystemHeatWaveClusterArrayInput `pulumi:"heatWaveClusters"`
	// The hostname for the primary endpoint of the DB System. Used for DNS. The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com"). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
	HostnameLabel pulumi.StringInput `pulumi:"hostnameLabel"`
	// The OCID of the DB System.
	Id pulumi.StringInput `pulumi:"id"`
	// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// If true, return only DB Systems with a HeatWave cluster attached, if false return only DB Systems with no HeatWave cluster attached. If not present, return all DB Systems.
	IsHeatWaveClusterAttached pulumi.BoolInput `pulumi:"isHeatWaveClusterAttached"`
	// Specifies if the DB System is highly available.
	IsHighlyAvailable pulumi.BoolInput `pulumi:"isHighlyAvailable"`
	// Additional information about the current lifecycleState.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// The Maintenance Policy for the DB System or Read Replica that this model is included in.
	Maintenances GetMysqlDbSystemsDbSystemMaintenanceArrayInput `pulumi:"maintenances"`
	// Name of the MySQL Version in use for the DB System.
	MysqlVersion pulumi.StringInput `pulumi:"mysqlVersion"`
	// Network Security Group OCIDs used for the VNIC attachment.
	NsgIds pulumi.StringArrayInput `pulumi:"nsgIds"`
	// Point-in-time Recovery details like earliest and latest recovery time point for the DB System.
	PointInTimeRecoveryDetails GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayInput `pulumi:"pointInTimeRecoveryDetails"`
	// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
	Port pulumi.IntInput `pulumi:"port"`
	// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
	PortX pulumi.IntInput `pulumi:"portX"`
	// The read endpoint of a DB System.
	ReadEndpoints GetMysqlDbSystemsDbSystemReadEndpointArrayInput `pulumi:"readEndpoints"`
	// REST configuration details.
	Rests GetMysqlDbSystemsDbSystemRestArrayInput `pulumi:"rests"`
	// Secure connection configuration details.
	SecureConnections GetMysqlDbSystemsDbSystemSecureConnectionArrayInput `pulumi:"secureConnections"`
	// The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
	ShapeName    pulumi.StringInput `pulumi:"shapeName"`
	ShutdownType pulumi.StringInput `pulumi:"shutdownType"`
	// Parameters detailing how to provision the initial data of the DB System.
	Sources GetMysqlDbSystemsDbSystemSourceArrayInput `pulumi:"sources"`
	// DbSystem Lifecycle State
	State pulumi.StringInput `pulumi:"state"`
	// The OCID of the subnet the DB System is associated with.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput `pulumi:"systemTags"`
	// The date and time the DB System was created.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetMysqlDbSystemsDbSystemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystem)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemArgs) ToGetMysqlDbSystemsDbSystemOutput() GetMysqlDbSystemsDbSystemOutput {
	return i.ToGetMysqlDbSystemsDbSystemOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemArgs) ToGetMysqlDbSystemsDbSystemOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemOutput)
}

// GetMysqlDbSystemsDbSystemArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemArray and GetMysqlDbSystemsDbSystemArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemArrayInput` via:
//
//	GetMysqlDbSystemsDbSystemArray{ GetMysqlDbSystemsDbSystemArgs{...} }
type GetMysqlDbSystemsDbSystemArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemArrayOutput() GetMysqlDbSystemsDbSystemArrayOutput
	ToGetMysqlDbSystemsDbSystemArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemArrayOutput
}

type GetMysqlDbSystemsDbSystemArray []GetMysqlDbSystemsDbSystemInput

func (GetMysqlDbSystemsDbSystemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystem)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemArray) ToGetMysqlDbSystemsDbSystemArrayOutput() GetMysqlDbSystemsDbSystemArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemArray) ToGetMysqlDbSystemsDbSystemArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemArrayOutput)
}

type GetMysqlDbSystemsDbSystemOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystem)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemOutput) ToGetMysqlDbSystemsDbSystemOutput() GetMysqlDbSystemsDbSystemOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemOutput) ToGetMysqlDbSystemsDbSystemOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemOutput {
	return o
}

// The access mode indicating if the database access is unrestricted (to all MySQL user accounts),  or restricted (to only certain users with specific privileges):
// * UNRESTRICTED: the access to the database is not restricted;
// * RESTRICTED: the access is allowed only to users with specific privileges;  RESTRICTED will correspond to setting the MySQL system variable  [offlineMode](https://dev.mysql.com/doc/en/server-system-variables.html#sysvar_offline_mode) to ON.
func (o GetMysqlDbSystemsDbSystemOutput) AccessMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.AccessMode }).(pulumi.StringOutput)
}

func (o GetMysqlDbSystemsDbSystemOutput) AdminPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.AdminPassword }).(pulumi.StringOutput)
}

func (o GetMysqlDbSystemsDbSystemOutput) AdminUsername() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.AdminUsername }).(pulumi.StringOutput)
}

// The availability domain in which the DB System is placed.
func (o GetMysqlDbSystemsDbSystemOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.AvailabilityDomain }).(pulumi.StringOutput)
}

// The Backup policy for the DB System.
func (o GetMysqlDbSystemsDbSystemOutput) BackupPolicies() GetMysqlDbSystemsDbSystemBackupPolicyArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) []GetMysqlDbSystemsDbSystemBackupPolicy { return v.BackupPolicies }).(GetMysqlDbSystemsDbSystemBackupPolicyArrayOutput)
}

// A list with a summary of all the Channels attached to the DB System.
func (o GetMysqlDbSystemsDbSystemOutput) Channels() GetMysqlDbSystemsDbSystemChannelArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) []GetMysqlDbSystemsDbSystemChannel { return v.Channels }).(GetMysqlDbSystemsDbSystemChannelArrayOutput)
}

// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetMysqlDbSystemsDbSystemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The requested Configuration instance.
func (o GetMysqlDbSystemsDbSystemOutput) ConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.ConfigurationId }).(pulumi.StringOutput)
}

// Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
func (o GetMysqlDbSystemsDbSystemOutput) CrashRecovery() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.CrashRecovery }).(pulumi.StringOutput)
}

// The availability domain and fault domain a DB System is placed in.
func (o GetMysqlDbSystemsDbSystemOutput) CurrentPlacements() GetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) []GetMysqlDbSystemsDbSystemCurrentPlacement {
		return v.CurrentPlacements
	}).(GetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput)
}

// The list of customer email addresses that receive information from Oracle about the specified Oracle Cloud Infrastructure DB System resource.  Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators.  Up to 10 email addresses can be added to the customer contacts for a DB System.
func (o GetMysqlDbSystemsDbSystemOutput) CustomerContacts() GetMysqlDbSystemsDbSystemCustomerContactArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) []GetMysqlDbSystemsDbSystemCustomerContact {
		return v.CustomerContacts
	}).(GetMysqlDbSystemsDbSystemCustomerContactArrayOutput)
}

// Initial size of the data volume in GiBs that will be created and attached.
func (o GetMysqlDbSystemsDbSystemOutput) DataStorageSizeInGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) int { return v.DataStorageSizeInGb }).(pulumi.IntOutput)
}

// Data Storage information.
func (o GetMysqlDbSystemsDbSystemOutput) DataStorages() GetMysqlDbSystemsDbSystemDataStorageArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) []GetMysqlDbSystemsDbSystemDataStorage { return v.DataStorages }).(GetMysqlDbSystemsDbSystemDataStorageArrayOutput)
}

// Filter DB Systems by their Database Management configuration.
func (o GetMysqlDbSystemsDbSystemOutput) DatabaseManagement() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.DatabaseManagement }).(pulumi.StringOutput)
}

// The database mode indicating the types of statements that are allowed to run in the the DB system. This mode applies only to statements run by user connections. Replicated write statements continue  to be allowed regardless of the DatabaseMode.
// * READ_WRITE: allow running read and write statements on the DB system;
// * READ_ONLY: only allow running read statements on the DB system.
func (o GetMysqlDbSystemsDbSystemOutput) DatabaseMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.DatabaseMode }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetMysqlDbSystemsDbSystemOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// The Deletion policy for the DB System.
func (o GetMysqlDbSystemsDbSystemOutput) DeletionPolicies() GetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) []GetMysqlDbSystemsDbSystemDeletionPolicy { return v.DeletionPolicies }).(GetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput)
}

// User-provided data about the DB System.
func (o GetMysqlDbSystemsDbSystemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only the resource matching the given display name exactly.
func (o GetMysqlDbSystemsDbSystemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Encrypt data details.
func (o GetMysqlDbSystemsDbSystemOutput) EncryptDatas() GetMysqlDbSystemsDbSystemEncryptDataArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) []GetMysqlDbSystemsDbSystemEncryptData { return v.EncryptDatas }).(GetMysqlDbSystemsDbSystemEncryptDataArrayOutput)
}

// The network endpoints available for this DB System.
func (o GetMysqlDbSystemsDbSystemOutput) Endpoints() GetMysqlDbSystemsDbSystemEndpointArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) []GetMysqlDbSystemsDbSystemEndpoint { return v.Endpoints }).(GetMysqlDbSystemsDbSystemEndpointArrayOutput)
}

// The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
func (o GetMysqlDbSystemsDbSystemOutput) FaultDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.FaultDomain }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetMysqlDbSystemsDbSystemOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// A summary of a HeatWave cluster.
func (o GetMysqlDbSystemsDbSystemOutput) HeatWaveClusters() GetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) []GetMysqlDbSystemsDbSystemHeatWaveCluster {
		return v.HeatWaveClusters
	}).(GetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput)
}

// The hostname for the primary endpoint of the DB System. Used for DNS. The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com"). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
func (o GetMysqlDbSystemsDbSystemOutput) HostnameLabel() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.HostnameLabel }).(pulumi.StringOutput)
}

// The OCID of the DB System.
func (o GetMysqlDbSystemsDbSystemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.Id }).(pulumi.StringOutput)
}

// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
func (o GetMysqlDbSystemsDbSystemOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.IpAddress }).(pulumi.StringOutput)
}

// If true, return only DB Systems with a HeatWave cluster attached, if false return only DB Systems with no HeatWave cluster attached. If not present, return all DB Systems.
func (o GetMysqlDbSystemsDbSystemOutput) IsHeatWaveClusterAttached() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) bool { return v.IsHeatWaveClusterAttached }).(pulumi.BoolOutput)
}

// Specifies if the DB System is highly available.
func (o GetMysqlDbSystemsDbSystemOutput) IsHighlyAvailable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) bool { return v.IsHighlyAvailable }).(pulumi.BoolOutput)
}

// Additional information about the current lifecycleState.
func (o GetMysqlDbSystemsDbSystemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The Maintenance Policy for the DB System or Read Replica that this model is included in.
func (o GetMysqlDbSystemsDbSystemOutput) Maintenances() GetMysqlDbSystemsDbSystemMaintenanceArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) []GetMysqlDbSystemsDbSystemMaintenance { return v.Maintenances }).(GetMysqlDbSystemsDbSystemMaintenanceArrayOutput)
}

// Name of the MySQL Version in use for the DB System.
func (o GetMysqlDbSystemsDbSystemOutput) MysqlVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.MysqlVersion }).(pulumi.StringOutput)
}

// Network Security Group OCIDs used for the VNIC attachment.
func (o GetMysqlDbSystemsDbSystemOutput) NsgIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) []string { return v.NsgIds }).(pulumi.StringArrayOutput)
}

// Point-in-time Recovery details like earliest and latest recovery time point for the DB System.
func (o GetMysqlDbSystemsDbSystemOutput) PointInTimeRecoveryDetails() GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) []GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetail {
		return v.PointInTimeRecoveryDetails
	}).(GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput)
}

// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
func (o GetMysqlDbSystemsDbSystemOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) int { return v.Port }).(pulumi.IntOutput)
}

// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
func (o GetMysqlDbSystemsDbSystemOutput) PortX() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) int { return v.PortX }).(pulumi.IntOutput)
}

// The read endpoint of a DB System.
func (o GetMysqlDbSystemsDbSystemOutput) ReadEndpoints() GetMysqlDbSystemsDbSystemReadEndpointArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) []GetMysqlDbSystemsDbSystemReadEndpoint { return v.ReadEndpoints }).(GetMysqlDbSystemsDbSystemReadEndpointArrayOutput)
}

// REST configuration details.
func (o GetMysqlDbSystemsDbSystemOutput) Rests() GetMysqlDbSystemsDbSystemRestArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) []GetMysqlDbSystemsDbSystemRest { return v.Rests }).(GetMysqlDbSystemsDbSystemRestArrayOutput)
}

// Secure connection configuration details.
func (o GetMysqlDbSystemsDbSystemOutput) SecureConnections() GetMysqlDbSystemsDbSystemSecureConnectionArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) []GetMysqlDbSystemsDbSystemSecureConnection {
		return v.SecureConnections
	}).(GetMysqlDbSystemsDbSystemSecureConnectionArrayOutput)
}

// The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
func (o GetMysqlDbSystemsDbSystemOutput) ShapeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.ShapeName }).(pulumi.StringOutput)
}

func (o GetMysqlDbSystemsDbSystemOutput) ShutdownType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.ShutdownType }).(pulumi.StringOutput)
}

// Parameters detailing how to provision the initial data of the DB System.
func (o GetMysqlDbSystemsDbSystemOutput) Sources() GetMysqlDbSystemsDbSystemSourceArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) []GetMysqlDbSystemsDbSystemSource { return v.Sources }).(GetMysqlDbSystemsDbSystemSourceArrayOutput)
}

// DbSystem Lifecycle State
func (o GetMysqlDbSystemsDbSystemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.State }).(pulumi.StringOutput)
}

// The OCID of the subnet the DB System is associated with.
func (o GetMysqlDbSystemsDbSystemOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetMysqlDbSystemsDbSystemOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The date and time the DB System was created.
func (o GetMysqlDbSystemsDbSystemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the DB System was last updated.
func (o GetMysqlDbSystemsDbSystemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetMysqlDbSystemsDbSystemArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystem)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemArrayOutput) ToGetMysqlDbSystemsDbSystemArrayOutput() GetMysqlDbSystemsDbSystemArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemArrayOutput) ToGetMysqlDbSystemsDbSystemArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystem {
		return vs[0].([]GetMysqlDbSystemsDbSystem)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemOutput)
}

type GetMysqlDbSystemsDbSystemBackupPolicy struct {
	// List of policies of a DB system to schedule cross-region DB system backup copy.
	CopyPolicies []GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicy `pulumi:"copyPolicies"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Specifies if the DB System read endpoint is enabled or not.
	IsEnabled bool `pulumi:"isEnabled"`
	// The PITR policy for the DB System.
	PitrPolicies []GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicy `pulumi:"pitrPolicies"`
	// The number of days automated backups are retained.
	RetentionInDays int `pulumi:"retentionInDays"`
	// Retains the backup to be deleted due to the retention policy in DELETE SCHEDULED state for 7 days before permanently deleting it.
	SoftDelete string `pulumi:"softDelete"`
	// The start time of the maintenance window.
	WindowStartTime string `pulumi:"windowStartTime"`
}

// GetMysqlDbSystemsDbSystemBackupPolicyInput is an input type that accepts GetMysqlDbSystemsDbSystemBackupPolicyArgs and GetMysqlDbSystemsDbSystemBackupPolicyOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemBackupPolicyInput` via:
//
//	GetMysqlDbSystemsDbSystemBackupPolicyArgs{...}
type GetMysqlDbSystemsDbSystemBackupPolicyInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemBackupPolicyOutput() GetMysqlDbSystemsDbSystemBackupPolicyOutput
	ToGetMysqlDbSystemsDbSystemBackupPolicyOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemBackupPolicyOutput
}

type GetMysqlDbSystemsDbSystemBackupPolicyArgs struct {
	// List of policies of a DB system to schedule cross-region DB system backup copy.
	CopyPolicies GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArrayInput `pulumi:"copyPolicies"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// Specifies if the DB System read endpoint is enabled or not.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The PITR policy for the DB System.
	PitrPolicies GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayInput `pulumi:"pitrPolicies"`
	// The number of days automated backups are retained.
	RetentionInDays pulumi.IntInput `pulumi:"retentionInDays"`
	// Retains the backup to be deleted due to the retention policy in DELETE SCHEDULED state for 7 days before permanently deleting it.
	SoftDelete pulumi.StringInput `pulumi:"softDelete"`
	// The start time of the maintenance window.
	WindowStartTime pulumi.StringInput `pulumi:"windowStartTime"`
}

func (GetMysqlDbSystemsDbSystemBackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemBackupPolicy)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemBackupPolicyArgs) ToGetMysqlDbSystemsDbSystemBackupPolicyOutput() GetMysqlDbSystemsDbSystemBackupPolicyOutput {
	return i.ToGetMysqlDbSystemsDbSystemBackupPolicyOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemBackupPolicyArgs) ToGetMysqlDbSystemsDbSystemBackupPolicyOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemBackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemBackupPolicyOutput)
}

// GetMysqlDbSystemsDbSystemBackupPolicyArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemBackupPolicyArray and GetMysqlDbSystemsDbSystemBackupPolicyArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemBackupPolicyArrayInput` via:
//
//	GetMysqlDbSystemsDbSystemBackupPolicyArray{ GetMysqlDbSystemsDbSystemBackupPolicyArgs{...} }
type GetMysqlDbSystemsDbSystemBackupPolicyArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemBackupPolicyArrayOutput() GetMysqlDbSystemsDbSystemBackupPolicyArrayOutput
	ToGetMysqlDbSystemsDbSystemBackupPolicyArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemBackupPolicyArrayOutput
}

type GetMysqlDbSystemsDbSystemBackupPolicyArray []GetMysqlDbSystemsDbSystemBackupPolicyInput

func (GetMysqlDbSystemsDbSystemBackupPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemBackupPolicy)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemBackupPolicyArray) ToGetMysqlDbSystemsDbSystemBackupPolicyArrayOutput() GetMysqlDbSystemsDbSystemBackupPolicyArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemBackupPolicyArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemBackupPolicyArray) ToGetMysqlDbSystemsDbSystemBackupPolicyArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemBackupPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemBackupPolicyArrayOutput)
}

type GetMysqlDbSystemsDbSystemBackupPolicyOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemBackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemBackupPolicy)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemBackupPolicyOutput) ToGetMysqlDbSystemsDbSystemBackupPolicyOutput() GetMysqlDbSystemsDbSystemBackupPolicyOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemBackupPolicyOutput) ToGetMysqlDbSystemsDbSystemBackupPolicyOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemBackupPolicyOutput {
	return o
}

// List of policies of a DB system to schedule cross-region DB system backup copy.
func (o GetMysqlDbSystemsDbSystemBackupPolicyOutput) CopyPolicies() GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemBackupPolicy) []GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicy {
		return v.CopyPolicies
	}).(GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArrayOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetMysqlDbSystemsDbSystemBackupPolicyOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemBackupPolicy) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetMysqlDbSystemsDbSystemBackupPolicyOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemBackupPolicy) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Specifies if the DB System read endpoint is enabled or not.
func (o GetMysqlDbSystemsDbSystemBackupPolicyOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemBackupPolicy) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The PITR policy for the DB System.
func (o GetMysqlDbSystemsDbSystemBackupPolicyOutput) PitrPolicies() GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemBackupPolicy) []GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicy {
		return v.PitrPolicies
	}).(GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput)
}

// The number of days automated backups are retained.
func (o GetMysqlDbSystemsDbSystemBackupPolicyOutput) RetentionInDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemBackupPolicy) int { return v.RetentionInDays }).(pulumi.IntOutput)
}

// Retains the backup to be deleted due to the retention policy in DELETE SCHEDULED state for 7 days before permanently deleting it.
func (o GetMysqlDbSystemsDbSystemBackupPolicyOutput) SoftDelete() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemBackupPolicy) string { return v.SoftDelete }).(pulumi.StringOutput)
}

// The start time of the maintenance window.
func (o GetMysqlDbSystemsDbSystemBackupPolicyOutput) WindowStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemBackupPolicy) string { return v.WindowStartTime }).(pulumi.StringOutput)
}

type GetMysqlDbSystemsDbSystemBackupPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemBackupPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemBackupPolicy)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemBackupPolicyArrayOutput) ToGetMysqlDbSystemsDbSystemBackupPolicyArrayOutput() GetMysqlDbSystemsDbSystemBackupPolicyArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemBackupPolicyArrayOutput) ToGetMysqlDbSystemsDbSystemBackupPolicyArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemBackupPolicyArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemBackupPolicyArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemBackupPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystemBackupPolicy {
		return vs[0].([]GetMysqlDbSystemsDbSystemBackupPolicy)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemBackupPolicyOutput)
}

type GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicy struct {
	// Number of days to retain the copied DB system backup.
	BackupCopyRetentionInDays int `pulumi:"backupCopyRetentionInDays"`
	// The destination region name to which the DB system backup will be copied.
	CopyToRegion string `pulumi:"copyToRegion"`
}

// GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyInput is an input type that accepts GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArgs and GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyInput` via:
//
//	GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArgs{...}
type GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyOutput() GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyOutput
	ToGetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyOutput
}

type GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArgs struct {
	// Number of days to retain the copied DB system backup.
	BackupCopyRetentionInDays pulumi.IntInput `pulumi:"backupCopyRetentionInDays"`
	// The destination region name to which the DB system backup will be copied.
	CopyToRegion pulumi.StringInput `pulumi:"copyToRegion"`
}

func (GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicy)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArgs) ToGetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyOutput() GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyOutput {
	return i.ToGetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArgs) ToGetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyOutput)
}

// GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArray and GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArrayInput` via:
//
//	GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArray{ GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArgs{...} }
type GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArrayOutput() GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArrayOutput
	ToGetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArrayOutput
}

type GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArray []GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyInput

func (GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicy)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArray) ToGetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArrayOutput() GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArray) ToGetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArrayOutput)
}

type GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicy)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyOutput) ToGetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyOutput() GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyOutput) ToGetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyOutput {
	return o
}

// Number of days to retain the copied DB system backup.
func (o GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyOutput) BackupCopyRetentionInDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicy) int { return v.BackupCopyRetentionInDays }).(pulumi.IntOutput)
}

// The destination region name to which the DB system backup will be copied.
func (o GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyOutput) CopyToRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicy) string { return v.CopyToRegion }).(pulumi.StringOutput)
}

type GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicy)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArrayOutput) ToGetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArrayOutput() GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArrayOutput) ToGetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicy {
		return vs[0].([]GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicy)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyOutput)
}

type GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicy struct {
	// Specifies if the DB System read endpoint is enabled or not.
	IsEnabled bool `pulumi:"isEnabled"`
}

// GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyInput is an input type that accepts GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArgs and GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyInput` via:
//
//	GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArgs{...}
type GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput() GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput
	ToGetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput
}

type GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArgs struct {
	// Specifies if the DB System read endpoint is enabled or not.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
}

func (GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicy)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArgs) ToGetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput() GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput {
	return i.ToGetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArgs) ToGetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput)
}

// GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArray and GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayInput` via:
//
//	GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArray{ GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArgs{...} }
type GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput() GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput
	ToGetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput
}

type GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArray []GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyInput

func (GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicy)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArray) ToGetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput() GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArray) ToGetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput)
}

type GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicy)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput) ToGetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput() GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput) ToGetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput {
	return o
}

// Specifies if the DB System read endpoint is enabled or not.
func (o GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicy) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

type GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicy)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput) ToGetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput() GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput) ToGetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicy {
		return vs[0].([]GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicy)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput)
}

type GetMysqlDbSystemsDbSystemChannel struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A filter to return only the resource matching the given display name exactly.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The OCID of the DB System.
	Id string `pulumi:"id"`
	// Specifies if the DB System read endpoint is enabled or not.
	IsEnabled bool `pulumi:"isEnabled"`
	// Additional information about the current lifecycleState.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Parameters detailing how to provision the initial data of the DB System.
	Sources []GetMysqlDbSystemsDbSystemChannelSource `pulumi:"sources"`
	// DbSystem Lifecycle State
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// Details about the Channel target.
	Targets []GetMysqlDbSystemsDbSystemChannelTarget `pulumi:"targets"`
	// The date and time the DB System was created.
	TimeCreated string `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetMysqlDbSystemsDbSystemChannelInput is an input type that accepts GetMysqlDbSystemsDbSystemChannelArgs and GetMysqlDbSystemsDbSystemChannelOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemChannelInput` via:
//
//	GetMysqlDbSystemsDbSystemChannelArgs{...}
type GetMysqlDbSystemsDbSystemChannelInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemChannelOutput() GetMysqlDbSystemsDbSystemChannelOutput
	ToGetMysqlDbSystemsDbSystemChannelOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemChannelOutput
}

type GetMysqlDbSystemsDbSystemChannelArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// A filter to return only the resource matching the given display name exactly.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// The OCID of the DB System.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies if the DB System read endpoint is enabled or not.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Additional information about the current lifecycleState.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// Parameters detailing how to provision the initial data of the DB System.
	Sources GetMysqlDbSystemsDbSystemChannelSourceArrayInput `pulumi:"sources"`
	// DbSystem Lifecycle State
	State pulumi.StringInput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput `pulumi:"systemTags"`
	// Details about the Channel target.
	Targets GetMysqlDbSystemsDbSystemChannelTargetArrayInput `pulumi:"targets"`
	// The date and time the DB System was created.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetMysqlDbSystemsDbSystemChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannel)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemChannelArgs) ToGetMysqlDbSystemsDbSystemChannelOutput() GetMysqlDbSystemsDbSystemChannelOutput {
	return i.ToGetMysqlDbSystemsDbSystemChannelOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemChannelArgs) ToGetMysqlDbSystemsDbSystemChannelOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemChannelOutput)
}

// GetMysqlDbSystemsDbSystemChannelArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemChannelArray and GetMysqlDbSystemsDbSystemChannelArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemChannelArrayInput` via:
//
//	GetMysqlDbSystemsDbSystemChannelArray{ GetMysqlDbSystemsDbSystemChannelArgs{...} }
type GetMysqlDbSystemsDbSystemChannelArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemChannelArrayOutput() GetMysqlDbSystemsDbSystemChannelArrayOutput
	ToGetMysqlDbSystemsDbSystemChannelArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemChannelArrayOutput
}

type GetMysqlDbSystemsDbSystemChannelArray []GetMysqlDbSystemsDbSystemChannelInput

func (GetMysqlDbSystemsDbSystemChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemChannel)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemChannelArray) ToGetMysqlDbSystemsDbSystemChannelArrayOutput() GetMysqlDbSystemsDbSystemChannelArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemChannelArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemChannelArray) ToGetMysqlDbSystemsDbSystemChannelArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemChannelArrayOutput)
}

type GetMysqlDbSystemsDbSystemChannelOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannel)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemChannelOutput) ToGetMysqlDbSystemsDbSystemChannelOutput() GetMysqlDbSystemsDbSystemChannelOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemChannelOutput) ToGetMysqlDbSystemsDbSystemChannelOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelOutput {
	return o
}

// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetMysqlDbSystemsDbSystemChannelOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannel) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetMysqlDbSystemsDbSystemChannelOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannel) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A filter to return only the resource matching the given display name exactly.
func (o GetMysqlDbSystemsDbSystemChannelOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannel) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetMysqlDbSystemsDbSystemChannelOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannel) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The OCID of the DB System.
func (o GetMysqlDbSystemsDbSystemChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannel) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies if the DB System read endpoint is enabled or not.
func (o GetMysqlDbSystemsDbSystemChannelOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannel) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Additional information about the current lifecycleState.
func (o GetMysqlDbSystemsDbSystemChannelOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannel) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Parameters detailing how to provision the initial data of the DB System.
func (o GetMysqlDbSystemsDbSystemChannelOutput) Sources() GetMysqlDbSystemsDbSystemChannelSourceArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannel) []GetMysqlDbSystemsDbSystemChannelSource { return v.Sources }).(GetMysqlDbSystemsDbSystemChannelSourceArrayOutput)
}

// DbSystem Lifecycle State
func (o GetMysqlDbSystemsDbSystemChannelOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannel) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetMysqlDbSystemsDbSystemChannelOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannel) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// Details about the Channel target.
func (o GetMysqlDbSystemsDbSystemChannelOutput) Targets() GetMysqlDbSystemsDbSystemChannelTargetArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannel) []GetMysqlDbSystemsDbSystemChannelTarget { return v.Targets }).(GetMysqlDbSystemsDbSystemChannelTargetArrayOutput)
}

// The date and time the DB System was created.
func (o GetMysqlDbSystemsDbSystemChannelOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannel) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the DB System was last updated.
func (o GetMysqlDbSystemsDbSystemChannelOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannel) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetMysqlDbSystemsDbSystemChannelArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemChannel)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemChannelArrayOutput) ToGetMysqlDbSystemsDbSystemChannelArrayOutput() GetMysqlDbSystemsDbSystemChannelArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemChannelArrayOutput) ToGetMysqlDbSystemsDbSystemChannelArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemChannelArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystemChannel {
		return vs[0].([]GetMysqlDbSystemsDbSystemChannel)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemChannelOutput)
}

type GetMysqlDbSystemsDbSystemChannelSource struct {
	// Specifies how the replication channel handles replicated transactions without an identifier, enabling replication from a source that does not use transaction-id-based replication to a replica that does.
	AnonymousTransactionsHandlings []GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandling `pulumi:"anonymousTransactionsHandlings"`
	// The network address of the DB System.
	Hostname string `pulumi:"hostname"`
	// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
	Port int `pulumi:"port"`
	// The specific source identifier.
	SourceType string `pulumi:"sourceType"`
	// The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
	SslCaCertificates []GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificate `pulumi:"sslCaCertificates"`
	// The SSL mode of the Channel.
	SslMode string `pulumi:"sslMode"`
	// The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
	Username string `pulumi:"username"`
}

// GetMysqlDbSystemsDbSystemChannelSourceInput is an input type that accepts GetMysqlDbSystemsDbSystemChannelSourceArgs and GetMysqlDbSystemsDbSystemChannelSourceOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemChannelSourceInput` via:
//
//	GetMysqlDbSystemsDbSystemChannelSourceArgs{...}
type GetMysqlDbSystemsDbSystemChannelSourceInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemChannelSourceOutput() GetMysqlDbSystemsDbSystemChannelSourceOutput
	ToGetMysqlDbSystemsDbSystemChannelSourceOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemChannelSourceOutput
}

type GetMysqlDbSystemsDbSystemChannelSourceArgs struct {
	// Specifies how the replication channel handles replicated transactions without an identifier, enabling replication from a source that does not use transaction-id-based replication to a replica that does.
	AnonymousTransactionsHandlings GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArrayInput `pulumi:"anonymousTransactionsHandlings"`
	// The network address of the DB System.
	Hostname pulumi.StringInput `pulumi:"hostname"`
	// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
	Port pulumi.IntInput `pulumi:"port"`
	// The specific source identifier.
	SourceType pulumi.StringInput `pulumi:"sourceType"`
	// The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
	SslCaCertificates GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayInput `pulumi:"sslCaCertificates"`
	// The SSL mode of the Channel.
	SslMode pulumi.StringInput `pulumi:"sslMode"`
	// The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetMysqlDbSystemsDbSystemChannelSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannelSource)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemChannelSourceArgs) ToGetMysqlDbSystemsDbSystemChannelSourceOutput() GetMysqlDbSystemsDbSystemChannelSourceOutput {
	return i.ToGetMysqlDbSystemsDbSystemChannelSourceOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemChannelSourceArgs) ToGetMysqlDbSystemsDbSystemChannelSourceOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemChannelSourceOutput)
}

// GetMysqlDbSystemsDbSystemChannelSourceArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemChannelSourceArray and GetMysqlDbSystemsDbSystemChannelSourceArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemChannelSourceArrayInput` via:
//
//	GetMysqlDbSystemsDbSystemChannelSourceArray{ GetMysqlDbSystemsDbSystemChannelSourceArgs{...} }
type GetMysqlDbSystemsDbSystemChannelSourceArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemChannelSourceArrayOutput() GetMysqlDbSystemsDbSystemChannelSourceArrayOutput
	ToGetMysqlDbSystemsDbSystemChannelSourceArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemChannelSourceArrayOutput
}

type GetMysqlDbSystemsDbSystemChannelSourceArray []GetMysqlDbSystemsDbSystemChannelSourceInput

func (GetMysqlDbSystemsDbSystemChannelSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemChannelSource)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemChannelSourceArray) ToGetMysqlDbSystemsDbSystemChannelSourceArrayOutput() GetMysqlDbSystemsDbSystemChannelSourceArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemChannelSourceArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemChannelSourceArray) ToGetMysqlDbSystemsDbSystemChannelSourceArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemChannelSourceArrayOutput)
}

type GetMysqlDbSystemsDbSystemChannelSourceOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemChannelSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannelSource)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemChannelSourceOutput) ToGetMysqlDbSystemsDbSystemChannelSourceOutput() GetMysqlDbSystemsDbSystemChannelSourceOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemChannelSourceOutput) ToGetMysqlDbSystemsDbSystemChannelSourceOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelSourceOutput {
	return o
}

// Specifies how the replication channel handles replicated transactions without an identifier, enabling replication from a source that does not use transaction-id-based replication to a replica that does.
func (o GetMysqlDbSystemsDbSystemChannelSourceOutput) AnonymousTransactionsHandlings() GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannelSource) []GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandling {
		return v.AnonymousTransactionsHandlings
	}).(GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput)
}

// The network address of the DB System.
func (o GetMysqlDbSystemsDbSystemChannelSourceOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannelSource) string { return v.Hostname }).(pulumi.StringOutput)
}

// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
func (o GetMysqlDbSystemsDbSystemChannelSourceOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannelSource) int { return v.Port }).(pulumi.IntOutput)
}

// The specific source identifier.
func (o GetMysqlDbSystemsDbSystemChannelSourceOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannelSource) string { return v.SourceType }).(pulumi.StringOutput)
}

// The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
func (o GetMysqlDbSystemsDbSystemChannelSourceOutput) SslCaCertificates() GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannelSource) []GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificate {
		return v.SslCaCertificates
	}).(GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput)
}

// The SSL mode of the Channel.
func (o GetMysqlDbSystemsDbSystemChannelSourceOutput) SslMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannelSource) string { return v.SslMode }).(pulumi.StringOutput)
}

// The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
func (o GetMysqlDbSystemsDbSystemChannelSourceOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannelSource) string { return v.Username }).(pulumi.StringOutput)
}

type GetMysqlDbSystemsDbSystemChannelSourceArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemChannelSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemChannelSource)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemChannelSourceArrayOutput) ToGetMysqlDbSystemsDbSystemChannelSourceArrayOutput() GetMysqlDbSystemsDbSystemChannelSourceArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemChannelSourceArrayOutput) ToGetMysqlDbSystemsDbSystemChannelSourceArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelSourceArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemChannelSourceArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemChannelSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystemChannelSource {
		return vs[0].([]GetMysqlDbSystemsDbSystemChannelSource)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemChannelSourceOutput)
}

type GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandling struct {
	// Specifies one of the coordinates (file) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
	LastConfiguredLogFilename string `pulumi:"lastConfiguredLogFilename"`
	// Specifies one of the coordinates (offset) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
	LastConfiguredLogOffset string `pulumi:"lastConfiguredLogOffset"`
	// Specifies how the replication channel handles anonymous transactions.
	Policy string `pulumi:"policy"`
	// The UUID that is used as a prefix when generating transaction identifiers for anonymous transactions coming from the source. You can change the UUID later.
	Uuid string `pulumi:"uuid"`
}

// GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingInput is an input type that accepts GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArgs and GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingInput` via:
//
//	GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArgs{...}
type GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingOutput() GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingOutput
	ToGetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingOutput
}

type GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArgs struct {
	// Specifies one of the coordinates (file) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
	LastConfiguredLogFilename pulumi.StringInput `pulumi:"lastConfiguredLogFilename"`
	// Specifies one of the coordinates (offset) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
	LastConfiguredLogOffset pulumi.StringInput `pulumi:"lastConfiguredLogOffset"`
	// Specifies how the replication channel handles anonymous transactions.
	Policy pulumi.StringInput `pulumi:"policy"`
	// The UUID that is used as a prefix when generating transaction identifiers for anonymous transactions coming from the source. You can change the UUID later.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandling)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArgs) ToGetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingOutput() GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingOutput {
	return i.ToGetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArgs) ToGetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingOutput)
}

// GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArray and GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArrayInput` via:
//
//	GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArray{ GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArgs{...} }
type GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput() GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput
	ToGetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput
}

type GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArray []GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingInput

func (GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandling)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArray) ToGetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput() GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArray) ToGetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput)
}

type GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandling)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingOutput) ToGetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingOutput() GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingOutput) ToGetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingOutput {
	return o
}

// Specifies one of the coordinates (file) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
func (o GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingOutput) LastConfiguredLogFilename() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandling) string {
		return v.LastConfiguredLogFilename
	}).(pulumi.StringOutput)
}

// Specifies one of the coordinates (offset) at which the replica should begin reading the source's log. As this value specifies the point where replication starts from, it is only used once, when it starts. It is never used again, unless a new UpdateChannel operation modifies it.
func (o GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingOutput) LastConfiguredLogOffset() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandling) string {
		return v.LastConfiguredLogOffset
	}).(pulumi.StringOutput)
}

// Specifies how the replication channel handles anonymous transactions.
func (o GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandling) string { return v.Policy }).(pulumi.StringOutput)
}

// The UUID that is used as a prefix when generating transaction identifiers for anonymous transactions coming from the source. You can change the UUID later.
func (o GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandling) string { return v.Uuid }).(pulumi.StringOutput)
}

type GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandling)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput) ToGetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput() GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput) ToGetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandling {
		return vs[0].([]GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandling)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingOutput)
}

type GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificate struct {
	// The type of CA certificate.
	CertificateType string `pulumi:"certificateType"`
	// The string containing the CA certificate in PEM format.
	Contents string `pulumi:"contents"`
}

// GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateInput is an input type that accepts GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArgs and GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateInput` via:
//
//	GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArgs{...}
type GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput() GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput
	ToGetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput
}

type GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArgs struct {
	// The type of CA certificate.
	CertificateType pulumi.StringInput `pulumi:"certificateType"`
	// The string containing the CA certificate in PEM format.
	Contents pulumi.StringInput `pulumi:"contents"`
}

func (GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificate)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArgs) ToGetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput() GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput {
	return i.ToGetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArgs) ToGetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput)
}

// GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArray and GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayInput` via:
//
//	GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArray{ GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArgs{...} }
type GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput() GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput
	ToGetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput
}

type GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArray []GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateInput

func (GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificate)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArray) ToGetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput() GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArray) ToGetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput)
}

type GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificate)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput) ToGetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput() GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput) ToGetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput {
	return o
}

// The type of CA certificate.
func (o GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput) CertificateType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificate) string { return v.CertificateType }).(pulumi.StringOutput)
}

// The string containing the CA certificate in PEM format.
func (o GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput) Contents() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificate) string { return v.Contents }).(pulumi.StringOutput)
}

type GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificate)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput) ToGetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput() GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput) ToGetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificate {
		return vs[0].([]GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificate)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput)
}

type GetMysqlDbSystemsDbSystemChannelTarget struct {
	// The username for the replication applier of the target MySQL DB System.
	ApplierUsername string `pulumi:"applierUsername"`
	// The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
	ChannelName string `pulumi:"channelName"`
	// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId string `pulumi:"dbSystemId"`
	// Specifies the amount of time, in seconds, that the channel waits before  applying a transaction received from the source.
	DelayInSeconds int `pulumi:"delayInSeconds"`
	// Replication filter rules to be applied at the DB System Channel target.
	Filters []GetMysqlDbSystemsDbSystemChannelTargetFilter `pulumi:"filters"`
	// Specifies how a replication channel handles the creation and alteration of tables  that do not have a primary key.
	TablesWithoutPrimaryKeyHandling string `pulumi:"tablesWithoutPrimaryKeyHandling"`
	// The specific target identifier.
	TargetType string `pulumi:"targetType"`
}

// GetMysqlDbSystemsDbSystemChannelTargetInput is an input type that accepts GetMysqlDbSystemsDbSystemChannelTargetArgs and GetMysqlDbSystemsDbSystemChannelTargetOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemChannelTargetInput` via:
//
//	GetMysqlDbSystemsDbSystemChannelTargetArgs{...}
type GetMysqlDbSystemsDbSystemChannelTargetInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemChannelTargetOutput() GetMysqlDbSystemsDbSystemChannelTargetOutput
	ToGetMysqlDbSystemsDbSystemChannelTargetOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemChannelTargetOutput
}

type GetMysqlDbSystemsDbSystemChannelTargetArgs struct {
	// The username for the replication applier of the target MySQL DB System.
	ApplierUsername pulumi.StringInput `pulumi:"applierUsername"`
	// The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId pulumi.StringInput `pulumi:"dbSystemId"`
	// Specifies the amount of time, in seconds, that the channel waits before  applying a transaction received from the source.
	DelayInSeconds pulumi.IntInput `pulumi:"delayInSeconds"`
	// Replication filter rules to be applied at the DB System Channel target.
	Filters GetMysqlDbSystemsDbSystemChannelTargetFilterArrayInput `pulumi:"filters"`
	// Specifies how a replication channel handles the creation and alteration of tables  that do not have a primary key.
	TablesWithoutPrimaryKeyHandling pulumi.StringInput `pulumi:"tablesWithoutPrimaryKeyHandling"`
	// The specific target identifier.
	TargetType pulumi.StringInput `pulumi:"targetType"`
}

func (GetMysqlDbSystemsDbSystemChannelTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannelTarget)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemChannelTargetArgs) ToGetMysqlDbSystemsDbSystemChannelTargetOutput() GetMysqlDbSystemsDbSystemChannelTargetOutput {
	return i.ToGetMysqlDbSystemsDbSystemChannelTargetOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemChannelTargetArgs) ToGetMysqlDbSystemsDbSystemChannelTargetOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemChannelTargetOutput)
}

// GetMysqlDbSystemsDbSystemChannelTargetArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemChannelTargetArray and GetMysqlDbSystemsDbSystemChannelTargetArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemChannelTargetArrayInput` via:
//
//	GetMysqlDbSystemsDbSystemChannelTargetArray{ GetMysqlDbSystemsDbSystemChannelTargetArgs{...} }
type GetMysqlDbSystemsDbSystemChannelTargetArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemChannelTargetArrayOutput() GetMysqlDbSystemsDbSystemChannelTargetArrayOutput
	ToGetMysqlDbSystemsDbSystemChannelTargetArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemChannelTargetArrayOutput
}

type GetMysqlDbSystemsDbSystemChannelTargetArray []GetMysqlDbSystemsDbSystemChannelTargetInput

func (GetMysqlDbSystemsDbSystemChannelTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemChannelTarget)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemChannelTargetArray) ToGetMysqlDbSystemsDbSystemChannelTargetArrayOutput() GetMysqlDbSystemsDbSystemChannelTargetArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemChannelTargetArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemChannelTargetArray) ToGetMysqlDbSystemsDbSystemChannelTargetArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemChannelTargetArrayOutput)
}

type GetMysqlDbSystemsDbSystemChannelTargetOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemChannelTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannelTarget)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemChannelTargetOutput) ToGetMysqlDbSystemsDbSystemChannelTargetOutput() GetMysqlDbSystemsDbSystemChannelTargetOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemChannelTargetOutput) ToGetMysqlDbSystemsDbSystemChannelTargetOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelTargetOutput {
	return o
}

// The username for the replication applier of the target MySQL DB System.
func (o GetMysqlDbSystemsDbSystemChannelTargetOutput) ApplierUsername() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannelTarget) string { return v.ApplierUsername }).(pulumi.StringOutput)
}

// The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
func (o GetMysqlDbSystemsDbSystemChannelTargetOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannelTarget) string { return v.ChannelName }).(pulumi.StringOutput)
}

// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetMysqlDbSystemsDbSystemChannelTargetOutput) DbSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannelTarget) string { return v.DbSystemId }).(pulumi.StringOutput)
}

// Specifies the amount of time, in seconds, that the channel waits before  applying a transaction received from the source.
func (o GetMysqlDbSystemsDbSystemChannelTargetOutput) DelayInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannelTarget) int { return v.DelayInSeconds }).(pulumi.IntOutput)
}

// Replication filter rules to be applied at the DB System Channel target.
func (o GetMysqlDbSystemsDbSystemChannelTargetOutput) Filters() GetMysqlDbSystemsDbSystemChannelTargetFilterArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannelTarget) []GetMysqlDbSystemsDbSystemChannelTargetFilter {
		return v.Filters
	}).(GetMysqlDbSystemsDbSystemChannelTargetFilterArrayOutput)
}

// Specifies how a replication channel handles the creation and alteration of tables  that do not have a primary key.
func (o GetMysqlDbSystemsDbSystemChannelTargetOutput) TablesWithoutPrimaryKeyHandling() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannelTarget) string { return v.TablesWithoutPrimaryKeyHandling }).(pulumi.StringOutput)
}

// The specific target identifier.
func (o GetMysqlDbSystemsDbSystemChannelTargetOutput) TargetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannelTarget) string { return v.TargetType }).(pulumi.StringOutput)
}

type GetMysqlDbSystemsDbSystemChannelTargetArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemChannelTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemChannelTarget)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemChannelTargetArrayOutput) ToGetMysqlDbSystemsDbSystemChannelTargetArrayOutput() GetMysqlDbSystemsDbSystemChannelTargetArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemChannelTargetArrayOutput) ToGetMysqlDbSystemsDbSystemChannelTargetArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelTargetArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemChannelTargetArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemChannelTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystemChannelTarget {
		return vs[0].([]GetMysqlDbSystemsDbSystemChannelTarget)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemChannelTargetOutput)
}

type GetMysqlDbSystemsDbSystemChannelTargetFilter struct {
	// The type of the filter rule.
	Type string `pulumi:"type"`
	// The body of the filter rule. This can represent a database, a table, or a database pair (represented as "db1->db2"). For more information, see [Replication Filtering Rules](https://dev.mysql.com/doc/refman/8.0/en/replication-rules.html).
	Value string `pulumi:"value"`
}

// GetMysqlDbSystemsDbSystemChannelTargetFilterInput is an input type that accepts GetMysqlDbSystemsDbSystemChannelTargetFilterArgs and GetMysqlDbSystemsDbSystemChannelTargetFilterOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemChannelTargetFilterInput` via:
//
//	GetMysqlDbSystemsDbSystemChannelTargetFilterArgs{...}
type GetMysqlDbSystemsDbSystemChannelTargetFilterInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemChannelTargetFilterOutput() GetMysqlDbSystemsDbSystemChannelTargetFilterOutput
	ToGetMysqlDbSystemsDbSystemChannelTargetFilterOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemChannelTargetFilterOutput
}

type GetMysqlDbSystemsDbSystemChannelTargetFilterArgs struct {
	// The type of the filter rule.
	Type pulumi.StringInput `pulumi:"type"`
	// The body of the filter rule. This can represent a database, a table, or a database pair (represented as "db1->db2"). For more information, see [Replication Filtering Rules](https://dev.mysql.com/doc/refman/8.0/en/replication-rules.html).
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetMysqlDbSystemsDbSystemChannelTargetFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannelTargetFilter)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemChannelTargetFilterArgs) ToGetMysqlDbSystemsDbSystemChannelTargetFilterOutput() GetMysqlDbSystemsDbSystemChannelTargetFilterOutput {
	return i.ToGetMysqlDbSystemsDbSystemChannelTargetFilterOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemChannelTargetFilterArgs) ToGetMysqlDbSystemsDbSystemChannelTargetFilterOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelTargetFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemChannelTargetFilterOutput)
}

// GetMysqlDbSystemsDbSystemChannelTargetFilterArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemChannelTargetFilterArray and GetMysqlDbSystemsDbSystemChannelTargetFilterArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemChannelTargetFilterArrayInput` via:
//
//	GetMysqlDbSystemsDbSystemChannelTargetFilterArray{ GetMysqlDbSystemsDbSystemChannelTargetFilterArgs{...} }
type GetMysqlDbSystemsDbSystemChannelTargetFilterArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemChannelTargetFilterArrayOutput() GetMysqlDbSystemsDbSystemChannelTargetFilterArrayOutput
	ToGetMysqlDbSystemsDbSystemChannelTargetFilterArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemChannelTargetFilterArrayOutput
}

type GetMysqlDbSystemsDbSystemChannelTargetFilterArray []GetMysqlDbSystemsDbSystemChannelTargetFilterInput

func (GetMysqlDbSystemsDbSystemChannelTargetFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemChannelTargetFilter)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemChannelTargetFilterArray) ToGetMysqlDbSystemsDbSystemChannelTargetFilterArrayOutput() GetMysqlDbSystemsDbSystemChannelTargetFilterArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemChannelTargetFilterArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemChannelTargetFilterArray) ToGetMysqlDbSystemsDbSystemChannelTargetFilterArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelTargetFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemChannelTargetFilterArrayOutput)
}

type GetMysqlDbSystemsDbSystemChannelTargetFilterOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemChannelTargetFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannelTargetFilter)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemChannelTargetFilterOutput) ToGetMysqlDbSystemsDbSystemChannelTargetFilterOutput() GetMysqlDbSystemsDbSystemChannelTargetFilterOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemChannelTargetFilterOutput) ToGetMysqlDbSystemsDbSystemChannelTargetFilterOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelTargetFilterOutput {
	return o
}

// The type of the filter rule.
func (o GetMysqlDbSystemsDbSystemChannelTargetFilterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannelTargetFilter) string { return v.Type }).(pulumi.StringOutput)
}

// The body of the filter rule. This can represent a database, a table, or a database pair (represented as "db1->db2"). For more information, see [Replication Filtering Rules](https://dev.mysql.com/doc/refman/8.0/en/replication-rules.html).
func (o GetMysqlDbSystemsDbSystemChannelTargetFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemChannelTargetFilter) string { return v.Value }).(pulumi.StringOutput)
}

type GetMysqlDbSystemsDbSystemChannelTargetFilterArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemChannelTargetFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemChannelTargetFilter)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemChannelTargetFilterArrayOutput) ToGetMysqlDbSystemsDbSystemChannelTargetFilterArrayOutput() GetMysqlDbSystemsDbSystemChannelTargetFilterArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemChannelTargetFilterArrayOutput) ToGetMysqlDbSystemsDbSystemChannelTargetFilterArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemChannelTargetFilterArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemChannelTargetFilterArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemChannelTargetFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystemChannelTargetFilter {
		return vs[0].([]GetMysqlDbSystemsDbSystemChannelTargetFilter)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemChannelTargetFilterOutput)
}

type GetMysqlDbSystemsDbSystemCurrentPlacement struct {
	// The availability domain in which the DB System is placed.
	AvailabilityDomain string `pulumi:"availabilityDomain"`
	// The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	FaultDomain string `pulumi:"faultDomain"`
}

// GetMysqlDbSystemsDbSystemCurrentPlacementInput is an input type that accepts GetMysqlDbSystemsDbSystemCurrentPlacementArgs and GetMysqlDbSystemsDbSystemCurrentPlacementOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemCurrentPlacementInput` via:
//
//	GetMysqlDbSystemsDbSystemCurrentPlacementArgs{...}
type GetMysqlDbSystemsDbSystemCurrentPlacementInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemCurrentPlacementOutput() GetMysqlDbSystemsDbSystemCurrentPlacementOutput
	ToGetMysqlDbSystemsDbSystemCurrentPlacementOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemCurrentPlacementOutput
}

type GetMysqlDbSystemsDbSystemCurrentPlacementArgs struct {
	// The availability domain in which the DB System is placed.
	AvailabilityDomain pulumi.StringInput `pulumi:"availabilityDomain"`
	// The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	FaultDomain pulumi.StringInput `pulumi:"faultDomain"`
}

func (GetMysqlDbSystemsDbSystemCurrentPlacementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemCurrentPlacement)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemCurrentPlacementArgs) ToGetMysqlDbSystemsDbSystemCurrentPlacementOutput() GetMysqlDbSystemsDbSystemCurrentPlacementOutput {
	return i.ToGetMysqlDbSystemsDbSystemCurrentPlacementOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemCurrentPlacementArgs) ToGetMysqlDbSystemsDbSystemCurrentPlacementOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemCurrentPlacementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemCurrentPlacementOutput)
}

// GetMysqlDbSystemsDbSystemCurrentPlacementArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemCurrentPlacementArray and GetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemCurrentPlacementArrayInput` via:
//
//	GetMysqlDbSystemsDbSystemCurrentPlacementArray{ GetMysqlDbSystemsDbSystemCurrentPlacementArgs{...} }
type GetMysqlDbSystemsDbSystemCurrentPlacementArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput() GetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput
	ToGetMysqlDbSystemsDbSystemCurrentPlacementArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput
}

type GetMysqlDbSystemsDbSystemCurrentPlacementArray []GetMysqlDbSystemsDbSystemCurrentPlacementInput

func (GetMysqlDbSystemsDbSystemCurrentPlacementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemCurrentPlacement)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemCurrentPlacementArray) ToGetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput() GetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemCurrentPlacementArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemCurrentPlacementArray) ToGetMysqlDbSystemsDbSystemCurrentPlacementArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput)
}

type GetMysqlDbSystemsDbSystemCurrentPlacementOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemCurrentPlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemCurrentPlacement)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemCurrentPlacementOutput) ToGetMysqlDbSystemsDbSystemCurrentPlacementOutput() GetMysqlDbSystemsDbSystemCurrentPlacementOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemCurrentPlacementOutput) ToGetMysqlDbSystemsDbSystemCurrentPlacementOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemCurrentPlacementOutput {
	return o
}

// The availability domain in which the DB System is placed.
func (o GetMysqlDbSystemsDbSystemCurrentPlacementOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemCurrentPlacement) string { return v.AvailabilityDomain }).(pulumi.StringOutput)
}

// The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
func (o GetMysqlDbSystemsDbSystemCurrentPlacementOutput) FaultDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemCurrentPlacement) string { return v.FaultDomain }).(pulumi.StringOutput)
}

type GetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemCurrentPlacement)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput) ToGetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput() GetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput) ToGetMysqlDbSystemsDbSystemCurrentPlacementArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemCurrentPlacementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystemCurrentPlacement {
		return vs[0].([]GetMysqlDbSystemsDbSystemCurrentPlacement)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemCurrentPlacementOutput)
}

type GetMysqlDbSystemsDbSystemCustomerContact struct {
	// The email address used by Oracle to send notifications regarding the DB System.
	Email string `pulumi:"email"`
}

// GetMysqlDbSystemsDbSystemCustomerContactInput is an input type that accepts GetMysqlDbSystemsDbSystemCustomerContactArgs and GetMysqlDbSystemsDbSystemCustomerContactOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemCustomerContactInput` via:
//
//	GetMysqlDbSystemsDbSystemCustomerContactArgs{...}
type GetMysqlDbSystemsDbSystemCustomerContactInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemCustomerContactOutput() GetMysqlDbSystemsDbSystemCustomerContactOutput
	ToGetMysqlDbSystemsDbSystemCustomerContactOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemCustomerContactOutput
}

type GetMysqlDbSystemsDbSystemCustomerContactArgs struct {
	// The email address used by Oracle to send notifications regarding the DB System.
	Email pulumi.StringInput `pulumi:"email"`
}

func (GetMysqlDbSystemsDbSystemCustomerContactArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemCustomerContact)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemCustomerContactArgs) ToGetMysqlDbSystemsDbSystemCustomerContactOutput() GetMysqlDbSystemsDbSystemCustomerContactOutput {
	return i.ToGetMysqlDbSystemsDbSystemCustomerContactOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemCustomerContactArgs) ToGetMysqlDbSystemsDbSystemCustomerContactOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemCustomerContactOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemCustomerContactOutput)
}

// GetMysqlDbSystemsDbSystemCustomerContactArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemCustomerContactArray and GetMysqlDbSystemsDbSystemCustomerContactArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemCustomerContactArrayInput` via:
//
//	GetMysqlDbSystemsDbSystemCustomerContactArray{ GetMysqlDbSystemsDbSystemCustomerContactArgs{...} }
type GetMysqlDbSystemsDbSystemCustomerContactArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemCustomerContactArrayOutput() GetMysqlDbSystemsDbSystemCustomerContactArrayOutput
	ToGetMysqlDbSystemsDbSystemCustomerContactArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemCustomerContactArrayOutput
}

type GetMysqlDbSystemsDbSystemCustomerContactArray []GetMysqlDbSystemsDbSystemCustomerContactInput

func (GetMysqlDbSystemsDbSystemCustomerContactArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemCustomerContact)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemCustomerContactArray) ToGetMysqlDbSystemsDbSystemCustomerContactArrayOutput() GetMysqlDbSystemsDbSystemCustomerContactArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemCustomerContactArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemCustomerContactArray) ToGetMysqlDbSystemsDbSystemCustomerContactArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemCustomerContactArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemCustomerContactArrayOutput)
}

type GetMysqlDbSystemsDbSystemCustomerContactOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemCustomerContactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemCustomerContact)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemCustomerContactOutput) ToGetMysqlDbSystemsDbSystemCustomerContactOutput() GetMysqlDbSystemsDbSystemCustomerContactOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemCustomerContactOutput) ToGetMysqlDbSystemsDbSystemCustomerContactOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemCustomerContactOutput {
	return o
}

// The email address used by Oracle to send notifications regarding the DB System.
func (o GetMysqlDbSystemsDbSystemCustomerContactOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemCustomerContact) string { return v.Email }).(pulumi.StringOutput)
}

type GetMysqlDbSystemsDbSystemCustomerContactArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemCustomerContactArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemCustomerContact)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemCustomerContactArrayOutput) ToGetMysqlDbSystemsDbSystemCustomerContactArrayOutput() GetMysqlDbSystemsDbSystemCustomerContactArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemCustomerContactArrayOutput) ToGetMysqlDbSystemsDbSystemCustomerContactArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemCustomerContactArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemCustomerContactArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemCustomerContactOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystemCustomerContact {
		return vs[0].([]GetMysqlDbSystemsDbSystemCustomerContact)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemCustomerContactOutput)
}

type GetMysqlDbSystemsDbSystemDataStorage struct {
	// The actual allocated storage size for the DB System. This may be higher than dataStorageSizeInGBs if an automatic storage expansion has occurred.
	AllocatedStorageSizeInGbs int `pulumi:"allocatedStorageSizeInGbs"`
	// Initial size of the data volume in GiBs that will be created and attached.
	DataStorageSizeInGb int `pulumi:"dataStorageSizeInGb"`
	// The absolute limit the DB System's storage size may ever expand to, either manually or automatically. This limit is based based on the initial dataStorageSizeInGBs when the DB System was first created. Both dataStorageSizeInGBs and maxDataStorageSizeInGBs can not exceed this value.
	DataStorageSizeLimitInGbs int `pulumi:"dataStorageSizeLimitInGbs"`
	// Enable/disable automatic storage expansion. When set to true, the DB System will automatically add storage incrementally up to the value specified in maxStorageSizeInGBs.
	IsAutoExpandStorageEnabled bool `pulumi:"isAutoExpandStorageEnabled"`
	// Maximum storage size this DB System can expand to. When isAutoExpandStorageEnabled is set to true, the DB System will add storage incrementally up to this value.
	MaxStorageSizeInGbs int `pulumi:"maxStorageSizeInGbs"`
}

// GetMysqlDbSystemsDbSystemDataStorageInput is an input type that accepts GetMysqlDbSystemsDbSystemDataStorageArgs and GetMysqlDbSystemsDbSystemDataStorageOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemDataStorageInput` via:
//
//	GetMysqlDbSystemsDbSystemDataStorageArgs{...}
type GetMysqlDbSystemsDbSystemDataStorageInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemDataStorageOutput() GetMysqlDbSystemsDbSystemDataStorageOutput
	ToGetMysqlDbSystemsDbSystemDataStorageOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemDataStorageOutput
}

type GetMysqlDbSystemsDbSystemDataStorageArgs struct {
	// The actual allocated storage size for the DB System. This may be higher than dataStorageSizeInGBs if an automatic storage expansion has occurred.
	AllocatedStorageSizeInGbs pulumi.IntInput `pulumi:"allocatedStorageSizeInGbs"`
	// Initial size of the data volume in GiBs that will be created and attached.
	DataStorageSizeInGb pulumi.IntInput `pulumi:"dataStorageSizeInGb"`
	// The absolute limit the DB System's storage size may ever expand to, either manually or automatically. This limit is based based on the initial dataStorageSizeInGBs when the DB System was first created. Both dataStorageSizeInGBs and maxDataStorageSizeInGBs can not exceed this value.
	DataStorageSizeLimitInGbs pulumi.IntInput `pulumi:"dataStorageSizeLimitInGbs"`
	// Enable/disable automatic storage expansion. When set to true, the DB System will automatically add storage incrementally up to the value specified in maxStorageSizeInGBs.
	IsAutoExpandStorageEnabled pulumi.BoolInput `pulumi:"isAutoExpandStorageEnabled"`
	// Maximum storage size this DB System can expand to. When isAutoExpandStorageEnabled is set to true, the DB System will add storage incrementally up to this value.
	MaxStorageSizeInGbs pulumi.IntInput `pulumi:"maxStorageSizeInGbs"`
}

func (GetMysqlDbSystemsDbSystemDataStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemDataStorage)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemDataStorageArgs) ToGetMysqlDbSystemsDbSystemDataStorageOutput() GetMysqlDbSystemsDbSystemDataStorageOutput {
	return i.ToGetMysqlDbSystemsDbSystemDataStorageOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemDataStorageArgs) ToGetMysqlDbSystemsDbSystemDataStorageOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemDataStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemDataStorageOutput)
}

// GetMysqlDbSystemsDbSystemDataStorageArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemDataStorageArray and GetMysqlDbSystemsDbSystemDataStorageArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemDataStorageArrayInput` via:
//
//	GetMysqlDbSystemsDbSystemDataStorageArray{ GetMysqlDbSystemsDbSystemDataStorageArgs{...} }
type GetMysqlDbSystemsDbSystemDataStorageArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemDataStorageArrayOutput() GetMysqlDbSystemsDbSystemDataStorageArrayOutput
	ToGetMysqlDbSystemsDbSystemDataStorageArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemDataStorageArrayOutput
}

type GetMysqlDbSystemsDbSystemDataStorageArray []GetMysqlDbSystemsDbSystemDataStorageInput

func (GetMysqlDbSystemsDbSystemDataStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemDataStorage)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemDataStorageArray) ToGetMysqlDbSystemsDbSystemDataStorageArrayOutput() GetMysqlDbSystemsDbSystemDataStorageArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemDataStorageArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemDataStorageArray) ToGetMysqlDbSystemsDbSystemDataStorageArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemDataStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemDataStorageArrayOutput)
}

type GetMysqlDbSystemsDbSystemDataStorageOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemDataStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemDataStorage)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemDataStorageOutput) ToGetMysqlDbSystemsDbSystemDataStorageOutput() GetMysqlDbSystemsDbSystemDataStorageOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemDataStorageOutput) ToGetMysqlDbSystemsDbSystemDataStorageOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemDataStorageOutput {
	return o
}

// The actual allocated storage size for the DB System. This may be higher than dataStorageSizeInGBs if an automatic storage expansion has occurred.
func (o GetMysqlDbSystemsDbSystemDataStorageOutput) AllocatedStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemDataStorage) int { return v.AllocatedStorageSizeInGbs }).(pulumi.IntOutput)
}

// Initial size of the data volume in GiBs that will be created and attached.
func (o GetMysqlDbSystemsDbSystemDataStorageOutput) DataStorageSizeInGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemDataStorage) int { return v.DataStorageSizeInGb }).(pulumi.IntOutput)
}

// The absolute limit the DB System's storage size may ever expand to, either manually or automatically. This limit is based based on the initial dataStorageSizeInGBs when the DB System was first created. Both dataStorageSizeInGBs and maxDataStorageSizeInGBs can not exceed this value.
func (o GetMysqlDbSystemsDbSystemDataStorageOutput) DataStorageSizeLimitInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemDataStorage) int { return v.DataStorageSizeLimitInGbs }).(pulumi.IntOutput)
}

// Enable/disable automatic storage expansion. When set to true, the DB System will automatically add storage incrementally up to the value specified in maxStorageSizeInGBs.
func (o GetMysqlDbSystemsDbSystemDataStorageOutput) IsAutoExpandStorageEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemDataStorage) bool { return v.IsAutoExpandStorageEnabled }).(pulumi.BoolOutput)
}

// Maximum storage size this DB System can expand to. When isAutoExpandStorageEnabled is set to true, the DB System will add storage incrementally up to this value.
func (o GetMysqlDbSystemsDbSystemDataStorageOutput) MaxStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemDataStorage) int { return v.MaxStorageSizeInGbs }).(pulumi.IntOutput)
}

type GetMysqlDbSystemsDbSystemDataStorageArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemDataStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemDataStorage)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemDataStorageArrayOutput) ToGetMysqlDbSystemsDbSystemDataStorageArrayOutput() GetMysqlDbSystemsDbSystemDataStorageArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemDataStorageArrayOutput) ToGetMysqlDbSystemsDbSystemDataStorageArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemDataStorageArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemDataStorageArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemDataStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystemDataStorage {
		return vs[0].([]GetMysqlDbSystemsDbSystemDataStorage)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemDataStorageOutput)
}

type GetMysqlDbSystemsDbSystemDeletionPolicy struct {
	// Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
	AutomaticBackupRetention string `pulumi:"automaticBackupRetention"`
	// Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
	FinalBackup string `pulumi:"finalBackup"`
	// Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
	IsDeleteProtected bool `pulumi:"isDeleteProtected"`
}

// GetMysqlDbSystemsDbSystemDeletionPolicyInput is an input type that accepts GetMysqlDbSystemsDbSystemDeletionPolicyArgs and GetMysqlDbSystemsDbSystemDeletionPolicyOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemDeletionPolicyInput` via:
//
//	GetMysqlDbSystemsDbSystemDeletionPolicyArgs{...}
type GetMysqlDbSystemsDbSystemDeletionPolicyInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemDeletionPolicyOutput() GetMysqlDbSystemsDbSystemDeletionPolicyOutput
	ToGetMysqlDbSystemsDbSystemDeletionPolicyOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemDeletionPolicyOutput
}

type GetMysqlDbSystemsDbSystemDeletionPolicyArgs struct {
	// Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
	AutomaticBackupRetention pulumi.StringInput `pulumi:"automaticBackupRetention"`
	// Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
	FinalBackup pulumi.StringInput `pulumi:"finalBackup"`
	// Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
	IsDeleteProtected pulumi.BoolInput `pulumi:"isDeleteProtected"`
}

func (GetMysqlDbSystemsDbSystemDeletionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemDeletionPolicy)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemDeletionPolicyArgs) ToGetMysqlDbSystemsDbSystemDeletionPolicyOutput() GetMysqlDbSystemsDbSystemDeletionPolicyOutput {
	return i.ToGetMysqlDbSystemsDbSystemDeletionPolicyOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemDeletionPolicyArgs) ToGetMysqlDbSystemsDbSystemDeletionPolicyOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemDeletionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemDeletionPolicyOutput)
}

// GetMysqlDbSystemsDbSystemDeletionPolicyArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemDeletionPolicyArray and GetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemDeletionPolicyArrayInput` via:
//
//	GetMysqlDbSystemsDbSystemDeletionPolicyArray{ GetMysqlDbSystemsDbSystemDeletionPolicyArgs{...} }
type GetMysqlDbSystemsDbSystemDeletionPolicyArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput() GetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput
	ToGetMysqlDbSystemsDbSystemDeletionPolicyArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput
}

type GetMysqlDbSystemsDbSystemDeletionPolicyArray []GetMysqlDbSystemsDbSystemDeletionPolicyInput

func (GetMysqlDbSystemsDbSystemDeletionPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemDeletionPolicy)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemDeletionPolicyArray) ToGetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput() GetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemDeletionPolicyArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemDeletionPolicyArray) ToGetMysqlDbSystemsDbSystemDeletionPolicyArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput)
}

type GetMysqlDbSystemsDbSystemDeletionPolicyOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemDeletionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemDeletionPolicy)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemDeletionPolicyOutput) ToGetMysqlDbSystemsDbSystemDeletionPolicyOutput() GetMysqlDbSystemsDbSystemDeletionPolicyOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemDeletionPolicyOutput) ToGetMysqlDbSystemsDbSystemDeletionPolicyOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemDeletionPolicyOutput {
	return o
}

// Specifies if any automatic backups created for a DB System should be retained or deleted when the DB System is deleted.
func (o GetMysqlDbSystemsDbSystemDeletionPolicyOutput) AutomaticBackupRetention() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemDeletionPolicy) string { return v.AutomaticBackupRetention }).(pulumi.StringOutput)
}

// Specifies whether or not a backup is taken when the DB System is deleted. REQUIRE_FINAL_BACKUP: a backup is taken if the DB System is deleted. SKIP_FINAL_BACKUP: a backup is not taken if the DB System is deleted.
func (o GetMysqlDbSystemsDbSystemDeletionPolicyOutput) FinalBackup() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemDeletionPolicy) string { return v.FinalBackup }).(pulumi.StringOutput)
}

// Specifies whether the DB System can be deleted. Set to true to prevent deletion, false (default) to allow.
func (o GetMysqlDbSystemsDbSystemDeletionPolicyOutput) IsDeleteProtected() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemDeletionPolicy) bool { return v.IsDeleteProtected }).(pulumi.BoolOutput)
}

type GetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemDeletionPolicy)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput) ToGetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput() GetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput) ToGetMysqlDbSystemsDbSystemDeletionPolicyArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemDeletionPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystemDeletionPolicy {
		return vs[0].([]GetMysqlDbSystemsDbSystemDeletionPolicy)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemDeletionPolicyOutput)
}

type GetMysqlDbSystemsDbSystemEncryptData struct {
	// Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
	KeyGenerationType string `pulumi:"keyGenerationType"`
	// The OCID of the key to use.
	KeyId string `pulumi:"keyId"`
}

// GetMysqlDbSystemsDbSystemEncryptDataInput is an input type that accepts GetMysqlDbSystemsDbSystemEncryptDataArgs and GetMysqlDbSystemsDbSystemEncryptDataOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemEncryptDataInput` via:
//
//	GetMysqlDbSystemsDbSystemEncryptDataArgs{...}
type GetMysqlDbSystemsDbSystemEncryptDataInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemEncryptDataOutput() GetMysqlDbSystemsDbSystemEncryptDataOutput
	ToGetMysqlDbSystemsDbSystemEncryptDataOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemEncryptDataOutput
}

type GetMysqlDbSystemsDbSystemEncryptDataArgs struct {
	// Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
	KeyGenerationType pulumi.StringInput `pulumi:"keyGenerationType"`
	// The OCID of the key to use.
	KeyId pulumi.StringInput `pulumi:"keyId"`
}

func (GetMysqlDbSystemsDbSystemEncryptDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemEncryptData)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemEncryptDataArgs) ToGetMysqlDbSystemsDbSystemEncryptDataOutput() GetMysqlDbSystemsDbSystemEncryptDataOutput {
	return i.ToGetMysqlDbSystemsDbSystemEncryptDataOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemEncryptDataArgs) ToGetMysqlDbSystemsDbSystemEncryptDataOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemEncryptDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemEncryptDataOutput)
}

// GetMysqlDbSystemsDbSystemEncryptDataArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemEncryptDataArray and GetMysqlDbSystemsDbSystemEncryptDataArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemEncryptDataArrayInput` via:
//
//	GetMysqlDbSystemsDbSystemEncryptDataArray{ GetMysqlDbSystemsDbSystemEncryptDataArgs{...} }
type GetMysqlDbSystemsDbSystemEncryptDataArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemEncryptDataArrayOutput() GetMysqlDbSystemsDbSystemEncryptDataArrayOutput
	ToGetMysqlDbSystemsDbSystemEncryptDataArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemEncryptDataArrayOutput
}

type GetMysqlDbSystemsDbSystemEncryptDataArray []GetMysqlDbSystemsDbSystemEncryptDataInput

func (GetMysqlDbSystemsDbSystemEncryptDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemEncryptData)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemEncryptDataArray) ToGetMysqlDbSystemsDbSystemEncryptDataArrayOutput() GetMysqlDbSystemsDbSystemEncryptDataArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemEncryptDataArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemEncryptDataArray) ToGetMysqlDbSystemsDbSystemEncryptDataArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemEncryptDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemEncryptDataArrayOutput)
}

type GetMysqlDbSystemsDbSystemEncryptDataOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemEncryptDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemEncryptData)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemEncryptDataOutput) ToGetMysqlDbSystemsDbSystemEncryptDataOutput() GetMysqlDbSystemsDbSystemEncryptDataOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemEncryptDataOutput) ToGetMysqlDbSystemsDbSystemEncryptDataOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemEncryptDataOutput {
	return o
}

// Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
func (o GetMysqlDbSystemsDbSystemEncryptDataOutput) KeyGenerationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemEncryptData) string { return v.KeyGenerationType }).(pulumi.StringOutput)
}

// The OCID of the key to use.
func (o GetMysqlDbSystemsDbSystemEncryptDataOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemEncryptData) string { return v.KeyId }).(pulumi.StringOutput)
}

type GetMysqlDbSystemsDbSystemEncryptDataArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemEncryptDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemEncryptData)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemEncryptDataArrayOutput) ToGetMysqlDbSystemsDbSystemEncryptDataArrayOutput() GetMysqlDbSystemsDbSystemEncryptDataArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemEncryptDataArrayOutput) ToGetMysqlDbSystemsDbSystemEncryptDataArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemEncryptDataArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemEncryptDataArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemEncryptDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystemEncryptData {
		return vs[0].([]GetMysqlDbSystemsDbSystemEncryptData)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemEncryptDataOutput)
}

type GetMysqlDbSystemsDbSystemEndpoint struct {
	// The network address of the DB System.
	Hostname string `pulumi:"hostname"`
	// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
	IpAddress string `pulumi:"ipAddress"`
	// The access modes from the client that this endpoint supports.
	Modes []string `pulumi:"modes"`
	// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
	Port int `pulumi:"port"`
	// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
	PortX int `pulumi:"portX"`
	// The OCID of the resource that this endpoint is attached to.
	ResourceId string `pulumi:"resourceId"`
	// The type of endpoint that clients and connectors can connect to.
	ResourceType string `pulumi:"resourceType"`
	// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
	Status string `pulumi:"status"`
	// Additional information about the current endpoint status.
	StatusDetails string `pulumi:"statusDetails"`
}

// GetMysqlDbSystemsDbSystemEndpointInput is an input type that accepts GetMysqlDbSystemsDbSystemEndpointArgs and GetMysqlDbSystemsDbSystemEndpointOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemEndpointInput` via:
//
//	GetMysqlDbSystemsDbSystemEndpointArgs{...}
type GetMysqlDbSystemsDbSystemEndpointInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemEndpointOutput() GetMysqlDbSystemsDbSystemEndpointOutput
	ToGetMysqlDbSystemsDbSystemEndpointOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemEndpointOutput
}

type GetMysqlDbSystemsDbSystemEndpointArgs struct {
	// The network address of the DB System.
	Hostname pulumi.StringInput `pulumi:"hostname"`
	// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// The access modes from the client that this endpoint supports.
	Modes pulumi.StringArrayInput `pulumi:"modes"`
	// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
	Port pulumi.IntInput `pulumi:"port"`
	// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
	PortX pulumi.IntInput `pulumi:"portX"`
	// The OCID of the resource that this endpoint is attached to.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// The type of endpoint that clients and connectors can connect to.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
	Status pulumi.StringInput `pulumi:"status"`
	// Additional information about the current endpoint status.
	StatusDetails pulumi.StringInput `pulumi:"statusDetails"`
}

func (GetMysqlDbSystemsDbSystemEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemEndpoint)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemEndpointArgs) ToGetMysqlDbSystemsDbSystemEndpointOutput() GetMysqlDbSystemsDbSystemEndpointOutput {
	return i.ToGetMysqlDbSystemsDbSystemEndpointOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemEndpointArgs) ToGetMysqlDbSystemsDbSystemEndpointOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemEndpointOutput)
}

// GetMysqlDbSystemsDbSystemEndpointArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemEndpointArray and GetMysqlDbSystemsDbSystemEndpointArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemEndpointArrayInput` via:
//
//	GetMysqlDbSystemsDbSystemEndpointArray{ GetMysqlDbSystemsDbSystemEndpointArgs{...} }
type GetMysqlDbSystemsDbSystemEndpointArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemEndpointArrayOutput() GetMysqlDbSystemsDbSystemEndpointArrayOutput
	ToGetMysqlDbSystemsDbSystemEndpointArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemEndpointArrayOutput
}

type GetMysqlDbSystemsDbSystemEndpointArray []GetMysqlDbSystemsDbSystemEndpointInput

func (GetMysqlDbSystemsDbSystemEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemEndpoint)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemEndpointArray) ToGetMysqlDbSystemsDbSystemEndpointArrayOutput() GetMysqlDbSystemsDbSystemEndpointArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemEndpointArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemEndpointArray) ToGetMysqlDbSystemsDbSystemEndpointArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemEndpointArrayOutput)
}

type GetMysqlDbSystemsDbSystemEndpointOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemEndpoint)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemEndpointOutput) ToGetMysqlDbSystemsDbSystemEndpointOutput() GetMysqlDbSystemsDbSystemEndpointOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemEndpointOutput) ToGetMysqlDbSystemsDbSystemEndpointOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemEndpointOutput {
	return o
}

// The network address of the DB System.
func (o GetMysqlDbSystemsDbSystemEndpointOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemEndpoint) string { return v.Hostname }).(pulumi.StringOutput)
}

// The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
func (o GetMysqlDbSystemsDbSystemEndpointOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemEndpoint) string { return v.IpAddress }).(pulumi.StringOutput)
}

// The access modes from the client that this endpoint supports.
func (o GetMysqlDbSystemsDbSystemEndpointOutput) Modes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemEndpoint) []string { return v.Modes }).(pulumi.StringArrayOutput)
}

// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
func (o GetMysqlDbSystemsDbSystemEndpointOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemEndpoint) int { return v.Port }).(pulumi.IntOutput)
}

// The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
func (o GetMysqlDbSystemsDbSystemEndpointOutput) PortX() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemEndpoint) int { return v.PortX }).(pulumi.IntOutput)
}

// The OCID of the resource that this endpoint is attached to.
func (o GetMysqlDbSystemsDbSystemEndpointOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemEndpoint) string { return v.ResourceId }).(pulumi.StringOutput)
}

// The type of endpoint that clients and connectors can connect to.
func (o GetMysqlDbSystemsDbSystemEndpointOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemEndpoint) string { return v.ResourceType }).(pulumi.StringOutput)
}

// The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
func (o GetMysqlDbSystemsDbSystemEndpointOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemEndpoint) string { return v.Status }).(pulumi.StringOutput)
}

// Additional information about the current endpoint status.
func (o GetMysqlDbSystemsDbSystemEndpointOutput) StatusDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemEndpoint) string { return v.StatusDetails }).(pulumi.StringOutput)
}

type GetMysqlDbSystemsDbSystemEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemEndpoint)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemEndpointArrayOutput) ToGetMysqlDbSystemsDbSystemEndpointArrayOutput() GetMysqlDbSystemsDbSystemEndpointArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemEndpointArrayOutput) ToGetMysqlDbSystemsDbSystemEndpointArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemEndpointArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemEndpointArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystemEndpoint {
		return vs[0].([]GetMysqlDbSystemsDbSystemEndpoint)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemEndpointOutput)
}

type GetMysqlDbSystemsDbSystemHeatWaveCluster struct {
	// The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
	ClusterSize int `pulumi:"clusterSize"`
	// Lakehouse enabled status for the HeatWave cluster.
	IsLakehouseEnabled bool `pulumi:"isLakehouseEnabled"`
	// The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
	ShapeName string `pulumi:"shapeName"`
	// DbSystem Lifecycle State
	State string `pulumi:"state"`
	// The date and time the DB System was created.
	TimeCreated string `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetMysqlDbSystemsDbSystemHeatWaveClusterInput is an input type that accepts GetMysqlDbSystemsDbSystemHeatWaveClusterArgs and GetMysqlDbSystemsDbSystemHeatWaveClusterOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemHeatWaveClusterInput` via:
//
//	GetMysqlDbSystemsDbSystemHeatWaveClusterArgs{...}
type GetMysqlDbSystemsDbSystemHeatWaveClusterInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemHeatWaveClusterOutput() GetMysqlDbSystemsDbSystemHeatWaveClusterOutput
	ToGetMysqlDbSystemsDbSystemHeatWaveClusterOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemHeatWaveClusterOutput
}

type GetMysqlDbSystemsDbSystemHeatWaveClusterArgs struct {
	// The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
	ClusterSize pulumi.IntInput `pulumi:"clusterSize"`
	// Lakehouse enabled status for the HeatWave cluster.
	IsLakehouseEnabled pulumi.BoolInput `pulumi:"isLakehouseEnabled"`
	// The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
	ShapeName pulumi.StringInput `pulumi:"shapeName"`
	// DbSystem Lifecycle State
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the DB System was created.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetMysqlDbSystemsDbSystemHeatWaveClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemHeatWaveCluster)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemHeatWaveClusterArgs) ToGetMysqlDbSystemsDbSystemHeatWaveClusterOutput() GetMysqlDbSystemsDbSystemHeatWaveClusterOutput {
	return i.ToGetMysqlDbSystemsDbSystemHeatWaveClusterOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemHeatWaveClusterArgs) ToGetMysqlDbSystemsDbSystemHeatWaveClusterOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemHeatWaveClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemHeatWaveClusterOutput)
}

// GetMysqlDbSystemsDbSystemHeatWaveClusterArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemHeatWaveClusterArray and GetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemHeatWaveClusterArrayInput` via:
//
//	GetMysqlDbSystemsDbSystemHeatWaveClusterArray{ GetMysqlDbSystemsDbSystemHeatWaveClusterArgs{...} }
type GetMysqlDbSystemsDbSystemHeatWaveClusterArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput() GetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput
	ToGetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput
}

type GetMysqlDbSystemsDbSystemHeatWaveClusterArray []GetMysqlDbSystemsDbSystemHeatWaveClusterInput

func (GetMysqlDbSystemsDbSystemHeatWaveClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemHeatWaveCluster)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemHeatWaveClusterArray) ToGetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput() GetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemHeatWaveClusterArray) ToGetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput)
}

type GetMysqlDbSystemsDbSystemHeatWaveClusterOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemHeatWaveClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemHeatWaveCluster)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemHeatWaveClusterOutput) ToGetMysqlDbSystemsDbSystemHeatWaveClusterOutput() GetMysqlDbSystemsDbSystemHeatWaveClusterOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemHeatWaveClusterOutput) ToGetMysqlDbSystemsDbSystemHeatWaveClusterOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemHeatWaveClusterOutput {
	return o
}

// The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
func (o GetMysqlDbSystemsDbSystemHeatWaveClusterOutput) ClusterSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemHeatWaveCluster) int { return v.ClusterSize }).(pulumi.IntOutput)
}

// Lakehouse enabled status for the HeatWave cluster.
func (o GetMysqlDbSystemsDbSystemHeatWaveClusterOutput) IsLakehouseEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemHeatWaveCluster) bool { return v.IsLakehouseEnabled }).(pulumi.BoolOutput)
}

// The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
func (o GetMysqlDbSystemsDbSystemHeatWaveClusterOutput) ShapeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemHeatWaveCluster) string { return v.ShapeName }).(pulumi.StringOutput)
}

// DbSystem Lifecycle State
func (o GetMysqlDbSystemsDbSystemHeatWaveClusterOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemHeatWaveCluster) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the DB System was created.
func (o GetMysqlDbSystemsDbSystemHeatWaveClusterOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemHeatWaveCluster) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the DB System was last updated.
func (o GetMysqlDbSystemsDbSystemHeatWaveClusterOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemHeatWaveCluster) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemHeatWaveCluster)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput) ToGetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput() GetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput) ToGetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemHeatWaveClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystemHeatWaveCluster {
		return vs[0].([]GetMysqlDbSystemsDbSystemHeatWaveCluster)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemHeatWaveClusterOutput)
}

type GetMysqlDbSystemsDbSystemMaintenance struct {
	// The start time of the maintenance window.
	WindowStartTime string `pulumi:"windowStartTime"`
}

// GetMysqlDbSystemsDbSystemMaintenanceInput is an input type that accepts GetMysqlDbSystemsDbSystemMaintenanceArgs and GetMysqlDbSystemsDbSystemMaintenanceOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemMaintenanceInput` via:
//
//	GetMysqlDbSystemsDbSystemMaintenanceArgs{...}
type GetMysqlDbSystemsDbSystemMaintenanceInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemMaintenanceOutput() GetMysqlDbSystemsDbSystemMaintenanceOutput
	ToGetMysqlDbSystemsDbSystemMaintenanceOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemMaintenanceOutput
}

type GetMysqlDbSystemsDbSystemMaintenanceArgs struct {
	// The start time of the maintenance window.
	WindowStartTime pulumi.StringInput `pulumi:"windowStartTime"`
}

func (GetMysqlDbSystemsDbSystemMaintenanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemMaintenance)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemMaintenanceArgs) ToGetMysqlDbSystemsDbSystemMaintenanceOutput() GetMysqlDbSystemsDbSystemMaintenanceOutput {
	return i.ToGetMysqlDbSystemsDbSystemMaintenanceOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemMaintenanceArgs) ToGetMysqlDbSystemsDbSystemMaintenanceOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemMaintenanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemMaintenanceOutput)
}

// GetMysqlDbSystemsDbSystemMaintenanceArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemMaintenanceArray and GetMysqlDbSystemsDbSystemMaintenanceArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemMaintenanceArrayInput` via:
//
//	GetMysqlDbSystemsDbSystemMaintenanceArray{ GetMysqlDbSystemsDbSystemMaintenanceArgs{...} }
type GetMysqlDbSystemsDbSystemMaintenanceArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemMaintenanceArrayOutput() GetMysqlDbSystemsDbSystemMaintenanceArrayOutput
	ToGetMysqlDbSystemsDbSystemMaintenanceArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemMaintenanceArrayOutput
}

type GetMysqlDbSystemsDbSystemMaintenanceArray []GetMysqlDbSystemsDbSystemMaintenanceInput

func (GetMysqlDbSystemsDbSystemMaintenanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemMaintenance)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemMaintenanceArray) ToGetMysqlDbSystemsDbSystemMaintenanceArrayOutput() GetMysqlDbSystemsDbSystemMaintenanceArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemMaintenanceArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemMaintenanceArray) ToGetMysqlDbSystemsDbSystemMaintenanceArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemMaintenanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemMaintenanceArrayOutput)
}

type GetMysqlDbSystemsDbSystemMaintenanceOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemMaintenanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemMaintenance)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemMaintenanceOutput) ToGetMysqlDbSystemsDbSystemMaintenanceOutput() GetMysqlDbSystemsDbSystemMaintenanceOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemMaintenanceOutput) ToGetMysqlDbSystemsDbSystemMaintenanceOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemMaintenanceOutput {
	return o
}

// The start time of the maintenance window.
func (o GetMysqlDbSystemsDbSystemMaintenanceOutput) WindowStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemMaintenance) string { return v.WindowStartTime }).(pulumi.StringOutput)
}

type GetMysqlDbSystemsDbSystemMaintenanceArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemMaintenanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemMaintenance)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemMaintenanceArrayOutput) ToGetMysqlDbSystemsDbSystemMaintenanceArrayOutput() GetMysqlDbSystemsDbSystemMaintenanceArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemMaintenanceArrayOutput) ToGetMysqlDbSystemsDbSystemMaintenanceArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemMaintenanceArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemMaintenanceArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemMaintenanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystemMaintenance {
		return vs[0].([]GetMysqlDbSystemsDbSystemMaintenance)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemMaintenanceOutput)
}

type GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetail struct {
	// Earliest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeEarliestRecoveryPoint string `pulumi:"timeEarliestRecoveryPoint"`
	// Latest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeLatestRecoveryPoint string `pulumi:"timeLatestRecoveryPoint"`
}

// GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailInput is an input type that accepts GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArgs and GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailInput` via:
//
//	GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArgs{...}
type GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput() GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput
	ToGetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput
}

type GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArgs struct {
	// Earliest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeEarliestRecoveryPoint pulumi.StringInput `pulumi:"timeEarliestRecoveryPoint"`
	// Latest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeLatestRecoveryPoint pulumi.StringInput `pulumi:"timeLatestRecoveryPoint"`
}

func (GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetail)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArgs) ToGetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput() GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput {
	return i.ToGetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArgs) ToGetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput)
}

// GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArray and GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayInput` via:
//
//	GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArray{ GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArgs{...} }
type GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput() GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput
	ToGetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput
}

type GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArray []GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailInput

func (GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetail)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArray) ToGetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput() GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArray) ToGetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput)
}

type GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetail)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput) ToGetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput() GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput) ToGetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput {
	return o
}

// Earliest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput) TimeEarliestRecoveryPoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetail) string { return v.TimeEarliestRecoveryPoint }).(pulumi.StringOutput)
}

// Latest recovery time point for the DB System, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput) TimeLatestRecoveryPoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetail) string { return v.TimeLatestRecoveryPoint }).(pulumi.StringOutput)
}

type GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetail)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput) ToGetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput() GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput) ToGetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetail {
		return vs[0].([]GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetail)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput)
}

type GetMysqlDbSystemsDbSystemReadEndpoint struct {
	// A list of IP addresses of read replicas that are excluded from serving read requests.
	ExcludeIps []string `pulumi:"excludeIps"`
	// Specifies if the DB System read endpoint is enabled or not.
	IsEnabled bool `pulumi:"isEnabled"`
	// The hostname for the read endpoint of the DB System. Used for DNS.
	ReadEndpointHostnameLabel string `pulumi:"readEndpointHostnameLabel"`
	// The IP address the DB System read endpoint is configured to listen on. A private IP address of your choice to assign to the read endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
	ReadEndpointIpAddress string `pulumi:"readEndpointIpAddress"`
}

// GetMysqlDbSystemsDbSystemReadEndpointInput is an input type that accepts GetMysqlDbSystemsDbSystemReadEndpointArgs and GetMysqlDbSystemsDbSystemReadEndpointOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemReadEndpointInput` via:
//
//	GetMysqlDbSystemsDbSystemReadEndpointArgs{...}
type GetMysqlDbSystemsDbSystemReadEndpointInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemReadEndpointOutput() GetMysqlDbSystemsDbSystemReadEndpointOutput
	ToGetMysqlDbSystemsDbSystemReadEndpointOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemReadEndpointOutput
}

type GetMysqlDbSystemsDbSystemReadEndpointArgs struct {
	// A list of IP addresses of read replicas that are excluded from serving read requests.
	ExcludeIps pulumi.StringArrayInput `pulumi:"excludeIps"`
	// Specifies if the DB System read endpoint is enabled or not.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The hostname for the read endpoint of the DB System. Used for DNS.
	ReadEndpointHostnameLabel pulumi.StringInput `pulumi:"readEndpointHostnameLabel"`
	// The IP address the DB System read endpoint is configured to listen on. A private IP address of your choice to assign to the read endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
	ReadEndpointIpAddress pulumi.StringInput `pulumi:"readEndpointIpAddress"`
}

func (GetMysqlDbSystemsDbSystemReadEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemReadEndpoint)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemReadEndpointArgs) ToGetMysqlDbSystemsDbSystemReadEndpointOutput() GetMysqlDbSystemsDbSystemReadEndpointOutput {
	return i.ToGetMysqlDbSystemsDbSystemReadEndpointOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemReadEndpointArgs) ToGetMysqlDbSystemsDbSystemReadEndpointOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemReadEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemReadEndpointOutput)
}

// GetMysqlDbSystemsDbSystemReadEndpointArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemReadEndpointArray and GetMysqlDbSystemsDbSystemReadEndpointArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemReadEndpointArrayInput` via:
//
//	GetMysqlDbSystemsDbSystemReadEndpointArray{ GetMysqlDbSystemsDbSystemReadEndpointArgs{...} }
type GetMysqlDbSystemsDbSystemReadEndpointArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemReadEndpointArrayOutput() GetMysqlDbSystemsDbSystemReadEndpointArrayOutput
	ToGetMysqlDbSystemsDbSystemReadEndpointArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemReadEndpointArrayOutput
}

type GetMysqlDbSystemsDbSystemReadEndpointArray []GetMysqlDbSystemsDbSystemReadEndpointInput

func (GetMysqlDbSystemsDbSystemReadEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemReadEndpoint)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemReadEndpointArray) ToGetMysqlDbSystemsDbSystemReadEndpointArrayOutput() GetMysqlDbSystemsDbSystemReadEndpointArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemReadEndpointArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemReadEndpointArray) ToGetMysqlDbSystemsDbSystemReadEndpointArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemReadEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemReadEndpointArrayOutput)
}

type GetMysqlDbSystemsDbSystemReadEndpointOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemReadEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemReadEndpoint)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemReadEndpointOutput) ToGetMysqlDbSystemsDbSystemReadEndpointOutput() GetMysqlDbSystemsDbSystemReadEndpointOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemReadEndpointOutput) ToGetMysqlDbSystemsDbSystemReadEndpointOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemReadEndpointOutput {
	return o
}

// A list of IP addresses of read replicas that are excluded from serving read requests.
func (o GetMysqlDbSystemsDbSystemReadEndpointOutput) ExcludeIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemReadEndpoint) []string { return v.ExcludeIps }).(pulumi.StringArrayOutput)
}

// Specifies if the DB System read endpoint is enabled or not.
func (o GetMysqlDbSystemsDbSystemReadEndpointOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemReadEndpoint) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The hostname for the read endpoint of the DB System. Used for DNS.
func (o GetMysqlDbSystemsDbSystemReadEndpointOutput) ReadEndpointHostnameLabel() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemReadEndpoint) string { return v.ReadEndpointHostnameLabel }).(pulumi.StringOutput)
}

// The IP address the DB System read endpoint is configured to listen on. A private IP address of your choice to assign to the read endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
func (o GetMysqlDbSystemsDbSystemReadEndpointOutput) ReadEndpointIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemReadEndpoint) string { return v.ReadEndpointIpAddress }).(pulumi.StringOutput)
}

type GetMysqlDbSystemsDbSystemReadEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemReadEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemReadEndpoint)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemReadEndpointArrayOutput) ToGetMysqlDbSystemsDbSystemReadEndpointArrayOutput() GetMysqlDbSystemsDbSystemReadEndpointArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemReadEndpointArrayOutput) ToGetMysqlDbSystemsDbSystemReadEndpointArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemReadEndpointArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemReadEndpointArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemReadEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystemReadEndpoint {
		return vs[0].([]GetMysqlDbSystemsDbSystemReadEndpoint)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemReadEndpointOutput)
}

type GetMysqlDbSystemsDbSystemRest struct {
	// Select how REST is configured across the DB System instances.
	Configuration string `pulumi:"configuration"`
	// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
	Port int `pulumi:"port"`
}

// GetMysqlDbSystemsDbSystemRestInput is an input type that accepts GetMysqlDbSystemsDbSystemRestArgs and GetMysqlDbSystemsDbSystemRestOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemRestInput` via:
//
//	GetMysqlDbSystemsDbSystemRestArgs{...}
type GetMysqlDbSystemsDbSystemRestInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemRestOutput() GetMysqlDbSystemsDbSystemRestOutput
	ToGetMysqlDbSystemsDbSystemRestOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemRestOutput
}

type GetMysqlDbSystemsDbSystemRestArgs struct {
	// Select how REST is configured across the DB System instances.
	Configuration pulumi.StringInput `pulumi:"configuration"`
	// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
	Port pulumi.IntInput `pulumi:"port"`
}

func (GetMysqlDbSystemsDbSystemRestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemRest)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemRestArgs) ToGetMysqlDbSystemsDbSystemRestOutput() GetMysqlDbSystemsDbSystemRestOutput {
	return i.ToGetMysqlDbSystemsDbSystemRestOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemRestArgs) ToGetMysqlDbSystemsDbSystemRestOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemRestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemRestOutput)
}

// GetMysqlDbSystemsDbSystemRestArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemRestArray and GetMysqlDbSystemsDbSystemRestArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemRestArrayInput` via:
//
//	GetMysqlDbSystemsDbSystemRestArray{ GetMysqlDbSystemsDbSystemRestArgs{...} }
type GetMysqlDbSystemsDbSystemRestArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemRestArrayOutput() GetMysqlDbSystemsDbSystemRestArrayOutput
	ToGetMysqlDbSystemsDbSystemRestArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemRestArrayOutput
}

type GetMysqlDbSystemsDbSystemRestArray []GetMysqlDbSystemsDbSystemRestInput

func (GetMysqlDbSystemsDbSystemRestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemRest)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemRestArray) ToGetMysqlDbSystemsDbSystemRestArrayOutput() GetMysqlDbSystemsDbSystemRestArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemRestArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemRestArray) ToGetMysqlDbSystemsDbSystemRestArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemRestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemRestArrayOutput)
}

type GetMysqlDbSystemsDbSystemRestOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemRestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemRest)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemRestOutput) ToGetMysqlDbSystemsDbSystemRestOutput() GetMysqlDbSystemsDbSystemRestOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemRestOutput) ToGetMysqlDbSystemsDbSystemRestOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemRestOutput {
	return o
}

// Select how REST is configured across the DB System instances.
func (o GetMysqlDbSystemsDbSystemRestOutput) Configuration() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemRest) string { return v.Configuration }).(pulumi.StringOutput)
}

// The port for REST to listen on. Supported port numbers are 443 and from 1024 to 65535.
func (o GetMysqlDbSystemsDbSystemRestOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemRest) int { return v.Port }).(pulumi.IntOutput)
}

type GetMysqlDbSystemsDbSystemRestArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemRestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemRest)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemRestArrayOutput) ToGetMysqlDbSystemsDbSystemRestArrayOutput() GetMysqlDbSystemsDbSystemRestArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemRestArrayOutput) ToGetMysqlDbSystemsDbSystemRestArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemRestArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemRestArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemRestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystemRest {
		return vs[0].([]GetMysqlDbSystemsDbSystemRest)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemRestOutput)
}

type GetMysqlDbSystemsDbSystemSecureConnection struct {
	// Select whether to use MySQL Database Service-managed certificate (SYSTEM) or your own certificate (BYOC).
	CertificateGenerationType string `pulumi:"certificateGenerationType"`
	// The OCID of the certificate to use.
	CertificateId string `pulumi:"certificateId"`
}

// GetMysqlDbSystemsDbSystemSecureConnectionInput is an input type that accepts GetMysqlDbSystemsDbSystemSecureConnectionArgs and GetMysqlDbSystemsDbSystemSecureConnectionOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemSecureConnectionInput` via:
//
//	GetMysqlDbSystemsDbSystemSecureConnectionArgs{...}
type GetMysqlDbSystemsDbSystemSecureConnectionInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemSecureConnectionOutput() GetMysqlDbSystemsDbSystemSecureConnectionOutput
	ToGetMysqlDbSystemsDbSystemSecureConnectionOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemSecureConnectionOutput
}

type GetMysqlDbSystemsDbSystemSecureConnectionArgs struct {
	// Select whether to use MySQL Database Service-managed certificate (SYSTEM) or your own certificate (BYOC).
	CertificateGenerationType pulumi.StringInput `pulumi:"certificateGenerationType"`
	// The OCID of the certificate to use.
	CertificateId pulumi.StringInput `pulumi:"certificateId"`
}

func (GetMysqlDbSystemsDbSystemSecureConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemSecureConnection)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemSecureConnectionArgs) ToGetMysqlDbSystemsDbSystemSecureConnectionOutput() GetMysqlDbSystemsDbSystemSecureConnectionOutput {
	return i.ToGetMysqlDbSystemsDbSystemSecureConnectionOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemSecureConnectionArgs) ToGetMysqlDbSystemsDbSystemSecureConnectionOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemSecureConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemSecureConnectionOutput)
}

// GetMysqlDbSystemsDbSystemSecureConnectionArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemSecureConnectionArray and GetMysqlDbSystemsDbSystemSecureConnectionArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemSecureConnectionArrayInput` via:
//
//	GetMysqlDbSystemsDbSystemSecureConnectionArray{ GetMysqlDbSystemsDbSystemSecureConnectionArgs{...} }
type GetMysqlDbSystemsDbSystemSecureConnectionArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemSecureConnectionArrayOutput() GetMysqlDbSystemsDbSystemSecureConnectionArrayOutput
	ToGetMysqlDbSystemsDbSystemSecureConnectionArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemSecureConnectionArrayOutput
}

type GetMysqlDbSystemsDbSystemSecureConnectionArray []GetMysqlDbSystemsDbSystemSecureConnectionInput

func (GetMysqlDbSystemsDbSystemSecureConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemSecureConnection)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemSecureConnectionArray) ToGetMysqlDbSystemsDbSystemSecureConnectionArrayOutput() GetMysqlDbSystemsDbSystemSecureConnectionArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemSecureConnectionArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemSecureConnectionArray) ToGetMysqlDbSystemsDbSystemSecureConnectionArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemSecureConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemSecureConnectionArrayOutput)
}

type GetMysqlDbSystemsDbSystemSecureConnectionOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemSecureConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemSecureConnection)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemSecureConnectionOutput) ToGetMysqlDbSystemsDbSystemSecureConnectionOutput() GetMysqlDbSystemsDbSystemSecureConnectionOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemSecureConnectionOutput) ToGetMysqlDbSystemsDbSystemSecureConnectionOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemSecureConnectionOutput {
	return o
}

// Select whether to use MySQL Database Service-managed certificate (SYSTEM) or your own certificate (BYOC).
func (o GetMysqlDbSystemsDbSystemSecureConnectionOutput) CertificateGenerationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemSecureConnection) string { return v.CertificateGenerationType }).(pulumi.StringOutput)
}

// The OCID of the certificate to use.
func (o GetMysqlDbSystemsDbSystemSecureConnectionOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemSecureConnection) string { return v.CertificateId }).(pulumi.StringOutput)
}

type GetMysqlDbSystemsDbSystemSecureConnectionArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemSecureConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemSecureConnection)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemSecureConnectionArrayOutput) ToGetMysqlDbSystemsDbSystemSecureConnectionArrayOutput() GetMysqlDbSystemsDbSystemSecureConnectionArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemSecureConnectionArrayOutput) ToGetMysqlDbSystemsDbSystemSecureConnectionArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemSecureConnectionArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemSecureConnectionArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemSecureConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystemSecureConnection {
		return vs[0].([]GetMysqlDbSystemsDbSystemSecureConnection)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemSecureConnectionOutput)
}

type GetMysqlDbSystemsDbSystemSource struct {
	// The OCID of the backup to be used as the source for the new DB System.
	BackupId string `pulumi:"backupId"`
	// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId string `pulumi:"dbSystemId"`
	// The date and time, as per RFC 3339, of the change up to which the new DB System shall be restored to, using a backup and logs from the original DB System. In case no point in time is specified, then this new DB System shall be restored up to the latest change recorded for the original DB System.
	RecoveryPoint string `pulumi:"recoveryPoint"`
	// The specific source identifier.
	SourceType string `pulumi:"sourceType"`
	SourceUrl  string `pulumi:"sourceUrl"`
}

// GetMysqlDbSystemsDbSystemSourceInput is an input type that accepts GetMysqlDbSystemsDbSystemSourceArgs and GetMysqlDbSystemsDbSystemSourceOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemSourceInput` via:
//
//	GetMysqlDbSystemsDbSystemSourceArgs{...}
type GetMysqlDbSystemsDbSystemSourceInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemSourceOutput() GetMysqlDbSystemsDbSystemSourceOutput
	ToGetMysqlDbSystemsDbSystemSourceOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemSourceOutput
}

type GetMysqlDbSystemsDbSystemSourceArgs struct {
	// The OCID of the backup to be used as the source for the new DB System.
	BackupId pulumi.StringInput `pulumi:"backupId"`
	// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId pulumi.StringInput `pulumi:"dbSystemId"`
	// The date and time, as per RFC 3339, of the change up to which the new DB System shall be restored to, using a backup and logs from the original DB System. In case no point in time is specified, then this new DB System shall be restored up to the latest change recorded for the original DB System.
	RecoveryPoint pulumi.StringInput `pulumi:"recoveryPoint"`
	// The specific source identifier.
	SourceType pulumi.StringInput `pulumi:"sourceType"`
	SourceUrl  pulumi.StringInput `pulumi:"sourceUrl"`
}

func (GetMysqlDbSystemsDbSystemSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemSource)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemSourceArgs) ToGetMysqlDbSystemsDbSystemSourceOutput() GetMysqlDbSystemsDbSystemSourceOutput {
	return i.ToGetMysqlDbSystemsDbSystemSourceOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemSourceArgs) ToGetMysqlDbSystemsDbSystemSourceOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemSourceOutput)
}

// GetMysqlDbSystemsDbSystemSourceArrayInput is an input type that accepts GetMysqlDbSystemsDbSystemSourceArray and GetMysqlDbSystemsDbSystemSourceArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsDbSystemSourceArrayInput` via:
//
//	GetMysqlDbSystemsDbSystemSourceArray{ GetMysqlDbSystemsDbSystemSourceArgs{...} }
type GetMysqlDbSystemsDbSystemSourceArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsDbSystemSourceArrayOutput() GetMysqlDbSystemsDbSystemSourceArrayOutput
	ToGetMysqlDbSystemsDbSystemSourceArrayOutputWithContext(context.Context) GetMysqlDbSystemsDbSystemSourceArrayOutput
}

type GetMysqlDbSystemsDbSystemSourceArray []GetMysqlDbSystemsDbSystemSourceInput

func (GetMysqlDbSystemsDbSystemSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemSource)(nil)).Elem()
}

func (i GetMysqlDbSystemsDbSystemSourceArray) ToGetMysqlDbSystemsDbSystemSourceArrayOutput() GetMysqlDbSystemsDbSystemSourceArrayOutput {
	return i.ToGetMysqlDbSystemsDbSystemSourceArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsDbSystemSourceArray) ToGetMysqlDbSystemsDbSystemSourceArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsDbSystemSourceArrayOutput)
}

type GetMysqlDbSystemsDbSystemSourceOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsDbSystemSource)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemSourceOutput) ToGetMysqlDbSystemsDbSystemSourceOutput() GetMysqlDbSystemsDbSystemSourceOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemSourceOutput) ToGetMysqlDbSystemsDbSystemSourceOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemSourceOutput {
	return o
}

// The OCID of the backup to be used as the source for the new DB System.
func (o GetMysqlDbSystemsDbSystemSourceOutput) BackupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemSource) string { return v.BackupId }).(pulumi.StringOutput)
}

// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetMysqlDbSystemsDbSystemSourceOutput) DbSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemSource) string { return v.DbSystemId }).(pulumi.StringOutput)
}

// The date and time, as per RFC 3339, of the change up to which the new DB System shall be restored to, using a backup and logs from the original DB System. In case no point in time is specified, then this new DB System shall be restored up to the latest change recorded for the original DB System.
func (o GetMysqlDbSystemsDbSystemSourceOutput) RecoveryPoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemSource) string { return v.RecoveryPoint }).(pulumi.StringOutput)
}

// The specific source identifier.
func (o GetMysqlDbSystemsDbSystemSourceOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemSource) string { return v.SourceType }).(pulumi.StringOutput)
}

func (o GetMysqlDbSystemsDbSystemSourceOutput) SourceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsDbSystemSource) string { return v.SourceUrl }).(pulumi.StringOutput)
}

type GetMysqlDbSystemsDbSystemSourceArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsDbSystemSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsDbSystemSource)(nil)).Elem()
}

func (o GetMysqlDbSystemsDbSystemSourceArrayOutput) ToGetMysqlDbSystemsDbSystemSourceArrayOutput() GetMysqlDbSystemsDbSystemSourceArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemSourceArrayOutput) ToGetMysqlDbSystemsDbSystemSourceArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsDbSystemSourceArrayOutput {
	return o
}

func (o GetMysqlDbSystemsDbSystemSourceArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsDbSystemSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsDbSystemSource {
		return vs[0].([]GetMysqlDbSystemsDbSystemSource)[vs[1].(int)]
	}).(GetMysqlDbSystemsDbSystemSourceOutput)
}

type GetMysqlDbSystemsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetMysqlDbSystemsFilterInput is an input type that accepts GetMysqlDbSystemsFilterArgs and GetMysqlDbSystemsFilterOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsFilterInput` via:
//
//	GetMysqlDbSystemsFilterArgs{...}
type GetMysqlDbSystemsFilterInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsFilterOutput() GetMysqlDbSystemsFilterOutput
	ToGetMysqlDbSystemsFilterOutputWithContext(context.Context) GetMysqlDbSystemsFilterOutput
}

type GetMysqlDbSystemsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetMysqlDbSystemsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsFilter)(nil)).Elem()
}

func (i GetMysqlDbSystemsFilterArgs) ToGetMysqlDbSystemsFilterOutput() GetMysqlDbSystemsFilterOutput {
	return i.ToGetMysqlDbSystemsFilterOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsFilterArgs) ToGetMysqlDbSystemsFilterOutputWithContext(ctx context.Context) GetMysqlDbSystemsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsFilterOutput)
}

// GetMysqlDbSystemsFilterArrayInput is an input type that accepts GetMysqlDbSystemsFilterArray and GetMysqlDbSystemsFilterArrayOutput values.
// You can construct a concrete instance of `GetMysqlDbSystemsFilterArrayInput` via:
//
//	GetMysqlDbSystemsFilterArray{ GetMysqlDbSystemsFilterArgs{...} }
type GetMysqlDbSystemsFilterArrayInput interface {
	pulumi.Input

	ToGetMysqlDbSystemsFilterArrayOutput() GetMysqlDbSystemsFilterArrayOutput
	ToGetMysqlDbSystemsFilterArrayOutputWithContext(context.Context) GetMysqlDbSystemsFilterArrayOutput
}

type GetMysqlDbSystemsFilterArray []GetMysqlDbSystemsFilterInput

func (GetMysqlDbSystemsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsFilter)(nil)).Elem()
}

func (i GetMysqlDbSystemsFilterArray) ToGetMysqlDbSystemsFilterArrayOutput() GetMysqlDbSystemsFilterArrayOutput {
	return i.ToGetMysqlDbSystemsFilterArrayOutputWithContext(context.Background())
}

func (i GetMysqlDbSystemsFilterArray) ToGetMysqlDbSystemsFilterArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlDbSystemsFilterArrayOutput)
}

type GetMysqlDbSystemsFilterOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDbSystemsFilter)(nil)).Elem()
}

func (o GetMysqlDbSystemsFilterOutput) ToGetMysqlDbSystemsFilterOutput() GetMysqlDbSystemsFilterOutput {
	return o
}

func (o GetMysqlDbSystemsFilterOutput) ToGetMysqlDbSystemsFilterOutputWithContext(ctx context.Context) GetMysqlDbSystemsFilterOutput {
	return o
}

func (o GetMysqlDbSystemsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetMysqlDbSystemsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetMysqlDbSystemsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMysqlDbSystemsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetMysqlDbSystemsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlDbSystemsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlDbSystemsFilter)(nil)).Elem()
}

func (o GetMysqlDbSystemsFilterArrayOutput) ToGetMysqlDbSystemsFilterArrayOutput() GetMysqlDbSystemsFilterArrayOutput {
	return o
}

func (o GetMysqlDbSystemsFilterArrayOutput) ToGetMysqlDbSystemsFilterArrayOutputWithContext(ctx context.Context) GetMysqlDbSystemsFilterArrayOutput {
	return o
}

func (o GetMysqlDbSystemsFilterArrayOutput) Index(i pulumi.IntInput) GetMysqlDbSystemsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlDbSystemsFilter {
		return vs[0].([]GetMysqlDbSystemsFilter)[vs[1].(int)]
	}).(GetMysqlDbSystemsFilterOutput)
}

type GetMysqlVersionFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetMysqlVersionFilterInput is an input type that accepts GetMysqlVersionFilterArgs and GetMysqlVersionFilterOutput values.
// You can construct a concrete instance of `GetMysqlVersionFilterInput` via:
//
//	GetMysqlVersionFilterArgs{...}
type GetMysqlVersionFilterInput interface {
	pulumi.Input

	ToGetMysqlVersionFilterOutput() GetMysqlVersionFilterOutput
	ToGetMysqlVersionFilterOutputWithContext(context.Context) GetMysqlVersionFilterOutput
}

type GetMysqlVersionFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetMysqlVersionFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlVersionFilter)(nil)).Elem()
}

func (i GetMysqlVersionFilterArgs) ToGetMysqlVersionFilterOutput() GetMysqlVersionFilterOutput {
	return i.ToGetMysqlVersionFilterOutputWithContext(context.Background())
}

func (i GetMysqlVersionFilterArgs) ToGetMysqlVersionFilterOutputWithContext(ctx context.Context) GetMysqlVersionFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlVersionFilterOutput)
}

// GetMysqlVersionFilterArrayInput is an input type that accepts GetMysqlVersionFilterArray and GetMysqlVersionFilterArrayOutput values.
// You can construct a concrete instance of `GetMysqlVersionFilterArrayInput` via:
//
//	GetMysqlVersionFilterArray{ GetMysqlVersionFilterArgs{...} }
type GetMysqlVersionFilterArrayInput interface {
	pulumi.Input

	ToGetMysqlVersionFilterArrayOutput() GetMysqlVersionFilterArrayOutput
	ToGetMysqlVersionFilterArrayOutputWithContext(context.Context) GetMysqlVersionFilterArrayOutput
}

type GetMysqlVersionFilterArray []GetMysqlVersionFilterInput

func (GetMysqlVersionFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlVersionFilter)(nil)).Elem()
}

func (i GetMysqlVersionFilterArray) ToGetMysqlVersionFilterArrayOutput() GetMysqlVersionFilterArrayOutput {
	return i.ToGetMysqlVersionFilterArrayOutputWithContext(context.Background())
}

func (i GetMysqlVersionFilterArray) ToGetMysqlVersionFilterArrayOutputWithContext(ctx context.Context) GetMysqlVersionFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlVersionFilterArrayOutput)
}

type GetMysqlVersionFilterOutput struct{ *pulumi.OutputState }

func (GetMysqlVersionFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlVersionFilter)(nil)).Elem()
}

func (o GetMysqlVersionFilterOutput) ToGetMysqlVersionFilterOutput() GetMysqlVersionFilterOutput {
	return o
}

func (o GetMysqlVersionFilterOutput) ToGetMysqlVersionFilterOutputWithContext(ctx context.Context) GetMysqlVersionFilterOutput {
	return o
}

func (o GetMysqlVersionFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlVersionFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetMysqlVersionFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetMysqlVersionFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetMysqlVersionFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMysqlVersionFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetMysqlVersionFilterArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlVersionFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlVersionFilter)(nil)).Elem()
}

func (o GetMysqlVersionFilterArrayOutput) ToGetMysqlVersionFilterArrayOutput() GetMysqlVersionFilterArrayOutput {
	return o
}

func (o GetMysqlVersionFilterArrayOutput) ToGetMysqlVersionFilterArrayOutputWithContext(ctx context.Context) GetMysqlVersionFilterArrayOutput {
	return o
}

func (o GetMysqlVersionFilterArrayOutput) Index(i pulumi.IntInput) GetMysqlVersionFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlVersionFilter {
		return vs[0].([]GetMysqlVersionFilter)[vs[1].(int)]
	}).(GetMysqlVersionFilterOutput)
}

type GetMysqlVersionVersion struct {
	// A descriptive summary of a group of versions.
	VersionFamily string `pulumi:"versionFamily"`
	// The list of supported MySQL Versions.
	Versions []GetMysqlVersionVersionVersion `pulumi:"versions"`
}

// GetMysqlVersionVersionInput is an input type that accepts GetMysqlVersionVersionArgs and GetMysqlVersionVersionOutput values.
// You can construct a concrete instance of `GetMysqlVersionVersionInput` via:
//
//	GetMysqlVersionVersionArgs{...}
type GetMysqlVersionVersionInput interface {
	pulumi.Input

	ToGetMysqlVersionVersionOutput() GetMysqlVersionVersionOutput
	ToGetMysqlVersionVersionOutputWithContext(context.Context) GetMysqlVersionVersionOutput
}

type GetMysqlVersionVersionArgs struct {
	// A descriptive summary of a group of versions.
	VersionFamily pulumi.StringInput `pulumi:"versionFamily"`
	// The list of supported MySQL Versions.
	Versions GetMysqlVersionVersionVersionArrayInput `pulumi:"versions"`
}

func (GetMysqlVersionVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlVersionVersion)(nil)).Elem()
}

func (i GetMysqlVersionVersionArgs) ToGetMysqlVersionVersionOutput() GetMysqlVersionVersionOutput {
	return i.ToGetMysqlVersionVersionOutputWithContext(context.Background())
}

func (i GetMysqlVersionVersionArgs) ToGetMysqlVersionVersionOutputWithContext(ctx context.Context) GetMysqlVersionVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlVersionVersionOutput)
}

// GetMysqlVersionVersionArrayInput is an input type that accepts GetMysqlVersionVersionArray and GetMysqlVersionVersionArrayOutput values.
// You can construct a concrete instance of `GetMysqlVersionVersionArrayInput` via:
//
//	GetMysqlVersionVersionArray{ GetMysqlVersionVersionArgs{...} }
type GetMysqlVersionVersionArrayInput interface {
	pulumi.Input

	ToGetMysqlVersionVersionArrayOutput() GetMysqlVersionVersionArrayOutput
	ToGetMysqlVersionVersionArrayOutputWithContext(context.Context) GetMysqlVersionVersionArrayOutput
}

type GetMysqlVersionVersionArray []GetMysqlVersionVersionInput

func (GetMysqlVersionVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlVersionVersion)(nil)).Elem()
}

func (i GetMysqlVersionVersionArray) ToGetMysqlVersionVersionArrayOutput() GetMysqlVersionVersionArrayOutput {
	return i.ToGetMysqlVersionVersionArrayOutputWithContext(context.Background())
}

func (i GetMysqlVersionVersionArray) ToGetMysqlVersionVersionArrayOutputWithContext(ctx context.Context) GetMysqlVersionVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlVersionVersionArrayOutput)
}

type GetMysqlVersionVersionOutput struct{ *pulumi.OutputState }

func (GetMysqlVersionVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlVersionVersion)(nil)).Elem()
}

func (o GetMysqlVersionVersionOutput) ToGetMysqlVersionVersionOutput() GetMysqlVersionVersionOutput {
	return o
}

func (o GetMysqlVersionVersionOutput) ToGetMysqlVersionVersionOutputWithContext(ctx context.Context) GetMysqlVersionVersionOutput {
	return o
}

// A descriptive summary of a group of versions.
func (o GetMysqlVersionVersionOutput) VersionFamily() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlVersionVersion) string { return v.VersionFamily }).(pulumi.StringOutput)
}

// The list of supported MySQL Versions.
func (o GetMysqlVersionVersionOutput) Versions() GetMysqlVersionVersionVersionArrayOutput {
	return o.ApplyT(func(v GetMysqlVersionVersion) []GetMysqlVersionVersionVersion { return v.Versions }).(GetMysqlVersionVersionVersionArrayOutput)
}

type GetMysqlVersionVersionArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlVersionVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlVersionVersion)(nil)).Elem()
}

func (o GetMysqlVersionVersionArrayOutput) ToGetMysqlVersionVersionArrayOutput() GetMysqlVersionVersionArrayOutput {
	return o
}

func (o GetMysqlVersionVersionArrayOutput) ToGetMysqlVersionVersionArrayOutputWithContext(ctx context.Context) GetMysqlVersionVersionArrayOutput {
	return o
}

func (o GetMysqlVersionVersionArrayOutput) Index(i pulumi.IntInput) GetMysqlVersionVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlVersionVersion {
		return vs[0].([]GetMysqlVersionVersion)[vs[1].(int)]
	}).(GetMysqlVersionVersionOutput)
}

type GetMysqlVersionVersionVersion struct {
	// A link to a page describing the version.
	Description string `pulumi:"description"`
	// The specific version identifier
	Version string `pulumi:"version"`
}

// GetMysqlVersionVersionVersionInput is an input type that accepts GetMysqlVersionVersionVersionArgs and GetMysqlVersionVersionVersionOutput values.
// You can construct a concrete instance of `GetMysqlVersionVersionVersionInput` via:
//
//	GetMysqlVersionVersionVersionArgs{...}
type GetMysqlVersionVersionVersionInput interface {
	pulumi.Input

	ToGetMysqlVersionVersionVersionOutput() GetMysqlVersionVersionVersionOutput
	ToGetMysqlVersionVersionVersionOutputWithContext(context.Context) GetMysqlVersionVersionVersionOutput
}

type GetMysqlVersionVersionVersionArgs struct {
	// A link to a page describing the version.
	Description pulumi.StringInput `pulumi:"description"`
	// The specific version identifier
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetMysqlVersionVersionVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlVersionVersionVersion)(nil)).Elem()
}

func (i GetMysqlVersionVersionVersionArgs) ToGetMysqlVersionVersionVersionOutput() GetMysqlVersionVersionVersionOutput {
	return i.ToGetMysqlVersionVersionVersionOutputWithContext(context.Background())
}

func (i GetMysqlVersionVersionVersionArgs) ToGetMysqlVersionVersionVersionOutputWithContext(ctx context.Context) GetMysqlVersionVersionVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlVersionVersionVersionOutput)
}

// GetMysqlVersionVersionVersionArrayInput is an input type that accepts GetMysqlVersionVersionVersionArray and GetMysqlVersionVersionVersionArrayOutput values.
// You can construct a concrete instance of `GetMysqlVersionVersionVersionArrayInput` via:
//
//	GetMysqlVersionVersionVersionArray{ GetMysqlVersionVersionVersionArgs{...} }
type GetMysqlVersionVersionVersionArrayInput interface {
	pulumi.Input

	ToGetMysqlVersionVersionVersionArrayOutput() GetMysqlVersionVersionVersionArrayOutput
	ToGetMysqlVersionVersionVersionArrayOutputWithContext(context.Context) GetMysqlVersionVersionVersionArrayOutput
}

type GetMysqlVersionVersionVersionArray []GetMysqlVersionVersionVersionInput

func (GetMysqlVersionVersionVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlVersionVersionVersion)(nil)).Elem()
}

func (i GetMysqlVersionVersionVersionArray) ToGetMysqlVersionVersionVersionArrayOutput() GetMysqlVersionVersionVersionArrayOutput {
	return i.ToGetMysqlVersionVersionVersionArrayOutputWithContext(context.Background())
}

func (i GetMysqlVersionVersionVersionArray) ToGetMysqlVersionVersionVersionArrayOutputWithContext(ctx context.Context) GetMysqlVersionVersionVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlVersionVersionVersionArrayOutput)
}

type GetMysqlVersionVersionVersionOutput struct{ *pulumi.OutputState }

func (GetMysqlVersionVersionVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlVersionVersionVersion)(nil)).Elem()
}

func (o GetMysqlVersionVersionVersionOutput) ToGetMysqlVersionVersionVersionOutput() GetMysqlVersionVersionVersionOutput {
	return o
}

func (o GetMysqlVersionVersionVersionOutput) ToGetMysqlVersionVersionVersionOutputWithContext(ctx context.Context) GetMysqlVersionVersionVersionOutput {
	return o
}

// A link to a page describing the version.
func (o GetMysqlVersionVersionVersionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlVersionVersionVersion) string { return v.Description }).(pulumi.StringOutput)
}

// The specific version identifier
func (o GetMysqlVersionVersionVersionOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlVersionVersionVersion) string { return v.Version }).(pulumi.StringOutput)
}

type GetMysqlVersionVersionVersionArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlVersionVersionVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlVersionVersionVersion)(nil)).Elem()
}

func (o GetMysqlVersionVersionVersionArrayOutput) ToGetMysqlVersionVersionVersionArrayOutput() GetMysqlVersionVersionVersionArrayOutput {
	return o
}

func (o GetMysqlVersionVersionVersionArrayOutput) ToGetMysqlVersionVersionVersionArrayOutputWithContext(ctx context.Context) GetMysqlVersionVersionVersionArrayOutput {
	return o
}

func (o GetMysqlVersionVersionVersionArrayOutput) Index(i pulumi.IntInput) GetMysqlVersionVersionVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlVersionVersionVersion {
		return vs[0].([]GetMysqlVersionVersionVersion)[vs[1].(int)]
	}).(GetMysqlVersionVersionVersionOutput)
}

type GetReplicaEncryptData struct {
	// Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
	KeyGenerationType string `pulumi:"keyGenerationType"`
	// The OCID of the key to use.
	KeyId string `pulumi:"keyId"`
}

// GetReplicaEncryptDataInput is an input type that accepts GetReplicaEncryptDataArgs and GetReplicaEncryptDataOutput values.
// You can construct a concrete instance of `GetReplicaEncryptDataInput` via:
//
//	GetReplicaEncryptDataArgs{...}
type GetReplicaEncryptDataInput interface {
	pulumi.Input

	ToGetReplicaEncryptDataOutput() GetReplicaEncryptDataOutput
	ToGetReplicaEncryptDataOutputWithContext(context.Context) GetReplicaEncryptDataOutput
}

type GetReplicaEncryptDataArgs struct {
	// Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
	KeyGenerationType pulumi.StringInput `pulumi:"keyGenerationType"`
	// The OCID of the key to use.
	KeyId pulumi.StringInput `pulumi:"keyId"`
}

func (GetReplicaEncryptDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicaEncryptData)(nil)).Elem()
}

func (i GetReplicaEncryptDataArgs) ToGetReplicaEncryptDataOutput() GetReplicaEncryptDataOutput {
	return i.ToGetReplicaEncryptDataOutputWithContext(context.Background())
}

func (i GetReplicaEncryptDataArgs) ToGetReplicaEncryptDataOutputWithContext(ctx context.Context) GetReplicaEncryptDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplicaEncryptDataOutput)
}

// GetReplicaEncryptDataArrayInput is an input type that accepts GetReplicaEncryptDataArray and GetReplicaEncryptDataArrayOutput values.
// You can construct a concrete instance of `GetReplicaEncryptDataArrayInput` via:
//
//	GetReplicaEncryptDataArray{ GetReplicaEncryptDataArgs{...} }
type GetReplicaEncryptDataArrayInput interface {
	pulumi.Input

	ToGetReplicaEncryptDataArrayOutput() GetReplicaEncryptDataArrayOutput
	ToGetReplicaEncryptDataArrayOutputWithContext(context.Context) GetReplicaEncryptDataArrayOutput
}

type GetReplicaEncryptDataArray []GetReplicaEncryptDataInput

func (GetReplicaEncryptDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplicaEncryptData)(nil)).Elem()
}

func (i GetReplicaEncryptDataArray) ToGetReplicaEncryptDataArrayOutput() GetReplicaEncryptDataArrayOutput {
	return i.ToGetReplicaEncryptDataArrayOutputWithContext(context.Background())
}

func (i GetReplicaEncryptDataArray) ToGetReplicaEncryptDataArrayOutputWithContext(ctx context.Context) GetReplicaEncryptDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplicaEncryptDataArrayOutput)
}

type GetReplicaEncryptDataOutput struct{ *pulumi.OutputState }

func (GetReplicaEncryptDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicaEncryptData)(nil)).Elem()
}

func (o GetReplicaEncryptDataOutput) ToGetReplicaEncryptDataOutput() GetReplicaEncryptDataOutput {
	return o
}

func (o GetReplicaEncryptDataOutput) ToGetReplicaEncryptDataOutputWithContext(ctx context.Context) GetReplicaEncryptDataOutput {
	return o
}

// Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
func (o GetReplicaEncryptDataOutput) KeyGenerationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicaEncryptData) string { return v.KeyGenerationType }).(pulumi.StringOutput)
}

// The OCID of the key to use.
func (o GetReplicaEncryptDataOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicaEncryptData) string { return v.KeyId }).(pulumi.StringOutput)
}

type GetReplicaEncryptDataArrayOutput struct{ *pulumi.OutputState }

func (GetReplicaEncryptDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplicaEncryptData)(nil)).Elem()
}

func (o GetReplicaEncryptDataArrayOutput) ToGetReplicaEncryptDataArrayOutput() GetReplicaEncryptDataArrayOutput {
	return o
}

func (o GetReplicaEncryptDataArrayOutput) ToGetReplicaEncryptDataArrayOutputWithContext(ctx context.Context) GetReplicaEncryptDataArrayOutput {
	return o
}

func (o GetReplicaEncryptDataArrayOutput) Index(i pulumi.IntInput) GetReplicaEncryptDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReplicaEncryptData {
		return vs[0].([]GetReplicaEncryptData)[vs[1].(int)]
	}).(GetReplicaEncryptDataOutput)
}

type GetReplicaReplicaOverride struct {
	// The OCID of the Configuration to be used by the read replica.
	ConfigurationId string `pulumi:"configurationId"`
	// The MySQL version to be used by the read replica.
	MysqlVersion string `pulumi:"mysqlVersion"`
	// Network Security Group OCIDs used for the VNIC attachment.
	NsgIds []string `pulumi:"nsgIds"`
	// The shape currently in use by the read replica. The shape determines the resources allocated:  CPU cores and memory for VM shapes, CPU cores, memory and storage for non-VM (bare metal) shapes.  To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
	ShapeName string `pulumi:"shapeName"`
}

// GetReplicaReplicaOverrideInput is an input type that accepts GetReplicaReplicaOverrideArgs and GetReplicaReplicaOverrideOutput values.
// You can construct a concrete instance of `GetReplicaReplicaOverrideInput` via:
//
//	GetReplicaReplicaOverrideArgs{...}
type GetReplicaReplicaOverrideInput interface {
	pulumi.Input

	ToGetReplicaReplicaOverrideOutput() GetReplicaReplicaOverrideOutput
	ToGetReplicaReplicaOverrideOutputWithContext(context.Context) GetReplicaReplicaOverrideOutput
}

type GetReplicaReplicaOverrideArgs struct {
	// The OCID of the Configuration to be used by the read replica.
	ConfigurationId pulumi.StringInput `pulumi:"configurationId"`
	// The MySQL version to be used by the read replica.
	MysqlVersion pulumi.StringInput `pulumi:"mysqlVersion"`
	// Network Security Group OCIDs used for the VNIC attachment.
	NsgIds pulumi.StringArrayInput `pulumi:"nsgIds"`
	// The shape currently in use by the read replica. The shape determines the resources allocated:  CPU cores and memory for VM shapes, CPU cores, memory and storage for non-VM (bare metal) shapes.  To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
	ShapeName pulumi.StringInput `pulumi:"shapeName"`
}

func (GetReplicaReplicaOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicaReplicaOverride)(nil)).Elem()
}

func (i GetReplicaReplicaOverrideArgs) ToGetReplicaReplicaOverrideOutput() GetReplicaReplicaOverrideOutput {
	return i.ToGetReplicaReplicaOverrideOutputWithContext(context.Background())
}

func (i GetReplicaReplicaOverrideArgs) ToGetReplicaReplicaOverrideOutputWithContext(ctx context.Context) GetReplicaReplicaOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplicaReplicaOverrideOutput)
}

// GetReplicaReplicaOverrideArrayInput is an input type that accepts GetReplicaReplicaOverrideArray and GetReplicaReplicaOverrideArrayOutput values.
// You can construct a concrete instance of `GetReplicaReplicaOverrideArrayInput` via:
//
//	GetReplicaReplicaOverrideArray{ GetReplicaReplicaOverrideArgs{...} }
type GetReplicaReplicaOverrideArrayInput interface {
	pulumi.Input

	ToGetReplicaReplicaOverrideArrayOutput() GetReplicaReplicaOverrideArrayOutput
	ToGetReplicaReplicaOverrideArrayOutputWithContext(context.Context) GetReplicaReplicaOverrideArrayOutput
}

type GetReplicaReplicaOverrideArray []GetReplicaReplicaOverrideInput

func (GetReplicaReplicaOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplicaReplicaOverride)(nil)).Elem()
}

func (i GetReplicaReplicaOverrideArray) ToGetReplicaReplicaOverrideArrayOutput() GetReplicaReplicaOverrideArrayOutput {
	return i.ToGetReplicaReplicaOverrideArrayOutputWithContext(context.Background())
}

func (i GetReplicaReplicaOverrideArray) ToGetReplicaReplicaOverrideArrayOutputWithContext(ctx context.Context) GetReplicaReplicaOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplicaReplicaOverrideArrayOutput)
}

type GetReplicaReplicaOverrideOutput struct{ *pulumi.OutputState }

func (GetReplicaReplicaOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicaReplicaOverride)(nil)).Elem()
}

func (o GetReplicaReplicaOverrideOutput) ToGetReplicaReplicaOverrideOutput() GetReplicaReplicaOverrideOutput {
	return o
}

func (o GetReplicaReplicaOverrideOutput) ToGetReplicaReplicaOverrideOutputWithContext(ctx context.Context) GetReplicaReplicaOverrideOutput {
	return o
}

// The OCID of the Configuration to be used by the read replica.
func (o GetReplicaReplicaOverrideOutput) ConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicaReplicaOverride) string { return v.ConfigurationId }).(pulumi.StringOutput)
}

// The MySQL version to be used by the read replica.
func (o GetReplicaReplicaOverrideOutput) MysqlVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicaReplicaOverride) string { return v.MysqlVersion }).(pulumi.StringOutput)
}

// Network Security Group OCIDs used for the VNIC attachment.
func (o GetReplicaReplicaOverrideOutput) NsgIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetReplicaReplicaOverride) []string { return v.NsgIds }).(pulumi.StringArrayOutput)
}

// The shape currently in use by the read replica. The shape determines the resources allocated:  CPU cores and memory for VM shapes, CPU cores, memory and storage for non-VM (bare metal) shapes.  To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
func (o GetReplicaReplicaOverrideOutput) ShapeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicaReplicaOverride) string { return v.ShapeName }).(pulumi.StringOutput)
}

type GetReplicaReplicaOverrideArrayOutput struct{ *pulumi.OutputState }

func (GetReplicaReplicaOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplicaReplicaOverride)(nil)).Elem()
}

func (o GetReplicaReplicaOverrideArrayOutput) ToGetReplicaReplicaOverrideArrayOutput() GetReplicaReplicaOverrideArrayOutput {
	return o
}

func (o GetReplicaReplicaOverrideArrayOutput) ToGetReplicaReplicaOverrideArrayOutputWithContext(ctx context.Context) GetReplicaReplicaOverrideArrayOutput {
	return o
}

func (o GetReplicaReplicaOverrideArrayOutput) Index(i pulumi.IntInput) GetReplicaReplicaOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReplicaReplicaOverride {
		return vs[0].([]GetReplicaReplicaOverride)[vs[1].(int)]
	}).(GetReplicaReplicaOverrideOutput)
}

type GetReplicaSecureConnection struct {
	// Select whether to use MySQL Database Service-managed certificate (SYSTEM) or your own certificate (BYOC).
	CertificateGenerationType string `pulumi:"certificateGenerationType"`
	// The OCID of the certificate to use.
	CertificateId string `pulumi:"certificateId"`
}

// GetReplicaSecureConnectionInput is an input type that accepts GetReplicaSecureConnectionArgs and GetReplicaSecureConnectionOutput values.
// You can construct a concrete instance of `GetReplicaSecureConnectionInput` via:
//
//	GetReplicaSecureConnectionArgs{...}
type GetReplicaSecureConnectionInput interface {
	pulumi.Input

	ToGetReplicaSecureConnectionOutput() GetReplicaSecureConnectionOutput
	ToGetReplicaSecureConnectionOutputWithContext(context.Context) GetReplicaSecureConnectionOutput
}

type GetReplicaSecureConnectionArgs struct {
	// Select whether to use MySQL Database Service-managed certificate (SYSTEM) or your own certificate (BYOC).
	CertificateGenerationType pulumi.StringInput `pulumi:"certificateGenerationType"`
	// The OCID of the certificate to use.
	CertificateId pulumi.StringInput `pulumi:"certificateId"`
}

func (GetReplicaSecureConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicaSecureConnection)(nil)).Elem()
}

func (i GetReplicaSecureConnectionArgs) ToGetReplicaSecureConnectionOutput() GetReplicaSecureConnectionOutput {
	return i.ToGetReplicaSecureConnectionOutputWithContext(context.Background())
}

func (i GetReplicaSecureConnectionArgs) ToGetReplicaSecureConnectionOutputWithContext(ctx context.Context) GetReplicaSecureConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplicaSecureConnectionOutput)
}

// GetReplicaSecureConnectionArrayInput is an input type that accepts GetReplicaSecureConnectionArray and GetReplicaSecureConnectionArrayOutput values.
// You can construct a concrete instance of `GetReplicaSecureConnectionArrayInput` via:
//
//	GetReplicaSecureConnectionArray{ GetReplicaSecureConnectionArgs{...} }
type GetReplicaSecureConnectionArrayInput interface {
	pulumi.Input

	ToGetReplicaSecureConnectionArrayOutput() GetReplicaSecureConnectionArrayOutput
	ToGetReplicaSecureConnectionArrayOutputWithContext(context.Context) GetReplicaSecureConnectionArrayOutput
}

type GetReplicaSecureConnectionArray []GetReplicaSecureConnectionInput

func (GetReplicaSecureConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplicaSecureConnection)(nil)).Elem()
}

func (i GetReplicaSecureConnectionArray) ToGetReplicaSecureConnectionArrayOutput() GetReplicaSecureConnectionArrayOutput {
	return i.ToGetReplicaSecureConnectionArrayOutputWithContext(context.Background())
}

func (i GetReplicaSecureConnectionArray) ToGetReplicaSecureConnectionArrayOutputWithContext(ctx context.Context) GetReplicaSecureConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplicaSecureConnectionArrayOutput)
}

type GetReplicaSecureConnectionOutput struct{ *pulumi.OutputState }

func (GetReplicaSecureConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicaSecureConnection)(nil)).Elem()
}

func (o GetReplicaSecureConnectionOutput) ToGetReplicaSecureConnectionOutput() GetReplicaSecureConnectionOutput {
	return o
}

func (o GetReplicaSecureConnectionOutput) ToGetReplicaSecureConnectionOutputWithContext(ctx context.Context) GetReplicaSecureConnectionOutput {
	return o
}

// Select whether to use MySQL Database Service-managed certificate (SYSTEM) or your own certificate (BYOC).
func (o GetReplicaSecureConnectionOutput) CertificateGenerationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicaSecureConnection) string { return v.CertificateGenerationType }).(pulumi.StringOutput)
}

// The OCID of the certificate to use.
func (o GetReplicaSecureConnectionOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicaSecureConnection) string { return v.CertificateId }).(pulumi.StringOutput)
}

type GetReplicaSecureConnectionArrayOutput struct{ *pulumi.OutputState }

func (GetReplicaSecureConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplicaSecureConnection)(nil)).Elem()
}

func (o GetReplicaSecureConnectionArrayOutput) ToGetReplicaSecureConnectionArrayOutput() GetReplicaSecureConnectionArrayOutput {
	return o
}

func (o GetReplicaSecureConnectionArrayOutput) ToGetReplicaSecureConnectionArrayOutputWithContext(ctx context.Context) GetReplicaSecureConnectionArrayOutput {
	return o
}

func (o GetReplicaSecureConnectionArrayOutput) Index(i pulumi.IntInput) GetReplicaSecureConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReplicaSecureConnection {
		return vs[0].([]GetReplicaSecureConnection)[vs[1].(int)]
	}).(GetReplicaSecureConnectionOutput)
}

type GetReplicasFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetReplicasFilterInput is an input type that accepts GetReplicasFilterArgs and GetReplicasFilterOutput values.
// You can construct a concrete instance of `GetReplicasFilterInput` via:
//
//	GetReplicasFilterArgs{...}
type GetReplicasFilterInput interface {
	pulumi.Input

	ToGetReplicasFilterOutput() GetReplicasFilterOutput
	ToGetReplicasFilterOutputWithContext(context.Context) GetReplicasFilterOutput
}

type GetReplicasFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetReplicasFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicasFilter)(nil)).Elem()
}

func (i GetReplicasFilterArgs) ToGetReplicasFilterOutput() GetReplicasFilterOutput {
	return i.ToGetReplicasFilterOutputWithContext(context.Background())
}

func (i GetReplicasFilterArgs) ToGetReplicasFilterOutputWithContext(ctx context.Context) GetReplicasFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplicasFilterOutput)
}

// GetReplicasFilterArrayInput is an input type that accepts GetReplicasFilterArray and GetReplicasFilterArrayOutput values.
// You can construct a concrete instance of `GetReplicasFilterArrayInput` via:
//
//	GetReplicasFilterArray{ GetReplicasFilterArgs{...} }
type GetReplicasFilterArrayInput interface {
	pulumi.Input

	ToGetReplicasFilterArrayOutput() GetReplicasFilterArrayOutput
	ToGetReplicasFilterArrayOutputWithContext(context.Context) GetReplicasFilterArrayOutput
}

type GetReplicasFilterArray []GetReplicasFilterInput

func (GetReplicasFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplicasFilter)(nil)).Elem()
}

func (i GetReplicasFilterArray) ToGetReplicasFilterArrayOutput() GetReplicasFilterArrayOutput {
	return i.ToGetReplicasFilterArrayOutputWithContext(context.Background())
}

func (i GetReplicasFilterArray) ToGetReplicasFilterArrayOutputWithContext(ctx context.Context) GetReplicasFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplicasFilterArrayOutput)
}

type GetReplicasFilterOutput struct{ *pulumi.OutputState }

func (GetReplicasFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicasFilter)(nil)).Elem()
}

func (o GetReplicasFilterOutput) ToGetReplicasFilterOutput() GetReplicasFilterOutput {
	return o
}

func (o GetReplicasFilterOutput) ToGetReplicasFilterOutputWithContext(ctx context.Context) GetReplicasFilterOutput {
	return o
}

func (o GetReplicasFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicasFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetReplicasFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetReplicasFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetReplicasFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetReplicasFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetReplicasFilterArrayOutput struct{ *pulumi.OutputState }

func (GetReplicasFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplicasFilter)(nil)).Elem()
}

func (o GetReplicasFilterArrayOutput) ToGetReplicasFilterArrayOutput() GetReplicasFilterArrayOutput {
	return o
}

func (o GetReplicasFilterArrayOutput) ToGetReplicasFilterArrayOutputWithContext(ctx context.Context) GetReplicasFilterArrayOutput {
	return o
}

func (o GetReplicasFilterArrayOutput) Index(i pulumi.IntInput) GetReplicasFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReplicasFilter {
		return vs[0].([]GetReplicasFilter)[vs[1].(int)]
	}).(GetReplicasFilterOutput)
}

type GetReplicasReplica struct {
	// The name of the Availability Domain the read replica is located in.
	AvailabilityDomain string `pulumi:"availabilityDomain"`
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// The requested Configuration instance.
	ConfigurationId string `pulumi:"configurationId"`
	// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId string `pulumi:"dbSystemId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// User provided description of the read replica.
	Description string `pulumi:"description"`
	// A filter to return only the resource matching the given display name exactly.
	DisplayName string `pulumi:"displayName"`
	// Encrypt data details.
	EncryptDatas []GetReplicasReplicaEncryptData `pulumi:"encryptDatas"`
	// The name of the Fault Domain the read replica is located in.
	FaultDomain string `pulumi:"faultDomain"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The OCID of the read replica.
	Id string `pulumi:"id"`
	// The IP address the read replica is configured to listen on.
	IpAddress string `pulumi:"ipAddress"`
	// Specifies whether the read replica can be deleted. Set to true to prevent deletion, false (default) to allow. Note that if a read replica is delete protected it also prevents the entire DB System from being deleted. If the DB System is delete protected, read replicas can still be deleted individually if they are not delete  protected themselves.
	IsDeleteProtected bool `pulumi:"isDeleteProtected"`
	// A message describing the state of the read replica.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The MySQL version to be used by the read replica.
	MysqlVersion string `pulumi:"mysqlVersion"`
	// Network Security Group OCIDs used for the VNIC attachment.
	NsgIds []string `pulumi:"nsgIds"`
	// The port the read replica is configured to listen on.
	Port int `pulumi:"port"`
	// The TCP network port on which X Plugin listens for connections. This is the X Plugin equivalent of port.
	PortX int `pulumi:"portX"`
	// By default a read replica inherits the MySQL version, shape, and configuration of the source DB system.  If you want to override any of these, provide values in the properties, mysqlVersion, shapeName,  and configurationId. If you set a property value to "", then the value is inherited from its  source DB system.
	ReplicaOverrides []GetReplicasReplicaReplicaOverride `pulumi:"replicaOverrides"`
	// Secure connection configuration details.
	SecureConnections []GetReplicasReplicaSecureConnection `pulumi:"secureConnections"`
	// The shape currently in use by the read replica. The shape determines the resources allocated:  CPU cores and memory for VM shapes, CPU cores, memory and storage for non-VM (bare metal) shapes.  To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
	ShapeName string `pulumi:"shapeName"`
	// The LifecycleState of the read replica.
	State string `pulumi:"state"`
	// The date and time the read replica was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeCreated string `pulumi:"timeCreated"`
	// The time the read replica was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetReplicasReplicaInput is an input type that accepts GetReplicasReplicaArgs and GetReplicasReplicaOutput values.
// You can construct a concrete instance of `GetReplicasReplicaInput` via:
//
//	GetReplicasReplicaArgs{...}
type GetReplicasReplicaInput interface {
	pulumi.Input

	ToGetReplicasReplicaOutput() GetReplicasReplicaOutput
	ToGetReplicasReplicaOutputWithContext(context.Context) GetReplicasReplicaOutput
}

type GetReplicasReplicaArgs struct {
	// The name of the Availability Domain the read replica is located in.
	AvailabilityDomain pulumi.StringInput `pulumi:"availabilityDomain"`
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The requested Configuration instance.
	ConfigurationId pulumi.StringInput `pulumi:"configurationId"`
	// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId pulumi.StringInput `pulumi:"dbSystemId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// User provided description of the read replica.
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only the resource matching the given display name exactly.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Encrypt data details.
	EncryptDatas GetReplicasReplicaEncryptDataArrayInput `pulumi:"encryptDatas"`
	// The name of the Fault Domain the read replica is located in.
	FaultDomain pulumi.StringInput `pulumi:"faultDomain"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// The OCID of the read replica.
	Id pulumi.StringInput `pulumi:"id"`
	// The IP address the read replica is configured to listen on.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// Specifies whether the read replica can be deleted. Set to true to prevent deletion, false (default) to allow. Note that if a read replica is delete protected it also prevents the entire DB System from being deleted. If the DB System is delete protected, read replicas can still be deleted individually if they are not delete  protected themselves.
	IsDeleteProtected pulumi.BoolInput `pulumi:"isDeleteProtected"`
	// A message describing the state of the read replica.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// The MySQL version to be used by the read replica.
	MysqlVersion pulumi.StringInput `pulumi:"mysqlVersion"`
	// Network Security Group OCIDs used for the VNIC attachment.
	NsgIds pulumi.StringArrayInput `pulumi:"nsgIds"`
	// The port the read replica is configured to listen on.
	Port pulumi.IntInput `pulumi:"port"`
	// The TCP network port on which X Plugin listens for connections. This is the X Plugin equivalent of port.
	PortX pulumi.IntInput `pulumi:"portX"`
	// By default a read replica inherits the MySQL version, shape, and configuration of the source DB system.  If you want to override any of these, provide values in the properties, mysqlVersion, shapeName,  and configurationId. If you set a property value to "", then the value is inherited from its  source DB system.
	ReplicaOverrides GetReplicasReplicaReplicaOverrideArrayInput `pulumi:"replicaOverrides"`
	// Secure connection configuration details.
	SecureConnections GetReplicasReplicaSecureConnectionArrayInput `pulumi:"secureConnections"`
	// The shape currently in use by the read replica. The shape determines the resources allocated:  CPU cores and memory for VM shapes, CPU cores, memory and storage for non-VM (bare metal) shapes.  To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
	ShapeName pulumi.StringInput `pulumi:"shapeName"`
	// The LifecycleState of the read replica.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the read replica was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the read replica was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetReplicasReplicaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicasReplica)(nil)).Elem()
}

func (i GetReplicasReplicaArgs) ToGetReplicasReplicaOutput() GetReplicasReplicaOutput {
	return i.ToGetReplicasReplicaOutputWithContext(context.Background())
}

func (i GetReplicasReplicaArgs) ToGetReplicasReplicaOutputWithContext(ctx context.Context) GetReplicasReplicaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplicasReplicaOutput)
}

// GetReplicasReplicaArrayInput is an input type that accepts GetReplicasReplicaArray and GetReplicasReplicaArrayOutput values.
// You can construct a concrete instance of `GetReplicasReplicaArrayInput` via:
//
//	GetReplicasReplicaArray{ GetReplicasReplicaArgs{...} }
type GetReplicasReplicaArrayInput interface {
	pulumi.Input

	ToGetReplicasReplicaArrayOutput() GetReplicasReplicaArrayOutput
	ToGetReplicasReplicaArrayOutputWithContext(context.Context) GetReplicasReplicaArrayOutput
}

type GetReplicasReplicaArray []GetReplicasReplicaInput

func (GetReplicasReplicaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplicasReplica)(nil)).Elem()
}

func (i GetReplicasReplicaArray) ToGetReplicasReplicaArrayOutput() GetReplicasReplicaArrayOutput {
	return i.ToGetReplicasReplicaArrayOutputWithContext(context.Background())
}

func (i GetReplicasReplicaArray) ToGetReplicasReplicaArrayOutputWithContext(ctx context.Context) GetReplicasReplicaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplicasReplicaArrayOutput)
}

type GetReplicasReplicaOutput struct{ *pulumi.OutputState }

func (GetReplicasReplicaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicasReplica)(nil)).Elem()
}

func (o GetReplicasReplicaOutput) ToGetReplicasReplicaOutput() GetReplicasReplicaOutput {
	return o
}

func (o GetReplicasReplicaOutput) ToGetReplicasReplicaOutputWithContext(ctx context.Context) GetReplicasReplicaOutput {
	return o
}

// The name of the Availability Domain the read replica is located in.
func (o GetReplicasReplicaOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicasReplica) string { return v.AvailabilityDomain }).(pulumi.StringOutput)
}

// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetReplicasReplicaOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicasReplica) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The requested Configuration instance.
func (o GetReplicasReplicaOutput) ConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicasReplica) string { return v.ConfigurationId }).(pulumi.StringOutput)
}

// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetReplicasReplicaOutput) DbSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicasReplica) string { return v.DbSystemId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetReplicasReplicaOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetReplicasReplica) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// User provided description of the read replica.
func (o GetReplicasReplicaOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicasReplica) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only the resource matching the given display name exactly.
func (o GetReplicasReplicaOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicasReplica) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Encrypt data details.
func (o GetReplicasReplicaOutput) EncryptDatas() GetReplicasReplicaEncryptDataArrayOutput {
	return o.ApplyT(func(v GetReplicasReplica) []GetReplicasReplicaEncryptData { return v.EncryptDatas }).(GetReplicasReplicaEncryptDataArrayOutput)
}

// The name of the Fault Domain the read replica is located in.
func (o GetReplicasReplicaOutput) FaultDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicasReplica) string { return v.FaultDomain }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetReplicasReplicaOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetReplicasReplica) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The OCID of the read replica.
func (o GetReplicasReplicaOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicasReplica) string { return v.Id }).(pulumi.StringOutput)
}

// The IP address the read replica is configured to listen on.
func (o GetReplicasReplicaOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicasReplica) string { return v.IpAddress }).(pulumi.StringOutput)
}

// Specifies whether the read replica can be deleted. Set to true to prevent deletion, false (default) to allow. Note that if a read replica is delete protected it also prevents the entire DB System from being deleted. If the DB System is delete protected, read replicas can still be deleted individually if they are not delete  protected themselves.
func (o GetReplicasReplicaOutput) IsDeleteProtected() pulumi.BoolOutput {
	return o.ApplyT(func(v GetReplicasReplica) bool { return v.IsDeleteProtected }).(pulumi.BoolOutput)
}

// A message describing the state of the read replica.
func (o GetReplicasReplicaOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicasReplica) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The MySQL version to be used by the read replica.
func (o GetReplicasReplicaOutput) MysqlVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicasReplica) string { return v.MysqlVersion }).(pulumi.StringOutput)
}

// Network Security Group OCIDs used for the VNIC attachment.
func (o GetReplicasReplicaOutput) NsgIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetReplicasReplica) []string { return v.NsgIds }).(pulumi.StringArrayOutput)
}

// The port the read replica is configured to listen on.
func (o GetReplicasReplicaOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetReplicasReplica) int { return v.Port }).(pulumi.IntOutput)
}

// The TCP network port on which X Plugin listens for connections. This is the X Plugin equivalent of port.
func (o GetReplicasReplicaOutput) PortX() pulumi.IntOutput {
	return o.ApplyT(func(v GetReplicasReplica) int { return v.PortX }).(pulumi.IntOutput)
}

// By default a read replica inherits the MySQL version, shape, and configuration of the source DB system.  If you want to override any of these, provide values in the properties, mysqlVersion, shapeName,  and configurationId. If you set a property value to "", then the value is inherited from its  source DB system.
func (o GetReplicasReplicaOutput) ReplicaOverrides() GetReplicasReplicaReplicaOverrideArrayOutput {
	return o.ApplyT(func(v GetReplicasReplica) []GetReplicasReplicaReplicaOverride { return v.ReplicaOverrides }).(GetReplicasReplicaReplicaOverrideArrayOutput)
}

// Secure connection configuration details.
func (o GetReplicasReplicaOutput) SecureConnections() GetReplicasReplicaSecureConnectionArrayOutput {
	return o.ApplyT(func(v GetReplicasReplica) []GetReplicasReplicaSecureConnection { return v.SecureConnections }).(GetReplicasReplicaSecureConnectionArrayOutput)
}

// The shape currently in use by the read replica. The shape determines the resources allocated:  CPU cores and memory for VM shapes, CPU cores, memory and storage for non-VM (bare metal) shapes.  To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
func (o GetReplicasReplicaOutput) ShapeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicasReplica) string { return v.ShapeName }).(pulumi.StringOutput)
}

// The LifecycleState of the read replica.
func (o GetReplicasReplicaOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicasReplica) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the read replica was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o GetReplicasReplicaOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicasReplica) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the read replica was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
func (o GetReplicasReplicaOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicasReplica) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetReplicasReplicaArrayOutput struct{ *pulumi.OutputState }

func (GetReplicasReplicaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplicasReplica)(nil)).Elem()
}

func (o GetReplicasReplicaArrayOutput) ToGetReplicasReplicaArrayOutput() GetReplicasReplicaArrayOutput {
	return o
}

func (o GetReplicasReplicaArrayOutput) ToGetReplicasReplicaArrayOutputWithContext(ctx context.Context) GetReplicasReplicaArrayOutput {
	return o
}

func (o GetReplicasReplicaArrayOutput) Index(i pulumi.IntInput) GetReplicasReplicaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReplicasReplica {
		return vs[0].([]GetReplicasReplica)[vs[1].(int)]
	}).(GetReplicasReplicaOutput)
}

type GetReplicasReplicaEncryptData struct {
	// Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
	KeyGenerationType string `pulumi:"keyGenerationType"`
	// The OCID of the key to use.
	KeyId string `pulumi:"keyId"`
}

// GetReplicasReplicaEncryptDataInput is an input type that accepts GetReplicasReplicaEncryptDataArgs and GetReplicasReplicaEncryptDataOutput values.
// You can construct a concrete instance of `GetReplicasReplicaEncryptDataInput` via:
//
//	GetReplicasReplicaEncryptDataArgs{...}
type GetReplicasReplicaEncryptDataInput interface {
	pulumi.Input

	ToGetReplicasReplicaEncryptDataOutput() GetReplicasReplicaEncryptDataOutput
	ToGetReplicasReplicaEncryptDataOutputWithContext(context.Context) GetReplicasReplicaEncryptDataOutput
}

type GetReplicasReplicaEncryptDataArgs struct {
	// Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
	KeyGenerationType pulumi.StringInput `pulumi:"keyGenerationType"`
	// The OCID of the key to use.
	KeyId pulumi.StringInput `pulumi:"keyId"`
}

func (GetReplicasReplicaEncryptDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicasReplicaEncryptData)(nil)).Elem()
}

func (i GetReplicasReplicaEncryptDataArgs) ToGetReplicasReplicaEncryptDataOutput() GetReplicasReplicaEncryptDataOutput {
	return i.ToGetReplicasReplicaEncryptDataOutputWithContext(context.Background())
}

func (i GetReplicasReplicaEncryptDataArgs) ToGetReplicasReplicaEncryptDataOutputWithContext(ctx context.Context) GetReplicasReplicaEncryptDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplicasReplicaEncryptDataOutput)
}

// GetReplicasReplicaEncryptDataArrayInput is an input type that accepts GetReplicasReplicaEncryptDataArray and GetReplicasReplicaEncryptDataArrayOutput values.
// You can construct a concrete instance of `GetReplicasReplicaEncryptDataArrayInput` via:
//
//	GetReplicasReplicaEncryptDataArray{ GetReplicasReplicaEncryptDataArgs{...} }
type GetReplicasReplicaEncryptDataArrayInput interface {
	pulumi.Input

	ToGetReplicasReplicaEncryptDataArrayOutput() GetReplicasReplicaEncryptDataArrayOutput
	ToGetReplicasReplicaEncryptDataArrayOutputWithContext(context.Context) GetReplicasReplicaEncryptDataArrayOutput
}

type GetReplicasReplicaEncryptDataArray []GetReplicasReplicaEncryptDataInput

func (GetReplicasReplicaEncryptDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplicasReplicaEncryptData)(nil)).Elem()
}

func (i GetReplicasReplicaEncryptDataArray) ToGetReplicasReplicaEncryptDataArrayOutput() GetReplicasReplicaEncryptDataArrayOutput {
	return i.ToGetReplicasReplicaEncryptDataArrayOutputWithContext(context.Background())
}

func (i GetReplicasReplicaEncryptDataArray) ToGetReplicasReplicaEncryptDataArrayOutputWithContext(ctx context.Context) GetReplicasReplicaEncryptDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplicasReplicaEncryptDataArrayOutput)
}

type GetReplicasReplicaEncryptDataOutput struct{ *pulumi.OutputState }

func (GetReplicasReplicaEncryptDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicasReplicaEncryptData)(nil)).Elem()
}

func (o GetReplicasReplicaEncryptDataOutput) ToGetReplicasReplicaEncryptDataOutput() GetReplicasReplicaEncryptDataOutput {
	return o
}

func (o GetReplicasReplicaEncryptDataOutput) ToGetReplicasReplicaEncryptDataOutputWithContext(ctx context.Context) GetReplicasReplicaEncryptDataOutput {
	return o
}

// Select whether to use Oracle-managed key (SYSTEM) or your own key (BYOK).
func (o GetReplicasReplicaEncryptDataOutput) KeyGenerationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicasReplicaEncryptData) string { return v.KeyGenerationType }).(pulumi.StringOutput)
}

// The OCID of the key to use.
func (o GetReplicasReplicaEncryptDataOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicasReplicaEncryptData) string { return v.KeyId }).(pulumi.StringOutput)
}

type GetReplicasReplicaEncryptDataArrayOutput struct{ *pulumi.OutputState }

func (GetReplicasReplicaEncryptDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplicasReplicaEncryptData)(nil)).Elem()
}

func (o GetReplicasReplicaEncryptDataArrayOutput) ToGetReplicasReplicaEncryptDataArrayOutput() GetReplicasReplicaEncryptDataArrayOutput {
	return o
}

func (o GetReplicasReplicaEncryptDataArrayOutput) ToGetReplicasReplicaEncryptDataArrayOutputWithContext(ctx context.Context) GetReplicasReplicaEncryptDataArrayOutput {
	return o
}

func (o GetReplicasReplicaEncryptDataArrayOutput) Index(i pulumi.IntInput) GetReplicasReplicaEncryptDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReplicasReplicaEncryptData {
		return vs[0].([]GetReplicasReplicaEncryptData)[vs[1].(int)]
	}).(GetReplicasReplicaEncryptDataOutput)
}

type GetReplicasReplicaReplicaOverride struct {
	// The requested Configuration instance.
	ConfigurationId string `pulumi:"configurationId"`
	// The MySQL version to be used by the read replica.
	MysqlVersion string `pulumi:"mysqlVersion"`
	// Network Security Group OCIDs used for the VNIC attachment.
	NsgIds []string `pulumi:"nsgIds"`
	// The shape currently in use by the read replica. The shape determines the resources allocated:  CPU cores and memory for VM shapes, CPU cores, memory and storage for non-VM (bare metal) shapes.  To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
	ShapeName string `pulumi:"shapeName"`
}

// GetReplicasReplicaReplicaOverrideInput is an input type that accepts GetReplicasReplicaReplicaOverrideArgs and GetReplicasReplicaReplicaOverrideOutput values.
// You can construct a concrete instance of `GetReplicasReplicaReplicaOverrideInput` via:
//
//	GetReplicasReplicaReplicaOverrideArgs{...}
type GetReplicasReplicaReplicaOverrideInput interface {
	pulumi.Input

	ToGetReplicasReplicaReplicaOverrideOutput() GetReplicasReplicaReplicaOverrideOutput
	ToGetReplicasReplicaReplicaOverrideOutputWithContext(context.Context) GetReplicasReplicaReplicaOverrideOutput
}

type GetReplicasReplicaReplicaOverrideArgs struct {
	// The requested Configuration instance.
	ConfigurationId pulumi.StringInput `pulumi:"configurationId"`
	// The MySQL version to be used by the read replica.
	MysqlVersion pulumi.StringInput `pulumi:"mysqlVersion"`
	// Network Security Group OCIDs used for the VNIC attachment.
	NsgIds pulumi.StringArrayInput `pulumi:"nsgIds"`
	// The shape currently in use by the read replica. The shape determines the resources allocated:  CPU cores and memory for VM shapes, CPU cores, memory and storage for non-VM (bare metal) shapes.  To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
	ShapeName pulumi.StringInput `pulumi:"shapeName"`
}

func (GetReplicasReplicaReplicaOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicasReplicaReplicaOverride)(nil)).Elem()
}

func (i GetReplicasReplicaReplicaOverrideArgs) ToGetReplicasReplicaReplicaOverrideOutput() GetReplicasReplicaReplicaOverrideOutput {
	return i.ToGetReplicasReplicaReplicaOverrideOutputWithContext(context.Background())
}

func (i GetReplicasReplicaReplicaOverrideArgs) ToGetReplicasReplicaReplicaOverrideOutputWithContext(ctx context.Context) GetReplicasReplicaReplicaOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplicasReplicaReplicaOverrideOutput)
}

// GetReplicasReplicaReplicaOverrideArrayInput is an input type that accepts GetReplicasReplicaReplicaOverrideArray and GetReplicasReplicaReplicaOverrideArrayOutput values.
// You can construct a concrete instance of `GetReplicasReplicaReplicaOverrideArrayInput` via:
//
//	GetReplicasReplicaReplicaOverrideArray{ GetReplicasReplicaReplicaOverrideArgs{...} }
type GetReplicasReplicaReplicaOverrideArrayInput interface {
	pulumi.Input

	ToGetReplicasReplicaReplicaOverrideArrayOutput() GetReplicasReplicaReplicaOverrideArrayOutput
	ToGetReplicasReplicaReplicaOverrideArrayOutputWithContext(context.Context) GetReplicasReplicaReplicaOverrideArrayOutput
}

type GetReplicasReplicaReplicaOverrideArray []GetReplicasReplicaReplicaOverrideInput

func (GetReplicasReplicaReplicaOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplicasReplicaReplicaOverride)(nil)).Elem()
}

func (i GetReplicasReplicaReplicaOverrideArray) ToGetReplicasReplicaReplicaOverrideArrayOutput() GetReplicasReplicaReplicaOverrideArrayOutput {
	return i.ToGetReplicasReplicaReplicaOverrideArrayOutputWithContext(context.Background())
}

func (i GetReplicasReplicaReplicaOverrideArray) ToGetReplicasReplicaReplicaOverrideArrayOutputWithContext(ctx context.Context) GetReplicasReplicaReplicaOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplicasReplicaReplicaOverrideArrayOutput)
}

type GetReplicasReplicaReplicaOverrideOutput struct{ *pulumi.OutputState }

func (GetReplicasReplicaReplicaOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicasReplicaReplicaOverride)(nil)).Elem()
}

func (o GetReplicasReplicaReplicaOverrideOutput) ToGetReplicasReplicaReplicaOverrideOutput() GetReplicasReplicaReplicaOverrideOutput {
	return o
}

func (o GetReplicasReplicaReplicaOverrideOutput) ToGetReplicasReplicaReplicaOverrideOutputWithContext(ctx context.Context) GetReplicasReplicaReplicaOverrideOutput {
	return o
}

// The requested Configuration instance.
func (o GetReplicasReplicaReplicaOverrideOutput) ConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicasReplicaReplicaOverride) string { return v.ConfigurationId }).(pulumi.StringOutput)
}

// The MySQL version to be used by the read replica.
func (o GetReplicasReplicaReplicaOverrideOutput) MysqlVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicasReplicaReplicaOverride) string { return v.MysqlVersion }).(pulumi.StringOutput)
}

// Network Security Group OCIDs used for the VNIC attachment.
func (o GetReplicasReplicaReplicaOverrideOutput) NsgIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetReplicasReplicaReplicaOverride) []string { return v.NsgIds }).(pulumi.StringArrayOutput)
}

// The shape currently in use by the read replica. The shape determines the resources allocated:  CPU cores and memory for VM shapes, CPU cores, memory and storage for non-VM (bare metal) shapes.  To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
func (o GetReplicasReplicaReplicaOverrideOutput) ShapeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicasReplicaReplicaOverride) string { return v.ShapeName }).(pulumi.StringOutput)
}

type GetReplicasReplicaReplicaOverrideArrayOutput struct{ *pulumi.OutputState }

func (GetReplicasReplicaReplicaOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplicasReplicaReplicaOverride)(nil)).Elem()
}

func (o GetReplicasReplicaReplicaOverrideArrayOutput) ToGetReplicasReplicaReplicaOverrideArrayOutput() GetReplicasReplicaReplicaOverrideArrayOutput {
	return o
}

func (o GetReplicasReplicaReplicaOverrideArrayOutput) ToGetReplicasReplicaReplicaOverrideArrayOutputWithContext(ctx context.Context) GetReplicasReplicaReplicaOverrideArrayOutput {
	return o
}

func (o GetReplicasReplicaReplicaOverrideArrayOutput) Index(i pulumi.IntInput) GetReplicasReplicaReplicaOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReplicasReplicaReplicaOverride {
		return vs[0].([]GetReplicasReplicaReplicaOverride)[vs[1].(int)]
	}).(GetReplicasReplicaReplicaOverrideOutput)
}

type GetReplicasReplicaSecureConnection struct {
	// Select whether to use MySQL Database Service-managed certificate (SYSTEM) or your own certificate (BYOC).
	CertificateGenerationType string `pulumi:"certificateGenerationType"`
	// The OCID of the certificate to use.
	CertificateId string `pulumi:"certificateId"`
}

// GetReplicasReplicaSecureConnectionInput is an input type that accepts GetReplicasReplicaSecureConnectionArgs and GetReplicasReplicaSecureConnectionOutput values.
// You can construct a concrete instance of `GetReplicasReplicaSecureConnectionInput` via:
//
//	GetReplicasReplicaSecureConnectionArgs{...}
type GetReplicasReplicaSecureConnectionInput interface {
	pulumi.Input

	ToGetReplicasReplicaSecureConnectionOutput() GetReplicasReplicaSecureConnectionOutput
	ToGetReplicasReplicaSecureConnectionOutputWithContext(context.Context) GetReplicasReplicaSecureConnectionOutput
}

type GetReplicasReplicaSecureConnectionArgs struct {
	// Select whether to use MySQL Database Service-managed certificate (SYSTEM) or your own certificate (BYOC).
	CertificateGenerationType pulumi.StringInput `pulumi:"certificateGenerationType"`
	// The OCID of the certificate to use.
	CertificateId pulumi.StringInput `pulumi:"certificateId"`
}

func (GetReplicasReplicaSecureConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicasReplicaSecureConnection)(nil)).Elem()
}

func (i GetReplicasReplicaSecureConnectionArgs) ToGetReplicasReplicaSecureConnectionOutput() GetReplicasReplicaSecureConnectionOutput {
	return i.ToGetReplicasReplicaSecureConnectionOutputWithContext(context.Background())
}

func (i GetReplicasReplicaSecureConnectionArgs) ToGetReplicasReplicaSecureConnectionOutputWithContext(ctx context.Context) GetReplicasReplicaSecureConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplicasReplicaSecureConnectionOutput)
}

// GetReplicasReplicaSecureConnectionArrayInput is an input type that accepts GetReplicasReplicaSecureConnectionArray and GetReplicasReplicaSecureConnectionArrayOutput values.
// You can construct a concrete instance of `GetReplicasReplicaSecureConnectionArrayInput` via:
//
//	GetReplicasReplicaSecureConnectionArray{ GetReplicasReplicaSecureConnectionArgs{...} }
type GetReplicasReplicaSecureConnectionArrayInput interface {
	pulumi.Input

	ToGetReplicasReplicaSecureConnectionArrayOutput() GetReplicasReplicaSecureConnectionArrayOutput
	ToGetReplicasReplicaSecureConnectionArrayOutputWithContext(context.Context) GetReplicasReplicaSecureConnectionArrayOutput
}

type GetReplicasReplicaSecureConnectionArray []GetReplicasReplicaSecureConnectionInput

func (GetReplicasReplicaSecureConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplicasReplicaSecureConnection)(nil)).Elem()
}

func (i GetReplicasReplicaSecureConnectionArray) ToGetReplicasReplicaSecureConnectionArrayOutput() GetReplicasReplicaSecureConnectionArrayOutput {
	return i.ToGetReplicasReplicaSecureConnectionArrayOutputWithContext(context.Background())
}

func (i GetReplicasReplicaSecureConnectionArray) ToGetReplicasReplicaSecureConnectionArrayOutputWithContext(ctx context.Context) GetReplicasReplicaSecureConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplicasReplicaSecureConnectionArrayOutput)
}

type GetReplicasReplicaSecureConnectionOutput struct{ *pulumi.OutputState }

func (GetReplicasReplicaSecureConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicasReplicaSecureConnection)(nil)).Elem()
}

func (o GetReplicasReplicaSecureConnectionOutput) ToGetReplicasReplicaSecureConnectionOutput() GetReplicasReplicaSecureConnectionOutput {
	return o
}

func (o GetReplicasReplicaSecureConnectionOutput) ToGetReplicasReplicaSecureConnectionOutputWithContext(ctx context.Context) GetReplicasReplicaSecureConnectionOutput {
	return o
}

// Select whether to use MySQL Database Service-managed certificate (SYSTEM) or your own certificate (BYOC).
func (o GetReplicasReplicaSecureConnectionOutput) CertificateGenerationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicasReplicaSecureConnection) string { return v.CertificateGenerationType }).(pulumi.StringOutput)
}

// The OCID of the certificate to use.
func (o GetReplicasReplicaSecureConnectionOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicasReplicaSecureConnection) string { return v.CertificateId }).(pulumi.StringOutput)
}

type GetReplicasReplicaSecureConnectionArrayOutput struct{ *pulumi.OutputState }

func (GetReplicasReplicaSecureConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplicasReplicaSecureConnection)(nil)).Elem()
}

func (o GetReplicasReplicaSecureConnectionArrayOutput) ToGetReplicasReplicaSecureConnectionArrayOutput() GetReplicasReplicaSecureConnectionArrayOutput {
	return o
}

func (o GetReplicasReplicaSecureConnectionArrayOutput) ToGetReplicasReplicaSecureConnectionArrayOutputWithContext(ctx context.Context) GetReplicasReplicaSecureConnectionArrayOutput {
	return o
}

func (o GetReplicasReplicaSecureConnectionArrayOutput) Index(i pulumi.IntInput) GetReplicasReplicaSecureConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReplicasReplicaSecureConnection {
		return vs[0].([]GetReplicasReplicaSecureConnection)[vs[1].(int)]
	}).(GetReplicasReplicaSecureConnectionOutput)
}

type GetShapesFilter struct {
	// Name
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetShapesFilterInput is an input type that accepts GetShapesFilterArgs and GetShapesFilterOutput values.
// You can construct a concrete instance of `GetShapesFilterInput` via:
//
//	GetShapesFilterArgs{...}
type GetShapesFilterInput interface {
	pulumi.Input

	ToGetShapesFilterOutput() GetShapesFilterOutput
	ToGetShapesFilterOutputWithContext(context.Context) GetShapesFilterOutput
}

type GetShapesFilterArgs struct {
	// Name
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetShapesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetShapesFilter)(nil)).Elem()
}

func (i GetShapesFilterArgs) ToGetShapesFilterOutput() GetShapesFilterOutput {
	return i.ToGetShapesFilterOutputWithContext(context.Background())
}

func (i GetShapesFilterArgs) ToGetShapesFilterOutputWithContext(ctx context.Context) GetShapesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetShapesFilterOutput)
}

// GetShapesFilterArrayInput is an input type that accepts GetShapesFilterArray and GetShapesFilterArrayOutput values.
// You can construct a concrete instance of `GetShapesFilterArrayInput` via:
//
//	GetShapesFilterArray{ GetShapesFilterArgs{...} }
type GetShapesFilterArrayInput interface {
	pulumi.Input

	ToGetShapesFilterArrayOutput() GetShapesFilterArrayOutput
	ToGetShapesFilterArrayOutputWithContext(context.Context) GetShapesFilterArrayOutput
}

type GetShapesFilterArray []GetShapesFilterInput

func (GetShapesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetShapesFilter)(nil)).Elem()
}

func (i GetShapesFilterArray) ToGetShapesFilterArrayOutput() GetShapesFilterArrayOutput {
	return i.ToGetShapesFilterArrayOutputWithContext(context.Background())
}

func (i GetShapesFilterArray) ToGetShapesFilterArrayOutputWithContext(ctx context.Context) GetShapesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetShapesFilterArrayOutput)
}

type GetShapesFilterOutput struct{ *pulumi.OutputState }

func (GetShapesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetShapesFilter)(nil)).Elem()
}

func (o GetShapesFilterOutput) ToGetShapesFilterOutput() GetShapesFilterOutput {
	return o
}

func (o GetShapesFilterOutput) ToGetShapesFilterOutputWithContext(ctx context.Context) GetShapesFilterOutput {
	return o
}

// Name
func (o GetShapesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetShapesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetShapesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetShapesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetShapesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetShapesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetShapesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetShapesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetShapesFilter)(nil)).Elem()
}

func (o GetShapesFilterArrayOutput) ToGetShapesFilterArrayOutput() GetShapesFilterArrayOutput {
	return o
}

func (o GetShapesFilterArrayOutput) ToGetShapesFilterArrayOutputWithContext(ctx context.Context) GetShapesFilterArrayOutput {
	return o
}

func (o GetShapesFilterArrayOutput) Index(i pulumi.IntInput) GetShapesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetShapesFilter {
		return vs[0].([]GetShapesFilter)[vs[1].(int)]
	}).(GetShapesFilterOutput)
}

type GetShapesShape struct {
	// The number of CPU Cores the Instance provides. These are "OCPU"s.
	CpuCoreCount int `pulumi:"cpuCoreCount"`
	// Return shapes that are supported by the service feature.
	IsSupportedFors []string `pulumi:"isSupportedFors"`
	// The amount of RAM the Instance provides. This is an IEC base-2 number.
	MemorySizeInGbs int `pulumi:"memorySizeInGbs"`
	// Name
	Name string `pulumi:"name"`
}

// GetShapesShapeInput is an input type that accepts GetShapesShapeArgs and GetShapesShapeOutput values.
// You can construct a concrete instance of `GetShapesShapeInput` via:
//
//	GetShapesShapeArgs{...}
type GetShapesShapeInput interface {
	pulumi.Input

	ToGetShapesShapeOutput() GetShapesShapeOutput
	ToGetShapesShapeOutputWithContext(context.Context) GetShapesShapeOutput
}

type GetShapesShapeArgs struct {
	// The number of CPU Cores the Instance provides. These are "OCPU"s.
	CpuCoreCount pulumi.IntInput `pulumi:"cpuCoreCount"`
	// Return shapes that are supported by the service feature.
	IsSupportedFors pulumi.StringArrayInput `pulumi:"isSupportedFors"`
	// The amount of RAM the Instance provides. This is an IEC base-2 number.
	MemorySizeInGbs pulumi.IntInput `pulumi:"memorySizeInGbs"`
	// Name
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetShapesShapeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetShapesShape)(nil)).Elem()
}

func (i GetShapesShapeArgs) ToGetShapesShapeOutput() GetShapesShapeOutput {
	return i.ToGetShapesShapeOutputWithContext(context.Background())
}

func (i GetShapesShapeArgs) ToGetShapesShapeOutputWithContext(ctx context.Context) GetShapesShapeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetShapesShapeOutput)
}

// GetShapesShapeArrayInput is an input type that accepts GetShapesShapeArray and GetShapesShapeArrayOutput values.
// You can construct a concrete instance of `GetShapesShapeArrayInput` via:
//
//	GetShapesShapeArray{ GetShapesShapeArgs{...} }
type GetShapesShapeArrayInput interface {
	pulumi.Input

	ToGetShapesShapeArrayOutput() GetShapesShapeArrayOutput
	ToGetShapesShapeArrayOutputWithContext(context.Context) GetShapesShapeArrayOutput
}

type GetShapesShapeArray []GetShapesShapeInput

func (GetShapesShapeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetShapesShape)(nil)).Elem()
}

func (i GetShapesShapeArray) ToGetShapesShapeArrayOutput() GetShapesShapeArrayOutput {
	return i.ToGetShapesShapeArrayOutputWithContext(context.Background())
}

func (i GetShapesShapeArray) ToGetShapesShapeArrayOutputWithContext(ctx context.Context) GetShapesShapeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetShapesShapeArrayOutput)
}

type GetShapesShapeOutput struct{ *pulumi.OutputState }

func (GetShapesShapeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetShapesShape)(nil)).Elem()
}

func (o GetShapesShapeOutput) ToGetShapesShapeOutput() GetShapesShapeOutput {
	return o
}

func (o GetShapesShapeOutput) ToGetShapesShapeOutputWithContext(ctx context.Context) GetShapesShapeOutput {
	return o
}

// The number of CPU Cores the Instance provides. These are "OCPU"s.
func (o GetShapesShapeOutput) CpuCoreCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetShapesShape) int { return v.CpuCoreCount }).(pulumi.IntOutput)
}

// Return shapes that are supported by the service feature.
func (o GetShapesShapeOutput) IsSupportedFors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetShapesShape) []string { return v.IsSupportedFors }).(pulumi.StringArrayOutput)
}

// The amount of RAM the Instance provides. This is an IEC base-2 number.
func (o GetShapesShapeOutput) MemorySizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetShapesShape) int { return v.MemorySizeInGbs }).(pulumi.IntOutput)
}

// Name
func (o GetShapesShapeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetShapesShape) string { return v.Name }).(pulumi.StringOutput)
}

type GetShapesShapeArrayOutput struct{ *pulumi.OutputState }

func (GetShapesShapeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetShapesShape)(nil)).Elem()
}

func (o GetShapesShapeArrayOutput) ToGetShapesShapeArrayOutput() GetShapesShapeArrayOutput {
	return o
}

func (o GetShapesShapeArrayOutput) ToGetShapesShapeArrayOutputWithContext(ctx context.Context) GetShapesShapeArrayOutput {
	return o
}

func (o GetShapesShapeArrayOutput) Index(i pulumi.IntInput) GetShapesShapeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetShapesShape {
		return vs[0].([]GetShapesShape)[vs[1].(int)]
	}).(GetShapesShapeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelSourceInput)(nil)).Elem(), ChannelSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelSourcePtrInput)(nil)).Elem(), ChannelSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelSourceAnonymousTransactionsHandlingInput)(nil)).Elem(), ChannelSourceAnonymousTransactionsHandlingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelSourceAnonymousTransactionsHandlingPtrInput)(nil)).Elem(), ChannelSourceAnonymousTransactionsHandlingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelSourceSslCaCertificateInput)(nil)).Elem(), ChannelSourceSslCaCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelSourceSslCaCertificatePtrInput)(nil)).Elem(), ChannelSourceSslCaCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelTargetInput)(nil)).Elem(), ChannelTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelTargetPtrInput)(nil)).Elem(), ChannelTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelTargetFilterInput)(nil)).Elem(), ChannelTargetFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelTargetFilterArrayInput)(nil)).Elem(), ChannelTargetFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HeatWaveClusterClusterNodeInput)(nil)).Elem(), HeatWaveClusterClusterNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HeatWaveClusterClusterNodeArrayInput)(nil)).Elem(), HeatWaveClusterClusterNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotArrayInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotBackupPolicyInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotBackupPolicyArrayInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotBackupPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotDataStorageInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotDataStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotDataStorageArrayInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotDataStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotDeletionPolicyInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotDeletionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotDeletionPolicyArrayInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotDeletionPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotEncryptDataInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotEncryptDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotEncryptDataArrayInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotEncryptDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotEndpointInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotEndpointArrayInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotMaintenanceInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotMaintenanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotMaintenanceArrayInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotMaintenanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotReadEndpointInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotReadEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotReadEndpointArrayInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotReadEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotRestInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotRestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotRestArrayInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotRestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotSecureConnectionInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotSecureConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotSecureConnectionArrayInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotSecureConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotSummaryInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotSummaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupDbSystemSnapshotSummaryArrayInput)(nil)).Elem(), MysqlBackupDbSystemSnapshotSummaryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupEncryptDataInput)(nil)).Elem(), MysqlBackupEncryptDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupEncryptDataPtrInput)(nil)).Elem(), MysqlBackupEncryptDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupSourceDetailsInput)(nil)).Elem(), MysqlBackupSourceDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlBackupSourceDetailsPtrInput)(nil)).Elem(), MysqlBackupSourceDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlConfigurationInitVariablesInput)(nil)).Elem(), MysqlConfigurationInitVariablesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlConfigurationInitVariablesPtrInput)(nil)).Elem(), MysqlConfigurationInitVariablesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlConfigurationVariablesInput)(nil)).Elem(), MysqlConfigurationVariablesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlConfigurationVariablesPtrInput)(nil)).Elem(), MysqlConfigurationVariablesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemBackupPolicyInput)(nil)).Elem(), MysqlDbSystemBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemBackupPolicyPtrInput)(nil)).Elem(), MysqlDbSystemBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemBackupPolicyCopyPolicyInput)(nil)).Elem(), MysqlDbSystemBackupPolicyCopyPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemBackupPolicyCopyPolicyArrayInput)(nil)).Elem(), MysqlDbSystemBackupPolicyCopyPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemBackupPolicyPitrPolicyInput)(nil)).Elem(), MysqlDbSystemBackupPolicyPitrPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemBackupPolicyPitrPolicyPtrInput)(nil)).Elem(), MysqlDbSystemBackupPolicyPitrPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemChannelInput)(nil)).Elem(), MysqlDbSystemChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemChannelArrayInput)(nil)).Elem(), MysqlDbSystemChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemChannelSourceInput)(nil)).Elem(), MysqlDbSystemChannelSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemChannelSourceArrayInput)(nil)).Elem(), MysqlDbSystemChannelSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemChannelSourceAnonymousTransactionsHandlingInput)(nil)).Elem(), MysqlDbSystemChannelSourceAnonymousTransactionsHandlingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayInput)(nil)).Elem(), MysqlDbSystemChannelSourceAnonymousTransactionsHandlingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemChannelSourceSslCaCertificateInput)(nil)).Elem(), MysqlDbSystemChannelSourceSslCaCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemChannelSourceSslCaCertificateArrayInput)(nil)).Elem(), MysqlDbSystemChannelSourceSslCaCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemChannelTargetInput)(nil)).Elem(), MysqlDbSystemChannelTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemChannelTargetArrayInput)(nil)).Elem(), MysqlDbSystemChannelTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemChannelTargetFilterInput)(nil)).Elem(), MysqlDbSystemChannelTargetFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemChannelTargetFilterArrayInput)(nil)).Elem(), MysqlDbSystemChannelTargetFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemCurrentPlacementInput)(nil)).Elem(), MysqlDbSystemCurrentPlacementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemCurrentPlacementArrayInput)(nil)).Elem(), MysqlDbSystemCurrentPlacementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemCustomerContactInput)(nil)).Elem(), MysqlDbSystemCustomerContactArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemCustomerContactArrayInput)(nil)).Elem(), MysqlDbSystemCustomerContactArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemDataStorageInput)(nil)).Elem(), MysqlDbSystemDataStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemDataStoragePtrInput)(nil)).Elem(), MysqlDbSystemDataStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemDeletionPolicyInput)(nil)).Elem(), MysqlDbSystemDeletionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemDeletionPolicyArrayInput)(nil)).Elem(), MysqlDbSystemDeletionPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemEncryptDataInput)(nil)).Elem(), MysqlDbSystemEncryptDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemEncryptDataPtrInput)(nil)).Elem(), MysqlDbSystemEncryptDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemEndpointInput)(nil)).Elem(), MysqlDbSystemEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemEndpointArrayInput)(nil)).Elem(), MysqlDbSystemEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemHeatWaveClusterInput)(nil)).Elem(), MysqlDbSystemHeatWaveClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemHeatWaveClusterArrayInput)(nil)).Elem(), MysqlDbSystemHeatWaveClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemMaintenanceInput)(nil)).Elem(), MysqlDbSystemMaintenanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemMaintenancePtrInput)(nil)).Elem(), MysqlDbSystemMaintenanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemPointInTimeRecoveryDetailInput)(nil)).Elem(), MysqlDbSystemPointInTimeRecoveryDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemPointInTimeRecoveryDetailArrayInput)(nil)).Elem(), MysqlDbSystemPointInTimeRecoveryDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemReadEndpointInput)(nil)).Elem(), MysqlDbSystemReadEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemReadEndpointPtrInput)(nil)).Elem(), MysqlDbSystemReadEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemRestInput)(nil)).Elem(), MysqlDbSystemRestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemRestPtrInput)(nil)).Elem(), MysqlDbSystemRestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemSecureConnectionsInput)(nil)).Elem(), MysqlDbSystemSecureConnectionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemSecureConnectionsPtrInput)(nil)).Elem(), MysqlDbSystemSecureConnectionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemSourceInput)(nil)).Elem(), MysqlDbSystemSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDbSystemSourcePtrInput)(nil)).Elem(), MysqlDbSystemSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicaEncryptDataInput)(nil)).Elem(), ReplicaEncryptDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicaEncryptDataArrayInput)(nil)).Elem(), ReplicaEncryptDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicaReplicaOverridesInput)(nil)).Elem(), ReplicaReplicaOverridesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicaReplicaOverridesPtrInput)(nil)).Elem(), ReplicaReplicaOverridesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicaSecureConnectionInput)(nil)).Elem(), ReplicaSecureConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicaSecureConnectionArrayInput)(nil)).Elem(), ReplicaSecureConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelSourceInput)(nil)).Elem(), GetChannelSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelSourceArrayInput)(nil)).Elem(), GetChannelSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelSourceAnonymousTransactionsHandlingInput)(nil)).Elem(), GetChannelSourceAnonymousTransactionsHandlingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelSourceAnonymousTransactionsHandlingArrayInput)(nil)).Elem(), GetChannelSourceAnonymousTransactionsHandlingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelSourceSslCaCertificateInput)(nil)).Elem(), GetChannelSourceSslCaCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelSourceSslCaCertificateArrayInput)(nil)).Elem(), GetChannelSourceSslCaCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelTargetInput)(nil)).Elem(), GetChannelTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelTargetArrayInput)(nil)).Elem(), GetChannelTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelTargetFilterInput)(nil)).Elem(), GetChannelTargetFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelTargetFilterArrayInput)(nil)).Elem(), GetChannelTargetFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelsChannelInput)(nil)).Elem(), GetChannelsChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelsChannelArrayInput)(nil)).Elem(), GetChannelsChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelsChannelSourceInput)(nil)).Elem(), GetChannelsChannelSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelsChannelSourceArrayInput)(nil)).Elem(), GetChannelsChannelSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelsChannelSourceAnonymousTransactionsHandlingInput)(nil)).Elem(), GetChannelsChannelSourceAnonymousTransactionsHandlingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelsChannelSourceAnonymousTransactionsHandlingArrayInput)(nil)).Elem(), GetChannelsChannelSourceAnonymousTransactionsHandlingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelsChannelSourceSslCaCertificateInput)(nil)).Elem(), GetChannelsChannelSourceSslCaCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelsChannelSourceSslCaCertificateArrayInput)(nil)).Elem(), GetChannelsChannelSourceSslCaCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelsChannelTargetInput)(nil)).Elem(), GetChannelsChannelTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelsChannelTargetArrayInput)(nil)).Elem(), GetChannelsChannelTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelsChannelTargetFilterInput)(nil)).Elem(), GetChannelsChannelTargetFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelsChannelTargetFilterArrayInput)(nil)).Elem(), GetChannelsChannelTargetFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelsFilterInput)(nil)).Elem(), GetChannelsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChannelsFilterArrayInput)(nil)).Elem(), GetChannelsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHeatWaveClusterClusterNodeInput)(nil)).Elem(), GetHeatWaveClusterClusterNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHeatWaveClusterClusterNodeArrayInput)(nil)).Elem(), GetHeatWaveClusterClusterNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotArrayInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotBackupPolicyInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotBackupPolicyArrayInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotBackupPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotDataStorageInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotDataStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotDataStorageArrayInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotDataStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotDeletionPolicyInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotDeletionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotDeletionPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotEncryptDataInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotEncryptDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotEncryptDataArrayInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotEncryptDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotEndpointInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotEndpointArrayInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotMaintenanceInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotMaintenanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotMaintenanceArrayInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotMaintenanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotReadEndpointInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotReadEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotReadEndpointArrayInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotReadEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotRestInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotRestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotRestArrayInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotRestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotSecureConnectionInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotSecureConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotSecureConnectionArrayInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotSecureConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotSummaryInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotSummaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupDbSystemSnapshotSummaryArrayInput)(nil)).Elem(), GetMysqlBackupDbSystemSnapshotSummaryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupEncryptDataInput)(nil)).Elem(), GetMysqlBackupEncryptDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupEncryptDataArrayInput)(nil)).Elem(), GetMysqlBackupEncryptDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupSourceDetailInput)(nil)).Elem(), GetMysqlBackupSourceDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupSourceDetailArrayInput)(nil)).Elem(), GetMysqlBackupSourceDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupInput)(nil)).Elem(), GetMysqlBackupsBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupArrayInput)(nil)).Elem(), GetMysqlBackupsBackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotArrayInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotDataStorageInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotDataStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotDataStorageArrayInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotDataStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotEncryptDataInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotEncryptDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotEncryptDataArrayInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotEncryptDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotEndpointInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotMaintenanceInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotReadEndpointInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotReadEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotReadEndpointArrayInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotReadEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotRestInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotRestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotRestArrayInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotRestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArrayInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotSummaryInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotSummaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupDbSystemSnapshotSummaryArrayInput)(nil)).Elem(), GetMysqlBackupsBackupDbSystemSnapshotSummaryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupEncryptDataInput)(nil)).Elem(), GetMysqlBackupsBackupEncryptDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupEncryptDataArrayInput)(nil)).Elem(), GetMysqlBackupsBackupEncryptDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupSourceDetailInput)(nil)).Elem(), GetMysqlBackupsBackupSourceDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsBackupSourceDetailArrayInput)(nil)).Elem(), GetMysqlBackupsBackupSourceDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsFilterInput)(nil)).Elem(), GetMysqlBackupsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlBackupsFilterArrayInput)(nil)).Elem(), GetMysqlBackupsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlConfigurationInitVariableInput)(nil)).Elem(), GetMysqlConfigurationInitVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlConfigurationInitVariableArrayInput)(nil)).Elem(), GetMysqlConfigurationInitVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlConfigurationVariableInput)(nil)).Elem(), GetMysqlConfigurationVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlConfigurationVariableArrayInput)(nil)).Elem(), GetMysqlConfigurationVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlConfigurationsConfigurationInput)(nil)).Elem(), GetMysqlConfigurationsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlConfigurationsConfigurationArrayInput)(nil)).Elem(), GetMysqlConfigurationsConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlConfigurationsConfigurationInitVariableInput)(nil)).Elem(), GetMysqlConfigurationsConfigurationInitVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlConfigurationsConfigurationInitVariableArrayInput)(nil)).Elem(), GetMysqlConfigurationsConfigurationInitVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlConfigurationsConfigurationVariableInput)(nil)).Elem(), GetMysqlConfigurationsConfigurationVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlConfigurationsConfigurationVariableArrayInput)(nil)).Elem(), GetMysqlConfigurationsConfigurationVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlConfigurationsFilterInput)(nil)).Elem(), GetMysqlConfigurationsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlConfigurationsFilterArrayInput)(nil)).Elem(), GetMysqlConfigurationsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemBackupPolicyInput)(nil)).Elem(), GetMysqlDbSystemBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemBackupPolicyArrayInput)(nil)).Elem(), GetMysqlDbSystemBackupPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemBackupPolicyCopyPolicyInput)(nil)).Elem(), GetMysqlDbSystemBackupPolicyCopyPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemBackupPolicyCopyPolicyArrayInput)(nil)).Elem(), GetMysqlDbSystemBackupPolicyCopyPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemBackupPolicyPitrPolicyInput)(nil)).Elem(), GetMysqlDbSystemBackupPolicyPitrPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemBackupPolicyPitrPolicyArrayInput)(nil)).Elem(), GetMysqlDbSystemBackupPolicyPitrPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemChannelInput)(nil)).Elem(), GetMysqlDbSystemChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemChannelArrayInput)(nil)).Elem(), GetMysqlDbSystemChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemChannelSourceInput)(nil)).Elem(), GetMysqlDbSystemChannelSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemChannelSourceArrayInput)(nil)).Elem(), GetMysqlDbSystemChannelSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingInput)(nil)).Elem(), GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayInput)(nil)).Elem(), GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemChannelSourceSslCaCertificateInput)(nil)).Elem(), GetMysqlDbSystemChannelSourceSslCaCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemChannelSourceSslCaCertificateArrayInput)(nil)).Elem(), GetMysqlDbSystemChannelSourceSslCaCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemChannelTargetInput)(nil)).Elem(), GetMysqlDbSystemChannelTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemChannelTargetArrayInput)(nil)).Elem(), GetMysqlDbSystemChannelTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemChannelTargetFilterInput)(nil)).Elem(), GetMysqlDbSystemChannelTargetFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemChannelTargetFilterArrayInput)(nil)).Elem(), GetMysqlDbSystemChannelTargetFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemCurrentPlacementInput)(nil)).Elem(), GetMysqlDbSystemCurrentPlacementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemCurrentPlacementArrayInput)(nil)).Elem(), GetMysqlDbSystemCurrentPlacementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemCustomerContactInput)(nil)).Elem(), GetMysqlDbSystemCustomerContactArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemCustomerContactArrayInput)(nil)).Elem(), GetMysqlDbSystemCustomerContactArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemDataStorageInput)(nil)).Elem(), GetMysqlDbSystemDataStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemDataStorageArrayInput)(nil)).Elem(), GetMysqlDbSystemDataStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemDeletionPolicyInput)(nil)).Elem(), GetMysqlDbSystemDeletionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemDeletionPolicyArrayInput)(nil)).Elem(), GetMysqlDbSystemDeletionPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemEncryptDataInput)(nil)).Elem(), GetMysqlDbSystemEncryptDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemEncryptDataArrayInput)(nil)).Elem(), GetMysqlDbSystemEncryptDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemEndpointInput)(nil)).Elem(), GetMysqlDbSystemEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemEndpointArrayInput)(nil)).Elem(), GetMysqlDbSystemEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemHeatWaveClusterInput)(nil)).Elem(), GetMysqlDbSystemHeatWaveClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemHeatWaveClusterArrayInput)(nil)).Elem(), GetMysqlDbSystemHeatWaveClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemMaintenanceInput)(nil)).Elem(), GetMysqlDbSystemMaintenanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemMaintenanceArrayInput)(nil)).Elem(), GetMysqlDbSystemMaintenanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemPointInTimeRecoveryDetailInput)(nil)).Elem(), GetMysqlDbSystemPointInTimeRecoveryDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemPointInTimeRecoveryDetailArrayInput)(nil)).Elem(), GetMysqlDbSystemPointInTimeRecoveryDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemReadEndpointInput)(nil)).Elem(), GetMysqlDbSystemReadEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemReadEndpointArrayInput)(nil)).Elem(), GetMysqlDbSystemReadEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemRestInput)(nil)).Elem(), GetMysqlDbSystemRestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemRestArrayInput)(nil)).Elem(), GetMysqlDbSystemRestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemSecureConnectionInput)(nil)).Elem(), GetMysqlDbSystemSecureConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemSecureConnectionArrayInput)(nil)).Elem(), GetMysqlDbSystemSecureConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemSourceInput)(nil)).Elem(), GetMysqlDbSystemSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemSourceArrayInput)(nil)).Elem(), GetMysqlDbSystemSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemBackupPolicyInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemBackupPolicyArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemBackupPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannelInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannelArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannelSourceInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemChannelSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannelSourceArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemChannelSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannelTargetInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemChannelTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannelTargetArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemChannelTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannelTargetFilterInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemChannelTargetFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemChannelTargetFilterArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemChannelTargetFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemCurrentPlacementInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemCurrentPlacementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemCurrentPlacementArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemCurrentPlacementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemCustomerContactInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemCustomerContactArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemCustomerContactArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemCustomerContactArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemDataStorageInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemDataStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemDataStorageArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemDataStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemDeletionPolicyInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemDeletionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemDeletionPolicyArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemDeletionPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemEncryptDataInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemEncryptDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemEncryptDataArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemEncryptDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemEndpointInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemEndpointArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemHeatWaveClusterInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemHeatWaveClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemHeatWaveClusterArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemHeatWaveClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemMaintenanceInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemMaintenanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemMaintenanceArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemMaintenanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemReadEndpointInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemReadEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemReadEndpointArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemReadEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemRestInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemRestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemRestArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemRestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemSecureConnectionInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemSecureConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemSecureConnectionArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemSecureConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemSourceInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsDbSystemSourceArrayInput)(nil)).Elem(), GetMysqlDbSystemsDbSystemSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsFilterInput)(nil)).Elem(), GetMysqlDbSystemsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlDbSystemsFilterArrayInput)(nil)).Elem(), GetMysqlDbSystemsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlVersionFilterInput)(nil)).Elem(), GetMysqlVersionFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlVersionFilterArrayInput)(nil)).Elem(), GetMysqlVersionFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlVersionVersionInput)(nil)).Elem(), GetMysqlVersionVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlVersionVersionArrayInput)(nil)).Elem(), GetMysqlVersionVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlVersionVersionVersionInput)(nil)).Elem(), GetMysqlVersionVersionVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlVersionVersionVersionArrayInput)(nil)).Elem(), GetMysqlVersionVersionVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplicaEncryptDataInput)(nil)).Elem(), GetReplicaEncryptDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplicaEncryptDataArrayInput)(nil)).Elem(), GetReplicaEncryptDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplicaReplicaOverrideInput)(nil)).Elem(), GetReplicaReplicaOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplicaReplicaOverrideArrayInput)(nil)).Elem(), GetReplicaReplicaOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplicaSecureConnectionInput)(nil)).Elem(), GetReplicaSecureConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplicaSecureConnectionArrayInput)(nil)).Elem(), GetReplicaSecureConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplicasFilterInput)(nil)).Elem(), GetReplicasFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplicasFilterArrayInput)(nil)).Elem(), GetReplicasFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplicasReplicaInput)(nil)).Elem(), GetReplicasReplicaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplicasReplicaArrayInput)(nil)).Elem(), GetReplicasReplicaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplicasReplicaEncryptDataInput)(nil)).Elem(), GetReplicasReplicaEncryptDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplicasReplicaEncryptDataArrayInput)(nil)).Elem(), GetReplicasReplicaEncryptDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplicasReplicaReplicaOverrideInput)(nil)).Elem(), GetReplicasReplicaReplicaOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplicasReplicaReplicaOverrideArrayInput)(nil)).Elem(), GetReplicasReplicaReplicaOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplicasReplicaSecureConnectionInput)(nil)).Elem(), GetReplicasReplicaSecureConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplicasReplicaSecureConnectionArrayInput)(nil)).Elem(), GetReplicasReplicaSecureConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetShapesFilterInput)(nil)).Elem(), GetShapesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetShapesFilterArrayInput)(nil)).Elem(), GetShapesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetShapesShapeInput)(nil)).Elem(), GetShapesShapeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetShapesShapeArrayInput)(nil)).Elem(), GetShapesShapeArray{})
	pulumi.RegisterOutputType(ChannelSourceOutput{})
	pulumi.RegisterOutputType(ChannelSourcePtrOutput{})
	pulumi.RegisterOutputType(ChannelSourceAnonymousTransactionsHandlingOutput{})
	pulumi.RegisterOutputType(ChannelSourceAnonymousTransactionsHandlingPtrOutput{})
	pulumi.RegisterOutputType(ChannelSourceSslCaCertificateOutput{})
	pulumi.RegisterOutputType(ChannelSourceSslCaCertificatePtrOutput{})
	pulumi.RegisterOutputType(ChannelTargetOutput{})
	pulumi.RegisterOutputType(ChannelTargetPtrOutput{})
	pulumi.RegisterOutputType(ChannelTargetFilterOutput{})
	pulumi.RegisterOutputType(ChannelTargetFilterArrayOutput{})
	pulumi.RegisterOutputType(HeatWaveClusterClusterNodeOutput{})
	pulumi.RegisterOutputType(HeatWaveClusterClusterNodeArrayOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotArrayOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotBackupPolicyOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotBackupPolicyArrayOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotDataStorageOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotDataStorageArrayOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotDeletionPolicyOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotEncryptDataOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotEncryptDataArrayOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotEndpointOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotEndpointArrayOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotMaintenanceOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotMaintenanceArrayOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotReadEndpointOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotReadEndpointArrayOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotRestOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotRestArrayOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotSecureConnectionOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotSecureConnectionArrayOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotSummaryOutput{})
	pulumi.RegisterOutputType(MysqlBackupDbSystemSnapshotSummaryArrayOutput{})
	pulumi.RegisterOutputType(MysqlBackupEncryptDataOutput{})
	pulumi.RegisterOutputType(MysqlBackupEncryptDataPtrOutput{})
	pulumi.RegisterOutputType(MysqlBackupSourceDetailsOutput{})
	pulumi.RegisterOutputType(MysqlBackupSourceDetailsPtrOutput{})
	pulumi.RegisterOutputType(MysqlConfigurationInitVariablesOutput{})
	pulumi.RegisterOutputType(MysqlConfigurationInitVariablesPtrOutput{})
	pulumi.RegisterOutputType(MysqlConfigurationVariablesOutput{})
	pulumi.RegisterOutputType(MysqlConfigurationVariablesPtrOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemBackupPolicyOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemBackupPolicyPtrOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemBackupPolicyCopyPolicyOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemBackupPolicyCopyPolicyArrayOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemBackupPolicyPitrPolicyOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemBackupPolicyPitrPolicyPtrOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemChannelOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemChannelArrayOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemChannelSourceOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemChannelSourceArrayOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemChannelSourceSslCaCertificateOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemChannelSourceSslCaCertificateArrayOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemChannelTargetOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemChannelTargetArrayOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemChannelTargetFilterOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemChannelTargetFilterArrayOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemCurrentPlacementOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemCurrentPlacementArrayOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemCustomerContactOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemCustomerContactArrayOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemDataStorageOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemDataStoragePtrOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemDeletionPolicyOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemDeletionPolicyArrayOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemEncryptDataOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemEncryptDataPtrOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemEndpointOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemEndpointArrayOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemHeatWaveClusterOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemHeatWaveClusterArrayOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemMaintenanceOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemMaintenancePtrOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemPointInTimeRecoveryDetailOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemPointInTimeRecoveryDetailArrayOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemReadEndpointOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemReadEndpointPtrOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemRestOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemRestPtrOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemSecureConnectionsOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemSecureConnectionsPtrOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemSourceOutput{})
	pulumi.RegisterOutputType(MysqlDbSystemSourcePtrOutput{})
	pulumi.RegisterOutputType(ReplicaEncryptDataOutput{})
	pulumi.RegisterOutputType(ReplicaEncryptDataArrayOutput{})
	pulumi.RegisterOutputType(ReplicaReplicaOverridesOutput{})
	pulumi.RegisterOutputType(ReplicaReplicaOverridesPtrOutput{})
	pulumi.RegisterOutputType(ReplicaSecureConnectionOutput{})
	pulumi.RegisterOutputType(ReplicaSecureConnectionArrayOutput{})
	pulumi.RegisterOutputType(GetChannelSourceOutput{})
	pulumi.RegisterOutputType(GetChannelSourceArrayOutput{})
	pulumi.RegisterOutputType(GetChannelSourceAnonymousTransactionsHandlingOutput{})
	pulumi.RegisterOutputType(GetChannelSourceAnonymousTransactionsHandlingArrayOutput{})
	pulumi.RegisterOutputType(GetChannelSourceSslCaCertificateOutput{})
	pulumi.RegisterOutputType(GetChannelSourceSslCaCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetChannelTargetOutput{})
	pulumi.RegisterOutputType(GetChannelTargetArrayOutput{})
	pulumi.RegisterOutputType(GetChannelTargetFilterOutput{})
	pulumi.RegisterOutputType(GetChannelTargetFilterArrayOutput{})
	pulumi.RegisterOutputType(GetChannelsChannelOutput{})
	pulumi.RegisterOutputType(GetChannelsChannelArrayOutput{})
	pulumi.RegisterOutputType(GetChannelsChannelSourceOutput{})
	pulumi.RegisterOutputType(GetChannelsChannelSourceArrayOutput{})
	pulumi.RegisterOutputType(GetChannelsChannelSourceAnonymousTransactionsHandlingOutput{})
	pulumi.RegisterOutputType(GetChannelsChannelSourceAnonymousTransactionsHandlingArrayOutput{})
	pulumi.RegisterOutputType(GetChannelsChannelSourceSslCaCertificateOutput{})
	pulumi.RegisterOutputType(GetChannelsChannelSourceSslCaCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetChannelsChannelTargetOutput{})
	pulumi.RegisterOutputType(GetChannelsChannelTargetArrayOutput{})
	pulumi.RegisterOutputType(GetChannelsChannelTargetFilterOutput{})
	pulumi.RegisterOutputType(GetChannelsChannelTargetFilterArrayOutput{})
	pulumi.RegisterOutputType(GetChannelsFilterOutput{})
	pulumi.RegisterOutputType(GetChannelsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetHeatWaveClusterClusterNodeOutput{})
	pulumi.RegisterOutputType(GetHeatWaveClusterClusterNodeArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotBackupPolicyOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotBackupPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotDataStorageOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotDataStorageArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotDeletionPolicyOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotDeletionPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotEncryptDataOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotEncryptDataArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotEndpointOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotMaintenanceOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotMaintenanceArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotReadEndpointOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotReadEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotRestOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotRestArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotSecureConnectionOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotSecureConnectionArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotSummaryOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupDbSystemSnapshotSummaryArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupEncryptDataOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupEncryptDataArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupSourceDetailOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupSourceDetailArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyCopyPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotBackupPolicyPitrPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotDataStorageOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotDataStorageArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotDeletionPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotEncryptDataOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotEncryptDataArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotEndpointOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotMaintenanceOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotMaintenanceArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotReadEndpointOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotReadEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotRestOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotRestArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotSecureConnectionArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotSummaryOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupDbSystemSnapshotSummaryArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupEncryptDataOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupEncryptDataArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupSourceDetailOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsBackupSourceDetailArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsFilterOutput{})
	pulumi.RegisterOutputType(GetMysqlBackupsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlConfigurationInitVariableOutput{})
	pulumi.RegisterOutputType(GetMysqlConfigurationInitVariableArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlConfigurationVariableOutput{})
	pulumi.RegisterOutputType(GetMysqlConfigurationVariableArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlConfigurationsConfigurationOutput{})
	pulumi.RegisterOutputType(GetMysqlConfigurationsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlConfigurationsConfigurationInitVariableOutput{})
	pulumi.RegisterOutputType(GetMysqlConfigurationsConfigurationInitVariableArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlConfigurationsConfigurationVariableOutput{})
	pulumi.RegisterOutputType(GetMysqlConfigurationsConfigurationVariableArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlConfigurationsFilterOutput{})
	pulumi.RegisterOutputType(GetMysqlConfigurationsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemBackupPolicyOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemBackupPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemBackupPolicyCopyPolicyOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemBackupPolicyCopyPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemBackupPolicyPitrPolicyOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemBackupPolicyPitrPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemChannelOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemChannelArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemChannelSourceOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemChannelSourceArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemChannelSourceSslCaCertificateOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemChannelSourceSslCaCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemChannelTargetOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemChannelTargetArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemChannelTargetFilterOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemChannelTargetFilterArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemCurrentPlacementOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemCurrentPlacementArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemCustomerContactOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemCustomerContactArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemDataStorageOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemDataStorageArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemDeletionPolicyOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemDeletionPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemEncryptDataOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemEncryptDataArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemEndpointOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemHeatWaveClusterOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemHeatWaveClusterArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemMaintenanceOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemMaintenanceArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemPointInTimeRecoveryDetailOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemPointInTimeRecoveryDetailArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemReadEndpointOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemReadEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemRestOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemRestArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemSecureConnectionOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemSecureConnectionArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemSourceOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemSourceArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemBackupPolicyOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemBackupPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemBackupPolicyCopyPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemBackupPolicyPitrPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemChannelOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemChannelArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemChannelSourceOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemChannelSourceArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemChannelSourceAnonymousTransactionsHandlingArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemChannelSourceSslCaCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemChannelTargetOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemChannelTargetArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemChannelTargetFilterOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemChannelTargetFilterArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemCurrentPlacementOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemCurrentPlacementArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemCustomerContactOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemCustomerContactArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemDataStorageOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemDataStorageArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemDeletionPolicyOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemDeletionPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemEncryptDataOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemEncryptDataArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemEndpointOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemHeatWaveClusterOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemHeatWaveClusterArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemMaintenanceOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemMaintenanceArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemPointInTimeRecoveryDetailArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemReadEndpointOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemReadEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemRestOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemRestArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemSecureConnectionOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemSecureConnectionArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemSourceOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsDbSystemSourceArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsFilterOutput{})
	pulumi.RegisterOutputType(GetMysqlDbSystemsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlVersionFilterOutput{})
	pulumi.RegisterOutputType(GetMysqlVersionFilterArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlVersionVersionOutput{})
	pulumi.RegisterOutputType(GetMysqlVersionVersionArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlVersionVersionVersionOutput{})
	pulumi.RegisterOutputType(GetMysqlVersionVersionVersionArrayOutput{})
	pulumi.RegisterOutputType(GetReplicaEncryptDataOutput{})
	pulumi.RegisterOutputType(GetReplicaEncryptDataArrayOutput{})
	pulumi.RegisterOutputType(GetReplicaReplicaOverrideOutput{})
	pulumi.RegisterOutputType(GetReplicaReplicaOverrideArrayOutput{})
	pulumi.RegisterOutputType(GetReplicaSecureConnectionOutput{})
	pulumi.RegisterOutputType(GetReplicaSecureConnectionArrayOutput{})
	pulumi.RegisterOutputType(GetReplicasFilterOutput{})
	pulumi.RegisterOutputType(GetReplicasFilterArrayOutput{})
	pulumi.RegisterOutputType(GetReplicasReplicaOutput{})
	pulumi.RegisterOutputType(GetReplicasReplicaArrayOutput{})
	pulumi.RegisterOutputType(GetReplicasReplicaEncryptDataOutput{})
	pulumi.RegisterOutputType(GetReplicasReplicaEncryptDataArrayOutput{})
	pulumi.RegisterOutputType(GetReplicasReplicaReplicaOverrideOutput{})
	pulumi.RegisterOutputType(GetReplicasReplicaReplicaOverrideArrayOutput{})
	pulumi.RegisterOutputType(GetReplicasReplicaSecureConnectionOutput{})
	pulumi.RegisterOutputType(GetReplicasReplicaSecureConnectionArrayOutput{})
	pulumi.RegisterOutputType(GetShapesFilterOutput{})
	pulumi.RegisterOutputType(GetShapesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetShapesShapeOutput{})
	pulumi.RegisterOutputType(GetShapesShapeArrayOutput{})
}
