// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkfirewall

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Network Firewall Policy Application resource in Oracle Cloud Infrastructure Network Firewall service.
//
// Get Application by the given name in the context of network firewall policy.
func LookupNetworkFirewallPolicyApplication(ctx *pulumi.Context, args *LookupNetworkFirewallPolicyApplicationArgs, opts ...pulumi.InvokeOption) (*LookupNetworkFirewallPolicyApplicationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNetworkFirewallPolicyApplicationResult
	err := ctx.Invoke("oci:NetworkFirewall/getNetworkFirewallPolicyApplication:getNetworkFirewallPolicyApplication", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetworkFirewallPolicyApplication.
type LookupNetworkFirewallPolicyApplicationArgs struct {
	// Name of the application.
	Name string `pulumi:"name"`
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId string `pulumi:"networkFirewallPolicyId"`
}

// A collection of values returned by getNetworkFirewallPolicyApplication.
type LookupNetworkFirewallPolicyApplicationResult struct {
	// The value of the ICMP/ICMP_V6 message Code (subtype) field as defined by [RFC 4443](https://www.rfc-editor.org/rfc/rfc4443.html#section-2.1).
	IcmpCode int `pulumi:"icmpCode"`
	// The value of the ICMP/ICMP_V6 message Type field as defined by [RFC 4443](https://www.rfc-editor.org/rfc/rfc4443.html#section-2.1).
	IcmpType int    `pulumi:"icmpType"`
	Id       string `pulumi:"id"`
	// Name of the application.
	Name                    string `pulumi:"name"`
	NetworkFirewallPolicyId string `pulumi:"networkFirewallPolicyId"`
	// OCID of the Network Firewall Policy this application belongs to.
	ParentResourceId string `pulumi:"parentResourceId"`
	// Describes the type of application.
	Type string `pulumi:"type"`
}

func LookupNetworkFirewallPolicyApplicationOutput(ctx *pulumi.Context, args LookupNetworkFirewallPolicyApplicationOutputArgs, opts ...pulumi.InvokeOption) LookupNetworkFirewallPolicyApplicationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNetworkFirewallPolicyApplicationResultOutput, error) {
			args := v.(LookupNetworkFirewallPolicyApplicationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:NetworkFirewall/getNetworkFirewallPolicyApplication:getNetworkFirewallPolicyApplication", args, LookupNetworkFirewallPolicyApplicationResultOutput{}, options).(LookupNetworkFirewallPolicyApplicationResultOutput), nil
		}).(LookupNetworkFirewallPolicyApplicationResultOutput)
}

// A collection of arguments for invoking getNetworkFirewallPolicyApplication.
type LookupNetworkFirewallPolicyApplicationOutputArgs struct {
	// Name of the application.
	Name pulumi.StringInput `pulumi:"name"`
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId pulumi.StringInput `pulumi:"networkFirewallPolicyId"`
}

func (LookupNetworkFirewallPolicyApplicationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkFirewallPolicyApplicationArgs)(nil)).Elem()
}

// A collection of values returned by getNetworkFirewallPolicyApplication.
type LookupNetworkFirewallPolicyApplicationResultOutput struct{ *pulumi.OutputState }

func (LookupNetworkFirewallPolicyApplicationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkFirewallPolicyApplicationResult)(nil)).Elem()
}

func (o LookupNetworkFirewallPolicyApplicationResultOutput) ToLookupNetworkFirewallPolicyApplicationResultOutput() LookupNetworkFirewallPolicyApplicationResultOutput {
	return o
}

func (o LookupNetworkFirewallPolicyApplicationResultOutput) ToLookupNetworkFirewallPolicyApplicationResultOutputWithContext(ctx context.Context) LookupNetworkFirewallPolicyApplicationResultOutput {
	return o
}

// The value of the ICMP/ICMP_V6 message Code (subtype) field as defined by [RFC 4443](https://www.rfc-editor.org/rfc/rfc4443.html#section-2.1).
func (o LookupNetworkFirewallPolicyApplicationResultOutput) IcmpCode() pulumi.IntOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicyApplicationResult) int { return v.IcmpCode }).(pulumi.IntOutput)
}

// The value of the ICMP/ICMP_V6 message Type field as defined by [RFC 4443](https://www.rfc-editor.org/rfc/rfc4443.html#section-2.1).
func (o LookupNetworkFirewallPolicyApplicationResultOutput) IcmpType() pulumi.IntOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicyApplicationResult) int { return v.IcmpType }).(pulumi.IntOutput)
}

func (o LookupNetworkFirewallPolicyApplicationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicyApplicationResult) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the application.
func (o LookupNetworkFirewallPolicyApplicationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicyApplicationResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupNetworkFirewallPolicyApplicationResultOutput) NetworkFirewallPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicyApplicationResult) string { return v.NetworkFirewallPolicyId }).(pulumi.StringOutput)
}

// OCID of the Network Firewall Policy this application belongs to.
func (o LookupNetworkFirewallPolicyApplicationResultOutput) ParentResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicyApplicationResult) string { return v.ParentResourceId }).(pulumi.StringOutput)
}

// Describes the type of application.
func (o LookupNetworkFirewallPolicyApplicationResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicyApplicationResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNetworkFirewallPolicyApplicationResultOutput{})
}
