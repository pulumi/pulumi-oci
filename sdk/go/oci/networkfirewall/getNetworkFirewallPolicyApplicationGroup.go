// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkfirewall

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides details about a specific Network Firewall Policy Application Group resource in Oracle Cloud Infrastructure Network Firewall service.
//
// Get ApplicationGroup by the given name in the context of network firewall policy.
func LookupNetworkFirewallPolicyApplicationGroup(ctx *pulumi.Context, args *LookupNetworkFirewallPolicyApplicationGroupArgs, opts ...pulumi.InvokeOption) (*LookupNetworkFirewallPolicyApplicationGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNetworkFirewallPolicyApplicationGroupResult
	err := ctx.Invoke("oci:NetworkFirewall/getNetworkFirewallPolicyApplicationGroup:getNetworkFirewallPolicyApplicationGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetworkFirewallPolicyApplicationGroup.
type LookupNetworkFirewallPolicyApplicationGroupArgs struct {
	// Name of the application Group.
	Name string `pulumi:"name"`
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId string `pulumi:"networkFirewallPolicyId"`
}

// A collection of values returned by getNetworkFirewallPolicyApplicationGroup.
type LookupNetworkFirewallPolicyApplicationGroupResult struct {
	// List of apps in the group.
	Apps []string `pulumi:"apps"`
	Id   string   `pulumi:"id"`
	// Name of the application Group.
	Name                    string `pulumi:"name"`
	NetworkFirewallPolicyId string `pulumi:"networkFirewallPolicyId"`
	// OCID of the Network Firewall Policy this application group belongs to.
	ParentResourceId string `pulumi:"parentResourceId"`
	// Count of total applications in the given application group.
	TotalApps int `pulumi:"totalApps"`
}

func LookupNetworkFirewallPolicyApplicationGroupOutput(ctx *pulumi.Context, args LookupNetworkFirewallPolicyApplicationGroupOutputArgs, opts ...pulumi.InvokeOption) LookupNetworkFirewallPolicyApplicationGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupNetworkFirewallPolicyApplicationGroupResult, error) {
			args := v.(LookupNetworkFirewallPolicyApplicationGroupArgs)
			r, err := LookupNetworkFirewallPolicyApplicationGroup(ctx, &args, opts...)
			var s LookupNetworkFirewallPolicyApplicationGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupNetworkFirewallPolicyApplicationGroupResultOutput)
}

// A collection of arguments for invoking getNetworkFirewallPolicyApplicationGroup.
type LookupNetworkFirewallPolicyApplicationGroupOutputArgs struct {
	// Name of the application Group.
	Name pulumi.StringInput `pulumi:"name"`
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId pulumi.StringInput `pulumi:"networkFirewallPolicyId"`
}

func (LookupNetworkFirewallPolicyApplicationGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkFirewallPolicyApplicationGroupArgs)(nil)).Elem()
}

// A collection of values returned by getNetworkFirewallPolicyApplicationGroup.
type LookupNetworkFirewallPolicyApplicationGroupResultOutput struct{ *pulumi.OutputState }

func (LookupNetworkFirewallPolicyApplicationGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkFirewallPolicyApplicationGroupResult)(nil)).Elem()
}

func (o LookupNetworkFirewallPolicyApplicationGroupResultOutput) ToLookupNetworkFirewallPolicyApplicationGroupResultOutput() LookupNetworkFirewallPolicyApplicationGroupResultOutput {
	return o
}

func (o LookupNetworkFirewallPolicyApplicationGroupResultOutput) ToLookupNetworkFirewallPolicyApplicationGroupResultOutputWithContext(ctx context.Context) LookupNetworkFirewallPolicyApplicationGroupResultOutput {
	return o
}

func (o LookupNetworkFirewallPolicyApplicationGroupResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupNetworkFirewallPolicyApplicationGroupResult] {
	return pulumix.Output[LookupNetworkFirewallPolicyApplicationGroupResult]{
		OutputState: o.OutputState,
	}
}

// List of apps in the group.
func (o LookupNetworkFirewallPolicyApplicationGroupResultOutput) Apps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicyApplicationGroupResult) []string { return v.Apps }).(pulumi.StringArrayOutput)
}

func (o LookupNetworkFirewallPolicyApplicationGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicyApplicationGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the application Group.
func (o LookupNetworkFirewallPolicyApplicationGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicyApplicationGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupNetworkFirewallPolicyApplicationGroupResultOutput) NetworkFirewallPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicyApplicationGroupResult) string { return v.NetworkFirewallPolicyId }).(pulumi.StringOutput)
}

// OCID of the Network Firewall Policy this application group belongs to.
func (o LookupNetworkFirewallPolicyApplicationGroupResultOutput) ParentResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicyApplicationGroupResult) string { return v.ParentResourceId }).(pulumi.StringOutput)
}

// Count of total applications in the given application group.
func (o LookupNetworkFirewallPolicyApplicationGroupResultOutput) TotalApps() pulumi.IntOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicyApplicationGroupResult) int { return v.TotalApps }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNetworkFirewallPolicyApplicationGroupResultOutput{})
}
