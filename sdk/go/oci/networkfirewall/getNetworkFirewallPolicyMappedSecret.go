// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkfirewall

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Network Firewall Policy Mapped Secret resource in Oracle Cloud Infrastructure Network Firewall service.
//
// Get Mapped Secret by the given name in the context of network firewall policy.
func LookupNetworkFirewallPolicyMappedSecret(ctx *pulumi.Context, args *LookupNetworkFirewallPolicyMappedSecretArgs, opts ...pulumi.InvokeOption) (*LookupNetworkFirewallPolicyMappedSecretResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNetworkFirewallPolicyMappedSecretResult
	err := ctx.Invoke("oci:NetworkFirewall/getNetworkFirewallPolicyMappedSecret:getNetworkFirewallPolicyMappedSecret", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetworkFirewallPolicyMappedSecret.
type LookupNetworkFirewallPolicyMappedSecretArgs struct {
	// Name of the secret.
	Name string `pulumi:"name"`
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId string `pulumi:"networkFirewallPolicyId"`
}

// A collection of values returned by getNetworkFirewallPolicyMappedSecret.
type LookupNetworkFirewallPolicyMappedSecretResult struct {
	Id string `pulumi:"id"`
	// Name of the secret.
	Name                    string `pulumi:"name"`
	NetworkFirewallPolicyId string `pulumi:"networkFirewallPolicyId"`
	// OCID of the Network Firewall Policy this Mapped Secret belongs to.
	ParentResourceId string `pulumi:"parentResourceId"`
	// Source of the secrets, where the secrets are stored.
	Source string `pulumi:"source"`
	// Type of the secrets mapped based on the policy.
	Type string `pulumi:"type"`
	// OCID for the Vault Secret to be used.
	VaultSecretId string `pulumi:"vaultSecretId"`
	// Version number of the secret to be used.
	VersionNumber int `pulumi:"versionNumber"`
}

func LookupNetworkFirewallPolicyMappedSecretOutput(ctx *pulumi.Context, args LookupNetworkFirewallPolicyMappedSecretOutputArgs, opts ...pulumi.InvokeOption) LookupNetworkFirewallPolicyMappedSecretResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupNetworkFirewallPolicyMappedSecretResult, error) {
			args := v.(LookupNetworkFirewallPolicyMappedSecretArgs)
			r, err := LookupNetworkFirewallPolicyMappedSecret(ctx, &args, opts...)
			var s LookupNetworkFirewallPolicyMappedSecretResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupNetworkFirewallPolicyMappedSecretResultOutput)
}

// A collection of arguments for invoking getNetworkFirewallPolicyMappedSecret.
type LookupNetworkFirewallPolicyMappedSecretOutputArgs struct {
	// Name of the secret.
	Name pulumi.StringInput `pulumi:"name"`
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId pulumi.StringInput `pulumi:"networkFirewallPolicyId"`
}

func (LookupNetworkFirewallPolicyMappedSecretOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkFirewallPolicyMappedSecretArgs)(nil)).Elem()
}

// A collection of values returned by getNetworkFirewallPolicyMappedSecret.
type LookupNetworkFirewallPolicyMappedSecretResultOutput struct{ *pulumi.OutputState }

func (LookupNetworkFirewallPolicyMappedSecretResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkFirewallPolicyMappedSecretResult)(nil)).Elem()
}

func (o LookupNetworkFirewallPolicyMappedSecretResultOutput) ToLookupNetworkFirewallPolicyMappedSecretResultOutput() LookupNetworkFirewallPolicyMappedSecretResultOutput {
	return o
}

func (o LookupNetworkFirewallPolicyMappedSecretResultOutput) ToLookupNetworkFirewallPolicyMappedSecretResultOutputWithContext(ctx context.Context) LookupNetworkFirewallPolicyMappedSecretResultOutput {
	return o
}

func (o LookupNetworkFirewallPolicyMappedSecretResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicyMappedSecretResult) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the secret.
func (o LookupNetworkFirewallPolicyMappedSecretResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicyMappedSecretResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupNetworkFirewallPolicyMappedSecretResultOutput) NetworkFirewallPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicyMappedSecretResult) string { return v.NetworkFirewallPolicyId }).(pulumi.StringOutput)
}

// OCID of the Network Firewall Policy this Mapped Secret belongs to.
func (o LookupNetworkFirewallPolicyMappedSecretResultOutput) ParentResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicyMappedSecretResult) string { return v.ParentResourceId }).(pulumi.StringOutput)
}

// Source of the secrets, where the secrets are stored.
func (o LookupNetworkFirewallPolicyMappedSecretResultOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicyMappedSecretResult) string { return v.Source }).(pulumi.StringOutput)
}

// Type of the secrets mapped based on the policy.
func (o LookupNetworkFirewallPolicyMappedSecretResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicyMappedSecretResult) string { return v.Type }).(pulumi.StringOutput)
}

// OCID for the Vault Secret to be used.
func (o LookupNetworkFirewallPolicyMappedSecretResultOutput) VaultSecretId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicyMappedSecretResult) string { return v.VaultSecretId }).(pulumi.StringOutput)
}

// Version number of the secret to be used.
func (o LookupNetworkFirewallPolicyMappedSecretResultOutput) VersionNumber() pulumi.IntOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicyMappedSecretResult) int { return v.VersionNumber }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNetworkFirewallPolicyMappedSecretResultOutput{})
}
