// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkfirewall

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Network Firewall Policy Security Rule resource in Oracle Cloud Infrastructure Network Firewall service.
//
// Get Security Rule by the given name in the context of network firewall policy.
func LookupNetworkFirewallPolicySecurityRule(ctx *pulumi.Context, args *LookupNetworkFirewallPolicySecurityRuleArgs, opts ...pulumi.InvokeOption) (*LookupNetworkFirewallPolicySecurityRuleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNetworkFirewallPolicySecurityRuleResult
	err := ctx.Invoke("oci:NetworkFirewall/getNetworkFirewallPolicySecurityRule:getNetworkFirewallPolicySecurityRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetworkFirewallPolicySecurityRule.
type LookupNetworkFirewallPolicySecurityRuleArgs struct {
	// Name for the Security rule, must be unique within the policy.
	Name string `pulumi:"name"`
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId string `pulumi:"networkFirewallPolicyId"`
}

// A collection of values returned by getNetworkFirewallPolicySecurityRule.
type LookupNetworkFirewallPolicySecurityRuleResult struct {
	// Types of Action on the Traffic flow.
	// * ALLOW - Allows the traffic.
	// * DROP - Silently drops the traffic, e.g. without sending a TCP reset.
	// * REJECT - Rejects the traffic, sending a TCP reset to client and/or server as applicable.
	// * INSPECT - Inspects traffic for vulnerability as specified in `inspection`, which may result in rejection.
	Action string `pulumi:"action"`
	// Criteria to evaluate against network traffic. A match occurs when at least one item in the array associated with each specified property corresponds with the relevant aspect of the traffic.
	Conditions []GetNetworkFirewallPolicySecurityRuleCondition `pulumi:"conditions"`
	Id         string                                          `pulumi:"id"`
	// Type of inspection to affect the Traffic flow. This is only applicable if action is INSPECT.
	// * INTRUSION_DETECTION - Intrusion Detection.
	// * INTRUSION_PREVENTION - Intrusion Detection and Prevention. Traffic classified as potentially malicious will be rejected as described in `type`.
	Inspection string `pulumi:"inspection"`
	// Name for the Security rule, must be unique within the policy.
	Name                    string `pulumi:"name"`
	NetworkFirewallPolicyId string `pulumi:"networkFirewallPolicyId"`
	// OCID of the Network Firewall Policy this security rule belongs to.
	ParentResourceId string `pulumi:"parentResourceId"`
	// An object which defines the position of the rule.
	Positions     []GetNetworkFirewallPolicySecurityRulePosition `pulumi:"positions"`
	PriorityOrder string                                         `pulumi:"priorityOrder"`
}

func LookupNetworkFirewallPolicySecurityRuleOutput(ctx *pulumi.Context, args LookupNetworkFirewallPolicySecurityRuleOutputArgs, opts ...pulumi.InvokeOption) LookupNetworkFirewallPolicySecurityRuleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupNetworkFirewallPolicySecurityRuleResult, error) {
			args := v.(LookupNetworkFirewallPolicySecurityRuleArgs)
			r, err := LookupNetworkFirewallPolicySecurityRule(ctx, &args, opts...)
			var s LookupNetworkFirewallPolicySecurityRuleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupNetworkFirewallPolicySecurityRuleResultOutput)
}

// A collection of arguments for invoking getNetworkFirewallPolicySecurityRule.
type LookupNetworkFirewallPolicySecurityRuleOutputArgs struct {
	// Name for the Security rule, must be unique within the policy.
	Name pulumi.StringInput `pulumi:"name"`
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId pulumi.StringInput `pulumi:"networkFirewallPolicyId"`
}

func (LookupNetworkFirewallPolicySecurityRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkFirewallPolicySecurityRuleArgs)(nil)).Elem()
}

// A collection of values returned by getNetworkFirewallPolicySecurityRule.
type LookupNetworkFirewallPolicySecurityRuleResultOutput struct{ *pulumi.OutputState }

func (LookupNetworkFirewallPolicySecurityRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkFirewallPolicySecurityRuleResult)(nil)).Elem()
}

func (o LookupNetworkFirewallPolicySecurityRuleResultOutput) ToLookupNetworkFirewallPolicySecurityRuleResultOutput() LookupNetworkFirewallPolicySecurityRuleResultOutput {
	return o
}

func (o LookupNetworkFirewallPolicySecurityRuleResultOutput) ToLookupNetworkFirewallPolicySecurityRuleResultOutputWithContext(ctx context.Context) LookupNetworkFirewallPolicySecurityRuleResultOutput {
	return o
}

// Types of Action on the Traffic flow.
// * ALLOW - Allows the traffic.
// * DROP - Silently drops the traffic, e.g. without sending a TCP reset.
// * REJECT - Rejects the traffic, sending a TCP reset to client and/or server as applicable.
// * INSPECT - Inspects traffic for vulnerability as specified in `inspection`, which may result in rejection.
func (o LookupNetworkFirewallPolicySecurityRuleResultOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicySecurityRuleResult) string { return v.Action }).(pulumi.StringOutput)
}

// Criteria to evaluate against network traffic. A match occurs when at least one item in the array associated with each specified property corresponds with the relevant aspect of the traffic.
func (o LookupNetworkFirewallPolicySecurityRuleResultOutput) Conditions() GetNetworkFirewallPolicySecurityRuleConditionArrayOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicySecurityRuleResult) []GetNetworkFirewallPolicySecurityRuleCondition {
		return v.Conditions
	}).(GetNetworkFirewallPolicySecurityRuleConditionArrayOutput)
}

func (o LookupNetworkFirewallPolicySecurityRuleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicySecurityRuleResult) string { return v.Id }).(pulumi.StringOutput)
}

// Type of inspection to affect the Traffic flow. This is only applicable if action is INSPECT.
// * INTRUSION_DETECTION - Intrusion Detection.
// * INTRUSION_PREVENTION - Intrusion Detection and Prevention. Traffic classified as potentially malicious will be rejected as described in `type`.
func (o LookupNetworkFirewallPolicySecurityRuleResultOutput) Inspection() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicySecurityRuleResult) string { return v.Inspection }).(pulumi.StringOutput)
}

// Name for the Security rule, must be unique within the policy.
func (o LookupNetworkFirewallPolicySecurityRuleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicySecurityRuleResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupNetworkFirewallPolicySecurityRuleResultOutput) NetworkFirewallPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicySecurityRuleResult) string { return v.NetworkFirewallPolicyId }).(pulumi.StringOutput)
}

// OCID of the Network Firewall Policy this security rule belongs to.
func (o LookupNetworkFirewallPolicySecurityRuleResultOutput) ParentResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicySecurityRuleResult) string { return v.ParentResourceId }).(pulumi.StringOutput)
}

// An object which defines the position of the rule.
func (o LookupNetworkFirewallPolicySecurityRuleResultOutput) Positions() GetNetworkFirewallPolicySecurityRulePositionArrayOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicySecurityRuleResult) []GetNetworkFirewallPolicySecurityRulePosition {
		return v.Positions
	}).(GetNetworkFirewallPolicySecurityRulePositionArrayOutput)
}

func (o LookupNetworkFirewallPolicySecurityRuleResultOutput) PriorityOrder() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicySecurityRuleResult) string { return v.PriorityOrder }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNetworkFirewallPolicySecurityRuleResultOutput{})
}
