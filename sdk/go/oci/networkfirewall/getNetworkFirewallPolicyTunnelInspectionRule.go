// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkfirewall

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Network Firewall Policy Tunnel Inspection Rule resource in Oracle Cloud Infrastructure Network Firewall service.
//
// Get tunnel inspection rule by the given name in the context of network firewall policy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/networkfirewall"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := networkfirewall.GetNetworkFirewallPolicyTunnelInspectionRule(ctx, &networkfirewall.GetNetworkFirewallPolicyTunnelInspectionRuleArgs{
//				NetworkFirewallPolicyId:  testNetworkFirewallPolicy.Id,
//				TunnelInspectionRuleName: testRule.Name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupNetworkFirewallPolicyTunnelInspectionRule(ctx *pulumi.Context, args *LookupNetworkFirewallPolicyTunnelInspectionRuleArgs, opts ...pulumi.InvokeOption) (*LookupNetworkFirewallPolicyTunnelInspectionRuleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNetworkFirewallPolicyTunnelInspectionRuleResult
	err := ctx.Invoke("oci:NetworkFirewall/getNetworkFirewallPolicyTunnelInspectionRule:getNetworkFirewallPolicyTunnelInspectionRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetworkFirewallPolicyTunnelInspectionRule.
type LookupNetworkFirewallPolicyTunnelInspectionRuleArgs struct {
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId string `pulumi:"networkFirewallPolicyId"`
	// Unique identifier for Tunnel Inspection Rules in the network firewall policy.
	TunnelInspectionRuleName string `pulumi:"tunnelInspectionRuleName"`
}

// A collection of values returned by getNetworkFirewallPolicyTunnelInspectionRule.
type LookupNetworkFirewallPolicyTunnelInspectionRuleResult struct {
	// Types of Inspect Action on the Traffic flow.
	// * INSPECT - Inspect the traffic.
	// * INSPECT_AND_CAPTURE_LOG - Inspect and capture logs for the traffic.
	Action string `pulumi:"action"`
	// Criteria to evaluate against incoming network traffic. A match occurs when at least one item in the array associated with each specified property corresponds with the relevant aspect of the traffic.
	Conditions []GetNetworkFirewallPolicyTunnelInspectionRuleCondition `pulumi:"conditions"`
	Id         string                                                  `pulumi:"id"`
	// Name for the Tunnel Inspection Rule, must be unique within the policy.
	Name                    string `pulumi:"name"`
	NetworkFirewallPolicyId string `pulumi:"networkFirewallPolicyId"`
	// OCID of the Network Firewall Policy this Tunnel Inspection Rule belongs to.
	ParentResourceId string `pulumi:"parentResourceId"`
	// An object which defines the position of the rule.
	Positions []GetNetworkFirewallPolicyTunnelInspectionRulePosition `pulumi:"positions"`
	// The priority order in which this rule should be evaluated
	PriorityOrder string `pulumi:"priorityOrder"`
	// Vxlan Inspect profile used in Vxlan Tunnel Inspection Rules.
	Profiles []GetNetworkFirewallPolicyTunnelInspectionRuleProfile `pulumi:"profiles"`
	// Types of Tunnel Inspection Protocol to be applied on the traffic.
	// * VXLAN - VXLAN Tunnel Inspection Protocol will be applied on the traffic.
	Protocol                 string `pulumi:"protocol"`
	TunnelInspectionRuleName string `pulumi:"tunnelInspectionRuleName"`
}

func LookupNetworkFirewallPolicyTunnelInspectionRuleOutput(ctx *pulumi.Context, args LookupNetworkFirewallPolicyTunnelInspectionRuleOutputArgs, opts ...pulumi.InvokeOption) LookupNetworkFirewallPolicyTunnelInspectionRuleResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNetworkFirewallPolicyTunnelInspectionRuleResultOutput, error) {
			args := v.(LookupNetworkFirewallPolicyTunnelInspectionRuleArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:NetworkFirewall/getNetworkFirewallPolicyTunnelInspectionRule:getNetworkFirewallPolicyTunnelInspectionRule", args, LookupNetworkFirewallPolicyTunnelInspectionRuleResultOutput{}, options).(LookupNetworkFirewallPolicyTunnelInspectionRuleResultOutput), nil
		}).(LookupNetworkFirewallPolicyTunnelInspectionRuleResultOutput)
}

// A collection of arguments for invoking getNetworkFirewallPolicyTunnelInspectionRule.
type LookupNetworkFirewallPolicyTunnelInspectionRuleOutputArgs struct {
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId pulumi.StringInput `pulumi:"networkFirewallPolicyId"`
	// Unique identifier for Tunnel Inspection Rules in the network firewall policy.
	TunnelInspectionRuleName pulumi.StringInput `pulumi:"tunnelInspectionRuleName"`
}

func (LookupNetworkFirewallPolicyTunnelInspectionRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkFirewallPolicyTunnelInspectionRuleArgs)(nil)).Elem()
}

// A collection of values returned by getNetworkFirewallPolicyTunnelInspectionRule.
type LookupNetworkFirewallPolicyTunnelInspectionRuleResultOutput struct{ *pulumi.OutputState }

func (LookupNetworkFirewallPolicyTunnelInspectionRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkFirewallPolicyTunnelInspectionRuleResult)(nil)).Elem()
}

func (o LookupNetworkFirewallPolicyTunnelInspectionRuleResultOutput) ToLookupNetworkFirewallPolicyTunnelInspectionRuleResultOutput() LookupNetworkFirewallPolicyTunnelInspectionRuleResultOutput {
	return o
}

func (o LookupNetworkFirewallPolicyTunnelInspectionRuleResultOutput) ToLookupNetworkFirewallPolicyTunnelInspectionRuleResultOutputWithContext(ctx context.Context) LookupNetworkFirewallPolicyTunnelInspectionRuleResultOutput {
	return o
}

// Types of Inspect Action on the Traffic flow.
// * INSPECT - Inspect the traffic.
// * INSPECT_AND_CAPTURE_LOG - Inspect and capture logs for the traffic.
func (o LookupNetworkFirewallPolicyTunnelInspectionRuleResultOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicyTunnelInspectionRuleResult) string { return v.Action }).(pulumi.StringOutput)
}

// Criteria to evaluate against incoming network traffic. A match occurs when at least one item in the array associated with each specified property corresponds with the relevant aspect of the traffic.
func (o LookupNetworkFirewallPolicyTunnelInspectionRuleResultOutput) Conditions() GetNetworkFirewallPolicyTunnelInspectionRuleConditionArrayOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicyTunnelInspectionRuleResult) []GetNetworkFirewallPolicyTunnelInspectionRuleCondition {
		return v.Conditions
	}).(GetNetworkFirewallPolicyTunnelInspectionRuleConditionArrayOutput)
}

func (o LookupNetworkFirewallPolicyTunnelInspectionRuleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicyTunnelInspectionRuleResult) string { return v.Id }).(pulumi.StringOutput)
}

// Name for the Tunnel Inspection Rule, must be unique within the policy.
func (o LookupNetworkFirewallPolicyTunnelInspectionRuleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicyTunnelInspectionRuleResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupNetworkFirewallPolicyTunnelInspectionRuleResultOutput) NetworkFirewallPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicyTunnelInspectionRuleResult) string { return v.NetworkFirewallPolicyId }).(pulumi.StringOutput)
}

// OCID of the Network Firewall Policy this Tunnel Inspection Rule belongs to.
func (o LookupNetworkFirewallPolicyTunnelInspectionRuleResultOutput) ParentResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicyTunnelInspectionRuleResult) string { return v.ParentResourceId }).(pulumi.StringOutput)
}

// An object which defines the position of the rule.
func (o LookupNetworkFirewallPolicyTunnelInspectionRuleResultOutput) Positions() GetNetworkFirewallPolicyTunnelInspectionRulePositionArrayOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicyTunnelInspectionRuleResult) []GetNetworkFirewallPolicyTunnelInspectionRulePosition {
		return v.Positions
	}).(GetNetworkFirewallPolicyTunnelInspectionRulePositionArrayOutput)
}

// The priority order in which this rule should be evaluated
func (o LookupNetworkFirewallPolicyTunnelInspectionRuleResultOutput) PriorityOrder() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicyTunnelInspectionRuleResult) string { return v.PriorityOrder }).(pulumi.StringOutput)
}

// Vxlan Inspect profile used in Vxlan Tunnel Inspection Rules.
func (o LookupNetworkFirewallPolicyTunnelInspectionRuleResultOutput) Profiles() GetNetworkFirewallPolicyTunnelInspectionRuleProfileArrayOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicyTunnelInspectionRuleResult) []GetNetworkFirewallPolicyTunnelInspectionRuleProfile {
		return v.Profiles
	}).(GetNetworkFirewallPolicyTunnelInspectionRuleProfileArrayOutput)
}

// Types of Tunnel Inspection Protocol to be applied on the traffic.
// * VXLAN - VXLAN Tunnel Inspection Protocol will be applied on the traffic.
func (o LookupNetworkFirewallPolicyTunnelInspectionRuleResultOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicyTunnelInspectionRuleResult) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o LookupNetworkFirewallPolicyTunnelInspectionRuleResultOutput) TunnelInspectionRuleName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkFirewallPolicyTunnelInspectionRuleResult) string {
		return v.TunnelInspectionRuleName
	}).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNetworkFirewallPolicyTunnelInspectionRuleResultOutput{})
}
