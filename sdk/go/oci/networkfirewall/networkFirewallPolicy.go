// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package networkfirewall

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Network Firewall Policy resource in Oracle Cloud Infrastructure Network Firewall service.
//
// Creates a new Network Firewall Policy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/NetworkFirewall"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := NetworkFirewall.NewNetworkFirewallPolicy(ctx, "testNetworkFirewallPolicy", &NetworkFirewall.NetworkFirewallPolicyArgs{
//				CompartmentId:    pulumi.Any(_var.Compartment_id),
//				ApplicationLists: pulumi.Any(_var.Network_firewall_policy_application_lists),
//				DecryptionProfiles: networkfirewall.NetworkFirewallPolicyDecryptionProfileArray{
//					&networkfirewall.NetworkFirewallPolicyDecryptionProfileArgs{
//						IsOutOfCapacityBlocked:             pulumi.Any(_var.Network_firewall_policy_decryption_profiles_is_out_of_capacity_blocked),
//						IsUnsupportedCipherBlocked:         pulumi.Any(_var.Network_firewall_policy_decryption_profiles_is_unsupported_cipher_blocked),
//						IsUnsupportedVersionBlocked:        pulumi.Any(_var.Network_firewall_policy_decryption_profiles_is_unsupported_version_blocked),
//						Type:                               pulumi.Any(_var.Network_firewall_policy_decryption_profiles_type),
//						AreCertificateExtensionsRestricted: pulumi.Any(_var.Network_firewall_policy_decryption_profiles_are_certificate_extensions_restricted),
//						IsAutoIncludeAltName:               pulumi.Any(_var.Network_firewall_policy_decryption_profiles_is_auto_include_alt_name),
//						IsExpiredCertificateBlocked:        pulumi.Any(_var.Network_firewall_policy_decryption_profiles_is_expired_certificate_blocked),
//						IsRevocationStatusTimeoutBlocked:   pulumi.Any(_var.Network_firewall_policy_decryption_profiles_is_revocation_status_timeout_blocked),
//						IsUnknownRevocationStatusBlocked:   pulumi.Any(_var.Network_firewall_policy_decryption_profiles_is_unknown_revocation_status_blocked),
//						IsUntrustedIssuerBlocked:           pulumi.Any(_var.Network_firewall_policy_decryption_profiles_is_untrusted_issuer_blocked),
//					},
//				},
//				DecryptionRules: networkfirewall.NetworkFirewallPolicyDecryptionRuleArray{
//					&networkfirewall.NetworkFirewallPolicyDecryptionRuleArgs{
//						Action: pulumi.Any(_var.Network_firewall_policy_decryption_rules_action),
//						Condition: &networkfirewall.NetworkFirewallPolicyDecryptionRuleConditionArgs{
//							Destinations: pulumi.Any(_var.Network_firewall_policy_decryption_rules_condition_destinations),
//							Sources:      pulumi.Any(_var.Network_firewall_policy_decryption_rules_condition_sources),
//						},
//						Name:              pulumi.Any(_var.Network_firewall_policy_decryption_rules_name),
//						DecryptionProfile: pulumi.Any(_var.Network_firewall_policy_decryption_rules_decryption_profile),
//						Secret:            pulumi.Any(_var.Network_firewall_policy_decryption_rules_secret),
//					},
//				},
//				DefinedTags: pulumi.AnyMap{
//					"foo-namespace.bar-key": pulumi.Any("value"),
//				},
//				DisplayName: pulumi.Any(_var.Network_firewall_policy_display_name),
//				FreeformTags: pulumi.AnyMap{
//					"bar-key": pulumi.Any("value"),
//				},
//				IpAddressLists: pulumi.Any(_var.Network_firewall_policy_ip_address_lists),
//				MappedSecrets: networkfirewall.NetworkFirewallPolicyMappedSecretArray{
//					&networkfirewall.NetworkFirewallPolicyMappedSecretArgs{
//						Source:        _var.Network_firewall_policy_mapped_secrets_source,
//						Type:          pulumi.Any(_var.Network_firewall_policy_mapped_secrets_type),
//						VaultSecretId: pulumi.Any(oci_vault_secret.Test_secret.Id),
//						VersionNumber: pulumi.Any(_var.Network_firewall_policy_mapped_secrets_version_number),
//					},
//				},
//				SecurityRules: networkfirewall.NetworkFirewallPolicySecurityRuleArray{
//					&networkfirewall.NetworkFirewallPolicySecurityRuleArgs{
//						Action: pulumi.Any(_var.Network_firewall_policy_security_rules_action),
//						Condition: &networkfirewall.NetworkFirewallPolicySecurityRuleConditionArgs{
//							Applications: pulumi.Any(_var.Network_firewall_policy_security_rules_condition_applications),
//							Destinations: pulumi.Any(_var.Network_firewall_policy_security_rules_condition_destinations),
//							Sources:      pulumi.Any(_var.Network_firewall_policy_security_rules_condition_sources),
//							Urls:         pulumi.Any(_var.Network_firewall_policy_security_rules_condition_urls),
//						},
//						Name:       pulumi.Any(_var.Network_firewall_policy_security_rules_name),
//						Inspection: pulumi.Any(_var.Network_firewall_policy_security_rules_inspection),
//					},
//				},
//				UrlLists: pulumi.Any(_var.Network_firewall_policy_url_lists),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// NetworkFirewallPolicies can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:NetworkFirewall/networkFirewallPolicy:NetworkFirewallPolicy test_network_firewall_policy "id"
//
// ```
type NetworkFirewallPolicy struct {
	pulumi.CustomResourceState

	// (Updatable) Map defining application lists of the policy. The value of an entry is a list of "applications", each consisting of a protocol identifier (such as TCP, UDP, or ICMP) and protocol-specific parameters (such as a port range). The associated key is the identifier by which the application list is referenced.
	ApplicationLists NetworkFirewallPolicyApplicationListArrayOutput `pulumi:"applicationLists"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the NetworkFirewall Policy.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Map defining decryption profiles of the policy. The value of an entry is a decryption profile. The associated key is the identifier by which the decryption profile is referenced.
	DecryptionProfiles NetworkFirewallPolicyDecryptionProfileArrayOutput `pulumi:"decryptionProfiles"`
	// (Updatable) List of Decryption Rules defining the behavior of the policy. The first rule with a matching condition determines the action taken upon network traffic.
	DecryptionRules NetworkFirewallPolicyDecryptionRuleArrayOutput `pulumi:"decryptionRules"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A user-friendly optional name for the firewall policy. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// (Updatable) Map defining IP address lists of the policy. The value of an entry is a list of IP addresses or prefixes in CIDR notation. The associated key is the identifier by which the IP address list is referenced.
	IpAddressLists NetworkFirewallPolicyIpAddressListArrayOutput `pulumi:"ipAddressLists"`
	// To determine if any Network Firewall is associated with this Network Firewall Policy.
	IsFirewallAttached pulumi.BoolOutput `pulumi:"isFirewallAttached"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// (Updatable) Map defining secrets of the policy. The value of an entry is a "mapped secret" consisting of a purpose and source. The associated key is the identifier by which the mapped secret is referenced.
	MappedSecrets NetworkFirewallPolicyMappedSecretArrayOutput `pulumi:"mappedSecrets"`
	// (Updatable) List of Security Rules defining the behavior of the policy. The first rule with a matching condition determines the action taken upon network traffic.
	SecurityRules NetworkFirewallPolicySecurityRuleArrayOutput `pulumi:"securityRules"`
	// The current state of the Network Firewall Policy.
	State pulumi.StringOutput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// The time instant at which the Network Firewall Policy was created in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time instant at which the Network Firewall Policy was updated in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// (Updatable) Map defining URL pattern lists of the policy. The value of an entry is a list of URL patterns. The associated key is the identifier by which the URL pattern list is referenced.
	UrlLists NetworkFirewallPolicyUrlListArrayOutput `pulumi:"urlLists"`
}

// NewNetworkFirewallPolicy registers a new resource with the given unique name, arguments, and options.
func NewNetworkFirewallPolicy(ctx *pulumi.Context,
	name string, args *NetworkFirewallPolicyArgs, opts ...pulumi.ResourceOption) (*NetworkFirewallPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	var resource NetworkFirewallPolicy
	err := ctx.RegisterResource("oci:NetworkFirewall/networkFirewallPolicy:NetworkFirewallPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkFirewallPolicy gets an existing NetworkFirewallPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkFirewallPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkFirewallPolicyState, opts ...pulumi.ResourceOption) (*NetworkFirewallPolicy, error) {
	var resource NetworkFirewallPolicy
	err := ctx.ReadResource("oci:NetworkFirewall/networkFirewallPolicy:NetworkFirewallPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkFirewallPolicy resources.
type networkFirewallPolicyState struct {
	// (Updatable) Map defining application lists of the policy. The value of an entry is a list of "applications", each consisting of a protocol identifier (such as TCP, UDP, or ICMP) and protocol-specific parameters (such as a port range). The associated key is the identifier by which the application list is referenced.
	ApplicationLists []NetworkFirewallPolicyApplicationList `pulumi:"applicationLists"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the NetworkFirewall Policy.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Map defining decryption profiles of the policy. The value of an entry is a decryption profile. The associated key is the identifier by which the decryption profile is referenced.
	DecryptionProfiles []NetworkFirewallPolicyDecryptionProfile `pulumi:"decryptionProfiles"`
	// (Updatable) List of Decryption Rules defining the behavior of the policy. The first rule with a matching condition determines the action taken upon network traffic.
	DecryptionRules []NetworkFirewallPolicyDecryptionRule `pulumi:"decryptionRules"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly optional name for the firewall policy. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Map defining IP address lists of the policy. The value of an entry is a list of IP addresses or prefixes in CIDR notation. The associated key is the identifier by which the IP address list is referenced.
	IpAddressLists []NetworkFirewallPolicyIpAddressList `pulumi:"ipAddressLists"`
	// To determine if any Network Firewall is associated with this Network Firewall Policy.
	IsFirewallAttached *bool `pulumi:"isFirewallAttached"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// (Updatable) Map defining secrets of the policy. The value of an entry is a "mapped secret" consisting of a purpose and source. The associated key is the identifier by which the mapped secret is referenced.
	MappedSecrets []NetworkFirewallPolicyMappedSecret `pulumi:"mappedSecrets"`
	// (Updatable) List of Security Rules defining the behavior of the policy. The first rule with a matching condition determines the action taken upon network traffic.
	SecurityRules []NetworkFirewallPolicySecurityRule `pulumi:"securityRules"`
	// The current state of the Network Firewall Policy.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time instant at which the Network Firewall Policy was created in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
	// The time instant at which the Network Firewall Policy was updated in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeUpdated *string `pulumi:"timeUpdated"`
	// (Updatable) Map defining URL pattern lists of the policy. The value of an entry is a list of URL patterns. The associated key is the identifier by which the URL pattern list is referenced.
	UrlLists []NetworkFirewallPolicyUrlList `pulumi:"urlLists"`
}

type NetworkFirewallPolicyState struct {
	// (Updatable) Map defining application lists of the policy. The value of an entry is a list of "applications", each consisting of a protocol identifier (such as TCP, UDP, or ICMP) and protocol-specific parameters (such as a port range). The associated key is the identifier by which the application list is referenced.
	ApplicationLists NetworkFirewallPolicyApplicationListArrayInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the NetworkFirewall Policy.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Map defining decryption profiles of the policy. The value of an entry is a decryption profile. The associated key is the identifier by which the decryption profile is referenced.
	DecryptionProfiles NetworkFirewallPolicyDecryptionProfileArrayInput
	// (Updatable) List of Decryption Rules defining the behavior of the policy. The first rule with a matching condition determines the action taken upon network traffic.
	DecryptionRules NetworkFirewallPolicyDecryptionRuleArrayInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly optional name for the firewall policy. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) Map defining IP address lists of the policy. The value of an entry is a list of IP addresses or prefixes in CIDR notation. The associated key is the identifier by which the IP address list is referenced.
	IpAddressLists NetworkFirewallPolicyIpAddressListArrayInput
	// To determine if any Network Firewall is associated with this Network Firewall Policy.
	IsFirewallAttached pulumi.BoolPtrInput
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput
	// (Updatable) Map defining secrets of the policy. The value of an entry is a "mapped secret" consisting of a purpose and source. The associated key is the identifier by which the mapped secret is referenced.
	MappedSecrets NetworkFirewallPolicyMappedSecretArrayInput
	// (Updatable) List of Security Rules defining the behavior of the policy. The first rule with a matching condition determines the action taken upon network traffic.
	SecurityRules NetworkFirewallPolicySecurityRuleArrayInput
	// The current state of the Network Firewall Policy.
	State pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// The time instant at which the Network Firewall Policy was created in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
	// The time instant at which the Network Firewall Policy was updated in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeUpdated pulumi.StringPtrInput
	// (Updatable) Map defining URL pattern lists of the policy. The value of an entry is a list of URL patterns. The associated key is the identifier by which the URL pattern list is referenced.
	UrlLists NetworkFirewallPolicyUrlListArrayInput
}

func (NetworkFirewallPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkFirewallPolicyState)(nil)).Elem()
}

type networkFirewallPolicyArgs struct {
	// (Updatable) Map defining application lists of the policy. The value of an entry is a list of "applications", each consisting of a protocol identifier (such as TCP, UDP, or ICMP) and protocol-specific parameters (such as a port range). The associated key is the identifier by which the application list is referenced.
	ApplicationLists []NetworkFirewallPolicyApplicationList `pulumi:"applicationLists"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the NetworkFirewall Policy.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Map defining decryption profiles of the policy. The value of an entry is a decryption profile. The associated key is the identifier by which the decryption profile is referenced.
	DecryptionProfiles []NetworkFirewallPolicyDecryptionProfile `pulumi:"decryptionProfiles"`
	// (Updatable) List of Decryption Rules defining the behavior of the policy. The first rule with a matching condition determines the action taken upon network traffic.
	DecryptionRules []NetworkFirewallPolicyDecryptionRule `pulumi:"decryptionRules"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly optional name for the firewall policy. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Map defining IP address lists of the policy. The value of an entry is a list of IP addresses or prefixes in CIDR notation. The associated key is the identifier by which the IP address list is referenced.
	IpAddressLists []NetworkFirewallPolicyIpAddressList `pulumi:"ipAddressLists"`
	// (Updatable) Map defining secrets of the policy. The value of an entry is a "mapped secret" consisting of a purpose and source. The associated key is the identifier by which the mapped secret is referenced.
	MappedSecrets []NetworkFirewallPolicyMappedSecret `pulumi:"mappedSecrets"`
	// (Updatable) List of Security Rules defining the behavior of the policy. The first rule with a matching condition determines the action taken upon network traffic.
	SecurityRules []NetworkFirewallPolicySecurityRule `pulumi:"securityRules"`
	// (Updatable) Map defining URL pattern lists of the policy. The value of an entry is a list of URL patterns. The associated key is the identifier by which the URL pattern list is referenced.
	UrlLists []NetworkFirewallPolicyUrlList `pulumi:"urlLists"`
}

// The set of arguments for constructing a NetworkFirewallPolicy resource.
type NetworkFirewallPolicyArgs struct {
	// (Updatable) Map defining application lists of the policy. The value of an entry is a list of "applications", each consisting of a protocol identifier (such as TCP, UDP, or ICMP) and protocol-specific parameters (such as a port range). The associated key is the identifier by which the application list is referenced.
	ApplicationLists NetworkFirewallPolicyApplicationListArrayInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the NetworkFirewall Policy.
	CompartmentId pulumi.StringInput
	// (Updatable) Map defining decryption profiles of the policy. The value of an entry is a decryption profile. The associated key is the identifier by which the decryption profile is referenced.
	DecryptionProfiles NetworkFirewallPolicyDecryptionProfileArrayInput
	// (Updatable) List of Decryption Rules defining the behavior of the policy. The first rule with a matching condition determines the action taken upon network traffic.
	DecryptionRules NetworkFirewallPolicyDecryptionRuleArrayInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly optional name for the firewall policy. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) Map defining IP address lists of the policy. The value of an entry is a list of IP addresses or prefixes in CIDR notation. The associated key is the identifier by which the IP address list is referenced.
	IpAddressLists NetworkFirewallPolicyIpAddressListArrayInput
	// (Updatable) Map defining secrets of the policy. The value of an entry is a "mapped secret" consisting of a purpose and source. The associated key is the identifier by which the mapped secret is referenced.
	MappedSecrets NetworkFirewallPolicyMappedSecretArrayInput
	// (Updatable) List of Security Rules defining the behavior of the policy. The first rule with a matching condition determines the action taken upon network traffic.
	SecurityRules NetworkFirewallPolicySecurityRuleArrayInput
	// (Updatable) Map defining URL pattern lists of the policy. The value of an entry is a list of URL patterns. The associated key is the identifier by which the URL pattern list is referenced.
	UrlLists NetworkFirewallPolicyUrlListArrayInput
}

func (NetworkFirewallPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkFirewallPolicyArgs)(nil)).Elem()
}

type NetworkFirewallPolicyInput interface {
	pulumi.Input

	ToNetworkFirewallPolicyOutput() NetworkFirewallPolicyOutput
	ToNetworkFirewallPolicyOutputWithContext(ctx context.Context) NetworkFirewallPolicyOutput
}

func (*NetworkFirewallPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkFirewallPolicy)(nil)).Elem()
}

func (i *NetworkFirewallPolicy) ToNetworkFirewallPolicyOutput() NetworkFirewallPolicyOutput {
	return i.ToNetworkFirewallPolicyOutputWithContext(context.Background())
}

func (i *NetworkFirewallPolicy) ToNetworkFirewallPolicyOutputWithContext(ctx context.Context) NetworkFirewallPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallPolicyOutput)
}

// NetworkFirewallPolicyArrayInput is an input type that accepts NetworkFirewallPolicyArray and NetworkFirewallPolicyArrayOutput values.
// You can construct a concrete instance of `NetworkFirewallPolicyArrayInput` via:
//
//	NetworkFirewallPolicyArray{ NetworkFirewallPolicyArgs{...} }
type NetworkFirewallPolicyArrayInput interface {
	pulumi.Input

	ToNetworkFirewallPolicyArrayOutput() NetworkFirewallPolicyArrayOutput
	ToNetworkFirewallPolicyArrayOutputWithContext(context.Context) NetworkFirewallPolicyArrayOutput
}

type NetworkFirewallPolicyArray []NetworkFirewallPolicyInput

func (NetworkFirewallPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkFirewallPolicy)(nil)).Elem()
}

func (i NetworkFirewallPolicyArray) ToNetworkFirewallPolicyArrayOutput() NetworkFirewallPolicyArrayOutput {
	return i.ToNetworkFirewallPolicyArrayOutputWithContext(context.Background())
}

func (i NetworkFirewallPolicyArray) ToNetworkFirewallPolicyArrayOutputWithContext(ctx context.Context) NetworkFirewallPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallPolicyArrayOutput)
}

// NetworkFirewallPolicyMapInput is an input type that accepts NetworkFirewallPolicyMap and NetworkFirewallPolicyMapOutput values.
// You can construct a concrete instance of `NetworkFirewallPolicyMapInput` via:
//
//	NetworkFirewallPolicyMap{ "key": NetworkFirewallPolicyArgs{...} }
type NetworkFirewallPolicyMapInput interface {
	pulumi.Input

	ToNetworkFirewallPolicyMapOutput() NetworkFirewallPolicyMapOutput
	ToNetworkFirewallPolicyMapOutputWithContext(context.Context) NetworkFirewallPolicyMapOutput
}

type NetworkFirewallPolicyMap map[string]NetworkFirewallPolicyInput

func (NetworkFirewallPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkFirewallPolicy)(nil)).Elem()
}

func (i NetworkFirewallPolicyMap) ToNetworkFirewallPolicyMapOutput() NetworkFirewallPolicyMapOutput {
	return i.ToNetworkFirewallPolicyMapOutputWithContext(context.Background())
}

func (i NetworkFirewallPolicyMap) ToNetworkFirewallPolicyMapOutputWithContext(ctx context.Context) NetworkFirewallPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallPolicyMapOutput)
}

type NetworkFirewallPolicyOutput struct{ *pulumi.OutputState }

func (NetworkFirewallPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkFirewallPolicy)(nil)).Elem()
}

func (o NetworkFirewallPolicyOutput) ToNetworkFirewallPolicyOutput() NetworkFirewallPolicyOutput {
	return o
}

func (o NetworkFirewallPolicyOutput) ToNetworkFirewallPolicyOutputWithContext(ctx context.Context) NetworkFirewallPolicyOutput {
	return o
}

type NetworkFirewallPolicyArrayOutput struct{ *pulumi.OutputState }

func (NetworkFirewallPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkFirewallPolicy)(nil)).Elem()
}

func (o NetworkFirewallPolicyArrayOutput) ToNetworkFirewallPolicyArrayOutput() NetworkFirewallPolicyArrayOutput {
	return o
}

func (o NetworkFirewallPolicyArrayOutput) ToNetworkFirewallPolicyArrayOutputWithContext(ctx context.Context) NetworkFirewallPolicyArrayOutput {
	return o
}

func (o NetworkFirewallPolicyArrayOutput) Index(i pulumi.IntInput) NetworkFirewallPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkFirewallPolicy {
		return vs[0].([]*NetworkFirewallPolicy)[vs[1].(int)]
	}).(NetworkFirewallPolicyOutput)
}

type NetworkFirewallPolicyMapOutput struct{ *pulumi.OutputState }

func (NetworkFirewallPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkFirewallPolicy)(nil)).Elem()
}

func (o NetworkFirewallPolicyMapOutput) ToNetworkFirewallPolicyMapOutput() NetworkFirewallPolicyMapOutput {
	return o
}

func (o NetworkFirewallPolicyMapOutput) ToNetworkFirewallPolicyMapOutputWithContext(ctx context.Context) NetworkFirewallPolicyMapOutput {
	return o
}

func (o NetworkFirewallPolicyMapOutput) MapIndex(k pulumi.StringInput) NetworkFirewallPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkFirewallPolicy {
		return vs[0].(map[string]*NetworkFirewallPolicy)[vs[1].(string)]
	}).(NetworkFirewallPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkFirewallPolicyInput)(nil)).Elem(), &NetworkFirewallPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkFirewallPolicyArrayInput)(nil)).Elem(), NetworkFirewallPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkFirewallPolicyMapInput)(nil)).Elem(), NetworkFirewallPolicyMap{})
	pulumi.RegisterOutputType(NetworkFirewallPolicyOutput{})
	pulumi.RegisterOutputType(NetworkFirewallPolicyArrayOutput{})
	pulumi.RegisterOutputType(NetworkFirewallPolicyMapOutput{})
}
