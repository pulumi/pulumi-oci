// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkfirewall

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Network Firewall Policy Application resource in Oracle Cloud Infrastructure Network Firewall service.
//
// Creates a new Application inside the Network Firewall Policy.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/NetworkFirewall"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := NetworkFirewall.NewNetworkFirewallPolicyApplication(ctx, "test_network_firewall_policy_application", &NetworkFirewall.NetworkFirewallPolicyApplicationArgs{
//				IcmpType:                pulumi.Any(networkFirewallPolicyApplicationIcmpType),
//				Name:                    pulumi.Any(networkFirewallPolicyApplicationName),
//				NetworkFirewallPolicyId: pulumi.Any(testNetworkFirewallPolicy.Id),
//				Type:                    pulumi.Any(networkFirewallPolicyApplicationType),
//				IcmpCode:                pulumi.Any(networkFirewallPolicyApplicationIcmpCode),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// NetworkFirewallPolicyApplications can be imported using the `name`, e.g.
//
// ```sh
// $ pulumi import oci:NetworkFirewall/networkFirewallPolicyApplication:NetworkFirewallPolicyApplication test_network_firewall_policy_application "networkFirewallPolicies/{networkFirewallPolicyId}/applications/{applicationName}"
// ```
type NetworkFirewallPolicyApplication struct {
	pulumi.CustomResourceState

	// (Updatable) The value of the ICMP/ICMP_V6 message Code (subtype) field as defined by [RFC 4443](https://www.rfc-editor.org/rfc/rfc4443.html#section-2.1).
	IcmpCode pulumi.IntOutput `pulumi:"icmpCode"`
	// (Updatable) The value of the ICMP/IMCP_V6 message Type field as defined by [RFC 4443](https://www.rfc-editor.org/rfc/rfc4443.html#section-2.1).
	IcmpType pulumi.IntOutput `pulumi:"icmpType"`
	// Name of the application
	Name pulumi.StringOutput `pulumi:"name"`
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId pulumi.StringOutput `pulumi:"networkFirewallPolicyId"`
	// OCID of the Network Firewall Policy this application belongs to.
	ParentResourceId pulumi.StringOutput `pulumi:"parentResourceId"`
	// Describes the type of application. The accepted values are - * ICMP * ICMP_V6
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewNetworkFirewallPolicyApplication registers a new resource with the given unique name, arguments, and options.
func NewNetworkFirewallPolicyApplication(ctx *pulumi.Context,
	name string, args *NetworkFirewallPolicyApplicationArgs, opts ...pulumi.ResourceOption) (*NetworkFirewallPolicyApplication, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IcmpType == nil {
		return nil, errors.New("invalid value for required argument 'IcmpType'")
	}
	if args.NetworkFirewallPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkFirewallPolicyId'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkFirewallPolicyApplication
	err := ctx.RegisterResource("oci:NetworkFirewall/networkFirewallPolicyApplication:NetworkFirewallPolicyApplication", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkFirewallPolicyApplication gets an existing NetworkFirewallPolicyApplication resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkFirewallPolicyApplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkFirewallPolicyApplicationState, opts ...pulumi.ResourceOption) (*NetworkFirewallPolicyApplication, error) {
	var resource NetworkFirewallPolicyApplication
	err := ctx.ReadResource("oci:NetworkFirewall/networkFirewallPolicyApplication:NetworkFirewallPolicyApplication", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkFirewallPolicyApplication resources.
type networkFirewallPolicyApplicationState struct {
	// (Updatable) The value of the ICMP/ICMP_V6 message Code (subtype) field as defined by [RFC 4443](https://www.rfc-editor.org/rfc/rfc4443.html#section-2.1).
	IcmpCode *int `pulumi:"icmpCode"`
	// (Updatable) The value of the ICMP/IMCP_V6 message Type field as defined by [RFC 4443](https://www.rfc-editor.org/rfc/rfc4443.html#section-2.1).
	IcmpType *int `pulumi:"icmpType"`
	// Name of the application
	Name *string `pulumi:"name"`
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId *string `pulumi:"networkFirewallPolicyId"`
	// OCID of the Network Firewall Policy this application belongs to.
	ParentResourceId *string `pulumi:"parentResourceId"`
	// Describes the type of application. The accepted values are - * ICMP * ICMP_V6
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Type *string `pulumi:"type"`
}

type NetworkFirewallPolicyApplicationState struct {
	// (Updatable) The value of the ICMP/ICMP_V6 message Code (subtype) field as defined by [RFC 4443](https://www.rfc-editor.org/rfc/rfc4443.html#section-2.1).
	IcmpCode pulumi.IntPtrInput
	// (Updatable) The value of the ICMP/IMCP_V6 message Type field as defined by [RFC 4443](https://www.rfc-editor.org/rfc/rfc4443.html#section-2.1).
	IcmpType pulumi.IntPtrInput
	// Name of the application
	Name pulumi.StringPtrInput
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId pulumi.StringPtrInput
	// OCID of the Network Firewall Policy this application belongs to.
	ParentResourceId pulumi.StringPtrInput
	// Describes the type of application. The accepted values are - * ICMP * ICMP_V6
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Type pulumi.StringPtrInput
}

func (NetworkFirewallPolicyApplicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkFirewallPolicyApplicationState)(nil)).Elem()
}

type networkFirewallPolicyApplicationArgs struct {
	// (Updatable) The value of the ICMP/ICMP_V6 message Code (subtype) field as defined by [RFC 4443](https://www.rfc-editor.org/rfc/rfc4443.html#section-2.1).
	IcmpCode *int `pulumi:"icmpCode"`
	// (Updatable) The value of the ICMP/IMCP_V6 message Type field as defined by [RFC 4443](https://www.rfc-editor.org/rfc/rfc4443.html#section-2.1).
	IcmpType int `pulumi:"icmpType"`
	// Name of the application
	Name *string `pulumi:"name"`
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId string `pulumi:"networkFirewallPolicyId"`
	// Describes the type of application. The accepted values are - * ICMP * ICMP_V6
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a NetworkFirewallPolicyApplication resource.
type NetworkFirewallPolicyApplicationArgs struct {
	// (Updatable) The value of the ICMP/ICMP_V6 message Code (subtype) field as defined by [RFC 4443](https://www.rfc-editor.org/rfc/rfc4443.html#section-2.1).
	IcmpCode pulumi.IntPtrInput
	// (Updatable) The value of the ICMP/IMCP_V6 message Type field as defined by [RFC 4443](https://www.rfc-editor.org/rfc/rfc4443.html#section-2.1).
	IcmpType pulumi.IntInput
	// Name of the application
	Name pulumi.StringPtrInput
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId pulumi.StringInput
	// Describes the type of application. The accepted values are - * ICMP * ICMP_V6
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Type pulumi.StringInput
}

func (NetworkFirewallPolicyApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkFirewallPolicyApplicationArgs)(nil)).Elem()
}

type NetworkFirewallPolicyApplicationInput interface {
	pulumi.Input

	ToNetworkFirewallPolicyApplicationOutput() NetworkFirewallPolicyApplicationOutput
	ToNetworkFirewallPolicyApplicationOutputWithContext(ctx context.Context) NetworkFirewallPolicyApplicationOutput
}

func (*NetworkFirewallPolicyApplication) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkFirewallPolicyApplication)(nil)).Elem()
}

func (i *NetworkFirewallPolicyApplication) ToNetworkFirewallPolicyApplicationOutput() NetworkFirewallPolicyApplicationOutput {
	return i.ToNetworkFirewallPolicyApplicationOutputWithContext(context.Background())
}

func (i *NetworkFirewallPolicyApplication) ToNetworkFirewallPolicyApplicationOutputWithContext(ctx context.Context) NetworkFirewallPolicyApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallPolicyApplicationOutput)
}

// NetworkFirewallPolicyApplicationArrayInput is an input type that accepts NetworkFirewallPolicyApplicationArray and NetworkFirewallPolicyApplicationArrayOutput values.
// You can construct a concrete instance of `NetworkFirewallPolicyApplicationArrayInput` via:
//
//	NetworkFirewallPolicyApplicationArray{ NetworkFirewallPolicyApplicationArgs{...} }
type NetworkFirewallPolicyApplicationArrayInput interface {
	pulumi.Input

	ToNetworkFirewallPolicyApplicationArrayOutput() NetworkFirewallPolicyApplicationArrayOutput
	ToNetworkFirewallPolicyApplicationArrayOutputWithContext(context.Context) NetworkFirewallPolicyApplicationArrayOutput
}

type NetworkFirewallPolicyApplicationArray []NetworkFirewallPolicyApplicationInput

func (NetworkFirewallPolicyApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkFirewallPolicyApplication)(nil)).Elem()
}

func (i NetworkFirewallPolicyApplicationArray) ToNetworkFirewallPolicyApplicationArrayOutput() NetworkFirewallPolicyApplicationArrayOutput {
	return i.ToNetworkFirewallPolicyApplicationArrayOutputWithContext(context.Background())
}

func (i NetworkFirewallPolicyApplicationArray) ToNetworkFirewallPolicyApplicationArrayOutputWithContext(ctx context.Context) NetworkFirewallPolicyApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallPolicyApplicationArrayOutput)
}

// NetworkFirewallPolicyApplicationMapInput is an input type that accepts NetworkFirewallPolicyApplicationMap and NetworkFirewallPolicyApplicationMapOutput values.
// You can construct a concrete instance of `NetworkFirewallPolicyApplicationMapInput` via:
//
//	NetworkFirewallPolicyApplicationMap{ "key": NetworkFirewallPolicyApplicationArgs{...} }
type NetworkFirewallPolicyApplicationMapInput interface {
	pulumi.Input

	ToNetworkFirewallPolicyApplicationMapOutput() NetworkFirewallPolicyApplicationMapOutput
	ToNetworkFirewallPolicyApplicationMapOutputWithContext(context.Context) NetworkFirewallPolicyApplicationMapOutput
}

type NetworkFirewallPolicyApplicationMap map[string]NetworkFirewallPolicyApplicationInput

func (NetworkFirewallPolicyApplicationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkFirewallPolicyApplication)(nil)).Elem()
}

func (i NetworkFirewallPolicyApplicationMap) ToNetworkFirewallPolicyApplicationMapOutput() NetworkFirewallPolicyApplicationMapOutput {
	return i.ToNetworkFirewallPolicyApplicationMapOutputWithContext(context.Background())
}

func (i NetworkFirewallPolicyApplicationMap) ToNetworkFirewallPolicyApplicationMapOutputWithContext(ctx context.Context) NetworkFirewallPolicyApplicationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallPolicyApplicationMapOutput)
}

type NetworkFirewallPolicyApplicationOutput struct{ *pulumi.OutputState }

func (NetworkFirewallPolicyApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkFirewallPolicyApplication)(nil)).Elem()
}

func (o NetworkFirewallPolicyApplicationOutput) ToNetworkFirewallPolicyApplicationOutput() NetworkFirewallPolicyApplicationOutput {
	return o
}

func (o NetworkFirewallPolicyApplicationOutput) ToNetworkFirewallPolicyApplicationOutputWithContext(ctx context.Context) NetworkFirewallPolicyApplicationOutput {
	return o
}

// (Updatable) The value of the ICMP/ICMP_V6 message Code (subtype) field as defined by [RFC 4443](https://www.rfc-editor.org/rfc/rfc4443.html#section-2.1).
func (o NetworkFirewallPolicyApplicationOutput) IcmpCode() pulumi.IntOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyApplication) pulumi.IntOutput { return v.IcmpCode }).(pulumi.IntOutput)
}

// (Updatable) The value of the ICMP/IMCP_V6 message Type field as defined by [RFC 4443](https://www.rfc-editor.org/rfc/rfc4443.html#section-2.1).
func (o NetworkFirewallPolicyApplicationOutput) IcmpType() pulumi.IntOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyApplication) pulumi.IntOutput { return v.IcmpType }).(pulumi.IntOutput)
}

// Name of the application
func (o NetworkFirewallPolicyApplicationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyApplication) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Unique Network Firewall Policy identifier
func (o NetworkFirewallPolicyApplicationOutput) NetworkFirewallPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyApplication) pulumi.StringOutput { return v.NetworkFirewallPolicyId }).(pulumi.StringOutput)
}

// OCID of the Network Firewall Policy this application belongs to.
func (o NetworkFirewallPolicyApplicationOutput) ParentResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyApplication) pulumi.StringOutput { return v.ParentResourceId }).(pulumi.StringOutput)
}

// Describes the type of application. The accepted values are - * ICMP * ICMP_V6
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o NetworkFirewallPolicyApplicationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyApplication) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type NetworkFirewallPolicyApplicationArrayOutput struct{ *pulumi.OutputState }

func (NetworkFirewallPolicyApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkFirewallPolicyApplication)(nil)).Elem()
}

func (o NetworkFirewallPolicyApplicationArrayOutput) ToNetworkFirewallPolicyApplicationArrayOutput() NetworkFirewallPolicyApplicationArrayOutput {
	return o
}

func (o NetworkFirewallPolicyApplicationArrayOutput) ToNetworkFirewallPolicyApplicationArrayOutputWithContext(ctx context.Context) NetworkFirewallPolicyApplicationArrayOutput {
	return o
}

func (o NetworkFirewallPolicyApplicationArrayOutput) Index(i pulumi.IntInput) NetworkFirewallPolicyApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkFirewallPolicyApplication {
		return vs[0].([]*NetworkFirewallPolicyApplication)[vs[1].(int)]
	}).(NetworkFirewallPolicyApplicationOutput)
}

type NetworkFirewallPolicyApplicationMapOutput struct{ *pulumi.OutputState }

func (NetworkFirewallPolicyApplicationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkFirewallPolicyApplication)(nil)).Elem()
}

func (o NetworkFirewallPolicyApplicationMapOutput) ToNetworkFirewallPolicyApplicationMapOutput() NetworkFirewallPolicyApplicationMapOutput {
	return o
}

func (o NetworkFirewallPolicyApplicationMapOutput) ToNetworkFirewallPolicyApplicationMapOutputWithContext(ctx context.Context) NetworkFirewallPolicyApplicationMapOutput {
	return o
}

func (o NetworkFirewallPolicyApplicationMapOutput) MapIndex(k pulumi.StringInput) NetworkFirewallPolicyApplicationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkFirewallPolicyApplication {
		return vs[0].(map[string]*NetworkFirewallPolicyApplication)[vs[1].(string)]
	}).(NetworkFirewallPolicyApplicationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkFirewallPolicyApplicationInput)(nil)).Elem(), &NetworkFirewallPolicyApplication{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkFirewallPolicyApplicationArrayInput)(nil)).Elem(), NetworkFirewallPolicyApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkFirewallPolicyApplicationMapInput)(nil)).Elem(), NetworkFirewallPolicyApplicationMap{})
	pulumi.RegisterOutputType(NetworkFirewallPolicyApplicationOutput{})
	pulumi.RegisterOutputType(NetworkFirewallPolicyApplicationArrayOutput{})
	pulumi.RegisterOutputType(NetworkFirewallPolicyApplicationMapOutput{})
}
