// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkfirewall

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Network Firewall Policy Application Group resource in Oracle Cloud Infrastructure Network Firewall service.
//
// Creates a new ApplicationGroup inside the Network Firewall Policy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/networkfirewall"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := networkfirewall.NewNetworkFirewallPolicyApplicationGroup(ctx, "test_network_firewall_policy_application_group", &networkfirewall.NetworkFirewallPolicyApplicationGroupArgs{
//				Apps:                    pulumi.Any(networkFirewallPolicyApplicationGroupApps),
//				Name:                    pulumi.Any(networkFirewallPolicyApplicationGroupName),
//				NetworkFirewallPolicyId: pulumi.Any(testNetworkFirewallPolicy.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// NetworkFirewallPolicyApplicationGroups can be imported using the `name`, e.g.
//
// ```sh
// $ pulumi import oci:NetworkFirewall/networkFirewallPolicyApplicationGroup:NetworkFirewallPolicyApplicationGroup test_network_firewall_policy_application_group "networkFirewallPolicies/{networkFirewallPolicyId}/applicationGroups/{applicationGroupName}"
// ```
type NetworkFirewallPolicyApplicationGroup struct {
	pulumi.CustomResourceState

	// (Updatable) Collection of application names. The apps referenced in the application group must already be present in the policy before being used in the application group.
	Apps pulumi.StringArrayOutput `pulumi:"apps"`
	// Name of the application group.
	Name pulumi.StringOutput `pulumi:"name"`
	// Unique Network Firewall Policy identifier
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	NetworkFirewallPolicyId pulumi.StringOutput `pulumi:"networkFirewallPolicyId"`
	// OCID of the Network Firewall Policy this application group belongs to.
	ParentResourceId pulumi.StringOutput `pulumi:"parentResourceId"`
	// Count of total applications in the given application group.
	TotalApps pulumi.IntOutput `pulumi:"totalApps"`
}

// NewNetworkFirewallPolicyApplicationGroup registers a new resource with the given unique name, arguments, and options.
func NewNetworkFirewallPolicyApplicationGroup(ctx *pulumi.Context,
	name string, args *NetworkFirewallPolicyApplicationGroupArgs, opts ...pulumi.ResourceOption) (*NetworkFirewallPolicyApplicationGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Apps == nil {
		return nil, errors.New("invalid value for required argument 'Apps'")
	}
	if args.NetworkFirewallPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkFirewallPolicyId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkFirewallPolicyApplicationGroup
	err := ctx.RegisterResource("oci:NetworkFirewall/networkFirewallPolicyApplicationGroup:NetworkFirewallPolicyApplicationGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkFirewallPolicyApplicationGroup gets an existing NetworkFirewallPolicyApplicationGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkFirewallPolicyApplicationGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkFirewallPolicyApplicationGroupState, opts ...pulumi.ResourceOption) (*NetworkFirewallPolicyApplicationGroup, error) {
	var resource NetworkFirewallPolicyApplicationGroup
	err := ctx.ReadResource("oci:NetworkFirewall/networkFirewallPolicyApplicationGroup:NetworkFirewallPolicyApplicationGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkFirewallPolicyApplicationGroup resources.
type networkFirewallPolicyApplicationGroupState struct {
	// (Updatable) Collection of application names. The apps referenced in the application group must already be present in the policy before being used in the application group.
	Apps []string `pulumi:"apps"`
	// Name of the application group.
	Name *string `pulumi:"name"`
	// Unique Network Firewall Policy identifier
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	NetworkFirewallPolicyId *string `pulumi:"networkFirewallPolicyId"`
	// OCID of the Network Firewall Policy this application group belongs to.
	ParentResourceId *string `pulumi:"parentResourceId"`
	// Count of total applications in the given application group.
	TotalApps *int `pulumi:"totalApps"`
}

type NetworkFirewallPolicyApplicationGroupState struct {
	// (Updatable) Collection of application names. The apps referenced in the application group must already be present in the policy before being used in the application group.
	Apps pulumi.StringArrayInput
	// Name of the application group.
	Name pulumi.StringPtrInput
	// Unique Network Firewall Policy identifier
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	NetworkFirewallPolicyId pulumi.StringPtrInput
	// OCID of the Network Firewall Policy this application group belongs to.
	ParentResourceId pulumi.StringPtrInput
	// Count of total applications in the given application group.
	TotalApps pulumi.IntPtrInput
}

func (NetworkFirewallPolicyApplicationGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkFirewallPolicyApplicationGroupState)(nil)).Elem()
}

type networkFirewallPolicyApplicationGroupArgs struct {
	// (Updatable) Collection of application names. The apps referenced in the application group must already be present in the policy before being used in the application group.
	Apps []string `pulumi:"apps"`
	// Name of the application group.
	Name *string `pulumi:"name"`
	// Unique Network Firewall Policy identifier
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	NetworkFirewallPolicyId string `pulumi:"networkFirewallPolicyId"`
}

// The set of arguments for constructing a NetworkFirewallPolicyApplicationGroup resource.
type NetworkFirewallPolicyApplicationGroupArgs struct {
	// (Updatable) Collection of application names. The apps referenced in the application group must already be present in the policy before being used in the application group.
	Apps pulumi.StringArrayInput
	// Name of the application group.
	Name pulumi.StringPtrInput
	// Unique Network Firewall Policy identifier
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	NetworkFirewallPolicyId pulumi.StringInput
}

func (NetworkFirewallPolicyApplicationGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkFirewallPolicyApplicationGroupArgs)(nil)).Elem()
}

type NetworkFirewallPolicyApplicationGroupInput interface {
	pulumi.Input

	ToNetworkFirewallPolicyApplicationGroupOutput() NetworkFirewallPolicyApplicationGroupOutput
	ToNetworkFirewallPolicyApplicationGroupOutputWithContext(ctx context.Context) NetworkFirewallPolicyApplicationGroupOutput
}

func (*NetworkFirewallPolicyApplicationGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkFirewallPolicyApplicationGroup)(nil)).Elem()
}

func (i *NetworkFirewallPolicyApplicationGroup) ToNetworkFirewallPolicyApplicationGroupOutput() NetworkFirewallPolicyApplicationGroupOutput {
	return i.ToNetworkFirewallPolicyApplicationGroupOutputWithContext(context.Background())
}

func (i *NetworkFirewallPolicyApplicationGroup) ToNetworkFirewallPolicyApplicationGroupOutputWithContext(ctx context.Context) NetworkFirewallPolicyApplicationGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallPolicyApplicationGroupOutput)
}

// NetworkFirewallPolicyApplicationGroupArrayInput is an input type that accepts NetworkFirewallPolicyApplicationGroupArray and NetworkFirewallPolicyApplicationGroupArrayOutput values.
// You can construct a concrete instance of `NetworkFirewallPolicyApplicationGroupArrayInput` via:
//
//	NetworkFirewallPolicyApplicationGroupArray{ NetworkFirewallPolicyApplicationGroupArgs{...} }
type NetworkFirewallPolicyApplicationGroupArrayInput interface {
	pulumi.Input

	ToNetworkFirewallPolicyApplicationGroupArrayOutput() NetworkFirewallPolicyApplicationGroupArrayOutput
	ToNetworkFirewallPolicyApplicationGroupArrayOutputWithContext(context.Context) NetworkFirewallPolicyApplicationGroupArrayOutput
}

type NetworkFirewallPolicyApplicationGroupArray []NetworkFirewallPolicyApplicationGroupInput

func (NetworkFirewallPolicyApplicationGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkFirewallPolicyApplicationGroup)(nil)).Elem()
}

func (i NetworkFirewallPolicyApplicationGroupArray) ToNetworkFirewallPolicyApplicationGroupArrayOutput() NetworkFirewallPolicyApplicationGroupArrayOutput {
	return i.ToNetworkFirewallPolicyApplicationGroupArrayOutputWithContext(context.Background())
}

func (i NetworkFirewallPolicyApplicationGroupArray) ToNetworkFirewallPolicyApplicationGroupArrayOutputWithContext(ctx context.Context) NetworkFirewallPolicyApplicationGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallPolicyApplicationGroupArrayOutput)
}

// NetworkFirewallPolicyApplicationGroupMapInput is an input type that accepts NetworkFirewallPolicyApplicationGroupMap and NetworkFirewallPolicyApplicationGroupMapOutput values.
// You can construct a concrete instance of `NetworkFirewallPolicyApplicationGroupMapInput` via:
//
//	NetworkFirewallPolicyApplicationGroupMap{ "key": NetworkFirewallPolicyApplicationGroupArgs{...} }
type NetworkFirewallPolicyApplicationGroupMapInput interface {
	pulumi.Input

	ToNetworkFirewallPolicyApplicationGroupMapOutput() NetworkFirewallPolicyApplicationGroupMapOutput
	ToNetworkFirewallPolicyApplicationGroupMapOutputWithContext(context.Context) NetworkFirewallPolicyApplicationGroupMapOutput
}

type NetworkFirewallPolicyApplicationGroupMap map[string]NetworkFirewallPolicyApplicationGroupInput

func (NetworkFirewallPolicyApplicationGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkFirewallPolicyApplicationGroup)(nil)).Elem()
}

func (i NetworkFirewallPolicyApplicationGroupMap) ToNetworkFirewallPolicyApplicationGroupMapOutput() NetworkFirewallPolicyApplicationGroupMapOutput {
	return i.ToNetworkFirewallPolicyApplicationGroupMapOutputWithContext(context.Background())
}

func (i NetworkFirewallPolicyApplicationGroupMap) ToNetworkFirewallPolicyApplicationGroupMapOutputWithContext(ctx context.Context) NetworkFirewallPolicyApplicationGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallPolicyApplicationGroupMapOutput)
}

type NetworkFirewallPolicyApplicationGroupOutput struct{ *pulumi.OutputState }

func (NetworkFirewallPolicyApplicationGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkFirewallPolicyApplicationGroup)(nil)).Elem()
}

func (o NetworkFirewallPolicyApplicationGroupOutput) ToNetworkFirewallPolicyApplicationGroupOutput() NetworkFirewallPolicyApplicationGroupOutput {
	return o
}

func (o NetworkFirewallPolicyApplicationGroupOutput) ToNetworkFirewallPolicyApplicationGroupOutputWithContext(ctx context.Context) NetworkFirewallPolicyApplicationGroupOutput {
	return o
}

// (Updatable) Collection of application names. The apps referenced in the application group must already be present in the policy before being used in the application group.
func (o NetworkFirewallPolicyApplicationGroupOutput) Apps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyApplicationGroup) pulumi.StringArrayOutput { return v.Apps }).(pulumi.StringArrayOutput)
}

// Name of the application group.
func (o NetworkFirewallPolicyApplicationGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyApplicationGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Unique Network Firewall Policy identifier
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o NetworkFirewallPolicyApplicationGroupOutput) NetworkFirewallPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyApplicationGroup) pulumi.StringOutput { return v.NetworkFirewallPolicyId }).(pulumi.StringOutput)
}

// OCID of the Network Firewall Policy this application group belongs to.
func (o NetworkFirewallPolicyApplicationGroupOutput) ParentResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyApplicationGroup) pulumi.StringOutput { return v.ParentResourceId }).(pulumi.StringOutput)
}

// Count of total applications in the given application group.
func (o NetworkFirewallPolicyApplicationGroupOutput) TotalApps() pulumi.IntOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyApplicationGroup) pulumi.IntOutput { return v.TotalApps }).(pulumi.IntOutput)
}

type NetworkFirewallPolicyApplicationGroupArrayOutput struct{ *pulumi.OutputState }

func (NetworkFirewallPolicyApplicationGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkFirewallPolicyApplicationGroup)(nil)).Elem()
}

func (o NetworkFirewallPolicyApplicationGroupArrayOutput) ToNetworkFirewallPolicyApplicationGroupArrayOutput() NetworkFirewallPolicyApplicationGroupArrayOutput {
	return o
}

func (o NetworkFirewallPolicyApplicationGroupArrayOutput) ToNetworkFirewallPolicyApplicationGroupArrayOutputWithContext(ctx context.Context) NetworkFirewallPolicyApplicationGroupArrayOutput {
	return o
}

func (o NetworkFirewallPolicyApplicationGroupArrayOutput) Index(i pulumi.IntInput) NetworkFirewallPolicyApplicationGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkFirewallPolicyApplicationGroup {
		return vs[0].([]*NetworkFirewallPolicyApplicationGroup)[vs[1].(int)]
	}).(NetworkFirewallPolicyApplicationGroupOutput)
}

type NetworkFirewallPolicyApplicationGroupMapOutput struct{ *pulumi.OutputState }

func (NetworkFirewallPolicyApplicationGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkFirewallPolicyApplicationGroup)(nil)).Elem()
}

func (o NetworkFirewallPolicyApplicationGroupMapOutput) ToNetworkFirewallPolicyApplicationGroupMapOutput() NetworkFirewallPolicyApplicationGroupMapOutput {
	return o
}

func (o NetworkFirewallPolicyApplicationGroupMapOutput) ToNetworkFirewallPolicyApplicationGroupMapOutputWithContext(ctx context.Context) NetworkFirewallPolicyApplicationGroupMapOutput {
	return o
}

func (o NetworkFirewallPolicyApplicationGroupMapOutput) MapIndex(k pulumi.StringInput) NetworkFirewallPolicyApplicationGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkFirewallPolicyApplicationGroup {
		return vs[0].(map[string]*NetworkFirewallPolicyApplicationGroup)[vs[1].(string)]
	}).(NetworkFirewallPolicyApplicationGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkFirewallPolicyApplicationGroupInput)(nil)).Elem(), &NetworkFirewallPolicyApplicationGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkFirewallPolicyApplicationGroupArrayInput)(nil)).Elem(), NetworkFirewallPolicyApplicationGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkFirewallPolicyApplicationGroupMapInput)(nil)).Elem(), NetworkFirewallPolicyApplicationGroupMap{})
	pulumi.RegisterOutputType(NetworkFirewallPolicyApplicationGroupOutput{})
	pulumi.RegisterOutputType(NetworkFirewallPolicyApplicationGroupArrayOutput{})
	pulumi.RegisterOutputType(NetworkFirewallPolicyApplicationGroupMapOutput{})
}
