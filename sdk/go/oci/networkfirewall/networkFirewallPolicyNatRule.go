// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkfirewall

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Network Firewall Policy Nat Rule resource in Oracle Cloud Infrastructure Network Firewall service.
//
// Creates a new NAT Rule for the Network Firewall Policy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/networkfirewall"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := networkfirewall.NewNetworkFirewallPolicyNatRule(ctx, "test_network_firewall_policy_nat_rule", &networkfirewall.NetworkFirewallPolicyNatRuleArgs{
//				Action: pulumi.Any(networkFirewallPolicyNatRuleAction),
//				Condition: &networkfirewall.NetworkFirewallPolicyNatRuleConditionArgs{
//					DestinationAddresses: pulumi.Any(networkFirewallPolicyNatRuleConditionDestinationAddress),
//					Service:              pulumi.Any(networkFirewallPolicyNatRuleConditionService),
//					SourceAddresses:      pulumi.Any(networkFirewallPolicyNatRuleConditionSourceAddress),
//				},
//				Name:                    pulumi.Any(networkFirewallPolicyNatRuleName),
//				NetworkFirewallPolicyId: pulumi.Any(testNetworkFirewallPolicy.Id),
//				Type:                    pulumi.Any(networkFirewallPolicyNatRuleType),
//				Description:             pulumi.Any(networkFirewallPolicyNatRuleDescription),
//				Position: &networkfirewall.NetworkFirewallPolicyNatRulePositionArgs{
//					AfterRule:  pulumi.Any(networkFirewallPolicyNatRulePositionAfterRule),
//					BeforeRule: pulumi.Any(networkFirewallPolicyNatRulePositionBeforeRule),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// NetworkFirewallPolicyNatRules can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:NetworkFirewall/networkFirewallPolicyNatRule:NetworkFirewallPolicyNatRule test_network_firewall_policy_nat_rule "networkFirewallPolicies/{networkFirewallPolicyId}/natRules/{natRuleName}"
// ```
type NetworkFirewallPolicyNatRule struct {
	pulumi.CustomResourceState

	// (Updatable) action:
	// * DIPP_SRC_NAT - Dynamic-ip-port source NAT.
	Action pulumi.StringOutput `pulumi:"action"`
	// (Updatable) Match criteria used in NAT Rule used on the firewall policy.
	Condition NetworkFirewallPolicyNatRuleConditionOutput `pulumi:"condition"`
	// (Updatable) Description of a NAT rule. This field can be used to add additional info.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Name for the NAT rule, must be unique within the policy.
	Name pulumi.StringOutput `pulumi:"name"`
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId pulumi.StringOutput `pulumi:"networkFirewallPolicyId"`
	// OCID of the Network Firewall Policy this decryption profile belongs to.
	ParentResourceId pulumi.StringOutput `pulumi:"parentResourceId"`
	// (Updatable) An object which defines the position of the rule.
	Position NetworkFirewallPolicyNatRulePositionOutput `pulumi:"position"`
	// The priority order in which this rule should be evaluated
	PriorityOrder pulumi.StringOutput `pulumi:"priorityOrder"`
	// (Updatable) NAT type:
	// * NATV4 - NATV4 type NAT.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewNetworkFirewallPolicyNatRule registers a new resource with the given unique name, arguments, and options.
func NewNetworkFirewallPolicyNatRule(ctx *pulumi.Context,
	name string, args *NetworkFirewallPolicyNatRuleArgs, opts ...pulumi.ResourceOption) (*NetworkFirewallPolicyNatRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Action == nil {
		return nil, errors.New("invalid value for required argument 'Action'")
	}
	if args.Condition == nil {
		return nil, errors.New("invalid value for required argument 'Condition'")
	}
	if args.NetworkFirewallPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkFirewallPolicyId'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkFirewallPolicyNatRule
	err := ctx.RegisterResource("oci:NetworkFirewall/networkFirewallPolicyNatRule:NetworkFirewallPolicyNatRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkFirewallPolicyNatRule gets an existing NetworkFirewallPolicyNatRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkFirewallPolicyNatRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkFirewallPolicyNatRuleState, opts ...pulumi.ResourceOption) (*NetworkFirewallPolicyNatRule, error) {
	var resource NetworkFirewallPolicyNatRule
	err := ctx.ReadResource("oci:NetworkFirewall/networkFirewallPolicyNatRule:NetworkFirewallPolicyNatRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkFirewallPolicyNatRule resources.
type networkFirewallPolicyNatRuleState struct {
	// (Updatable) action:
	// * DIPP_SRC_NAT - Dynamic-ip-port source NAT.
	Action *string `pulumi:"action"`
	// (Updatable) Match criteria used in NAT Rule used on the firewall policy.
	Condition *NetworkFirewallPolicyNatRuleCondition `pulumi:"condition"`
	// (Updatable) Description of a NAT rule. This field can be used to add additional info.
	Description *string `pulumi:"description"`
	// Name for the NAT rule, must be unique within the policy.
	Name *string `pulumi:"name"`
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId *string `pulumi:"networkFirewallPolicyId"`
	// OCID of the Network Firewall Policy this decryption profile belongs to.
	ParentResourceId *string `pulumi:"parentResourceId"`
	// (Updatable) An object which defines the position of the rule.
	Position *NetworkFirewallPolicyNatRulePosition `pulumi:"position"`
	// The priority order in which this rule should be evaluated
	PriorityOrder *string `pulumi:"priorityOrder"`
	// (Updatable) NAT type:
	// * NATV4 - NATV4 type NAT.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Type *string `pulumi:"type"`
}

type NetworkFirewallPolicyNatRuleState struct {
	// (Updatable) action:
	// * DIPP_SRC_NAT - Dynamic-ip-port source NAT.
	Action pulumi.StringPtrInput
	// (Updatable) Match criteria used in NAT Rule used on the firewall policy.
	Condition NetworkFirewallPolicyNatRuleConditionPtrInput
	// (Updatable) Description of a NAT rule. This field can be used to add additional info.
	Description pulumi.StringPtrInput
	// Name for the NAT rule, must be unique within the policy.
	Name pulumi.StringPtrInput
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId pulumi.StringPtrInput
	// OCID of the Network Firewall Policy this decryption profile belongs to.
	ParentResourceId pulumi.StringPtrInput
	// (Updatable) An object which defines the position of the rule.
	Position NetworkFirewallPolicyNatRulePositionPtrInput
	// The priority order in which this rule should be evaluated
	PriorityOrder pulumi.StringPtrInput
	// (Updatable) NAT type:
	// * NATV4 - NATV4 type NAT.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Type pulumi.StringPtrInput
}

func (NetworkFirewallPolicyNatRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkFirewallPolicyNatRuleState)(nil)).Elem()
}

type networkFirewallPolicyNatRuleArgs struct {
	// (Updatable) action:
	// * DIPP_SRC_NAT - Dynamic-ip-port source NAT.
	Action string `pulumi:"action"`
	// (Updatable) Match criteria used in NAT Rule used on the firewall policy.
	Condition NetworkFirewallPolicyNatRuleCondition `pulumi:"condition"`
	// (Updatable) Description of a NAT rule. This field can be used to add additional info.
	Description *string `pulumi:"description"`
	// Name for the NAT rule, must be unique within the policy.
	Name *string `pulumi:"name"`
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId string `pulumi:"networkFirewallPolicyId"`
	// (Updatable) An object which defines the position of the rule.
	Position *NetworkFirewallPolicyNatRulePosition `pulumi:"position"`
	// (Updatable) NAT type:
	// * NATV4 - NATV4 type NAT.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a NetworkFirewallPolicyNatRule resource.
type NetworkFirewallPolicyNatRuleArgs struct {
	// (Updatable) action:
	// * DIPP_SRC_NAT - Dynamic-ip-port source NAT.
	Action pulumi.StringInput
	// (Updatable) Match criteria used in NAT Rule used on the firewall policy.
	Condition NetworkFirewallPolicyNatRuleConditionInput
	// (Updatable) Description of a NAT rule. This field can be used to add additional info.
	Description pulumi.StringPtrInput
	// Name for the NAT rule, must be unique within the policy.
	Name pulumi.StringPtrInput
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId pulumi.StringInput
	// (Updatable) An object which defines the position of the rule.
	Position NetworkFirewallPolicyNatRulePositionPtrInput
	// (Updatable) NAT type:
	// * NATV4 - NATV4 type NAT.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Type pulumi.StringInput
}

func (NetworkFirewallPolicyNatRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkFirewallPolicyNatRuleArgs)(nil)).Elem()
}

type NetworkFirewallPolicyNatRuleInput interface {
	pulumi.Input

	ToNetworkFirewallPolicyNatRuleOutput() NetworkFirewallPolicyNatRuleOutput
	ToNetworkFirewallPolicyNatRuleOutputWithContext(ctx context.Context) NetworkFirewallPolicyNatRuleOutput
}

func (*NetworkFirewallPolicyNatRule) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkFirewallPolicyNatRule)(nil)).Elem()
}

func (i *NetworkFirewallPolicyNatRule) ToNetworkFirewallPolicyNatRuleOutput() NetworkFirewallPolicyNatRuleOutput {
	return i.ToNetworkFirewallPolicyNatRuleOutputWithContext(context.Background())
}

func (i *NetworkFirewallPolicyNatRule) ToNetworkFirewallPolicyNatRuleOutputWithContext(ctx context.Context) NetworkFirewallPolicyNatRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallPolicyNatRuleOutput)
}

// NetworkFirewallPolicyNatRuleArrayInput is an input type that accepts NetworkFirewallPolicyNatRuleArray and NetworkFirewallPolicyNatRuleArrayOutput values.
// You can construct a concrete instance of `NetworkFirewallPolicyNatRuleArrayInput` via:
//
//	NetworkFirewallPolicyNatRuleArray{ NetworkFirewallPolicyNatRuleArgs{...} }
type NetworkFirewallPolicyNatRuleArrayInput interface {
	pulumi.Input

	ToNetworkFirewallPolicyNatRuleArrayOutput() NetworkFirewallPolicyNatRuleArrayOutput
	ToNetworkFirewallPolicyNatRuleArrayOutputWithContext(context.Context) NetworkFirewallPolicyNatRuleArrayOutput
}

type NetworkFirewallPolicyNatRuleArray []NetworkFirewallPolicyNatRuleInput

func (NetworkFirewallPolicyNatRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkFirewallPolicyNatRule)(nil)).Elem()
}

func (i NetworkFirewallPolicyNatRuleArray) ToNetworkFirewallPolicyNatRuleArrayOutput() NetworkFirewallPolicyNatRuleArrayOutput {
	return i.ToNetworkFirewallPolicyNatRuleArrayOutputWithContext(context.Background())
}

func (i NetworkFirewallPolicyNatRuleArray) ToNetworkFirewallPolicyNatRuleArrayOutputWithContext(ctx context.Context) NetworkFirewallPolicyNatRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallPolicyNatRuleArrayOutput)
}

// NetworkFirewallPolicyNatRuleMapInput is an input type that accepts NetworkFirewallPolicyNatRuleMap and NetworkFirewallPolicyNatRuleMapOutput values.
// You can construct a concrete instance of `NetworkFirewallPolicyNatRuleMapInput` via:
//
//	NetworkFirewallPolicyNatRuleMap{ "key": NetworkFirewallPolicyNatRuleArgs{...} }
type NetworkFirewallPolicyNatRuleMapInput interface {
	pulumi.Input

	ToNetworkFirewallPolicyNatRuleMapOutput() NetworkFirewallPolicyNatRuleMapOutput
	ToNetworkFirewallPolicyNatRuleMapOutputWithContext(context.Context) NetworkFirewallPolicyNatRuleMapOutput
}

type NetworkFirewallPolicyNatRuleMap map[string]NetworkFirewallPolicyNatRuleInput

func (NetworkFirewallPolicyNatRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkFirewallPolicyNatRule)(nil)).Elem()
}

func (i NetworkFirewallPolicyNatRuleMap) ToNetworkFirewallPolicyNatRuleMapOutput() NetworkFirewallPolicyNatRuleMapOutput {
	return i.ToNetworkFirewallPolicyNatRuleMapOutputWithContext(context.Background())
}

func (i NetworkFirewallPolicyNatRuleMap) ToNetworkFirewallPolicyNatRuleMapOutputWithContext(ctx context.Context) NetworkFirewallPolicyNatRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallPolicyNatRuleMapOutput)
}

type NetworkFirewallPolicyNatRuleOutput struct{ *pulumi.OutputState }

func (NetworkFirewallPolicyNatRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkFirewallPolicyNatRule)(nil)).Elem()
}

func (o NetworkFirewallPolicyNatRuleOutput) ToNetworkFirewallPolicyNatRuleOutput() NetworkFirewallPolicyNatRuleOutput {
	return o
}

func (o NetworkFirewallPolicyNatRuleOutput) ToNetworkFirewallPolicyNatRuleOutputWithContext(ctx context.Context) NetworkFirewallPolicyNatRuleOutput {
	return o
}

// (Updatable) action:
// * DIPP_SRC_NAT - Dynamic-ip-port source NAT.
func (o NetworkFirewallPolicyNatRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyNatRule) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

// (Updatable) Match criteria used in NAT Rule used on the firewall policy.
func (o NetworkFirewallPolicyNatRuleOutput) Condition() NetworkFirewallPolicyNatRuleConditionOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyNatRule) NetworkFirewallPolicyNatRuleConditionOutput { return v.Condition }).(NetworkFirewallPolicyNatRuleConditionOutput)
}

// (Updatable) Description of a NAT rule. This field can be used to add additional info.
func (o NetworkFirewallPolicyNatRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyNatRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Name for the NAT rule, must be unique within the policy.
func (o NetworkFirewallPolicyNatRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyNatRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Unique Network Firewall Policy identifier
func (o NetworkFirewallPolicyNatRuleOutput) NetworkFirewallPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyNatRule) pulumi.StringOutput { return v.NetworkFirewallPolicyId }).(pulumi.StringOutput)
}

// OCID of the Network Firewall Policy this decryption profile belongs to.
func (o NetworkFirewallPolicyNatRuleOutput) ParentResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyNatRule) pulumi.StringOutput { return v.ParentResourceId }).(pulumi.StringOutput)
}

// (Updatable) An object which defines the position of the rule.
func (o NetworkFirewallPolicyNatRuleOutput) Position() NetworkFirewallPolicyNatRulePositionOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyNatRule) NetworkFirewallPolicyNatRulePositionOutput { return v.Position }).(NetworkFirewallPolicyNatRulePositionOutput)
}

// The priority order in which this rule should be evaluated
func (o NetworkFirewallPolicyNatRuleOutput) PriorityOrder() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyNatRule) pulumi.StringOutput { return v.PriorityOrder }).(pulumi.StringOutput)
}

// (Updatable) NAT type:
// * NATV4 - NATV4 type NAT.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o NetworkFirewallPolicyNatRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyNatRule) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type NetworkFirewallPolicyNatRuleArrayOutput struct{ *pulumi.OutputState }

func (NetworkFirewallPolicyNatRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkFirewallPolicyNatRule)(nil)).Elem()
}

func (o NetworkFirewallPolicyNatRuleArrayOutput) ToNetworkFirewallPolicyNatRuleArrayOutput() NetworkFirewallPolicyNatRuleArrayOutput {
	return o
}

func (o NetworkFirewallPolicyNatRuleArrayOutput) ToNetworkFirewallPolicyNatRuleArrayOutputWithContext(ctx context.Context) NetworkFirewallPolicyNatRuleArrayOutput {
	return o
}

func (o NetworkFirewallPolicyNatRuleArrayOutput) Index(i pulumi.IntInput) NetworkFirewallPolicyNatRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkFirewallPolicyNatRule {
		return vs[0].([]*NetworkFirewallPolicyNatRule)[vs[1].(int)]
	}).(NetworkFirewallPolicyNatRuleOutput)
}

type NetworkFirewallPolicyNatRuleMapOutput struct{ *pulumi.OutputState }

func (NetworkFirewallPolicyNatRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkFirewallPolicyNatRule)(nil)).Elem()
}

func (o NetworkFirewallPolicyNatRuleMapOutput) ToNetworkFirewallPolicyNatRuleMapOutput() NetworkFirewallPolicyNatRuleMapOutput {
	return o
}

func (o NetworkFirewallPolicyNatRuleMapOutput) ToNetworkFirewallPolicyNatRuleMapOutputWithContext(ctx context.Context) NetworkFirewallPolicyNatRuleMapOutput {
	return o
}

func (o NetworkFirewallPolicyNatRuleMapOutput) MapIndex(k pulumi.StringInput) NetworkFirewallPolicyNatRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkFirewallPolicyNatRule {
		return vs[0].(map[string]*NetworkFirewallPolicyNatRule)[vs[1].(string)]
	}).(NetworkFirewallPolicyNatRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkFirewallPolicyNatRuleInput)(nil)).Elem(), &NetworkFirewallPolicyNatRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkFirewallPolicyNatRuleArrayInput)(nil)).Elem(), NetworkFirewallPolicyNatRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkFirewallPolicyNatRuleMapInput)(nil)).Elem(), NetworkFirewallPolicyNatRuleMap{})
	pulumi.RegisterOutputType(NetworkFirewallPolicyNatRuleOutput{})
	pulumi.RegisterOutputType(NetworkFirewallPolicyNatRuleArrayOutput{})
	pulumi.RegisterOutputType(NetworkFirewallPolicyNatRuleMapOutput{})
}
