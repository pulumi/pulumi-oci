// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkfirewall

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Network Firewall Policy Service resource in Oracle Cloud Infrastructure Network Firewall service.
//
// Creates a new Service for the Network Firewall Policy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/networkfirewall"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := networkfirewall.NewNetworkFirewallPolicyService(ctx, "test_network_firewall_policy_service", &networkfirewall.NetworkFirewallPolicyServiceArgs{
//				Name:                    pulumi.Any(networkFirewallPolicyServiceName),
//				NetworkFirewallPolicyId: pulumi.Any(testNetworkFirewallPolicy.Id),
//				PortRanges: networkfirewall.NetworkFirewallPolicyServicePortRangeArray{
//					&networkfirewall.NetworkFirewallPolicyServicePortRangeArgs{
//						MinimumPort: pulumi.Any(networkFirewallPolicyServicePortRangesMinimumPort),
//						MaximumPort: pulumi.Any(networkFirewallPolicyServicePortRangesMaximumPort),
//					},
//				},
//				Type: pulumi.Any(networkFirewallPolicyServiceType),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// NetworkFirewallPolicyServices can be imported using the `name`, e.g.
//
// ```sh
// $ pulumi import oci:NetworkFirewall/networkFirewallPolicyService:NetworkFirewallPolicyService test_network_firewall_policy_service "networkFirewallPolicies/{networkFirewallPolicyId}/services/{serviceName}"
// ```
type NetworkFirewallPolicyService struct {
	pulumi.CustomResourceState

	// Name of the service
	Name pulumi.StringOutput `pulumi:"name"`
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId pulumi.StringOutput `pulumi:"networkFirewallPolicyId"`
	// OCID of the Network Firewall Policy this service belongs to.
	ParentResourceId pulumi.StringOutput `pulumi:"parentResourceId"`
	// (Updatable) List of port-ranges to be used.
	PortRanges NetworkFirewallPolicyServicePortRangeArrayOutput `pulumi:"portRanges"`
	// Describes the type of Service. The accepted values are
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewNetworkFirewallPolicyService registers a new resource with the given unique name, arguments, and options.
func NewNetworkFirewallPolicyService(ctx *pulumi.Context,
	name string, args *NetworkFirewallPolicyServiceArgs, opts ...pulumi.ResourceOption) (*NetworkFirewallPolicyService, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkFirewallPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkFirewallPolicyId'")
	}
	if args.PortRanges == nil {
		return nil, errors.New("invalid value for required argument 'PortRanges'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkFirewallPolicyService
	err := ctx.RegisterResource("oci:NetworkFirewall/networkFirewallPolicyService:NetworkFirewallPolicyService", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkFirewallPolicyService gets an existing NetworkFirewallPolicyService resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkFirewallPolicyService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkFirewallPolicyServiceState, opts ...pulumi.ResourceOption) (*NetworkFirewallPolicyService, error) {
	var resource NetworkFirewallPolicyService
	err := ctx.ReadResource("oci:NetworkFirewall/networkFirewallPolicyService:NetworkFirewallPolicyService", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkFirewallPolicyService resources.
type networkFirewallPolicyServiceState struct {
	// Name of the service
	Name *string `pulumi:"name"`
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId *string `pulumi:"networkFirewallPolicyId"`
	// OCID of the Network Firewall Policy this service belongs to.
	ParentResourceId *string `pulumi:"parentResourceId"`
	// (Updatable) List of port-ranges to be used.
	PortRanges []NetworkFirewallPolicyServicePortRange `pulumi:"portRanges"`
	// Describes the type of Service. The accepted values are
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Type *string `pulumi:"type"`
}

type NetworkFirewallPolicyServiceState struct {
	// Name of the service
	Name pulumi.StringPtrInput
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId pulumi.StringPtrInput
	// OCID of the Network Firewall Policy this service belongs to.
	ParentResourceId pulumi.StringPtrInput
	// (Updatable) List of port-ranges to be used.
	PortRanges NetworkFirewallPolicyServicePortRangeArrayInput
	// Describes the type of Service. The accepted values are
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Type pulumi.StringPtrInput
}

func (NetworkFirewallPolicyServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkFirewallPolicyServiceState)(nil)).Elem()
}

type networkFirewallPolicyServiceArgs struct {
	// Name of the service
	Name *string `pulumi:"name"`
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId string `pulumi:"networkFirewallPolicyId"`
	// (Updatable) List of port-ranges to be used.
	PortRanges []NetworkFirewallPolicyServicePortRange `pulumi:"portRanges"`
	// Describes the type of Service. The accepted values are
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a NetworkFirewallPolicyService resource.
type NetworkFirewallPolicyServiceArgs struct {
	// Name of the service
	Name pulumi.StringPtrInput
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId pulumi.StringInput
	// (Updatable) List of port-ranges to be used.
	PortRanges NetworkFirewallPolicyServicePortRangeArrayInput
	// Describes the type of Service. The accepted values are
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Type pulumi.StringInput
}

func (NetworkFirewallPolicyServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkFirewallPolicyServiceArgs)(nil)).Elem()
}

type NetworkFirewallPolicyServiceInput interface {
	pulumi.Input

	ToNetworkFirewallPolicyServiceOutput() NetworkFirewallPolicyServiceOutput
	ToNetworkFirewallPolicyServiceOutputWithContext(ctx context.Context) NetworkFirewallPolicyServiceOutput
}

func (*NetworkFirewallPolicyService) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkFirewallPolicyService)(nil)).Elem()
}

func (i *NetworkFirewallPolicyService) ToNetworkFirewallPolicyServiceOutput() NetworkFirewallPolicyServiceOutput {
	return i.ToNetworkFirewallPolicyServiceOutputWithContext(context.Background())
}

func (i *NetworkFirewallPolicyService) ToNetworkFirewallPolicyServiceOutputWithContext(ctx context.Context) NetworkFirewallPolicyServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallPolicyServiceOutput)
}

// NetworkFirewallPolicyServiceArrayInput is an input type that accepts NetworkFirewallPolicyServiceArray and NetworkFirewallPolicyServiceArrayOutput values.
// You can construct a concrete instance of `NetworkFirewallPolicyServiceArrayInput` via:
//
//	NetworkFirewallPolicyServiceArray{ NetworkFirewallPolicyServiceArgs{...} }
type NetworkFirewallPolicyServiceArrayInput interface {
	pulumi.Input

	ToNetworkFirewallPolicyServiceArrayOutput() NetworkFirewallPolicyServiceArrayOutput
	ToNetworkFirewallPolicyServiceArrayOutputWithContext(context.Context) NetworkFirewallPolicyServiceArrayOutput
}

type NetworkFirewallPolicyServiceArray []NetworkFirewallPolicyServiceInput

func (NetworkFirewallPolicyServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkFirewallPolicyService)(nil)).Elem()
}

func (i NetworkFirewallPolicyServiceArray) ToNetworkFirewallPolicyServiceArrayOutput() NetworkFirewallPolicyServiceArrayOutput {
	return i.ToNetworkFirewallPolicyServiceArrayOutputWithContext(context.Background())
}

func (i NetworkFirewallPolicyServiceArray) ToNetworkFirewallPolicyServiceArrayOutputWithContext(ctx context.Context) NetworkFirewallPolicyServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallPolicyServiceArrayOutput)
}

// NetworkFirewallPolicyServiceMapInput is an input type that accepts NetworkFirewallPolicyServiceMap and NetworkFirewallPolicyServiceMapOutput values.
// You can construct a concrete instance of `NetworkFirewallPolicyServiceMapInput` via:
//
//	NetworkFirewallPolicyServiceMap{ "key": NetworkFirewallPolicyServiceArgs{...} }
type NetworkFirewallPolicyServiceMapInput interface {
	pulumi.Input

	ToNetworkFirewallPolicyServiceMapOutput() NetworkFirewallPolicyServiceMapOutput
	ToNetworkFirewallPolicyServiceMapOutputWithContext(context.Context) NetworkFirewallPolicyServiceMapOutput
}

type NetworkFirewallPolicyServiceMap map[string]NetworkFirewallPolicyServiceInput

func (NetworkFirewallPolicyServiceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkFirewallPolicyService)(nil)).Elem()
}

func (i NetworkFirewallPolicyServiceMap) ToNetworkFirewallPolicyServiceMapOutput() NetworkFirewallPolicyServiceMapOutput {
	return i.ToNetworkFirewallPolicyServiceMapOutputWithContext(context.Background())
}

func (i NetworkFirewallPolicyServiceMap) ToNetworkFirewallPolicyServiceMapOutputWithContext(ctx context.Context) NetworkFirewallPolicyServiceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallPolicyServiceMapOutput)
}

type NetworkFirewallPolicyServiceOutput struct{ *pulumi.OutputState }

func (NetworkFirewallPolicyServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkFirewallPolicyService)(nil)).Elem()
}

func (o NetworkFirewallPolicyServiceOutput) ToNetworkFirewallPolicyServiceOutput() NetworkFirewallPolicyServiceOutput {
	return o
}

func (o NetworkFirewallPolicyServiceOutput) ToNetworkFirewallPolicyServiceOutputWithContext(ctx context.Context) NetworkFirewallPolicyServiceOutput {
	return o
}

// Name of the service
func (o NetworkFirewallPolicyServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyService) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Unique Network Firewall Policy identifier
func (o NetworkFirewallPolicyServiceOutput) NetworkFirewallPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyService) pulumi.StringOutput { return v.NetworkFirewallPolicyId }).(pulumi.StringOutput)
}

// OCID of the Network Firewall Policy this service belongs to.
func (o NetworkFirewallPolicyServiceOutput) ParentResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyService) pulumi.StringOutput { return v.ParentResourceId }).(pulumi.StringOutput)
}

// (Updatable) List of port-ranges to be used.
func (o NetworkFirewallPolicyServiceOutput) PortRanges() NetworkFirewallPolicyServicePortRangeArrayOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyService) NetworkFirewallPolicyServicePortRangeArrayOutput {
		return v.PortRanges
	}).(NetworkFirewallPolicyServicePortRangeArrayOutput)
}

// Describes the type of Service. The accepted values are
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o NetworkFirewallPolicyServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyService) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type NetworkFirewallPolicyServiceArrayOutput struct{ *pulumi.OutputState }

func (NetworkFirewallPolicyServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkFirewallPolicyService)(nil)).Elem()
}

func (o NetworkFirewallPolicyServiceArrayOutput) ToNetworkFirewallPolicyServiceArrayOutput() NetworkFirewallPolicyServiceArrayOutput {
	return o
}

func (o NetworkFirewallPolicyServiceArrayOutput) ToNetworkFirewallPolicyServiceArrayOutputWithContext(ctx context.Context) NetworkFirewallPolicyServiceArrayOutput {
	return o
}

func (o NetworkFirewallPolicyServiceArrayOutput) Index(i pulumi.IntInput) NetworkFirewallPolicyServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkFirewallPolicyService {
		return vs[0].([]*NetworkFirewallPolicyService)[vs[1].(int)]
	}).(NetworkFirewallPolicyServiceOutput)
}

type NetworkFirewallPolicyServiceMapOutput struct{ *pulumi.OutputState }

func (NetworkFirewallPolicyServiceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkFirewallPolicyService)(nil)).Elem()
}

func (o NetworkFirewallPolicyServiceMapOutput) ToNetworkFirewallPolicyServiceMapOutput() NetworkFirewallPolicyServiceMapOutput {
	return o
}

func (o NetworkFirewallPolicyServiceMapOutput) ToNetworkFirewallPolicyServiceMapOutputWithContext(ctx context.Context) NetworkFirewallPolicyServiceMapOutput {
	return o
}

func (o NetworkFirewallPolicyServiceMapOutput) MapIndex(k pulumi.StringInput) NetworkFirewallPolicyServiceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkFirewallPolicyService {
		return vs[0].(map[string]*NetworkFirewallPolicyService)[vs[1].(string)]
	}).(NetworkFirewallPolicyServiceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkFirewallPolicyServiceInput)(nil)).Elem(), &NetworkFirewallPolicyService{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkFirewallPolicyServiceArrayInput)(nil)).Elem(), NetworkFirewallPolicyServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkFirewallPolicyServiceMapInput)(nil)).Elem(), NetworkFirewallPolicyServiceMap{})
	pulumi.RegisterOutputType(NetworkFirewallPolicyServiceOutput{})
	pulumi.RegisterOutputType(NetworkFirewallPolicyServiceArrayOutput{})
	pulumi.RegisterOutputType(NetworkFirewallPolicyServiceMapOutput{})
}
