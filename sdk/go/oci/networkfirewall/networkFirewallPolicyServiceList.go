// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkfirewall

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Network Firewall Policy Service List resource in Oracle Cloud Infrastructure Network Firewall service.
//
// Creates a new ServiceList for the Network Firewall Policy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/networkfirewall"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := networkfirewall.NewNetworkFirewallPolicyServiceList(ctx, "test_network_firewall_policy_service_list", &networkfirewall.NetworkFirewallPolicyServiceListArgs{
//				Name:                    pulumi.Any(networkFirewallPolicyServiceListName),
//				NetworkFirewallPolicyId: pulumi.Any(testNetworkFirewallPolicy.Id),
//				Services:                pulumi.Any(networkFirewallPolicyServiceListServices),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// NetworkFirewallPolicyServiceLists can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:NetworkFirewall/networkFirewallPolicyServiceList:NetworkFirewallPolicyServiceList test_network_firewall_policy_service_list "networkFirewallPolicies/{networkFirewallPolicyId}/serviceLists/{serviceListName}"
// ```
type NetworkFirewallPolicyServiceList struct {
	pulumi.CustomResourceState

	// Name of the service Group.
	Name pulumi.StringOutput `pulumi:"name"`
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId pulumi.StringOutput `pulumi:"networkFirewallPolicyId"`
	// OCID of the Network Firewall Policy this serviceList belongs to.
	ParentResourceId pulumi.StringOutput `pulumi:"parentResourceId"`
	// (Updatable) Collection of service names. The services referenced in the service list must already be present in the policy before being used in the service list.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Services pulumi.StringArrayOutput `pulumi:"services"`
	// Count of total services in the given service List.
	TotalServices pulumi.IntOutput `pulumi:"totalServices"`
}

// NewNetworkFirewallPolicyServiceList registers a new resource with the given unique name, arguments, and options.
func NewNetworkFirewallPolicyServiceList(ctx *pulumi.Context,
	name string, args *NetworkFirewallPolicyServiceListArgs, opts ...pulumi.ResourceOption) (*NetworkFirewallPolicyServiceList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkFirewallPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkFirewallPolicyId'")
	}
	if args.Services == nil {
		return nil, errors.New("invalid value for required argument 'Services'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkFirewallPolicyServiceList
	err := ctx.RegisterResource("oci:NetworkFirewall/networkFirewallPolicyServiceList:NetworkFirewallPolicyServiceList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkFirewallPolicyServiceList gets an existing NetworkFirewallPolicyServiceList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkFirewallPolicyServiceList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkFirewallPolicyServiceListState, opts ...pulumi.ResourceOption) (*NetworkFirewallPolicyServiceList, error) {
	var resource NetworkFirewallPolicyServiceList
	err := ctx.ReadResource("oci:NetworkFirewall/networkFirewallPolicyServiceList:NetworkFirewallPolicyServiceList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkFirewallPolicyServiceList resources.
type networkFirewallPolicyServiceListState struct {
	// Name of the service Group.
	Name *string `pulumi:"name"`
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId *string `pulumi:"networkFirewallPolicyId"`
	// OCID of the Network Firewall Policy this serviceList belongs to.
	ParentResourceId *string `pulumi:"parentResourceId"`
	// (Updatable) Collection of service names. The services referenced in the service list must already be present in the policy before being used in the service list.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Services []string `pulumi:"services"`
	// Count of total services in the given service List.
	TotalServices *int `pulumi:"totalServices"`
}

type NetworkFirewallPolicyServiceListState struct {
	// Name of the service Group.
	Name pulumi.StringPtrInput
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId pulumi.StringPtrInput
	// OCID of the Network Firewall Policy this serviceList belongs to.
	ParentResourceId pulumi.StringPtrInput
	// (Updatable) Collection of service names. The services referenced in the service list must already be present in the policy before being used in the service list.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Services pulumi.StringArrayInput
	// Count of total services in the given service List.
	TotalServices pulumi.IntPtrInput
}

func (NetworkFirewallPolicyServiceListState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkFirewallPolicyServiceListState)(nil)).Elem()
}

type networkFirewallPolicyServiceListArgs struct {
	// Name of the service Group.
	Name *string `pulumi:"name"`
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId string `pulumi:"networkFirewallPolicyId"`
	// (Updatable) Collection of service names. The services referenced in the service list must already be present in the policy before being used in the service list.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Services []string `pulumi:"services"`
}

// The set of arguments for constructing a NetworkFirewallPolicyServiceList resource.
type NetworkFirewallPolicyServiceListArgs struct {
	// Name of the service Group.
	Name pulumi.StringPtrInput
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId pulumi.StringInput
	// (Updatable) Collection of service names. The services referenced in the service list must already be present in the policy before being used in the service list.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Services pulumi.StringArrayInput
}

func (NetworkFirewallPolicyServiceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkFirewallPolicyServiceListArgs)(nil)).Elem()
}

type NetworkFirewallPolicyServiceListInput interface {
	pulumi.Input

	ToNetworkFirewallPolicyServiceListOutput() NetworkFirewallPolicyServiceListOutput
	ToNetworkFirewallPolicyServiceListOutputWithContext(ctx context.Context) NetworkFirewallPolicyServiceListOutput
}

func (*NetworkFirewallPolicyServiceList) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkFirewallPolicyServiceList)(nil)).Elem()
}

func (i *NetworkFirewallPolicyServiceList) ToNetworkFirewallPolicyServiceListOutput() NetworkFirewallPolicyServiceListOutput {
	return i.ToNetworkFirewallPolicyServiceListOutputWithContext(context.Background())
}

func (i *NetworkFirewallPolicyServiceList) ToNetworkFirewallPolicyServiceListOutputWithContext(ctx context.Context) NetworkFirewallPolicyServiceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallPolicyServiceListOutput)
}

// NetworkFirewallPolicyServiceListArrayInput is an input type that accepts NetworkFirewallPolicyServiceListArray and NetworkFirewallPolicyServiceListArrayOutput values.
// You can construct a concrete instance of `NetworkFirewallPolicyServiceListArrayInput` via:
//
//	NetworkFirewallPolicyServiceListArray{ NetworkFirewallPolicyServiceListArgs{...} }
type NetworkFirewallPolicyServiceListArrayInput interface {
	pulumi.Input

	ToNetworkFirewallPolicyServiceListArrayOutput() NetworkFirewallPolicyServiceListArrayOutput
	ToNetworkFirewallPolicyServiceListArrayOutputWithContext(context.Context) NetworkFirewallPolicyServiceListArrayOutput
}

type NetworkFirewallPolicyServiceListArray []NetworkFirewallPolicyServiceListInput

func (NetworkFirewallPolicyServiceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkFirewallPolicyServiceList)(nil)).Elem()
}

func (i NetworkFirewallPolicyServiceListArray) ToNetworkFirewallPolicyServiceListArrayOutput() NetworkFirewallPolicyServiceListArrayOutput {
	return i.ToNetworkFirewallPolicyServiceListArrayOutputWithContext(context.Background())
}

func (i NetworkFirewallPolicyServiceListArray) ToNetworkFirewallPolicyServiceListArrayOutputWithContext(ctx context.Context) NetworkFirewallPolicyServiceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallPolicyServiceListArrayOutput)
}

// NetworkFirewallPolicyServiceListMapInput is an input type that accepts NetworkFirewallPolicyServiceListMap and NetworkFirewallPolicyServiceListMapOutput values.
// You can construct a concrete instance of `NetworkFirewallPolicyServiceListMapInput` via:
//
//	NetworkFirewallPolicyServiceListMap{ "key": NetworkFirewallPolicyServiceListArgs{...} }
type NetworkFirewallPolicyServiceListMapInput interface {
	pulumi.Input

	ToNetworkFirewallPolicyServiceListMapOutput() NetworkFirewallPolicyServiceListMapOutput
	ToNetworkFirewallPolicyServiceListMapOutputWithContext(context.Context) NetworkFirewallPolicyServiceListMapOutput
}

type NetworkFirewallPolicyServiceListMap map[string]NetworkFirewallPolicyServiceListInput

func (NetworkFirewallPolicyServiceListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkFirewallPolicyServiceList)(nil)).Elem()
}

func (i NetworkFirewallPolicyServiceListMap) ToNetworkFirewallPolicyServiceListMapOutput() NetworkFirewallPolicyServiceListMapOutput {
	return i.ToNetworkFirewallPolicyServiceListMapOutputWithContext(context.Background())
}

func (i NetworkFirewallPolicyServiceListMap) ToNetworkFirewallPolicyServiceListMapOutputWithContext(ctx context.Context) NetworkFirewallPolicyServiceListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallPolicyServiceListMapOutput)
}

type NetworkFirewallPolicyServiceListOutput struct{ *pulumi.OutputState }

func (NetworkFirewallPolicyServiceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkFirewallPolicyServiceList)(nil)).Elem()
}

func (o NetworkFirewallPolicyServiceListOutput) ToNetworkFirewallPolicyServiceListOutput() NetworkFirewallPolicyServiceListOutput {
	return o
}

func (o NetworkFirewallPolicyServiceListOutput) ToNetworkFirewallPolicyServiceListOutputWithContext(ctx context.Context) NetworkFirewallPolicyServiceListOutput {
	return o
}

// Name of the service Group.
func (o NetworkFirewallPolicyServiceListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyServiceList) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Unique Network Firewall Policy identifier
func (o NetworkFirewallPolicyServiceListOutput) NetworkFirewallPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyServiceList) pulumi.StringOutput { return v.NetworkFirewallPolicyId }).(pulumi.StringOutput)
}

// OCID of the Network Firewall Policy this serviceList belongs to.
func (o NetworkFirewallPolicyServiceListOutput) ParentResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyServiceList) pulumi.StringOutput { return v.ParentResourceId }).(pulumi.StringOutput)
}

// (Updatable) Collection of service names. The services referenced in the service list must already be present in the policy before being used in the service list.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o NetworkFirewallPolicyServiceListOutput) Services() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyServiceList) pulumi.StringArrayOutput { return v.Services }).(pulumi.StringArrayOutput)
}

// Count of total services in the given service List.
func (o NetworkFirewallPolicyServiceListOutput) TotalServices() pulumi.IntOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyServiceList) pulumi.IntOutput { return v.TotalServices }).(pulumi.IntOutput)
}

type NetworkFirewallPolicyServiceListArrayOutput struct{ *pulumi.OutputState }

func (NetworkFirewallPolicyServiceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkFirewallPolicyServiceList)(nil)).Elem()
}

func (o NetworkFirewallPolicyServiceListArrayOutput) ToNetworkFirewallPolicyServiceListArrayOutput() NetworkFirewallPolicyServiceListArrayOutput {
	return o
}

func (o NetworkFirewallPolicyServiceListArrayOutput) ToNetworkFirewallPolicyServiceListArrayOutputWithContext(ctx context.Context) NetworkFirewallPolicyServiceListArrayOutput {
	return o
}

func (o NetworkFirewallPolicyServiceListArrayOutput) Index(i pulumi.IntInput) NetworkFirewallPolicyServiceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkFirewallPolicyServiceList {
		return vs[0].([]*NetworkFirewallPolicyServiceList)[vs[1].(int)]
	}).(NetworkFirewallPolicyServiceListOutput)
}

type NetworkFirewallPolicyServiceListMapOutput struct{ *pulumi.OutputState }

func (NetworkFirewallPolicyServiceListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkFirewallPolicyServiceList)(nil)).Elem()
}

func (o NetworkFirewallPolicyServiceListMapOutput) ToNetworkFirewallPolicyServiceListMapOutput() NetworkFirewallPolicyServiceListMapOutput {
	return o
}

func (o NetworkFirewallPolicyServiceListMapOutput) ToNetworkFirewallPolicyServiceListMapOutputWithContext(ctx context.Context) NetworkFirewallPolicyServiceListMapOutput {
	return o
}

func (o NetworkFirewallPolicyServiceListMapOutput) MapIndex(k pulumi.StringInput) NetworkFirewallPolicyServiceListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkFirewallPolicyServiceList {
		return vs[0].(map[string]*NetworkFirewallPolicyServiceList)[vs[1].(string)]
	}).(NetworkFirewallPolicyServiceListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkFirewallPolicyServiceListInput)(nil)).Elem(), &NetworkFirewallPolicyServiceList{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkFirewallPolicyServiceListArrayInput)(nil)).Elem(), NetworkFirewallPolicyServiceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkFirewallPolicyServiceListMapInput)(nil)).Elem(), NetworkFirewallPolicyServiceListMap{})
	pulumi.RegisterOutputType(NetworkFirewallPolicyServiceListOutput{})
	pulumi.RegisterOutputType(NetworkFirewallPolicyServiceListArrayOutput{})
	pulumi.RegisterOutputType(NetworkFirewallPolicyServiceListMapOutput{})
}
