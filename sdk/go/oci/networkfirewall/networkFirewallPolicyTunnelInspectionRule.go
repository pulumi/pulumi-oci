// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkfirewall

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Network Firewall Policy Tunnel Inspection Rule resource in Oracle Cloud Infrastructure Network Firewall service.
//
// Creates a new tunnel inspection rule for the network firewall policy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/NetworkFirewall"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := NetworkFirewall.NewNetworkFirewallPolicyTunnelInspectionRule(ctx, "test_network_firewall_policy_tunnel_inspection_rule", &NetworkFirewall.NetworkFirewallPolicyTunnelInspectionRuleArgs{
//				Condition: &networkfirewall.NetworkFirewallPolicyTunnelInspectionRuleConditionArgs{
//					DestinationAddresses: pulumi.Any(networkFirewallPolicyTunnelInspectionRuleConditionDestinationAddress),
//					SourceAddresses:      pulumi.Any(networkFirewallPolicyTunnelInspectionRuleConditionSourceAddress),
//				},
//				Name:                    pulumi.Any(networkFirewallPolicyTunnelInspectionRuleName),
//				NetworkFirewallPolicyId: pulumi.Any(testNetworkFirewallPolicy.Id),
//				Protocol:                pulumi.Any(networkFirewallPolicyTunnelInspectionRuleProtocol),
//				Action:                  pulumi.Any(networkFirewallPolicyTunnelInspectionRuleAction),
//				Position: &networkfirewall.NetworkFirewallPolicyTunnelInspectionRulePositionArgs{
//					AfterRule:  pulumi.Any(networkFirewallPolicyTunnelInspectionRulePositionAfterRule),
//					BeforeRule: pulumi.Any(networkFirewallPolicyTunnelInspectionRulePositionBeforeRule),
//				},
//				Profile: &networkfirewall.NetworkFirewallPolicyTunnelInspectionRuleProfileArgs{
//					MustReturnTrafficToSource: pulumi.Any(networkFirewallPolicyTunnelInspectionRuleProfileMustReturnTrafficToSource),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// NetworkFirewallPolicyTunnelInspectionRules can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:NetworkFirewall/networkFirewallPolicyTunnelInspectionRule:NetworkFirewallPolicyTunnelInspectionRule test_network_firewall_policy_tunnel_inspection_rule "networkFirewallPolicies/{networkFirewallPolicyId}/tunnelInspectionRules/{tunnelInspectionRuleName}"
// ```
type NetworkFirewallPolicyTunnelInspectionRule struct {
	pulumi.CustomResourceState

	// (Updatable) Types of Inspect Action on the traffic flow.
	// * INSPECT - Inspect the traffic.
	// * INSPECT_AND_CAPTURE_LOG - Inspect and capture logs for the traffic.
	Action pulumi.StringOutput `pulumi:"action"`
	// (Updatable) Criteria to evaluate against incoming network traffic. A match occurs when at least one item in the array associated with each specified property corresponds with the relevant aspect of the traffic.
	Condition NetworkFirewallPolicyTunnelInspectionRuleConditionOutput `pulumi:"condition"`
	// Name for the Tunnel Inspection Rule, must be unique within the policy.
	Name pulumi.StringOutput `pulumi:"name"`
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId pulumi.StringOutput `pulumi:"networkFirewallPolicyId"`
	// OCID of the Network Firewall Policy this Tunnel Inspection Rule belongs to.
	ParentResourceId pulumi.StringOutput `pulumi:"parentResourceId"`
	// (Updatable) An object which defines the position of the rule.
	Position NetworkFirewallPolicyTunnelInspectionRulePositionOutput `pulumi:"position"`
	// The priority order in which this rule should be evaluated
	PriorityOrder pulumi.StringOutput `pulumi:"priorityOrder"`
	// (Updatable) Vxlan Inspect profile used in Vxlan Tunnel Inspection Rules.
	Profile NetworkFirewallPolicyTunnelInspectionRuleProfileOutput `pulumi:"profile"`
	// (Updatable) Types of Tunnel Inspection Protocol to be applied on the traffic.
	// * VXLAN - VXLAN Tunnel Inspection Protocol will be applied on the traffic.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Protocol pulumi.StringOutput `pulumi:"protocol"`
}

// NewNetworkFirewallPolicyTunnelInspectionRule registers a new resource with the given unique name, arguments, and options.
func NewNetworkFirewallPolicyTunnelInspectionRule(ctx *pulumi.Context,
	name string, args *NetworkFirewallPolicyTunnelInspectionRuleArgs, opts ...pulumi.ResourceOption) (*NetworkFirewallPolicyTunnelInspectionRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Condition == nil {
		return nil, errors.New("invalid value for required argument 'Condition'")
	}
	if args.NetworkFirewallPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkFirewallPolicyId'")
	}
	if args.Protocol == nil {
		return nil, errors.New("invalid value for required argument 'Protocol'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkFirewallPolicyTunnelInspectionRule
	err := ctx.RegisterResource("oci:NetworkFirewall/networkFirewallPolicyTunnelInspectionRule:NetworkFirewallPolicyTunnelInspectionRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkFirewallPolicyTunnelInspectionRule gets an existing NetworkFirewallPolicyTunnelInspectionRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkFirewallPolicyTunnelInspectionRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkFirewallPolicyTunnelInspectionRuleState, opts ...pulumi.ResourceOption) (*NetworkFirewallPolicyTunnelInspectionRule, error) {
	var resource NetworkFirewallPolicyTunnelInspectionRule
	err := ctx.ReadResource("oci:NetworkFirewall/networkFirewallPolicyTunnelInspectionRule:NetworkFirewallPolicyTunnelInspectionRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkFirewallPolicyTunnelInspectionRule resources.
type networkFirewallPolicyTunnelInspectionRuleState struct {
	// (Updatable) Types of Inspect Action on the traffic flow.
	// * INSPECT - Inspect the traffic.
	// * INSPECT_AND_CAPTURE_LOG - Inspect and capture logs for the traffic.
	Action *string `pulumi:"action"`
	// (Updatable) Criteria to evaluate against incoming network traffic. A match occurs when at least one item in the array associated with each specified property corresponds with the relevant aspect of the traffic.
	Condition *NetworkFirewallPolicyTunnelInspectionRuleCondition `pulumi:"condition"`
	// Name for the Tunnel Inspection Rule, must be unique within the policy.
	Name *string `pulumi:"name"`
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId *string `pulumi:"networkFirewallPolicyId"`
	// OCID of the Network Firewall Policy this Tunnel Inspection Rule belongs to.
	ParentResourceId *string `pulumi:"parentResourceId"`
	// (Updatable) An object which defines the position of the rule.
	Position *NetworkFirewallPolicyTunnelInspectionRulePosition `pulumi:"position"`
	// The priority order in which this rule should be evaluated
	PriorityOrder *string `pulumi:"priorityOrder"`
	// (Updatable) Vxlan Inspect profile used in Vxlan Tunnel Inspection Rules.
	Profile *NetworkFirewallPolicyTunnelInspectionRuleProfile `pulumi:"profile"`
	// (Updatable) Types of Tunnel Inspection Protocol to be applied on the traffic.
	// * VXLAN - VXLAN Tunnel Inspection Protocol will be applied on the traffic.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Protocol *string `pulumi:"protocol"`
}

type NetworkFirewallPolicyTunnelInspectionRuleState struct {
	// (Updatable) Types of Inspect Action on the traffic flow.
	// * INSPECT - Inspect the traffic.
	// * INSPECT_AND_CAPTURE_LOG - Inspect and capture logs for the traffic.
	Action pulumi.StringPtrInput
	// (Updatable) Criteria to evaluate against incoming network traffic. A match occurs when at least one item in the array associated with each specified property corresponds with the relevant aspect of the traffic.
	Condition NetworkFirewallPolicyTunnelInspectionRuleConditionPtrInput
	// Name for the Tunnel Inspection Rule, must be unique within the policy.
	Name pulumi.StringPtrInput
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId pulumi.StringPtrInput
	// OCID of the Network Firewall Policy this Tunnel Inspection Rule belongs to.
	ParentResourceId pulumi.StringPtrInput
	// (Updatable) An object which defines the position of the rule.
	Position NetworkFirewallPolicyTunnelInspectionRulePositionPtrInput
	// The priority order in which this rule should be evaluated
	PriorityOrder pulumi.StringPtrInput
	// (Updatable) Vxlan Inspect profile used in Vxlan Tunnel Inspection Rules.
	Profile NetworkFirewallPolicyTunnelInspectionRuleProfilePtrInput
	// (Updatable) Types of Tunnel Inspection Protocol to be applied on the traffic.
	// * VXLAN - VXLAN Tunnel Inspection Protocol will be applied on the traffic.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Protocol pulumi.StringPtrInput
}

func (NetworkFirewallPolicyTunnelInspectionRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkFirewallPolicyTunnelInspectionRuleState)(nil)).Elem()
}

type networkFirewallPolicyTunnelInspectionRuleArgs struct {
	// (Updatable) Types of Inspect Action on the traffic flow.
	// * INSPECT - Inspect the traffic.
	// * INSPECT_AND_CAPTURE_LOG - Inspect and capture logs for the traffic.
	Action *string `pulumi:"action"`
	// (Updatable) Criteria to evaluate against incoming network traffic. A match occurs when at least one item in the array associated with each specified property corresponds with the relevant aspect of the traffic.
	Condition NetworkFirewallPolicyTunnelInspectionRuleCondition `pulumi:"condition"`
	// Name for the Tunnel Inspection Rule, must be unique within the policy.
	Name *string `pulumi:"name"`
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId string `pulumi:"networkFirewallPolicyId"`
	// (Updatable) An object which defines the position of the rule.
	Position *NetworkFirewallPolicyTunnelInspectionRulePosition `pulumi:"position"`
	// (Updatable) Vxlan Inspect profile used in Vxlan Tunnel Inspection Rules.
	Profile *NetworkFirewallPolicyTunnelInspectionRuleProfile `pulumi:"profile"`
	// (Updatable) Types of Tunnel Inspection Protocol to be applied on the traffic.
	// * VXLAN - VXLAN Tunnel Inspection Protocol will be applied on the traffic.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Protocol string `pulumi:"protocol"`
}

// The set of arguments for constructing a NetworkFirewallPolicyTunnelInspectionRule resource.
type NetworkFirewallPolicyTunnelInspectionRuleArgs struct {
	// (Updatable) Types of Inspect Action on the traffic flow.
	// * INSPECT - Inspect the traffic.
	// * INSPECT_AND_CAPTURE_LOG - Inspect and capture logs for the traffic.
	Action pulumi.StringPtrInput
	// (Updatable) Criteria to evaluate against incoming network traffic. A match occurs when at least one item in the array associated with each specified property corresponds with the relevant aspect of the traffic.
	Condition NetworkFirewallPolicyTunnelInspectionRuleConditionInput
	// Name for the Tunnel Inspection Rule, must be unique within the policy.
	Name pulumi.StringPtrInput
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId pulumi.StringInput
	// (Updatable) An object which defines the position of the rule.
	Position NetworkFirewallPolicyTunnelInspectionRulePositionPtrInput
	// (Updatable) Vxlan Inspect profile used in Vxlan Tunnel Inspection Rules.
	Profile NetworkFirewallPolicyTunnelInspectionRuleProfilePtrInput
	// (Updatable) Types of Tunnel Inspection Protocol to be applied on the traffic.
	// * VXLAN - VXLAN Tunnel Inspection Protocol will be applied on the traffic.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Protocol pulumi.StringInput
}

func (NetworkFirewallPolicyTunnelInspectionRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkFirewallPolicyTunnelInspectionRuleArgs)(nil)).Elem()
}

type NetworkFirewallPolicyTunnelInspectionRuleInput interface {
	pulumi.Input

	ToNetworkFirewallPolicyTunnelInspectionRuleOutput() NetworkFirewallPolicyTunnelInspectionRuleOutput
	ToNetworkFirewallPolicyTunnelInspectionRuleOutputWithContext(ctx context.Context) NetworkFirewallPolicyTunnelInspectionRuleOutput
}

func (*NetworkFirewallPolicyTunnelInspectionRule) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkFirewallPolicyTunnelInspectionRule)(nil)).Elem()
}

func (i *NetworkFirewallPolicyTunnelInspectionRule) ToNetworkFirewallPolicyTunnelInspectionRuleOutput() NetworkFirewallPolicyTunnelInspectionRuleOutput {
	return i.ToNetworkFirewallPolicyTunnelInspectionRuleOutputWithContext(context.Background())
}

func (i *NetworkFirewallPolicyTunnelInspectionRule) ToNetworkFirewallPolicyTunnelInspectionRuleOutputWithContext(ctx context.Context) NetworkFirewallPolicyTunnelInspectionRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallPolicyTunnelInspectionRuleOutput)
}

// NetworkFirewallPolicyTunnelInspectionRuleArrayInput is an input type that accepts NetworkFirewallPolicyTunnelInspectionRuleArray and NetworkFirewallPolicyTunnelInspectionRuleArrayOutput values.
// You can construct a concrete instance of `NetworkFirewallPolicyTunnelInspectionRuleArrayInput` via:
//
//	NetworkFirewallPolicyTunnelInspectionRuleArray{ NetworkFirewallPolicyTunnelInspectionRuleArgs{...} }
type NetworkFirewallPolicyTunnelInspectionRuleArrayInput interface {
	pulumi.Input

	ToNetworkFirewallPolicyTunnelInspectionRuleArrayOutput() NetworkFirewallPolicyTunnelInspectionRuleArrayOutput
	ToNetworkFirewallPolicyTunnelInspectionRuleArrayOutputWithContext(context.Context) NetworkFirewallPolicyTunnelInspectionRuleArrayOutput
}

type NetworkFirewallPolicyTunnelInspectionRuleArray []NetworkFirewallPolicyTunnelInspectionRuleInput

func (NetworkFirewallPolicyTunnelInspectionRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkFirewallPolicyTunnelInspectionRule)(nil)).Elem()
}

func (i NetworkFirewallPolicyTunnelInspectionRuleArray) ToNetworkFirewallPolicyTunnelInspectionRuleArrayOutput() NetworkFirewallPolicyTunnelInspectionRuleArrayOutput {
	return i.ToNetworkFirewallPolicyTunnelInspectionRuleArrayOutputWithContext(context.Background())
}

func (i NetworkFirewallPolicyTunnelInspectionRuleArray) ToNetworkFirewallPolicyTunnelInspectionRuleArrayOutputWithContext(ctx context.Context) NetworkFirewallPolicyTunnelInspectionRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallPolicyTunnelInspectionRuleArrayOutput)
}

// NetworkFirewallPolicyTunnelInspectionRuleMapInput is an input type that accepts NetworkFirewallPolicyTunnelInspectionRuleMap and NetworkFirewallPolicyTunnelInspectionRuleMapOutput values.
// You can construct a concrete instance of `NetworkFirewallPolicyTunnelInspectionRuleMapInput` via:
//
//	NetworkFirewallPolicyTunnelInspectionRuleMap{ "key": NetworkFirewallPolicyTunnelInspectionRuleArgs{...} }
type NetworkFirewallPolicyTunnelInspectionRuleMapInput interface {
	pulumi.Input

	ToNetworkFirewallPolicyTunnelInspectionRuleMapOutput() NetworkFirewallPolicyTunnelInspectionRuleMapOutput
	ToNetworkFirewallPolicyTunnelInspectionRuleMapOutputWithContext(context.Context) NetworkFirewallPolicyTunnelInspectionRuleMapOutput
}

type NetworkFirewallPolicyTunnelInspectionRuleMap map[string]NetworkFirewallPolicyTunnelInspectionRuleInput

func (NetworkFirewallPolicyTunnelInspectionRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkFirewallPolicyTunnelInspectionRule)(nil)).Elem()
}

func (i NetworkFirewallPolicyTunnelInspectionRuleMap) ToNetworkFirewallPolicyTunnelInspectionRuleMapOutput() NetworkFirewallPolicyTunnelInspectionRuleMapOutput {
	return i.ToNetworkFirewallPolicyTunnelInspectionRuleMapOutputWithContext(context.Background())
}

func (i NetworkFirewallPolicyTunnelInspectionRuleMap) ToNetworkFirewallPolicyTunnelInspectionRuleMapOutputWithContext(ctx context.Context) NetworkFirewallPolicyTunnelInspectionRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallPolicyTunnelInspectionRuleMapOutput)
}

type NetworkFirewallPolicyTunnelInspectionRuleOutput struct{ *pulumi.OutputState }

func (NetworkFirewallPolicyTunnelInspectionRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkFirewallPolicyTunnelInspectionRule)(nil)).Elem()
}

func (o NetworkFirewallPolicyTunnelInspectionRuleOutput) ToNetworkFirewallPolicyTunnelInspectionRuleOutput() NetworkFirewallPolicyTunnelInspectionRuleOutput {
	return o
}

func (o NetworkFirewallPolicyTunnelInspectionRuleOutput) ToNetworkFirewallPolicyTunnelInspectionRuleOutputWithContext(ctx context.Context) NetworkFirewallPolicyTunnelInspectionRuleOutput {
	return o
}

// (Updatable) Types of Inspect Action on the traffic flow.
// * INSPECT - Inspect the traffic.
// * INSPECT_AND_CAPTURE_LOG - Inspect and capture logs for the traffic.
func (o NetworkFirewallPolicyTunnelInspectionRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyTunnelInspectionRule) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

// (Updatable) Criteria to evaluate against incoming network traffic. A match occurs when at least one item in the array associated with each specified property corresponds with the relevant aspect of the traffic.
func (o NetworkFirewallPolicyTunnelInspectionRuleOutput) Condition() NetworkFirewallPolicyTunnelInspectionRuleConditionOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyTunnelInspectionRule) NetworkFirewallPolicyTunnelInspectionRuleConditionOutput {
		return v.Condition
	}).(NetworkFirewallPolicyTunnelInspectionRuleConditionOutput)
}

// Name for the Tunnel Inspection Rule, must be unique within the policy.
func (o NetworkFirewallPolicyTunnelInspectionRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyTunnelInspectionRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Unique Network Firewall Policy identifier
func (o NetworkFirewallPolicyTunnelInspectionRuleOutput) NetworkFirewallPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyTunnelInspectionRule) pulumi.StringOutput {
		return v.NetworkFirewallPolicyId
	}).(pulumi.StringOutput)
}

// OCID of the Network Firewall Policy this Tunnel Inspection Rule belongs to.
func (o NetworkFirewallPolicyTunnelInspectionRuleOutput) ParentResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyTunnelInspectionRule) pulumi.StringOutput { return v.ParentResourceId }).(pulumi.StringOutput)
}

// (Updatable) An object which defines the position of the rule.
func (o NetworkFirewallPolicyTunnelInspectionRuleOutput) Position() NetworkFirewallPolicyTunnelInspectionRulePositionOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyTunnelInspectionRule) NetworkFirewallPolicyTunnelInspectionRulePositionOutput {
		return v.Position
	}).(NetworkFirewallPolicyTunnelInspectionRulePositionOutput)
}

// The priority order in which this rule should be evaluated
func (o NetworkFirewallPolicyTunnelInspectionRuleOutput) PriorityOrder() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyTunnelInspectionRule) pulumi.StringOutput { return v.PriorityOrder }).(pulumi.StringOutput)
}

// (Updatable) Vxlan Inspect profile used in Vxlan Tunnel Inspection Rules.
func (o NetworkFirewallPolicyTunnelInspectionRuleOutput) Profile() NetworkFirewallPolicyTunnelInspectionRuleProfileOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyTunnelInspectionRule) NetworkFirewallPolicyTunnelInspectionRuleProfileOutput {
		return v.Profile
	}).(NetworkFirewallPolicyTunnelInspectionRuleProfileOutput)
}

// (Updatable) Types of Tunnel Inspection Protocol to be applied on the traffic.
// * VXLAN - VXLAN Tunnel Inspection Protocol will be applied on the traffic.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o NetworkFirewallPolicyTunnelInspectionRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyTunnelInspectionRule) pulumi.StringOutput { return v.Protocol }).(pulumi.StringOutput)
}

type NetworkFirewallPolicyTunnelInspectionRuleArrayOutput struct{ *pulumi.OutputState }

func (NetworkFirewallPolicyTunnelInspectionRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkFirewallPolicyTunnelInspectionRule)(nil)).Elem()
}

func (o NetworkFirewallPolicyTunnelInspectionRuleArrayOutput) ToNetworkFirewallPolicyTunnelInspectionRuleArrayOutput() NetworkFirewallPolicyTunnelInspectionRuleArrayOutput {
	return o
}

func (o NetworkFirewallPolicyTunnelInspectionRuleArrayOutput) ToNetworkFirewallPolicyTunnelInspectionRuleArrayOutputWithContext(ctx context.Context) NetworkFirewallPolicyTunnelInspectionRuleArrayOutput {
	return o
}

func (o NetworkFirewallPolicyTunnelInspectionRuleArrayOutput) Index(i pulumi.IntInput) NetworkFirewallPolicyTunnelInspectionRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkFirewallPolicyTunnelInspectionRule {
		return vs[0].([]*NetworkFirewallPolicyTunnelInspectionRule)[vs[1].(int)]
	}).(NetworkFirewallPolicyTunnelInspectionRuleOutput)
}

type NetworkFirewallPolicyTunnelInspectionRuleMapOutput struct{ *pulumi.OutputState }

func (NetworkFirewallPolicyTunnelInspectionRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkFirewallPolicyTunnelInspectionRule)(nil)).Elem()
}

func (o NetworkFirewallPolicyTunnelInspectionRuleMapOutput) ToNetworkFirewallPolicyTunnelInspectionRuleMapOutput() NetworkFirewallPolicyTunnelInspectionRuleMapOutput {
	return o
}

func (o NetworkFirewallPolicyTunnelInspectionRuleMapOutput) ToNetworkFirewallPolicyTunnelInspectionRuleMapOutputWithContext(ctx context.Context) NetworkFirewallPolicyTunnelInspectionRuleMapOutput {
	return o
}

func (o NetworkFirewallPolicyTunnelInspectionRuleMapOutput) MapIndex(k pulumi.StringInput) NetworkFirewallPolicyTunnelInspectionRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkFirewallPolicyTunnelInspectionRule {
		return vs[0].(map[string]*NetworkFirewallPolicyTunnelInspectionRule)[vs[1].(string)]
	}).(NetworkFirewallPolicyTunnelInspectionRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkFirewallPolicyTunnelInspectionRuleInput)(nil)).Elem(), &NetworkFirewallPolicyTunnelInspectionRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkFirewallPolicyTunnelInspectionRuleArrayInput)(nil)).Elem(), NetworkFirewallPolicyTunnelInspectionRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkFirewallPolicyTunnelInspectionRuleMapInput)(nil)).Elem(), NetworkFirewallPolicyTunnelInspectionRuleMap{})
	pulumi.RegisterOutputType(NetworkFirewallPolicyTunnelInspectionRuleOutput{})
	pulumi.RegisterOutputType(NetworkFirewallPolicyTunnelInspectionRuleArrayOutput{})
	pulumi.RegisterOutputType(NetworkFirewallPolicyTunnelInspectionRuleMapOutput{})
}
