// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkfirewall

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This resource provides the Network Firewall Policy Url List resource in Oracle Cloud Infrastructure Network Firewall service.
//
// Creates a new Url List for the Network Firewall Policy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/NetworkFirewall"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := NetworkFirewall.NewNetworkFirewallPolicyUrlList(ctx, "testNetworkFirewallPolicyUrlList", &NetworkFirewall.NetworkFirewallPolicyUrlListArgs{
//				NetworkFirewallPolicyId: pulumi.Any(oci_network_firewall_network_firewall_policy.Test_network_firewall_policy.Id),
//				Urls: networkfirewall.NetworkFirewallPolicyUrlListUrlArray{
//					&networkfirewall.NetworkFirewallPolicyUrlListUrlArgs{
//						Pattern: pulumi.Any(_var.Network_firewall_policy_url_list_urls_pattern),
//						Type:    pulumi.Any(_var.Network_firewall_policy_url_list_urls_type),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// NetworkFirewallPolicyUrlLists can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:NetworkFirewall/networkFirewallPolicyUrlList:NetworkFirewallPolicyUrlList test_network_firewall_policy_url_list "networkFirewallPolicies/{networkFirewallPolicyId}/urlLists/{urlListName}"
//
// ```
type NetworkFirewallPolicyUrlList struct {
	pulumi.CustomResourceState

	// Unique name to identify the group of urls to be used in the policy rules.
	Name pulumi.StringOutput `pulumi:"name"`
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId pulumi.StringOutput `pulumi:"networkFirewallPolicyId"`
	// OCID of the Network Firewall Policy this URL List belongs to.
	ParentResourceId pulumi.StringOutput `pulumi:"parentResourceId"`
	// Total count of URLs in the URL List
	TotalUrls pulumi.IntOutput `pulumi:"totalUrls"`
	// (Updatable) List of urls.
	Urls NetworkFirewallPolicyUrlListUrlArrayOutput `pulumi:"urls"`
}

// NewNetworkFirewallPolicyUrlList registers a new resource with the given unique name, arguments, and options.
func NewNetworkFirewallPolicyUrlList(ctx *pulumi.Context,
	name string, args *NetworkFirewallPolicyUrlListArgs, opts ...pulumi.ResourceOption) (*NetworkFirewallPolicyUrlList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkFirewallPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkFirewallPolicyId'")
	}
	if args.Urls == nil {
		return nil, errors.New("invalid value for required argument 'Urls'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkFirewallPolicyUrlList
	err := ctx.RegisterResource("oci:NetworkFirewall/networkFirewallPolicyUrlList:NetworkFirewallPolicyUrlList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkFirewallPolicyUrlList gets an existing NetworkFirewallPolicyUrlList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkFirewallPolicyUrlList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkFirewallPolicyUrlListState, opts ...pulumi.ResourceOption) (*NetworkFirewallPolicyUrlList, error) {
	var resource NetworkFirewallPolicyUrlList
	err := ctx.ReadResource("oci:NetworkFirewall/networkFirewallPolicyUrlList:NetworkFirewallPolicyUrlList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkFirewallPolicyUrlList resources.
type networkFirewallPolicyUrlListState struct {
	// Unique name to identify the group of urls to be used in the policy rules.
	Name *string `pulumi:"name"`
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId *string `pulumi:"networkFirewallPolicyId"`
	// OCID of the Network Firewall Policy this URL List belongs to.
	ParentResourceId *string `pulumi:"parentResourceId"`
	// Total count of URLs in the URL List
	TotalUrls *int `pulumi:"totalUrls"`
	// (Updatable) List of urls.
	Urls []NetworkFirewallPolicyUrlListUrl `pulumi:"urls"`
}

type NetworkFirewallPolicyUrlListState struct {
	// Unique name to identify the group of urls to be used in the policy rules.
	Name pulumi.StringPtrInput
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId pulumi.StringPtrInput
	// OCID of the Network Firewall Policy this URL List belongs to.
	ParentResourceId pulumi.StringPtrInput
	// Total count of URLs in the URL List
	TotalUrls pulumi.IntPtrInput
	// (Updatable) List of urls.
	Urls NetworkFirewallPolicyUrlListUrlArrayInput
}

func (NetworkFirewallPolicyUrlListState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkFirewallPolicyUrlListState)(nil)).Elem()
}

type networkFirewallPolicyUrlListArgs struct {
	// Unique name to identify the group of urls to be used in the policy rules.
	Name *string `pulumi:"name"`
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId string `pulumi:"networkFirewallPolicyId"`
	// (Updatable) List of urls.
	Urls []NetworkFirewallPolicyUrlListUrl `pulumi:"urls"`
}

// The set of arguments for constructing a NetworkFirewallPolicyUrlList resource.
type NetworkFirewallPolicyUrlListArgs struct {
	// Unique name to identify the group of urls to be used in the policy rules.
	Name pulumi.StringPtrInput
	// Unique Network Firewall Policy identifier
	NetworkFirewallPolicyId pulumi.StringInput
	// (Updatable) List of urls.
	Urls NetworkFirewallPolicyUrlListUrlArrayInput
}

func (NetworkFirewallPolicyUrlListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkFirewallPolicyUrlListArgs)(nil)).Elem()
}

type NetworkFirewallPolicyUrlListInput interface {
	pulumi.Input

	ToNetworkFirewallPolicyUrlListOutput() NetworkFirewallPolicyUrlListOutput
	ToNetworkFirewallPolicyUrlListOutputWithContext(ctx context.Context) NetworkFirewallPolicyUrlListOutput
}

func (*NetworkFirewallPolicyUrlList) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkFirewallPolicyUrlList)(nil)).Elem()
}

func (i *NetworkFirewallPolicyUrlList) ToNetworkFirewallPolicyUrlListOutput() NetworkFirewallPolicyUrlListOutput {
	return i.ToNetworkFirewallPolicyUrlListOutputWithContext(context.Background())
}

func (i *NetworkFirewallPolicyUrlList) ToNetworkFirewallPolicyUrlListOutputWithContext(ctx context.Context) NetworkFirewallPolicyUrlListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallPolicyUrlListOutput)
}

func (i *NetworkFirewallPolicyUrlList) ToOutput(ctx context.Context) pulumix.Output[*NetworkFirewallPolicyUrlList] {
	return pulumix.Output[*NetworkFirewallPolicyUrlList]{
		OutputState: i.ToNetworkFirewallPolicyUrlListOutputWithContext(ctx).OutputState,
	}
}

// NetworkFirewallPolicyUrlListArrayInput is an input type that accepts NetworkFirewallPolicyUrlListArray and NetworkFirewallPolicyUrlListArrayOutput values.
// You can construct a concrete instance of `NetworkFirewallPolicyUrlListArrayInput` via:
//
//	NetworkFirewallPolicyUrlListArray{ NetworkFirewallPolicyUrlListArgs{...} }
type NetworkFirewallPolicyUrlListArrayInput interface {
	pulumi.Input

	ToNetworkFirewallPolicyUrlListArrayOutput() NetworkFirewallPolicyUrlListArrayOutput
	ToNetworkFirewallPolicyUrlListArrayOutputWithContext(context.Context) NetworkFirewallPolicyUrlListArrayOutput
}

type NetworkFirewallPolicyUrlListArray []NetworkFirewallPolicyUrlListInput

func (NetworkFirewallPolicyUrlListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkFirewallPolicyUrlList)(nil)).Elem()
}

func (i NetworkFirewallPolicyUrlListArray) ToNetworkFirewallPolicyUrlListArrayOutput() NetworkFirewallPolicyUrlListArrayOutput {
	return i.ToNetworkFirewallPolicyUrlListArrayOutputWithContext(context.Background())
}

func (i NetworkFirewallPolicyUrlListArray) ToNetworkFirewallPolicyUrlListArrayOutputWithContext(ctx context.Context) NetworkFirewallPolicyUrlListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallPolicyUrlListArrayOutput)
}

func (i NetworkFirewallPolicyUrlListArray) ToOutput(ctx context.Context) pulumix.Output[[]*NetworkFirewallPolicyUrlList] {
	return pulumix.Output[[]*NetworkFirewallPolicyUrlList]{
		OutputState: i.ToNetworkFirewallPolicyUrlListArrayOutputWithContext(ctx).OutputState,
	}
}

// NetworkFirewallPolicyUrlListMapInput is an input type that accepts NetworkFirewallPolicyUrlListMap and NetworkFirewallPolicyUrlListMapOutput values.
// You can construct a concrete instance of `NetworkFirewallPolicyUrlListMapInput` via:
//
//	NetworkFirewallPolicyUrlListMap{ "key": NetworkFirewallPolicyUrlListArgs{...} }
type NetworkFirewallPolicyUrlListMapInput interface {
	pulumi.Input

	ToNetworkFirewallPolicyUrlListMapOutput() NetworkFirewallPolicyUrlListMapOutput
	ToNetworkFirewallPolicyUrlListMapOutputWithContext(context.Context) NetworkFirewallPolicyUrlListMapOutput
}

type NetworkFirewallPolicyUrlListMap map[string]NetworkFirewallPolicyUrlListInput

func (NetworkFirewallPolicyUrlListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkFirewallPolicyUrlList)(nil)).Elem()
}

func (i NetworkFirewallPolicyUrlListMap) ToNetworkFirewallPolicyUrlListMapOutput() NetworkFirewallPolicyUrlListMapOutput {
	return i.ToNetworkFirewallPolicyUrlListMapOutputWithContext(context.Background())
}

func (i NetworkFirewallPolicyUrlListMap) ToNetworkFirewallPolicyUrlListMapOutputWithContext(ctx context.Context) NetworkFirewallPolicyUrlListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallPolicyUrlListMapOutput)
}

func (i NetworkFirewallPolicyUrlListMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*NetworkFirewallPolicyUrlList] {
	return pulumix.Output[map[string]*NetworkFirewallPolicyUrlList]{
		OutputState: i.ToNetworkFirewallPolicyUrlListMapOutputWithContext(ctx).OutputState,
	}
}

type NetworkFirewallPolicyUrlListOutput struct{ *pulumi.OutputState }

func (NetworkFirewallPolicyUrlListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkFirewallPolicyUrlList)(nil)).Elem()
}

func (o NetworkFirewallPolicyUrlListOutput) ToNetworkFirewallPolicyUrlListOutput() NetworkFirewallPolicyUrlListOutput {
	return o
}

func (o NetworkFirewallPolicyUrlListOutput) ToNetworkFirewallPolicyUrlListOutputWithContext(ctx context.Context) NetworkFirewallPolicyUrlListOutput {
	return o
}

func (o NetworkFirewallPolicyUrlListOutput) ToOutput(ctx context.Context) pulumix.Output[*NetworkFirewallPolicyUrlList] {
	return pulumix.Output[*NetworkFirewallPolicyUrlList]{
		OutputState: o.OutputState,
	}
}

// Unique name to identify the group of urls to be used in the policy rules.
func (o NetworkFirewallPolicyUrlListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyUrlList) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Unique Network Firewall Policy identifier
func (o NetworkFirewallPolicyUrlListOutput) NetworkFirewallPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyUrlList) pulumi.StringOutput { return v.NetworkFirewallPolicyId }).(pulumi.StringOutput)
}

// OCID of the Network Firewall Policy this URL List belongs to.
func (o NetworkFirewallPolicyUrlListOutput) ParentResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyUrlList) pulumi.StringOutput { return v.ParentResourceId }).(pulumi.StringOutput)
}

// Total count of URLs in the URL List
func (o NetworkFirewallPolicyUrlListOutput) TotalUrls() pulumi.IntOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyUrlList) pulumi.IntOutput { return v.TotalUrls }).(pulumi.IntOutput)
}

// (Updatable) List of urls.
func (o NetworkFirewallPolicyUrlListOutput) Urls() NetworkFirewallPolicyUrlListUrlArrayOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyUrlList) NetworkFirewallPolicyUrlListUrlArrayOutput { return v.Urls }).(NetworkFirewallPolicyUrlListUrlArrayOutput)
}

type NetworkFirewallPolicyUrlListArrayOutput struct{ *pulumi.OutputState }

func (NetworkFirewallPolicyUrlListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkFirewallPolicyUrlList)(nil)).Elem()
}

func (o NetworkFirewallPolicyUrlListArrayOutput) ToNetworkFirewallPolicyUrlListArrayOutput() NetworkFirewallPolicyUrlListArrayOutput {
	return o
}

func (o NetworkFirewallPolicyUrlListArrayOutput) ToNetworkFirewallPolicyUrlListArrayOutputWithContext(ctx context.Context) NetworkFirewallPolicyUrlListArrayOutput {
	return o
}

func (o NetworkFirewallPolicyUrlListArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*NetworkFirewallPolicyUrlList] {
	return pulumix.Output[[]*NetworkFirewallPolicyUrlList]{
		OutputState: o.OutputState,
	}
}

func (o NetworkFirewallPolicyUrlListArrayOutput) Index(i pulumi.IntInput) NetworkFirewallPolicyUrlListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkFirewallPolicyUrlList {
		return vs[0].([]*NetworkFirewallPolicyUrlList)[vs[1].(int)]
	}).(NetworkFirewallPolicyUrlListOutput)
}

type NetworkFirewallPolicyUrlListMapOutput struct{ *pulumi.OutputState }

func (NetworkFirewallPolicyUrlListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkFirewallPolicyUrlList)(nil)).Elem()
}

func (o NetworkFirewallPolicyUrlListMapOutput) ToNetworkFirewallPolicyUrlListMapOutput() NetworkFirewallPolicyUrlListMapOutput {
	return o
}

func (o NetworkFirewallPolicyUrlListMapOutput) ToNetworkFirewallPolicyUrlListMapOutputWithContext(ctx context.Context) NetworkFirewallPolicyUrlListMapOutput {
	return o
}

func (o NetworkFirewallPolicyUrlListMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*NetworkFirewallPolicyUrlList] {
	return pulumix.Output[map[string]*NetworkFirewallPolicyUrlList]{
		OutputState: o.OutputState,
	}
}

func (o NetworkFirewallPolicyUrlListMapOutput) MapIndex(k pulumi.StringInput) NetworkFirewallPolicyUrlListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkFirewallPolicyUrlList {
		return vs[0].(map[string]*NetworkFirewallPolicyUrlList)[vs[1].(string)]
	}).(NetworkFirewallPolicyUrlListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkFirewallPolicyUrlListInput)(nil)).Elem(), &NetworkFirewallPolicyUrlList{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkFirewallPolicyUrlListArrayInput)(nil)).Elem(), NetworkFirewallPolicyUrlListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkFirewallPolicyUrlListMapInput)(nil)).Elem(), NetworkFirewallPolicyUrlListMap{})
	pulumi.RegisterOutputType(NetworkFirewallPolicyUrlListOutput{})
	pulumi.RegisterOutputType(NetworkFirewallPolicyUrlListArrayOutput{})
	pulumi.RegisterOutputType(NetworkFirewallPolicyUrlListMapOutput{})
}
