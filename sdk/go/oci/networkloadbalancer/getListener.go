// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkloadbalancer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Listener resource in Oracle Cloud Infrastructure Network Load Balancer service.
//
// Retrieves listener properties associated with a given network load balancer and listener name.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/NetworkLoadBalancer"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := NetworkLoadBalancer.GetListener(ctx, &networkloadbalancer.GetListenerArgs{
//				ListenerName:          oci_network_load_balancer_listener.Test_listener.Name,
//				NetworkLoadBalancerId: oci_network_load_balancer_network_load_balancer.Test_network_load_balancer.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupListener(ctx *pulumi.Context, args *LookupListenerArgs, opts ...pulumi.InvokeOption) (*LookupListenerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupListenerResult
	err := ctx.Invoke("oci:NetworkLoadBalancer/getListener:getListener", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getListener.
type LookupListenerArgs struct {
	// The name of the listener to get.  Example: `exampleListener`
	ListenerName string `pulumi:"listenerName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer to update.
	NetworkLoadBalancerId string `pulumi:"networkLoadBalancerId"`
}

// A collection of values returned by getListener.
type LookupListenerResult struct {
	// The name of the associated backend set.  Example: `exampleBackendSet`
	DefaultBackendSetName string `pulumi:"defaultBackendSetName"`
	Id                    string `pulumi:"id"`
	// IP version associated with the listener.
	IpVersion    string `pulumi:"ipVersion"`
	ListenerName string `pulumi:"listenerName"`
	// A friendly name for the listener. It must be unique and it cannot be changed.  Example: `exampleListener`
	Name                  string `pulumi:"name"`
	NetworkLoadBalancerId string `pulumi:"networkLoadBalancerId"`
	// The communication port for the listener.  Example: `80`
	Port int `pulumi:"port"`
	// The protocol on which the listener accepts connection requests. For public network load balancers, ANY protocol refers to TCP/UDP with the wildcard port. For private network load balancers, ANY protocol refers to TCP/UDP/ICMP (note that ICMP requires isPreserveSourceDestination to be set to true). "ListNetworkLoadBalancersProtocols" API is deprecated and it will not return the updated values. Use the allowed values for the protocol instead.  Example: `TCP`
	Protocol string `pulumi:"protocol"`
}

func LookupListenerOutput(ctx *pulumi.Context, args LookupListenerOutputArgs, opts ...pulumi.InvokeOption) LookupListenerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupListenerResult, error) {
			args := v.(LookupListenerArgs)
			r, err := LookupListener(ctx, &args, opts...)
			var s LookupListenerResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupListenerResultOutput)
}

// A collection of arguments for invoking getListener.
type LookupListenerOutputArgs struct {
	// The name of the listener to get.  Example: `exampleListener`
	ListenerName pulumi.StringInput `pulumi:"listenerName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer to update.
	NetworkLoadBalancerId pulumi.StringInput `pulumi:"networkLoadBalancerId"`
}

func (LookupListenerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupListenerArgs)(nil)).Elem()
}

// A collection of values returned by getListener.
type LookupListenerResultOutput struct{ *pulumi.OutputState }

func (LookupListenerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupListenerResult)(nil)).Elem()
}

func (o LookupListenerResultOutput) ToLookupListenerResultOutput() LookupListenerResultOutput {
	return o
}

func (o LookupListenerResultOutput) ToLookupListenerResultOutputWithContext(ctx context.Context) LookupListenerResultOutput {
	return o
}

// The name of the associated backend set.  Example: `exampleBackendSet`
func (o LookupListenerResultOutput) DefaultBackendSetName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupListenerResult) string { return v.DefaultBackendSetName }).(pulumi.StringOutput)
}

func (o LookupListenerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupListenerResult) string { return v.Id }).(pulumi.StringOutput)
}

// IP version associated with the listener.
func (o LookupListenerResultOutput) IpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupListenerResult) string { return v.IpVersion }).(pulumi.StringOutput)
}

func (o LookupListenerResultOutput) ListenerName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupListenerResult) string { return v.ListenerName }).(pulumi.StringOutput)
}

// A friendly name for the listener. It must be unique and it cannot be changed.  Example: `exampleListener`
func (o LookupListenerResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupListenerResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupListenerResultOutput) NetworkLoadBalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupListenerResult) string { return v.NetworkLoadBalancerId }).(pulumi.StringOutput)
}

// The communication port for the listener.  Example: `80`
func (o LookupListenerResultOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v LookupListenerResult) int { return v.Port }).(pulumi.IntOutput)
}

// The protocol on which the listener accepts connection requests. For public network load balancers, ANY protocol refers to TCP/UDP with the wildcard port. For private network load balancers, ANY protocol refers to TCP/UDP/ICMP (note that ICMP requires isPreserveSourceDestination to be set to true). "ListNetworkLoadBalancersProtocols" API is deprecated and it will not return the updated values. Use the allowed values for the protocol instead.  Example: `TCP`
func (o LookupListenerResultOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v LookupListenerResult) string { return v.Protocol }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupListenerResultOutput{})
}
