// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkloadbalancer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Network Load Balancer Backend Set Backend Operational Status resource in Oracle Cloud Infrastructure Network Load Balancer service.
//
// Retrieves the current operational status of the specified backend server.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/networkloadbalancer"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := networkloadbalancer.GetNetworkLoadBalancerBackendSetBackendOperationalStatus(ctx, &networkloadbalancer.GetNetworkLoadBalancerBackendSetBackendOperationalStatusArgs{
//				BackendName:           testBackend.Name,
//				BackendSetName:        testBackendSet.Name,
//				NetworkLoadBalancerId: testNetworkLoadBalancer.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetNetworkLoadBalancerBackendSetBackendOperationalStatus(ctx *pulumi.Context, args *GetNetworkLoadBalancerBackendSetBackendOperationalStatusArgs, opts ...pulumi.InvokeOption) (*GetNetworkLoadBalancerBackendSetBackendOperationalStatusResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetNetworkLoadBalancerBackendSetBackendOperationalStatusResult
	err := ctx.Invoke("oci:NetworkLoadBalancer/getNetworkLoadBalancerBackendSetBackendOperationalStatus:getNetworkLoadBalancerBackendSetBackendOperationalStatus", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetworkLoadBalancerBackendSetBackendOperationalStatus.
type GetNetworkLoadBalancerBackendSetBackendOperationalStatusArgs struct {
	// The name of the backend server to retrieve health status for. If the backend was created with an explicitly specified name, that name should be used here. If the backend was created without explicitly specifying the name, but was created using ipAddress, this is specified as <ipAddress>:<port>. If the backend was created without explicitly specifying the name, but was created using targetId, this is specified as <targetId>:<port>.  Example: `10.0.0.3:8080` or `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>:8080`
	BackendName string `pulumi:"backendName"`
	// The name of the backend set associated with the backend server for which to retrieve the operational status.  Example: `exampleBackendSet`
	BackendSetName string `pulumi:"backendSetName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer to update.
	NetworkLoadBalancerId string `pulumi:"networkLoadBalancerId"`
}

// A collection of values returned by getNetworkLoadBalancerBackendSetBackendOperationalStatus.
type GetNetworkLoadBalancerBackendSetBackendOperationalStatusResult struct {
	BackendName    string `pulumi:"backendName"`
	BackendSetName string `pulumi:"backendSetName"`
	// The provider-assigned unique ID for this managed resource.
	Id                    string `pulumi:"id"`
	NetworkLoadBalancerId string `pulumi:"networkLoadBalancerId"`
	// The operational status.
	Status string `pulumi:"status"`
}

func GetNetworkLoadBalancerBackendSetBackendOperationalStatusOutput(ctx *pulumi.Context, args GetNetworkLoadBalancerBackendSetBackendOperationalStatusOutputArgs, opts ...pulumi.InvokeOption) GetNetworkLoadBalancerBackendSetBackendOperationalStatusResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetNetworkLoadBalancerBackendSetBackendOperationalStatusResultOutput, error) {
			args := v.(GetNetworkLoadBalancerBackendSetBackendOperationalStatusArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:NetworkLoadBalancer/getNetworkLoadBalancerBackendSetBackendOperationalStatus:getNetworkLoadBalancerBackendSetBackendOperationalStatus", args, GetNetworkLoadBalancerBackendSetBackendOperationalStatusResultOutput{}, options).(GetNetworkLoadBalancerBackendSetBackendOperationalStatusResultOutput), nil
		}).(GetNetworkLoadBalancerBackendSetBackendOperationalStatusResultOutput)
}

// A collection of arguments for invoking getNetworkLoadBalancerBackendSetBackendOperationalStatus.
type GetNetworkLoadBalancerBackendSetBackendOperationalStatusOutputArgs struct {
	// The name of the backend server to retrieve health status for. If the backend was created with an explicitly specified name, that name should be used here. If the backend was created without explicitly specifying the name, but was created using ipAddress, this is specified as <ipAddress>:<port>. If the backend was created without explicitly specifying the name, but was created using targetId, this is specified as <targetId>:<port>.  Example: `10.0.0.3:8080` or `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>:8080`
	BackendName pulumi.StringInput `pulumi:"backendName"`
	// The name of the backend set associated with the backend server for which to retrieve the operational status.  Example: `exampleBackendSet`
	BackendSetName pulumi.StringInput `pulumi:"backendSetName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer to update.
	NetworkLoadBalancerId pulumi.StringInput `pulumi:"networkLoadBalancerId"`
}

func (GetNetworkLoadBalancerBackendSetBackendOperationalStatusOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLoadBalancerBackendSetBackendOperationalStatusArgs)(nil)).Elem()
}

// A collection of values returned by getNetworkLoadBalancerBackendSetBackendOperationalStatus.
type GetNetworkLoadBalancerBackendSetBackendOperationalStatusResultOutput struct{ *pulumi.OutputState }

func (GetNetworkLoadBalancerBackendSetBackendOperationalStatusResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLoadBalancerBackendSetBackendOperationalStatusResult)(nil)).Elem()
}

func (o GetNetworkLoadBalancerBackendSetBackendOperationalStatusResultOutput) ToGetNetworkLoadBalancerBackendSetBackendOperationalStatusResultOutput() GetNetworkLoadBalancerBackendSetBackendOperationalStatusResultOutput {
	return o
}

func (o GetNetworkLoadBalancerBackendSetBackendOperationalStatusResultOutput) ToGetNetworkLoadBalancerBackendSetBackendOperationalStatusResultOutputWithContext(ctx context.Context) GetNetworkLoadBalancerBackendSetBackendOperationalStatusResultOutput {
	return o
}

func (o GetNetworkLoadBalancerBackendSetBackendOperationalStatusResultOutput) BackendName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancerBackendSetBackendOperationalStatusResult) string { return v.BackendName }).(pulumi.StringOutput)
}

func (o GetNetworkLoadBalancerBackendSetBackendOperationalStatusResultOutput) BackendSetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancerBackendSetBackendOperationalStatusResult) string { return v.BackendSetName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetNetworkLoadBalancerBackendSetBackendOperationalStatusResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancerBackendSetBackendOperationalStatusResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetNetworkLoadBalancerBackendSetBackendOperationalStatusResultOutput) NetworkLoadBalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancerBackendSetBackendOperationalStatusResult) string {
		return v.NetworkLoadBalancerId
	}).(pulumi.StringOutput)
}

// The operational status.
func (o GetNetworkLoadBalancerBackendSetBackendOperationalStatusResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancerBackendSetBackendOperationalStatusResult) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNetworkLoadBalancerBackendSetBackendOperationalStatusResultOutput{})
}
