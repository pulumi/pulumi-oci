// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package networkloadbalancer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Network Load Balancer Health resource in Oracle Cloud Infrastructure Network Load Balancer service.
//
// Retrieves the health status for the specified network load balancer.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/NetworkLoadBalancer"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := NetworkLoadBalancer.GetNetworkLoadBalancerHealth(ctx, &networkloadbalancer.GetNetworkLoadBalancerHealthArgs{
//				NetworkLoadBalancerId: oci_network_load_balancer_network_load_balancer.Test_network_load_balancer.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetNetworkLoadBalancerHealth(ctx *pulumi.Context, args *GetNetworkLoadBalancerHealthArgs, opts ...pulumi.InvokeOption) (*GetNetworkLoadBalancerHealthResult, error) {
	var rv GetNetworkLoadBalancerHealthResult
	err := ctx.Invoke("oci:NetworkLoadBalancer/getNetworkLoadBalancerHealth:getNetworkLoadBalancerHealth", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetworkLoadBalancerHealth.
type GetNetworkLoadBalancerHealthArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer to update.
	NetworkLoadBalancerId string `pulumi:"networkLoadBalancerId"`
}

// A collection of values returned by getNetworkLoadBalancerHealth.
type GetNetworkLoadBalancerHealthResult struct {
	// A list of backend sets that are currently in the `CRITICAL` health state. The list identifies each backend set by the user-friendly name you assigned when you created the backend set.  Example: `exampleBackendSet`
	CriticalStateBackendSetNames []string `pulumi:"criticalStateBackendSetNames"`
	// The provider-assigned unique ID for this managed resource.
	Id                    string `pulumi:"id"`
	NetworkLoadBalancerId string `pulumi:"networkLoadBalancerId"`
	// The overall health status of the network load balancer.
	// *  **OK:** All backend sets associated with the network load balancer return a status of `OK`.
	// *  **WARNING:** At least one of the backend sets associated with the network load balancer returns a status of `WARNING`, no backend sets return a status of `CRITICAL`, and the network load balancer life cycle state is `ACTIVE`.
	// *  **CRITICAL:** One or more of the backend sets associated with the network load balancer return a status of `CRITICAL`.
	// *  **UNKNOWN:** If any one of the following conditions is true:
	// *  The network load balancer life cycle state is not `ACTIVE`.
	// *  No backend sets are defined for the network load balancer.
	// *  More than half of the backend sets associated with the network load balancer return a status of `UNKNOWN`, none of the backend sets return a status of `WARNING` or `CRITICAL`, and the network load balancer life cycle state is `ACTIVE`.
	// *  The system could not retrieve metrics for any reason.
	Status string `pulumi:"status"`
	// The total number of backend sets associated with this network load balancer.  Example: `4`
	TotalBackendSetCount int `pulumi:"totalBackendSetCount"`
	// A list of backend sets that are currently in the `UNKNOWN` health state. The list identifies each backend set by the user-friendly name you assigned when you created the backend set.  Example: `exampleBackendSet2`
	UnknownStateBackendSetNames []string `pulumi:"unknownStateBackendSetNames"`
	// A list of backend sets that are currently in the `WARNING` health state. The list identifies each backend set by the user-friendly name you assigned when you created the backend set.  Example: `exampleBackendSet3`
	WarningStateBackendSetNames []string `pulumi:"warningStateBackendSetNames"`
}

func GetNetworkLoadBalancerHealthOutput(ctx *pulumi.Context, args GetNetworkLoadBalancerHealthOutputArgs, opts ...pulumi.InvokeOption) GetNetworkLoadBalancerHealthResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetNetworkLoadBalancerHealthResult, error) {
			args := v.(GetNetworkLoadBalancerHealthArgs)
			r, err := GetNetworkLoadBalancerHealth(ctx, &args, opts...)
			var s GetNetworkLoadBalancerHealthResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetNetworkLoadBalancerHealthResultOutput)
}

// A collection of arguments for invoking getNetworkLoadBalancerHealth.
type GetNetworkLoadBalancerHealthOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer to update.
	NetworkLoadBalancerId pulumi.StringInput `pulumi:"networkLoadBalancerId"`
}

func (GetNetworkLoadBalancerHealthOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLoadBalancerHealthArgs)(nil)).Elem()
}

// A collection of values returned by getNetworkLoadBalancerHealth.
type GetNetworkLoadBalancerHealthResultOutput struct{ *pulumi.OutputState }

func (GetNetworkLoadBalancerHealthResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLoadBalancerHealthResult)(nil)).Elem()
}

func (o GetNetworkLoadBalancerHealthResultOutput) ToGetNetworkLoadBalancerHealthResultOutput() GetNetworkLoadBalancerHealthResultOutput {
	return o
}

func (o GetNetworkLoadBalancerHealthResultOutput) ToGetNetworkLoadBalancerHealthResultOutputWithContext(ctx context.Context) GetNetworkLoadBalancerHealthResultOutput {
	return o
}

// A list of backend sets that are currently in the `CRITICAL` health state. The list identifies each backend set by the user-friendly name you assigned when you created the backend set.  Example: `exampleBackendSet`
func (o GetNetworkLoadBalancerHealthResultOutput) CriticalStateBackendSetNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancerHealthResult) []string { return v.CriticalStateBackendSetNames }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetNetworkLoadBalancerHealthResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancerHealthResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetNetworkLoadBalancerHealthResultOutput) NetworkLoadBalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancerHealthResult) string { return v.NetworkLoadBalancerId }).(pulumi.StringOutput)
}

// The overall health status of the network load balancer.
// *  **OK:** All backend sets associated with the network load balancer return a status of `OK`.
// *  **WARNING:** At least one of the backend sets associated with the network load balancer returns a status of `WARNING`, no backend sets return a status of `CRITICAL`, and the network load balancer life cycle state is `ACTIVE`.
// *  **CRITICAL:** One or more of the backend sets associated with the network load balancer return a status of `CRITICAL`.
// *  **UNKNOWN:** If any one of the following conditions is true:
// *  The network load balancer life cycle state is not `ACTIVE`.
// *  No backend sets are defined for the network load balancer.
// *  More than half of the backend sets associated with the network load balancer return a status of `UNKNOWN`, none of the backend sets return a status of `WARNING` or `CRITICAL`, and the network load balancer life cycle state is `ACTIVE`.
// *  The system could not retrieve metrics for any reason.
func (o GetNetworkLoadBalancerHealthResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancerHealthResult) string { return v.Status }).(pulumi.StringOutput)
}

// The total number of backend sets associated with this network load balancer.  Example: `4`
func (o GetNetworkLoadBalancerHealthResultOutput) TotalBackendSetCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancerHealthResult) int { return v.TotalBackendSetCount }).(pulumi.IntOutput)
}

// A list of backend sets that are currently in the `UNKNOWN` health state. The list identifies each backend set by the user-friendly name you assigned when you created the backend set.  Example: `exampleBackendSet2`
func (o GetNetworkLoadBalancerHealthResultOutput) UnknownStateBackendSetNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancerHealthResult) []string { return v.UnknownStateBackendSetNames }).(pulumi.StringArrayOutput)
}

// A list of backend sets that are currently in the `WARNING` health state. The list identifies each backend set by the user-friendly name you assigned when you created the backend set.  Example: `exampleBackendSet3`
func (o GetNetworkLoadBalancerHealthResultOutput) WarningStateBackendSetNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancerHealthResult) []string { return v.WarningStateBackendSetNames }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNetworkLoadBalancerHealthResultOutput{})
}
