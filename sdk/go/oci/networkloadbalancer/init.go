// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkloadbalancer

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-oci/sdk/go/oci"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "oci:NetworkLoadBalancer/backend:Backend":
		r = &Backend{}
	case "oci:NetworkLoadBalancer/backendSet:BackendSet":
		r = &BackendSet{}
	case "oci:NetworkLoadBalancer/listener:Listener":
		r = &Listener{}
	case "oci:NetworkLoadBalancer/networkLoadBalancer:NetworkLoadBalancer":
		r = &NetworkLoadBalancer{}
	case "oci:NetworkLoadBalancer/networkLoadBalancersBackendSetsUnified:NetworkLoadBalancersBackendSetsUnified":
		r = &NetworkLoadBalancersBackendSetsUnified{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := oci.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"oci",
		"NetworkLoadBalancer/backend",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"NetworkLoadBalancer/backendSet",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"NetworkLoadBalancer/listener",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"NetworkLoadBalancer/networkLoadBalancer",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"NetworkLoadBalancer/networkLoadBalancersBackendSetsUnified",
		&module{version},
	)
}
