// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkloadbalancer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type BackendSetBackend struct {
	// (Updatable) The IP address of the backend server.  Example: `10.0.0.3`
	IpAddress *string `pulumi:"ipAddress"`
	// (Updatable) Whether the network load balancer should treat this server as a backup unit. If `true`, then the network load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as "isBackup" fail the health check policy.  Example: `false`
	IsBackup *bool `pulumi:"isBackup"`
	// (Updatable) Whether the network load balancer should drain this server. Servers marked "isDrain" receive no incoming traffic.  Example: `false`
	IsDrain *bool `pulumi:"isDrain"`
	// (Updatable) Whether the network load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`
	IsOffline *bool `pulumi:"isOffline"`
	// A user-friendly name for the backend set that must be unique and cannot be changed.
	//
	// Valid backend set names include only alphanumeric characters, dashes, and underscores. Backend set names cannot contain spaces. Avoid entering confidential information.
	//
	// Example: `exampleBackendSet`
	Name *string `pulumi:"name"`
	// (Updatable) The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
	Port int `pulumi:"port"`
	// (Updatable) The IP OCID/Instance OCID associated with the backend server. Example: `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>`
	TargetId *string `pulumi:"targetId"`
	// (Updatable) The network load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives three times the number of new connections as a server weighted '1'. For more information about load balancing policies, see [How Network Load Balancing Policies Work](https://docs.cloud.oracle.com/iaas/Content/Balance/Reference/lbpolicies.htm).  Example: `3`
	Weight *int `pulumi:"weight"`
}

// BackendSetBackendInput is an input type that accepts BackendSetBackendArgs and BackendSetBackendOutput values.
// You can construct a concrete instance of `BackendSetBackendInput` via:
//
//	BackendSetBackendArgs{...}
type BackendSetBackendInput interface {
	pulumi.Input

	ToBackendSetBackendOutput() BackendSetBackendOutput
	ToBackendSetBackendOutputWithContext(context.Context) BackendSetBackendOutput
}

type BackendSetBackendArgs struct {
	// (Updatable) The IP address of the backend server.  Example: `10.0.0.3`
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// (Updatable) Whether the network load balancer should treat this server as a backup unit. If `true`, then the network load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as "isBackup" fail the health check policy.  Example: `false`
	IsBackup pulumi.BoolPtrInput `pulumi:"isBackup"`
	// (Updatable) Whether the network load balancer should drain this server. Servers marked "isDrain" receive no incoming traffic.  Example: `false`
	IsDrain pulumi.BoolPtrInput `pulumi:"isDrain"`
	// (Updatable) Whether the network load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`
	IsOffline pulumi.BoolPtrInput `pulumi:"isOffline"`
	// A user-friendly name for the backend set that must be unique and cannot be changed.
	//
	// Valid backend set names include only alphanumeric characters, dashes, and underscores. Backend set names cannot contain spaces. Avoid entering confidential information.
	//
	// Example: `exampleBackendSet`
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Updatable) The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
	Port pulumi.IntInput `pulumi:"port"`
	// (Updatable) The IP OCID/Instance OCID associated with the backend server. Example: `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>`
	TargetId pulumi.StringPtrInput `pulumi:"targetId"`
	// (Updatable) The network load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives three times the number of new connections as a server weighted '1'. For more information about load balancing policies, see [How Network Load Balancing Policies Work](https://docs.cloud.oracle.com/iaas/Content/Balance/Reference/lbpolicies.htm).  Example: `3`
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (BackendSetBackendArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendSetBackend)(nil)).Elem()
}

func (i BackendSetBackendArgs) ToBackendSetBackendOutput() BackendSetBackendOutput {
	return i.ToBackendSetBackendOutputWithContext(context.Background())
}

func (i BackendSetBackendArgs) ToBackendSetBackendOutputWithContext(ctx context.Context) BackendSetBackendOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendSetBackendOutput)
}

// BackendSetBackendArrayInput is an input type that accepts BackendSetBackendArray and BackendSetBackendArrayOutput values.
// You can construct a concrete instance of `BackendSetBackendArrayInput` via:
//
//	BackendSetBackendArray{ BackendSetBackendArgs{...} }
type BackendSetBackendArrayInput interface {
	pulumi.Input

	ToBackendSetBackendArrayOutput() BackendSetBackendArrayOutput
	ToBackendSetBackendArrayOutputWithContext(context.Context) BackendSetBackendArrayOutput
}

type BackendSetBackendArray []BackendSetBackendInput

func (BackendSetBackendArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendSetBackend)(nil)).Elem()
}

func (i BackendSetBackendArray) ToBackendSetBackendArrayOutput() BackendSetBackendArrayOutput {
	return i.ToBackendSetBackendArrayOutputWithContext(context.Background())
}

func (i BackendSetBackendArray) ToBackendSetBackendArrayOutputWithContext(ctx context.Context) BackendSetBackendArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendSetBackendArrayOutput)
}

type BackendSetBackendOutput struct{ *pulumi.OutputState }

func (BackendSetBackendOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendSetBackend)(nil)).Elem()
}

func (o BackendSetBackendOutput) ToBackendSetBackendOutput() BackendSetBackendOutput {
	return o
}

func (o BackendSetBackendOutput) ToBackendSetBackendOutputWithContext(ctx context.Context) BackendSetBackendOutput {
	return o
}

// (Updatable) The IP address of the backend server.  Example: `10.0.0.3`
func (o BackendSetBackendOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendSetBackend) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// (Updatable) Whether the network load balancer should treat this server as a backup unit. If `true`, then the network load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as "isBackup" fail the health check policy.  Example: `false`
func (o BackendSetBackendOutput) IsBackup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BackendSetBackend) *bool { return v.IsBackup }).(pulumi.BoolPtrOutput)
}

// (Updatable) Whether the network load balancer should drain this server. Servers marked "isDrain" receive no incoming traffic.  Example: `false`
func (o BackendSetBackendOutput) IsDrain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BackendSetBackend) *bool { return v.IsDrain }).(pulumi.BoolPtrOutput)
}

// (Updatable) Whether the network load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`
func (o BackendSetBackendOutput) IsOffline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BackendSetBackend) *bool { return v.IsOffline }).(pulumi.BoolPtrOutput)
}

// A user-friendly name for the backend set that must be unique and cannot be changed.
//
// Valid backend set names include only alphanumeric characters, dashes, and underscores. Backend set names cannot contain spaces. Avoid entering confidential information.
//
// Example: `exampleBackendSet`
func (o BackendSetBackendOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendSetBackend) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Updatable) The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
func (o BackendSetBackendOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v BackendSetBackend) int { return v.Port }).(pulumi.IntOutput)
}

// (Updatable) The IP OCID/Instance OCID associated with the backend server. Example: `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>`
func (o BackendSetBackendOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendSetBackend) *string { return v.TargetId }).(pulumi.StringPtrOutput)
}

// (Updatable) The network load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives three times the number of new connections as a server weighted '1'. For more information about load balancing policies, see [How Network Load Balancing Policies Work](https://docs.cloud.oracle.com/iaas/Content/Balance/Reference/lbpolicies.htm).  Example: `3`
func (o BackendSetBackendOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackendSetBackend) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type BackendSetBackendArrayOutput struct{ *pulumi.OutputState }

func (BackendSetBackendArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendSetBackend)(nil)).Elem()
}

func (o BackendSetBackendArrayOutput) ToBackendSetBackendArrayOutput() BackendSetBackendArrayOutput {
	return o
}

func (o BackendSetBackendArrayOutput) ToBackendSetBackendArrayOutputWithContext(ctx context.Context) BackendSetBackendArrayOutput {
	return o
}

func (o BackendSetBackendArrayOutput) Index(i pulumi.IntInput) BackendSetBackendOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackendSetBackend {
		return vs[0].([]BackendSetBackend)[vs[1].(int)]
	}).(BackendSetBackendOutput)
}

type BackendSetHealthChecker struct {
	// (Updatable) DNS healthcheck configurations.
	Dns *BackendSetHealthCheckerDns `pulumi:"dns"`
	// (Updatable) The interval between health checks, in milliseconds. The default value is 10000 (10 seconds).  Example: `10000`
	IntervalInMillis *int `pulumi:"intervalInMillis"`
	// (Updatable) The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
	Port *int `pulumi:"port"`
	// (Updatable) The protocol the health check must use; either HTTP, HTTPS, UDP, TCP or DNS.  Example: `HTTP`
	Protocol string `pulumi:"protocol"`
	// (Updatable) Base64 encoded pattern to be sent as UDP or TCP health check probe.
	RequestData *string `pulumi:"requestData"`
	// (Updatable) A regular expression for parsing the response body from the backend server.  Example: `^((?!false).|\s)*$`
	ResponseBodyRegex *string `pulumi:"responseBodyRegex"`
	// (Updatable) Base64 encoded pattern to be validated as UDP or TCP health check probe response.
	ResponseData *string `pulumi:"responseData"`
	// (Updatable) The number of retries to attempt before a backend server is considered "unhealthy". This number also applies when recovering a server to the "healthy" state. The default value is 3.  Example: `3`
	Retries *int `pulumi:"retries"`
	// (Updatable) The status code a healthy backend server should return. If you configure the health check policy to use the HTTP protocol, then you can use common HTTP status codes such as "200".  Example: `200`
	ReturnCode *int `pulumi:"returnCode"`
	// (Updatable) The maximum time, in milliseconds, to wait for a reply to a health check. A health check is successful only if a reply returns within this timeout period. The default value is 3000 (3 seconds).  Example: `3000`
	TimeoutInMillis *int `pulumi:"timeoutInMillis"`
	// (Updatable) The path against which to run the health check.  Example: `/healthcheck`
	UrlPath *string `pulumi:"urlPath"`
}

// BackendSetHealthCheckerInput is an input type that accepts BackendSetHealthCheckerArgs and BackendSetHealthCheckerOutput values.
// You can construct a concrete instance of `BackendSetHealthCheckerInput` via:
//
//	BackendSetHealthCheckerArgs{...}
type BackendSetHealthCheckerInput interface {
	pulumi.Input

	ToBackendSetHealthCheckerOutput() BackendSetHealthCheckerOutput
	ToBackendSetHealthCheckerOutputWithContext(context.Context) BackendSetHealthCheckerOutput
}

type BackendSetHealthCheckerArgs struct {
	// (Updatable) DNS healthcheck configurations.
	Dns BackendSetHealthCheckerDnsPtrInput `pulumi:"dns"`
	// (Updatable) The interval between health checks, in milliseconds. The default value is 10000 (10 seconds).  Example: `10000`
	IntervalInMillis pulumi.IntPtrInput `pulumi:"intervalInMillis"`
	// (Updatable) The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
	Port pulumi.IntPtrInput `pulumi:"port"`
	// (Updatable) The protocol the health check must use; either HTTP, HTTPS, UDP, TCP or DNS.  Example: `HTTP`
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// (Updatable) Base64 encoded pattern to be sent as UDP or TCP health check probe.
	RequestData pulumi.StringPtrInput `pulumi:"requestData"`
	// (Updatable) A regular expression for parsing the response body from the backend server.  Example: `^((?!false).|\s)*$`
	ResponseBodyRegex pulumi.StringPtrInput `pulumi:"responseBodyRegex"`
	// (Updatable) Base64 encoded pattern to be validated as UDP or TCP health check probe response.
	ResponseData pulumi.StringPtrInput `pulumi:"responseData"`
	// (Updatable) The number of retries to attempt before a backend server is considered "unhealthy". This number also applies when recovering a server to the "healthy" state. The default value is 3.  Example: `3`
	Retries pulumi.IntPtrInput `pulumi:"retries"`
	// (Updatable) The status code a healthy backend server should return. If you configure the health check policy to use the HTTP protocol, then you can use common HTTP status codes such as "200".  Example: `200`
	ReturnCode pulumi.IntPtrInput `pulumi:"returnCode"`
	// (Updatable) The maximum time, in milliseconds, to wait for a reply to a health check. A health check is successful only if a reply returns within this timeout period. The default value is 3000 (3 seconds).  Example: `3000`
	TimeoutInMillis pulumi.IntPtrInput `pulumi:"timeoutInMillis"`
	// (Updatable) The path against which to run the health check.  Example: `/healthcheck`
	UrlPath pulumi.StringPtrInput `pulumi:"urlPath"`
}

func (BackendSetHealthCheckerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendSetHealthChecker)(nil)).Elem()
}

func (i BackendSetHealthCheckerArgs) ToBackendSetHealthCheckerOutput() BackendSetHealthCheckerOutput {
	return i.ToBackendSetHealthCheckerOutputWithContext(context.Background())
}

func (i BackendSetHealthCheckerArgs) ToBackendSetHealthCheckerOutputWithContext(ctx context.Context) BackendSetHealthCheckerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendSetHealthCheckerOutput)
}

func (i BackendSetHealthCheckerArgs) ToBackendSetHealthCheckerPtrOutput() BackendSetHealthCheckerPtrOutput {
	return i.ToBackendSetHealthCheckerPtrOutputWithContext(context.Background())
}

func (i BackendSetHealthCheckerArgs) ToBackendSetHealthCheckerPtrOutputWithContext(ctx context.Context) BackendSetHealthCheckerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendSetHealthCheckerOutput).ToBackendSetHealthCheckerPtrOutputWithContext(ctx)
}

// BackendSetHealthCheckerPtrInput is an input type that accepts BackendSetHealthCheckerArgs, BackendSetHealthCheckerPtr and BackendSetHealthCheckerPtrOutput values.
// You can construct a concrete instance of `BackendSetHealthCheckerPtrInput` via:
//
//	        BackendSetHealthCheckerArgs{...}
//
//	or:
//
//	        nil
type BackendSetHealthCheckerPtrInput interface {
	pulumi.Input

	ToBackendSetHealthCheckerPtrOutput() BackendSetHealthCheckerPtrOutput
	ToBackendSetHealthCheckerPtrOutputWithContext(context.Context) BackendSetHealthCheckerPtrOutput
}

type backendSetHealthCheckerPtrType BackendSetHealthCheckerArgs

func BackendSetHealthCheckerPtr(v *BackendSetHealthCheckerArgs) BackendSetHealthCheckerPtrInput {
	return (*backendSetHealthCheckerPtrType)(v)
}

func (*backendSetHealthCheckerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendSetHealthChecker)(nil)).Elem()
}

func (i *backendSetHealthCheckerPtrType) ToBackendSetHealthCheckerPtrOutput() BackendSetHealthCheckerPtrOutput {
	return i.ToBackendSetHealthCheckerPtrOutputWithContext(context.Background())
}

func (i *backendSetHealthCheckerPtrType) ToBackendSetHealthCheckerPtrOutputWithContext(ctx context.Context) BackendSetHealthCheckerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendSetHealthCheckerPtrOutput)
}

type BackendSetHealthCheckerOutput struct{ *pulumi.OutputState }

func (BackendSetHealthCheckerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendSetHealthChecker)(nil)).Elem()
}

func (o BackendSetHealthCheckerOutput) ToBackendSetHealthCheckerOutput() BackendSetHealthCheckerOutput {
	return o
}

func (o BackendSetHealthCheckerOutput) ToBackendSetHealthCheckerOutputWithContext(ctx context.Context) BackendSetHealthCheckerOutput {
	return o
}

func (o BackendSetHealthCheckerOutput) ToBackendSetHealthCheckerPtrOutput() BackendSetHealthCheckerPtrOutput {
	return o.ToBackendSetHealthCheckerPtrOutputWithContext(context.Background())
}

func (o BackendSetHealthCheckerOutput) ToBackendSetHealthCheckerPtrOutputWithContext(ctx context.Context) BackendSetHealthCheckerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackendSetHealthChecker) *BackendSetHealthChecker {
		return &v
	}).(BackendSetHealthCheckerPtrOutput)
}

// (Updatable) DNS healthcheck configurations.
func (o BackendSetHealthCheckerOutput) Dns() BackendSetHealthCheckerDnsPtrOutput {
	return o.ApplyT(func(v BackendSetHealthChecker) *BackendSetHealthCheckerDns { return v.Dns }).(BackendSetHealthCheckerDnsPtrOutput)
}

// (Updatable) The interval between health checks, in milliseconds. The default value is 10000 (10 seconds).  Example: `10000`
func (o BackendSetHealthCheckerOutput) IntervalInMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackendSetHealthChecker) *int { return v.IntervalInMillis }).(pulumi.IntPtrOutput)
}

// (Updatable) The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
func (o BackendSetHealthCheckerOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackendSetHealthChecker) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// (Updatable) The protocol the health check must use; either HTTP, HTTPS, UDP, TCP or DNS.  Example: `HTTP`
func (o BackendSetHealthCheckerOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v BackendSetHealthChecker) string { return v.Protocol }).(pulumi.StringOutput)
}

// (Updatable) Base64 encoded pattern to be sent as UDP or TCP health check probe.
func (o BackendSetHealthCheckerOutput) RequestData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendSetHealthChecker) *string { return v.RequestData }).(pulumi.StringPtrOutput)
}

// (Updatable) A regular expression for parsing the response body from the backend server.  Example: `^((?!false).|\s)*$`
func (o BackendSetHealthCheckerOutput) ResponseBodyRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendSetHealthChecker) *string { return v.ResponseBodyRegex }).(pulumi.StringPtrOutput)
}

// (Updatable) Base64 encoded pattern to be validated as UDP or TCP health check probe response.
func (o BackendSetHealthCheckerOutput) ResponseData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendSetHealthChecker) *string { return v.ResponseData }).(pulumi.StringPtrOutput)
}

// (Updatable) The number of retries to attempt before a backend server is considered "unhealthy". This number also applies when recovering a server to the "healthy" state. The default value is 3.  Example: `3`
func (o BackendSetHealthCheckerOutput) Retries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackendSetHealthChecker) *int { return v.Retries }).(pulumi.IntPtrOutput)
}

// (Updatable) The status code a healthy backend server should return. If you configure the health check policy to use the HTTP protocol, then you can use common HTTP status codes such as "200".  Example: `200`
func (o BackendSetHealthCheckerOutput) ReturnCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackendSetHealthChecker) *int { return v.ReturnCode }).(pulumi.IntPtrOutput)
}

// (Updatable) The maximum time, in milliseconds, to wait for a reply to a health check. A health check is successful only if a reply returns within this timeout period. The default value is 3000 (3 seconds).  Example: `3000`
func (o BackendSetHealthCheckerOutput) TimeoutInMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackendSetHealthChecker) *int { return v.TimeoutInMillis }).(pulumi.IntPtrOutput)
}

// (Updatable) The path against which to run the health check.  Example: `/healthcheck`
func (o BackendSetHealthCheckerOutput) UrlPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendSetHealthChecker) *string { return v.UrlPath }).(pulumi.StringPtrOutput)
}

type BackendSetHealthCheckerPtrOutput struct{ *pulumi.OutputState }

func (BackendSetHealthCheckerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendSetHealthChecker)(nil)).Elem()
}

func (o BackendSetHealthCheckerPtrOutput) ToBackendSetHealthCheckerPtrOutput() BackendSetHealthCheckerPtrOutput {
	return o
}

func (o BackendSetHealthCheckerPtrOutput) ToBackendSetHealthCheckerPtrOutputWithContext(ctx context.Context) BackendSetHealthCheckerPtrOutput {
	return o
}

func (o BackendSetHealthCheckerPtrOutput) Elem() BackendSetHealthCheckerOutput {
	return o.ApplyT(func(v *BackendSetHealthChecker) BackendSetHealthChecker {
		if v != nil {
			return *v
		}
		var ret BackendSetHealthChecker
		return ret
	}).(BackendSetHealthCheckerOutput)
}

// (Updatable) DNS healthcheck configurations.
func (o BackendSetHealthCheckerPtrOutput) Dns() BackendSetHealthCheckerDnsPtrOutput {
	return o.ApplyT(func(v *BackendSetHealthChecker) *BackendSetHealthCheckerDns {
		if v == nil {
			return nil
		}
		return v.Dns
	}).(BackendSetHealthCheckerDnsPtrOutput)
}

// (Updatable) The interval between health checks, in milliseconds. The default value is 10000 (10 seconds).  Example: `10000`
func (o BackendSetHealthCheckerPtrOutput) IntervalInMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackendSetHealthChecker) *int {
		if v == nil {
			return nil
		}
		return v.IntervalInMillis
	}).(pulumi.IntPtrOutput)
}

// (Updatable) The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
func (o BackendSetHealthCheckerPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackendSetHealthChecker) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// (Updatable) The protocol the health check must use; either HTTP, HTTPS, UDP, TCP or DNS.  Example: `HTTP`
func (o BackendSetHealthCheckerPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendSetHealthChecker) *string {
		if v == nil {
			return nil
		}
		return &v.Protocol
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Base64 encoded pattern to be sent as UDP or TCP health check probe.
func (o BackendSetHealthCheckerPtrOutput) RequestData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendSetHealthChecker) *string {
		if v == nil {
			return nil
		}
		return v.RequestData
	}).(pulumi.StringPtrOutput)
}

// (Updatable) A regular expression for parsing the response body from the backend server.  Example: `^((?!false).|\s)*$`
func (o BackendSetHealthCheckerPtrOutput) ResponseBodyRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendSetHealthChecker) *string {
		if v == nil {
			return nil
		}
		return v.ResponseBodyRegex
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Base64 encoded pattern to be validated as UDP or TCP health check probe response.
func (o BackendSetHealthCheckerPtrOutput) ResponseData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendSetHealthChecker) *string {
		if v == nil {
			return nil
		}
		return v.ResponseData
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The number of retries to attempt before a backend server is considered "unhealthy". This number also applies when recovering a server to the "healthy" state. The default value is 3.  Example: `3`
func (o BackendSetHealthCheckerPtrOutput) Retries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackendSetHealthChecker) *int {
		if v == nil {
			return nil
		}
		return v.Retries
	}).(pulumi.IntPtrOutput)
}

// (Updatable) The status code a healthy backend server should return. If you configure the health check policy to use the HTTP protocol, then you can use common HTTP status codes such as "200".  Example: `200`
func (o BackendSetHealthCheckerPtrOutput) ReturnCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackendSetHealthChecker) *int {
		if v == nil {
			return nil
		}
		return v.ReturnCode
	}).(pulumi.IntPtrOutput)
}

// (Updatable) The maximum time, in milliseconds, to wait for a reply to a health check. A health check is successful only if a reply returns within this timeout period. The default value is 3000 (3 seconds).  Example: `3000`
func (o BackendSetHealthCheckerPtrOutput) TimeoutInMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackendSetHealthChecker) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutInMillis
	}).(pulumi.IntPtrOutput)
}

// (Updatable) The path against which to run the health check.  Example: `/healthcheck`
func (o BackendSetHealthCheckerPtrOutput) UrlPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendSetHealthChecker) *string {
		if v == nil {
			return nil
		}
		return v.UrlPath
	}).(pulumi.StringPtrOutput)
}

type BackendSetHealthCheckerDns struct {
	// (Updatable) The absolute fully-qualified domain name to perform periodic DNS queries. If not provided, an extra dot will be added at the end of a domain name during the query.
	DomainName string `pulumi:"domainName"`
	// (Updatable) The class the dns health check query to use; either IN or CH.  Example: `IN`
	QueryClass *string `pulumi:"queryClass"`
	// (Updatable) The type the dns health check query to use; A, AAAA, TXT.  Example: `A`
	QueryType *string `pulumi:"queryType"`
	// (Updatable) An array that represents accepetable RCODE values for DNS query response. Example: ["NOERROR", "NXDOMAIN"]
	Rcodes []string `pulumi:"rcodes"`
	// (Updatable) DNS transport protocol; either UDP or TCP.  Example: `UDP`
	TransportProtocol *string `pulumi:"transportProtocol"`
}

// BackendSetHealthCheckerDnsInput is an input type that accepts BackendSetHealthCheckerDnsArgs and BackendSetHealthCheckerDnsOutput values.
// You can construct a concrete instance of `BackendSetHealthCheckerDnsInput` via:
//
//	BackendSetHealthCheckerDnsArgs{...}
type BackendSetHealthCheckerDnsInput interface {
	pulumi.Input

	ToBackendSetHealthCheckerDnsOutput() BackendSetHealthCheckerDnsOutput
	ToBackendSetHealthCheckerDnsOutputWithContext(context.Context) BackendSetHealthCheckerDnsOutput
}

type BackendSetHealthCheckerDnsArgs struct {
	// (Updatable) The absolute fully-qualified domain name to perform periodic DNS queries. If not provided, an extra dot will be added at the end of a domain name during the query.
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// (Updatable) The class the dns health check query to use; either IN or CH.  Example: `IN`
	QueryClass pulumi.StringPtrInput `pulumi:"queryClass"`
	// (Updatable) The type the dns health check query to use; A, AAAA, TXT.  Example: `A`
	QueryType pulumi.StringPtrInput `pulumi:"queryType"`
	// (Updatable) An array that represents accepetable RCODE values for DNS query response. Example: ["NOERROR", "NXDOMAIN"]
	Rcodes pulumi.StringArrayInput `pulumi:"rcodes"`
	// (Updatable) DNS transport protocol; either UDP or TCP.  Example: `UDP`
	TransportProtocol pulumi.StringPtrInput `pulumi:"transportProtocol"`
}

func (BackendSetHealthCheckerDnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendSetHealthCheckerDns)(nil)).Elem()
}

func (i BackendSetHealthCheckerDnsArgs) ToBackendSetHealthCheckerDnsOutput() BackendSetHealthCheckerDnsOutput {
	return i.ToBackendSetHealthCheckerDnsOutputWithContext(context.Background())
}

func (i BackendSetHealthCheckerDnsArgs) ToBackendSetHealthCheckerDnsOutputWithContext(ctx context.Context) BackendSetHealthCheckerDnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendSetHealthCheckerDnsOutput)
}

func (i BackendSetHealthCheckerDnsArgs) ToBackendSetHealthCheckerDnsPtrOutput() BackendSetHealthCheckerDnsPtrOutput {
	return i.ToBackendSetHealthCheckerDnsPtrOutputWithContext(context.Background())
}

func (i BackendSetHealthCheckerDnsArgs) ToBackendSetHealthCheckerDnsPtrOutputWithContext(ctx context.Context) BackendSetHealthCheckerDnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendSetHealthCheckerDnsOutput).ToBackendSetHealthCheckerDnsPtrOutputWithContext(ctx)
}

// BackendSetHealthCheckerDnsPtrInput is an input type that accepts BackendSetHealthCheckerDnsArgs, BackendSetHealthCheckerDnsPtr and BackendSetHealthCheckerDnsPtrOutput values.
// You can construct a concrete instance of `BackendSetHealthCheckerDnsPtrInput` via:
//
//	        BackendSetHealthCheckerDnsArgs{...}
//
//	or:
//
//	        nil
type BackendSetHealthCheckerDnsPtrInput interface {
	pulumi.Input

	ToBackendSetHealthCheckerDnsPtrOutput() BackendSetHealthCheckerDnsPtrOutput
	ToBackendSetHealthCheckerDnsPtrOutputWithContext(context.Context) BackendSetHealthCheckerDnsPtrOutput
}

type backendSetHealthCheckerDnsPtrType BackendSetHealthCheckerDnsArgs

func BackendSetHealthCheckerDnsPtr(v *BackendSetHealthCheckerDnsArgs) BackendSetHealthCheckerDnsPtrInput {
	return (*backendSetHealthCheckerDnsPtrType)(v)
}

func (*backendSetHealthCheckerDnsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendSetHealthCheckerDns)(nil)).Elem()
}

func (i *backendSetHealthCheckerDnsPtrType) ToBackendSetHealthCheckerDnsPtrOutput() BackendSetHealthCheckerDnsPtrOutput {
	return i.ToBackendSetHealthCheckerDnsPtrOutputWithContext(context.Background())
}

func (i *backendSetHealthCheckerDnsPtrType) ToBackendSetHealthCheckerDnsPtrOutputWithContext(ctx context.Context) BackendSetHealthCheckerDnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendSetHealthCheckerDnsPtrOutput)
}

type BackendSetHealthCheckerDnsOutput struct{ *pulumi.OutputState }

func (BackendSetHealthCheckerDnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendSetHealthCheckerDns)(nil)).Elem()
}

func (o BackendSetHealthCheckerDnsOutput) ToBackendSetHealthCheckerDnsOutput() BackendSetHealthCheckerDnsOutput {
	return o
}

func (o BackendSetHealthCheckerDnsOutput) ToBackendSetHealthCheckerDnsOutputWithContext(ctx context.Context) BackendSetHealthCheckerDnsOutput {
	return o
}

func (o BackendSetHealthCheckerDnsOutput) ToBackendSetHealthCheckerDnsPtrOutput() BackendSetHealthCheckerDnsPtrOutput {
	return o.ToBackendSetHealthCheckerDnsPtrOutputWithContext(context.Background())
}

func (o BackendSetHealthCheckerDnsOutput) ToBackendSetHealthCheckerDnsPtrOutputWithContext(ctx context.Context) BackendSetHealthCheckerDnsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackendSetHealthCheckerDns) *BackendSetHealthCheckerDns {
		return &v
	}).(BackendSetHealthCheckerDnsPtrOutput)
}

// (Updatable) The absolute fully-qualified domain name to perform periodic DNS queries. If not provided, an extra dot will be added at the end of a domain name during the query.
func (o BackendSetHealthCheckerDnsOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v BackendSetHealthCheckerDns) string { return v.DomainName }).(pulumi.StringOutput)
}

// (Updatable) The class the dns health check query to use; either IN or CH.  Example: `IN`
func (o BackendSetHealthCheckerDnsOutput) QueryClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendSetHealthCheckerDns) *string { return v.QueryClass }).(pulumi.StringPtrOutput)
}

// (Updatable) The type the dns health check query to use; A, AAAA, TXT.  Example: `A`
func (o BackendSetHealthCheckerDnsOutput) QueryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendSetHealthCheckerDns) *string { return v.QueryType }).(pulumi.StringPtrOutput)
}

// (Updatable) An array that represents accepetable RCODE values for DNS query response. Example: ["NOERROR", "NXDOMAIN"]
func (o BackendSetHealthCheckerDnsOutput) Rcodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackendSetHealthCheckerDns) []string { return v.Rcodes }).(pulumi.StringArrayOutput)
}

// (Updatable) DNS transport protocol; either UDP or TCP.  Example: `UDP`
func (o BackendSetHealthCheckerDnsOutput) TransportProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendSetHealthCheckerDns) *string { return v.TransportProtocol }).(pulumi.StringPtrOutput)
}

type BackendSetHealthCheckerDnsPtrOutput struct{ *pulumi.OutputState }

func (BackendSetHealthCheckerDnsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendSetHealthCheckerDns)(nil)).Elem()
}

func (o BackendSetHealthCheckerDnsPtrOutput) ToBackendSetHealthCheckerDnsPtrOutput() BackendSetHealthCheckerDnsPtrOutput {
	return o
}

func (o BackendSetHealthCheckerDnsPtrOutput) ToBackendSetHealthCheckerDnsPtrOutputWithContext(ctx context.Context) BackendSetHealthCheckerDnsPtrOutput {
	return o
}

func (o BackendSetHealthCheckerDnsPtrOutput) Elem() BackendSetHealthCheckerDnsOutput {
	return o.ApplyT(func(v *BackendSetHealthCheckerDns) BackendSetHealthCheckerDns {
		if v != nil {
			return *v
		}
		var ret BackendSetHealthCheckerDns
		return ret
	}).(BackendSetHealthCheckerDnsOutput)
}

// (Updatable) The absolute fully-qualified domain name to perform periodic DNS queries. If not provided, an extra dot will be added at the end of a domain name during the query.
func (o BackendSetHealthCheckerDnsPtrOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendSetHealthCheckerDns) *string {
		if v == nil {
			return nil
		}
		return &v.DomainName
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The class the dns health check query to use; either IN or CH.  Example: `IN`
func (o BackendSetHealthCheckerDnsPtrOutput) QueryClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendSetHealthCheckerDns) *string {
		if v == nil {
			return nil
		}
		return v.QueryClass
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The type the dns health check query to use; A, AAAA, TXT.  Example: `A`
func (o BackendSetHealthCheckerDnsPtrOutput) QueryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendSetHealthCheckerDns) *string {
		if v == nil {
			return nil
		}
		return v.QueryType
	}).(pulumi.StringPtrOutput)
}

// (Updatable) An array that represents accepetable RCODE values for DNS query response. Example: ["NOERROR", "NXDOMAIN"]
func (o BackendSetHealthCheckerDnsPtrOutput) Rcodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BackendSetHealthCheckerDns) []string {
		if v == nil {
			return nil
		}
		return v.Rcodes
	}).(pulumi.StringArrayOutput)
}

// (Updatable) DNS transport protocol; either UDP or TCP.  Example: `UDP`
func (o BackendSetHealthCheckerDnsPtrOutput) TransportProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendSetHealthCheckerDns) *string {
		if v == nil {
			return nil
		}
		return v.TransportProtocol
	}).(pulumi.StringPtrOutput)
}

type NetworkLoadBalancerIpAddress struct {
	// The IP address of the backend server. Example: `10.0.0.3`
	IpAddress *string `pulumi:"ipAddress"`
	// IP version associated with the listener.
	IpVersion *string `pulumi:"ipVersion"`
	// Whether the IP address is public or private.
	IsPublic *bool `pulumi:"isPublic"`
	// An object representing a reserved IP address to be attached or that is already attached to a network load balancer.
	ReservedIps []NetworkLoadBalancerIpAddressReservedIp `pulumi:"reservedIps"`
}

// NetworkLoadBalancerIpAddressInput is an input type that accepts NetworkLoadBalancerIpAddressArgs and NetworkLoadBalancerIpAddressOutput values.
// You can construct a concrete instance of `NetworkLoadBalancerIpAddressInput` via:
//
//	NetworkLoadBalancerIpAddressArgs{...}
type NetworkLoadBalancerIpAddressInput interface {
	pulumi.Input

	ToNetworkLoadBalancerIpAddressOutput() NetworkLoadBalancerIpAddressOutput
	ToNetworkLoadBalancerIpAddressOutputWithContext(context.Context) NetworkLoadBalancerIpAddressOutput
}

type NetworkLoadBalancerIpAddressArgs struct {
	// The IP address of the backend server. Example: `10.0.0.3`
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// IP version associated with the listener.
	IpVersion pulumi.StringPtrInput `pulumi:"ipVersion"`
	// Whether the IP address is public or private.
	IsPublic pulumi.BoolPtrInput `pulumi:"isPublic"`
	// An object representing a reserved IP address to be attached or that is already attached to a network load balancer.
	ReservedIps NetworkLoadBalancerIpAddressReservedIpArrayInput `pulumi:"reservedIps"`
}

func (NetworkLoadBalancerIpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkLoadBalancerIpAddress)(nil)).Elem()
}

func (i NetworkLoadBalancerIpAddressArgs) ToNetworkLoadBalancerIpAddressOutput() NetworkLoadBalancerIpAddressOutput {
	return i.ToNetworkLoadBalancerIpAddressOutputWithContext(context.Background())
}

func (i NetworkLoadBalancerIpAddressArgs) ToNetworkLoadBalancerIpAddressOutputWithContext(ctx context.Context) NetworkLoadBalancerIpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLoadBalancerIpAddressOutput)
}

// NetworkLoadBalancerIpAddressArrayInput is an input type that accepts NetworkLoadBalancerIpAddressArray and NetworkLoadBalancerIpAddressArrayOutput values.
// You can construct a concrete instance of `NetworkLoadBalancerIpAddressArrayInput` via:
//
//	NetworkLoadBalancerIpAddressArray{ NetworkLoadBalancerIpAddressArgs{...} }
type NetworkLoadBalancerIpAddressArrayInput interface {
	pulumi.Input

	ToNetworkLoadBalancerIpAddressArrayOutput() NetworkLoadBalancerIpAddressArrayOutput
	ToNetworkLoadBalancerIpAddressArrayOutputWithContext(context.Context) NetworkLoadBalancerIpAddressArrayOutput
}

type NetworkLoadBalancerIpAddressArray []NetworkLoadBalancerIpAddressInput

func (NetworkLoadBalancerIpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkLoadBalancerIpAddress)(nil)).Elem()
}

func (i NetworkLoadBalancerIpAddressArray) ToNetworkLoadBalancerIpAddressArrayOutput() NetworkLoadBalancerIpAddressArrayOutput {
	return i.ToNetworkLoadBalancerIpAddressArrayOutputWithContext(context.Background())
}

func (i NetworkLoadBalancerIpAddressArray) ToNetworkLoadBalancerIpAddressArrayOutputWithContext(ctx context.Context) NetworkLoadBalancerIpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLoadBalancerIpAddressArrayOutput)
}

type NetworkLoadBalancerIpAddressOutput struct{ *pulumi.OutputState }

func (NetworkLoadBalancerIpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkLoadBalancerIpAddress)(nil)).Elem()
}

func (o NetworkLoadBalancerIpAddressOutput) ToNetworkLoadBalancerIpAddressOutput() NetworkLoadBalancerIpAddressOutput {
	return o
}

func (o NetworkLoadBalancerIpAddressOutput) ToNetworkLoadBalancerIpAddressOutputWithContext(ctx context.Context) NetworkLoadBalancerIpAddressOutput {
	return o
}

// The IP address of the backend server. Example: `10.0.0.3`
func (o NetworkLoadBalancerIpAddressOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkLoadBalancerIpAddress) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// IP version associated with the listener.
func (o NetworkLoadBalancerIpAddressOutput) IpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkLoadBalancerIpAddress) *string { return v.IpVersion }).(pulumi.StringPtrOutput)
}

// Whether the IP address is public or private.
func (o NetworkLoadBalancerIpAddressOutput) IsPublic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkLoadBalancerIpAddress) *bool { return v.IsPublic }).(pulumi.BoolPtrOutput)
}

// An object representing a reserved IP address to be attached or that is already attached to a network load balancer.
func (o NetworkLoadBalancerIpAddressOutput) ReservedIps() NetworkLoadBalancerIpAddressReservedIpArrayOutput {
	return o.ApplyT(func(v NetworkLoadBalancerIpAddress) []NetworkLoadBalancerIpAddressReservedIp { return v.ReservedIps }).(NetworkLoadBalancerIpAddressReservedIpArrayOutput)
}

type NetworkLoadBalancerIpAddressArrayOutput struct{ *pulumi.OutputState }

func (NetworkLoadBalancerIpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkLoadBalancerIpAddress)(nil)).Elem()
}

func (o NetworkLoadBalancerIpAddressArrayOutput) ToNetworkLoadBalancerIpAddressArrayOutput() NetworkLoadBalancerIpAddressArrayOutput {
	return o
}

func (o NetworkLoadBalancerIpAddressArrayOutput) ToNetworkLoadBalancerIpAddressArrayOutputWithContext(ctx context.Context) NetworkLoadBalancerIpAddressArrayOutput {
	return o
}

func (o NetworkLoadBalancerIpAddressArrayOutput) Index(i pulumi.IntInput) NetworkLoadBalancerIpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkLoadBalancerIpAddress {
		return vs[0].([]NetworkLoadBalancerIpAddress)[vs[1].(int)]
	}).(NetworkLoadBalancerIpAddressOutput)
}

type NetworkLoadBalancerIpAddressReservedIp struct {
	// OCID of the reserved public IP address created with the virtual cloud network.
	Id *string `pulumi:"id"`
}

// NetworkLoadBalancerIpAddressReservedIpInput is an input type that accepts NetworkLoadBalancerIpAddressReservedIpArgs and NetworkLoadBalancerIpAddressReservedIpOutput values.
// You can construct a concrete instance of `NetworkLoadBalancerIpAddressReservedIpInput` via:
//
//	NetworkLoadBalancerIpAddressReservedIpArgs{...}
type NetworkLoadBalancerIpAddressReservedIpInput interface {
	pulumi.Input

	ToNetworkLoadBalancerIpAddressReservedIpOutput() NetworkLoadBalancerIpAddressReservedIpOutput
	ToNetworkLoadBalancerIpAddressReservedIpOutputWithContext(context.Context) NetworkLoadBalancerIpAddressReservedIpOutput
}

type NetworkLoadBalancerIpAddressReservedIpArgs struct {
	// OCID of the reserved public IP address created with the virtual cloud network.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (NetworkLoadBalancerIpAddressReservedIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkLoadBalancerIpAddressReservedIp)(nil)).Elem()
}

func (i NetworkLoadBalancerIpAddressReservedIpArgs) ToNetworkLoadBalancerIpAddressReservedIpOutput() NetworkLoadBalancerIpAddressReservedIpOutput {
	return i.ToNetworkLoadBalancerIpAddressReservedIpOutputWithContext(context.Background())
}

func (i NetworkLoadBalancerIpAddressReservedIpArgs) ToNetworkLoadBalancerIpAddressReservedIpOutputWithContext(ctx context.Context) NetworkLoadBalancerIpAddressReservedIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLoadBalancerIpAddressReservedIpOutput)
}

// NetworkLoadBalancerIpAddressReservedIpArrayInput is an input type that accepts NetworkLoadBalancerIpAddressReservedIpArray and NetworkLoadBalancerIpAddressReservedIpArrayOutput values.
// You can construct a concrete instance of `NetworkLoadBalancerIpAddressReservedIpArrayInput` via:
//
//	NetworkLoadBalancerIpAddressReservedIpArray{ NetworkLoadBalancerIpAddressReservedIpArgs{...} }
type NetworkLoadBalancerIpAddressReservedIpArrayInput interface {
	pulumi.Input

	ToNetworkLoadBalancerIpAddressReservedIpArrayOutput() NetworkLoadBalancerIpAddressReservedIpArrayOutput
	ToNetworkLoadBalancerIpAddressReservedIpArrayOutputWithContext(context.Context) NetworkLoadBalancerIpAddressReservedIpArrayOutput
}

type NetworkLoadBalancerIpAddressReservedIpArray []NetworkLoadBalancerIpAddressReservedIpInput

func (NetworkLoadBalancerIpAddressReservedIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkLoadBalancerIpAddressReservedIp)(nil)).Elem()
}

func (i NetworkLoadBalancerIpAddressReservedIpArray) ToNetworkLoadBalancerIpAddressReservedIpArrayOutput() NetworkLoadBalancerIpAddressReservedIpArrayOutput {
	return i.ToNetworkLoadBalancerIpAddressReservedIpArrayOutputWithContext(context.Background())
}

func (i NetworkLoadBalancerIpAddressReservedIpArray) ToNetworkLoadBalancerIpAddressReservedIpArrayOutputWithContext(ctx context.Context) NetworkLoadBalancerIpAddressReservedIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLoadBalancerIpAddressReservedIpArrayOutput)
}

type NetworkLoadBalancerIpAddressReservedIpOutput struct{ *pulumi.OutputState }

func (NetworkLoadBalancerIpAddressReservedIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkLoadBalancerIpAddressReservedIp)(nil)).Elem()
}

func (o NetworkLoadBalancerIpAddressReservedIpOutput) ToNetworkLoadBalancerIpAddressReservedIpOutput() NetworkLoadBalancerIpAddressReservedIpOutput {
	return o
}

func (o NetworkLoadBalancerIpAddressReservedIpOutput) ToNetworkLoadBalancerIpAddressReservedIpOutputWithContext(ctx context.Context) NetworkLoadBalancerIpAddressReservedIpOutput {
	return o
}

// OCID of the reserved public IP address created with the virtual cloud network.
func (o NetworkLoadBalancerIpAddressReservedIpOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkLoadBalancerIpAddressReservedIp) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type NetworkLoadBalancerIpAddressReservedIpArrayOutput struct{ *pulumi.OutputState }

func (NetworkLoadBalancerIpAddressReservedIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkLoadBalancerIpAddressReservedIp)(nil)).Elem()
}

func (o NetworkLoadBalancerIpAddressReservedIpArrayOutput) ToNetworkLoadBalancerIpAddressReservedIpArrayOutput() NetworkLoadBalancerIpAddressReservedIpArrayOutput {
	return o
}

func (o NetworkLoadBalancerIpAddressReservedIpArrayOutput) ToNetworkLoadBalancerIpAddressReservedIpArrayOutputWithContext(ctx context.Context) NetworkLoadBalancerIpAddressReservedIpArrayOutput {
	return o
}

func (o NetworkLoadBalancerIpAddressReservedIpArrayOutput) Index(i pulumi.IntInput) NetworkLoadBalancerIpAddressReservedIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkLoadBalancerIpAddressReservedIp {
		return vs[0].([]NetworkLoadBalancerIpAddressReservedIp)[vs[1].(int)]
	}).(NetworkLoadBalancerIpAddressReservedIpOutput)
}

type NetworkLoadBalancerReservedIp struct {
	// OCID of the reserved public IP address created with the virtual cloud network.
	//
	// Reserved public IP addresses are IP addresses that are registered using the virtual cloud network API.
	//
	// Create a reserved public IP address. When you create the network load balancer, enter the OCID of the reserved public IP address in the reservedIp field to attach the IP address to the network load balancer. This task configures the network load balancer to listen to traffic on this IP address.
	//
	// Reserved public IP addresses are not deleted when the network load balancer is deleted. The IP addresses become unattached from the network load balancer.
	//
	// Example: "ocid1.publicip.oc1.phx.unique_ID"
	Id *string `pulumi:"id"`
}

// NetworkLoadBalancerReservedIpInput is an input type that accepts NetworkLoadBalancerReservedIpArgs and NetworkLoadBalancerReservedIpOutput values.
// You can construct a concrete instance of `NetworkLoadBalancerReservedIpInput` via:
//
//	NetworkLoadBalancerReservedIpArgs{...}
type NetworkLoadBalancerReservedIpInput interface {
	pulumi.Input

	ToNetworkLoadBalancerReservedIpOutput() NetworkLoadBalancerReservedIpOutput
	ToNetworkLoadBalancerReservedIpOutputWithContext(context.Context) NetworkLoadBalancerReservedIpOutput
}

type NetworkLoadBalancerReservedIpArgs struct {
	// OCID of the reserved public IP address created with the virtual cloud network.
	//
	// Reserved public IP addresses are IP addresses that are registered using the virtual cloud network API.
	//
	// Create a reserved public IP address. When you create the network load balancer, enter the OCID of the reserved public IP address in the reservedIp field to attach the IP address to the network load balancer. This task configures the network load balancer to listen to traffic on this IP address.
	//
	// Reserved public IP addresses are not deleted when the network load balancer is deleted. The IP addresses become unattached from the network load balancer.
	//
	// Example: "ocid1.publicip.oc1.phx.unique_ID"
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (NetworkLoadBalancerReservedIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkLoadBalancerReservedIp)(nil)).Elem()
}

func (i NetworkLoadBalancerReservedIpArgs) ToNetworkLoadBalancerReservedIpOutput() NetworkLoadBalancerReservedIpOutput {
	return i.ToNetworkLoadBalancerReservedIpOutputWithContext(context.Background())
}

func (i NetworkLoadBalancerReservedIpArgs) ToNetworkLoadBalancerReservedIpOutputWithContext(ctx context.Context) NetworkLoadBalancerReservedIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLoadBalancerReservedIpOutput)
}

// NetworkLoadBalancerReservedIpArrayInput is an input type that accepts NetworkLoadBalancerReservedIpArray and NetworkLoadBalancerReservedIpArrayOutput values.
// You can construct a concrete instance of `NetworkLoadBalancerReservedIpArrayInput` via:
//
//	NetworkLoadBalancerReservedIpArray{ NetworkLoadBalancerReservedIpArgs{...} }
type NetworkLoadBalancerReservedIpArrayInput interface {
	pulumi.Input

	ToNetworkLoadBalancerReservedIpArrayOutput() NetworkLoadBalancerReservedIpArrayOutput
	ToNetworkLoadBalancerReservedIpArrayOutputWithContext(context.Context) NetworkLoadBalancerReservedIpArrayOutput
}

type NetworkLoadBalancerReservedIpArray []NetworkLoadBalancerReservedIpInput

func (NetworkLoadBalancerReservedIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkLoadBalancerReservedIp)(nil)).Elem()
}

func (i NetworkLoadBalancerReservedIpArray) ToNetworkLoadBalancerReservedIpArrayOutput() NetworkLoadBalancerReservedIpArrayOutput {
	return i.ToNetworkLoadBalancerReservedIpArrayOutputWithContext(context.Background())
}

func (i NetworkLoadBalancerReservedIpArray) ToNetworkLoadBalancerReservedIpArrayOutputWithContext(ctx context.Context) NetworkLoadBalancerReservedIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLoadBalancerReservedIpArrayOutput)
}

type NetworkLoadBalancerReservedIpOutput struct{ *pulumi.OutputState }

func (NetworkLoadBalancerReservedIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkLoadBalancerReservedIp)(nil)).Elem()
}

func (o NetworkLoadBalancerReservedIpOutput) ToNetworkLoadBalancerReservedIpOutput() NetworkLoadBalancerReservedIpOutput {
	return o
}

func (o NetworkLoadBalancerReservedIpOutput) ToNetworkLoadBalancerReservedIpOutputWithContext(ctx context.Context) NetworkLoadBalancerReservedIpOutput {
	return o
}

// OCID of the reserved public IP address created with the virtual cloud network.
//
// Reserved public IP addresses are IP addresses that are registered using the virtual cloud network API.
//
// Create a reserved public IP address. When you create the network load balancer, enter the OCID of the reserved public IP address in the reservedIp field to attach the IP address to the network load balancer. This task configures the network load balancer to listen to traffic on this IP address.
//
// Reserved public IP addresses are not deleted when the network load balancer is deleted. The IP addresses become unattached from the network load balancer.
//
// Example: "ocid1.publicip.oc1.phx.unique_ID"
func (o NetworkLoadBalancerReservedIpOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkLoadBalancerReservedIp) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type NetworkLoadBalancerReservedIpArrayOutput struct{ *pulumi.OutputState }

func (NetworkLoadBalancerReservedIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkLoadBalancerReservedIp)(nil)).Elem()
}

func (o NetworkLoadBalancerReservedIpArrayOutput) ToNetworkLoadBalancerReservedIpArrayOutput() NetworkLoadBalancerReservedIpArrayOutput {
	return o
}

func (o NetworkLoadBalancerReservedIpArrayOutput) ToNetworkLoadBalancerReservedIpArrayOutputWithContext(ctx context.Context) NetworkLoadBalancerReservedIpArrayOutput {
	return o
}

func (o NetworkLoadBalancerReservedIpArrayOutput) Index(i pulumi.IntInput) NetworkLoadBalancerReservedIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkLoadBalancerReservedIp {
		return vs[0].([]NetworkLoadBalancerReservedIp)[vs[1].(int)]
	}).(NetworkLoadBalancerReservedIpOutput)
}

type NetworkLoadBalancersBackendSetsUnifiedBackend struct {
	// (Updatable) The IP address of the backend server.  Example: `10.0.0.3`
	IpAddress *string `pulumi:"ipAddress"`
	// (Updatable) Whether the network load balancer should treat this server as a backup unit. If `true`, then the network load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as "isBackup" fail the health check policy.  Example: `false`
	IsBackup *bool `pulumi:"isBackup"`
	// (Updatable) Whether the network load balancer should drain this server. Servers marked "isDrain" receive no incoming traffic.  Example: `false`
	IsDrain *bool `pulumi:"isDrain"`
	// (Updatable) Whether the network load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`
	IsOffline *bool `pulumi:"isOffline"`
	// A user-friendly name for the backend set that must be unique and cannot be changed.
	//
	// Valid backend set names include only alphanumeric characters, dashes, and underscores. Backend set names cannot contain spaces. Avoid entering confidential information.
	//
	// Example: `exampleBackendSet`
	Name *string `pulumi:"name"`
	// (Updatable) The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
	Port int `pulumi:"port"`
	// (Updatable) The IP OCID/Instance OCID associated with the backend server. Example: `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>`
	TargetId *string `pulumi:"targetId"`
	// (Updatable) The network load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives three times the number of new connections as a server weighted '1'. For more information about load balancing policies, see [How Network Load Balancing Policies Work](https://docs.cloud.oracle.com/iaas/Content/Balance/Reference/lbpolicies.htm).  Example: `3`
	Weight *int `pulumi:"weight"`
}

// NetworkLoadBalancersBackendSetsUnifiedBackendInput is an input type that accepts NetworkLoadBalancersBackendSetsUnifiedBackendArgs and NetworkLoadBalancersBackendSetsUnifiedBackendOutput values.
// You can construct a concrete instance of `NetworkLoadBalancersBackendSetsUnifiedBackendInput` via:
//
//	NetworkLoadBalancersBackendSetsUnifiedBackendArgs{...}
type NetworkLoadBalancersBackendSetsUnifiedBackendInput interface {
	pulumi.Input

	ToNetworkLoadBalancersBackendSetsUnifiedBackendOutput() NetworkLoadBalancersBackendSetsUnifiedBackendOutput
	ToNetworkLoadBalancersBackendSetsUnifiedBackendOutputWithContext(context.Context) NetworkLoadBalancersBackendSetsUnifiedBackendOutput
}

type NetworkLoadBalancersBackendSetsUnifiedBackendArgs struct {
	// (Updatable) The IP address of the backend server.  Example: `10.0.0.3`
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// (Updatable) Whether the network load balancer should treat this server as a backup unit. If `true`, then the network load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as "isBackup" fail the health check policy.  Example: `false`
	IsBackup pulumi.BoolPtrInput `pulumi:"isBackup"`
	// (Updatable) Whether the network load balancer should drain this server. Servers marked "isDrain" receive no incoming traffic.  Example: `false`
	IsDrain pulumi.BoolPtrInput `pulumi:"isDrain"`
	// (Updatable) Whether the network load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`
	IsOffline pulumi.BoolPtrInput `pulumi:"isOffline"`
	// A user-friendly name for the backend set that must be unique and cannot be changed.
	//
	// Valid backend set names include only alphanumeric characters, dashes, and underscores. Backend set names cannot contain spaces. Avoid entering confidential information.
	//
	// Example: `exampleBackendSet`
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Updatable) The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
	Port pulumi.IntInput `pulumi:"port"`
	// (Updatable) The IP OCID/Instance OCID associated with the backend server. Example: `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>`
	TargetId pulumi.StringPtrInput `pulumi:"targetId"`
	// (Updatable) The network load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives three times the number of new connections as a server weighted '1'. For more information about load balancing policies, see [How Network Load Balancing Policies Work](https://docs.cloud.oracle.com/iaas/Content/Balance/Reference/lbpolicies.htm).  Example: `3`
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (NetworkLoadBalancersBackendSetsUnifiedBackendArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkLoadBalancersBackendSetsUnifiedBackend)(nil)).Elem()
}

func (i NetworkLoadBalancersBackendSetsUnifiedBackendArgs) ToNetworkLoadBalancersBackendSetsUnifiedBackendOutput() NetworkLoadBalancersBackendSetsUnifiedBackendOutput {
	return i.ToNetworkLoadBalancersBackendSetsUnifiedBackendOutputWithContext(context.Background())
}

func (i NetworkLoadBalancersBackendSetsUnifiedBackendArgs) ToNetworkLoadBalancersBackendSetsUnifiedBackendOutputWithContext(ctx context.Context) NetworkLoadBalancersBackendSetsUnifiedBackendOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLoadBalancersBackendSetsUnifiedBackendOutput)
}

// NetworkLoadBalancersBackendSetsUnifiedBackendArrayInput is an input type that accepts NetworkLoadBalancersBackendSetsUnifiedBackendArray and NetworkLoadBalancersBackendSetsUnifiedBackendArrayOutput values.
// You can construct a concrete instance of `NetworkLoadBalancersBackendSetsUnifiedBackendArrayInput` via:
//
//	NetworkLoadBalancersBackendSetsUnifiedBackendArray{ NetworkLoadBalancersBackendSetsUnifiedBackendArgs{...} }
type NetworkLoadBalancersBackendSetsUnifiedBackendArrayInput interface {
	pulumi.Input

	ToNetworkLoadBalancersBackendSetsUnifiedBackendArrayOutput() NetworkLoadBalancersBackendSetsUnifiedBackendArrayOutput
	ToNetworkLoadBalancersBackendSetsUnifiedBackendArrayOutputWithContext(context.Context) NetworkLoadBalancersBackendSetsUnifiedBackendArrayOutput
}

type NetworkLoadBalancersBackendSetsUnifiedBackendArray []NetworkLoadBalancersBackendSetsUnifiedBackendInput

func (NetworkLoadBalancersBackendSetsUnifiedBackendArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkLoadBalancersBackendSetsUnifiedBackend)(nil)).Elem()
}

func (i NetworkLoadBalancersBackendSetsUnifiedBackendArray) ToNetworkLoadBalancersBackendSetsUnifiedBackendArrayOutput() NetworkLoadBalancersBackendSetsUnifiedBackendArrayOutput {
	return i.ToNetworkLoadBalancersBackendSetsUnifiedBackendArrayOutputWithContext(context.Background())
}

func (i NetworkLoadBalancersBackendSetsUnifiedBackendArray) ToNetworkLoadBalancersBackendSetsUnifiedBackendArrayOutputWithContext(ctx context.Context) NetworkLoadBalancersBackendSetsUnifiedBackendArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLoadBalancersBackendSetsUnifiedBackendArrayOutput)
}

type NetworkLoadBalancersBackendSetsUnifiedBackendOutput struct{ *pulumi.OutputState }

func (NetworkLoadBalancersBackendSetsUnifiedBackendOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkLoadBalancersBackendSetsUnifiedBackend)(nil)).Elem()
}

func (o NetworkLoadBalancersBackendSetsUnifiedBackendOutput) ToNetworkLoadBalancersBackendSetsUnifiedBackendOutput() NetworkLoadBalancersBackendSetsUnifiedBackendOutput {
	return o
}

func (o NetworkLoadBalancersBackendSetsUnifiedBackendOutput) ToNetworkLoadBalancersBackendSetsUnifiedBackendOutputWithContext(ctx context.Context) NetworkLoadBalancersBackendSetsUnifiedBackendOutput {
	return o
}

// (Updatable) The IP address of the backend server.  Example: `10.0.0.3`
func (o NetworkLoadBalancersBackendSetsUnifiedBackendOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkLoadBalancersBackendSetsUnifiedBackend) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// (Updatable) Whether the network load balancer should treat this server as a backup unit. If `true`, then the network load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as "isBackup" fail the health check policy.  Example: `false`
func (o NetworkLoadBalancersBackendSetsUnifiedBackendOutput) IsBackup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkLoadBalancersBackendSetsUnifiedBackend) *bool { return v.IsBackup }).(pulumi.BoolPtrOutput)
}

// (Updatable) Whether the network load balancer should drain this server. Servers marked "isDrain" receive no incoming traffic.  Example: `false`
func (o NetworkLoadBalancersBackendSetsUnifiedBackendOutput) IsDrain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkLoadBalancersBackendSetsUnifiedBackend) *bool { return v.IsDrain }).(pulumi.BoolPtrOutput)
}

// (Updatable) Whether the network load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`
func (o NetworkLoadBalancersBackendSetsUnifiedBackendOutput) IsOffline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkLoadBalancersBackendSetsUnifiedBackend) *bool { return v.IsOffline }).(pulumi.BoolPtrOutput)
}

// A user-friendly name for the backend set that must be unique and cannot be changed.
//
// Valid backend set names include only alphanumeric characters, dashes, and underscores. Backend set names cannot contain spaces. Avoid entering confidential information.
//
// Example: `exampleBackendSet`
func (o NetworkLoadBalancersBackendSetsUnifiedBackendOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkLoadBalancersBackendSetsUnifiedBackend) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Updatable) The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
func (o NetworkLoadBalancersBackendSetsUnifiedBackendOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkLoadBalancersBackendSetsUnifiedBackend) int { return v.Port }).(pulumi.IntOutput)
}

// (Updatable) The IP OCID/Instance OCID associated with the backend server. Example: `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>`
func (o NetworkLoadBalancersBackendSetsUnifiedBackendOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkLoadBalancersBackendSetsUnifiedBackend) *string { return v.TargetId }).(pulumi.StringPtrOutput)
}

// (Updatable) The network load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives three times the number of new connections as a server weighted '1'. For more information about load balancing policies, see [How Network Load Balancing Policies Work](https://docs.cloud.oracle.com/iaas/Content/Balance/Reference/lbpolicies.htm).  Example: `3`
func (o NetworkLoadBalancersBackendSetsUnifiedBackendOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkLoadBalancersBackendSetsUnifiedBackend) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type NetworkLoadBalancersBackendSetsUnifiedBackendArrayOutput struct{ *pulumi.OutputState }

func (NetworkLoadBalancersBackendSetsUnifiedBackendArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkLoadBalancersBackendSetsUnifiedBackend)(nil)).Elem()
}

func (o NetworkLoadBalancersBackendSetsUnifiedBackendArrayOutput) ToNetworkLoadBalancersBackendSetsUnifiedBackendArrayOutput() NetworkLoadBalancersBackendSetsUnifiedBackendArrayOutput {
	return o
}

func (o NetworkLoadBalancersBackendSetsUnifiedBackendArrayOutput) ToNetworkLoadBalancersBackendSetsUnifiedBackendArrayOutputWithContext(ctx context.Context) NetworkLoadBalancersBackendSetsUnifiedBackendArrayOutput {
	return o
}

func (o NetworkLoadBalancersBackendSetsUnifiedBackendArrayOutput) Index(i pulumi.IntInput) NetworkLoadBalancersBackendSetsUnifiedBackendOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkLoadBalancersBackendSetsUnifiedBackend {
		return vs[0].([]NetworkLoadBalancersBackendSetsUnifiedBackend)[vs[1].(int)]
	}).(NetworkLoadBalancersBackendSetsUnifiedBackendOutput)
}

type NetworkLoadBalancersBackendSetsUnifiedHealthChecker struct {
	// (Updatable) DNS healthcheck configurations.
	Dns *NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDns `pulumi:"dns"`
	// (Updatable) The interval between health checks, in milliseconds. The default value is 10000 (10 seconds).  Example: `10000`
	IntervalInMillis *int `pulumi:"intervalInMillis"`
	// (Updatable) The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
	Port *int `pulumi:"port"`
	// (Updatable) The protocol the health check must use; either HTTP or HTTPS, or UDP or TCP.  Example: `HTTP`
	Protocol string `pulumi:"protocol"`
	// (Updatable) Base64 encoded pattern to be sent as UDP or TCP health check probe.
	RequestData *string `pulumi:"requestData"`
	// (Updatable) A regular expression for parsing the response body from the backend server.  Example: `^((?!false).|\s)*$`
	ResponseBodyRegex *string `pulumi:"responseBodyRegex"`
	// (Updatable) Base64 encoded pattern to be validated as UDP or TCP health check probe response.
	ResponseData *string `pulumi:"responseData"`
	// (Updatable) The number of retries to attempt before a backend server is considered "unhealthy". This number also applies when recovering a server to the "healthy" state. The default value is 3.  Example: `3`
	Retries *int `pulumi:"retries"`
	// (Updatable) The status code a healthy backend server should return. If you configure the health check policy to use the HTTP protocol, then you can use common HTTP status codes such as "200".  Example: `200`
	ReturnCode *int `pulumi:"returnCode"`
	// (Updatable) The maximum time, in milliseconds, to wait for a reply to a health check. A health check is successful only if a reply returns within this timeout period. The default value is 3000 (3 seconds).  Example: `3000`
	TimeoutInMillis *int `pulumi:"timeoutInMillis"`
	// (Updatable) The path against which to run the health check.  Example: `/healthcheck`
	UrlPath *string `pulumi:"urlPath"`
}

// NetworkLoadBalancersBackendSetsUnifiedHealthCheckerInput is an input type that accepts NetworkLoadBalancersBackendSetsUnifiedHealthCheckerArgs and NetworkLoadBalancersBackendSetsUnifiedHealthCheckerOutput values.
// You can construct a concrete instance of `NetworkLoadBalancersBackendSetsUnifiedHealthCheckerInput` via:
//
//	NetworkLoadBalancersBackendSetsUnifiedHealthCheckerArgs{...}
type NetworkLoadBalancersBackendSetsUnifiedHealthCheckerInput interface {
	pulumi.Input

	ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerOutput() NetworkLoadBalancersBackendSetsUnifiedHealthCheckerOutput
	ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerOutputWithContext(context.Context) NetworkLoadBalancersBackendSetsUnifiedHealthCheckerOutput
}

type NetworkLoadBalancersBackendSetsUnifiedHealthCheckerArgs struct {
	// (Updatable) DNS healthcheck configurations.
	Dns NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrInput `pulumi:"dns"`
	// (Updatable) The interval between health checks, in milliseconds. The default value is 10000 (10 seconds).  Example: `10000`
	IntervalInMillis pulumi.IntPtrInput `pulumi:"intervalInMillis"`
	// (Updatable) The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
	Port pulumi.IntPtrInput `pulumi:"port"`
	// (Updatable) The protocol the health check must use; either HTTP or HTTPS, or UDP or TCP.  Example: `HTTP`
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// (Updatable) Base64 encoded pattern to be sent as UDP or TCP health check probe.
	RequestData pulumi.StringPtrInput `pulumi:"requestData"`
	// (Updatable) A regular expression for parsing the response body from the backend server.  Example: `^((?!false).|\s)*$`
	ResponseBodyRegex pulumi.StringPtrInput `pulumi:"responseBodyRegex"`
	// (Updatable) Base64 encoded pattern to be validated as UDP or TCP health check probe response.
	ResponseData pulumi.StringPtrInput `pulumi:"responseData"`
	// (Updatable) The number of retries to attempt before a backend server is considered "unhealthy". This number also applies when recovering a server to the "healthy" state. The default value is 3.  Example: `3`
	Retries pulumi.IntPtrInput `pulumi:"retries"`
	// (Updatable) The status code a healthy backend server should return. If you configure the health check policy to use the HTTP protocol, then you can use common HTTP status codes such as "200".  Example: `200`
	ReturnCode pulumi.IntPtrInput `pulumi:"returnCode"`
	// (Updatable) The maximum time, in milliseconds, to wait for a reply to a health check. A health check is successful only if a reply returns within this timeout period. The default value is 3000 (3 seconds).  Example: `3000`
	TimeoutInMillis pulumi.IntPtrInput `pulumi:"timeoutInMillis"`
	// (Updatable) The path against which to run the health check.  Example: `/healthcheck`
	UrlPath pulumi.StringPtrInput `pulumi:"urlPath"`
}

func (NetworkLoadBalancersBackendSetsUnifiedHealthCheckerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkLoadBalancersBackendSetsUnifiedHealthChecker)(nil)).Elem()
}

func (i NetworkLoadBalancersBackendSetsUnifiedHealthCheckerArgs) ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerOutput() NetworkLoadBalancersBackendSetsUnifiedHealthCheckerOutput {
	return i.ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerOutputWithContext(context.Background())
}

func (i NetworkLoadBalancersBackendSetsUnifiedHealthCheckerArgs) ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerOutputWithContext(ctx context.Context) NetworkLoadBalancersBackendSetsUnifiedHealthCheckerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLoadBalancersBackendSetsUnifiedHealthCheckerOutput)
}

func (i NetworkLoadBalancersBackendSetsUnifiedHealthCheckerArgs) ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutput() NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutput {
	return i.ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutputWithContext(context.Background())
}

func (i NetworkLoadBalancersBackendSetsUnifiedHealthCheckerArgs) ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutputWithContext(ctx context.Context) NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLoadBalancersBackendSetsUnifiedHealthCheckerOutput).ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutputWithContext(ctx)
}

// NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrInput is an input type that accepts NetworkLoadBalancersBackendSetsUnifiedHealthCheckerArgs, NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtr and NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutput values.
// You can construct a concrete instance of `NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrInput` via:
//
//	        NetworkLoadBalancersBackendSetsUnifiedHealthCheckerArgs{...}
//
//	or:
//
//	        nil
type NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrInput interface {
	pulumi.Input

	ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutput() NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutput
	ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutputWithContext(context.Context) NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutput
}

type networkLoadBalancersBackendSetsUnifiedHealthCheckerPtrType NetworkLoadBalancersBackendSetsUnifiedHealthCheckerArgs

func NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtr(v *NetworkLoadBalancersBackendSetsUnifiedHealthCheckerArgs) NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrInput {
	return (*networkLoadBalancersBackendSetsUnifiedHealthCheckerPtrType)(v)
}

func (*networkLoadBalancersBackendSetsUnifiedHealthCheckerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkLoadBalancersBackendSetsUnifiedHealthChecker)(nil)).Elem()
}

func (i *networkLoadBalancersBackendSetsUnifiedHealthCheckerPtrType) ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutput() NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutput {
	return i.ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutputWithContext(context.Background())
}

func (i *networkLoadBalancersBackendSetsUnifiedHealthCheckerPtrType) ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutputWithContext(ctx context.Context) NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutput)
}

type NetworkLoadBalancersBackendSetsUnifiedHealthCheckerOutput struct{ *pulumi.OutputState }

func (NetworkLoadBalancersBackendSetsUnifiedHealthCheckerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkLoadBalancersBackendSetsUnifiedHealthChecker)(nil)).Elem()
}

func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerOutput) ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerOutput() NetworkLoadBalancersBackendSetsUnifiedHealthCheckerOutput {
	return o
}

func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerOutput) ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerOutputWithContext(ctx context.Context) NetworkLoadBalancersBackendSetsUnifiedHealthCheckerOutput {
	return o
}

func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerOutput) ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutput() NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutput {
	return o.ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutputWithContext(context.Background())
}

func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerOutput) ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutputWithContext(ctx context.Context) NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkLoadBalancersBackendSetsUnifiedHealthChecker) *NetworkLoadBalancersBackendSetsUnifiedHealthChecker {
		return &v
	}).(NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutput)
}

// (Updatable) DNS healthcheck configurations.
func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerOutput) Dns() NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutput {
	return o.ApplyT(func(v NetworkLoadBalancersBackendSetsUnifiedHealthChecker) *NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDns {
		return v.Dns
	}).(NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutput)
}

// (Updatable) The interval between health checks, in milliseconds. The default value is 10000 (10 seconds).  Example: `10000`
func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerOutput) IntervalInMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkLoadBalancersBackendSetsUnifiedHealthChecker) *int { return v.IntervalInMillis }).(pulumi.IntPtrOutput)
}

// (Updatable) The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkLoadBalancersBackendSetsUnifiedHealthChecker) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// (Updatable) The protocol the health check must use; either HTTP or HTTPS, or UDP or TCP.  Example: `HTTP`
func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkLoadBalancersBackendSetsUnifiedHealthChecker) string { return v.Protocol }).(pulumi.StringOutput)
}

// (Updatable) Base64 encoded pattern to be sent as UDP or TCP health check probe.
func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerOutput) RequestData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkLoadBalancersBackendSetsUnifiedHealthChecker) *string { return v.RequestData }).(pulumi.StringPtrOutput)
}

// (Updatable) A regular expression for parsing the response body from the backend server.  Example: `^((?!false).|\s)*$`
func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerOutput) ResponseBodyRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkLoadBalancersBackendSetsUnifiedHealthChecker) *string { return v.ResponseBodyRegex }).(pulumi.StringPtrOutput)
}

// (Updatable) Base64 encoded pattern to be validated as UDP or TCP health check probe response.
func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerOutput) ResponseData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkLoadBalancersBackendSetsUnifiedHealthChecker) *string { return v.ResponseData }).(pulumi.StringPtrOutput)
}

// (Updatable) The number of retries to attempt before a backend server is considered "unhealthy". This number also applies when recovering a server to the "healthy" state. The default value is 3.  Example: `3`
func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerOutput) Retries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkLoadBalancersBackendSetsUnifiedHealthChecker) *int { return v.Retries }).(pulumi.IntPtrOutput)
}

// (Updatable) The status code a healthy backend server should return. If you configure the health check policy to use the HTTP protocol, then you can use common HTTP status codes such as "200".  Example: `200`
func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerOutput) ReturnCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkLoadBalancersBackendSetsUnifiedHealthChecker) *int { return v.ReturnCode }).(pulumi.IntPtrOutput)
}

// (Updatable) The maximum time, in milliseconds, to wait for a reply to a health check. A health check is successful only if a reply returns within this timeout period. The default value is 3000 (3 seconds).  Example: `3000`
func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerOutput) TimeoutInMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkLoadBalancersBackendSetsUnifiedHealthChecker) *int { return v.TimeoutInMillis }).(pulumi.IntPtrOutput)
}

// (Updatable) The path against which to run the health check.  Example: `/healthcheck`
func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerOutput) UrlPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkLoadBalancersBackendSetsUnifiedHealthChecker) *string { return v.UrlPath }).(pulumi.StringPtrOutput)
}

type NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutput struct{ *pulumi.OutputState }

func (NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkLoadBalancersBackendSetsUnifiedHealthChecker)(nil)).Elem()
}

func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutput) ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutput() NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutput {
	return o
}

func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutput) ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutputWithContext(ctx context.Context) NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutput {
	return o
}

func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutput) Elem() NetworkLoadBalancersBackendSetsUnifiedHealthCheckerOutput {
	return o.ApplyT(func(v *NetworkLoadBalancersBackendSetsUnifiedHealthChecker) NetworkLoadBalancersBackendSetsUnifiedHealthChecker {
		if v != nil {
			return *v
		}
		var ret NetworkLoadBalancersBackendSetsUnifiedHealthChecker
		return ret
	}).(NetworkLoadBalancersBackendSetsUnifiedHealthCheckerOutput)
}

// (Updatable) DNS healthcheck configurations.
func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutput) Dns() NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutput {
	return o.ApplyT(func(v *NetworkLoadBalancersBackendSetsUnifiedHealthChecker) *NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDns {
		if v == nil {
			return nil
		}
		return v.Dns
	}).(NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutput)
}

// (Updatable) The interval between health checks, in milliseconds. The default value is 10000 (10 seconds).  Example: `10000`
func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutput) IntervalInMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkLoadBalancersBackendSetsUnifiedHealthChecker) *int {
		if v == nil {
			return nil
		}
		return v.IntervalInMillis
	}).(pulumi.IntPtrOutput)
}

// (Updatable) The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkLoadBalancersBackendSetsUnifiedHealthChecker) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// (Updatable) The protocol the health check must use; either HTTP or HTTPS, or UDP or TCP.  Example: `HTTP`
func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkLoadBalancersBackendSetsUnifiedHealthChecker) *string {
		if v == nil {
			return nil
		}
		return &v.Protocol
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Base64 encoded pattern to be sent as UDP or TCP health check probe.
func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutput) RequestData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkLoadBalancersBackendSetsUnifiedHealthChecker) *string {
		if v == nil {
			return nil
		}
		return v.RequestData
	}).(pulumi.StringPtrOutput)
}

// (Updatable) A regular expression for parsing the response body from the backend server.  Example: `^((?!false).|\s)*$`
func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutput) ResponseBodyRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkLoadBalancersBackendSetsUnifiedHealthChecker) *string {
		if v == nil {
			return nil
		}
		return v.ResponseBodyRegex
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Base64 encoded pattern to be validated as UDP or TCP health check probe response.
func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutput) ResponseData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkLoadBalancersBackendSetsUnifiedHealthChecker) *string {
		if v == nil {
			return nil
		}
		return v.ResponseData
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The number of retries to attempt before a backend server is considered "unhealthy". This number also applies when recovering a server to the "healthy" state. The default value is 3.  Example: `3`
func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutput) Retries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkLoadBalancersBackendSetsUnifiedHealthChecker) *int {
		if v == nil {
			return nil
		}
		return v.Retries
	}).(pulumi.IntPtrOutput)
}

// (Updatable) The status code a healthy backend server should return. If you configure the health check policy to use the HTTP protocol, then you can use common HTTP status codes such as "200".  Example: `200`
func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutput) ReturnCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkLoadBalancersBackendSetsUnifiedHealthChecker) *int {
		if v == nil {
			return nil
		}
		return v.ReturnCode
	}).(pulumi.IntPtrOutput)
}

// (Updatable) The maximum time, in milliseconds, to wait for a reply to a health check. A health check is successful only if a reply returns within this timeout period. The default value is 3000 (3 seconds).  Example: `3000`
func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutput) TimeoutInMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkLoadBalancersBackendSetsUnifiedHealthChecker) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutInMillis
	}).(pulumi.IntPtrOutput)
}

// (Updatable) The path against which to run the health check.  Example: `/healthcheck`
func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutput) UrlPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkLoadBalancersBackendSetsUnifiedHealthChecker) *string {
		if v == nil {
			return nil
		}
		return v.UrlPath
	}).(pulumi.StringPtrOutput)
}

type NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDns struct {
	// (Updatable) The absolute fully-qualified domain name to perform periodic DNS queries. If not provided, an extra dot will be added at the end of a domain name during the query.
	DomainName string `pulumi:"domainName"`
	// (Updatable) The class the dns health check query to use; either IN or CH.  Example: `IN`
	QueryClass *string `pulumi:"queryClass"`
	// (Updatable) The type the dns health check query to use; A, AAAA, TXT.  Example: `A`
	QueryType *string `pulumi:"queryType"`
	// (Updatable) An array that represents accepetable RCODE values for DNS query response. Example: ["NOERROR", "NXDOMAIN"]
	Rcodes []string `pulumi:"rcodes"`
	// (Updatable) DNS transport protocol; either UDP or TCP.  Example: `UDP`
	TransportProtocol *string `pulumi:"transportProtocol"`
}

// NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsInput is an input type that accepts NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsArgs and NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsOutput values.
// You can construct a concrete instance of `NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsInput` via:
//
//	NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsArgs{...}
type NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsInput interface {
	pulumi.Input

	ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsOutput() NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsOutput
	ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsOutputWithContext(context.Context) NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsOutput
}

type NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsArgs struct {
	// (Updatable) The absolute fully-qualified domain name to perform periodic DNS queries. If not provided, an extra dot will be added at the end of a domain name during the query.
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// (Updatable) The class the dns health check query to use; either IN or CH.  Example: `IN`
	QueryClass pulumi.StringPtrInput `pulumi:"queryClass"`
	// (Updatable) The type the dns health check query to use; A, AAAA, TXT.  Example: `A`
	QueryType pulumi.StringPtrInput `pulumi:"queryType"`
	// (Updatable) An array that represents accepetable RCODE values for DNS query response. Example: ["NOERROR", "NXDOMAIN"]
	Rcodes pulumi.StringArrayInput `pulumi:"rcodes"`
	// (Updatable) DNS transport protocol; either UDP or TCP.  Example: `UDP`
	TransportProtocol pulumi.StringPtrInput `pulumi:"transportProtocol"`
}

func (NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDns)(nil)).Elem()
}

func (i NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsArgs) ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsOutput() NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsOutput {
	return i.ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsOutputWithContext(context.Background())
}

func (i NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsArgs) ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsOutputWithContext(ctx context.Context) NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsOutput)
}

func (i NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsArgs) ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutput() NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutput {
	return i.ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutputWithContext(context.Background())
}

func (i NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsArgs) ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutputWithContext(ctx context.Context) NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsOutput).ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutputWithContext(ctx)
}

// NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrInput is an input type that accepts NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsArgs, NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtr and NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutput values.
// You can construct a concrete instance of `NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrInput` via:
//
//	        NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsArgs{...}
//
//	or:
//
//	        nil
type NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrInput interface {
	pulumi.Input

	ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutput() NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutput
	ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutputWithContext(context.Context) NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutput
}

type networkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrType NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsArgs

func NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtr(v *NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsArgs) NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrInput {
	return (*networkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrType)(v)
}

func (*networkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDns)(nil)).Elem()
}

func (i *networkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrType) ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutput() NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutput {
	return i.ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutputWithContext(context.Background())
}

func (i *networkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrType) ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutputWithContext(ctx context.Context) NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutput)
}

type NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsOutput struct{ *pulumi.OutputState }

func (NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDns)(nil)).Elem()
}

func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsOutput) ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsOutput() NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsOutput {
	return o
}

func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsOutput) ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsOutputWithContext(ctx context.Context) NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsOutput {
	return o
}

func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsOutput) ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutput() NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutput {
	return o.ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutputWithContext(context.Background())
}

func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsOutput) ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutputWithContext(ctx context.Context) NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDns) *NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDns {
		return &v
	}).(NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutput)
}

// (Updatable) The absolute fully-qualified domain name to perform periodic DNS queries. If not provided, an extra dot will be added at the end of a domain name during the query.
func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDns) string { return v.DomainName }).(pulumi.StringOutput)
}

// (Updatable) The class the dns health check query to use; either IN or CH.  Example: `IN`
func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsOutput) QueryClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDns) *string { return v.QueryClass }).(pulumi.StringPtrOutput)
}

// (Updatable) The type the dns health check query to use; A, AAAA, TXT.  Example: `A`
func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsOutput) QueryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDns) *string { return v.QueryType }).(pulumi.StringPtrOutput)
}

// (Updatable) An array that represents accepetable RCODE values for DNS query response. Example: ["NOERROR", "NXDOMAIN"]
func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsOutput) Rcodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDns) []string { return v.Rcodes }).(pulumi.StringArrayOutput)
}

// (Updatable) DNS transport protocol; either UDP or TCP.  Example: `UDP`
func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsOutput) TransportProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDns) *string { return v.TransportProtocol }).(pulumi.StringPtrOutput)
}

type NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutput struct{ *pulumi.OutputState }

func (NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDns)(nil)).Elem()
}

func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutput) ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutput() NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutput {
	return o
}

func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutput) ToNetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutputWithContext(ctx context.Context) NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutput {
	return o
}

func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutput) Elem() NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsOutput {
	return o.ApplyT(func(v *NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDns) NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDns {
		if v != nil {
			return *v
		}
		var ret NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDns
		return ret
	}).(NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsOutput)
}

// (Updatable) The absolute fully-qualified domain name to perform periodic DNS queries. If not provided, an extra dot will be added at the end of a domain name during the query.
func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDns) *string {
		if v == nil {
			return nil
		}
		return &v.DomainName
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The class the dns health check query to use; either IN or CH.  Example: `IN`
func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutput) QueryClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDns) *string {
		if v == nil {
			return nil
		}
		return v.QueryClass
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The type the dns health check query to use; A, AAAA, TXT.  Example: `A`
func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutput) QueryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDns) *string {
		if v == nil {
			return nil
		}
		return v.QueryType
	}).(pulumi.StringPtrOutput)
}

// (Updatable) An array that represents accepetable RCODE values for DNS query response. Example: ["NOERROR", "NXDOMAIN"]
func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutput) Rcodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDns) []string {
		if v == nil {
			return nil
		}
		return v.Rcodes
	}).(pulumi.StringArrayOutput)
}

// (Updatable) DNS transport protocol; either UDP or TCP.  Example: `UDP`
func (o NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutput) TransportProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDns) *string {
		if v == nil {
			return nil
		}
		return v.TransportProtocol
	}).(pulumi.StringPtrOutput)
}

type GetBackendHealthHealthCheckResult struct {
	// The result of the most recent health check.
	HealthCheckStatus string `pulumi:"healthCheckStatus"`
	// The date and time the data was retrieved, in the format defined by RFC3339.  Example: `2020-05-01T18:28:11+00:00`
	Timestamp string `pulumi:"timestamp"`
}

// GetBackendHealthHealthCheckResultInput is an input type that accepts GetBackendHealthHealthCheckResultArgs and GetBackendHealthHealthCheckResultOutput values.
// You can construct a concrete instance of `GetBackendHealthHealthCheckResultInput` via:
//
//	GetBackendHealthHealthCheckResultArgs{...}
type GetBackendHealthHealthCheckResultInput interface {
	pulumi.Input

	ToGetBackendHealthHealthCheckResultOutput() GetBackendHealthHealthCheckResultOutput
	ToGetBackendHealthHealthCheckResultOutputWithContext(context.Context) GetBackendHealthHealthCheckResultOutput
}

type GetBackendHealthHealthCheckResultArgs struct {
	// The result of the most recent health check.
	HealthCheckStatus pulumi.StringInput `pulumi:"healthCheckStatus"`
	// The date and time the data was retrieved, in the format defined by RFC3339.  Example: `2020-05-01T18:28:11+00:00`
	Timestamp pulumi.StringInput `pulumi:"timestamp"`
}

func (GetBackendHealthHealthCheckResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackendHealthHealthCheckResult)(nil)).Elem()
}

func (i GetBackendHealthHealthCheckResultArgs) ToGetBackendHealthHealthCheckResultOutput() GetBackendHealthHealthCheckResultOutput {
	return i.ToGetBackendHealthHealthCheckResultOutputWithContext(context.Background())
}

func (i GetBackendHealthHealthCheckResultArgs) ToGetBackendHealthHealthCheckResultOutputWithContext(ctx context.Context) GetBackendHealthHealthCheckResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackendHealthHealthCheckResultOutput)
}

// GetBackendHealthHealthCheckResultArrayInput is an input type that accepts GetBackendHealthHealthCheckResultArray and GetBackendHealthHealthCheckResultArrayOutput values.
// You can construct a concrete instance of `GetBackendHealthHealthCheckResultArrayInput` via:
//
//	GetBackendHealthHealthCheckResultArray{ GetBackendHealthHealthCheckResultArgs{...} }
type GetBackendHealthHealthCheckResultArrayInput interface {
	pulumi.Input

	ToGetBackendHealthHealthCheckResultArrayOutput() GetBackendHealthHealthCheckResultArrayOutput
	ToGetBackendHealthHealthCheckResultArrayOutputWithContext(context.Context) GetBackendHealthHealthCheckResultArrayOutput
}

type GetBackendHealthHealthCheckResultArray []GetBackendHealthHealthCheckResultInput

func (GetBackendHealthHealthCheckResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackendHealthHealthCheckResult)(nil)).Elem()
}

func (i GetBackendHealthHealthCheckResultArray) ToGetBackendHealthHealthCheckResultArrayOutput() GetBackendHealthHealthCheckResultArrayOutput {
	return i.ToGetBackendHealthHealthCheckResultArrayOutputWithContext(context.Background())
}

func (i GetBackendHealthHealthCheckResultArray) ToGetBackendHealthHealthCheckResultArrayOutputWithContext(ctx context.Context) GetBackendHealthHealthCheckResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackendHealthHealthCheckResultArrayOutput)
}

type GetBackendHealthHealthCheckResultOutput struct{ *pulumi.OutputState }

func (GetBackendHealthHealthCheckResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackendHealthHealthCheckResult)(nil)).Elem()
}

func (o GetBackendHealthHealthCheckResultOutput) ToGetBackendHealthHealthCheckResultOutput() GetBackendHealthHealthCheckResultOutput {
	return o
}

func (o GetBackendHealthHealthCheckResultOutput) ToGetBackendHealthHealthCheckResultOutputWithContext(ctx context.Context) GetBackendHealthHealthCheckResultOutput {
	return o
}

// The result of the most recent health check.
func (o GetBackendHealthHealthCheckResultOutput) HealthCheckStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendHealthHealthCheckResult) string { return v.HealthCheckStatus }).(pulumi.StringOutput)
}

// The date and time the data was retrieved, in the format defined by RFC3339.  Example: `2020-05-01T18:28:11+00:00`
func (o GetBackendHealthHealthCheckResultOutput) Timestamp() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendHealthHealthCheckResult) string { return v.Timestamp }).(pulumi.StringOutput)
}

type GetBackendHealthHealthCheckResultArrayOutput struct{ *pulumi.OutputState }

func (GetBackendHealthHealthCheckResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackendHealthHealthCheckResult)(nil)).Elem()
}

func (o GetBackendHealthHealthCheckResultArrayOutput) ToGetBackendHealthHealthCheckResultArrayOutput() GetBackendHealthHealthCheckResultArrayOutput {
	return o
}

func (o GetBackendHealthHealthCheckResultArrayOutput) ToGetBackendHealthHealthCheckResultArrayOutputWithContext(ctx context.Context) GetBackendHealthHealthCheckResultArrayOutput {
	return o
}

func (o GetBackendHealthHealthCheckResultArrayOutput) Index(i pulumi.IntInput) GetBackendHealthHealthCheckResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackendHealthHealthCheckResult {
		return vs[0].([]GetBackendHealthHealthCheckResult)[vs[1].(int)]
	}).(GetBackendHealthHealthCheckResultOutput)
}

type GetBackendSetBackend struct {
	// The IP address of the backend server. Example: `10.0.0.3`
	IpAddress string `pulumi:"ipAddress"`
	// Whether the network load balancer should treat this server as a backup unit. If `true`, then the network load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as "isBackup" fail the health check policy.  Example: `false`
	IsBackup bool `pulumi:"isBackup"`
	// Whether the network load balancer should drain this server. Servers marked "isDrain" receive no  incoming traffic.  Example: `false`
	IsDrain bool `pulumi:"isDrain"`
	// Whether the network load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`
	IsOffline bool `pulumi:"isOffline"`
	// A user-friendly name for the backend set that must be unique and cannot be changed.
	Name string `pulumi:"name"`
	// The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
	Port int `pulumi:"port"`
	// The IP OCID/Instance OCID associated with the backend server. Example: `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>`
	TargetId string `pulumi:"targetId"`
	// The network load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives three times the number of new connections as a server weighted '1'. For more information about load balancing policies, see [How Network Load Balancing Policies Work](https://docs.cloud.oracle.com/iaas/Content/Balance/Reference/lbpolicies.htm).  Example: `3`
	Weight int `pulumi:"weight"`
}

// GetBackendSetBackendInput is an input type that accepts GetBackendSetBackendArgs and GetBackendSetBackendOutput values.
// You can construct a concrete instance of `GetBackendSetBackendInput` via:
//
//	GetBackendSetBackendArgs{...}
type GetBackendSetBackendInput interface {
	pulumi.Input

	ToGetBackendSetBackendOutput() GetBackendSetBackendOutput
	ToGetBackendSetBackendOutputWithContext(context.Context) GetBackendSetBackendOutput
}

type GetBackendSetBackendArgs struct {
	// The IP address of the backend server. Example: `10.0.0.3`
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// Whether the network load balancer should treat this server as a backup unit. If `true`, then the network load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as "isBackup" fail the health check policy.  Example: `false`
	IsBackup pulumi.BoolInput `pulumi:"isBackup"`
	// Whether the network load balancer should drain this server. Servers marked "isDrain" receive no  incoming traffic.  Example: `false`
	IsDrain pulumi.BoolInput `pulumi:"isDrain"`
	// Whether the network load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`
	IsOffline pulumi.BoolInput `pulumi:"isOffline"`
	// A user-friendly name for the backend set that must be unique and cannot be changed.
	Name pulumi.StringInput `pulumi:"name"`
	// The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
	Port pulumi.IntInput `pulumi:"port"`
	// The IP OCID/Instance OCID associated with the backend server. Example: `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>`
	TargetId pulumi.StringInput `pulumi:"targetId"`
	// The network load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives three times the number of new connections as a server weighted '1'. For more information about load balancing policies, see [How Network Load Balancing Policies Work](https://docs.cloud.oracle.com/iaas/Content/Balance/Reference/lbpolicies.htm).  Example: `3`
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (GetBackendSetBackendArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackendSetBackend)(nil)).Elem()
}

func (i GetBackendSetBackendArgs) ToGetBackendSetBackendOutput() GetBackendSetBackendOutput {
	return i.ToGetBackendSetBackendOutputWithContext(context.Background())
}

func (i GetBackendSetBackendArgs) ToGetBackendSetBackendOutputWithContext(ctx context.Context) GetBackendSetBackendOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackendSetBackendOutput)
}

// GetBackendSetBackendArrayInput is an input type that accepts GetBackendSetBackendArray and GetBackendSetBackendArrayOutput values.
// You can construct a concrete instance of `GetBackendSetBackendArrayInput` via:
//
//	GetBackendSetBackendArray{ GetBackendSetBackendArgs{...} }
type GetBackendSetBackendArrayInput interface {
	pulumi.Input

	ToGetBackendSetBackendArrayOutput() GetBackendSetBackendArrayOutput
	ToGetBackendSetBackendArrayOutputWithContext(context.Context) GetBackendSetBackendArrayOutput
}

type GetBackendSetBackendArray []GetBackendSetBackendInput

func (GetBackendSetBackendArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackendSetBackend)(nil)).Elem()
}

func (i GetBackendSetBackendArray) ToGetBackendSetBackendArrayOutput() GetBackendSetBackendArrayOutput {
	return i.ToGetBackendSetBackendArrayOutputWithContext(context.Background())
}

func (i GetBackendSetBackendArray) ToGetBackendSetBackendArrayOutputWithContext(ctx context.Context) GetBackendSetBackendArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackendSetBackendArrayOutput)
}

type GetBackendSetBackendOutput struct{ *pulumi.OutputState }

func (GetBackendSetBackendOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackendSetBackend)(nil)).Elem()
}

func (o GetBackendSetBackendOutput) ToGetBackendSetBackendOutput() GetBackendSetBackendOutput {
	return o
}

func (o GetBackendSetBackendOutput) ToGetBackendSetBackendOutputWithContext(ctx context.Context) GetBackendSetBackendOutput {
	return o
}

// The IP address of the backend server. Example: `10.0.0.3`
func (o GetBackendSetBackendOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendSetBackend) string { return v.IpAddress }).(pulumi.StringOutput)
}

// Whether the network load balancer should treat this server as a backup unit. If `true`, then the network load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as "isBackup" fail the health check policy.  Example: `false`
func (o GetBackendSetBackendOutput) IsBackup() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBackendSetBackend) bool { return v.IsBackup }).(pulumi.BoolOutput)
}

// Whether the network load balancer should drain this server. Servers marked "isDrain" receive no  incoming traffic.  Example: `false`
func (o GetBackendSetBackendOutput) IsDrain() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBackendSetBackend) bool { return v.IsDrain }).(pulumi.BoolOutput)
}

// Whether the network load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`
func (o GetBackendSetBackendOutput) IsOffline() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBackendSetBackend) bool { return v.IsOffline }).(pulumi.BoolOutput)
}

// A user-friendly name for the backend set that must be unique and cannot be changed.
func (o GetBackendSetBackendOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendSetBackend) string { return v.Name }).(pulumi.StringOutput)
}

// The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
func (o GetBackendSetBackendOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackendSetBackend) int { return v.Port }).(pulumi.IntOutput)
}

// The IP OCID/Instance OCID associated with the backend server. Example: `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>`
func (o GetBackendSetBackendOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendSetBackend) string { return v.TargetId }).(pulumi.StringOutput)
}

// The network load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives three times the number of new connections as a server weighted '1'. For more information about load balancing policies, see [How Network Load Balancing Policies Work](https://docs.cloud.oracle.com/iaas/Content/Balance/Reference/lbpolicies.htm).  Example: `3`
func (o GetBackendSetBackendOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackendSetBackend) int { return v.Weight }).(pulumi.IntOutput)
}

type GetBackendSetBackendArrayOutput struct{ *pulumi.OutputState }

func (GetBackendSetBackendArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackendSetBackend)(nil)).Elem()
}

func (o GetBackendSetBackendArrayOutput) ToGetBackendSetBackendArrayOutput() GetBackendSetBackendArrayOutput {
	return o
}

func (o GetBackendSetBackendArrayOutput) ToGetBackendSetBackendArrayOutputWithContext(ctx context.Context) GetBackendSetBackendArrayOutput {
	return o
}

func (o GetBackendSetBackendArrayOutput) Index(i pulumi.IntInput) GetBackendSetBackendOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackendSetBackend {
		return vs[0].([]GetBackendSetBackend)[vs[1].(int)]
	}).(GetBackendSetBackendOutput)
}

type GetBackendSetHealthChecker struct {
	// DNS healthcheck configurations.
	Dns []GetBackendSetHealthCheckerDn `pulumi:"dns"`
	// The interval between health checks, in milliseconds. The default value is 10000 (10 seconds).  Example: `10000`
	IntervalInMillis int `pulumi:"intervalInMillis"`
	// The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
	Port int `pulumi:"port"`
	// The protocol the health check must use; either HTTP, HTTPS, UDP, TCP or DNS.  Example: `HTTP`
	Protocol string `pulumi:"protocol"`
	// Base64 encoded pattern to be sent as UDP or TCP health check probe.
	RequestData string `pulumi:"requestData"`
	// A regular expression for parsing the response body from the backend server.  Example: `^((?!false).|\s)*$`
	ResponseBodyRegex string `pulumi:"responseBodyRegex"`
	// Base64 encoded pattern to be validated as UDP or TCP health check probe response.
	ResponseData string `pulumi:"responseData"`
	// The number of retries to attempt before a backend server is considered "unhealthy". This number also applies when recovering a server to the "healthy" state. The default value is 3.  Example: `3`
	Retries int `pulumi:"retries"`
	// The status code a healthy backend server should return. If you configure the health check policy to use the HTTP protocol, then you can use common HTTP status codes such as "200".  Example: `200`
	ReturnCode int `pulumi:"returnCode"`
	// The maximum time, in milliseconds, to wait for a reply to a health check. A health check is successful only if a reply returns within this timeout period. The default value is 3000 (3 seconds).  Example: `3000`
	TimeoutInMillis int `pulumi:"timeoutInMillis"`
	// The path against which to run the health check.  Example: `/healthcheck`
	UrlPath string `pulumi:"urlPath"`
}

// GetBackendSetHealthCheckerInput is an input type that accepts GetBackendSetHealthCheckerArgs and GetBackendSetHealthCheckerOutput values.
// You can construct a concrete instance of `GetBackendSetHealthCheckerInput` via:
//
//	GetBackendSetHealthCheckerArgs{...}
type GetBackendSetHealthCheckerInput interface {
	pulumi.Input

	ToGetBackendSetHealthCheckerOutput() GetBackendSetHealthCheckerOutput
	ToGetBackendSetHealthCheckerOutputWithContext(context.Context) GetBackendSetHealthCheckerOutput
}

type GetBackendSetHealthCheckerArgs struct {
	// DNS healthcheck configurations.
	Dns GetBackendSetHealthCheckerDnArrayInput `pulumi:"dns"`
	// The interval between health checks, in milliseconds. The default value is 10000 (10 seconds).  Example: `10000`
	IntervalInMillis pulumi.IntInput `pulumi:"intervalInMillis"`
	// The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
	Port pulumi.IntInput `pulumi:"port"`
	// The protocol the health check must use; either HTTP, HTTPS, UDP, TCP or DNS.  Example: `HTTP`
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Base64 encoded pattern to be sent as UDP or TCP health check probe.
	RequestData pulumi.StringInput `pulumi:"requestData"`
	// A regular expression for parsing the response body from the backend server.  Example: `^((?!false).|\s)*$`
	ResponseBodyRegex pulumi.StringInput `pulumi:"responseBodyRegex"`
	// Base64 encoded pattern to be validated as UDP or TCP health check probe response.
	ResponseData pulumi.StringInput `pulumi:"responseData"`
	// The number of retries to attempt before a backend server is considered "unhealthy". This number also applies when recovering a server to the "healthy" state. The default value is 3.  Example: `3`
	Retries pulumi.IntInput `pulumi:"retries"`
	// The status code a healthy backend server should return. If you configure the health check policy to use the HTTP protocol, then you can use common HTTP status codes such as "200".  Example: `200`
	ReturnCode pulumi.IntInput `pulumi:"returnCode"`
	// The maximum time, in milliseconds, to wait for a reply to a health check. A health check is successful only if a reply returns within this timeout period. The default value is 3000 (3 seconds).  Example: `3000`
	TimeoutInMillis pulumi.IntInput `pulumi:"timeoutInMillis"`
	// The path against which to run the health check.  Example: `/healthcheck`
	UrlPath pulumi.StringInput `pulumi:"urlPath"`
}

func (GetBackendSetHealthCheckerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackendSetHealthChecker)(nil)).Elem()
}

func (i GetBackendSetHealthCheckerArgs) ToGetBackendSetHealthCheckerOutput() GetBackendSetHealthCheckerOutput {
	return i.ToGetBackendSetHealthCheckerOutputWithContext(context.Background())
}

func (i GetBackendSetHealthCheckerArgs) ToGetBackendSetHealthCheckerOutputWithContext(ctx context.Context) GetBackendSetHealthCheckerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackendSetHealthCheckerOutput)
}

// GetBackendSetHealthCheckerArrayInput is an input type that accepts GetBackendSetHealthCheckerArray and GetBackendSetHealthCheckerArrayOutput values.
// You can construct a concrete instance of `GetBackendSetHealthCheckerArrayInput` via:
//
//	GetBackendSetHealthCheckerArray{ GetBackendSetHealthCheckerArgs{...} }
type GetBackendSetHealthCheckerArrayInput interface {
	pulumi.Input

	ToGetBackendSetHealthCheckerArrayOutput() GetBackendSetHealthCheckerArrayOutput
	ToGetBackendSetHealthCheckerArrayOutputWithContext(context.Context) GetBackendSetHealthCheckerArrayOutput
}

type GetBackendSetHealthCheckerArray []GetBackendSetHealthCheckerInput

func (GetBackendSetHealthCheckerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackendSetHealthChecker)(nil)).Elem()
}

func (i GetBackendSetHealthCheckerArray) ToGetBackendSetHealthCheckerArrayOutput() GetBackendSetHealthCheckerArrayOutput {
	return i.ToGetBackendSetHealthCheckerArrayOutputWithContext(context.Background())
}

func (i GetBackendSetHealthCheckerArray) ToGetBackendSetHealthCheckerArrayOutputWithContext(ctx context.Context) GetBackendSetHealthCheckerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackendSetHealthCheckerArrayOutput)
}

type GetBackendSetHealthCheckerOutput struct{ *pulumi.OutputState }

func (GetBackendSetHealthCheckerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackendSetHealthChecker)(nil)).Elem()
}

func (o GetBackendSetHealthCheckerOutput) ToGetBackendSetHealthCheckerOutput() GetBackendSetHealthCheckerOutput {
	return o
}

func (o GetBackendSetHealthCheckerOutput) ToGetBackendSetHealthCheckerOutputWithContext(ctx context.Context) GetBackendSetHealthCheckerOutput {
	return o
}

// DNS healthcheck configurations.
func (o GetBackendSetHealthCheckerOutput) Dns() GetBackendSetHealthCheckerDnArrayOutput {
	return o.ApplyT(func(v GetBackendSetHealthChecker) []GetBackendSetHealthCheckerDn { return v.Dns }).(GetBackendSetHealthCheckerDnArrayOutput)
}

// The interval between health checks, in milliseconds. The default value is 10000 (10 seconds).  Example: `10000`
func (o GetBackendSetHealthCheckerOutput) IntervalInMillis() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackendSetHealthChecker) int { return v.IntervalInMillis }).(pulumi.IntOutput)
}

// The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
func (o GetBackendSetHealthCheckerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackendSetHealthChecker) int { return v.Port }).(pulumi.IntOutput)
}

// The protocol the health check must use; either HTTP, HTTPS, UDP, TCP or DNS.  Example: `HTTP`
func (o GetBackendSetHealthCheckerOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendSetHealthChecker) string { return v.Protocol }).(pulumi.StringOutput)
}

// Base64 encoded pattern to be sent as UDP or TCP health check probe.
func (o GetBackendSetHealthCheckerOutput) RequestData() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendSetHealthChecker) string { return v.RequestData }).(pulumi.StringOutput)
}

// A regular expression for parsing the response body from the backend server.  Example: `^((?!false).|\s)*$`
func (o GetBackendSetHealthCheckerOutput) ResponseBodyRegex() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendSetHealthChecker) string { return v.ResponseBodyRegex }).(pulumi.StringOutput)
}

// Base64 encoded pattern to be validated as UDP or TCP health check probe response.
func (o GetBackendSetHealthCheckerOutput) ResponseData() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendSetHealthChecker) string { return v.ResponseData }).(pulumi.StringOutput)
}

// The number of retries to attempt before a backend server is considered "unhealthy". This number also applies when recovering a server to the "healthy" state. The default value is 3.  Example: `3`
func (o GetBackendSetHealthCheckerOutput) Retries() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackendSetHealthChecker) int { return v.Retries }).(pulumi.IntOutput)
}

// The status code a healthy backend server should return. If you configure the health check policy to use the HTTP protocol, then you can use common HTTP status codes such as "200".  Example: `200`
func (o GetBackendSetHealthCheckerOutput) ReturnCode() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackendSetHealthChecker) int { return v.ReturnCode }).(pulumi.IntOutput)
}

// The maximum time, in milliseconds, to wait for a reply to a health check. A health check is successful only if a reply returns within this timeout period. The default value is 3000 (3 seconds).  Example: `3000`
func (o GetBackendSetHealthCheckerOutput) TimeoutInMillis() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackendSetHealthChecker) int { return v.TimeoutInMillis }).(pulumi.IntOutput)
}

// The path against which to run the health check.  Example: `/healthcheck`
func (o GetBackendSetHealthCheckerOutput) UrlPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendSetHealthChecker) string { return v.UrlPath }).(pulumi.StringOutput)
}

type GetBackendSetHealthCheckerArrayOutput struct{ *pulumi.OutputState }

func (GetBackendSetHealthCheckerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackendSetHealthChecker)(nil)).Elem()
}

func (o GetBackendSetHealthCheckerArrayOutput) ToGetBackendSetHealthCheckerArrayOutput() GetBackendSetHealthCheckerArrayOutput {
	return o
}

func (o GetBackendSetHealthCheckerArrayOutput) ToGetBackendSetHealthCheckerArrayOutputWithContext(ctx context.Context) GetBackendSetHealthCheckerArrayOutput {
	return o
}

func (o GetBackendSetHealthCheckerArrayOutput) Index(i pulumi.IntInput) GetBackendSetHealthCheckerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackendSetHealthChecker {
		return vs[0].([]GetBackendSetHealthChecker)[vs[1].(int)]
	}).(GetBackendSetHealthCheckerOutput)
}

type GetBackendSetHealthCheckerDn struct {
	// The absolute fully-qualified domain name to perform periodic DNS queries. If not provided, an extra dot will be added at the end of a domain name during the query.
	DomainName string `pulumi:"domainName"`
	// The class the dns health check query to use; either IN or CH.  Example: `IN`
	QueryClass string `pulumi:"queryClass"`
	// The type the dns health check query to use; A, AAAA, TXT.  Example: `A`
	QueryType string `pulumi:"queryType"`
	// An array that represents accepetable RCODE values for DNS query response. Example: ["NOERROR", "NXDOMAIN"]
	Rcodes []string `pulumi:"rcodes"`
	// DNS transport protocol; either UDP or TCP.  Example: `UDP`
	TransportProtocol string `pulumi:"transportProtocol"`
}

// GetBackendSetHealthCheckerDnInput is an input type that accepts GetBackendSetHealthCheckerDnArgs and GetBackendSetHealthCheckerDnOutput values.
// You can construct a concrete instance of `GetBackendSetHealthCheckerDnInput` via:
//
//	GetBackendSetHealthCheckerDnArgs{...}
type GetBackendSetHealthCheckerDnInput interface {
	pulumi.Input

	ToGetBackendSetHealthCheckerDnOutput() GetBackendSetHealthCheckerDnOutput
	ToGetBackendSetHealthCheckerDnOutputWithContext(context.Context) GetBackendSetHealthCheckerDnOutput
}

type GetBackendSetHealthCheckerDnArgs struct {
	// The absolute fully-qualified domain name to perform periodic DNS queries. If not provided, an extra dot will be added at the end of a domain name during the query.
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// The class the dns health check query to use; either IN or CH.  Example: `IN`
	QueryClass pulumi.StringInput `pulumi:"queryClass"`
	// The type the dns health check query to use; A, AAAA, TXT.  Example: `A`
	QueryType pulumi.StringInput `pulumi:"queryType"`
	// An array that represents accepetable RCODE values for DNS query response. Example: ["NOERROR", "NXDOMAIN"]
	Rcodes pulumi.StringArrayInput `pulumi:"rcodes"`
	// DNS transport protocol; either UDP or TCP.  Example: `UDP`
	TransportProtocol pulumi.StringInput `pulumi:"transportProtocol"`
}

func (GetBackendSetHealthCheckerDnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackendSetHealthCheckerDn)(nil)).Elem()
}

func (i GetBackendSetHealthCheckerDnArgs) ToGetBackendSetHealthCheckerDnOutput() GetBackendSetHealthCheckerDnOutput {
	return i.ToGetBackendSetHealthCheckerDnOutputWithContext(context.Background())
}

func (i GetBackendSetHealthCheckerDnArgs) ToGetBackendSetHealthCheckerDnOutputWithContext(ctx context.Context) GetBackendSetHealthCheckerDnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackendSetHealthCheckerDnOutput)
}

// GetBackendSetHealthCheckerDnArrayInput is an input type that accepts GetBackendSetHealthCheckerDnArray and GetBackendSetHealthCheckerDnArrayOutput values.
// You can construct a concrete instance of `GetBackendSetHealthCheckerDnArrayInput` via:
//
//	GetBackendSetHealthCheckerDnArray{ GetBackendSetHealthCheckerDnArgs{...} }
type GetBackendSetHealthCheckerDnArrayInput interface {
	pulumi.Input

	ToGetBackendSetHealthCheckerDnArrayOutput() GetBackendSetHealthCheckerDnArrayOutput
	ToGetBackendSetHealthCheckerDnArrayOutputWithContext(context.Context) GetBackendSetHealthCheckerDnArrayOutput
}

type GetBackendSetHealthCheckerDnArray []GetBackendSetHealthCheckerDnInput

func (GetBackendSetHealthCheckerDnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackendSetHealthCheckerDn)(nil)).Elem()
}

func (i GetBackendSetHealthCheckerDnArray) ToGetBackendSetHealthCheckerDnArrayOutput() GetBackendSetHealthCheckerDnArrayOutput {
	return i.ToGetBackendSetHealthCheckerDnArrayOutputWithContext(context.Background())
}

func (i GetBackendSetHealthCheckerDnArray) ToGetBackendSetHealthCheckerDnArrayOutputWithContext(ctx context.Context) GetBackendSetHealthCheckerDnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackendSetHealthCheckerDnArrayOutput)
}

type GetBackendSetHealthCheckerDnOutput struct{ *pulumi.OutputState }

func (GetBackendSetHealthCheckerDnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackendSetHealthCheckerDn)(nil)).Elem()
}

func (o GetBackendSetHealthCheckerDnOutput) ToGetBackendSetHealthCheckerDnOutput() GetBackendSetHealthCheckerDnOutput {
	return o
}

func (o GetBackendSetHealthCheckerDnOutput) ToGetBackendSetHealthCheckerDnOutputWithContext(ctx context.Context) GetBackendSetHealthCheckerDnOutput {
	return o
}

// The absolute fully-qualified domain name to perform periodic DNS queries. If not provided, an extra dot will be added at the end of a domain name during the query.
func (o GetBackendSetHealthCheckerDnOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendSetHealthCheckerDn) string { return v.DomainName }).(pulumi.StringOutput)
}

// The class the dns health check query to use; either IN or CH.  Example: `IN`
func (o GetBackendSetHealthCheckerDnOutput) QueryClass() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendSetHealthCheckerDn) string { return v.QueryClass }).(pulumi.StringOutput)
}

// The type the dns health check query to use; A, AAAA, TXT.  Example: `A`
func (o GetBackendSetHealthCheckerDnOutput) QueryType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendSetHealthCheckerDn) string { return v.QueryType }).(pulumi.StringOutput)
}

// An array that represents accepetable RCODE values for DNS query response. Example: ["NOERROR", "NXDOMAIN"]
func (o GetBackendSetHealthCheckerDnOutput) Rcodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBackendSetHealthCheckerDn) []string { return v.Rcodes }).(pulumi.StringArrayOutput)
}

// DNS transport protocol; either UDP or TCP.  Example: `UDP`
func (o GetBackendSetHealthCheckerDnOutput) TransportProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendSetHealthCheckerDn) string { return v.TransportProtocol }).(pulumi.StringOutput)
}

type GetBackendSetHealthCheckerDnArrayOutput struct{ *pulumi.OutputState }

func (GetBackendSetHealthCheckerDnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackendSetHealthCheckerDn)(nil)).Elem()
}

func (o GetBackendSetHealthCheckerDnArrayOutput) ToGetBackendSetHealthCheckerDnArrayOutput() GetBackendSetHealthCheckerDnArrayOutput {
	return o
}

func (o GetBackendSetHealthCheckerDnArrayOutput) ToGetBackendSetHealthCheckerDnArrayOutputWithContext(ctx context.Context) GetBackendSetHealthCheckerDnArrayOutput {
	return o
}

func (o GetBackendSetHealthCheckerDnArrayOutput) Index(i pulumi.IntInput) GetBackendSetHealthCheckerDnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackendSetHealthCheckerDn {
		return vs[0].([]GetBackendSetHealthCheckerDn)[vs[1].(int)]
	}).(GetBackendSetHealthCheckerDnOutput)
}

type GetBackendSetsBackendSetCollection struct {
	Items []GetBackendSetsBackendSetCollectionItem `pulumi:"items"`
}

// GetBackendSetsBackendSetCollectionInput is an input type that accepts GetBackendSetsBackendSetCollectionArgs and GetBackendSetsBackendSetCollectionOutput values.
// You can construct a concrete instance of `GetBackendSetsBackendSetCollectionInput` via:
//
//	GetBackendSetsBackendSetCollectionArgs{...}
type GetBackendSetsBackendSetCollectionInput interface {
	pulumi.Input

	ToGetBackendSetsBackendSetCollectionOutput() GetBackendSetsBackendSetCollectionOutput
	ToGetBackendSetsBackendSetCollectionOutputWithContext(context.Context) GetBackendSetsBackendSetCollectionOutput
}

type GetBackendSetsBackendSetCollectionArgs struct {
	Items GetBackendSetsBackendSetCollectionItemArrayInput `pulumi:"items"`
}

func (GetBackendSetsBackendSetCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackendSetsBackendSetCollection)(nil)).Elem()
}

func (i GetBackendSetsBackendSetCollectionArgs) ToGetBackendSetsBackendSetCollectionOutput() GetBackendSetsBackendSetCollectionOutput {
	return i.ToGetBackendSetsBackendSetCollectionOutputWithContext(context.Background())
}

func (i GetBackendSetsBackendSetCollectionArgs) ToGetBackendSetsBackendSetCollectionOutputWithContext(ctx context.Context) GetBackendSetsBackendSetCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackendSetsBackendSetCollectionOutput)
}

// GetBackendSetsBackendSetCollectionArrayInput is an input type that accepts GetBackendSetsBackendSetCollectionArray and GetBackendSetsBackendSetCollectionArrayOutput values.
// You can construct a concrete instance of `GetBackendSetsBackendSetCollectionArrayInput` via:
//
//	GetBackendSetsBackendSetCollectionArray{ GetBackendSetsBackendSetCollectionArgs{...} }
type GetBackendSetsBackendSetCollectionArrayInput interface {
	pulumi.Input

	ToGetBackendSetsBackendSetCollectionArrayOutput() GetBackendSetsBackendSetCollectionArrayOutput
	ToGetBackendSetsBackendSetCollectionArrayOutputWithContext(context.Context) GetBackendSetsBackendSetCollectionArrayOutput
}

type GetBackendSetsBackendSetCollectionArray []GetBackendSetsBackendSetCollectionInput

func (GetBackendSetsBackendSetCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackendSetsBackendSetCollection)(nil)).Elem()
}

func (i GetBackendSetsBackendSetCollectionArray) ToGetBackendSetsBackendSetCollectionArrayOutput() GetBackendSetsBackendSetCollectionArrayOutput {
	return i.ToGetBackendSetsBackendSetCollectionArrayOutputWithContext(context.Background())
}

func (i GetBackendSetsBackendSetCollectionArray) ToGetBackendSetsBackendSetCollectionArrayOutputWithContext(ctx context.Context) GetBackendSetsBackendSetCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackendSetsBackendSetCollectionArrayOutput)
}

type GetBackendSetsBackendSetCollectionOutput struct{ *pulumi.OutputState }

func (GetBackendSetsBackendSetCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackendSetsBackendSetCollection)(nil)).Elem()
}

func (o GetBackendSetsBackendSetCollectionOutput) ToGetBackendSetsBackendSetCollectionOutput() GetBackendSetsBackendSetCollectionOutput {
	return o
}

func (o GetBackendSetsBackendSetCollectionOutput) ToGetBackendSetsBackendSetCollectionOutputWithContext(ctx context.Context) GetBackendSetsBackendSetCollectionOutput {
	return o
}

func (o GetBackendSetsBackendSetCollectionOutput) Items() GetBackendSetsBackendSetCollectionItemArrayOutput {
	return o.ApplyT(func(v GetBackendSetsBackendSetCollection) []GetBackendSetsBackendSetCollectionItem { return v.Items }).(GetBackendSetsBackendSetCollectionItemArrayOutput)
}

type GetBackendSetsBackendSetCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetBackendSetsBackendSetCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackendSetsBackendSetCollection)(nil)).Elem()
}

func (o GetBackendSetsBackendSetCollectionArrayOutput) ToGetBackendSetsBackendSetCollectionArrayOutput() GetBackendSetsBackendSetCollectionArrayOutput {
	return o
}

func (o GetBackendSetsBackendSetCollectionArrayOutput) ToGetBackendSetsBackendSetCollectionArrayOutputWithContext(ctx context.Context) GetBackendSetsBackendSetCollectionArrayOutput {
	return o
}

func (o GetBackendSetsBackendSetCollectionArrayOutput) Index(i pulumi.IntInput) GetBackendSetsBackendSetCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackendSetsBackendSetCollection {
		return vs[0].([]GetBackendSetsBackendSetCollection)[vs[1].(int)]
	}).(GetBackendSetsBackendSetCollectionOutput)
}

type GetBackendSetsBackendSetCollectionItem struct {
	// Array of backends.
	Backends []GetBackendSetsBackendSetCollectionItemBackend `pulumi:"backends"`
	// The health check policy configuration. For more information, see [Editing Health Check Policies](https://docs.cloud.oracle.com/iaas/Content/Balance/Tasks/editinghealthcheck.htm).
	HealthCheckers []GetBackendSetsBackendSetCollectionItemHealthChecker `pulumi:"healthCheckers"`
	Id             string                                                `pulumi:"id"`
	// IP version associated with the backend set.
	IpVersion string `pulumi:"ipVersion"`
	// If enabled, the network load balancer will continue to distribute traffic in the configured distribution in the event all backends are unhealthy. The value is false by default.
	IsFailOpen bool `pulumi:"isFailOpen"`
	// If enabled existing connections will be forwarded to an alternative healthy backend as soon as current backend becomes unhealthy.
	IsInstantFailoverEnabled bool `pulumi:"isInstantFailoverEnabled"`
	// If this parameter is enabled, then the network load balancer preserves the source IP of the packet when it is forwarded to backends. Backends see the original source IP. If the isPreserveSourceDestination parameter is enabled for the network load balancer resource, then this parameter cannot be disabled. The value is true by default.
	IsPreserveSource bool `pulumi:"isPreserveSource"`
	// A user-friendly name for the backend set that must be unique and cannot be changed.
	Name string `pulumi:"name"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer to update.
	NetworkLoadBalancerId string `pulumi:"networkLoadBalancerId"`
	// The network load balancer policy for the backend set.  Example: `FIVE_TUPLE`
	Policy string `pulumi:"policy"`
}

// GetBackendSetsBackendSetCollectionItemInput is an input type that accepts GetBackendSetsBackendSetCollectionItemArgs and GetBackendSetsBackendSetCollectionItemOutput values.
// You can construct a concrete instance of `GetBackendSetsBackendSetCollectionItemInput` via:
//
//	GetBackendSetsBackendSetCollectionItemArgs{...}
type GetBackendSetsBackendSetCollectionItemInput interface {
	pulumi.Input

	ToGetBackendSetsBackendSetCollectionItemOutput() GetBackendSetsBackendSetCollectionItemOutput
	ToGetBackendSetsBackendSetCollectionItemOutputWithContext(context.Context) GetBackendSetsBackendSetCollectionItemOutput
}

type GetBackendSetsBackendSetCollectionItemArgs struct {
	// Array of backends.
	Backends GetBackendSetsBackendSetCollectionItemBackendArrayInput `pulumi:"backends"`
	// The health check policy configuration. For more information, see [Editing Health Check Policies](https://docs.cloud.oracle.com/iaas/Content/Balance/Tasks/editinghealthcheck.htm).
	HealthCheckers GetBackendSetsBackendSetCollectionItemHealthCheckerArrayInput `pulumi:"healthCheckers"`
	Id             pulumi.StringInput                                            `pulumi:"id"`
	// IP version associated with the backend set.
	IpVersion pulumi.StringInput `pulumi:"ipVersion"`
	// If enabled, the network load balancer will continue to distribute traffic in the configured distribution in the event all backends are unhealthy. The value is false by default.
	IsFailOpen pulumi.BoolInput `pulumi:"isFailOpen"`
	// If enabled existing connections will be forwarded to an alternative healthy backend as soon as current backend becomes unhealthy.
	IsInstantFailoverEnabled pulumi.BoolInput `pulumi:"isInstantFailoverEnabled"`
	// If this parameter is enabled, then the network load balancer preserves the source IP of the packet when it is forwarded to backends. Backends see the original source IP. If the isPreserveSourceDestination parameter is enabled for the network load balancer resource, then this parameter cannot be disabled. The value is true by default.
	IsPreserveSource pulumi.BoolInput `pulumi:"isPreserveSource"`
	// A user-friendly name for the backend set that must be unique and cannot be changed.
	Name pulumi.StringInput `pulumi:"name"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer to update.
	NetworkLoadBalancerId pulumi.StringInput `pulumi:"networkLoadBalancerId"`
	// The network load balancer policy for the backend set.  Example: `FIVE_TUPLE`
	Policy pulumi.StringInput `pulumi:"policy"`
}

func (GetBackendSetsBackendSetCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackendSetsBackendSetCollectionItem)(nil)).Elem()
}

func (i GetBackendSetsBackendSetCollectionItemArgs) ToGetBackendSetsBackendSetCollectionItemOutput() GetBackendSetsBackendSetCollectionItemOutput {
	return i.ToGetBackendSetsBackendSetCollectionItemOutputWithContext(context.Background())
}

func (i GetBackendSetsBackendSetCollectionItemArgs) ToGetBackendSetsBackendSetCollectionItemOutputWithContext(ctx context.Context) GetBackendSetsBackendSetCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackendSetsBackendSetCollectionItemOutput)
}

// GetBackendSetsBackendSetCollectionItemArrayInput is an input type that accepts GetBackendSetsBackendSetCollectionItemArray and GetBackendSetsBackendSetCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetBackendSetsBackendSetCollectionItemArrayInput` via:
//
//	GetBackendSetsBackendSetCollectionItemArray{ GetBackendSetsBackendSetCollectionItemArgs{...} }
type GetBackendSetsBackendSetCollectionItemArrayInput interface {
	pulumi.Input

	ToGetBackendSetsBackendSetCollectionItemArrayOutput() GetBackendSetsBackendSetCollectionItemArrayOutput
	ToGetBackendSetsBackendSetCollectionItemArrayOutputWithContext(context.Context) GetBackendSetsBackendSetCollectionItemArrayOutput
}

type GetBackendSetsBackendSetCollectionItemArray []GetBackendSetsBackendSetCollectionItemInput

func (GetBackendSetsBackendSetCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackendSetsBackendSetCollectionItem)(nil)).Elem()
}

func (i GetBackendSetsBackendSetCollectionItemArray) ToGetBackendSetsBackendSetCollectionItemArrayOutput() GetBackendSetsBackendSetCollectionItemArrayOutput {
	return i.ToGetBackendSetsBackendSetCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetBackendSetsBackendSetCollectionItemArray) ToGetBackendSetsBackendSetCollectionItemArrayOutputWithContext(ctx context.Context) GetBackendSetsBackendSetCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackendSetsBackendSetCollectionItemArrayOutput)
}

type GetBackendSetsBackendSetCollectionItemOutput struct{ *pulumi.OutputState }

func (GetBackendSetsBackendSetCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackendSetsBackendSetCollectionItem)(nil)).Elem()
}

func (o GetBackendSetsBackendSetCollectionItemOutput) ToGetBackendSetsBackendSetCollectionItemOutput() GetBackendSetsBackendSetCollectionItemOutput {
	return o
}

func (o GetBackendSetsBackendSetCollectionItemOutput) ToGetBackendSetsBackendSetCollectionItemOutputWithContext(ctx context.Context) GetBackendSetsBackendSetCollectionItemOutput {
	return o
}

// Array of backends.
func (o GetBackendSetsBackendSetCollectionItemOutput) Backends() GetBackendSetsBackendSetCollectionItemBackendArrayOutput {
	return o.ApplyT(func(v GetBackendSetsBackendSetCollectionItem) []GetBackendSetsBackendSetCollectionItemBackend {
		return v.Backends
	}).(GetBackendSetsBackendSetCollectionItemBackendArrayOutput)
}

// The health check policy configuration. For more information, see [Editing Health Check Policies](https://docs.cloud.oracle.com/iaas/Content/Balance/Tasks/editinghealthcheck.htm).
func (o GetBackendSetsBackendSetCollectionItemOutput) HealthCheckers() GetBackendSetsBackendSetCollectionItemHealthCheckerArrayOutput {
	return o.ApplyT(func(v GetBackendSetsBackendSetCollectionItem) []GetBackendSetsBackendSetCollectionItemHealthChecker {
		return v.HealthCheckers
	}).(GetBackendSetsBackendSetCollectionItemHealthCheckerArrayOutput)
}

func (o GetBackendSetsBackendSetCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendSetsBackendSetCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// IP version associated with the backend set.
func (o GetBackendSetsBackendSetCollectionItemOutput) IpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendSetsBackendSetCollectionItem) string { return v.IpVersion }).(pulumi.StringOutput)
}

// If enabled, the network load balancer will continue to distribute traffic in the configured distribution in the event all backends are unhealthy. The value is false by default.
func (o GetBackendSetsBackendSetCollectionItemOutput) IsFailOpen() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBackendSetsBackendSetCollectionItem) bool { return v.IsFailOpen }).(pulumi.BoolOutput)
}

// If enabled existing connections will be forwarded to an alternative healthy backend as soon as current backend becomes unhealthy.
func (o GetBackendSetsBackendSetCollectionItemOutput) IsInstantFailoverEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBackendSetsBackendSetCollectionItem) bool { return v.IsInstantFailoverEnabled }).(pulumi.BoolOutput)
}

// If this parameter is enabled, then the network load balancer preserves the source IP of the packet when it is forwarded to backends. Backends see the original source IP. If the isPreserveSourceDestination parameter is enabled for the network load balancer resource, then this parameter cannot be disabled. The value is true by default.
func (o GetBackendSetsBackendSetCollectionItemOutput) IsPreserveSource() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBackendSetsBackendSetCollectionItem) bool { return v.IsPreserveSource }).(pulumi.BoolOutput)
}

// A user-friendly name for the backend set that must be unique and cannot be changed.
func (o GetBackendSetsBackendSetCollectionItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendSetsBackendSetCollectionItem) string { return v.Name }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer to update.
func (o GetBackendSetsBackendSetCollectionItemOutput) NetworkLoadBalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendSetsBackendSetCollectionItem) string { return v.NetworkLoadBalancerId }).(pulumi.StringOutput)
}

// The network load balancer policy for the backend set.  Example: `FIVE_TUPLE`
func (o GetBackendSetsBackendSetCollectionItemOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendSetsBackendSetCollectionItem) string { return v.Policy }).(pulumi.StringOutput)
}

type GetBackendSetsBackendSetCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetBackendSetsBackendSetCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackendSetsBackendSetCollectionItem)(nil)).Elem()
}

func (o GetBackendSetsBackendSetCollectionItemArrayOutput) ToGetBackendSetsBackendSetCollectionItemArrayOutput() GetBackendSetsBackendSetCollectionItemArrayOutput {
	return o
}

func (o GetBackendSetsBackendSetCollectionItemArrayOutput) ToGetBackendSetsBackendSetCollectionItemArrayOutputWithContext(ctx context.Context) GetBackendSetsBackendSetCollectionItemArrayOutput {
	return o
}

func (o GetBackendSetsBackendSetCollectionItemArrayOutput) Index(i pulumi.IntInput) GetBackendSetsBackendSetCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackendSetsBackendSetCollectionItem {
		return vs[0].([]GetBackendSetsBackendSetCollectionItem)[vs[1].(int)]
	}).(GetBackendSetsBackendSetCollectionItemOutput)
}

type GetBackendSetsBackendSetCollectionItemBackend struct {
	// The IP address of the backend server. Example: `10.0.0.3`
	IpAddress string `pulumi:"ipAddress"`
	// Whether the network load balancer should treat this server as a backup unit. If `true`, then the network load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as "isBackup" fail the health check policy.  Example: `false`
	IsBackup bool `pulumi:"isBackup"`
	// Whether the network load balancer should drain this server. Servers marked "isDrain" receive no  incoming traffic.  Example: `false`
	IsDrain bool `pulumi:"isDrain"`
	// Whether the network load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`
	IsOffline bool `pulumi:"isOffline"`
	// A user-friendly name for the backend set that must be unique and cannot be changed.
	Name string `pulumi:"name"`
	// The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
	Port int `pulumi:"port"`
	// The IP OCID/Instance OCID associated with the backend server. Example: `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>`
	TargetId string `pulumi:"targetId"`
	// The network load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives three times the number of new connections as a server weighted '1'. For more information about load balancing policies, see [How Network Load Balancing Policies Work](https://docs.cloud.oracle.com/iaas/Content/Balance/Reference/lbpolicies.htm).  Example: `3`
	Weight int `pulumi:"weight"`
}

// GetBackendSetsBackendSetCollectionItemBackendInput is an input type that accepts GetBackendSetsBackendSetCollectionItemBackendArgs and GetBackendSetsBackendSetCollectionItemBackendOutput values.
// You can construct a concrete instance of `GetBackendSetsBackendSetCollectionItemBackendInput` via:
//
//	GetBackendSetsBackendSetCollectionItemBackendArgs{...}
type GetBackendSetsBackendSetCollectionItemBackendInput interface {
	pulumi.Input

	ToGetBackendSetsBackendSetCollectionItemBackendOutput() GetBackendSetsBackendSetCollectionItemBackendOutput
	ToGetBackendSetsBackendSetCollectionItemBackendOutputWithContext(context.Context) GetBackendSetsBackendSetCollectionItemBackendOutput
}

type GetBackendSetsBackendSetCollectionItemBackendArgs struct {
	// The IP address of the backend server. Example: `10.0.0.3`
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// Whether the network load balancer should treat this server as a backup unit. If `true`, then the network load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as "isBackup" fail the health check policy.  Example: `false`
	IsBackup pulumi.BoolInput `pulumi:"isBackup"`
	// Whether the network load balancer should drain this server. Servers marked "isDrain" receive no  incoming traffic.  Example: `false`
	IsDrain pulumi.BoolInput `pulumi:"isDrain"`
	// Whether the network load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`
	IsOffline pulumi.BoolInput `pulumi:"isOffline"`
	// A user-friendly name for the backend set that must be unique and cannot be changed.
	Name pulumi.StringInput `pulumi:"name"`
	// The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
	Port pulumi.IntInput `pulumi:"port"`
	// The IP OCID/Instance OCID associated with the backend server. Example: `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>`
	TargetId pulumi.StringInput `pulumi:"targetId"`
	// The network load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives three times the number of new connections as a server weighted '1'. For more information about load balancing policies, see [How Network Load Balancing Policies Work](https://docs.cloud.oracle.com/iaas/Content/Balance/Reference/lbpolicies.htm).  Example: `3`
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (GetBackendSetsBackendSetCollectionItemBackendArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackendSetsBackendSetCollectionItemBackend)(nil)).Elem()
}

func (i GetBackendSetsBackendSetCollectionItemBackendArgs) ToGetBackendSetsBackendSetCollectionItemBackendOutput() GetBackendSetsBackendSetCollectionItemBackendOutput {
	return i.ToGetBackendSetsBackendSetCollectionItemBackendOutputWithContext(context.Background())
}

func (i GetBackendSetsBackendSetCollectionItemBackendArgs) ToGetBackendSetsBackendSetCollectionItemBackendOutputWithContext(ctx context.Context) GetBackendSetsBackendSetCollectionItemBackendOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackendSetsBackendSetCollectionItemBackendOutput)
}

// GetBackendSetsBackendSetCollectionItemBackendArrayInput is an input type that accepts GetBackendSetsBackendSetCollectionItemBackendArray and GetBackendSetsBackendSetCollectionItemBackendArrayOutput values.
// You can construct a concrete instance of `GetBackendSetsBackendSetCollectionItemBackendArrayInput` via:
//
//	GetBackendSetsBackendSetCollectionItemBackendArray{ GetBackendSetsBackendSetCollectionItemBackendArgs{...} }
type GetBackendSetsBackendSetCollectionItemBackendArrayInput interface {
	pulumi.Input

	ToGetBackendSetsBackendSetCollectionItemBackendArrayOutput() GetBackendSetsBackendSetCollectionItemBackendArrayOutput
	ToGetBackendSetsBackendSetCollectionItemBackendArrayOutputWithContext(context.Context) GetBackendSetsBackendSetCollectionItemBackendArrayOutput
}

type GetBackendSetsBackendSetCollectionItemBackendArray []GetBackendSetsBackendSetCollectionItemBackendInput

func (GetBackendSetsBackendSetCollectionItemBackendArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackendSetsBackendSetCollectionItemBackend)(nil)).Elem()
}

func (i GetBackendSetsBackendSetCollectionItemBackendArray) ToGetBackendSetsBackendSetCollectionItemBackendArrayOutput() GetBackendSetsBackendSetCollectionItemBackendArrayOutput {
	return i.ToGetBackendSetsBackendSetCollectionItemBackendArrayOutputWithContext(context.Background())
}

func (i GetBackendSetsBackendSetCollectionItemBackendArray) ToGetBackendSetsBackendSetCollectionItemBackendArrayOutputWithContext(ctx context.Context) GetBackendSetsBackendSetCollectionItemBackendArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackendSetsBackendSetCollectionItemBackendArrayOutput)
}

type GetBackendSetsBackendSetCollectionItemBackendOutput struct{ *pulumi.OutputState }

func (GetBackendSetsBackendSetCollectionItemBackendOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackendSetsBackendSetCollectionItemBackend)(nil)).Elem()
}

func (o GetBackendSetsBackendSetCollectionItemBackendOutput) ToGetBackendSetsBackendSetCollectionItemBackendOutput() GetBackendSetsBackendSetCollectionItemBackendOutput {
	return o
}

func (o GetBackendSetsBackendSetCollectionItemBackendOutput) ToGetBackendSetsBackendSetCollectionItemBackendOutputWithContext(ctx context.Context) GetBackendSetsBackendSetCollectionItemBackendOutput {
	return o
}

// The IP address of the backend server. Example: `10.0.0.3`
func (o GetBackendSetsBackendSetCollectionItemBackendOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendSetsBackendSetCollectionItemBackend) string { return v.IpAddress }).(pulumi.StringOutput)
}

// Whether the network load balancer should treat this server as a backup unit. If `true`, then the network load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as "isBackup" fail the health check policy.  Example: `false`
func (o GetBackendSetsBackendSetCollectionItemBackendOutput) IsBackup() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBackendSetsBackendSetCollectionItemBackend) bool { return v.IsBackup }).(pulumi.BoolOutput)
}

// Whether the network load balancer should drain this server. Servers marked "isDrain" receive no  incoming traffic.  Example: `false`
func (o GetBackendSetsBackendSetCollectionItemBackendOutput) IsDrain() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBackendSetsBackendSetCollectionItemBackend) bool { return v.IsDrain }).(pulumi.BoolOutput)
}

// Whether the network load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`
func (o GetBackendSetsBackendSetCollectionItemBackendOutput) IsOffline() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBackendSetsBackendSetCollectionItemBackend) bool { return v.IsOffline }).(pulumi.BoolOutput)
}

// A user-friendly name for the backend set that must be unique and cannot be changed.
func (o GetBackendSetsBackendSetCollectionItemBackendOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendSetsBackendSetCollectionItemBackend) string { return v.Name }).(pulumi.StringOutput)
}

// The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
func (o GetBackendSetsBackendSetCollectionItemBackendOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackendSetsBackendSetCollectionItemBackend) int { return v.Port }).(pulumi.IntOutput)
}

// The IP OCID/Instance OCID associated with the backend server. Example: `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>`
func (o GetBackendSetsBackendSetCollectionItemBackendOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendSetsBackendSetCollectionItemBackend) string { return v.TargetId }).(pulumi.StringOutput)
}

// The network load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives three times the number of new connections as a server weighted '1'. For more information about load balancing policies, see [How Network Load Balancing Policies Work](https://docs.cloud.oracle.com/iaas/Content/Balance/Reference/lbpolicies.htm).  Example: `3`
func (o GetBackendSetsBackendSetCollectionItemBackendOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackendSetsBackendSetCollectionItemBackend) int { return v.Weight }).(pulumi.IntOutput)
}

type GetBackendSetsBackendSetCollectionItemBackendArrayOutput struct{ *pulumi.OutputState }

func (GetBackendSetsBackendSetCollectionItemBackendArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackendSetsBackendSetCollectionItemBackend)(nil)).Elem()
}

func (o GetBackendSetsBackendSetCollectionItemBackendArrayOutput) ToGetBackendSetsBackendSetCollectionItemBackendArrayOutput() GetBackendSetsBackendSetCollectionItemBackendArrayOutput {
	return o
}

func (o GetBackendSetsBackendSetCollectionItemBackendArrayOutput) ToGetBackendSetsBackendSetCollectionItemBackendArrayOutputWithContext(ctx context.Context) GetBackendSetsBackendSetCollectionItemBackendArrayOutput {
	return o
}

func (o GetBackendSetsBackendSetCollectionItemBackendArrayOutput) Index(i pulumi.IntInput) GetBackendSetsBackendSetCollectionItemBackendOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackendSetsBackendSetCollectionItemBackend {
		return vs[0].([]GetBackendSetsBackendSetCollectionItemBackend)[vs[1].(int)]
	}).(GetBackendSetsBackendSetCollectionItemBackendOutput)
}

type GetBackendSetsBackendSetCollectionItemHealthChecker struct {
	// DNS healthcheck configurations.
	Dns []GetBackendSetsBackendSetCollectionItemHealthCheckerDn `pulumi:"dns"`
	// The interval between health checks, in milliseconds. The default value is 10000 (10 seconds).  Example: `10000`
	IntervalInMillis int `pulumi:"intervalInMillis"`
	// The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
	Port int `pulumi:"port"`
	// The protocol the health check must use; either HTTP, HTTPS, UDP, TCP or DNS.  Example: `HTTP`
	Protocol string `pulumi:"protocol"`
	// Base64 encoded pattern to be sent as UDP or TCP health check probe.
	RequestData string `pulumi:"requestData"`
	// A regular expression for parsing the response body from the backend server.  Example: `^((?!false).|\s)*$`
	ResponseBodyRegex string `pulumi:"responseBodyRegex"`
	// Base64 encoded pattern to be validated as UDP or TCP health check probe response.
	ResponseData string `pulumi:"responseData"`
	// The number of retries to attempt before a backend server is considered "unhealthy". This number also applies when recovering a server to the "healthy" state. The default value is 3.  Example: `3`
	Retries int `pulumi:"retries"`
	// The status code a healthy backend server should return. If you configure the health check policy to use the HTTP protocol, then you can use common HTTP status codes such as "200".  Example: `200`
	ReturnCode int `pulumi:"returnCode"`
	// The maximum time, in milliseconds, to wait for a reply to a health check. A health check is successful only if a reply returns within this timeout period. The default value is 3000 (3 seconds).  Example: `3000`
	TimeoutInMillis int `pulumi:"timeoutInMillis"`
	// The path against which to run the health check.  Example: `/healthcheck`
	UrlPath string `pulumi:"urlPath"`
}

// GetBackendSetsBackendSetCollectionItemHealthCheckerInput is an input type that accepts GetBackendSetsBackendSetCollectionItemHealthCheckerArgs and GetBackendSetsBackendSetCollectionItemHealthCheckerOutput values.
// You can construct a concrete instance of `GetBackendSetsBackendSetCollectionItemHealthCheckerInput` via:
//
//	GetBackendSetsBackendSetCollectionItemHealthCheckerArgs{...}
type GetBackendSetsBackendSetCollectionItemHealthCheckerInput interface {
	pulumi.Input

	ToGetBackendSetsBackendSetCollectionItemHealthCheckerOutput() GetBackendSetsBackendSetCollectionItemHealthCheckerOutput
	ToGetBackendSetsBackendSetCollectionItemHealthCheckerOutputWithContext(context.Context) GetBackendSetsBackendSetCollectionItemHealthCheckerOutput
}

type GetBackendSetsBackendSetCollectionItemHealthCheckerArgs struct {
	// DNS healthcheck configurations.
	Dns GetBackendSetsBackendSetCollectionItemHealthCheckerDnArrayInput `pulumi:"dns"`
	// The interval between health checks, in milliseconds. The default value is 10000 (10 seconds).  Example: `10000`
	IntervalInMillis pulumi.IntInput `pulumi:"intervalInMillis"`
	// The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
	Port pulumi.IntInput `pulumi:"port"`
	// The protocol the health check must use; either HTTP, HTTPS, UDP, TCP or DNS.  Example: `HTTP`
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Base64 encoded pattern to be sent as UDP or TCP health check probe.
	RequestData pulumi.StringInput `pulumi:"requestData"`
	// A regular expression for parsing the response body from the backend server.  Example: `^((?!false).|\s)*$`
	ResponseBodyRegex pulumi.StringInput `pulumi:"responseBodyRegex"`
	// Base64 encoded pattern to be validated as UDP or TCP health check probe response.
	ResponseData pulumi.StringInput `pulumi:"responseData"`
	// The number of retries to attempt before a backend server is considered "unhealthy". This number also applies when recovering a server to the "healthy" state. The default value is 3.  Example: `3`
	Retries pulumi.IntInput `pulumi:"retries"`
	// The status code a healthy backend server should return. If you configure the health check policy to use the HTTP protocol, then you can use common HTTP status codes such as "200".  Example: `200`
	ReturnCode pulumi.IntInput `pulumi:"returnCode"`
	// The maximum time, in milliseconds, to wait for a reply to a health check. A health check is successful only if a reply returns within this timeout period. The default value is 3000 (3 seconds).  Example: `3000`
	TimeoutInMillis pulumi.IntInput `pulumi:"timeoutInMillis"`
	// The path against which to run the health check.  Example: `/healthcheck`
	UrlPath pulumi.StringInput `pulumi:"urlPath"`
}

func (GetBackendSetsBackendSetCollectionItemHealthCheckerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackendSetsBackendSetCollectionItemHealthChecker)(nil)).Elem()
}

func (i GetBackendSetsBackendSetCollectionItemHealthCheckerArgs) ToGetBackendSetsBackendSetCollectionItemHealthCheckerOutput() GetBackendSetsBackendSetCollectionItemHealthCheckerOutput {
	return i.ToGetBackendSetsBackendSetCollectionItemHealthCheckerOutputWithContext(context.Background())
}

func (i GetBackendSetsBackendSetCollectionItemHealthCheckerArgs) ToGetBackendSetsBackendSetCollectionItemHealthCheckerOutputWithContext(ctx context.Context) GetBackendSetsBackendSetCollectionItemHealthCheckerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackendSetsBackendSetCollectionItemHealthCheckerOutput)
}

// GetBackendSetsBackendSetCollectionItemHealthCheckerArrayInput is an input type that accepts GetBackendSetsBackendSetCollectionItemHealthCheckerArray and GetBackendSetsBackendSetCollectionItemHealthCheckerArrayOutput values.
// You can construct a concrete instance of `GetBackendSetsBackendSetCollectionItemHealthCheckerArrayInput` via:
//
//	GetBackendSetsBackendSetCollectionItemHealthCheckerArray{ GetBackendSetsBackendSetCollectionItemHealthCheckerArgs{...} }
type GetBackendSetsBackendSetCollectionItemHealthCheckerArrayInput interface {
	pulumi.Input

	ToGetBackendSetsBackendSetCollectionItemHealthCheckerArrayOutput() GetBackendSetsBackendSetCollectionItemHealthCheckerArrayOutput
	ToGetBackendSetsBackendSetCollectionItemHealthCheckerArrayOutputWithContext(context.Context) GetBackendSetsBackendSetCollectionItemHealthCheckerArrayOutput
}

type GetBackendSetsBackendSetCollectionItemHealthCheckerArray []GetBackendSetsBackendSetCollectionItemHealthCheckerInput

func (GetBackendSetsBackendSetCollectionItemHealthCheckerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackendSetsBackendSetCollectionItemHealthChecker)(nil)).Elem()
}

func (i GetBackendSetsBackendSetCollectionItemHealthCheckerArray) ToGetBackendSetsBackendSetCollectionItemHealthCheckerArrayOutput() GetBackendSetsBackendSetCollectionItemHealthCheckerArrayOutput {
	return i.ToGetBackendSetsBackendSetCollectionItemHealthCheckerArrayOutputWithContext(context.Background())
}

func (i GetBackendSetsBackendSetCollectionItemHealthCheckerArray) ToGetBackendSetsBackendSetCollectionItemHealthCheckerArrayOutputWithContext(ctx context.Context) GetBackendSetsBackendSetCollectionItemHealthCheckerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackendSetsBackendSetCollectionItemHealthCheckerArrayOutput)
}

type GetBackendSetsBackendSetCollectionItemHealthCheckerOutput struct{ *pulumi.OutputState }

func (GetBackendSetsBackendSetCollectionItemHealthCheckerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackendSetsBackendSetCollectionItemHealthChecker)(nil)).Elem()
}

func (o GetBackendSetsBackendSetCollectionItemHealthCheckerOutput) ToGetBackendSetsBackendSetCollectionItemHealthCheckerOutput() GetBackendSetsBackendSetCollectionItemHealthCheckerOutput {
	return o
}

func (o GetBackendSetsBackendSetCollectionItemHealthCheckerOutput) ToGetBackendSetsBackendSetCollectionItemHealthCheckerOutputWithContext(ctx context.Context) GetBackendSetsBackendSetCollectionItemHealthCheckerOutput {
	return o
}

// DNS healthcheck configurations.
func (o GetBackendSetsBackendSetCollectionItemHealthCheckerOutput) Dns() GetBackendSetsBackendSetCollectionItemHealthCheckerDnArrayOutput {
	return o.ApplyT(func(v GetBackendSetsBackendSetCollectionItemHealthChecker) []GetBackendSetsBackendSetCollectionItemHealthCheckerDn {
		return v.Dns
	}).(GetBackendSetsBackendSetCollectionItemHealthCheckerDnArrayOutput)
}

// The interval between health checks, in milliseconds. The default value is 10000 (10 seconds).  Example: `10000`
func (o GetBackendSetsBackendSetCollectionItemHealthCheckerOutput) IntervalInMillis() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackendSetsBackendSetCollectionItemHealthChecker) int { return v.IntervalInMillis }).(pulumi.IntOutput)
}

// The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
func (o GetBackendSetsBackendSetCollectionItemHealthCheckerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackendSetsBackendSetCollectionItemHealthChecker) int { return v.Port }).(pulumi.IntOutput)
}

// The protocol the health check must use; either HTTP, HTTPS, UDP, TCP or DNS.  Example: `HTTP`
func (o GetBackendSetsBackendSetCollectionItemHealthCheckerOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendSetsBackendSetCollectionItemHealthChecker) string { return v.Protocol }).(pulumi.StringOutput)
}

// Base64 encoded pattern to be sent as UDP or TCP health check probe.
func (o GetBackendSetsBackendSetCollectionItemHealthCheckerOutput) RequestData() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendSetsBackendSetCollectionItemHealthChecker) string { return v.RequestData }).(pulumi.StringOutput)
}

// A regular expression for parsing the response body from the backend server.  Example: `^((?!false).|\s)*$`
func (o GetBackendSetsBackendSetCollectionItemHealthCheckerOutput) ResponseBodyRegex() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendSetsBackendSetCollectionItemHealthChecker) string { return v.ResponseBodyRegex }).(pulumi.StringOutput)
}

// Base64 encoded pattern to be validated as UDP or TCP health check probe response.
func (o GetBackendSetsBackendSetCollectionItemHealthCheckerOutput) ResponseData() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendSetsBackendSetCollectionItemHealthChecker) string { return v.ResponseData }).(pulumi.StringOutput)
}

// The number of retries to attempt before a backend server is considered "unhealthy". This number also applies when recovering a server to the "healthy" state. The default value is 3.  Example: `3`
func (o GetBackendSetsBackendSetCollectionItemHealthCheckerOutput) Retries() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackendSetsBackendSetCollectionItemHealthChecker) int { return v.Retries }).(pulumi.IntOutput)
}

// The status code a healthy backend server should return. If you configure the health check policy to use the HTTP protocol, then you can use common HTTP status codes such as "200".  Example: `200`
func (o GetBackendSetsBackendSetCollectionItemHealthCheckerOutput) ReturnCode() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackendSetsBackendSetCollectionItemHealthChecker) int { return v.ReturnCode }).(pulumi.IntOutput)
}

// The maximum time, in milliseconds, to wait for a reply to a health check. A health check is successful only if a reply returns within this timeout period. The default value is 3000 (3 seconds).  Example: `3000`
func (o GetBackendSetsBackendSetCollectionItemHealthCheckerOutput) TimeoutInMillis() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackendSetsBackendSetCollectionItemHealthChecker) int { return v.TimeoutInMillis }).(pulumi.IntOutput)
}

// The path against which to run the health check.  Example: `/healthcheck`
func (o GetBackendSetsBackendSetCollectionItemHealthCheckerOutput) UrlPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendSetsBackendSetCollectionItemHealthChecker) string { return v.UrlPath }).(pulumi.StringOutput)
}

type GetBackendSetsBackendSetCollectionItemHealthCheckerArrayOutput struct{ *pulumi.OutputState }

func (GetBackendSetsBackendSetCollectionItemHealthCheckerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackendSetsBackendSetCollectionItemHealthChecker)(nil)).Elem()
}

func (o GetBackendSetsBackendSetCollectionItemHealthCheckerArrayOutput) ToGetBackendSetsBackendSetCollectionItemHealthCheckerArrayOutput() GetBackendSetsBackendSetCollectionItemHealthCheckerArrayOutput {
	return o
}

func (o GetBackendSetsBackendSetCollectionItemHealthCheckerArrayOutput) ToGetBackendSetsBackendSetCollectionItemHealthCheckerArrayOutputWithContext(ctx context.Context) GetBackendSetsBackendSetCollectionItemHealthCheckerArrayOutput {
	return o
}

func (o GetBackendSetsBackendSetCollectionItemHealthCheckerArrayOutput) Index(i pulumi.IntInput) GetBackendSetsBackendSetCollectionItemHealthCheckerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackendSetsBackendSetCollectionItemHealthChecker {
		return vs[0].([]GetBackendSetsBackendSetCollectionItemHealthChecker)[vs[1].(int)]
	}).(GetBackendSetsBackendSetCollectionItemHealthCheckerOutput)
}

type GetBackendSetsBackendSetCollectionItemHealthCheckerDn struct {
	// The absolute fully-qualified domain name to perform periodic DNS queries. If not provided, an extra dot will be added at the end of a domain name during the query.
	DomainName string `pulumi:"domainName"`
	// The class the dns health check query to use; either IN or CH.  Example: `IN`
	QueryClass string `pulumi:"queryClass"`
	// The type the dns health check query to use; A, AAAA, TXT.  Example: `A`
	QueryType string `pulumi:"queryType"`
	// An array that represents accepetable RCODE values for DNS query response. Example: ["NOERROR", "NXDOMAIN"]
	Rcodes []string `pulumi:"rcodes"`
	// DNS transport protocol; either UDP or TCP.  Example: `UDP`
	TransportProtocol string `pulumi:"transportProtocol"`
}

// GetBackendSetsBackendSetCollectionItemHealthCheckerDnInput is an input type that accepts GetBackendSetsBackendSetCollectionItemHealthCheckerDnArgs and GetBackendSetsBackendSetCollectionItemHealthCheckerDnOutput values.
// You can construct a concrete instance of `GetBackendSetsBackendSetCollectionItemHealthCheckerDnInput` via:
//
//	GetBackendSetsBackendSetCollectionItemHealthCheckerDnArgs{...}
type GetBackendSetsBackendSetCollectionItemHealthCheckerDnInput interface {
	pulumi.Input

	ToGetBackendSetsBackendSetCollectionItemHealthCheckerDnOutput() GetBackendSetsBackendSetCollectionItemHealthCheckerDnOutput
	ToGetBackendSetsBackendSetCollectionItemHealthCheckerDnOutputWithContext(context.Context) GetBackendSetsBackendSetCollectionItemHealthCheckerDnOutput
}

type GetBackendSetsBackendSetCollectionItemHealthCheckerDnArgs struct {
	// The absolute fully-qualified domain name to perform periodic DNS queries. If not provided, an extra dot will be added at the end of a domain name during the query.
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// The class the dns health check query to use; either IN or CH.  Example: `IN`
	QueryClass pulumi.StringInput `pulumi:"queryClass"`
	// The type the dns health check query to use; A, AAAA, TXT.  Example: `A`
	QueryType pulumi.StringInput `pulumi:"queryType"`
	// An array that represents accepetable RCODE values for DNS query response. Example: ["NOERROR", "NXDOMAIN"]
	Rcodes pulumi.StringArrayInput `pulumi:"rcodes"`
	// DNS transport protocol; either UDP or TCP.  Example: `UDP`
	TransportProtocol pulumi.StringInput `pulumi:"transportProtocol"`
}

func (GetBackendSetsBackendSetCollectionItemHealthCheckerDnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackendSetsBackendSetCollectionItemHealthCheckerDn)(nil)).Elem()
}

func (i GetBackendSetsBackendSetCollectionItemHealthCheckerDnArgs) ToGetBackendSetsBackendSetCollectionItemHealthCheckerDnOutput() GetBackendSetsBackendSetCollectionItemHealthCheckerDnOutput {
	return i.ToGetBackendSetsBackendSetCollectionItemHealthCheckerDnOutputWithContext(context.Background())
}

func (i GetBackendSetsBackendSetCollectionItemHealthCheckerDnArgs) ToGetBackendSetsBackendSetCollectionItemHealthCheckerDnOutputWithContext(ctx context.Context) GetBackendSetsBackendSetCollectionItemHealthCheckerDnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackendSetsBackendSetCollectionItemHealthCheckerDnOutput)
}

// GetBackendSetsBackendSetCollectionItemHealthCheckerDnArrayInput is an input type that accepts GetBackendSetsBackendSetCollectionItemHealthCheckerDnArray and GetBackendSetsBackendSetCollectionItemHealthCheckerDnArrayOutput values.
// You can construct a concrete instance of `GetBackendSetsBackendSetCollectionItemHealthCheckerDnArrayInput` via:
//
//	GetBackendSetsBackendSetCollectionItemHealthCheckerDnArray{ GetBackendSetsBackendSetCollectionItemHealthCheckerDnArgs{...} }
type GetBackendSetsBackendSetCollectionItemHealthCheckerDnArrayInput interface {
	pulumi.Input

	ToGetBackendSetsBackendSetCollectionItemHealthCheckerDnArrayOutput() GetBackendSetsBackendSetCollectionItemHealthCheckerDnArrayOutput
	ToGetBackendSetsBackendSetCollectionItemHealthCheckerDnArrayOutputWithContext(context.Context) GetBackendSetsBackendSetCollectionItemHealthCheckerDnArrayOutput
}

type GetBackendSetsBackendSetCollectionItemHealthCheckerDnArray []GetBackendSetsBackendSetCollectionItemHealthCheckerDnInput

func (GetBackendSetsBackendSetCollectionItemHealthCheckerDnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackendSetsBackendSetCollectionItemHealthCheckerDn)(nil)).Elem()
}

func (i GetBackendSetsBackendSetCollectionItemHealthCheckerDnArray) ToGetBackendSetsBackendSetCollectionItemHealthCheckerDnArrayOutput() GetBackendSetsBackendSetCollectionItemHealthCheckerDnArrayOutput {
	return i.ToGetBackendSetsBackendSetCollectionItemHealthCheckerDnArrayOutputWithContext(context.Background())
}

func (i GetBackendSetsBackendSetCollectionItemHealthCheckerDnArray) ToGetBackendSetsBackendSetCollectionItemHealthCheckerDnArrayOutputWithContext(ctx context.Context) GetBackendSetsBackendSetCollectionItemHealthCheckerDnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackendSetsBackendSetCollectionItemHealthCheckerDnArrayOutput)
}

type GetBackendSetsBackendSetCollectionItemHealthCheckerDnOutput struct{ *pulumi.OutputState }

func (GetBackendSetsBackendSetCollectionItemHealthCheckerDnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackendSetsBackendSetCollectionItemHealthCheckerDn)(nil)).Elem()
}

func (o GetBackendSetsBackendSetCollectionItemHealthCheckerDnOutput) ToGetBackendSetsBackendSetCollectionItemHealthCheckerDnOutput() GetBackendSetsBackendSetCollectionItemHealthCheckerDnOutput {
	return o
}

func (o GetBackendSetsBackendSetCollectionItemHealthCheckerDnOutput) ToGetBackendSetsBackendSetCollectionItemHealthCheckerDnOutputWithContext(ctx context.Context) GetBackendSetsBackendSetCollectionItemHealthCheckerDnOutput {
	return o
}

// The absolute fully-qualified domain name to perform periodic DNS queries. If not provided, an extra dot will be added at the end of a domain name during the query.
func (o GetBackendSetsBackendSetCollectionItemHealthCheckerDnOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendSetsBackendSetCollectionItemHealthCheckerDn) string { return v.DomainName }).(pulumi.StringOutput)
}

// The class the dns health check query to use; either IN or CH.  Example: `IN`
func (o GetBackendSetsBackendSetCollectionItemHealthCheckerDnOutput) QueryClass() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendSetsBackendSetCollectionItemHealthCheckerDn) string { return v.QueryClass }).(pulumi.StringOutput)
}

// The type the dns health check query to use; A, AAAA, TXT.  Example: `A`
func (o GetBackendSetsBackendSetCollectionItemHealthCheckerDnOutput) QueryType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendSetsBackendSetCollectionItemHealthCheckerDn) string { return v.QueryType }).(pulumi.StringOutput)
}

// An array that represents accepetable RCODE values for DNS query response. Example: ["NOERROR", "NXDOMAIN"]
func (o GetBackendSetsBackendSetCollectionItemHealthCheckerDnOutput) Rcodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBackendSetsBackendSetCollectionItemHealthCheckerDn) []string { return v.Rcodes }).(pulumi.StringArrayOutput)
}

// DNS transport protocol; either UDP or TCP.  Example: `UDP`
func (o GetBackendSetsBackendSetCollectionItemHealthCheckerDnOutput) TransportProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendSetsBackendSetCollectionItemHealthCheckerDn) string { return v.TransportProtocol }).(pulumi.StringOutput)
}

type GetBackendSetsBackendSetCollectionItemHealthCheckerDnArrayOutput struct{ *pulumi.OutputState }

func (GetBackendSetsBackendSetCollectionItemHealthCheckerDnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackendSetsBackendSetCollectionItemHealthCheckerDn)(nil)).Elem()
}

func (o GetBackendSetsBackendSetCollectionItemHealthCheckerDnArrayOutput) ToGetBackendSetsBackendSetCollectionItemHealthCheckerDnArrayOutput() GetBackendSetsBackendSetCollectionItemHealthCheckerDnArrayOutput {
	return o
}

func (o GetBackendSetsBackendSetCollectionItemHealthCheckerDnArrayOutput) ToGetBackendSetsBackendSetCollectionItemHealthCheckerDnArrayOutputWithContext(ctx context.Context) GetBackendSetsBackendSetCollectionItemHealthCheckerDnArrayOutput {
	return o
}

func (o GetBackendSetsBackendSetCollectionItemHealthCheckerDnArrayOutput) Index(i pulumi.IntInput) GetBackendSetsBackendSetCollectionItemHealthCheckerDnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackendSetsBackendSetCollectionItemHealthCheckerDn {
		return vs[0].([]GetBackendSetsBackendSetCollectionItemHealthCheckerDn)[vs[1].(int)]
	}).(GetBackendSetsBackendSetCollectionItemHealthCheckerDnOutput)
}

type GetBackendSetsFilter struct {
	// A user-friendly name for the backend set that must be unique and cannot be changed.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetBackendSetsFilterInput is an input type that accepts GetBackendSetsFilterArgs and GetBackendSetsFilterOutput values.
// You can construct a concrete instance of `GetBackendSetsFilterInput` via:
//
//	GetBackendSetsFilterArgs{...}
type GetBackendSetsFilterInput interface {
	pulumi.Input

	ToGetBackendSetsFilterOutput() GetBackendSetsFilterOutput
	ToGetBackendSetsFilterOutputWithContext(context.Context) GetBackendSetsFilterOutput
}

type GetBackendSetsFilterArgs struct {
	// A user-friendly name for the backend set that must be unique and cannot be changed.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetBackendSetsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackendSetsFilter)(nil)).Elem()
}

func (i GetBackendSetsFilterArgs) ToGetBackendSetsFilterOutput() GetBackendSetsFilterOutput {
	return i.ToGetBackendSetsFilterOutputWithContext(context.Background())
}

func (i GetBackendSetsFilterArgs) ToGetBackendSetsFilterOutputWithContext(ctx context.Context) GetBackendSetsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackendSetsFilterOutput)
}

// GetBackendSetsFilterArrayInput is an input type that accepts GetBackendSetsFilterArray and GetBackendSetsFilterArrayOutput values.
// You can construct a concrete instance of `GetBackendSetsFilterArrayInput` via:
//
//	GetBackendSetsFilterArray{ GetBackendSetsFilterArgs{...} }
type GetBackendSetsFilterArrayInput interface {
	pulumi.Input

	ToGetBackendSetsFilterArrayOutput() GetBackendSetsFilterArrayOutput
	ToGetBackendSetsFilterArrayOutputWithContext(context.Context) GetBackendSetsFilterArrayOutput
}

type GetBackendSetsFilterArray []GetBackendSetsFilterInput

func (GetBackendSetsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackendSetsFilter)(nil)).Elem()
}

func (i GetBackendSetsFilterArray) ToGetBackendSetsFilterArrayOutput() GetBackendSetsFilterArrayOutput {
	return i.ToGetBackendSetsFilterArrayOutputWithContext(context.Background())
}

func (i GetBackendSetsFilterArray) ToGetBackendSetsFilterArrayOutputWithContext(ctx context.Context) GetBackendSetsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackendSetsFilterArrayOutput)
}

type GetBackendSetsFilterOutput struct{ *pulumi.OutputState }

func (GetBackendSetsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackendSetsFilter)(nil)).Elem()
}

func (o GetBackendSetsFilterOutput) ToGetBackendSetsFilterOutput() GetBackendSetsFilterOutput {
	return o
}

func (o GetBackendSetsFilterOutput) ToGetBackendSetsFilterOutputWithContext(ctx context.Context) GetBackendSetsFilterOutput {
	return o
}

// A user-friendly name for the backend set that must be unique and cannot be changed.
func (o GetBackendSetsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendSetsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetBackendSetsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetBackendSetsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetBackendSetsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBackendSetsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetBackendSetsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetBackendSetsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackendSetsFilter)(nil)).Elem()
}

func (o GetBackendSetsFilterArrayOutput) ToGetBackendSetsFilterArrayOutput() GetBackendSetsFilterArrayOutput {
	return o
}

func (o GetBackendSetsFilterArrayOutput) ToGetBackendSetsFilterArrayOutputWithContext(ctx context.Context) GetBackendSetsFilterArrayOutput {
	return o
}

func (o GetBackendSetsFilterArrayOutput) Index(i pulumi.IntInput) GetBackendSetsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackendSetsFilter {
		return vs[0].([]GetBackendSetsFilter)[vs[1].(int)]
	}).(GetBackendSetsFilterOutput)
}

type GetBackendsBackendCollection struct {
	Items []GetBackendsBackendCollectionItem `pulumi:"items"`
}

// GetBackendsBackendCollectionInput is an input type that accepts GetBackendsBackendCollectionArgs and GetBackendsBackendCollectionOutput values.
// You can construct a concrete instance of `GetBackendsBackendCollectionInput` via:
//
//	GetBackendsBackendCollectionArgs{...}
type GetBackendsBackendCollectionInput interface {
	pulumi.Input

	ToGetBackendsBackendCollectionOutput() GetBackendsBackendCollectionOutput
	ToGetBackendsBackendCollectionOutputWithContext(context.Context) GetBackendsBackendCollectionOutput
}

type GetBackendsBackendCollectionArgs struct {
	Items GetBackendsBackendCollectionItemArrayInput `pulumi:"items"`
}

func (GetBackendsBackendCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackendsBackendCollection)(nil)).Elem()
}

func (i GetBackendsBackendCollectionArgs) ToGetBackendsBackendCollectionOutput() GetBackendsBackendCollectionOutput {
	return i.ToGetBackendsBackendCollectionOutputWithContext(context.Background())
}

func (i GetBackendsBackendCollectionArgs) ToGetBackendsBackendCollectionOutputWithContext(ctx context.Context) GetBackendsBackendCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackendsBackendCollectionOutput)
}

// GetBackendsBackendCollectionArrayInput is an input type that accepts GetBackendsBackendCollectionArray and GetBackendsBackendCollectionArrayOutput values.
// You can construct a concrete instance of `GetBackendsBackendCollectionArrayInput` via:
//
//	GetBackendsBackendCollectionArray{ GetBackendsBackendCollectionArgs{...} }
type GetBackendsBackendCollectionArrayInput interface {
	pulumi.Input

	ToGetBackendsBackendCollectionArrayOutput() GetBackendsBackendCollectionArrayOutput
	ToGetBackendsBackendCollectionArrayOutputWithContext(context.Context) GetBackendsBackendCollectionArrayOutput
}

type GetBackendsBackendCollectionArray []GetBackendsBackendCollectionInput

func (GetBackendsBackendCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackendsBackendCollection)(nil)).Elem()
}

func (i GetBackendsBackendCollectionArray) ToGetBackendsBackendCollectionArrayOutput() GetBackendsBackendCollectionArrayOutput {
	return i.ToGetBackendsBackendCollectionArrayOutputWithContext(context.Background())
}

func (i GetBackendsBackendCollectionArray) ToGetBackendsBackendCollectionArrayOutputWithContext(ctx context.Context) GetBackendsBackendCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackendsBackendCollectionArrayOutput)
}

type GetBackendsBackendCollectionOutput struct{ *pulumi.OutputState }

func (GetBackendsBackendCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackendsBackendCollection)(nil)).Elem()
}

func (o GetBackendsBackendCollectionOutput) ToGetBackendsBackendCollectionOutput() GetBackendsBackendCollectionOutput {
	return o
}

func (o GetBackendsBackendCollectionOutput) ToGetBackendsBackendCollectionOutputWithContext(ctx context.Context) GetBackendsBackendCollectionOutput {
	return o
}

func (o GetBackendsBackendCollectionOutput) Items() GetBackendsBackendCollectionItemArrayOutput {
	return o.ApplyT(func(v GetBackendsBackendCollection) []GetBackendsBackendCollectionItem { return v.Items }).(GetBackendsBackendCollectionItemArrayOutput)
}

type GetBackendsBackendCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetBackendsBackendCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackendsBackendCollection)(nil)).Elem()
}

func (o GetBackendsBackendCollectionArrayOutput) ToGetBackendsBackendCollectionArrayOutput() GetBackendsBackendCollectionArrayOutput {
	return o
}

func (o GetBackendsBackendCollectionArrayOutput) ToGetBackendsBackendCollectionArrayOutputWithContext(ctx context.Context) GetBackendsBackendCollectionArrayOutput {
	return o
}

func (o GetBackendsBackendCollectionArrayOutput) Index(i pulumi.IntInput) GetBackendsBackendCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackendsBackendCollection {
		return vs[0].([]GetBackendsBackendCollection)[vs[1].(int)]
	}).(GetBackendsBackendCollectionOutput)
}

type GetBackendsBackendCollectionItem struct {
	// The name of the backend set associated with the backend servers.  Example: `exampleBackendSet`
	BackendSetName string `pulumi:"backendSetName"`
	Id             string `pulumi:"id"`
	// The IP address of the backend server. Example: `10.0.0.3`
	IpAddress string `pulumi:"ipAddress"`
	// Whether the network load balancer should treat this server as a backup unit. If `true`, then the network load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as "isBackup" fail the health check policy.  Example: `false`
	IsBackup bool `pulumi:"isBackup"`
	// Whether the network load balancer should drain this server. Servers marked "isDrain" receive no incoming traffic.  Example: `false`
	IsDrain bool `pulumi:"isDrain"`
	// Whether the network load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`
	IsOffline bool `pulumi:"isOffline"`
	// A read-only field showing the IP address/IP OCID and port that uniquely identify this backend server in the backend set.  Example: `10.0.0.3:8080`, or `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>:443` or `10.0.0.3:0`
	Name string `pulumi:"name"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer to update.
	NetworkLoadBalancerId string `pulumi:"networkLoadBalancerId"`
	// The communication port for the backend server.  Example: `8080`
	Port int `pulumi:"port"`
	// The IP OCID/Instance OCID associated with the backend server. Example: `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>`
	TargetId string `pulumi:"targetId"`
	// The network load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives three times the number of new connections as a server weighted '1'. For more information about load balancing policies, see [How Network Load Balancing Policies Work](https://docs.cloud.oracle.com/iaas/Content/NetworkLoadBalancer/introducton.htm#Policies).  Example: `3`
	Weight int `pulumi:"weight"`
}

// GetBackendsBackendCollectionItemInput is an input type that accepts GetBackendsBackendCollectionItemArgs and GetBackendsBackendCollectionItemOutput values.
// You can construct a concrete instance of `GetBackendsBackendCollectionItemInput` via:
//
//	GetBackendsBackendCollectionItemArgs{...}
type GetBackendsBackendCollectionItemInput interface {
	pulumi.Input

	ToGetBackendsBackendCollectionItemOutput() GetBackendsBackendCollectionItemOutput
	ToGetBackendsBackendCollectionItemOutputWithContext(context.Context) GetBackendsBackendCollectionItemOutput
}

type GetBackendsBackendCollectionItemArgs struct {
	// The name of the backend set associated with the backend servers.  Example: `exampleBackendSet`
	BackendSetName pulumi.StringInput `pulumi:"backendSetName"`
	Id             pulumi.StringInput `pulumi:"id"`
	// The IP address of the backend server. Example: `10.0.0.3`
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// Whether the network load balancer should treat this server as a backup unit. If `true`, then the network load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as "isBackup" fail the health check policy.  Example: `false`
	IsBackup pulumi.BoolInput `pulumi:"isBackup"`
	// Whether the network load balancer should drain this server. Servers marked "isDrain" receive no incoming traffic.  Example: `false`
	IsDrain pulumi.BoolInput `pulumi:"isDrain"`
	// Whether the network load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`
	IsOffline pulumi.BoolInput `pulumi:"isOffline"`
	// A read-only field showing the IP address/IP OCID and port that uniquely identify this backend server in the backend set.  Example: `10.0.0.3:8080`, or `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>:443` or `10.0.0.3:0`
	Name pulumi.StringInput `pulumi:"name"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer to update.
	NetworkLoadBalancerId pulumi.StringInput `pulumi:"networkLoadBalancerId"`
	// The communication port for the backend server.  Example: `8080`
	Port pulumi.IntInput `pulumi:"port"`
	// The IP OCID/Instance OCID associated with the backend server. Example: `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>`
	TargetId pulumi.StringInput `pulumi:"targetId"`
	// The network load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives three times the number of new connections as a server weighted '1'. For more information about load balancing policies, see [How Network Load Balancing Policies Work](https://docs.cloud.oracle.com/iaas/Content/NetworkLoadBalancer/introducton.htm#Policies).  Example: `3`
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (GetBackendsBackendCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackendsBackendCollectionItem)(nil)).Elem()
}

func (i GetBackendsBackendCollectionItemArgs) ToGetBackendsBackendCollectionItemOutput() GetBackendsBackendCollectionItemOutput {
	return i.ToGetBackendsBackendCollectionItemOutputWithContext(context.Background())
}

func (i GetBackendsBackendCollectionItemArgs) ToGetBackendsBackendCollectionItemOutputWithContext(ctx context.Context) GetBackendsBackendCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackendsBackendCollectionItemOutput)
}

// GetBackendsBackendCollectionItemArrayInput is an input type that accepts GetBackendsBackendCollectionItemArray and GetBackendsBackendCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetBackendsBackendCollectionItemArrayInput` via:
//
//	GetBackendsBackendCollectionItemArray{ GetBackendsBackendCollectionItemArgs{...} }
type GetBackendsBackendCollectionItemArrayInput interface {
	pulumi.Input

	ToGetBackendsBackendCollectionItemArrayOutput() GetBackendsBackendCollectionItemArrayOutput
	ToGetBackendsBackendCollectionItemArrayOutputWithContext(context.Context) GetBackendsBackendCollectionItemArrayOutput
}

type GetBackendsBackendCollectionItemArray []GetBackendsBackendCollectionItemInput

func (GetBackendsBackendCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackendsBackendCollectionItem)(nil)).Elem()
}

func (i GetBackendsBackendCollectionItemArray) ToGetBackendsBackendCollectionItemArrayOutput() GetBackendsBackendCollectionItemArrayOutput {
	return i.ToGetBackendsBackendCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetBackendsBackendCollectionItemArray) ToGetBackendsBackendCollectionItemArrayOutputWithContext(ctx context.Context) GetBackendsBackendCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackendsBackendCollectionItemArrayOutput)
}

type GetBackendsBackendCollectionItemOutput struct{ *pulumi.OutputState }

func (GetBackendsBackendCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackendsBackendCollectionItem)(nil)).Elem()
}

func (o GetBackendsBackendCollectionItemOutput) ToGetBackendsBackendCollectionItemOutput() GetBackendsBackendCollectionItemOutput {
	return o
}

func (o GetBackendsBackendCollectionItemOutput) ToGetBackendsBackendCollectionItemOutputWithContext(ctx context.Context) GetBackendsBackendCollectionItemOutput {
	return o
}

// The name of the backend set associated with the backend servers.  Example: `exampleBackendSet`
func (o GetBackendsBackendCollectionItemOutput) BackendSetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendsBackendCollectionItem) string { return v.BackendSetName }).(pulumi.StringOutput)
}

func (o GetBackendsBackendCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendsBackendCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// The IP address of the backend server. Example: `10.0.0.3`
func (o GetBackendsBackendCollectionItemOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendsBackendCollectionItem) string { return v.IpAddress }).(pulumi.StringOutput)
}

// Whether the network load balancer should treat this server as a backup unit. If `true`, then the network load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as "isBackup" fail the health check policy.  Example: `false`
func (o GetBackendsBackendCollectionItemOutput) IsBackup() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBackendsBackendCollectionItem) bool { return v.IsBackup }).(pulumi.BoolOutput)
}

// Whether the network load balancer should drain this server. Servers marked "isDrain" receive no incoming traffic.  Example: `false`
func (o GetBackendsBackendCollectionItemOutput) IsDrain() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBackendsBackendCollectionItem) bool { return v.IsDrain }).(pulumi.BoolOutput)
}

// Whether the network load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`
func (o GetBackendsBackendCollectionItemOutput) IsOffline() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBackendsBackendCollectionItem) bool { return v.IsOffline }).(pulumi.BoolOutput)
}

// A read-only field showing the IP address/IP OCID and port that uniquely identify this backend server in the backend set.  Example: `10.0.0.3:8080`, or `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>:443` or `10.0.0.3:0`
func (o GetBackendsBackendCollectionItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendsBackendCollectionItem) string { return v.Name }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer to update.
func (o GetBackendsBackendCollectionItemOutput) NetworkLoadBalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendsBackendCollectionItem) string { return v.NetworkLoadBalancerId }).(pulumi.StringOutput)
}

// The communication port for the backend server.  Example: `8080`
func (o GetBackendsBackendCollectionItemOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackendsBackendCollectionItem) int { return v.Port }).(pulumi.IntOutput)
}

// The IP OCID/Instance OCID associated with the backend server. Example: `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>`
func (o GetBackendsBackendCollectionItemOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendsBackendCollectionItem) string { return v.TargetId }).(pulumi.StringOutput)
}

// The network load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives three times the number of new connections as a server weighted '1'. For more information about load balancing policies, see [How Network Load Balancing Policies Work](https://docs.cloud.oracle.com/iaas/Content/NetworkLoadBalancer/introducton.htm#Policies).  Example: `3`
func (o GetBackendsBackendCollectionItemOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackendsBackendCollectionItem) int { return v.Weight }).(pulumi.IntOutput)
}

type GetBackendsBackendCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetBackendsBackendCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackendsBackendCollectionItem)(nil)).Elem()
}

func (o GetBackendsBackendCollectionItemArrayOutput) ToGetBackendsBackendCollectionItemArrayOutput() GetBackendsBackendCollectionItemArrayOutput {
	return o
}

func (o GetBackendsBackendCollectionItemArrayOutput) ToGetBackendsBackendCollectionItemArrayOutputWithContext(ctx context.Context) GetBackendsBackendCollectionItemArrayOutput {
	return o
}

func (o GetBackendsBackendCollectionItemArrayOutput) Index(i pulumi.IntInput) GetBackendsBackendCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackendsBackendCollectionItem {
		return vs[0].([]GetBackendsBackendCollectionItem)[vs[1].(int)]
	}).(GetBackendsBackendCollectionItemOutput)
}

type GetBackendsFilter struct {
	// A read-only field showing the IP address/IP OCID and port that uniquely identify this backend server in the backend set.  Example: `10.0.0.3:8080`, or `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>:443` or `10.0.0.3:0`
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetBackendsFilterInput is an input type that accepts GetBackendsFilterArgs and GetBackendsFilterOutput values.
// You can construct a concrete instance of `GetBackendsFilterInput` via:
//
//	GetBackendsFilterArgs{...}
type GetBackendsFilterInput interface {
	pulumi.Input

	ToGetBackendsFilterOutput() GetBackendsFilterOutput
	ToGetBackendsFilterOutputWithContext(context.Context) GetBackendsFilterOutput
}

type GetBackendsFilterArgs struct {
	// A read-only field showing the IP address/IP OCID and port that uniquely identify this backend server in the backend set.  Example: `10.0.0.3:8080`, or `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>:443` or `10.0.0.3:0`
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetBackendsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackendsFilter)(nil)).Elem()
}

func (i GetBackendsFilterArgs) ToGetBackendsFilterOutput() GetBackendsFilterOutput {
	return i.ToGetBackendsFilterOutputWithContext(context.Background())
}

func (i GetBackendsFilterArgs) ToGetBackendsFilterOutputWithContext(ctx context.Context) GetBackendsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackendsFilterOutput)
}

// GetBackendsFilterArrayInput is an input type that accepts GetBackendsFilterArray and GetBackendsFilterArrayOutput values.
// You can construct a concrete instance of `GetBackendsFilterArrayInput` via:
//
//	GetBackendsFilterArray{ GetBackendsFilterArgs{...} }
type GetBackendsFilterArrayInput interface {
	pulumi.Input

	ToGetBackendsFilterArrayOutput() GetBackendsFilterArrayOutput
	ToGetBackendsFilterArrayOutputWithContext(context.Context) GetBackendsFilterArrayOutput
}

type GetBackendsFilterArray []GetBackendsFilterInput

func (GetBackendsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackendsFilter)(nil)).Elem()
}

func (i GetBackendsFilterArray) ToGetBackendsFilterArrayOutput() GetBackendsFilterArrayOutput {
	return i.ToGetBackendsFilterArrayOutputWithContext(context.Background())
}

func (i GetBackendsFilterArray) ToGetBackendsFilterArrayOutputWithContext(ctx context.Context) GetBackendsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackendsFilterArrayOutput)
}

type GetBackendsFilterOutput struct{ *pulumi.OutputState }

func (GetBackendsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackendsFilter)(nil)).Elem()
}

func (o GetBackendsFilterOutput) ToGetBackendsFilterOutput() GetBackendsFilterOutput {
	return o
}

func (o GetBackendsFilterOutput) ToGetBackendsFilterOutputWithContext(ctx context.Context) GetBackendsFilterOutput {
	return o
}

// A read-only field showing the IP address/IP OCID and port that uniquely identify this backend server in the backend set.  Example: `10.0.0.3:8080`, or `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>:443` or `10.0.0.3:0`
func (o GetBackendsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetBackendsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetBackendsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetBackendsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBackendsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetBackendsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetBackendsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackendsFilter)(nil)).Elem()
}

func (o GetBackendsFilterArrayOutput) ToGetBackendsFilterArrayOutput() GetBackendsFilterArrayOutput {
	return o
}

func (o GetBackendsFilterArrayOutput) ToGetBackendsFilterArrayOutputWithContext(ctx context.Context) GetBackendsFilterArrayOutput {
	return o
}

func (o GetBackendsFilterArrayOutput) Index(i pulumi.IntInput) GetBackendsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackendsFilter {
		return vs[0].([]GetBackendsFilter)[vs[1].(int)]
	}).(GetBackendsFilterOutput)
}

type GetListenersFilter struct {
	// A friendly name for the listener. It must be unique and it cannot be changed.  Example: `exampleListener`
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetListenersFilterInput is an input type that accepts GetListenersFilterArgs and GetListenersFilterOutput values.
// You can construct a concrete instance of `GetListenersFilterInput` via:
//
//	GetListenersFilterArgs{...}
type GetListenersFilterInput interface {
	pulumi.Input

	ToGetListenersFilterOutput() GetListenersFilterOutput
	ToGetListenersFilterOutputWithContext(context.Context) GetListenersFilterOutput
}

type GetListenersFilterArgs struct {
	// A friendly name for the listener. It must be unique and it cannot be changed.  Example: `exampleListener`
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetListenersFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenersFilter)(nil)).Elem()
}

func (i GetListenersFilterArgs) ToGetListenersFilterOutput() GetListenersFilterOutput {
	return i.ToGetListenersFilterOutputWithContext(context.Background())
}

func (i GetListenersFilterArgs) ToGetListenersFilterOutputWithContext(ctx context.Context) GetListenersFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenersFilterOutput)
}

// GetListenersFilterArrayInput is an input type that accepts GetListenersFilterArray and GetListenersFilterArrayOutput values.
// You can construct a concrete instance of `GetListenersFilterArrayInput` via:
//
//	GetListenersFilterArray{ GetListenersFilterArgs{...} }
type GetListenersFilterArrayInput interface {
	pulumi.Input

	ToGetListenersFilterArrayOutput() GetListenersFilterArrayOutput
	ToGetListenersFilterArrayOutputWithContext(context.Context) GetListenersFilterArrayOutput
}

type GetListenersFilterArray []GetListenersFilterInput

func (GetListenersFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenersFilter)(nil)).Elem()
}

func (i GetListenersFilterArray) ToGetListenersFilterArrayOutput() GetListenersFilterArrayOutput {
	return i.ToGetListenersFilterArrayOutputWithContext(context.Background())
}

func (i GetListenersFilterArray) ToGetListenersFilterArrayOutputWithContext(ctx context.Context) GetListenersFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenersFilterArrayOutput)
}

type GetListenersFilterOutput struct{ *pulumi.OutputState }

func (GetListenersFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenersFilter)(nil)).Elem()
}

func (o GetListenersFilterOutput) ToGetListenersFilterOutput() GetListenersFilterOutput {
	return o
}

func (o GetListenersFilterOutput) ToGetListenersFilterOutputWithContext(ctx context.Context) GetListenersFilterOutput {
	return o
}

// A friendly name for the listener. It must be unique and it cannot be changed.  Example: `exampleListener`
func (o GetListenersFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetListenersFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetListenersFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetListenersFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetListenersFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetListenersFilterArrayOutput struct{ *pulumi.OutputState }

func (GetListenersFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenersFilter)(nil)).Elem()
}

func (o GetListenersFilterArrayOutput) ToGetListenersFilterArrayOutput() GetListenersFilterArrayOutput {
	return o
}

func (o GetListenersFilterArrayOutput) ToGetListenersFilterArrayOutputWithContext(ctx context.Context) GetListenersFilterArrayOutput {
	return o
}

func (o GetListenersFilterArrayOutput) Index(i pulumi.IntInput) GetListenersFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListenersFilter {
		return vs[0].([]GetListenersFilter)[vs[1].(int)]
	}).(GetListenersFilterOutput)
}

type GetListenersListenerCollection struct {
	Items []GetListenersListenerCollectionItem `pulumi:"items"`
}

// GetListenersListenerCollectionInput is an input type that accepts GetListenersListenerCollectionArgs and GetListenersListenerCollectionOutput values.
// You can construct a concrete instance of `GetListenersListenerCollectionInput` via:
//
//	GetListenersListenerCollectionArgs{...}
type GetListenersListenerCollectionInput interface {
	pulumi.Input

	ToGetListenersListenerCollectionOutput() GetListenersListenerCollectionOutput
	ToGetListenersListenerCollectionOutputWithContext(context.Context) GetListenersListenerCollectionOutput
}

type GetListenersListenerCollectionArgs struct {
	Items GetListenersListenerCollectionItemArrayInput `pulumi:"items"`
}

func (GetListenersListenerCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenersListenerCollection)(nil)).Elem()
}

func (i GetListenersListenerCollectionArgs) ToGetListenersListenerCollectionOutput() GetListenersListenerCollectionOutput {
	return i.ToGetListenersListenerCollectionOutputWithContext(context.Background())
}

func (i GetListenersListenerCollectionArgs) ToGetListenersListenerCollectionOutputWithContext(ctx context.Context) GetListenersListenerCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenersListenerCollectionOutput)
}

// GetListenersListenerCollectionArrayInput is an input type that accepts GetListenersListenerCollectionArray and GetListenersListenerCollectionArrayOutput values.
// You can construct a concrete instance of `GetListenersListenerCollectionArrayInput` via:
//
//	GetListenersListenerCollectionArray{ GetListenersListenerCollectionArgs{...} }
type GetListenersListenerCollectionArrayInput interface {
	pulumi.Input

	ToGetListenersListenerCollectionArrayOutput() GetListenersListenerCollectionArrayOutput
	ToGetListenersListenerCollectionArrayOutputWithContext(context.Context) GetListenersListenerCollectionArrayOutput
}

type GetListenersListenerCollectionArray []GetListenersListenerCollectionInput

func (GetListenersListenerCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenersListenerCollection)(nil)).Elem()
}

func (i GetListenersListenerCollectionArray) ToGetListenersListenerCollectionArrayOutput() GetListenersListenerCollectionArrayOutput {
	return i.ToGetListenersListenerCollectionArrayOutputWithContext(context.Background())
}

func (i GetListenersListenerCollectionArray) ToGetListenersListenerCollectionArrayOutputWithContext(ctx context.Context) GetListenersListenerCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenersListenerCollectionArrayOutput)
}

type GetListenersListenerCollectionOutput struct{ *pulumi.OutputState }

func (GetListenersListenerCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenersListenerCollection)(nil)).Elem()
}

func (o GetListenersListenerCollectionOutput) ToGetListenersListenerCollectionOutput() GetListenersListenerCollectionOutput {
	return o
}

func (o GetListenersListenerCollectionOutput) ToGetListenersListenerCollectionOutputWithContext(ctx context.Context) GetListenersListenerCollectionOutput {
	return o
}

func (o GetListenersListenerCollectionOutput) Items() GetListenersListenerCollectionItemArrayOutput {
	return o.ApplyT(func(v GetListenersListenerCollection) []GetListenersListenerCollectionItem { return v.Items }).(GetListenersListenerCollectionItemArrayOutput)
}

type GetListenersListenerCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetListenersListenerCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenersListenerCollection)(nil)).Elem()
}

func (o GetListenersListenerCollectionArrayOutput) ToGetListenersListenerCollectionArrayOutput() GetListenersListenerCollectionArrayOutput {
	return o
}

func (o GetListenersListenerCollectionArrayOutput) ToGetListenersListenerCollectionArrayOutputWithContext(ctx context.Context) GetListenersListenerCollectionArrayOutput {
	return o
}

func (o GetListenersListenerCollectionArrayOutput) Index(i pulumi.IntInput) GetListenersListenerCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListenersListenerCollection {
		return vs[0].([]GetListenersListenerCollection)[vs[1].(int)]
	}).(GetListenersListenerCollectionOutput)
}

type GetListenersListenerCollectionItem struct {
	// The name of the associated backend set.  Example: `exampleBackendSet`
	DefaultBackendSetName string `pulumi:"defaultBackendSetName"`
	Id                    string `pulumi:"id"`
	// IP version associated with the listener.
	IpVersion string `pulumi:"ipVersion"`
	// Property to enable/disable PPv2 feature for this listener.
	IsPpv2enabled bool `pulumi:"isPpv2enabled"`
	// A friendly name for the listener. It must be unique and it cannot be changed.  Example: `exampleListener`
	Name string `pulumi:"name"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer to update.
	NetworkLoadBalancerId string `pulumi:"networkLoadBalancerId"`
	// The communication port for the listener.  Example: `80`
	Port int `pulumi:"port"`
	// The protocol on which the listener accepts connection requests. For public network load balancers, ANY protocol refers to TCP/UDP with the wildcard port. For private network load balancers, ANY protocol refers to TCP/UDP/ICMP (note that ICMP requires isPreserveSourceDestination to be set to true). "ListNetworkLoadBalancersProtocols" API is deprecated and it will not return the updated values. Use the allowed values for the protocol instead.  Example: `TCP`
	Protocol string `pulumi:"protocol"`
}

// GetListenersListenerCollectionItemInput is an input type that accepts GetListenersListenerCollectionItemArgs and GetListenersListenerCollectionItemOutput values.
// You can construct a concrete instance of `GetListenersListenerCollectionItemInput` via:
//
//	GetListenersListenerCollectionItemArgs{...}
type GetListenersListenerCollectionItemInput interface {
	pulumi.Input

	ToGetListenersListenerCollectionItemOutput() GetListenersListenerCollectionItemOutput
	ToGetListenersListenerCollectionItemOutputWithContext(context.Context) GetListenersListenerCollectionItemOutput
}

type GetListenersListenerCollectionItemArgs struct {
	// The name of the associated backend set.  Example: `exampleBackendSet`
	DefaultBackendSetName pulumi.StringInput `pulumi:"defaultBackendSetName"`
	Id                    pulumi.StringInput `pulumi:"id"`
	// IP version associated with the listener.
	IpVersion pulumi.StringInput `pulumi:"ipVersion"`
	// Property to enable/disable PPv2 feature for this listener.
	IsPpv2enabled pulumi.BoolInput `pulumi:"isPpv2enabled"`
	// A friendly name for the listener. It must be unique and it cannot be changed.  Example: `exampleListener`
	Name pulumi.StringInput `pulumi:"name"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer to update.
	NetworkLoadBalancerId pulumi.StringInput `pulumi:"networkLoadBalancerId"`
	// The communication port for the listener.  Example: `80`
	Port pulumi.IntInput `pulumi:"port"`
	// The protocol on which the listener accepts connection requests. For public network load balancers, ANY protocol refers to TCP/UDP with the wildcard port. For private network load balancers, ANY protocol refers to TCP/UDP/ICMP (note that ICMP requires isPreserveSourceDestination to be set to true). "ListNetworkLoadBalancersProtocols" API is deprecated and it will not return the updated values. Use the allowed values for the protocol instead.  Example: `TCP`
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (GetListenersListenerCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenersListenerCollectionItem)(nil)).Elem()
}

func (i GetListenersListenerCollectionItemArgs) ToGetListenersListenerCollectionItemOutput() GetListenersListenerCollectionItemOutput {
	return i.ToGetListenersListenerCollectionItemOutputWithContext(context.Background())
}

func (i GetListenersListenerCollectionItemArgs) ToGetListenersListenerCollectionItemOutputWithContext(ctx context.Context) GetListenersListenerCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenersListenerCollectionItemOutput)
}

// GetListenersListenerCollectionItemArrayInput is an input type that accepts GetListenersListenerCollectionItemArray and GetListenersListenerCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetListenersListenerCollectionItemArrayInput` via:
//
//	GetListenersListenerCollectionItemArray{ GetListenersListenerCollectionItemArgs{...} }
type GetListenersListenerCollectionItemArrayInput interface {
	pulumi.Input

	ToGetListenersListenerCollectionItemArrayOutput() GetListenersListenerCollectionItemArrayOutput
	ToGetListenersListenerCollectionItemArrayOutputWithContext(context.Context) GetListenersListenerCollectionItemArrayOutput
}

type GetListenersListenerCollectionItemArray []GetListenersListenerCollectionItemInput

func (GetListenersListenerCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenersListenerCollectionItem)(nil)).Elem()
}

func (i GetListenersListenerCollectionItemArray) ToGetListenersListenerCollectionItemArrayOutput() GetListenersListenerCollectionItemArrayOutput {
	return i.ToGetListenersListenerCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetListenersListenerCollectionItemArray) ToGetListenersListenerCollectionItemArrayOutputWithContext(ctx context.Context) GetListenersListenerCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenersListenerCollectionItemArrayOutput)
}

type GetListenersListenerCollectionItemOutput struct{ *pulumi.OutputState }

func (GetListenersListenerCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenersListenerCollectionItem)(nil)).Elem()
}

func (o GetListenersListenerCollectionItemOutput) ToGetListenersListenerCollectionItemOutput() GetListenersListenerCollectionItemOutput {
	return o
}

func (o GetListenersListenerCollectionItemOutput) ToGetListenersListenerCollectionItemOutputWithContext(ctx context.Context) GetListenersListenerCollectionItemOutput {
	return o
}

// The name of the associated backend set.  Example: `exampleBackendSet`
func (o GetListenersListenerCollectionItemOutput) DefaultBackendSetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListenerCollectionItem) string { return v.DefaultBackendSetName }).(pulumi.StringOutput)
}

func (o GetListenersListenerCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListenerCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// IP version associated with the listener.
func (o GetListenersListenerCollectionItemOutput) IpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListenerCollectionItem) string { return v.IpVersion }).(pulumi.StringOutput)
}

// Property to enable/disable PPv2 feature for this listener.
func (o GetListenersListenerCollectionItemOutput) IsPpv2enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetListenersListenerCollectionItem) bool { return v.IsPpv2enabled }).(pulumi.BoolOutput)
}

// A friendly name for the listener. It must be unique and it cannot be changed.  Example: `exampleListener`
func (o GetListenersListenerCollectionItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListenerCollectionItem) string { return v.Name }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer to update.
func (o GetListenersListenerCollectionItemOutput) NetworkLoadBalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListenerCollectionItem) string { return v.NetworkLoadBalancerId }).(pulumi.StringOutput)
}

// The communication port for the listener.  Example: `80`
func (o GetListenersListenerCollectionItemOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenersListenerCollectionItem) int { return v.Port }).(pulumi.IntOutput)
}

// The protocol on which the listener accepts connection requests. For public network load balancers, ANY protocol refers to TCP/UDP with the wildcard port. For private network load balancers, ANY protocol refers to TCP/UDP/ICMP (note that ICMP requires isPreserveSourceDestination to be set to true). "ListNetworkLoadBalancersProtocols" API is deprecated and it will not return the updated values. Use the allowed values for the protocol instead.  Example: `TCP`
func (o GetListenersListenerCollectionItemOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListenerCollectionItem) string { return v.Protocol }).(pulumi.StringOutput)
}

type GetListenersListenerCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetListenersListenerCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenersListenerCollectionItem)(nil)).Elem()
}

func (o GetListenersListenerCollectionItemArrayOutput) ToGetListenersListenerCollectionItemArrayOutput() GetListenersListenerCollectionItemArrayOutput {
	return o
}

func (o GetListenersListenerCollectionItemArrayOutput) ToGetListenersListenerCollectionItemArrayOutputWithContext(ctx context.Context) GetListenersListenerCollectionItemArrayOutput {
	return o
}

func (o GetListenersListenerCollectionItemArrayOutput) Index(i pulumi.IntInput) GetListenersListenerCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListenersListenerCollectionItem {
		return vs[0].([]GetListenersListenerCollectionItem)[vs[1].(int)]
	}).(GetListenersListenerCollectionItemOutput)
}

type GetNetworkLoadBalancerIpAddress struct {
	// An IP address.  Example: `192.168.0.3`
	IpAddress string `pulumi:"ipAddress"`
	// IP version associated with the listener.
	IpVersion string `pulumi:"ipVersion"`
	// Whether the IP address is public or private.
	IsPublic bool `pulumi:"isPublic"`
	// An object representing a reserved IP address to be attached or that is already attached to a network load balancer.
	ReservedIps []GetNetworkLoadBalancerIpAddressReservedIp `pulumi:"reservedIps"`
}

// GetNetworkLoadBalancerIpAddressInput is an input type that accepts GetNetworkLoadBalancerIpAddressArgs and GetNetworkLoadBalancerIpAddressOutput values.
// You can construct a concrete instance of `GetNetworkLoadBalancerIpAddressInput` via:
//
//	GetNetworkLoadBalancerIpAddressArgs{...}
type GetNetworkLoadBalancerIpAddressInput interface {
	pulumi.Input

	ToGetNetworkLoadBalancerIpAddressOutput() GetNetworkLoadBalancerIpAddressOutput
	ToGetNetworkLoadBalancerIpAddressOutputWithContext(context.Context) GetNetworkLoadBalancerIpAddressOutput
}

type GetNetworkLoadBalancerIpAddressArgs struct {
	// An IP address.  Example: `192.168.0.3`
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// IP version associated with the listener.
	IpVersion pulumi.StringInput `pulumi:"ipVersion"`
	// Whether the IP address is public or private.
	IsPublic pulumi.BoolInput `pulumi:"isPublic"`
	// An object representing a reserved IP address to be attached or that is already attached to a network load balancer.
	ReservedIps GetNetworkLoadBalancerIpAddressReservedIpArrayInput `pulumi:"reservedIps"`
}

func (GetNetworkLoadBalancerIpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLoadBalancerIpAddress)(nil)).Elem()
}

func (i GetNetworkLoadBalancerIpAddressArgs) ToGetNetworkLoadBalancerIpAddressOutput() GetNetworkLoadBalancerIpAddressOutput {
	return i.ToGetNetworkLoadBalancerIpAddressOutputWithContext(context.Background())
}

func (i GetNetworkLoadBalancerIpAddressArgs) ToGetNetworkLoadBalancerIpAddressOutputWithContext(ctx context.Context) GetNetworkLoadBalancerIpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLoadBalancerIpAddressOutput)
}

// GetNetworkLoadBalancerIpAddressArrayInput is an input type that accepts GetNetworkLoadBalancerIpAddressArray and GetNetworkLoadBalancerIpAddressArrayOutput values.
// You can construct a concrete instance of `GetNetworkLoadBalancerIpAddressArrayInput` via:
//
//	GetNetworkLoadBalancerIpAddressArray{ GetNetworkLoadBalancerIpAddressArgs{...} }
type GetNetworkLoadBalancerIpAddressArrayInput interface {
	pulumi.Input

	ToGetNetworkLoadBalancerIpAddressArrayOutput() GetNetworkLoadBalancerIpAddressArrayOutput
	ToGetNetworkLoadBalancerIpAddressArrayOutputWithContext(context.Context) GetNetworkLoadBalancerIpAddressArrayOutput
}

type GetNetworkLoadBalancerIpAddressArray []GetNetworkLoadBalancerIpAddressInput

func (GetNetworkLoadBalancerIpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkLoadBalancerIpAddress)(nil)).Elem()
}

func (i GetNetworkLoadBalancerIpAddressArray) ToGetNetworkLoadBalancerIpAddressArrayOutput() GetNetworkLoadBalancerIpAddressArrayOutput {
	return i.ToGetNetworkLoadBalancerIpAddressArrayOutputWithContext(context.Background())
}

func (i GetNetworkLoadBalancerIpAddressArray) ToGetNetworkLoadBalancerIpAddressArrayOutputWithContext(ctx context.Context) GetNetworkLoadBalancerIpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLoadBalancerIpAddressArrayOutput)
}

type GetNetworkLoadBalancerIpAddressOutput struct{ *pulumi.OutputState }

func (GetNetworkLoadBalancerIpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLoadBalancerIpAddress)(nil)).Elem()
}

func (o GetNetworkLoadBalancerIpAddressOutput) ToGetNetworkLoadBalancerIpAddressOutput() GetNetworkLoadBalancerIpAddressOutput {
	return o
}

func (o GetNetworkLoadBalancerIpAddressOutput) ToGetNetworkLoadBalancerIpAddressOutputWithContext(ctx context.Context) GetNetworkLoadBalancerIpAddressOutput {
	return o
}

// An IP address.  Example: `192.168.0.3`
func (o GetNetworkLoadBalancerIpAddressOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancerIpAddress) string { return v.IpAddress }).(pulumi.StringOutput)
}

// IP version associated with the listener.
func (o GetNetworkLoadBalancerIpAddressOutput) IpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancerIpAddress) string { return v.IpVersion }).(pulumi.StringOutput)
}

// Whether the IP address is public or private.
func (o GetNetworkLoadBalancerIpAddressOutput) IsPublic() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancerIpAddress) bool { return v.IsPublic }).(pulumi.BoolOutput)
}

// An object representing a reserved IP address to be attached or that is already attached to a network load balancer.
func (o GetNetworkLoadBalancerIpAddressOutput) ReservedIps() GetNetworkLoadBalancerIpAddressReservedIpArrayOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancerIpAddress) []GetNetworkLoadBalancerIpAddressReservedIp {
		return v.ReservedIps
	}).(GetNetworkLoadBalancerIpAddressReservedIpArrayOutput)
}

type GetNetworkLoadBalancerIpAddressArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkLoadBalancerIpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkLoadBalancerIpAddress)(nil)).Elem()
}

func (o GetNetworkLoadBalancerIpAddressArrayOutput) ToGetNetworkLoadBalancerIpAddressArrayOutput() GetNetworkLoadBalancerIpAddressArrayOutput {
	return o
}

func (o GetNetworkLoadBalancerIpAddressArrayOutput) ToGetNetworkLoadBalancerIpAddressArrayOutputWithContext(ctx context.Context) GetNetworkLoadBalancerIpAddressArrayOutput {
	return o
}

func (o GetNetworkLoadBalancerIpAddressArrayOutput) Index(i pulumi.IntInput) GetNetworkLoadBalancerIpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkLoadBalancerIpAddress {
		return vs[0].([]GetNetworkLoadBalancerIpAddress)[vs[1].(int)]
	}).(GetNetworkLoadBalancerIpAddressOutput)
}

type GetNetworkLoadBalancerIpAddressReservedIp struct {
	// OCID of the reserved public IP address created with the virtual cloud network.
	Id string `pulumi:"id"`
}

// GetNetworkLoadBalancerIpAddressReservedIpInput is an input type that accepts GetNetworkLoadBalancerIpAddressReservedIpArgs and GetNetworkLoadBalancerIpAddressReservedIpOutput values.
// You can construct a concrete instance of `GetNetworkLoadBalancerIpAddressReservedIpInput` via:
//
//	GetNetworkLoadBalancerIpAddressReservedIpArgs{...}
type GetNetworkLoadBalancerIpAddressReservedIpInput interface {
	pulumi.Input

	ToGetNetworkLoadBalancerIpAddressReservedIpOutput() GetNetworkLoadBalancerIpAddressReservedIpOutput
	ToGetNetworkLoadBalancerIpAddressReservedIpOutputWithContext(context.Context) GetNetworkLoadBalancerIpAddressReservedIpOutput
}

type GetNetworkLoadBalancerIpAddressReservedIpArgs struct {
	// OCID of the reserved public IP address created with the virtual cloud network.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetNetworkLoadBalancerIpAddressReservedIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLoadBalancerIpAddressReservedIp)(nil)).Elem()
}

func (i GetNetworkLoadBalancerIpAddressReservedIpArgs) ToGetNetworkLoadBalancerIpAddressReservedIpOutput() GetNetworkLoadBalancerIpAddressReservedIpOutput {
	return i.ToGetNetworkLoadBalancerIpAddressReservedIpOutputWithContext(context.Background())
}

func (i GetNetworkLoadBalancerIpAddressReservedIpArgs) ToGetNetworkLoadBalancerIpAddressReservedIpOutputWithContext(ctx context.Context) GetNetworkLoadBalancerIpAddressReservedIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLoadBalancerIpAddressReservedIpOutput)
}

// GetNetworkLoadBalancerIpAddressReservedIpArrayInput is an input type that accepts GetNetworkLoadBalancerIpAddressReservedIpArray and GetNetworkLoadBalancerIpAddressReservedIpArrayOutput values.
// You can construct a concrete instance of `GetNetworkLoadBalancerIpAddressReservedIpArrayInput` via:
//
//	GetNetworkLoadBalancerIpAddressReservedIpArray{ GetNetworkLoadBalancerIpAddressReservedIpArgs{...} }
type GetNetworkLoadBalancerIpAddressReservedIpArrayInput interface {
	pulumi.Input

	ToGetNetworkLoadBalancerIpAddressReservedIpArrayOutput() GetNetworkLoadBalancerIpAddressReservedIpArrayOutput
	ToGetNetworkLoadBalancerIpAddressReservedIpArrayOutputWithContext(context.Context) GetNetworkLoadBalancerIpAddressReservedIpArrayOutput
}

type GetNetworkLoadBalancerIpAddressReservedIpArray []GetNetworkLoadBalancerIpAddressReservedIpInput

func (GetNetworkLoadBalancerIpAddressReservedIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkLoadBalancerIpAddressReservedIp)(nil)).Elem()
}

func (i GetNetworkLoadBalancerIpAddressReservedIpArray) ToGetNetworkLoadBalancerIpAddressReservedIpArrayOutput() GetNetworkLoadBalancerIpAddressReservedIpArrayOutput {
	return i.ToGetNetworkLoadBalancerIpAddressReservedIpArrayOutputWithContext(context.Background())
}

func (i GetNetworkLoadBalancerIpAddressReservedIpArray) ToGetNetworkLoadBalancerIpAddressReservedIpArrayOutputWithContext(ctx context.Context) GetNetworkLoadBalancerIpAddressReservedIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLoadBalancerIpAddressReservedIpArrayOutput)
}

type GetNetworkLoadBalancerIpAddressReservedIpOutput struct{ *pulumi.OutputState }

func (GetNetworkLoadBalancerIpAddressReservedIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLoadBalancerIpAddressReservedIp)(nil)).Elem()
}

func (o GetNetworkLoadBalancerIpAddressReservedIpOutput) ToGetNetworkLoadBalancerIpAddressReservedIpOutput() GetNetworkLoadBalancerIpAddressReservedIpOutput {
	return o
}

func (o GetNetworkLoadBalancerIpAddressReservedIpOutput) ToGetNetworkLoadBalancerIpAddressReservedIpOutputWithContext(ctx context.Context) GetNetworkLoadBalancerIpAddressReservedIpOutput {
	return o
}

// OCID of the reserved public IP address created with the virtual cloud network.
func (o GetNetworkLoadBalancerIpAddressReservedIpOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancerIpAddressReservedIp) string { return v.Id }).(pulumi.StringOutput)
}

type GetNetworkLoadBalancerIpAddressReservedIpArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkLoadBalancerIpAddressReservedIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkLoadBalancerIpAddressReservedIp)(nil)).Elem()
}

func (o GetNetworkLoadBalancerIpAddressReservedIpArrayOutput) ToGetNetworkLoadBalancerIpAddressReservedIpArrayOutput() GetNetworkLoadBalancerIpAddressReservedIpArrayOutput {
	return o
}

func (o GetNetworkLoadBalancerIpAddressReservedIpArrayOutput) ToGetNetworkLoadBalancerIpAddressReservedIpArrayOutputWithContext(ctx context.Context) GetNetworkLoadBalancerIpAddressReservedIpArrayOutput {
	return o
}

func (o GetNetworkLoadBalancerIpAddressReservedIpArrayOutput) Index(i pulumi.IntInput) GetNetworkLoadBalancerIpAddressReservedIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkLoadBalancerIpAddressReservedIp {
		return vs[0].([]GetNetworkLoadBalancerIpAddressReservedIp)[vs[1].(int)]
	}).(GetNetworkLoadBalancerIpAddressReservedIpOutput)
}

type GetNetworkLoadBalancerReservedIp struct {
	// OCID of the reserved public IP address created with the virtual cloud network.
	Id string `pulumi:"id"`
}

// GetNetworkLoadBalancerReservedIpInput is an input type that accepts GetNetworkLoadBalancerReservedIpArgs and GetNetworkLoadBalancerReservedIpOutput values.
// You can construct a concrete instance of `GetNetworkLoadBalancerReservedIpInput` via:
//
//	GetNetworkLoadBalancerReservedIpArgs{...}
type GetNetworkLoadBalancerReservedIpInput interface {
	pulumi.Input

	ToGetNetworkLoadBalancerReservedIpOutput() GetNetworkLoadBalancerReservedIpOutput
	ToGetNetworkLoadBalancerReservedIpOutputWithContext(context.Context) GetNetworkLoadBalancerReservedIpOutput
}

type GetNetworkLoadBalancerReservedIpArgs struct {
	// OCID of the reserved public IP address created with the virtual cloud network.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetNetworkLoadBalancerReservedIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLoadBalancerReservedIp)(nil)).Elem()
}

func (i GetNetworkLoadBalancerReservedIpArgs) ToGetNetworkLoadBalancerReservedIpOutput() GetNetworkLoadBalancerReservedIpOutput {
	return i.ToGetNetworkLoadBalancerReservedIpOutputWithContext(context.Background())
}

func (i GetNetworkLoadBalancerReservedIpArgs) ToGetNetworkLoadBalancerReservedIpOutputWithContext(ctx context.Context) GetNetworkLoadBalancerReservedIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLoadBalancerReservedIpOutput)
}

// GetNetworkLoadBalancerReservedIpArrayInput is an input type that accepts GetNetworkLoadBalancerReservedIpArray and GetNetworkLoadBalancerReservedIpArrayOutput values.
// You can construct a concrete instance of `GetNetworkLoadBalancerReservedIpArrayInput` via:
//
//	GetNetworkLoadBalancerReservedIpArray{ GetNetworkLoadBalancerReservedIpArgs{...} }
type GetNetworkLoadBalancerReservedIpArrayInput interface {
	pulumi.Input

	ToGetNetworkLoadBalancerReservedIpArrayOutput() GetNetworkLoadBalancerReservedIpArrayOutput
	ToGetNetworkLoadBalancerReservedIpArrayOutputWithContext(context.Context) GetNetworkLoadBalancerReservedIpArrayOutput
}

type GetNetworkLoadBalancerReservedIpArray []GetNetworkLoadBalancerReservedIpInput

func (GetNetworkLoadBalancerReservedIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkLoadBalancerReservedIp)(nil)).Elem()
}

func (i GetNetworkLoadBalancerReservedIpArray) ToGetNetworkLoadBalancerReservedIpArrayOutput() GetNetworkLoadBalancerReservedIpArrayOutput {
	return i.ToGetNetworkLoadBalancerReservedIpArrayOutputWithContext(context.Background())
}

func (i GetNetworkLoadBalancerReservedIpArray) ToGetNetworkLoadBalancerReservedIpArrayOutputWithContext(ctx context.Context) GetNetworkLoadBalancerReservedIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLoadBalancerReservedIpArrayOutput)
}

type GetNetworkLoadBalancerReservedIpOutput struct{ *pulumi.OutputState }

func (GetNetworkLoadBalancerReservedIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLoadBalancerReservedIp)(nil)).Elem()
}

func (o GetNetworkLoadBalancerReservedIpOutput) ToGetNetworkLoadBalancerReservedIpOutput() GetNetworkLoadBalancerReservedIpOutput {
	return o
}

func (o GetNetworkLoadBalancerReservedIpOutput) ToGetNetworkLoadBalancerReservedIpOutputWithContext(ctx context.Context) GetNetworkLoadBalancerReservedIpOutput {
	return o
}

// OCID of the reserved public IP address created with the virtual cloud network.
func (o GetNetworkLoadBalancerReservedIpOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancerReservedIp) string { return v.Id }).(pulumi.StringOutput)
}

type GetNetworkLoadBalancerReservedIpArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkLoadBalancerReservedIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkLoadBalancerReservedIp)(nil)).Elem()
}

func (o GetNetworkLoadBalancerReservedIpArrayOutput) ToGetNetworkLoadBalancerReservedIpArrayOutput() GetNetworkLoadBalancerReservedIpArrayOutput {
	return o
}

func (o GetNetworkLoadBalancerReservedIpArrayOutput) ToGetNetworkLoadBalancerReservedIpArrayOutputWithContext(ctx context.Context) GetNetworkLoadBalancerReservedIpArrayOutput {
	return o
}

func (o GetNetworkLoadBalancerReservedIpArrayOutput) Index(i pulumi.IntInput) GetNetworkLoadBalancerReservedIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkLoadBalancerReservedIp {
		return vs[0].([]GetNetworkLoadBalancerReservedIp)[vs[1].(int)]
	}).(GetNetworkLoadBalancerReservedIpOutput)
}

type GetNetworkLoadBalancersFilter struct {
	// A friendly name for the listener. It must be unique and it cannot be changed.  Example: `exampleListener`
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetNetworkLoadBalancersFilterInput is an input type that accepts GetNetworkLoadBalancersFilterArgs and GetNetworkLoadBalancersFilterOutput values.
// You can construct a concrete instance of `GetNetworkLoadBalancersFilterInput` via:
//
//	GetNetworkLoadBalancersFilterArgs{...}
type GetNetworkLoadBalancersFilterInput interface {
	pulumi.Input

	ToGetNetworkLoadBalancersFilterOutput() GetNetworkLoadBalancersFilterOutput
	ToGetNetworkLoadBalancersFilterOutputWithContext(context.Context) GetNetworkLoadBalancersFilterOutput
}

type GetNetworkLoadBalancersFilterArgs struct {
	// A friendly name for the listener. It must be unique and it cannot be changed.  Example: `exampleListener`
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNetworkLoadBalancersFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLoadBalancersFilter)(nil)).Elem()
}

func (i GetNetworkLoadBalancersFilterArgs) ToGetNetworkLoadBalancersFilterOutput() GetNetworkLoadBalancersFilterOutput {
	return i.ToGetNetworkLoadBalancersFilterOutputWithContext(context.Background())
}

func (i GetNetworkLoadBalancersFilterArgs) ToGetNetworkLoadBalancersFilterOutputWithContext(ctx context.Context) GetNetworkLoadBalancersFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLoadBalancersFilterOutput)
}

// GetNetworkLoadBalancersFilterArrayInput is an input type that accepts GetNetworkLoadBalancersFilterArray and GetNetworkLoadBalancersFilterArrayOutput values.
// You can construct a concrete instance of `GetNetworkLoadBalancersFilterArrayInput` via:
//
//	GetNetworkLoadBalancersFilterArray{ GetNetworkLoadBalancersFilterArgs{...} }
type GetNetworkLoadBalancersFilterArrayInput interface {
	pulumi.Input

	ToGetNetworkLoadBalancersFilterArrayOutput() GetNetworkLoadBalancersFilterArrayOutput
	ToGetNetworkLoadBalancersFilterArrayOutputWithContext(context.Context) GetNetworkLoadBalancersFilterArrayOutput
}

type GetNetworkLoadBalancersFilterArray []GetNetworkLoadBalancersFilterInput

func (GetNetworkLoadBalancersFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkLoadBalancersFilter)(nil)).Elem()
}

func (i GetNetworkLoadBalancersFilterArray) ToGetNetworkLoadBalancersFilterArrayOutput() GetNetworkLoadBalancersFilterArrayOutput {
	return i.ToGetNetworkLoadBalancersFilterArrayOutputWithContext(context.Background())
}

func (i GetNetworkLoadBalancersFilterArray) ToGetNetworkLoadBalancersFilterArrayOutputWithContext(ctx context.Context) GetNetworkLoadBalancersFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLoadBalancersFilterArrayOutput)
}

type GetNetworkLoadBalancersFilterOutput struct{ *pulumi.OutputState }

func (GetNetworkLoadBalancersFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLoadBalancersFilter)(nil)).Elem()
}

func (o GetNetworkLoadBalancersFilterOutput) ToGetNetworkLoadBalancersFilterOutput() GetNetworkLoadBalancersFilterOutput {
	return o
}

func (o GetNetworkLoadBalancersFilterOutput) ToGetNetworkLoadBalancersFilterOutputWithContext(ctx context.Context) GetNetworkLoadBalancersFilterOutput {
	return o
}

// A friendly name for the listener. It must be unique and it cannot be changed.  Example: `exampleListener`
func (o GetNetworkLoadBalancersFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetNetworkLoadBalancersFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetNetworkLoadBalancersFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNetworkLoadBalancersFilterArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkLoadBalancersFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkLoadBalancersFilter)(nil)).Elem()
}

func (o GetNetworkLoadBalancersFilterArrayOutput) ToGetNetworkLoadBalancersFilterArrayOutput() GetNetworkLoadBalancersFilterArrayOutput {
	return o
}

func (o GetNetworkLoadBalancersFilterArrayOutput) ToGetNetworkLoadBalancersFilterArrayOutputWithContext(ctx context.Context) GetNetworkLoadBalancersFilterArrayOutput {
	return o
}

func (o GetNetworkLoadBalancersFilterArrayOutput) Index(i pulumi.IntInput) GetNetworkLoadBalancersFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkLoadBalancersFilter {
		return vs[0].([]GetNetworkLoadBalancersFilter)[vs[1].(int)]
	}).(GetNetworkLoadBalancersFilterOutput)
}

type GetNetworkLoadBalancersNetworkLoadBalancerCollection struct {
	Items []GetNetworkLoadBalancersNetworkLoadBalancerCollectionItem `pulumi:"items"`
}

// GetNetworkLoadBalancersNetworkLoadBalancerCollectionInput is an input type that accepts GetNetworkLoadBalancersNetworkLoadBalancerCollectionArgs and GetNetworkLoadBalancersNetworkLoadBalancerCollectionOutput values.
// You can construct a concrete instance of `GetNetworkLoadBalancersNetworkLoadBalancerCollectionInput` via:
//
//	GetNetworkLoadBalancersNetworkLoadBalancerCollectionArgs{...}
type GetNetworkLoadBalancersNetworkLoadBalancerCollectionInput interface {
	pulumi.Input

	ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionOutput() GetNetworkLoadBalancersNetworkLoadBalancerCollectionOutput
	ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionOutputWithContext(context.Context) GetNetworkLoadBalancersNetworkLoadBalancerCollectionOutput
}

type GetNetworkLoadBalancersNetworkLoadBalancerCollectionArgs struct {
	Items GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArrayInput `pulumi:"items"`
}

func (GetNetworkLoadBalancersNetworkLoadBalancerCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLoadBalancersNetworkLoadBalancerCollection)(nil)).Elem()
}

func (i GetNetworkLoadBalancersNetworkLoadBalancerCollectionArgs) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionOutput() GetNetworkLoadBalancersNetworkLoadBalancerCollectionOutput {
	return i.ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionOutputWithContext(context.Background())
}

func (i GetNetworkLoadBalancersNetworkLoadBalancerCollectionArgs) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionOutputWithContext(ctx context.Context) GetNetworkLoadBalancersNetworkLoadBalancerCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLoadBalancersNetworkLoadBalancerCollectionOutput)
}

// GetNetworkLoadBalancersNetworkLoadBalancerCollectionArrayInput is an input type that accepts GetNetworkLoadBalancersNetworkLoadBalancerCollectionArray and GetNetworkLoadBalancersNetworkLoadBalancerCollectionArrayOutput values.
// You can construct a concrete instance of `GetNetworkLoadBalancersNetworkLoadBalancerCollectionArrayInput` via:
//
//	GetNetworkLoadBalancersNetworkLoadBalancerCollectionArray{ GetNetworkLoadBalancersNetworkLoadBalancerCollectionArgs{...} }
type GetNetworkLoadBalancersNetworkLoadBalancerCollectionArrayInput interface {
	pulumi.Input

	ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionArrayOutput() GetNetworkLoadBalancersNetworkLoadBalancerCollectionArrayOutput
	ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionArrayOutputWithContext(context.Context) GetNetworkLoadBalancersNetworkLoadBalancerCollectionArrayOutput
}

type GetNetworkLoadBalancersNetworkLoadBalancerCollectionArray []GetNetworkLoadBalancersNetworkLoadBalancerCollectionInput

func (GetNetworkLoadBalancersNetworkLoadBalancerCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkLoadBalancersNetworkLoadBalancerCollection)(nil)).Elem()
}

func (i GetNetworkLoadBalancersNetworkLoadBalancerCollectionArray) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionArrayOutput() GetNetworkLoadBalancersNetworkLoadBalancerCollectionArrayOutput {
	return i.ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionArrayOutputWithContext(context.Background())
}

func (i GetNetworkLoadBalancersNetworkLoadBalancerCollectionArray) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionArrayOutputWithContext(ctx context.Context) GetNetworkLoadBalancersNetworkLoadBalancerCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLoadBalancersNetworkLoadBalancerCollectionArrayOutput)
}

type GetNetworkLoadBalancersNetworkLoadBalancerCollectionOutput struct{ *pulumi.OutputState }

func (GetNetworkLoadBalancersNetworkLoadBalancerCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLoadBalancersNetworkLoadBalancerCollection)(nil)).Elem()
}

func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionOutput) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionOutput() GetNetworkLoadBalancersNetworkLoadBalancerCollectionOutput {
	return o
}

func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionOutput) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionOutputWithContext(ctx context.Context) GetNetworkLoadBalancersNetworkLoadBalancerCollectionOutput {
	return o
}

func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionOutput) Items() GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArrayOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersNetworkLoadBalancerCollection) []GetNetworkLoadBalancersNetworkLoadBalancerCollectionItem {
		return v.Items
	}).(GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArrayOutput)
}

type GetNetworkLoadBalancersNetworkLoadBalancerCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkLoadBalancersNetworkLoadBalancerCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkLoadBalancersNetworkLoadBalancerCollection)(nil)).Elem()
}

func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionArrayOutput) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionArrayOutput() GetNetworkLoadBalancersNetworkLoadBalancerCollectionArrayOutput {
	return o
}

func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionArrayOutput) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionArrayOutputWithContext(ctx context.Context) GetNetworkLoadBalancersNetworkLoadBalancerCollectionArrayOutput {
	return o
}

func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionArrayOutput) Index(i pulumi.IntInput) GetNetworkLoadBalancersNetworkLoadBalancerCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkLoadBalancersNetworkLoadBalancerCollection {
		return vs[0].([]GetNetworkLoadBalancersNetworkLoadBalancerCollection)[vs[1].(int)]
	}).(GetNetworkLoadBalancersNetworkLoadBalancerCollectionOutput)
}

type GetNetworkLoadBalancersNetworkLoadBalancerCollectionItem struct {
	AssignedIpv6        string `pulumi:"assignedIpv6"`
	AssignedPrivateIpv4 string `pulumi:"assignedPrivateIpv4"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the network load balancers to list.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// OCID of the reserved public IP address created with the virtual cloud network.
	Id string `pulumi:"id"`
	// An array of IP addresses.
	IpAddresses []GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddress `pulumi:"ipAddresses"`
	// When enabled, the skipSourceDestinationCheck parameter is automatically enabled on the load balancer VNIC. Packets are sent to the backend set without any changes to the source and destination IP.
	IsPreserveSourceDestination bool `pulumi:"isPreserveSourceDestination"`
	// Whether the network load balancer has a virtual cloud network-local (private) IP address.
	IsPrivate              bool `pulumi:"isPrivate"`
	IsSymmetricHashEnabled bool `pulumi:"isSymmetricHashEnabled"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// An array of network security groups [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with the network load balancer.
	NetworkSecurityGroupIds []string `pulumi:"networkSecurityGroupIds"`
	// IP version associated with the NLB.
	NlbIpVersion string                                                               `pulumi:"nlbIpVersion"`
	ReservedIps  []GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIp `pulumi:"reservedIps"`
	// A filter to return only resources that match the given lifecycle state.
	State string `pulumi:"state"`
	// The subnet in which the network load balancer is spawned [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)."
	SubnetId       string `pulumi:"subnetId"`
	SubnetIpv6cidr string `pulumi:"subnetIpv6cidr"`
	// Key-value pair representing system tags' keys and values scoped to a namespace. Example: `{"bar-key": "value"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The date and time the network load balancer was created, in the format defined by RFC3339.  Example: `2020-05-01T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The time the network load balancer was updated. An RFC3339 formatted date-time string.  Example: `2020-05-01T22:10:29.600Z`
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemInput is an input type that accepts GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArgs and GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput values.
// You can construct a concrete instance of `GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemInput` via:
//
//	GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArgs{...}
type GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemInput interface {
	pulumi.Input

	ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput() GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput
	ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutputWithContext(context.Context) GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput
}

type GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArgs struct {
	AssignedIpv6        pulumi.StringInput `pulumi:"assignedIpv6"`
	AssignedPrivateIpv4 pulumi.StringInput `pulumi:"assignedPrivateIpv4"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the network load balancers to list.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// OCID of the reserved public IP address created with the virtual cloud network.
	Id pulumi.StringInput `pulumi:"id"`
	// An array of IP addresses.
	IpAddresses GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArrayInput `pulumi:"ipAddresses"`
	// When enabled, the skipSourceDestinationCheck parameter is automatically enabled on the load balancer VNIC. Packets are sent to the backend set without any changes to the source and destination IP.
	IsPreserveSourceDestination pulumi.BoolInput `pulumi:"isPreserveSourceDestination"`
	// Whether the network load balancer has a virtual cloud network-local (private) IP address.
	IsPrivate              pulumi.BoolInput `pulumi:"isPrivate"`
	IsSymmetricHashEnabled pulumi.BoolInput `pulumi:"isSymmetricHashEnabled"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// An array of network security groups [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with the network load balancer.
	NetworkSecurityGroupIds pulumi.StringArrayInput `pulumi:"networkSecurityGroupIds"`
	// IP version associated with the NLB.
	NlbIpVersion pulumi.StringInput                                                           `pulumi:"nlbIpVersion"`
	ReservedIps  GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArrayInput `pulumi:"reservedIps"`
	// A filter to return only resources that match the given lifecycle state.
	State pulumi.StringInput `pulumi:"state"`
	// The subnet in which the network load balancer is spawned [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)."
	SubnetId       pulumi.StringInput `pulumi:"subnetId"`
	SubnetIpv6cidr pulumi.StringInput `pulumi:"subnetIpv6cidr"`
	// Key-value pair representing system tags' keys and values scoped to a namespace. Example: `{"bar-key": "value"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// The date and time the network load balancer was created, in the format defined by RFC3339.  Example: `2020-05-01T21:10:29.600Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the network load balancer was updated. An RFC3339 formatted date-time string.  Example: `2020-05-01T22:10:29.600Z`
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLoadBalancersNetworkLoadBalancerCollectionItem)(nil)).Elem()
}

func (i GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArgs) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput() GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput {
	return i.ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutputWithContext(context.Background())
}

func (i GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArgs) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutputWithContext(ctx context.Context) GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput)
}

// GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArrayInput is an input type that accepts GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArray and GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArrayInput` via:
//
//	GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArray{ GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArgs{...} }
type GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArrayInput interface {
	pulumi.Input

	ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArrayOutput() GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArrayOutput
	ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArrayOutputWithContext(context.Context) GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArrayOutput
}

type GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArray []GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemInput

func (GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkLoadBalancersNetworkLoadBalancerCollectionItem)(nil)).Elem()
}

func (i GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArray) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArrayOutput() GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArrayOutput {
	return i.ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArray) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArrayOutputWithContext(ctx context.Context) GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArrayOutput)
}

type GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput struct{ *pulumi.OutputState }

func (GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLoadBalancersNetworkLoadBalancerCollectionItem)(nil)).Elem()
}

func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput() GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput {
	return o
}

func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutputWithContext(ctx context.Context) GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput {
	return o
}

func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput) AssignedIpv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersNetworkLoadBalancerCollectionItem) string { return v.AssignedIpv6 }).(pulumi.StringOutput)
}

func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput) AssignedPrivateIpv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersNetworkLoadBalancerCollectionItem) string { return v.AssignedPrivateIpv4 }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the network load balancers to list.
func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersNetworkLoadBalancerCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersNetworkLoadBalancerCollectionItem) map[string]interface{} {
		return v.DefinedTags
	}).(pulumi.MapOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersNetworkLoadBalancerCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersNetworkLoadBalancerCollectionItem) map[string]interface{} {
		return v.FreeformTags
	}).(pulumi.MapOutput)
}

// OCID of the reserved public IP address created with the virtual cloud network.
func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersNetworkLoadBalancerCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// An array of IP addresses.
func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput) IpAddresses() GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArrayOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersNetworkLoadBalancerCollectionItem) []GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddress {
		return v.IpAddresses
	}).(GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArrayOutput)
}

// When enabled, the skipSourceDestinationCheck parameter is automatically enabled on the load balancer VNIC. Packets are sent to the backend set without any changes to the source and destination IP.
func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput) IsPreserveSourceDestination() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersNetworkLoadBalancerCollectionItem) bool {
		return v.IsPreserveSourceDestination
	}).(pulumi.BoolOutput)
}

// Whether the network load balancer has a virtual cloud network-local (private) IP address.
func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput) IsPrivate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersNetworkLoadBalancerCollectionItem) bool { return v.IsPrivate }).(pulumi.BoolOutput)
}

func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput) IsSymmetricHashEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersNetworkLoadBalancerCollectionItem) bool { return v.IsSymmetricHashEnabled }).(pulumi.BoolOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersNetworkLoadBalancerCollectionItem) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// An array of network security groups [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with the network load balancer.
func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput) NetworkSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersNetworkLoadBalancerCollectionItem) []string {
		return v.NetworkSecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// IP version associated with the NLB.
func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput) NlbIpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersNetworkLoadBalancerCollectionItem) string { return v.NlbIpVersion }).(pulumi.StringOutput)
}

func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput) ReservedIps() GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArrayOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersNetworkLoadBalancerCollectionItem) []GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIp {
		return v.ReservedIps
	}).(GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArrayOutput)
}

// A filter to return only resources that match the given lifecycle state.
func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersNetworkLoadBalancerCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// The subnet in which the network load balancer is spawned [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)."
func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersNetworkLoadBalancerCollectionItem) string { return v.SubnetId }).(pulumi.StringOutput)
}

func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput) SubnetIpv6cidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersNetworkLoadBalancerCollectionItem) string { return v.SubnetIpv6cidr }).(pulumi.StringOutput)
}

// Key-value pair representing system tags' keys and values scoped to a namespace. Example: `{"bar-key": "value"}`
func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersNetworkLoadBalancerCollectionItem) map[string]interface{} {
		return v.SystemTags
	}).(pulumi.MapOutput)
}

// The date and time the network load balancer was created, in the format defined by RFC3339.  Example: `2020-05-01T21:10:29.600Z`
func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersNetworkLoadBalancerCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the network load balancer was updated. An RFC3339 formatted date-time string.  Example: `2020-05-01T22:10:29.600Z`
func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersNetworkLoadBalancerCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkLoadBalancersNetworkLoadBalancerCollectionItem)(nil)).Elem()
}

func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArrayOutput) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArrayOutput() GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArrayOutput {
	return o
}

func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArrayOutput) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArrayOutputWithContext(ctx context.Context) GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArrayOutput {
	return o
}

func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArrayOutput) Index(i pulumi.IntInput) GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkLoadBalancersNetworkLoadBalancerCollectionItem {
		return vs[0].([]GetNetworkLoadBalancersNetworkLoadBalancerCollectionItem)[vs[1].(int)]
	}).(GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput)
}

type GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddress struct {
	// An IP address.  Example: `192.168.0.3`
	IpAddress string `pulumi:"ipAddress"`
	// IP version associated with the listener.
	IpVersion string `pulumi:"ipVersion"`
	// Whether the IP address is public or private.
	// If "true", then the IP address is public and accessible from the internet.
	IsPublic bool `pulumi:"isPublic"`
	// An object representing a reserved IP address to be attached or that is already attached to a network load balancer.
	ReservedIps []GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIp `pulumi:"reservedIps"`
}

// GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressInput is an input type that accepts GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArgs and GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressOutput values.
// You can construct a concrete instance of `GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressInput` via:
//
//	GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArgs{...}
type GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressInput interface {
	pulumi.Input

	ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressOutput() GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressOutput
	ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressOutputWithContext(context.Context) GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressOutput
}

type GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArgs struct {
	// An IP address.  Example: `192.168.0.3`
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// IP version associated with the listener.
	IpVersion pulumi.StringInput `pulumi:"ipVersion"`
	// Whether the IP address is public or private.
	// If "true", then the IP address is public and accessible from the internet.
	IsPublic pulumi.BoolInput `pulumi:"isPublic"`
	// An object representing a reserved IP address to be attached or that is already attached to a network load balancer.
	ReservedIps GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArrayInput `pulumi:"reservedIps"`
}

func (GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddress)(nil)).Elem()
}

func (i GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArgs) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressOutput() GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressOutput {
	return i.ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressOutputWithContext(context.Background())
}

func (i GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArgs) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressOutputWithContext(ctx context.Context) GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressOutput)
}

// GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArrayInput is an input type that accepts GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArray and GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArrayOutput values.
// You can construct a concrete instance of `GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArrayInput` via:
//
//	GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArray{ GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArgs{...} }
type GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArrayInput interface {
	pulumi.Input

	ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArrayOutput() GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArrayOutput
	ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArrayOutputWithContext(context.Context) GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArrayOutput
}

type GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArray []GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressInput

func (GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddress)(nil)).Elem()
}

func (i GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArray) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArrayOutput() GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArrayOutput {
	return i.ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArrayOutputWithContext(context.Background())
}

func (i GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArray) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArrayOutputWithContext(ctx context.Context) GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArrayOutput)
}

type GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressOutput struct{ *pulumi.OutputState }

func (GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddress)(nil)).Elem()
}

func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressOutput) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressOutput() GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressOutput {
	return o
}

func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressOutput) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressOutputWithContext(ctx context.Context) GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressOutput {
	return o
}

// An IP address.  Example: `192.168.0.3`
func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddress) string { return v.IpAddress }).(pulumi.StringOutput)
}

// IP version associated with the listener.
func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressOutput) IpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddress) string { return v.IpVersion }).(pulumi.StringOutput)
}

// Whether the IP address is public or private.
// If "true", then the IP address is public and accessible from the internet.
func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressOutput) IsPublic() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddress) bool { return v.IsPublic }).(pulumi.BoolOutput)
}

// An object representing a reserved IP address to be attached or that is already attached to a network load balancer.
func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressOutput) ReservedIps() GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArrayOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddress) []GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIp {
		return v.ReservedIps
	}).(GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArrayOutput)
}

type GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddress)(nil)).Elem()
}

func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArrayOutput) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArrayOutput() GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArrayOutput {
	return o
}

func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArrayOutput) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArrayOutputWithContext(ctx context.Context) GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArrayOutput {
	return o
}

func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArrayOutput) Index(i pulumi.IntInput) GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddress {
		return vs[0].([]GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddress)[vs[1].(int)]
	}).(GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressOutput)
}

type GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIp struct {
	// OCID of the reserved public IP address created with the virtual cloud network.
	Id string `pulumi:"id"`
}

// GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpInput is an input type that accepts GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArgs and GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpOutput values.
// You can construct a concrete instance of `GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpInput` via:
//
//	GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArgs{...}
type GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpInput interface {
	pulumi.Input

	ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpOutput() GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpOutput
	ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpOutputWithContext(context.Context) GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpOutput
}

type GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArgs struct {
	// OCID of the reserved public IP address created with the virtual cloud network.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIp)(nil)).Elem()
}

func (i GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArgs) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpOutput() GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpOutput {
	return i.ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpOutputWithContext(context.Background())
}

func (i GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArgs) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpOutputWithContext(ctx context.Context) GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpOutput)
}

// GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArrayInput is an input type that accepts GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArray and GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArrayOutput values.
// You can construct a concrete instance of `GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArrayInput` via:
//
//	GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArray{ GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArgs{...} }
type GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArrayInput interface {
	pulumi.Input

	ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArrayOutput() GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArrayOutput
	ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArrayOutputWithContext(context.Context) GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArrayOutput
}

type GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArray []GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpInput

func (GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIp)(nil)).Elem()
}

func (i GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArray) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArrayOutput() GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArrayOutput {
	return i.ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArrayOutputWithContext(context.Background())
}

func (i GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArray) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArrayOutputWithContext(ctx context.Context) GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArrayOutput)
}

type GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpOutput struct{ *pulumi.OutputState }

func (GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIp)(nil)).Elem()
}

func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpOutput) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpOutput() GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpOutput {
	return o
}

func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpOutput) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpOutputWithContext(ctx context.Context) GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpOutput {
	return o
}

// OCID of the reserved public IP address created with the virtual cloud network.
func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIp) string {
		return v.Id
	}).(pulumi.StringOutput)
}

type GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIp)(nil)).Elem()
}

func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArrayOutput) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArrayOutput() GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArrayOutput {
	return o
}

func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArrayOutput) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArrayOutputWithContext(ctx context.Context) GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArrayOutput {
	return o
}

func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArrayOutput) Index(i pulumi.IntInput) GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIp {
		return vs[0].([]GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIp)[vs[1].(int)]
	}).(GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpOutput)
}

type GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIp struct {
	// OCID of the reserved public IP address created with the virtual cloud network.
	Id string `pulumi:"id"`
}

// GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpInput is an input type that accepts GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArgs and GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpOutput values.
// You can construct a concrete instance of `GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpInput` via:
//
//	GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArgs{...}
type GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpInput interface {
	pulumi.Input

	ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpOutput() GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpOutput
	ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpOutputWithContext(context.Context) GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpOutput
}

type GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArgs struct {
	// OCID of the reserved public IP address created with the virtual cloud network.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIp)(nil)).Elem()
}

func (i GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArgs) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpOutput() GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpOutput {
	return i.ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpOutputWithContext(context.Background())
}

func (i GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArgs) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpOutputWithContext(ctx context.Context) GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpOutput)
}

// GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArrayInput is an input type that accepts GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArray and GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArrayOutput values.
// You can construct a concrete instance of `GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArrayInput` via:
//
//	GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArray{ GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArgs{...} }
type GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArrayInput interface {
	pulumi.Input

	ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArrayOutput() GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArrayOutput
	ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArrayOutputWithContext(context.Context) GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArrayOutput
}

type GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArray []GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpInput

func (GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIp)(nil)).Elem()
}

func (i GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArray) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArrayOutput() GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArrayOutput {
	return i.ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArrayOutputWithContext(context.Background())
}

func (i GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArray) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArrayOutputWithContext(ctx context.Context) GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArrayOutput)
}

type GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpOutput struct{ *pulumi.OutputState }

func (GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIp)(nil)).Elem()
}

func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpOutput) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpOutput() GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpOutput {
	return o
}

func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpOutput) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpOutputWithContext(ctx context.Context) GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpOutput {
	return o
}

// OCID of the reserved public IP address created with the virtual cloud network.
func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIp) string { return v.Id }).(pulumi.StringOutput)
}

type GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIp)(nil)).Elem()
}

func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArrayOutput) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArrayOutput() GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArrayOutput {
	return o
}

func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArrayOutput) ToGetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArrayOutputWithContext(ctx context.Context) GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArrayOutput {
	return o
}

func (o GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArrayOutput) Index(i pulumi.IntInput) GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIp {
		return vs[0].([]GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIp)[vs[1].(int)]
	}).(GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpOutput)
}

type GetNetworkLoadBalancersPoliciesFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetNetworkLoadBalancersPoliciesFilterInput is an input type that accepts GetNetworkLoadBalancersPoliciesFilterArgs and GetNetworkLoadBalancersPoliciesFilterOutput values.
// You can construct a concrete instance of `GetNetworkLoadBalancersPoliciesFilterInput` via:
//
//	GetNetworkLoadBalancersPoliciesFilterArgs{...}
type GetNetworkLoadBalancersPoliciesFilterInput interface {
	pulumi.Input

	ToGetNetworkLoadBalancersPoliciesFilterOutput() GetNetworkLoadBalancersPoliciesFilterOutput
	ToGetNetworkLoadBalancersPoliciesFilterOutputWithContext(context.Context) GetNetworkLoadBalancersPoliciesFilterOutput
}

type GetNetworkLoadBalancersPoliciesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNetworkLoadBalancersPoliciesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLoadBalancersPoliciesFilter)(nil)).Elem()
}

func (i GetNetworkLoadBalancersPoliciesFilterArgs) ToGetNetworkLoadBalancersPoliciesFilterOutput() GetNetworkLoadBalancersPoliciesFilterOutput {
	return i.ToGetNetworkLoadBalancersPoliciesFilterOutputWithContext(context.Background())
}

func (i GetNetworkLoadBalancersPoliciesFilterArgs) ToGetNetworkLoadBalancersPoliciesFilterOutputWithContext(ctx context.Context) GetNetworkLoadBalancersPoliciesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLoadBalancersPoliciesFilterOutput)
}

// GetNetworkLoadBalancersPoliciesFilterArrayInput is an input type that accepts GetNetworkLoadBalancersPoliciesFilterArray and GetNetworkLoadBalancersPoliciesFilterArrayOutput values.
// You can construct a concrete instance of `GetNetworkLoadBalancersPoliciesFilterArrayInput` via:
//
//	GetNetworkLoadBalancersPoliciesFilterArray{ GetNetworkLoadBalancersPoliciesFilterArgs{...} }
type GetNetworkLoadBalancersPoliciesFilterArrayInput interface {
	pulumi.Input

	ToGetNetworkLoadBalancersPoliciesFilterArrayOutput() GetNetworkLoadBalancersPoliciesFilterArrayOutput
	ToGetNetworkLoadBalancersPoliciesFilterArrayOutputWithContext(context.Context) GetNetworkLoadBalancersPoliciesFilterArrayOutput
}

type GetNetworkLoadBalancersPoliciesFilterArray []GetNetworkLoadBalancersPoliciesFilterInput

func (GetNetworkLoadBalancersPoliciesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkLoadBalancersPoliciesFilter)(nil)).Elem()
}

func (i GetNetworkLoadBalancersPoliciesFilterArray) ToGetNetworkLoadBalancersPoliciesFilterArrayOutput() GetNetworkLoadBalancersPoliciesFilterArrayOutput {
	return i.ToGetNetworkLoadBalancersPoliciesFilterArrayOutputWithContext(context.Background())
}

func (i GetNetworkLoadBalancersPoliciesFilterArray) ToGetNetworkLoadBalancersPoliciesFilterArrayOutputWithContext(ctx context.Context) GetNetworkLoadBalancersPoliciesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLoadBalancersPoliciesFilterArrayOutput)
}

type GetNetworkLoadBalancersPoliciesFilterOutput struct{ *pulumi.OutputState }

func (GetNetworkLoadBalancersPoliciesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLoadBalancersPoliciesFilter)(nil)).Elem()
}

func (o GetNetworkLoadBalancersPoliciesFilterOutput) ToGetNetworkLoadBalancersPoliciesFilterOutput() GetNetworkLoadBalancersPoliciesFilterOutput {
	return o
}

func (o GetNetworkLoadBalancersPoliciesFilterOutput) ToGetNetworkLoadBalancersPoliciesFilterOutputWithContext(ctx context.Context) GetNetworkLoadBalancersPoliciesFilterOutput {
	return o
}

func (o GetNetworkLoadBalancersPoliciesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersPoliciesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetNetworkLoadBalancersPoliciesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersPoliciesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetNetworkLoadBalancersPoliciesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersPoliciesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNetworkLoadBalancersPoliciesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkLoadBalancersPoliciesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkLoadBalancersPoliciesFilter)(nil)).Elem()
}

func (o GetNetworkLoadBalancersPoliciesFilterArrayOutput) ToGetNetworkLoadBalancersPoliciesFilterArrayOutput() GetNetworkLoadBalancersPoliciesFilterArrayOutput {
	return o
}

func (o GetNetworkLoadBalancersPoliciesFilterArrayOutput) ToGetNetworkLoadBalancersPoliciesFilterArrayOutputWithContext(ctx context.Context) GetNetworkLoadBalancersPoliciesFilterArrayOutput {
	return o
}

func (o GetNetworkLoadBalancersPoliciesFilterArrayOutput) Index(i pulumi.IntInput) GetNetworkLoadBalancersPoliciesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkLoadBalancersPoliciesFilter {
		return vs[0].([]GetNetworkLoadBalancersPoliciesFilter)[vs[1].(int)]
	}).(GetNetworkLoadBalancersPoliciesFilterOutput)
}

type GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollection struct {
	// Array of NetworkLoadBalancersPolicySummary objects.
	Items []string `pulumi:"items"`
}

// GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionInput is an input type that accepts GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArgs and GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionOutput values.
// You can construct a concrete instance of `GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionInput` via:
//
//	GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArgs{...}
type GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionInput interface {
	pulumi.Input

	ToGetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionOutput() GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionOutput
	ToGetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionOutputWithContext(context.Context) GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionOutput
}

type GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArgs struct {
	// Array of NetworkLoadBalancersPolicySummary objects.
	Items pulumi.StringArrayInput `pulumi:"items"`
}

func (GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollection)(nil)).Elem()
}

func (i GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArgs) ToGetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionOutput() GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionOutput {
	return i.ToGetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionOutputWithContext(context.Background())
}

func (i GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArgs) ToGetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionOutputWithContext(ctx context.Context) GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionOutput)
}

// GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArrayInput is an input type that accepts GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArray and GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArrayOutput values.
// You can construct a concrete instance of `GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArrayInput` via:
//
//	GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArray{ GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArgs{...} }
type GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArrayInput interface {
	pulumi.Input

	ToGetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArrayOutput() GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArrayOutput
	ToGetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArrayOutputWithContext(context.Context) GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArrayOutput
}

type GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArray []GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionInput

func (GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollection)(nil)).Elem()
}

func (i GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArray) ToGetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArrayOutput() GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArrayOutput {
	return i.ToGetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArrayOutputWithContext(context.Background())
}

func (i GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArray) ToGetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArrayOutputWithContext(ctx context.Context) GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArrayOutput)
}

type GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionOutput struct{ *pulumi.OutputState }

func (GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollection)(nil)).Elem()
}

func (o GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionOutput) ToGetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionOutput() GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionOutput {
	return o
}

func (o GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionOutput) ToGetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionOutputWithContext(ctx context.Context) GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionOutput {
	return o
}

// Array of NetworkLoadBalancersPolicySummary objects.
func (o GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionOutput) Items() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollection) []string { return v.Items }).(pulumi.StringArrayOutput)
}

type GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollection)(nil)).Elem()
}

func (o GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArrayOutput) ToGetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArrayOutput() GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArrayOutput {
	return o
}

func (o GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArrayOutput) ToGetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArrayOutputWithContext(ctx context.Context) GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArrayOutput {
	return o
}

func (o GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArrayOutput) Index(i pulumi.IntInput) GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollection {
		return vs[0].([]GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollection)[vs[1].(int)]
	}).(GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionOutput)
}

type GetNetworkLoadBalancersProtocolsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetNetworkLoadBalancersProtocolsFilterInput is an input type that accepts GetNetworkLoadBalancersProtocolsFilterArgs and GetNetworkLoadBalancersProtocolsFilterOutput values.
// You can construct a concrete instance of `GetNetworkLoadBalancersProtocolsFilterInput` via:
//
//	GetNetworkLoadBalancersProtocolsFilterArgs{...}
type GetNetworkLoadBalancersProtocolsFilterInput interface {
	pulumi.Input

	ToGetNetworkLoadBalancersProtocolsFilterOutput() GetNetworkLoadBalancersProtocolsFilterOutput
	ToGetNetworkLoadBalancersProtocolsFilterOutputWithContext(context.Context) GetNetworkLoadBalancersProtocolsFilterOutput
}

type GetNetworkLoadBalancersProtocolsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNetworkLoadBalancersProtocolsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLoadBalancersProtocolsFilter)(nil)).Elem()
}

func (i GetNetworkLoadBalancersProtocolsFilterArgs) ToGetNetworkLoadBalancersProtocolsFilterOutput() GetNetworkLoadBalancersProtocolsFilterOutput {
	return i.ToGetNetworkLoadBalancersProtocolsFilterOutputWithContext(context.Background())
}

func (i GetNetworkLoadBalancersProtocolsFilterArgs) ToGetNetworkLoadBalancersProtocolsFilterOutputWithContext(ctx context.Context) GetNetworkLoadBalancersProtocolsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLoadBalancersProtocolsFilterOutput)
}

// GetNetworkLoadBalancersProtocolsFilterArrayInput is an input type that accepts GetNetworkLoadBalancersProtocolsFilterArray and GetNetworkLoadBalancersProtocolsFilterArrayOutput values.
// You can construct a concrete instance of `GetNetworkLoadBalancersProtocolsFilterArrayInput` via:
//
//	GetNetworkLoadBalancersProtocolsFilterArray{ GetNetworkLoadBalancersProtocolsFilterArgs{...} }
type GetNetworkLoadBalancersProtocolsFilterArrayInput interface {
	pulumi.Input

	ToGetNetworkLoadBalancersProtocolsFilterArrayOutput() GetNetworkLoadBalancersProtocolsFilterArrayOutput
	ToGetNetworkLoadBalancersProtocolsFilterArrayOutputWithContext(context.Context) GetNetworkLoadBalancersProtocolsFilterArrayOutput
}

type GetNetworkLoadBalancersProtocolsFilterArray []GetNetworkLoadBalancersProtocolsFilterInput

func (GetNetworkLoadBalancersProtocolsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkLoadBalancersProtocolsFilter)(nil)).Elem()
}

func (i GetNetworkLoadBalancersProtocolsFilterArray) ToGetNetworkLoadBalancersProtocolsFilterArrayOutput() GetNetworkLoadBalancersProtocolsFilterArrayOutput {
	return i.ToGetNetworkLoadBalancersProtocolsFilterArrayOutputWithContext(context.Background())
}

func (i GetNetworkLoadBalancersProtocolsFilterArray) ToGetNetworkLoadBalancersProtocolsFilterArrayOutputWithContext(ctx context.Context) GetNetworkLoadBalancersProtocolsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLoadBalancersProtocolsFilterArrayOutput)
}

type GetNetworkLoadBalancersProtocolsFilterOutput struct{ *pulumi.OutputState }

func (GetNetworkLoadBalancersProtocolsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLoadBalancersProtocolsFilter)(nil)).Elem()
}

func (o GetNetworkLoadBalancersProtocolsFilterOutput) ToGetNetworkLoadBalancersProtocolsFilterOutput() GetNetworkLoadBalancersProtocolsFilterOutput {
	return o
}

func (o GetNetworkLoadBalancersProtocolsFilterOutput) ToGetNetworkLoadBalancersProtocolsFilterOutputWithContext(ctx context.Context) GetNetworkLoadBalancersProtocolsFilterOutput {
	return o
}

func (o GetNetworkLoadBalancersProtocolsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersProtocolsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetNetworkLoadBalancersProtocolsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersProtocolsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetNetworkLoadBalancersProtocolsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersProtocolsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNetworkLoadBalancersProtocolsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkLoadBalancersProtocolsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkLoadBalancersProtocolsFilter)(nil)).Elem()
}

func (o GetNetworkLoadBalancersProtocolsFilterArrayOutput) ToGetNetworkLoadBalancersProtocolsFilterArrayOutput() GetNetworkLoadBalancersProtocolsFilterArrayOutput {
	return o
}

func (o GetNetworkLoadBalancersProtocolsFilterArrayOutput) ToGetNetworkLoadBalancersProtocolsFilterArrayOutputWithContext(ctx context.Context) GetNetworkLoadBalancersProtocolsFilterArrayOutput {
	return o
}

func (o GetNetworkLoadBalancersProtocolsFilterArrayOutput) Index(i pulumi.IntInput) GetNetworkLoadBalancersProtocolsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkLoadBalancersProtocolsFilter {
		return vs[0].([]GetNetworkLoadBalancersProtocolsFilter)[vs[1].(int)]
	}).(GetNetworkLoadBalancersProtocolsFilterOutput)
}

type GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollection struct {
	// Array of NetworkLoadBalancersProtocolSummary objects.
	Items []string `pulumi:"items"`
}

// GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionInput is an input type that accepts GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArgs and GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionOutput values.
// You can construct a concrete instance of `GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionInput` via:
//
//	GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArgs{...}
type GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionInput interface {
	pulumi.Input

	ToGetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionOutput() GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionOutput
	ToGetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionOutputWithContext(context.Context) GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionOutput
}

type GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArgs struct {
	// Array of NetworkLoadBalancersProtocolSummary objects.
	Items pulumi.StringArrayInput `pulumi:"items"`
}

func (GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollection)(nil)).Elem()
}

func (i GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArgs) ToGetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionOutput() GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionOutput {
	return i.ToGetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionOutputWithContext(context.Background())
}

func (i GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArgs) ToGetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionOutputWithContext(ctx context.Context) GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionOutput)
}

// GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArrayInput is an input type that accepts GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArray and GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArrayOutput values.
// You can construct a concrete instance of `GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArrayInput` via:
//
//	GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArray{ GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArgs{...} }
type GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArrayInput interface {
	pulumi.Input

	ToGetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArrayOutput() GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArrayOutput
	ToGetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArrayOutputWithContext(context.Context) GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArrayOutput
}

type GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArray []GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionInput

func (GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollection)(nil)).Elem()
}

func (i GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArray) ToGetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArrayOutput() GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArrayOutput {
	return i.ToGetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArrayOutputWithContext(context.Background())
}

func (i GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArray) ToGetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArrayOutputWithContext(ctx context.Context) GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArrayOutput)
}

type GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionOutput struct{ *pulumi.OutputState }

func (GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollection)(nil)).Elem()
}

func (o GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionOutput) ToGetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionOutput() GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionOutput {
	return o
}

func (o GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionOutput) ToGetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionOutputWithContext(ctx context.Context) GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionOutput {
	return o
}

// Array of NetworkLoadBalancersProtocolSummary objects.
func (o GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionOutput) Items() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollection) []string {
		return v.Items
	}).(pulumi.StringArrayOutput)
}

type GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollection)(nil)).Elem()
}

func (o GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArrayOutput) ToGetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArrayOutput() GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArrayOutput {
	return o
}

func (o GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArrayOutput) ToGetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArrayOutputWithContext(ctx context.Context) GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArrayOutput {
	return o
}

func (o GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArrayOutput) Index(i pulumi.IntInput) GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollection {
		return vs[0].([]GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollection)[vs[1].(int)]
	}).(GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BackendSetBackendInput)(nil)).Elem(), BackendSetBackendArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackendSetBackendArrayInput)(nil)).Elem(), BackendSetBackendArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackendSetHealthCheckerInput)(nil)).Elem(), BackendSetHealthCheckerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackendSetHealthCheckerPtrInput)(nil)).Elem(), BackendSetHealthCheckerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackendSetHealthCheckerDnsInput)(nil)).Elem(), BackendSetHealthCheckerDnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackendSetHealthCheckerDnsPtrInput)(nil)).Elem(), BackendSetHealthCheckerDnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkLoadBalancerIpAddressInput)(nil)).Elem(), NetworkLoadBalancerIpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkLoadBalancerIpAddressArrayInput)(nil)).Elem(), NetworkLoadBalancerIpAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkLoadBalancerIpAddressReservedIpInput)(nil)).Elem(), NetworkLoadBalancerIpAddressReservedIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkLoadBalancerIpAddressReservedIpArrayInput)(nil)).Elem(), NetworkLoadBalancerIpAddressReservedIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkLoadBalancerReservedIpInput)(nil)).Elem(), NetworkLoadBalancerReservedIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkLoadBalancerReservedIpArrayInput)(nil)).Elem(), NetworkLoadBalancerReservedIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkLoadBalancersBackendSetsUnifiedBackendInput)(nil)).Elem(), NetworkLoadBalancersBackendSetsUnifiedBackendArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkLoadBalancersBackendSetsUnifiedBackendArrayInput)(nil)).Elem(), NetworkLoadBalancersBackendSetsUnifiedBackendArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkLoadBalancersBackendSetsUnifiedHealthCheckerInput)(nil)).Elem(), NetworkLoadBalancersBackendSetsUnifiedHealthCheckerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrInput)(nil)).Elem(), NetworkLoadBalancersBackendSetsUnifiedHealthCheckerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsInput)(nil)).Elem(), NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrInput)(nil)).Elem(), NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackendHealthHealthCheckResultInput)(nil)).Elem(), GetBackendHealthHealthCheckResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackendHealthHealthCheckResultArrayInput)(nil)).Elem(), GetBackendHealthHealthCheckResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackendSetBackendInput)(nil)).Elem(), GetBackendSetBackendArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackendSetBackendArrayInput)(nil)).Elem(), GetBackendSetBackendArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackendSetHealthCheckerInput)(nil)).Elem(), GetBackendSetHealthCheckerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackendSetHealthCheckerArrayInput)(nil)).Elem(), GetBackendSetHealthCheckerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackendSetHealthCheckerDnInput)(nil)).Elem(), GetBackendSetHealthCheckerDnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackendSetHealthCheckerDnArrayInput)(nil)).Elem(), GetBackendSetHealthCheckerDnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackendSetsBackendSetCollectionInput)(nil)).Elem(), GetBackendSetsBackendSetCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackendSetsBackendSetCollectionArrayInput)(nil)).Elem(), GetBackendSetsBackendSetCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackendSetsBackendSetCollectionItemInput)(nil)).Elem(), GetBackendSetsBackendSetCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackendSetsBackendSetCollectionItemArrayInput)(nil)).Elem(), GetBackendSetsBackendSetCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackendSetsBackendSetCollectionItemBackendInput)(nil)).Elem(), GetBackendSetsBackendSetCollectionItemBackendArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackendSetsBackendSetCollectionItemBackendArrayInput)(nil)).Elem(), GetBackendSetsBackendSetCollectionItemBackendArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackendSetsBackendSetCollectionItemHealthCheckerInput)(nil)).Elem(), GetBackendSetsBackendSetCollectionItemHealthCheckerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackendSetsBackendSetCollectionItemHealthCheckerArrayInput)(nil)).Elem(), GetBackendSetsBackendSetCollectionItemHealthCheckerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackendSetsBackendSetCollectionItemHealthCheckerDnInput)(nil)).Elem(), GetBackendSetsBackendSetCollectionItemHealthCheckerDnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackendSetsBackendSetCollectionItemHealthCheckerDnArrayInput)(nil)).Elem(), GetBackendSetsBackendSetCollectionItemHealthCheckerDnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackendSetsFilterInput)(nil)).Elem(), GetBackendSetsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackendSetsFilterArrayInput)(nil)).Elem(), GetBackendSetsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackendsBackendCollectionInput)(nil)).Elem(), GetBackendsBackendCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackendsBackendCollectionArrayInput)(nil)).Elem(), GetBackendsBackendCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackendsBackendCollectionItemInput)(nil)).Elem(), GetBackendsBackendCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackendsBackendCollectionItemArrayInput)(nil)).Elem(), GetBackendsBackendCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackendsFilterInput)(nil)).Elem(), GetBackendsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackendsFilterArrayInput)(nil)).Elem(), GetBackendsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListenersFilterInput)(nil)).Elem(), GetListenersFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListenersFilterArrayInput)(nil)).Elem(), GetListenersFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListenersListenerCollectionInput)(nil)).Elem(), GetListenersListenerCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListenersListenerCollectionArrayInput)(nil)).Elem(), GetListenersListenerCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListenersListenerCollectionItemInput)(nil)).Elem(), GetListenersListenerCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListenersListenerCollectionItemArrayInput)(nil)).Elem(), GetListenersListenerCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLoadBalancerIpAddressInput)(nil)).Elem(), GetNetworkLoadBalancerIpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLoadBalancerIpAddressArrayInput)(nil)).Elem(), GetNetworkLoadBalancerIpAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLoadBalancerIpAddressReservedIpInput)(nil)).Elem(), GetNetworkLoadBalancerIpAddressReservedIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLoadBalancerIpAddressReservedIpArrayInput)(nil)).Elem(), GetNetworkLoadBalancerIpAddressReservedIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLoadBalancerReservedIpInput)(nil)).Elem(), GetNetworkLoadBalancerReservedIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLoadBalancerReservedIpArrayInput)(nil)).Elem(), GetNetworkLoadBalancerReservedIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLoadBalancersFilterInput)(nil)).Elem(), GetNetworkLoadBalancersFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLoadBalancersFilterArrayInput)(nil)).Elem(), GetNetworkLoadBalancersFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLoadBalancersNetworkLoadBalancerCollectionInput)(nil)).Elem(), GetNetworkLoadBalancersNetworkLoadBalancerCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLoadBalancersNetworkLoadBalancerCollectionArrayInput)(nil)).Elem(), GetNetworkLoadBalancersNetworkLoadBalancerCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemInput)(nil)).Elem(), GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArrayInput)(nil)).Elem(), GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressInput)(nil)).Elem(), GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArrayInput)(nil)).Elem(), GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpInput)(nil)).Elem(), GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArrayInput)(nil)).Elem(), GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpInput)(nil)).Elem(), GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArrayInput)(nil)).Elem(), GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLoadBalancersPoliciesFilterInput)(nil)).Elem(), GetNetworkLoadBalancersPoliciesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLoadBalancersPoliciesFilterArrayInput)(nil)).Elem(), GetNetworkLoadBalancersPoliciesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionInput)(nil)).Elem(), GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArrayInput)(nil)).Elem(), GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLoadBalancersProtocolsFilterInput)(nil)).Elem(), GetNetworkLoadBalancersProtocolsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLoadBalancersProtocolsFilterArrayInput)(nil)).Elem(), GetNetworkLoadBalancersProtocolsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionInput)(nil)).Elem(), GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArrayInput)(nil)).Elem(), GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArray{})
	pulumi.RegisterOutputType(BackendSetBackendOutput{})
	pulumi.RegisterOutputType(BackendSetBackendArrayOutput{})
	pulumi.RegisterOutputType(BackendSetHealthCheckerOutput{})
	pulumi.RegisterOutputType(BackendSetHealthCheckerPtrOutput{})
	pulumi.RegisterOutputType(BackendSetHealthCheckerDnsOutput{})
	pulumi.RegisterOutputType(BackendSetHealthCheckerDnsPtrOutput{})
	pulumi.RegisterOutputType(NetworkLoadBalancerIpAddressOutput{})
	pulumi.RegisterOutputType(NetworkLoadBalancerIpAddressArrayOutput{})
	pulumi.RegisterOutputType(NetworkLoadBalancerIpAddressReservedIpOutput{})
	pulumi.RegisterOutputType(NetworkLoadBalancerIpAddressReservedIpArrayOutput{})
	pulumi.RegisterOutputType(NetworkLoadBalancerReservedIpOutput{})
	pulumi.RegisterOutputType(NetworkLoadBalancerReservedIpArrayOutput{})
	pulumi.RegisterOutputType(NetworkLoadBalancersBackendSetsUnifiedBackendOutput{})
	pulumi.RegisterOutputType(NetworkLoadBalancersBackendSetsUnifiedBackendArrayOutput{})
	pulumi.RegisterOutputType(NetworkLoadBalancersBackendSetsUnifiedHealthCheckerOutput{})
	pulumi.RegisterOutputType(NetworkLoadBalancersBackendSetsUnifiedHealthCheckerPtrOutput{})
	pulumi.RegisterOutputType(NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsOutput{})
	pulumi.RegisterOutputType(NetworkLoadBalancersBackendSetsUnifiedHealthCheckerDnsPtrOutput{})
	pulumi.RegisterOutputType(GetBackendHealthHealthCheckResultOutput{})
	pulumi.RegisterOutputType(GetBackendHealthHealthCheckResultArrayOutput{})
	pulumi.RegisterOutputType(GetBackendSetBackendOutput{})
	pulumi.RegisterOutputType(GetBackendSetBackendArrayOutput{})
	pulumi.RegisterOutputType(GetBackendSetHealthCheckerOutput{})
	pulumi.RegisterOutputType(GetBackendSetHealthCheckerArrayOutput{})
	pulumi.RegisterOutputType(GetBackendSetHealthCheckerDnOutput{})
	pulumi.RegisterOutputType(GetBackendSetHealthCheckerDnArrayOutput{})
	pulumi.RegisterOutputType(GetBackendSetsBackendSetCollectionOutput{})
	pulumi.RegisterOutputType(GetBackendSetsBackendSetCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetBackendSetsBackendSetCollectionItemOutput{})
	pulumi.RegisterOutputType(GetBackendSetsBackendSetCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetBackendSetsBackendSetCollectionItemBackendOutput{})
	pulumi.RegisterOutputType(GetBackendSetsBackendSetCollectionItemBackendArrayOutput{})
	pulumi.RegisterOutputType(GetBackendSetsBackendSetCollectionItemHealthCheckerOutput{})
	pulumi.RegisterOutputType(GetBackendSetsBackendSetCollectionItemHealthCheckerArrayOutput{})
	pulumi.RegisterOutputType(GetBackendSetsBackendSetCollectionItemHealthCheckerDnOutput{})
	pulumi.RegisterOutputType(GetBackendSetsBackendSetCollectionItemHealthCheckerDnArrayOutput{})
	pulumi.RegisterOutputType(GetBackendSetsFilterOutput{})
	pulumi.RegisterOutputType(GetBackendSetsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetBackendsBackendCollectionOutput{})
	pulumi.RegisterOutputType(GetBackendsBackendCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetBackendsBackendCollectionItemOutput{})
	pulumi.RegisterOutputType(GetBackendsBackendCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetBackendsFilterOutput{})
	pulumi.RegisterOutputType(GetBackendsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetListenersFilterOutput{})
	pulumi.RegisterOutputType(GetListenersFilterArrayOutput{})
	pulumi.RegisterOutputType(GetListenersListenerCollectionOutput{})
	pulumi.RegisterOutputType(GetListenersListenerCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetListenersListenerCollectionItemOutput{})
	pulumi.RegisterOutputType(GetListenersListenerCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkLoadBalancerIpAddressOutput{})
	pulumi.RegisterOutputType(GetNetworkLoadBalancerIpAddressArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkLoadBalancerIpAddressReservedIpOutput{})
	pulumi.RegisterOutputType(GetNetworkLoadBalancerIpAddressReservedIpArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkLoadBalancerReservedIpOutput{})
	pulumi.RegisterOutputType(GetNetworkLoadBalancerReservedIpArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkLoadBalancersFilterOutput{})
	pulumi.RegisterOutputType(GetNetworkLoadBalancersFilterArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkLoadBalancersNetworkLoadBalancerCollectionOutput{})
	pulumi.RegisterOutputType(GetNetworkLoadBalancersNetworkLoadBalancerCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemOutput{})
	pulumi.RegisterOutputType(GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressOutput{})
	pulumi.RegisterOutputType(GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpOutput{})
	pulumi.RegisterOutputType(GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIpArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpOutput{})
	pulumi.RegisterOutputType(GetNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIpArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkLoadBalancersPoliciesFilterOutput{})
	pulumi.RegisterOutputType(GetNetworkLoadBalancersPoliciesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionOutput{})
	pulumi.RegisterOutputType(GetNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkLoadBalancersProtocolsFilterOutput{})
	pulumi.RegisterOutputType(GetNetworkLoadBalancersProtocolsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionOutput{})
	pulumi.RegisterOutputType(GetNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollectionArrayOutput{})
}
