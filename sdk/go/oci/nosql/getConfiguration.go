// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nosql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Configuration resource in Oracle Cloud Infrastructure NoSQL Database service.
//
// Retrieves the current service-level configuration.  The
// service may of the standard MULTI_TENANCY type, or of the
// HOSTED environment type.  In the latter case, information about the
// current state of the environment's global encryption key is
// included in the response.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/nosql"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nosql.GetConfiguration(ctx, &nosql.GetConfigurationArgs{
//				CompartmentId: compartmentId,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupConfiguration(ctx *pulumi.Context, args *LookupConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupConfigurationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupConfigurationResult
	err := ctx.Invoke("oci:Nosql/getConfiguration:getConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConfiguration.
type LookupConfigurationArgs struct {
	// The ID of a table's compartment.
	CompartmentId string `pulumi:"compartmentId"`
}

// A collection of values returned by getConfiguration.
type LookupConfigurationResult struct {
	CompartmentId string `pulumi:"compartmentId"`
	// The service environment type.
	Environment string `pulumi:"environment"`
	// The OCID of the KMS encryption key assigned to this Hosted Environment. If the Hosted Environment is using an Oracle-managed Key (i.e., not a CMEK), then the id will be a null string.
	Id          string `pulumi:"id"`
	IsOpcDryRun bool   `pulumi:"isOpcDryRun"`
	// Information about the state of the service's encryption key management. The following properties are read-only and ignored when this object is used in UpdateConfiguration: kmsKeyState, timeCreated, timeUpdated.
	KmsKeys []GetConfigurationKmsKey `pulumi:"kmsKeys"`
}

func LookupConfigurationOutput(ctx *pulumi.Context, args LookupConfigurationOutputArgs, opts ...pulumi.InvokeOption) LookupConfigurationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupConfigurationResultOutput, error) {
			args := v.(LookupConfigurationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Nosql/getConfiguration:getConfiguration", args, LookupConfigurationResultOutput{}, options).(LookupConfigurationResultOutput), nil
		}).(LookupConfigurationResultOutput)
}

// A collection of arguments for invoking getConfiguration.
type LookupConfigurationOutputArgs struct {
	// The ID of a table's compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
}

func (LookupConfigurationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigurationArgs)(nil)).Elem()
}

// A collection of values returned by getConfiguration.
type LookupConfigurationResultOutput struct{ *pulumi.OutputState }

func (LookupConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigurationResult)(nil)).Elem()
}

func (o LookupConfigurationResultOutput) ToLookupConfigurationResultOutput() LookupConfigurationResultOutput {
	return o
}

func (o LookupConfigurationResultOutput) ToLookupConfigurationResultOutputWithContext(ctx context.Context) LookupConfigurationResultOutput {
	return o
}

func (o LookupConfigurationResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The service environment type.
func (o LookupConfigurationResultOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationResult) string { return v.Environment }).(pulumi.StringOutput)
}

// The OCID of the KMS encryption key assigned to this Hosted Environment. If the Hosted Environment is using an Oracle-managed Key (i.e., not a CMEK), then the id will be a null string.
func (o LookupConfigurationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupConfigurationResultOutput) IsOpcDryRun() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupConfigurationResult) bool { return v.IsOpcDryRun }).(pulumi.BoolOutput)
}

// Information about the state of the service's encryption key management. The following properties are read-only and ignored when this object is used in UpdateConfiguration: kmsKeyState, timeCreated, timeUpdated.
func (o LookupConfigurationResultOutput) KmsKeys() GetConfigurationKmsKeyArrayOutput {
	return o.ApplyT(func(v LookupConfigurationResult) []GetConfigurationKmsKey { return v.KmsKeys }).(GetConfigurationKmsKeyArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConfigurationResultOutput{})
}
