// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nosql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Tables in Oracle Cloud Infrastructure NoSQL Database service.
//
// Get a list of tables in a compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Nosql"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Nosql.GetTables(ctx, &nosql.GetTablesArgs{
//				CompartmentId: _var.Compartment_id,
//				Name:          pulumi.StringRef(_var.Table_name),
//				State:         pulumi.StringRef(_var.Table_state),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetTables(ctx *pulumi.Context, args *GetTablesArgs, opts ...pulumi.InvokeOption) (*GetTablesResult, error) {
	var rv GetTablesResult
	err := ctx.Invoke("oci:Nosql/getTables:getTables", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTables.
type GetTablesArgs struct {
	// The ID of a table's compartment.
	CompartmentId string            `pulumi:"compartmentId"`
	Filters       []GetTablesFilter `pulumi:"filters"`
	// A shell-globbing-style (*?[]) filter for names.
	Name *string `pulumi:"name"`
	// Filter list by the lifecycle state of the item.
	State *string `pulumi:"state"`
}

// A collection of values returned by getTables.
type GetTablesResult struct {
	// Compartment Identifier.
	CompartmentId string            `pulumi:"compartmentId"`
	Filters       []GetTablesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The column name.
	Name *string `pulumi:"name"`
	// The state of a table.
	State *string `pulumi:"state"`
	// The list of table_collection.
	TableCollections []GetTablesTableCollection `pulumi:"tableCollections"`
}

func GetTablesOutput(ctx *pulumi.Context, args GetTablesOutputArgs, opts ...pulumi.InvokeOption) GetTablesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTablesResult, error) {
			args := v.(GetTablesArgs)
			r, err := GetTables(ctx, &args, opts...)
			var s GetTablesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetTablesResultOutput)
}

// A collection of arguments for invoking getTables.
type GetTablesOutputArgs struct {
	// The ID of a table's compartment.
	CompartmentId pulumi.StringInput        `pulumi:"compartmentId"`
	Filters       GetTablesFilterArrayInput `pulumi:"filters"`
	// A shell-globbing-style (*?[]) filter for names.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Filter list by the lifecycle state of the item.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetTablesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTablesArgs)(nil)).Elem()
}

// A collection of values returned by getTables.
type GetTablesResultOutput struct{ *pulumi.OutputState }

func (GetTablesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTablesResult)(nil)).Elem()
}

func (o GetTablesResultOutput) ToGetTablesResultOutput() GetTablesResultOutput {
	return o
}

func (o GetTablesResultOutput) ToGetTablesResultOutputWithContext(ctx context.Context) GetTablesResultOutput {
	return o
}

// Compartment Identifier.
func (o GetTablesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTablesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetTablesResultOutput) Filters() GetTablesFilterArrayOutput {
	return o.ApplyT(func(v GetTablesResult) []GetTablesFilter { return v.Filters }).(GetTablesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetTablesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTablesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The column name.
func (o GetTablesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTablesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The state of a table.
func (o GetTablesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTablesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The list of table_collection.
func (o GetTablesResultOutput) TableCollections() GetTablesTableCollectionArrayOutput {
	return o.ApplyT(func(v GetTablesResult) []GetTablesTableCollection { return v.TableCollections }).(GetTablesTableCollectionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTablesResultOutput{})
}
