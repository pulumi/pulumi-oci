// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nosql

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Table Replica resource in Oracle Cloud Infrastructure NoSQL Database service.
//
// # Add a replica for this table
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/nosql"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nosql.NewTableReplica(ctx, "test_table_replica", &nosql.TableReplicaArgs{
//				Region:        pulumi.Any(tableReplicaRegion),
//				TableNameOrId: pulumi.Any(testTableNameOr.Id),
//				CompartmentId: pulumi.Any(compartmentId),
//				MaxReadUnits:  pulumi.Any(tableReplicaMaxReadUnits),
//				MaxWriteUnits: pulumi.Any(tableReplicaMaxWriteUnits),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// TableReplicas can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Nosql/tableReplica:TableReplica test_table_replica "tables/{tableNameOrId}/replicas/{region}"
// ```
type TableReplica struct {
	pulumi.CustomResourceState

	// The OCID of the table's compartment.  Required if the tableNameOrId path parameter is a table name. Optional if tableNameOrId is an OCID.  If tableNameOrId is an OCID, and compartmentId is supplied, the latter must match the identified table's compartmentId.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// Maximum sustained read throughput limit for the new replica table. If not specified, the local table's read limit is used.
	MaxReadUnits pulumi.IntOutput `pulumi:"maxReadUnits"`
	// Maximum sustained write throughput limit for the new replica table. If not specified, the local table's write limit is used.
	MaxWriteUnits pulumi.IntOutput `pulumi:"maxWriteUnits"`
	// Name of the remote region in standard Oracle Cloud Infrastructure format, i.e. us-ashburn-1
	Region pulumi.StringOutput `pulumi:"region"`
	// A table name within the compartment, or a table OCID.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TableNameOrId pulumi.StringOutput `pulumi:"tableNameOrId"`
}

// NewTableReplica registers a new resource with the given unique name, arguments, and options.
func NewTableReplica(ctx *pulumi.Context,
	name string, args *TableReplicaArgs, opts ...pulumi.ResourceOption) (*TableReplica, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	if args.TableNameOrId == nil {
		return nil, errors.New("invalid value for required argument 'TableNameOrId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TableReplica
	err := ctx.RegisterResource("oci:Nosql/tableReplica:TableReplica", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTableReplica gets an existing TableReplica resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTableReplica(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TableReplicaState, opts ...pulumi.ResourceOption) (*TableReplica, error) {
	var resource TableReplica
	err := ctx.ReadResource("oci:Nosql/tableReplica:TableReplica", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TableReplica resources.
type tableReplicaState struct {
	// The OCID of the table's compartment.  Required if the tableNameOrId path parameter is a table name. Optional if tableNameOrId is an OCID.  If tableNameOrId is an OCID, and compartmentId is supplied, the latter must match the identified table's compartmentId.
	CompartmentId *string `pulumi:"compartmentId"`
	// Maximum sustained read throughput limit for the new replica table. If not specified, the local table's read limit is used.
	MaxReadUnits *int `pulumi:"maxReadUnits"`
	// Maximum sustained write throughput limit for the new replica table. If not specified, the local table's write limit is used.
	MaxWriteUnits *int `pulumi:"maxWriteUnits"`
	// Name of the remote region in standard Oracle Cloud Infrastructure format, i.e. us-ashburn-1
	Region *string `pulumi:"region"`
	// A table name within the compartment, or a table OCID.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TableNameOrId *string `pulumi:"tableNameOrId"`
}

type TableReplicaState struct {
	// The OCID of the table's compartment.  Required if the tableNameOrId path parameter is a table name. Optional if tableNameOrId is an OCID.  If tableNameOrId is an OCID, and compartmentId is supplied, the latter must match the identified table's compartmentId.
	CompartmentId pulumi.StringPtrInput
	// Maximum sustained read throughput limit for the new replica table. If not specified, the local table's read limit is used.
	MaxReadUnits pulumi.IntPtrInput
	// Maximum sustained write throughput limit for the new replica table. If not specified, the local table's write limit is used.
	MaxWriteUnits pulumi.IntPtrInput
	// Name of the remote region in standard Oracle Cloud Infrastructure format, i.e. us-ashburn-1
	Region pulumi.StringPtrInput
	// A table name within the compartment, or a table OCID.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TableNameOrId pulumi.StringPtrInput
}

func (TableReplicaState) ElementType() reflect.Type {
	return reflect.TypeOf((*tableReplicaState)(nil)).Elem()
}

type tableReplicaArgs struct {
	// The OCID of the table's compartment.  Required if the tableNameOrId path parameter is a table name. Optional if tableNameOrId is an OCID.  If tableNameOrId is an OCID, and compartmentId is supplied, the latter must match the identified table's compartmentId.
	CompartmentId *string `pulumi:"compartmentId"`
	// Maximum sustained read throughput limit for the new replica table. If not specified, the local table's read limit is used.
	MaxReadUnits *int `pulumi:"maxReadUnits"`
	// Maximum sustained write throughput limit for the new replica table. If not specified, the local table's write limit is used.
	MaxWriteUnits *int `pulumi:"maxWriteUnits"`
	// Name of the remote region in standard Oracle Cloud Infrastructure format, i.e. us-ashburn-1
	Region string `pulumi:"region"`
	// A table name within the compartment, or a table OCID.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TableNameOrId string `pulumi:"tableNameOrId"`
}

// The set of arguments for constructing a TableReplica resource.
type TableReplicaArgs struct {
	// The OCID of the table's compartment.  Required if the tableNameOrId path parameter is a table name. Optional if tableNameOrId is an OCID.  If tableNameOrId is an OCID, and compartmentId is supplied, the latter must match the identified table's compartmentId.
	CompartmentId pulumi.StringPtrInput
	// Maximum sustained read throughput limit for the new replica table. If not specified, the local table's read limit is used.
	MaxReadUnits pulumi.IntPtrInput
	// Maximum sustained write throughput limit for the new replica table. If not specified, the local table's write limit is used.
	MaxWriteUnits pulumi.IntPtrInput
	// Name of the remote region in standard Oracle Cloud Infrastructure format, i.e. us-ashburn-1
	Region pulumi.StringInput
	// A table name within the compartment, or a table OCID.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TableNameOrId pulumi.StringInput
}

func (TableReplicaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tableReplicaArgs)(nil)).Elem()
}

type TableReplicaInput interface {
	pulumi.Input

	ToTableReplicaOutput() TableReplicaOutput
	ToTableReplicaOutputWithContext(ctx context.Context) TableReplicaOutput
}

func (*TableReplica) ElementType() reflect.Type {
	return reflect.TypeOf((**TableReplica)(nil)).Elem()
}

func (i *TableReplica) ToTableReplicaOutput() TableReplicaOutput {
	return i.ToTableReplicaOutputWithContext(context.Background())
}

func (i *TableReplica) ToTableReplicaOutputWithContext(ctx context.Context) TableReplicaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableReplicaOutput)
}

// TableReplicaArrayInput is an input type that accepts TableReplicaArray and TableReplicaArrayOutput values.
// You can construct a concrete instance of `TableReplicaArrayInput` via:
//
//	TableReplicaArray{ TableReplicaArgs{...} }
type TableReplicaArrayInput interface {
	pulumi.Input

	ToTableReplicaArrayOutput() TableReplicaArrayOutput
	ToTableReplicaArrayOutputWithContext(context.Context) TableReplicaArrayOutput
}

type TableReplicaArray []TableReplicaInput

func (TableReplicaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TableReplica)(nil)).Elem()
}

func (i TableReplicaArray) ToTableReplicaArrayOutput() TableReplicaArrayOutput {
	return i.ToTableReplicaArrayOutputWithContext(context.Background())
}

func (i TableReplicaArray) ToTableReplicaArrayOutputWithContext(ctx context.Context) TableReplicaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableReplicaArrayOutput)
}

// TableReplicaMapInput is an input type that accepts TableReplicaMap and TableReplicaMapOutput values.
// You can construct a concrete instance of `TableReplicaMapInput` via:
//
//	TableReplicaMap{ "key": TableReplicaArgs{...} }
type TableReplicaMapInput interface {
	pulumi.Input

	ToTableReplicaMapOutput() TableReplicaMapOutput
	ToTableReplicaMapOutputWithContext(context.Context) TableReplicaMapOutput
}

type TableReplicaMap map[string]TableReplicaInput

func (TableReplicaMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TableReplica)(nil)).Elem()
}

func (i TableReplicaMap) ToTableReplicaMapOutput() TableReplicaMapOutput {
	return i.ToTableReplicaMapOutputWithContext(context.Background())
}

func (i TableReplicaMap) ToTableReplicaMapOutputWithContext(ctx context.Context) TableReplicaMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableReplicaMapOutput)
}

type TableReplicaOutput struct{ *pulumi.OutputState }

func (TableReplicaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TableReplica)(nil)).Elem()
}

func (o TableReplicaOutput) ToTableReplicaOutput() TableReplicaOutput {
	return o
}

func (o TableReplicaOutput) ToTableReplicaOutputWithContext(ctx context.Context) TableReplicaOutput {
	return o
}

// The OCID of the table's compartment.  Required if the tableNameOrId path parameter is a table name. Optional if tableNameOrId is an OCID.  If tableNameOrId is an OCID, and compartmentId is supplied, the latter must match the identified table's compartmentId.
func (o TableReplicaOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *TableReplica) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// Maximum sustained read throughput limit for the new replica table. If not specified, the local table's read limit is used.
func (o TableReplicaOutput) MaxReadUnits() pulumi.IntOutput {
	return o.ApplyT(func(v *TableReplica) pulumi.IntOutput { return v.MaxReadUnits }).(pulumi.IntOutput)
}

// Maximum sustained write throughput limit for the new replica table. If not specified, the local table's write limit is used.
func (o TableReplicaOutput) MaxWriteUnits() pulumi.IntOutput {
	return o.ApplyT(func(v *TableReplica) pulumi.IntOutput { return v.MaxWriteUnits }).(pulumi.IntOutput)
}

// Name of the remote region in standard Oracle Cloud Infrastructure format, i.e. us-ashburn-1
func (o TableReplicaOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *TableReplica) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// A table name within the compartment, or a table OCID.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o TableReplicaOutput) TableNameOrId() pulumi.StringOutput {
	return o.ApplyT(func(v *TableReplica) pulumi.StringOutput { return v.TableNameOrId }).(pulumi.StringOutput)
}

type TableReplicaArrayOutput struct{ *pulumi.OutputState }

func (TableReplicaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TableReplica)(nil)).Elem()
}

func (o TableReplicaArrayOutput) ToTableReplicaArrayOutput() TableReplicaArrayOutput {
	return o
}

func (o TableReplicaArrayOutput) ToTableReplicaArrayOutputWithContext(ctx context.Context) TableReplicaArrayOutput {
	return o
}

func (o TableReplicaArrayOutput) Index(i pulumi.IntInput) TableReplicaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TableReplica {
		return vs[0].([]*TableReplica)[vs[1].(int)]
	}).(TableReplicaOutput)
}

type TableReplicaMapOutput struct{ *pulumi.OutputState }

func (TableReplicaMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TableReplica)(nil)).Elem()
}

func (o TableReplicaMapOutput) ToTableReplicaMapOutput() TableReplicaMapOutput {
	return o
}

func (o TableReplicaMapOutput) ToTableReplicaMapOutputWithContext(ctx context.Context) TableReplicaMapOutput {
	return o
}

func (o TableReplicaMapOutput) MapIndex(k pulumi.StringInput) TableReplicaOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TableReplica {
		return vs[0].(map[string]*TableReplica)[vs[1].(string)]
	}).(TableReplicaOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TableReplicaInput)(nil)).Elem(), &TableReplica{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableReplicaArrayInput)(nil)).Elem(), TableReplicaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableReplicaMapInput)(nil)).Elem(), TableReplicaMap{})
	pulumi.RegisterOutputType(TableReplicaOutput{})
	pulumi.RegisterOutputType(TableReplicaArrayOutput{})
	pulumi.RegisterOutputType(TableReplicaMapOutput{})
}
