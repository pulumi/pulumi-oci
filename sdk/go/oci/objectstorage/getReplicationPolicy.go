// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package objectstorage

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Replication Policy resource in Oracle Cloud Infrastructure Object Storage service.
//
// Get the replication policy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/ObjectStorage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ObjectStorage.GetReplicationPolicy(ctx, &objectstorage.GetReplicationPolicyArgs{
//				Bucket:        replicationPolicyBucket,
//				Namespace:     replicationPolicyNamespace,
//				ReplicationId: testReplication.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupReplicationPolicy(ctx *pulumi.Context, args *LookupReplicationPolicyArgs, opts ...pulumi.InvokeOption) (*LookupReplicationPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupReplicationPolicyResult
	err := ctx.Invoke("oci:ObjectStorage/getReplicationPolicy:getReplicationPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getReplicationPolicy.
type LookupReplicationPolicyArgs struct {
	// The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
	Bucket string `pulumi:"bucket"`
	// The Object Storage namespace used for the request.
	Namespace string `pulumi:"namespace"`
	// The ID of the replication policy.
	ReplicationId string `pulumi:"replicationId"`
}

// A collection of values returned by getReplicationPolicy.
type LookupReplicationPolicyResult struct {
	Bucket string `pulumi:"bucket"`
	// Deprecated: The 'delete_object_in_destination_bucket' field has been deprecated. It is no longer supported.
	DeleteObjectInDestinationBucket string `pulumi:"deleteObjectInDestinationBucket"`
	// The bucket to replicate to in the destination region. Replication policy creation does not automatically create a destination bucket. Create the destination bucket before creating the policy.
	DestinationBucketName string `pulumi:"destinationBucketName"`
	// The destination region to replicate to, for example "us-ashburn-1".
	DestinationRegionName string `pulumi:"destinationRegionName"`
	// The id of the replication policy.
	Id string `pulumi:"id"`
	// The name of the policy.
	Name          string `pulumi:"name"`
	Namespace     string `pulumi:"namespace"`
	ReplicationId string `pulumi:"replicationId"`
	// The replication status of the policy. If the status is CLIENT_ERROR, once the user fixes the issue described in the status message, the status will become ACTIVE.
	Status string `pulumi:"status"`
	// A human-readable description of the status.
	StatusMessage string `pulumi:"statusMessage"`
	// The date when the replication policy was created as per [RFC 3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated string `pulumi:"timeCreated"`
	// Changes made to the source bucket before this time has been replicated.
	TimeLastSync string `pulumi:"timeLastSync"`
}

func LookupReplicationPolicyOutput(ctx *pulumi.Context, args LookupReplicationPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupReplicationPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupReplicationPolicyResult, error) {
			args := v.(LookupReplicationPolicyArgs)
			r, err := LookupReplicationPolicy(ctx, &args, opts...)
			var s LookupReplicationPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupReplicationPolicyResultOutput)
}

// A collection of arguments for invoking getReplicationPolicy.
type LookupReplicationPolicyOutputArgs struct {
	// The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// The Object Storage namespace used for the request.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The ID of the replication policy.
	ReplicationId pulumi.StringInput `pulumi:"replicationId"`
}

func (LookupReplicationPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupReplicationPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getReplicationPolicy.
type LookupReplicationPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupReplicationPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupReplicationPolicyResult)(nil)).Elem()
}

func (o LookupReplicationPolicyResultOutput) ToLookupReplicationPolicyResultOutput() LookupReplicationPolicyResultOutput {
	return o
}

func (o LookupReplicationPolicyResultOutput) ToLookupReplicationPolicyResultOutputWithContext(ctx context.Context) LookupReplicationPolicyResultOutput {
	return o
}

func (o LookupReplicationPolicyResultOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReplicationPolicyResult) string { return v.Bucket }).(pulumi.StringOutput)
}

// Deprecated: The 'delete_object_in_destination_bucket' field has been deprecated. It is no longer supported.
func (o LookupReplicationPolicyResultOutput) DeleteObjectInDestinationBucket() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReplicationPolicyResult) string { return v.DeleteObjectInDestinationBucket }).(pulumi.StringOutput)
}

// The bucket to replicate to in the destination region. Replication policy creation does not automatically create a destination bucket. Create the destination bucket before creating the policy.
func (o LookupReplicationPolicyResultOutput) DestinationBucketName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReplicationPolicyResult) string { return v.DestinationBucketName }).(pulumi.StringOutput)
}

// The destination region to replicate to, for example "us-ashburn-1".
func (o LookupReplicationPolicyResultOutput) DestinationRegionName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReplicationPolicyResult) string { return v.DestinationRegionName }).(pulumi.StringOutput)
}

// The id of the replication policy.
func (o LookupReplicationPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReplicationPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the policy.
func (o LookupReplicationPolicyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReplicationPolicyResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupReplicationPolicyResultOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReplicationPolicyResult) string { return v.Namespace }).(pulumi.StringOutput)
}

func (o LookupReplicationPolicyResultOutput) ReplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReplicationPolicyResult) string { return v.ReplicationId }).(pulumi.StringOutput)
}

// The replication status of the policy. If the status is CLIENT_ERROR, once the user fixes the issue described in the status message, the status will become ACTIVE.
func (o LookupReplicationPolicyResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReplicationPolicyResult) string { return v.Status }).(pulumi.StringOutput)
}

// A human-readable description of the status.
func (o LookupReplicationPolicyResultOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReplicationPolicyResult) string { return v.StatusMessage }).(pulumi.StringOutput)
}

// The date when the replication policy was created as per [RFC 3339](https://tools.ietf.org/html/rfc3339).
func (o LookupReplicationPolicyResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReplicationPolicyResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Changes made to the source bucket before this time has been replicated.
func (o LookupReplicationPolicyResultOutput) TimeLastSync() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReplicationPolicyResult) string { return v.TimeLastSync }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupReplicationPolicyResultOutput{})
}
