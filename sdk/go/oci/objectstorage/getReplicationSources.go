// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package objectstorage

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Replication Sources in Oracle Cloud Infrastructure Object Storage service.
//
// List the replication sources of a destination bucket.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/ObjectStorage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ObjectStorage.GetReplicationSources(ctx, &objectstorage.GetReplicationSourcesArgs{
//				Bucket:    _var.Replication_source_bucket,
//				Namespace: _var.Replication_source_namespace,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetReplicationSources(ctx *pulumi.Context, args *GetReplicationSourcesArgs, opts ...pulumi.InvokeOption) (*GetReplicationSourcesResult, error) {
	var rv GetReplicationSourcesResult
	err := ctx.Invoke("oci:ObjectStorage/getReplicationSources:getReplicationSources", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getReplicationSources.
type GetReplicationSourcesArgs struct {
	// The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
	Bucket  string                        `pulumi:"bucket"`
	Filters []GetReplicationSourcesFilter `pulumi:"filters"`
	// The Object Storage namespace used for the request.
	Namespace string `pulumi:"namespace"`
}

// A collection of values returned by getReplicationSources.
type GetReplicationSourcesResult struct {
	Bucket  string                        `pulumi:"bucket"`
	Filters []GetReplicationSourcesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id        string `pulumi:"id"`
	Namespace string `pulumi:"namespace"`
	// The list of replication_sources.
	ReplicationSources []GetReplicationSourcesReplicationSource `pulumi:"replicationSources"`
}

func GetReplicationSourcesOutput(ctx *pulumi.Context, args GetReplicationSourcesOutputArgs, opts ...pulumi.InvokeOption) GetReplicationSourcesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetReplicationSourcesResult, error) {
			args := v.(GetReplicationSourcesArgs)
			r, err := GetReplicationSources(ctx, &args, opts...)
			var s GetReplicationSourcesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetReplicationSourcesResultOutput)
}

// A collection of arguments for invoking getReplicationSources.
type GetReplicationSourcesOutputArgs struct {
	// The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
	Bucket  pulumi.StringInput                    `pulumi:"bucket"`
	Filters GetReplicationSourcesFilterArrayInput `pulumi:"filters"`
	// The Object Storage namespace used for the request.
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (GetReplicationSourcesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicationSourcesArgs)(nil)).Elem()
}

// A collection of values returned by getReplicationSources.
type GetReplicationSourcesResultOutput struct{ *pulumi.OutputState }

func (GetReplicationSourcesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicationSourcesResult)(nil)).Elem()
}

func (o GetReplicationSourcesResultOutput) ToGetReplicationSourcesResultOutput() GetReplicationSourcesResultOutput {
	return o
}

func (o GetReplicationSourcesResultOutput) ToGetReplicationSourcesResultOutputWithContext(ctx context.Context) GetReplicationSourcesResultOutput {
	return o
}

func (o GetReplicationSourcesResultOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationSourcesResult) string { return v.Bucket }).(pulumi.StringOutput)
}

func (o GetReplicationSourcesResultOutput) Filters() GetReplicationSourcesFilterArrayOutput {
	return o.ApplyT(func(v GetReplicationSourcesResult) []GetReplicationSourcesFilter { return v.Filters }).(GetReplicationSourcesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetReplicationSourcesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationSourcesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetReplicationSourcesResultOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationSourcesResult) string { return v.Namespace }).(pulumi.StringOutput)
}

// The list of replication_sources.
func (o GetReplicationSourcesResultOutput) ReplicationSources() GetReplicationSourcesReplicationSourceArrayOutput {
	return o.ApplyT(func(v GetReplicationSourcesResult) []GetReplicationSourcesReplicationSource {
		return v.ReplicationSources
	}).(GetReplicationSourcesReplicationSourceArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetReplicationSourcesResultOutput{})
}
