// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package objectstorage

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-oci/sdk/go/oci"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "oci:ObjectStorage/bucket:Bucket":
		r = &Bucket{}
	case "oci:ObjectStorage/namespaceMetadata:NamespaceMetadata":
		r = &NamespaceMetadata{}
	case "oci:ObjectStorage/objectLifecyclePolicy:ObjectLifecyclePolicy":
		r = &ObjectLifecyclePolicy{}
	case "oci:ObjectStorage/preauthrequest:Preauthrequest":
		r = &Preauthrequest{}
	case "oci:ObjectStorage/replicationPolicy:ReplicationPolicy":
		r = &ReplicationPolicy{}
	case "oci:ObjectStorage/storageObject:StorageObject":
		r = &StorageObject{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := oci.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"oci",
		"ObjectStorage/bucket",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"ObjectStorage/namespaceMetadata",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"ObjectStorage/objectLifecyclePolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"ObjectStorage/preauthrequest",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"ObjectStorage/replicationPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"ObjectStorage/storageObject",
		&module{version},
	)
}
