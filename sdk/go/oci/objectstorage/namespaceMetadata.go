// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package objectstorage

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NamespaceMetadata struct {
	pulumi.CustomResourceState

	DefaultS3compartmentId    pulumi.StringOutput `pulumi:"defaultS3compartmentId"`
	DefaultSwiftCompartmentId pulumi.StringOutput `pulumi:"defaultSwiftCompartmentId"`
	Namespace                 pulumi.StringOutput `pulumi:"namespace"`
}

// NewNamespaceMetadata registers a new resource with the given unique name, arguments, and options.
func NewNamespaceMetadata(ctx *pulumi.Context,
	name string, args *NamespaceMetadataArgs, opts ...pulumi.ResourceOption) (*NamespaceMetadata, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Namespace == nil {
		return nil, errors.New("invalid value for required argument 'Namespace'")
	}
	var resource NamespaceMetadata
	err := ctx.RegisterResource("oci:ObjectStorage/namespaceMetadata:NamespaceMetadata", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNamespaceMetadata gets an existing NamespaceMetadata resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNamespaceMetadata(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NamespaceMetadataState, opts ...pulumi.ResourceOption) (*NamespaceMetadata, error) {
	var resource NamespaceMetadata
	err := ctx.ReadResource("oci:ObjectStorage/namespaceMetadata:NamespaceMetadata", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NamespaceMetadata resources.
type namespaceMetadataState struct {
	DefaultS3compartmentId    *string `pulumi:"defaultS3compartmentId"`
	DefaultSwiftCompartmentId *string `pulumi:"defaultSwiftCompartmentId"`
	Namespace                 *string `pulumi:"namespace"`
}

type NamespaceMetadataState struct {
	DefaultS3compartmentId    pulumi.StringPtrInput
	DefaultSwiftCompartmentId pulumi.StringPtrInput
	Namespace                 pulumi.StringPtrInput
}

func (NamespaceMetadataState) ElementType() reflect.Type {
	return reflect.TypeOf((*namespaceMetadataState)(nil)).Elem()
}

type namespaceMetadataArgs struct {
	DefaultS3compartmentId    *string `pulumi:"defaultS3compartmentId"`
	DefaultSwiftCompartmentId *string `pulumi:"defaultSwiftCompartmentId"`
	Namespace                 string  `pulumi:"namespace"`
}

// The set of arguments for constructing a NamespaceMetadata resource.
type NamespaceMetadataArgs struct {
	DefaultS3compartmentId    pulumi.StringPtrInput
	DefaultSwiftCompartmentId pulumi.StringPtrInput
	Namespace                 pulumi.StringInput
}

func (NamespaceMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*namespaceMetadataArgs)(nil)).Elem()
}

type NamespaceMetadataInput interface {
	pulumi.Input

	ToNamespaceMetadataOutput() NamespaceMetadataOutput
	ToNamespaceMetadataOutputWithContext(ctx context.Context) NamespaceMetadataOutput
}

func (*NamespaceMetadata) ElementType() reflect.Type {
	return reflect.TypeOf((**NamespaceMetadata)(nil)).Elem()
}

func (i *NamespaceMetadata) ToNamespaceMetadataOutput() NamespaceMetadataOutput {
	return i.ToNamespaceMetadataOutputWithContext(context.Background())
}

func (i *NamespaceMetadata) ToNamespaceMetadataOutputWithContext(ctx context.Context) NamespaceMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceMetadataOutput)
}

// NamespaceMetadataArrayInput is an input type that accepts NamespaceMetadataArray and NamespaceMetadataArrayOutput values.
// You can construct a concrete instance of `NamespaceMetadataArrayInput` via:
//
//	NamespaceMetadataArray{ NamespaceMetadataArgs{...} }
type NamespaceMetadataArrayInput interface {
	pulumi.Input

	ToNamespaceMetadataArrayOutput() NamespaceMetadataArrayOutput
	ToNamespaceMetadataArrayOutputWithContext(context.Context) NamespaceMetadataArrayOutput
}

type NamespaceMetadataArray []NamespaceMetadataInput

func (NamespaceMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NamespaceMetadata)(nil)).Elem()
}

func (i NamespaceMetadataArray) ToNamespaceMetadataArrayOutput() NamespaceMetadataArrayOutput {
	return i.ToNamespaceMetadataArrayOutputWithContext(context.Background())
}

func (i NamespaceMetadataArray) ToNamespaceMetadataArrayOutputWithContext(ctx context.Context) NamespaceMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceMetadataArrayOutput)
}

// NamespaceMetadataMapInput is an input type that accepts NamespaceMetadataMap and NamespaceMetadataMapOutput values.
// You can construct a concrete instance of `NamespaceMetadataMapInput` via:
//
//	NamespaceMetadataMap{ "key": NamespaceMetadataArgs{...} }
type NamespaceMetadataMapInput interface {
	pulumi.Input

	ToNamespaceMetadataMapOutput() NamespaceMetadataMapOutput
	ToNamespaceMetadataMapOutputWithContext(context.Context) NamespaceMetadataMapOutput
}

type NamespaceMetadataMap map[string]NamespaceMetadataInput

func (NamespaceMetadataMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NamespaceMetadata)(nil)).Elem()
}

func (i NamespaceMetadataMap) ToNamespaceMetadataMapOutput() NamespaceMetadataMapOutput {
	return i.ToNamespaceMetadataMapOutputWithContext(context.Background())
}

func (i NamespaceMetadataMap) ToNamespaceMetadataMapOutputWithContext(ctx context.Context) NamespaceMetadataMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceMetadataMapOutput)
}

type NamespaceMetadataOutput struct{ *pulumi.OutputState }

func (NamespaceMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NamespaceMetadata)(nil)).Elem()
}

func (o NamespaceMetadataOutput) ToNamespaceMetadataOutput() NamespaceMetadataOutput {
	return o
}

func (o NamespaceMetadataOutput) ToNamespaceMetadataOutputWithContext(ctx context.Context) NamespaceMetadataOutput {
	return o
}

func (o NamespaceMetadataOutput) DefaultS3compartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *NamespaceMetadata) pulumi.StringOutput { return v.DefaultS3compartmentId }).(pulumi.StringOutput)
}

func (o NamespaceMetadataOutput) DefaultSwiftCompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *NamespaceMetadata) pulumi.StringOutput { return v.DefaultSwiftCompartmentId }).(pulumi.StringOutput)
}

func (o NamespaceMetadataOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v *NamespaceMetadata) pulumi.StringOutput { return v.Namespace }).(pulumi.StringOutput)
}

type NamespaceMetadataArrayOutput struct{ *pulumi.OutputState }

func (NamespaceMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NamespaceMetadata)(nil)).Elem()
}

func (o NamespaceMetadataArrayOutput) ToNamespaceMetadataArrayOutput() NamespaceMetadataArrayOutput {
	return o
}

func (o NamespaceMetadataArrayOutput) ToNamespaceMetadataArrayOutputWithContext(ctx context.Context) NamespaceMetadataArrayOutput {
	return o
}

func (o NamespaceMetadataArrayOutput) Index(i pulumi.IntInput) NamespaceMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NamespaceMetadata {
		return vs[0].([]*NamespaceMetadata)[vs[1].(int)]
	}).(NamespaceMetadataOutput)
}

type NamespaceMetadataMapOutput struct{ *pulumi.OutputState }

func (NamespaceMetadataMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NamespaceMetadata)(nil)).Elem()
}

func (o NamespaceMetadataMapOutput) ToNamespaceMetadataMapOutput() NamespaceMetadataMapOutput {
	return o
}

func (o NamespaceMetadataMapOutput) ToNamespaceMetadataMapOutputWithContext(ctx context.Context) NamespaceMetadataMapOutput {
	return o
}

func (o NamespaceMetadataMapOutput) MapIndex(k pulumi.StringInput) NamespaceMetadataOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NamespaceMetadata {
		return vs[0].(map[string]*NamespaceMetadata)[vs[1].(string)]
	}).(NamespaceMetadataOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NamespaceMetadataInput)(nil)).Elem(), &NamespaceMetadata{})
	pulumi.RegisterInputType(reflect.TypeOf((*NamespaceMetadataArrayInput)(nil)).Elem(), NamespaceMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NamespaceMetadataMapInput)(nil)).Elem(), NamespaceMetadataMap{})
	pulumi.RegisterOutputType(NamespaceMetadataOutput{})
	pulumi.RegisterOutputType(NamespaceMetadataArrayOutput{})
	pulumi.RegisterOutputType(NamespaceMetadataMapOutput{})
}
