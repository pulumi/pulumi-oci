// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package oce

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Oce Instances in Oracle Cloud Infrastructure Content and Experience service.
//
// Returns a list of OceInstances.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Oce"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Oce.GetOceInstances(ctx, &oce.GetOceInstancesArgs{
//				CompartmentId: _var.Compartment_id,
//				DisplayName:   pulumi.StringRef(_var.Oce_instance_display_name),
//				State:         pulumi.StringRef(_var.Oce_instance_state),
//				TenancyId:     pulumi.StringRef(oci_identity_tenancy.Test_tenancy.Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetOceInstances(ctx *pulumi.Context, args *GetOceInstancesArgs, opts ...pulumi.InvokeOption) (*GetOceInstancesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetOceInstancesResult
	err := ctx.Invoke("oci:Oce/getOceInstances:getOceInstances", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOceInstances.
type GetOceInstancesArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName *string                 `pulumi:"displayName"`
	Filters     []GetOceInstancesFilter `pulumi:"filters"`
	// Filter results on lifecycleState.
	State *string `pulumi:"state"`
	// The ID of the tenancy in which to list resources.
	TenancyId *string `pulumi:"tenancyId"`
}

// A collection of values returned by getOceInstances.
type GetOceInstancesResult struct {
	// Compartment Identifier
	CompartmentId string                  `pulumi:"compartmentId"`
	DisplayName   *string                 `pulumi:"displayName"`
	Filters       []GetOceInstancesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id *string `pulumi:"id"`
	// The list of oce_instances.
	OceInstances []GetOceInstancesOceInstance `pulumi:"oceInstances"`
	// The current state of the instance lifecycle.
	State *string `pulumi:"state"`
	// Tenancy Identifier
	TenancyId *string `pulumi:"tenancyId"`
}

func GetOceInstancesOutput(ctx *pulumi.Context, args GetOceInstancesOutputArgs, opts ...pulumi.InvokeOption) GetOceInstancesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetOceInstancesResult, error) {
			args := v.(GetOceInstancesArgs)
			r, err := GetOceInstances(ctx, &args, opts...)
			var s GetOceInstancesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetOceInstancesResultOutput)
}

// A collection of arguments for invoking getOceInstances.
type GetOceInstancesOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName pulumi.StringPtrInput           `pulumi:"displayName"`
	Filters     GetOceInstancesFilterArrayInput `pulumi:"filters"`
	// Filter results on lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The ID of the tenancy in which to list resources.
	TenancyId pulumi.StringPtrInput `pulumi:"tenancyId"`
}

func (GetOceInstancesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOceInstancesArgs)(nil)).Elem()
}

// A collection of values returned by getOceInstances.
type GetOceInstancesResultOutput struct{ *pulumi.OutputState }

func (GetOceInstancesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOceInstancesResult)(nil)).Elem()
}

func (o GetOceInstancesResultOutput) ToGetOceInstancesResultOutput() GetOceInstancesResultOutput {
	return o
}

func (o GetOceInstancesResultOutput) ToGetOceInstancesResultOutputWithContext(ctx context.Context) GetOceInstancesResultOutput {
	return o
}

// Compartment Identifier
func (o GetOceInstancesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOceInstancesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetOceInstancesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOceInstancesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetOceInstancesResultOutput) Filters() GetOceInstancesFilterArrayOutput {
	return o.ApplyT(func(v GetOceInstancesResult) []GetOceInstancesFilter { return v.Filters }).(GetOceInstancesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetOceInstancesResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOceInstancesResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The list of oce_instances.
func (o GetOceInstancesResultOutput) OceInstances() GetOceInstancesOceInstanceArrayOutput {
	return o.ApplyT(func(v GetOceInstancesResult) []GetOceInstancesOceInstance { return v.OceInstances }).(GetOceInstancesOceInstanceArrayOutput)
}

// The current state of the instance lifecycle.
func (o GetOceInstancesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOceInstancesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Tenancy Identifier
func (o GetOceInstancesResultOutput) TenancyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOceInstancesResult) *string { return v.TenancyId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetOceInstancesResultOutput{})
}
