// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oce

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetOceInstancesFilter struct {
	// OceInstance Name
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetOceInstancesFilterInput is an input type that accepts GetOceInstancesFilterArgs and GetOceInstancesFilterOutput values.
// You can construct a concrete instance of `GetOceInstancesFilterInput` via:
//
//	GetOceInstancesFilterArgs{...}
type GetOceInstancesFilterInput interface {
	pulumi.Input

	ToGetOceInstancesFilterOutput() GetOceInstancesFilterOutput
	ToGetOceInstancesFilterOutputWithContext(context.Context) GetOceInstancesFilterOutput
}

type GetOceInstancesFilterArgs struct {
	// OceInstance Name
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetOceInstancesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOceInstancesFilter)(nil)).Elem()
}

func (i GetOceInstancesFilterArgs) ToGetOceInstancesFilterOutput() GetOceInstancesFilterOutput {
	return i.ToGetOceInstancesFilterOutputWithContext(context.Background())
}

func (i GetOceInstancesFilterArgs) ToGetOceInstancesFilterOutputWithContext(ctx context.Context) GetOceInstancesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOceInstancesFilterOutput)
}

// GetOceInstancesFilterArrayInput is an input type that accepts GetOceInstancesFilterArray and GetOceInstancesFilterArrayOutput values.
// You can construct a concrete instance of `GetOceInstancesFilterArrayInput` via:
//
//	GetOceInstancesFilterArray{ GetOceInstancesFilterArgs{...} }
type GetOceInstancesFilterArrayInput interface {
	pulumi.Input

	ToGetOceInstancesFilterArrayOutput() GetOceInstancesFilterArrayOutput
	ToGetOceInstancesFilterArrayOutputWithContext(context.Context) GetOceInstancesFilterArrayOutput
}

type GetOceInstancesFilterArray []GetOceInstancesFilterInput

func (GetOceInstancesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOceInstancesFilter)(nil)).Elem()
}

func (i GetOceInstancesFilterArray) ToGetOceInstancesFilterArrayOutput() GetOceInstancesFilterArrayOutput {
	return i.ToGetOceInstancesFilterArrayOutputWithContext(context.Background())
}

func (i GetOceInstancesFilterArray) ToGetOceInstancesFilterArrayOutputWithContext(ctx context.Context) GetOceInstancesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOceInstancesFilterArrayOutput)
}

type GetOceInstancesFilterOutput struct{ *pulumi.OutputState }

func (GetOceInstancesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOceInstancesFilter)(nil)).Elem()
}

func (o GetOceInstancesFilterOutput) ToGetOceInstancesFilterOutput() GetOceInstancesFilterOutput {
	return o
}

func (o GetOceInstancesFilterOutput) ToGetOceInstancesFilterOutputWithContext(ctx context.Context) GetOceInstancesFilterOutput {
	return o
}

// OceInstance Name
func (o GetOceInstancesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOceInstancesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetOceInstancesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetOceInstancesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetOceInstancesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOceInstancesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetOceInstancesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetOceInstancesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOceInstancesFilter)(nil)).Elem()
}

func (o GetOceInstancesFilterArrayOutput) ToGetOceInstancesFilterArrayOutput() GetOceInstancesFilterArrayOutput {
	return o
}

func (o GetOceInstancesFilterArrayOutput) ToGetOceInstancesFilterArrayOutputWithContext(ctx context.Context) GetOceInstancesFilterArrayOutput {
	return o
}

func (o GetOceInstancesFilterArrayOutput) Index(i pulumi.IntInput) GetOceInstancesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOceInstancesFilter {
		return vs[0].([]GetOceInstancesFilter)[vs[1].(int)]
	}).(GetOceInstancesFilterOutput)
}

type GetOceInstancesOceInstance struct {
	// a list of add-on features for the ocm instance
	AddOnFeatures []string `pulumi:"addOnFeatures"`
	// Admin Email for Notification
	AdminEmail string `pulumi:"adminEmail"`
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// OceInstance description, can be updated
	Description string `pulumi:"description"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Unique GUID identifier that is immutable on creation
	Guid string `pulumi:"guid"`
	// Unique identifier that is immutable on creation
	Id              string `pulumi:"id"`
	IdcsAccessToken string `pulumi:"idcsAccessToken"`
	// IDCS Tenancy Identifier
	IdcsTenancy string `pulumi:"idcsTenancy"`
	// Flag indicating whether the instance access is private or public
	InstanceAccessType string `pulumi:"instanceAccessType"`
	// Flag indicating whether the instance license is new cloud or bring your own license
	InstanceLicenseType string `pulumi:"instanceLicenseType"`
	// Instance type based on its usage
	InstanceUsageType string `pulumi:"instanceUsageType"`
	// Details of the current state of the instance lifecycle
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// OceInstance Name
	Name string `pulumi:"name"`
	// Object Storage Namespace of tenancy
	ObjectStorageNamespace string `pulumi:"objectStorageNamespace"`
	// SERVICE data. Example: `{"service": {"IDCS": "value"}}`
	Service map[string]interface{} `pulumi:"service"`
	// Filter results on lifecycleState.
	State string `pulumi:"state"`
	// An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	StateMessage string `pulumi:"stateMessage"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The ID of the tenancy in which to list resources.
	TenancyId string `pulumi:"tenancyId"`
	// Tenancy Name
	TenancyName string `pulumi:"tenancyName"`
	// The time the the OceInstance was created. An RFC3339 formatted datetime string
	TimeCreated string `pulumi:"timeCreated"`
	// The time the OceInstance was updated. An RFC3339 formatted datetime string
	TimeUpdated string `pulumi:"timeUpdated"`
	// Upgrade schedule type representing service to be upgraded immediately whenever latest version is released or delay upgrade of the service to previous released version
	UpgradeSchedule string `pulumi:"upgradeSchedule"`
	// Web Application Firewall(WAF) primary domain
	WafPrimaryDomain string `pulumi:"wafPrimaryDomain"`
}

// GetOceInstancesOceInstanceInput is an input type that accepts GetOceInstancesOceInstanceArgs and GetOceInstancesOceInstanceOutput values.
// You can construct a concrete instance of `GetOceInstancesOceInstanceInput` via:
//
//	GetOceInstancesOceInstanceArgs{...}
type GetOceInstancesOceInstanceInput interface {
	pulumi.Input

	ToGetOceInstancesOceInstanceOutput() GetOceInstancesOceInstanceOutput
	ToGetOceInstancesOceInstanceOutputWithContext(context.Context) GetOceInstancesOceInstanceOutput
}

type GetOceInstancesOceInstanceArgs struct {
	// a list of add-on features for the ocm instance
	AddOnFeatures pulumi.StringArrayInput `pulumi:"addOnFeatures"`
	// Admin Email for Notification
	AdminEmail pulumi.StringInput `pulumi:"adminEmail"`
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// OceInstance description, can be updated
	Description pulumi.StringInput `pulumi:"description"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// Unique GUID identifier that is immutable on creation
	Guid pulumi.StringInput `pulumi:"guid"`
	// Unique identifier that is immutable on creation
	Id              pulumi.StringInput `pulumi:"id"`
	IdcsAccessToken pulumi.StringInput `pulumi:"idcsAccessToken"`
	// IDCS Tenancy Identifier
	IdcsTenancy pulumi.StringInput `pulumi:"idcsTenancy"`
	// Flag indicating whether the instance access is private or public
	InstanceAccessType pulumi.StringInput `pulumi:"instanceAccessType"`
	// Flag indicating whether the instance license is new cloud or bring your own license
	InstanceLicenseType pulumi.StringInput `pulumi:"instanceLicenseType"`
	// Instance type based on its usage
	InstanceUsageType pulumi.StringInput `pulumi:"instanceUsageType"`
	// Details of the current state of the instance lifecycle
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// OceInstance Name
	Name pulumi.StringInput `pulumi:"name"`
	// Object Storage Namespace of tenancy
	ObjectStorageNamespace pulumi.StringInput `pulumi:"objectStorageNamespace"`
	// SERVICE data. Example: `{"service": {"IDCS": "value"}}`
	Service pulumi.MapInput `pulumi:"service"`
	// Filter results on lifecycleState.
	State pulumi.StringInput `pulumi:"state"`
	// An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	StateMessage pulumi.StringInput `pulumi:"stateMessage"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// The ID of the tenancy in which to list resources.
	TenancyId pulumi.StringInput `pulumi:"tenancyId"`
	// Tenancy Name
	TenancyName pulumi.StringInput `pulumi:"tenancyName"`
	// The time the the OceInstance was created. An RFC3339 formatted datetime string
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the OceInstance was updated. An RFC3339 formatted datetime string
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// Upgrade schedule type representing service to be upgraded immediately whenever latest version is released or delay upgrade of the service to previous released version
	UpgradeSchedule pulumi.StringInput `pulumi:"upgradeSchedule"`
	// Web Application Firewall(WAF) primary domain
	WafPrimaryDomain pulumi.StringInput `pulumi:"wafPrimaryDomain"`
}

func (GetOceInstancesOceInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOceInstancesOceInstance)(nil)).Elem()
}

func (i GetOceInstancesOceInstanceArgs) ToGetOceInstancesOceInstanceOutput() GetOceInstancesOceInstanceOutput {
	return i.ToGetOceInstancesOceInstanceOutputWithContext(context.Background())
}

func (i GetOceInstancesOceInstanceArgs) ToGetOceInstancesOceInstanceOutputWithContext(ctx context.Context) GetOceInstancesOceInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOceInstancesOceInstanceOutput)
}

// GetOceInstancesOceInstanceArrayInput is an input type that accepts GetOceInstancesOceInstanceArray and GetOceInstancesOceInstanceArrayOutput values.
// You can construct a concrete instance of `GetOceInstancesOceInstanceArrayInput` via:
//
//	GetOceInstancesOceInstanceArray{ GetOceInstancesOceInstanceArgs{...} }
type GetOceInstancesOceInstanceArrayInput interface {
	pulumi.Input

	ToGetOceInstancesOceInstanceArrayOutput() GetOceInstancesOceInstanceArrayOutput
	ToGetOceInstancesOceInstanceArrayOutputWithContext(context.Context) GetOceInstancesOceInstanceArrayOutput
}

type GetOceInstancesOceInstanceArray []GetOceInstancesOceInstanceInput

func (GetOceInstancesOceInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOceInstancesOceInstance)(nil)).Elem()
}

func (i GetOceInstancesOceInstanceArray) ToGetOceInstancesOceInstanceArrayOutput() GetOceInstancesOceInstanceArrayOutput {
	return i.ToGetOceInstancesOceInstanceArrayOutputWithContext(context.Background())
}

func (i GetOceInstancesOceInstanceArray) ToGetOceInstancesOceInstanceArrayOutputWithContext(ctx context.Context) GetOceInstancesOceInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOceInstancesOceInstanceArrayOutput)
}

type GetOceInstancesOceInstanceOutput struct{ *pulumi.OutputState }

func (GetOceInstancesOceInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOceInstancesOceInstance)(nil)).Elem()
}

func (o GetOceInstancesOceInstanceOutput) ToGetOceInstancesOceInstanceOutput() GetOceInstancesOceInstanceOutput {
	return o
}

func (o GetOceInstancesOceInstanceOutput) ToGetOceInstancesOceInstanceOutputWithContext(ctx context.Context) GetOceInstancesOceInstanceOutput {
	return o
}

// a list of add-on features for the ocm instance
func (o GetOceInstancesOceInstanceOutput) AddOnFeatures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOceInstancesOceInstance) []string { return v.AddOnFeatures }).(pulumi.StringArrayOutput)
}

// Admin Email for Notification
func (o GetOceInstancesOceInstanceOutput) AdminEmail() pulumi.StringOutput {
	return o.ApplyT(func(v GetOceInstancesOceInstance) string { return v.AdminEmail }).(pulumi.StringOutput)
}

// The ID of the compartment in which to list resources.
func (o GetOceInstancesOceInstanceOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOceInstancesOceInstance) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetOceInstancesOceInstanceOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetOceInstancesOceInstance) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// OceInstance description, can be updated
func (o GetOceInstancesOceInstanceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetOceInstancesOceInstance) string { return v.Description }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetOceInstancesOceInstanceOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetOceInstancesOceInstance) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// Unique GUID identifier that is immutable on creation
func (o GetOceInstancesOceInstanceOutput) Guid() pulumi.StringOutput {
	return o.ApplyT(func(v GetOceInstancesOceInstance) string { return v.Guid }).(pulumi.StringOutput)
}

// Unique identifier that is immutable on creation
func (o GetOceInstancesOceInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOceInstancesOceInstance) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetOceInstancesOceInstanceOutput) IdcsAccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetOceInstancesOceInstance) string { return v.IdcsAccessToken }).(pulumi.StringOutput)
}

// IDCS Tenancy Identifier
func (o GetOceInstancesOceInstanceOutput) IdcsTenancy() pulumi.StringOutput {
	return o.ApplyT(func(v GetOceInstancesOceInstance) string { return v.IdcsTenancy }).(pulumi.StringOutput)
}

// Flag indicating whether the instance access is private or public
func (o GetOceInstancesOceInstanceOutput) InstanceAccessType() pulumi.StringOutput {
	return o.ApplyT(func(v GetOceInstancesOceInstance) string { return v.InstanceAccessType }).(pulumi.StringOutput)
}

// Flag indicating whether the instance license is new cloud or bring your own license
func (o GetOceInstancesOceInstanceOutput) InstanceLicenseType() pulumi.StringOutput {
	return o.ApplyT(func(v GetOceInstancesOceInstance) string { return v.InstanceLicenseType }).(pulumi.StringOutput)
}

// Instance type based on its usage
func (o GetOceInstancesOceInstanceOutput) InstanceUsageType() pulumi.StringOutput {
	return o.ApplyT(func(v GetOceInstancesOceInstance) string { return v.InstanceUsageType }).(pulumi.StringOutput)
}

// Details of the current state of the instance lifecycle
func (o GetOceInstancesOceInstanceOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetOceInstancesOceInstance) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// OceInstance Name
func (o GetOceInstancesOceInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOceInstancesOceInstance) string { return v.Name }).(pulumi.StringOutput)
}

// Object Storage Namespace of tenancy
func (o GetOceInstancesOceInstanceOutput) ObjectStorageNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetOceInstancesOceInstance) string { return v.ObjectStorageNamespace }).(pulumi.StringOutput)
}

// SERVICE data. Example: `{"service": {"IDCS": "value"}}`
func (o GetOceInstancesOceInstanceOutput) Service() pulumi.MapOutput {
	return o.ApplyT(func(v GetOceInstancesOceInstance) map[string]interface{} { return v.Service }).(pulumi.MapOutput)
}

// Filter results on lifecycleState.
func (o GetOceInstancesOceInstanceOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetOceInstancesOceInstance) string { return v.State }).(pulumi.StringOutput)
}

// An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetOceInstancesOceInstanceOutput) StateMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetOceInstancesOceInstance) string { return v.StateMessage }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetOceInstancesOceInstanceOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetOceInstancesOceInstance) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The ID of the tenancy in which to list resources.
func (o GetOceInstancesOceInstanceOutput) TenancyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOceInstancesOceInstance) string { return v.TenancyId }).(pulumi.StringOutput)
}

// Tenancy Name
func (o GetOceInstancesOceInstanceOutput) TenancyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOceInstancesOceInstance) string { return v.TenancyName }).(pulumi.StringOutput)
}

// The time the the OceInstance was created. An RFC3339 formatted datetime string
func (o GetOceInstancesOceInstanceOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetOceInstancesOceInstance) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the OceInstance was updated. An RFC3339 formatted datetime string
func (o GetOceInstancesOceInstanceOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetOceInstancesOceInstance) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Upgrade schedule type representing service to be upgraded immediately whenever latest version is released or delay upgrade of the service to previous released version
func (o GetOceInstancesOceInstanceOutput) UpgradeSchedule() pulumi.StringOutput {
	return o.ApplyT(func(v GetOceInstancesOceInstance) string { return v.UpgradeSchedule }).(pulumi.StringOutput)
}

// Web Application Firewall(WAF) primary domain
func (o GetOceInstancesOceInstanceOutput) WafPrimaryDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetOceInstancesOceInstance) string { return v.WafPrimaryDomain }).(pulumi.StringOutput)
}

type GetOceInstancesOceInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetOceInstancesOceInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOceInstancesOceInstance)(nil)).Elem()
}

func (o GetOceInstancesOceInstanceArrayOutput) ToGetOceInstancesOceInstanceArrayOutput() GetOceInstancesOceInstanceArrayOutput {
	return o
}

func (o GetOceInstancesOceInstanceArrayOutput) ToGetOceInstancesOceInstanceArrayOutputWithContext(ctx context.Context) GetOceInstancesOceInstanceArrayOutput {
	return o
}

func (o GetOceInstancesOceInstanceArrayOutput) Index(i pulumi.IntInput) GetOceInstancesOceInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOceInstancesOceInstance {
		return vs[0].([]GetOceInstancesOceInstance)[vs[1].(int)]
	}).(GetOceInstancesOceInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetOceInstancesFilterInput)(nil)).Elem(), GetOceInstancesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOceInstancesFilterArrayInput)(nil)).Elem(), GetOceInstancesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOceInstancesOceInstanceInput)(nil)).Elem(), GetOceInstancesOceInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOceInstancesOceInstanceArrayInput)(nil)).Elem(), GetOceInstancesOceInstanceArray{})
	pulumi.RegisterOutputType(GetOceInstancesFilterOutput{})
	pulumi.RegisterOutputType(GetOceInstancesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetOceInstancesOceInstanceOutput{})
	pulumi.RegisterOutputType(GetOceInstancesOceInstanceArrayOutput{})
}
