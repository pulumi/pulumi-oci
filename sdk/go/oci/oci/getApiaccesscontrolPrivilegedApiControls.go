// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Privileged Api Controls in Oracle Cloud Infrastructure Apiaccesscontrol service.
//
// Gets a list of PrivilegedApiControls.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/oci"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := oci.GetApiaccesscontrolPrivilegedApiControls(ctx, &oci.GetApiaccesscontrolPrivilegedApiControlsArgs{
//				CompartmentId: pulumi.StringRef(compartmentId),
//				DisplayName:   pulumi.StringRef(privilegedApiControlDisplayName),
//				Id:            pulumi.StringRef(privilegedApiControlId),
//				ResourceType:  pulumi.StringRef(privilegedApiControlResourceType),
//				State:         pulumi.StringRef(privilegedApiControlState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetApiaccesscontrolPrivilegedApiControls(ctx *pulumi.Context, args *GetApiaccesscontrolPrivilegedApiControlsArgs, opts ...pulumi.InvokeOption) (*GetApiaccesscontrolPrivilegedApiControlsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetApiaccesscontrolPrivilegedApiControlsResult
	err := ctx.Invoke("oci:oci/getApiaccesscontrolPrivilegedApiControls:getApiaccesscontrolPrivilegedApiControls", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getApiaccesscontrolPrivilegedApiControls.
type GetApiaccesscontrolPrivilegedApiControlsArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
	CompartmentId *string `pulumi:"compartmentId"`
	// A filter to return only resources that match the given display name exactly.
	DisplayName *string                                          `pulumi:"displayName"`
	Filters     []GetApiaccesscontrolPrivilegedApiControlsFilter `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the PrivilegedApiControl.
	Id *string `pulumi:"id"`
	// A filter to return only lists of resources that match the entire given service type.
	ResourceType *string `pulumi:"resourceType"`
	// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
	State *string `pulumi:"state"`
}

// A collection of values returned by getApiaccesscontrolPrivilegedApiControls.
type GetApiaccesscontrolPrivilegedApiControlsResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// Name of the privilegedApi control. The name must be unique.
	DisplayName *string                                          `pulumi:"displayName"`
	Filters     []GetApiaccesscontrolPrivilegedApiControlsFilter `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the PrivilegedApiControl.
	Id *string `pulumi:"id"`
	// The list of privileged_api_control_collection.
	PrivilegedApiControlCollections []GetApiaccesscontrolPrivilegedApiControlsPrivilegedApiControlCollection `pulumi:"privilegedApiControlCollections"`
	// resourceType for which the PrivilegedApiControl is applicable
	ResourceType *string `pulumi:"resourceType"`
	// The current state of the PrivilegedApiControl.
	State *string `pulumi:"state"`
}

func GetApiaccesscontrolPrivilegedApiControlsOutput(ctx *pulumi.Context, args GetApiaccesscontrolPrivilegedApiControlsOutputArgs, opts ...pulumi.InvokeOption) GetApiaccesscontrolPrivilegedApiControlsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetApiaccesscontrolPrivilegedApiControlsResultOutput, error) {
			args := v.(GetApiaccesscontrolPrivilegedApiControlsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:oci/getApiaccesscontrolPrivilegedApiControls:getApiaccesscontrolPrivilegedApiControls", args, GetApiaccesscontrolPrivilegedApiControlsResultOutput{}, options).(GetApiaccesscontrolPrivilegedApiControlsResultOutput), nil
		}).(GetApiaccesscontrolPrivilegedApiControlsResultOutput)
}

// A collection of arguments for invoking getApiaccesscontrolPrivilegedApiControls.
type GetApiaccesscontrolPrivilegedApiControlsOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the given display name exactly.
	DisplayName pulumi.StringPtrInput                                    `pulumi:"displayName"`
	Filters     GetApiaccesscontrolPrivilegedApiControlsFilterArrayInput `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the PrivilegedApiControl.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return only lists of resources that match the entire given service type.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetApiaccesscontrolPrivilegedApiControlsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiaccesscontrolPrivilegedApiControlsArgs)(nil)).Elem()
}

// A collection of values returned by getApiaccesscontrolPrivilegedApiControls.
type GetApiaccesscontrolPrivilegedApiControlsResultOutput struct{ *pulumi.OutputState }

func (GetApiaccesscontrolPrivilegedApiControlsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiaccesscontrolPrivilegedApiControlsResult)(nil)).Elem()
}

func (o GetApiaccesscontrolPrivilegedApiControlsResultOutput) ToGetApiaccesscontrolPrivilegedApiControlsResultOutput() GetApiaccesscontrolPrivilegedApiControlsResultOutput {
	return o
}

func (o GetApiaccesscontrolPrivilegedApiControlsResultOutput) ToGetApiaccesscontrolPrivilegedApiControlsResultOutputWithContext(ctx context.Context) GetApiaccesscontrolPrivilegedApiControlsResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o GetApiaccesscontrolPrivilegedApiControlsResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetApiaccesscontrolPrivilegedApiControlsResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// Name of the privilegedApi control. The name must be unique.
func (o GetApiaccesscontrolPrivilegedApiControlsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetApiaccesscontrolPrivilegedApiControlsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetApiaccesscontrolPrivilegedApiControlsResultOutput) Filters() GetApiaccesscontrolPrivilegedApiControlsFilterArrayOutput {
	return o.ApplyT(func(v GetApiaccesscontrolPrivilegedApiControlsResult) []GetApiaccesscontrolPrivilegedApiControlsFilter {
		return v.Filters
	}).(GetApiaccesscontrolPrivilegedApiControlsFilterArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the PrivilegedApiControl.
func (o GetApiaccesscontrolPrivilegedApiControlsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetApiaccesscontrolPrivilegedApiControlsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The list of privileged_api_control_collection.
func (o GetApiaccesscontrolPrivilegedApiControlsResultOutput) PrivilegedApiControlCollections() GetApiaccesscontrolPrivilegedApiControlsPrivilegedApiControlCollectionArrayOutput {
	return o.ApplyT(func(v GetApiaccesscontrolPrivilegedApiControlsResult) []GetApiaccesscontrolPrivilegedApiControlsPrivilegedApiControlCollection {
		return v.PrivilegedApiControlCollections
	}).(GetApiaccesscontrolPrivilegedApiControlsPrivilegedApiControlCollectionArrayOutput)
}

// resourceType for which the PrivilegedApiControl is applicable
func (o GetApiaccesscontrolPrivilegedApiControlsResultOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetApiaccesscontrolPrivilegedApiControlsResult) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// The current state of the PrivilegedApiControl.
func (o GetApiaccesscontrolPrivilegedApiControlsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetApiaccesscontrolPrivilegedApiControlsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetApiaccesscontrolPrivilegedApiControlsResultOutput{})
}
