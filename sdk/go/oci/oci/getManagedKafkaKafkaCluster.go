// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Kafka Cluster resource in Oracle Cloud Infrastructure Managed Kafka service.
//
// Gets information about a KafkaCluster.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/oci"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := oci.LookupManagedKafkaKafkaCluster(ctx, &oci.LookupManagedKafkaKafkaClusterArgs{
//				KafkaClusterId: testKafkaClusterOciManagedKafkaKafkaCluster.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupManagedKafkaKafkaCluster(ctx *pulumi.Context, args *LookupManagedKafkaKafkaClusterArgs, opts ...pulumi.InvokeOption) (*LookupManagedKafkaKafkaClusterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupManagedKafkaKafkaClusterResult
	err := ctx.Invoke("oci:oci/getManagedKafkaKafkaCluster:getManagedKafkaKafkaCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedKafkaKafkaCluster.
type LookupManagedKafkaKafkaClusterArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KafkaCluster.
	KafkaClusterId string `pulumi:"kafkaClusterId"`
}

// A collection of values returned by getManagedKafkaKafkaCluster.
type LookupManagedKafkaKafkaClusterResult struct {
	// Subnets where broker/coordinator VNICs will be created.
	AccessSubnets []GetManagedKafkaKafkaClusterAccessSubnet `pulumi:"accessSubnets"`
	// Configuration of the broker node.
	BrokerShapes []GetManagedKafkaKafkaClusterBrokerShape `pulumi:"brokerShapes"`
	// CA certificate bundle for mTLS broker authentication.
	ClientCertificateBundle string `pulumi:"clientCertificateBundle"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of Kafka Cluster configuration object
	ClusterConfigId string `pulumi:"clusterConfigId"`
	// The version of configuration object
	ClusterConfigVersion int `pulumi:"clusterConfigVersion"`
	// Type of the cluster to spin up.  DEVELOPMENT - setting that allows to sacrifice HA and spin up cluster on a single node PRODUCTION - Minimum allowed broker count is 3
	ClusterType string `pulumi:"clusterType"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Kafka coordination type. Set of available types depends on Kafka version
	CoordinationType string `pulumi:"coordinationType"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A user-friendly name. Does not have to be unique, and it's changeable.
	DisplayName string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KafkaCluster.
	Id string `pulumi:"id"`
	// Bootstrap URL that can be used to connect to Kafka
	KafkaBootstrapUrls []GetManagedKafkaKafkaClusterKafkaBootstrapUrl `pulumi:"kafkaBootstrapUrls"`
	KafkaClusterId     string                                         `pulumi:"kafkaClusterId"`
	// Version of Kafka to use to spin up the cluster
	KafkaVersion string `pulumi:"kafkaVersion"`
	// A message that describes the current state of the KafkaCluster in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret that contains superuser password.
	SecretId string `pulumi:"secretId"`
	// The current state of the KafkaCluster.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time the KafkaCluster was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the KafkaCluster was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupManagedKafkaKafkaClusterOutput(ctx *pulumi.Context, args LookupManagedKafkaKafkaClusterOutputArgs, opts ...pulumi.InvokeOption) LookupManagedKafkaKafkaClusterResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupManagedKafkaKafkaClusterResultOutput, error) {
			args := v.(LookupManagedKafkaKafkaClusterArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:oci/getManagedKafkaKafkaCluster:getManagedKafkaKafkaCluster", args, LookupManagedKafkaKafkaClusterResultOutput{}, options).(LookupManagedKafkaKafkaClusterResultOutput), nil
		}).(LookupManagedKafkaKafkaClusterResultOutput)
}

// A collection of arguments for invoking getManagedKafkaKafkaCluster.
type LookupManagedKafkaKafkaClusterOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KafkaCluster.
	KafkaClusterId pulumi.StringInput `pulumi:"kafkaClusterId"`
}

func (LookupManagedKafkaKafkaClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagedKafkaKafkaClusterArgs)(nil)).Elem()
}

// A collection of values returned by getManagedKafkaKafkaCluster.
type LookupManagedKafkaKafkaClusterResultOutput struct{ *pulumi.OutputState }

func (LookupManagedKafkaKafkaClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagedKafkaKafkaClusterResult)(nil)).Elem()
}

func (o LookupManagedKafkaKafkaClusterResultOutput) ToLookupManagedKafkaKafkaClusterResultOutput() LookupManagedKafkaKafkaClusterResultOutput {
	return o
}

func (o LookupManagedKafkaKafkaClusterResultOutput) ToLookupManagedKafkaKafkaClusterResultOutputWithContext(ctx context.Context) LookupManagedKafkaKafkaClusterResultOutput {
	return o
}

// Subnets where broker/coordinator VNICs will be created.
func (o LookupManagedKafkaKafkaClusterResultOutput) AccessSubnets() GetManagedKafkaKafkaClusterAccessSubnetArrayOutput {
	return o.ApplyT(func(v LookupManagedKafkaKafkaClusterResult) []GetManagedKafkaKafkaClusterAccessSubnet {
		return v.AccessSubnets
	}).(GetManagedKafkaKafkaClusterAccessSubnetArrayOutput)
}

// Configuration of the broker node.
func (o LookupManagedKafkaKafkaClusterResultOutput) BrokerShapes() GetManagedKafkaKafkaClusterBrokerShapeArrayOutput {
	return o.ApplyT(func(v LookupManagedKafkaKafkaClusterResult) []GetManagedKafkaKafkaClusterBrokerShape {
		return v.BrokerShapes
	}).(GetManagedKafkaKafkaClusterBrokerShapeArrayOutput)
}

// CA certificate bundle for mTLS broker authentication.
func (o LookupManagedKafkaKafkaClusterResultOutput) ClientCertificateBundle() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedKafkaKafkaClusterResult) string { return v.ClientCertificateBundle }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of Kafka Cluster configuration object
func (o LookupManagedKafkaKafkaClusterResultOutput) ClusterConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedKafkaKafkaClusterResult) string { return v.ClusterConfigId }).(pulumi.StringOutput)
}

// The version of configuration object
func (o LookupManagedKafkaKafkaClusterResultOutput) ClusterConfigVersion() pulumi.IntOutput {
	return o.ApplyT(func(v LookupManagedKafkaKafkaClusterResult) int { return v.ClusterConfigVersion }).(pulumi.IntOutput)
}

// Type of the cluster to spin up.  DEVELOPMENT - setting that allows to sacrifice HA and spin up cluster on a single node PRODUCTION - Minimum allowed broker count is 3
func (o LookupManagedKafkaKafkaClusterResultOutput) ClusterType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedKafkaKafkaClusterResult) string { return v.ClusterType }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o LookupManagedKafkaKafkaClusterResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedKafkaKafkaClusterResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Kafka coordination type. Set of available types depends on Kafka version
func (o LookupManagedKafkaKafkaClusterResultOutput) CoordinationType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedKafkaKafkaClusterResult) string { return v.CoordinationType }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o LookupManagedKafkaKafkaClusterResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupManagedKafkaKafkaClusterResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable.
func (o LookupManagedKafkaKafkaClusterResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedKafkaKafkaClusterResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o LookupManagedKafkaKafkaClusterResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupManagedKafkaKafkaClusterResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KafkaCluster.
func (o LookupManagedKafkaKafkaClusterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedKafkaKafkaClusterResult) string { return v.Id }).(pulumi.StringOutput)
}

// Bootstrap URL that can be used to connect to Kafka
func (o LookupManagedKafkaKafkaClusterResultOutput) KafkaBootstrapUrls() GetManagedKafkaKafkaClusterKafkaBootstrapUrlArrayOutput {
	return o.ApplyT(func(v LookupManagedKafkaKafkaClusterResult) []GetManagedKafkaKafkaClusterKafkaBootstrapUrl {
		return v.KafkaBootstrapUrls
	}).(GetManagedKafkaKafkaClusterKafkaBootstrapUrlArrayOutput)
}

func (o LookupManagedKafkaKafkaClusterResultOutput) KafkaClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedKafkaKafkaClusterResult) string { return v.KafkaClusterId }).(pulumi.StringOutput)
}

// Version of Kafka to use to spin up the cluster
func (o LookupManagedKafkaKafkaClusterResultOutput) KafkaVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedKafkaKafkaClusterResult) string { return v.KafkaVersion }).(pulumi.StringOutput)
}

// A message that describes the current state of the KafkaCluster in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
func (o LookupManagedKafkaKafkaClusterResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedKafkaKafkaClusterResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret that contains superuser password.
func (o LookupManagedKafkaKafkaClusterResultOutput) SecretId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedKafkaKafkaClusterResult) string { return v.SecretId }).(pulumi.StringOutput)
}

// The current state of the KafkaCluster.
func (o LookupManagedKafkaKafkaClusterResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedKafkaKafkaClusterResult) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupManagedKafkaKafkaClusterResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupManagedKafkaKafkaClusterResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The date and time the KafkaCluster was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
func (o LookupManagedKafkaKafkaClusterResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedKafkaKafkaClusterResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the KafkaCluster was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
func (o LookupManagedKafkaKafkaClusterResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedKafkaKafkaClusterResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupManagedKafkaKafkaClusterResultOutput{})
}
