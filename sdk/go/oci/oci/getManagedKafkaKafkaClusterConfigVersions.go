// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Kafka Cluster Config Versions in Oracle Cloud Infrastructure Managed Kafka service.
//
// Gets a list of KafkaClusterConfig Versions.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/oci"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := oci.GetManagedKafkaKafkaClusterConfigVersions(ctx, &oci.GetManagedKafkaKafkaClusterConfigVersionsArgs{
//				KafkaClusterConfigId: testKafkaClusterConfig.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetManagedKafkaKafkaClusterConfigVersions(ctx *pulumi.Context, args *GetManagedKafkaKafkaClusterConfigVersionsArgs, opts ...pulumi.InvokeOption) (*GetManagedKafkaKafkaClusterConfigVersionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetManagedKafkaKafkaClusterConfigVersionsResult
	err := ctx.Invoke("oci:oci/getManagedKafkaKafkaClusterConfigVersions:getManagedKafkaKafkaClusterConfigVersions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedKafkaKafkaClusterConfigVersions.
type GetManagedKafkaKafkaClusterConfigVersionsArgs struct {
	Filters []GetManagedKafkaKafkaClusterConfigVersionsFilter `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KafkaClusterConfig.
	KafkaClusterConfigId string `pulumi:"kafkaClusterConfigId"`
}

// A collection of values returned by getManagedKafkaKafkaClusterConfigVersions.
type GetManagedKafkaKafkaClusterConfigVersionsResult struct {
	Filters []GetManagedKafkaKafkaClusterConfigVersionsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                   string `pulumi:"id"`
	KafkaClusterConfigId string `pulumi:"kafkaClusterConfigId"`
	// The list of kafka_cluster_config_version_collection.
	KafkaClusterConfigVersionCollections []GetManagedKafkaKafkaClusterConfigVersionsKafkaClusterConfigVersionCollection `pulumi:"kafkaClusterConfigVersionCollections"`
}

func GetManagedKafkaKafkaClusterConfigVersionsOutput(ctx *pulumi.Context, args GetManagedKafkaKafkaClusterConfigVersionsOutputArgs, opts ...pulumi.InvokeOption) GetManagedKafkaKafkaClusterConfigVersionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetManagedKafkaKafkaClusterConfigVersionsResultOutput, error) {
			args := v.(GetManagedKafkaKafkaClusterConfigVersionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:oci/getManagedKafkaKafkaClusterConfigVersions:getManagedKafkaKafkaClusterConfigVersions", args, GetManagedKafkaKafkaClusterConfigVersionsResultOutput{}, options).(GetManagedKafkaKafkaClusterConfigVersionsResultOutput), nil
		}).(GetManagedKafkaKafkaClusterConfigVersionsResultOutput)
}

// A collection of arguments for invoking getManagedKafkaKafkaClusterConfigVersions.
type GetManagedKafkaKafkaClusterConfigVersionsOutputArgs struct {
	Filters GetManagedKafkaKafkaClusterConfigVersionsFilterArrayInput `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KafkaClusterConfig.
	KafkaClusterConfigId pulumi.StringInput `pulumi:"kafkaClusterConfigId"`
}

func (GetManagedKafkaKafkaClusterConfigVersionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedKafkaKafkaClusterConfigVersionsArgs)(nil)).Elem()
}

// A collection of values returned by getManagedKafkaKafkaClusterConfigVersions.
type GetManagedKafkaKafkaClusterConfigVersionsResultOutput struct{ *pulumi.OutputState }

func (GetManagedKafkaKafkaClusterConfigVersionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedKafkaKafkaClusterConfigVersionsResult)(nil)).Elem()
}

func (o GetManagedKafkaKafkaClusterConfigVersionsResultOutput) ToGetManagedKafkaKafkaClusterConfigVersionsResultOutput() GetManagedKafkaKafkaClusterConfigVersionsResultOutput {
	return o
}

func (o GetManagedKafkaKafkaClusterConfigVersionsResultOutput) ToGetManagedKafkaKafkaClusterConfigVersionsResultOutputWithContext(ctx context.Context) GetManagedKafkaKafkaClusterConfigVersionsResultOutput {
	return o
}

func (o GetManagedKafkaKafkaClusterConfigVersionsResultOutput) Filters() GetManagedKafkaKafkaClusterConfigVersionsFilterArrayOutput {
	return o.ApplyT(func(v GetManagedKafkaKafkaClusterConfigVersionsResult) []GetManagedKafkaKafkaClusterConfigVersionsFilter {
		return v.Filters
	}).(GetManagedKafkaKafkaClusterConfigVersionsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagedKafkaKafkaClusterConfigVersionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedKafkaKafkaClusterConfigVersionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetManagedKafkaKafkaClusterConfigVersionsResultOutput) KafkaClusterConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedKafkaKafkaClusterConfigVersionsResult) string { return v.KafkaClusterConfigId }).(pulumi.StringOutput)
}

// The list of kafka_cluster_config_version_collection.
func (o GetManagedKafkaKafkaClusterConfigVersionsResultOutput) KafkaClusterConfigVersionCollections() GetManagedKafkaKafkaClusterConfigVersionsKafkaClusterConfigVersionCollectionArrayOutput {
	return o.ApplyT(func(v GetManagedKafkaKafkaClusterConfigVersionsResult) []GetManagedKafkaKafkaClusterConfigVersionsKafkaClusterConfigVersionCollection {
		return v.KafkaClusterConfigVersionCollections
	}).(GetManagedKafkaKafkaClusterConfigVersionsKafkaClusterConfigVersionCollectionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedKafkaKafkaClusterConfigVersionsResultOutput{})
}
