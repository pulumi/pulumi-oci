// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Kafka Cluster Configs in Oracle Cloud Infrastructure Managed Kafka service.
//
// Gets a list of KafkaClusterConfigs.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/oci"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := oci.GetManagedKafkaKafkaClusterConfigs(ctx, &oci.GetManagedKafkaKafkaClusterConfigsArgs{
//				CompartmentId: pulumi.StringRef(compartmentId),
//				DisplayName:   pulumi.StringRef(kafkaClusterConfigDisplayName),
//				Id:            pulumi.StringRef(kafkaClusterConfigId),
//				State:         pulumi.StringRef(kafkaClusterConfigState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetManagedKafkaKafkaClusterConfigs(ctx *pulumi.Context, args *GetManagedKafkaKafkaClusterConfigsArgs, opts ...pulumi.InvokeOption) (*GetManagedKafkaKafkaClusterConfigsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetManagedKafkaKafkaClusterConfigsResult
	err := ctx.Invoke("oci:oci/getManagedKafkaKafkaClusterConfigs:getManagedKafkaKafkaClusterConfigs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedKafkaKafkaClusterConfigs.
type GetManagedKafkaKafkaClusterConfigsArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
	CompartmentId *string `pulumi:"compartmentId"`
	// A filter to return only resources that match the given display name exactly.
	DisplayName *string                                    `pulumi:"displayName"`
	Filters     []GetManagedKafkaKafkaClusterConfigsFilter `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KafkaClusterConfig.
	Id *string `pulumi:"id"`
	// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
	State *string `pulumi:"state"`
}

// A collection of values returned by getManagedKafkaKafkaClusterConfigs.
type GetManagedKafkaKafkaClusterConfigsResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// A user-friendly name. Does not have to be unique, and it's changeable.
	DisplayName *string                                    `pulumi:"displayName"`
	Filters     []GetManagedKafkaKafkaClusterConfigsFilter `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KafkaClusterConfig.
	Id *string `pulumi:"id"`
	// The list of kafka_cluster_config_collection.
	KafkaClusterConfigCollections []GetManagedKafkaKafkaClusterConfigsKafkaClusterConfigCollection `pulumi:"kafkaClusterConfigCollections"`
	// The current state of the KafkaClusterConfig.
	State *string `pulumi:"state"`
}

func GetManagedKafkaKafkaClusterConfigsOutput(ctx *pulumi.Context, args GetManagedKafkaKafkaClusterConfigsOutputArgs, opts ...pulumi.InvokeOption) GetManagedKafkaKafkaClusterConfigsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetManagedKafkaKafkaClusterConfigsResultOutput, error) {
			args := v.(GetManagedKafkaKafkaClusterConfigsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:oci/getManagedKafkaKafkaClusterConfigs:getManagedKafkaKafkaClusterConfigs", args, GetManagedKafkaKafkaClusterConfigsResultOutput{}, options).(GetManagedKafkaKafkaClusterConfigsResultOutput), nil
		}).(GetManagedKafkaKafkaClusterConfigsResultOutput)
}

// A collection of arguments for invoking getManagedKafkaKafkaClusterConfigs.
type GetManagedKafkaKafkaClusterConfigsOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the given display name exactly.
	DisplayName pulumi.StringPtrInput                              `pulumi:"displayName"`
	Filters     GetManagedKafkaKafkaClusterConfigsFilterArrayInput `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KafkaClusterConfig.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetManagedKafkaKafkaClusterConfigsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedKafkaKafkaClusterConfigsArgs)(nil)).Elem()
}

// A collection of values returned by getManagedKafkaKafkaClusterConfigs.
type GetManagedKafkaKafkaClusterConfigsResultOutput struct{ *pulumi.OutputState }

func (GetManagedKafkaKafkaClusterConfigsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedKafkaKafkaClusterConfigsResult)(nil)).Elem()
}

func (o GetManagedKafkaKafkaClusterConfigsResultOutput) ToGetManagedKafkaKafkaClusterConfigsResultOutput() GetManagedKafkaKafkaClusterConfigsResultOutput {
	return o
}

func (o GetManagedKafkaKafkaClusterConfigsResultOutput) ToGetManagedKafkaKafkaClusterConfigsResultOutputWithContext(ctx context.Context) GetManagedKafkaKafkaClusterConfigsResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o GetManagedKafkaKafkaClusterConfigsResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedKafkaKafkaClusterConfigsResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable.
func (o GetManagedKafkaKafkaClusterConfigsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedKafkaKafkaClusterConfigsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetManagedKafkaKafkaClusterConfigsResultOutput) Filters() GetManagedKafkaKafkaClusterConfigsFilterArrayOutput {
	return o.ApplyT(func(v GetManagedKafkaKafkaClusterConfigsResult) []GetManagedKafkaKafkaClusterConfigsFilter {
		return v.Filters
	}).(GetManagedKafkaKafkaClusterConfigsFilterArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KafkaClusterConfig.
func (o GetManagedKafkaKafkaClusterConfigsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedKafkaKafkaClusterConfigsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The list of kafka_cluster_config_collection.
func (o GetManagedKafkaKafkaClusterConfigsResultOutput) KafkaClusterConfigCollections() GetManagedKafkaKafkaClusterConfigsKafkaClusterConfigCollectionArrayOutput {
	return o.ApplyT(func(v GetManagedKafkaKafkaClusterConfigsResult) []GetManagedKafkaKafkaClusterConfigsKafkaClusterConfigCollection {
		return v.KafkaClusterConfigCollections
	}).(GetManagedKafkaKafkaClusterConfigsKafkaClusterConfigCollectionArrayOutput)
}

// The current state of the KafkaClusterConfig.
func (o GetManagedKafkaKafkaClusterConfigsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedKafkaKafkaClusterConfigsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedKafkaKafkaClusterConfigsResultOutput{})
}
