// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Wls Domain Server resource in Oracle Cloud Infrastructure Wlms service.
//
// Gets information about the specified server in a WebLogic domain.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/oci"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := oci.GetWlmsWlsDomainServer(ctx, &oci.GetWlmsWlsDomainServerArgs{
//				ServerId:    testServer.Id,
//				WlsDomainId: testWlsDomain.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetWlmsWlsDomainServer(ctx *pulumi.Context, args *GetWlmsWlsDomainServerArgs, opts ...pulumi.InvokeOption) (*GetWlmsWlsDomainServerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetWlmsWlsDomainServerResult
	err := ctx.Invoke("oci:oci/getWlmsWlsDomainServer:getWlmsWlsDomainServer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWlmsWlsDomainServer.
type GetWlmsWlsDomainServerArgs struct {
	// The unique identifier of a server.
	//
	// **Note:** Not an [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ServerId string `pulumi:"serverId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WebLogic domain.
	WlsDomainId string `pulumi:"wlsDomainId"`
}

// A collection of values returned by getWlmsWlsDomainServer.
type GetWlmsWlsDomainServerResult struct {
	// The name of the server.
	HostName string `pulumi:"hostName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Whether or not the server is an admin node.
	IsAdmin bool `pulumi:"isAdmin"`
	// The JDK path on the server.
	JdkPath string `pulumi:"jdkPath"`
	// The JDK version on the server.
	JdkVersion string `pulumi:"jdkVersion"`
	// Whether or not the server has installed the latest patches.
	LatestPatchesStatus string `pulumi:"latestPatchesStatus"`
	// The managed instance ID of the server.
	ManagedInstanceId string `pulumi:"managedInstanceId"`
	// The middleware path on the server.
	MiddlewarePath string `pulumi:"middlewarePath"`
	// The middleware type on the server.
	MiddlewareType string `pulumi:"middlewareType"`
	// The name of the server.
	Name string `pulumi:"name"`
	// The patch readiness status of the server.
	PatchReadinessStatus string `pulumi:"patchReadinessStatus"`
	// The restart order assigned to the server.
	RestartOrder int    `pulumi:"restartOrder"`
	ServerId     string `pulumi:"serverId"`
	// The status of the server.
	Status string `pulumi:"status"`
	// The date and time the server was first reported (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the server was last reported (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).  Example: `2016-08-25T21:10:29.600Z`
	TimeUpdated string `pulumi:"timeUpdated"`
	// The version of the WebLogic domain of the server
	WeblogicVersion string `pulumi:"weblogicVersion"`
	// The ID of the WebLogic domain to which the server belongs.
	WlsDomainId string `pulumi:"wlsDomainId"`
	// The name of the WebLogic domain to which the server belongs.
	WlsDomainName string `pulumi:"wlsDomainName"`
	// The path of the WebLogic domain to which the server belongs.
	WlsDomainPath string `pulumi:"wlsDomainPath"`
}

func GetWlmsWlsDomainServerOutput(ctx *pulumi.Context, args GetWlmsWlsDomainServerOutputArgs, opts ...pulumi.InvokeOption) GetWlmsWlsDomainServerResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetWlmsWlsDomainServerResultOutput, error) {
			args := v.(GetWlmsWlsDomainServerArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:oci/getWlmsWlsDomainServer:getWlmsWlsDomainServer", args, GetWlmsWlsDomainServerResultOutput{}, options).(GetWlmsWlsDomainServerResultOutput), nil
		}).(GetWlmsWlsDomainServerResultOutput)
}

// A collection of arguments for invoking getWlmsWlsDomainServer.
type GetWlmsWlsDomainServerOutputArgs struct {
	// The unique identifier of a server.
	//
	// **Note:** Not an [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ServerId pulumi.StringInput `pulumi:"serverId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WebLogic domain.
	WlsDomainId pulumi.StringInput `pulumi:"wlsDomainId"`
}

func (GetWlmsWlsDomainServerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWlmsWlsDomainServerArgs)(nil)).Elem()
}

// A collection of values returned by getWlmsWlsDomainServer.
type GetWlmsWlsDomainServerResultOutput struct{ *pulumi.OutputState }

func (GetWlmsWlsDomainServerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWlmsWlsDomainServerResult)(nil)).Elem()
}

func (o GetWlmsWlsDomainServerResultOutput) ToGetWlmsWlsDomainServerResultOutput() GetWlmsWlsDomainServerResultOutput {
	return o
}

func (o GetWlmsWlsDomainServerResultOutput) ToGetWlmsWlsDomainServerResultOutputWithContext(ctx context.Context) GetWlmsWlsDomainServerResultOutput {
	return o
}

// The name of the server.
func (o GetWlmsWlsDomainServerResultOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v GetWlmsWlsDomainServerResult) string { return v.HostName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetWlmsWlsDomainServerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetWlmsWlsDomainServerResult) string { return v.Id }).(pulumi.StringOutput)
}

// Whether or not the server is an admin node.
func (o GetWlmsWlsDomainServerResultOutput) IsAdmin() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWlmsWlsDomainServerResult) bool { return v.IsAdmin }).(pulumi.BoolOutput)
}

// The JDK path on the server.
func (o GetWlmsWlsDomainServerResultOutput) JdkPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetWlmsWlsDomainServerResult) string { return v.JdkPath }).(pulumi.StringOutput)
}

// The JDK version on the server.
func (o GetWlmsWlsDomainServerResultOutput) JdkVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetWlmsWlsDomainServerResult) string { return v.JdkVersion }).(pulumi.StringOutput)
}

// Whether or not the server has installed the latest patches.
func (o GetWlmsWlsDomainServerResultOutput) LatestPatchesStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetWlmsWlsDomainServerResult) string { return v.LatestPatchesStatus }).(pulumi.StringOutput)
}

// The managed instance ID of the server.
func (o GetWlmsWlsDomainServerResultOutput) ManagedInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetWlmsWlsDomainServerResult) string { return v.ManagedInstanceId }).(pulumi.StringOutput)
}

// The middleware path on the server.
func (o GetWlmsWlsDomainServerResultOutput) MiddlewarePath() pulumi.StringOutput {
	return o.ApplyT(func(v GetWlmsWlsDomainServerResult) string { return v.MiddlewarePath }).(pulumi.StringOutput)
}

// The middleware type on the server.
func (o GetWlmsWlsDomainServerResultOutput) MiddlewareType() pulumi.StringOutput {
	return o.ApplyT(func(v GetWlmsWlsDomainServerResult) string { return v.MiddlewareType }).(pulumi.StringOutput)
}

// The name of the server.
func (o GetWlmsWlsDomainServerResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetWlmsWlsDomainServerResult) string { return v.Name }).(pulumi.StringOutput)
}

// The patch readiness status of the server.
func (o GetWlmsWlsDomainServerResultOutput) PatchReadinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetWlmsWlsDomainServerResult) string { return v.PatchReadinessStatus }).(pulumi.StringOutput)
}

// The restart order assigned to the server.
func (o GetWlmsWlsDomainServerResultOutput) RestartOrder() pulumi.IntOutput {
	return o.ApplyT(func(v GetWlmsWlsDomainServerResult) int { return v.RestartOrder }).(pulumi.IntOutput)
}

func (o GetWlmsWlsDomainServerResultOutput) ServerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetWlmsWlsDomainServerResult) string { return v.ServerId }).(pulumi.StringOutput)
}

// The status of the server.
func (o GetWlmsWlsDomainServerResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetWlmsWlsDomainServerResult) string { return v.Status }).(pulumi.StringOutput)
}

// The date and time the server was first reported (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).  Example: `2016-08-25T21:10:29.600Z`
func (o GetWlmsWlsDomainServerResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetWlmsWlsDomainServerResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the server was last reported (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).  Example: `2016-08-25T21:10:29.600Z`
func (o GetWlmsWlsDomainServerResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetWlmsWlsDomainServerResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The version of the WebLogic domain of the server
func (o GetWlmsWlsDomainServerResultOutput) WeblogicVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetWlmsWlsDomainServerResult) string { return v.WeblogicVersion }).(pulumi.StringOutput)
}

// The ID of the WebLogic domain to which the server belongs.
func (o GetWlmsWlsDomainServerResultOutput) WlsDomainId() pulumi.StringOutput {
	return o.ApplyT(func(v GetWlmsWlsDomainServerResult) string { return v.WlsDomainId }).(pulumi.StringOutput)
}

// The name of the WebLogic domain to which the server belongs.
func (o GetWlmsWlsDomainServerResultOutput) WlsDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetWlmsWlsDomainServerResult) string { return v.WlsDomainName }).(pulumi.StringOutput)
}

// The path of the WebLogic domain to which the server belongs.
func (o GetWlmsWlsDomainServerResultOutput) WlsDomainPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetWlmsWlsDomainServerResult) string { return v.WlsDomainPath }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetWlmsWlsDomainServerResultOutput{})
}
