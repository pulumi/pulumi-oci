// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Wls Domains in Oracle Cloud Infrastructure Wlms service.
//
// Gets all WebLogic domains in a given compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/oci"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := oci.GetWlmsWlsDomains(ctx, &oci.GetWlmsWlsDomainsArgs{
//				CompartmentId:        pulumi.StringRef(compartmentId),
//				DisplayName:          pulumi.StringRef(wlsDomainDisplayName),
//				Id:                   pulumi.StringRef(wlsDomainId),
//				MiddlewareType:       pulumi.StringRef(wlsDomainMiddlewareType),
//				PatchReadinessStatus: pulumi.StringRef(wlsDomainPatchReadinessStatus),
//				State:                pulumi.StringRef(wlsDomainState),
//				WeblogicVersion:      pulumi.StringRef(wlsDomainWeblogicVersion),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetWlmsWlsDomains(ctx *pulumi.Context, args *GetWlmsWlsDomainsArgs, opts ...pulumi.InvokeOption) (*GetWlmsWlsDomainsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetWlmsWlsDomainsResult
	err := ctx.Invoke("oci:oci/getWlmsWlsDomains:getWlmsWlsDomains", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWlmsWlsDomains.
type GetWlmsWlsDomainsArgs struct {
	// The OCID of the compartment that contains the resources to list. This filter returns  only resources contained within the specified compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// The display name.
	DisplayName *string                   `pulumi:"displayName"`
	Filters     []GetWlmsWlsDomainsFilter `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WebLogic domain.
	Id *string `pulumi:"id"`
	// A filter to return WebLogic domains based on the type of middleware of the WebLogic domain.
	MiddlewareType *string `pulumi:"middlewareType"`
	// A filter to return domains based on the patch readiness status.
	PatchReadinessStatus *string `pulumi:"patchReadinessStatus"`
	// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
	State *string `pulumi:"state"`
	// A filter to return WebLogic domains based on the WebLogic version.
	WeblogicVersion *string `pulumi:"weblogicVersion"`
}

// A collection of values returned by getWlmsWlsDomains.
type GetWlmsWlsDomainsResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// A user-friendly name that does not have to be unique and is changeable.
	DisplayName *string                   `pulumi:"displayName"`
	Filters     []GetWlmsWlsDomainsFilter `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WebLogic domain.
	Id *string `pulumi:"id"`
	// The middleware type on the administration server of the WebLogic domain.
	MiddlewareType *string `pulumi:"middlewareType"`
	// The patch readiness status of the WebLogic domain.
	PatchReadinessStatus *string `pulumi:"patchReadinessStatus"`
	// The current state of the WebLogic service domain.
	State *string `pulumi:"state"`
	// The version of the WebLogic domain.
	WeblogicVersion *string `pulumi:"weblogicVersion"`
	// The list of wls_domain_collection.
	WlsDomainCollections []GetWlmsWlsDomainsWlsDomainCollection `pulumi:"wlsDomainCollections"`
}

func GetWlmsWlsDomainsOutput(ctx *pulumi.Context, args GetWlmsWlsDomainsOutputArgs, opts ...pulumi.InvokeOption) GetWlmsWlsDomainsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetWlmsWlsDomainsResultOutput, error) {
			args := v.(GetWlmsWlsDomainsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:oci/getWlmsWlsDomains:getWlmsWlsDomains", args, GetWlmsWlsDomainsResultOutput{}, options).(GetWlmsWlsDomainsResultOutput), nil
		}).(GetWlmsWlsDomainsResultOutput)
}

// A collection of arguments for invoking getWlmsWlsDomains.
type GetWlmsWlsDomainsOutputArgs struct {
	// The OCID of the compartment that contains the resources to list. This filter returns  only resources contained within the specified compartment.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// The display name.
	DisplayName pulumi.StringPtrInput             `pulumi:"displayName"`
	Filters     GetWlmsWlsDomainsFilterArrayInput `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WebLogic domain.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return WebLogic domains based on the type of middleware of the WebLogic domain.
	MiddlewareType pulumi.StringPtrInput `pulumi:"middlewareType"`
	// A filter to return domains based on the patch readiness status.
	PatchReadinessStatus pulumi.StringPtrInput `pulumi:"patchReadinessStatus"`
	// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
	State pulumi.StringPtrInput `pulumi:"state"`
	// A filter to return WebLogic domains based on the WebLogic version.
	WeblogicVersion pulumi.StringPtrInput `pulumi:"weblogicVersion"`
}

func (GetWlmsWlsDomainsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWlmsWlsDomainsArgs)(nil)).Elem()
}

// A collection of values returned by getWlmsWlsDomains.
type GetWlmsWlsDomainsResultOutput struct{ *pulumi.OutputState }

func (GetWlmsWlsDomainsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWlmsWlsDomainsResult)(nil)).Elem()
}

func (o GetWlmsWlsDomainsResultOutput) ToGetWlmsWlsDomainsResultOutput() GetWlmsWlsDomainsResultOutput {
	return o
}

func (o GetWlmsWlsDomainsResultOutput) ToGetWlmsWlsDomainsResultOutputWithContext(ctx context.Context) GetWlmsWlsDomainsResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o GetWlmsWlsDomainsResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWlmsWlsDomainsResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// A user-friendly name that does not have to be unique and is changeable.
func (o GetWlmsWlsDomainsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWlmsWlsDomainsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetWlmsWlsDomainsResultOutput) Filters() GetWlmsWlsDomainsFilterArrayOutput {
	return o.ApplyT(func(v GetWlmsWlsDomainsResult) []GetWlmsWlsDomainsFilter { return v.Filters }).(GetWlmsWlsDomainsFilterArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WebLogic domain.
func (o GetWlmsWlsDomainsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWlmsWlsDomainsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The middleware type on the administration server of the WebLogic domain.
func (o GetWlmsWlsDomainsResultOutput) MiddlewareType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWlmsWlsDomainsResult) *string { return v.MiddlewareType }).(pulumi.StringPtrOutput)
}

// The patch readiness status of the WebLogic domain.
func (o GetWlmsWlsDomainsResultOutput) PatchReadinessStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWlmsWlsDomainsResult) *string { return v.PatchReadinessStatus }).(pulumi.StringPtrOutput)
}

// The current state of the WebLogic service domain.
func (o GetWlmsWlsDomainsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWlmsWlsDomainsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The version of the WebLogic domain.
func (o GetWlmsWlsDomainsResultOutput) WeblogicVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWlmsWlsDomainsResult) *string { return v.WeblogicVersion }).(pulumi.StringPtrOutput)
}

// The list of wls_domain_collection.
func (o GetWlmsWlsDomainsResultOutput) WlsDomainCollections() GetWlmsWlsDomainsWlsDomainCollectionArrayOutput {
	return o.ApplyT(func(v GetWlmsWlsDomainsResult) []GetWlmsWlsDomainsWlsDomainCollection { return v.WlsDomainCollections }).(GetWlmsWlsDomainsWlsDomainCollectionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetWlmsWlsDomainsResultOutput{})
}
