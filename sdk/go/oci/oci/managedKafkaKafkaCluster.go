// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Kafka Cluster resource in Oracle Cloud Infrastructure Managed Kafka service.
//
// Creates a KafkaCluster.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/oci"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := oci.NewManagedKafkaKafkaCluster(ctx, "test_kafka_cluster", &oci.ManagedKafkaKafkaClusterArgs{
//				AccessSubnets: oci.ManagedKafkaKafkaClusterAccessSubnetArray{
//					&oci.ManagedKafkaKafkaClusterAccessSubnetArgs{
//						Subnets: pulumi.Any(kafkaClusterAccessSubnetsSubnets),
//					},
//				},
//				BrokerShape: &oci.ManagedKafkaKafkaClusterBrokerShapeArgs{
//					NodeCount:        pulumi.Any(kafkaClusterBrokerShapeNodeCount),
//					OcpuCount:        pulumi.Any(kafkaClusterBrokerShapeOcpuCount),
//					StorageSizeInGbs: pulumi.Any(kafkaClusterBrokerShapeStorageSizeInGbs),
//				},
//				ClusterConfigId:         pulumi.Any(testConfig.Id),
//				ClusterConfigVersion:    pulumi.Any(kafkaClusterClusterConfigVersion),
//				ClusterType:             pulumi.Any(kafkaClusterClusterType),
//				CompartmentId:           pulumi.Any(compartmentId),
//				CoordinationType:        pulumi.Any(kafkaClusterCoordinationType),
//				KafkaVersion:            pulumi.Any(kafkaClusterKafkaVersion),
//				ClientCertificateBundle: pulumi.Any(kafkaClusterClientCertificateBundle),
//				DefinedTags: pulumi.StringMap{
//					"Operations.CostCenter": pulumi.String("42"),
//				},
//				DisplayName: pulumi.Any(kafkaClusterDisplayName),
//				FreeformTags: pulumi.StringMap{
//					"Department": pulumi.String("Finance"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// KafkaClusters can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:oci/managedKafkaKafkaCluster:ManagedKafkaKafkaCluster test_kafka_cluster "id"
// ```
type ManagedKafkaKafkaCluster struct {
	pulumi.CustomResourceState

	// (Updatable) Subnets where broker/coordinator VNICs will be created.
	AccessSubnets ManagedKafkaKafkaClusterAccessSubnetArrayOutput `pulumi:"accessSubnets"`
	// (Updatable) Configuration of the broker node.
	BrokerShape ManagedKafkaKafkaClusterBrokerShapeOutput `pulumi:"brokerShape"`
	// (Updatable) CA certificate bundle for mTLS broker authentication.
	ClientCertificateBundle pulumi.StringOutput `pulumi:"clientCertificateBundle"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of Kafka Cluster configuration object
	ClusterConfigId pulumi.StringOutput `pulumi:"clusterConfigId"`
	// (Updatable) The version of configuration object
	ClusterConfigVersion pulumi.IntOutput `pulumi:"clusterConfigVersion"`
	// Type of the cluster to spin up.  DEVELOPMENT - setting that allows to sacrifice HA and spin up cluster on single node PRODUCTION - Minimum allowed broker count is 3
	ClusterType pulumi.StringOutput `pulumi:"clusterType"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to create the KafkaCluster in.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Kafka coordination type. Set of available types depends on Kafka version
	CoordinationType pulumi.StringOutput `pulumi:"coordinationType"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// Bootstrap URL that can be used to connect to Kafka
	KafkaBootstrapUrls ManagedKafkaKafkaClusterKafkaBootstrapUrlArrayOutput `pulumi:"kafkaBootstrapUrls"`
	// Version of Kafka to use to spin up the cluster
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	KafkaVersion pulumi.StringOutput `pulumi:"kafkaVersion"`
	// A message that describes the current state of the KafkaCluster in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret that contains superuser password.
	SecretId pulumi.StringOutput `pulumi:"secretId"`
	// The current state of the KafkaCluster.
	State pulumi.StringOutput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// The date and time the KafkaCluster was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The date and time the KafkaCluster was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewManagedKafkaKafkaCluster registers a new resource with the given unique name, arguments, and options.
func NewManagedKafkaKafkaCluster(ctx *pulumi.Context,
	name string, args *ManagedKafkaKafkaClusterArgs, opts ...pulumi.ResourceOption) (*ManagedKafkaKafkaCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccessSubnets == nil {
		return nil, errors.New("invalid value for required argument 'AccessSubnets'")
	}
	if args.BrokerShape == nil {
		return nil, errors.New("invalid value for required argument 'BrokerShape'")
	}
	if args.ClusterConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterConfigId'")
	}
	if args.ClusterConfigVersion == nil {
		return nil, errors.New("invalid value for required argument 'ClusterConfigVersion'")
	}
	if args.ClusterType == nil {
		return nil, errors.New("invalid value for required argument 'ClusterType'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.CoordinationType == nil {
		return nil, errors.New("invalid value for required argument 'CoordinationType'")
	}
	if args.KafkaVersion == nil {
		return nil, errors.New("invalid value for required argument 'KafkaVersion'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ManagedKafkaKafkaCluster
	err := ctx.RegisterResource("oci:oci/managedKafkaKafkaCluster:ManagedKafkaKafkaCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagedKafkaKafkaCluster gets an existing ManagedKafkaKafkaCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagedKafkaKafkaCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagedKafkaKafkaClusterState, opts ...pulumi.ResourceOption) (*ManagedKafkaKafkaCluster, error) {
	var resource ManagedKafkaKafkaCluster
	err := ctx.ReadResource("oci:oci/managedKafkaKafkaCluster:ManagedKafkaKafkaCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagedKafkaKafkaCluster resources.
type managedKafkaKafkaClusterState struct {
	// (Updatable) Subnets where broker/coordinator VNICs will be created.
	AccessSubnets []ManagedKafkaKafkaClusterAccessSubnet `pulumi:"accessSubnets"`
	// (Updatable) Configuration of the broker node.
	BrokerShape *ManagedKafkaKafkaClusterBrokerShape `pulumi:"brokerShape"`
	// (Updatable) CA certificate bundle for mTLS broker authentication.
	ClientCertificateBundle *string `pulumi:"clientCertificateBundle"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of Kafka Cluster configuration object
	ClusterConfigId *string `pulumi:"clusterConfigId"`
	// (Updatable) The version of configuration object
	ClusterConfigVersion *int `pulumi:"clusterConfigVersion"`
	// Type of the cluster to spin up.  DEVELOPMENT - setting that allows to sacrifice HA and spin up cluster on single node PRODUCTION - Minimum allowed broker count is 3
	ClusterType *string `pulumi:"clusterType"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to create the KafkaCluster in.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Kafka coordination type. Set of available types depends on Kafka version
	CoordinationType *string `pulumi:"coordinationType"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Bootstrap URL that can be used to connect to Kafka
	KafkaBootstrapUrls []ManagedKafkaKafkaClusterKafkaBootstrapUrl `pulumi:"kafkaBootstrapUrls"`
	// Version of Kafka to use to spin up the cluster
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	KafkaVersion *string `pulumi:"kafkaVersion"`
	// A message that describes the current state of the KafkaCluster in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret that contains superuser password.
	SecretId *string `pulumi:"secretId"`
	// The current state of the KafkaCluster.
	State *string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time the KafkaCluster was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the KafkaCluster was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type ManagedKafkaKafkaClusterState struct {
	// (Updatable) Subnets where broker/coordinator VNICs will be created.
	AccessSubnets ManagedKafkaKafkaClusterAccessSubnetArrayInput
	// (Updatable) Configuration of the broker node.
	BrokerShape ManagedKafkaKafkaClusterBrokerShapePtrInput
	// (Updatable) CA certificate bundle for mTLS broker authentication.
	ClientCertificateBundle pulumi.StringPtrInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of Kafka Cluster configuration object
	ClusterConfigId pulumi.StringPtrInput
	// (Updatable) The version of configuration object
	ClusterConfigVersion pulumi.IntPtrInput
	// Type of the cluster to spin up.  DEVELOPMENT - setting that allows to sacrifice HA and spin up cluster on single node PRODUCTION - Minimum allowed broker count is 3
	ClusterType pulumi.StringPtrInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to create the KafkaCluster in.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Kafka coordination type. Set of available types depends on Kafka version
	CoordinationType pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput
	// Bootstrap URL that can be used to connect to Kafka
	KafkaBootstrapUrls ManagedKafkaKafkaClusterKafkaBootstrapUrlArrayInput
	// Version of Kafka to use to spin up the cluster
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	KafkaVersion pulumi.StringPtrInput
	// A message that describes the current state of the KafkaCluster in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
	LifecycleDetails pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret that contains superuser password.
	SecretId pulumi.StringPtrInput
	// The current state of the KafkaCluster.
	State pulumi.StringPtrInput
	// System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput
	// The date and time the KafkaCluster was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
	// The date and time the KafkaCluster was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeUpdated pulumi.StringPtrInput
}

func (ManagedKafkaKafkaClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*managedKafkaKafkaClusterState)(nil)).Elem()
}

type managedKafkaKafkaClusterArgs struct {
	// (Updatable) Subnets where broker/coordinator VNICs will be created.
	AccessSubnets []ManagedKafkaKafkaClusterAccessSubnet `pulumi:"accessSubnets"`
	// (Updatable) Configuration of the broker node.
	BrokerShape ManagedKafkaKafkaClusterBrokerShape `pulumi:"brokerShape"`
	// (Updatable) CA certificate bundle for mTLS broker authentication.
	ClientCertificateBundle *string `pulumi:"clientCertificateBundle"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of Kafka Cluster configuration object
	ClusterConfigId string `pulumi:"clusterConfigId"`
	// (Updatable) The version of configuration object
	ClusterConfigVersion int `pulumi:"clusterConfigVersion"`
	// Type of the cluster to spin up.  DEVELOPMENT - setting that allows to sacrifice HA and spin up cluster on single node PRODUCTION - Minimum allowed broker count is 3
	ClusterType string `pulumi:"clusterType"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to create the KafkaCluster in.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Kafka coordination type. Set of available types depends on Kafka version
	CoordinationType string `pulumi:"coordinationType"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Version of Kafka to use to spin up the cluster
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	KafkaVersion string `pulumi:"kafkaVersion"`
}

// The set of arguments for constructing a ManagedKafkaKafkaCluster resource.
type ManagedKafkaKafkaClusterArgs struct {
	// (Updatable) Subnets where broker/coordinator VNICs will be created.
	AccessSubnets ManagedKafkaKafkaClusterAccessSubnetArrayInput
	// (Updatable) Configuration of the broker node.
	BrokerShape ManagedKafkaKafkaClusterBrokerShapeInput
	// (Updatable) CA certificate bundle for mTLS broker authentication.
	ClientCertificateBundle pulumi.StringPtrInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of Kafka Cluster configuration object
	ClusterConfigId pulumi.StringInput
	// (Updatable) The version of configuration object
	ClusterConfigVersion pulumi.IntInput
	// Type of the cluster to spin up.  DEVELOPMENT - setting that allows to sacrifice HA and spin up cluster on single node PRODUCTION - Minimum allowed broker count is 3
	ClusterType pulumi.StringInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to create the KafkaCluster in.
	CompartmentId pulumi.StringInput
	// (Updatable) Kafka coordination type. Set of available types depends on Kafka version
	CoordinationType pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput
	// Version of Kafka to use to spin up the cluster
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	KafkaVersion pulumi.StringInput
}

func (ManagedKafkaKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managedKafkaKafkaClusterArgs)(nil)).Elem()
}

type ManagedKafkaKafkaClusterInput interface {
	pulumi.Input

	ToManagedKafkaKafkaClusterOutput() ManagedKafkaKafkaClusterOutput
	ToManagedKafkaKafkaClusterOutputWithContext(ctx context.Context) ManagedKafkaKafkaClusterOutput
}

func (*ManagedKafkaKafkaCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedKafkaKafkaCluster)(nil)).Elem()
}

func (i *ManagedKafkaKafkaCluster) ToManagedKafkaKafkaClusterOutput() ManagedKafkaKafkaClusterOutput {
	return i.ToManagedKafkaKafkaClusterOutputWithContext(context.Background())
}

func (i *ManagedKafkaKafkaCluster) ToManagedKafkaKafkaClusterOutputWithContext(ctx context.Context) ManagedKafkaKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedKafkaKafkaClusterOutput)
}

// ManagedKafkaKafkaClusterArrayInput is an input type that accepts ManagedKafkaKafkaClusterArray and ManagedKafkaKafkaClusterArrayOutput values.
// You can construct a concrete instance of `ManagedKafkaKafkaClusterArrayInput` via:
//
//	ManagedKafkaKafkaClusterArray{ ManagedKafkaKafkaClusterArgs{...} }
type ManagedKafkaKafkaClusterArrayInput interface {
	pulumi.Input

	ToManagedKafkaKafkaClusterArrayOutput() ManagedKafkaKafkaClusterArrayOutput
	ToManagedKafkaKafkaClusterArrayOutputWithContext(context.Context) ManagedKafkaKafkaClusterArrayOutput
}

type ManagedKafkaKafkaClusterArray []ManagedKafkaKafkaClusterInput

func (ManagedKafkaKafkaClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedKafkaKafkaCluster)(nil)).Elem()
}

func (i ManagedKafkaKafkaClusterArray) ToManagedKafkaKafkaClusterArrayOutput() ManagedKafkaKafkaClusterArrayOutput {
	return i.ToManagedKafkaKafkaClusterArrayOutputWithContext(context.Background())
}

func (i ManagedKafkaKafkaClusterArray) ToManagedKafkaKafkaClusterArrayOutputWithContext(ctx context.Context) ManagedKafkaKafkaClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedKafkaKafkaClusterArrayOutput)
}

// ManagedKafkaKafkaClusterMapInput is an input type that accepts ManagedKafkaKafkaClusterMap and ManagedKafkaKafkaClusterMapOutput values.
// You can construct a concrete instance of `ManagedKafkaKafkaClusterMapInput` via:
//
//	ManagedKafkaKafkaClusterMap{ "key": ManagedKafkaKafkaClusterArgs{...} }
type ManagedKafkaKafkaClusterMapInput interface {
	pulumi.Input

	ToManagedKafkaKafkaClusterMapOutput() ManagedKafkaKafkaClusterMapOutput
	ToManagedKafkaKafkaClusterMapOutputWithContext(context.Context) ManagedKafkaKafkaClusterMapOutput
}

type ManagedKafkaKafkaClusterMap map[string]ManagedKafkaKafkaClusterInput

func (ManagedKafkaKafkaClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedKafkaKafkaCluster)(nil)).Elem()
}

func (i ManagedKafkaKafkaClusterMap) ToManagedKafkaKafkaClusterMapOutput() ManagedKafkaKafkaClusterMapOutput {
	return i.ToManagedKafkaKafkaClusterMapOutputWithContext(context.Background())
}

func (i ManagedKafkaKafkaClusterMap) ToManagedKafkaKafkaClusterMapOutputWithContext(ctx context.Context) ManagedKafkaKafkaClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedKafkaKafkaClusterMapOutput)
}

type ManagedKafkaKafkaClusterOutput struct{ *pulumi.OutputState }

func (ManagedKafkaKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedKafkaKafkaCluster)(nil)).Elem()
}

func (o ManagedKafkaKafkaClusterOutput) ToManagedKafkaKafkaClusterOutput() ManagedKafkaKafkaClusterOutput {
	return o
}

func (o ManagedKafkaKafkaClusterOutput) ToManagedKafkaKafkaClusterOutputWithContext(ctx context.Context) ManagedKafkaKafkaClusterOutput {
	return o
}

// (Updatable) Subnets where broker/coordinator VNICs will be created.
func (o ManagedKafkaKafkaClusterOutput) AccessSubnets() ManagedKafkaKafkaClusterAccessSubnetArrayOutput {
	return o.ApplyT(func(v *ManagedKafkaKafkaCluster) ManagedKafkaKafkaClusterAccessSubnetArrayOutput {
		return v.AccessSubnets
	}).(ManagedKafkaKafkaClusterAccessSubnetArrayOutput)
}

// (Updatable) Configuration of the broker node.
func (o ManagedKafkaKafkaClusterOutput) BrokerShape() ManagedKafkaKafkaClusterBrokerShapeOutput {
	return o.ApplyT(func(v *ManagedKafkaKafkaCluster) ManagedKafkaKafkaClusterBrokerShapeOutput { return v.BrokerShape }).(ManagedKafkaKafkaClusterBrokerShapeOutput)
}

// (Updatable) CA certificate bundle for mTLS broker authentication.
func (o ManagedKafkaKafkaClusterOutput) ClientCertificateBundle() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedKafkaKafkaCluster) pulumi.StringOutput { return v.ClientCertificateBundle }).(pulumi.StringOutput)
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of Kafka Cluster configuration object
func (o ManagedKafkaKafkaClusterOutput) ClusterConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedKafkaKafkaCluster) pulumi.StringOutput { return v.ClusterConfigId }).(pulumi.StringOutput)
}

// (Updatable) The version of configuration object
func (o ManagedKafkaKafkaClusterOutput) ClusterConfigVersion() pulumi.IntOutput {
	return o.ApplyT(func(v *ManagedKafkaKafkaCluster) pulumi.IntOutput { return v.ClusterConfigVersion }).(pulumi.IntOutput)
}

// Type of the cluster to spin up.  DEVELOPMENT - setting that allows to sacrifice HA and spin up cluster on single node PRODUCTION - Minimum allowed broker count is 3
func (o ManagedKafkaKafkaClusterOutput) ClusterType() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedKafkaKafkaCluster) pulumi.StringOutput { return v.ClusterType }).(pulumi.StringOutput)
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to create the KafkaCluster in.
func (o ManagedKafkaKafkaClusterOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedKafkaKafkaCluster) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Kafka coordination type. Set of available types depends on Kafka version
func (o ManagedKafkaKafkaClusterOutput) CoordinationType() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedKafkaKafkaCluster) pulumi.StringOutput { return v.CoordinationType }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o ManagedKafkaKafkaClusterOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ManagedKafkaKafkaCluster) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o ManagedKafkaKafkaClusterOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedKafkaKafkaCluster) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o ManagedKafkaKafkaClusterOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ManagedKafkaKafkaCluster) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Bootstrap URL that can be used to connect to Kafka
func (o ManagedKafkaKafkaClusterOutput) KafkaBootstrapUrls() ManagedKafkaKafkaClusterKafkaBootstrapUrlArrayOutput {
	return o.ApplyT(func(v *ManagedKafkaKafkaCluster) ManagedKafkaKafkaClusterKafkaBootstrapUrlArrayOutput {
		return v.KafkaBootstrapUrls
	}).(ManagedKafkaKafkaClusterKafkaBootstrapUrlArrayOutput)
}

// Version of Kafka to use to spin up the cluster
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ManagedKafkaKafkaClusterOutput) KafkaVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedKafkaKafkaCluster) pulumi.StringOutput { return v.KafkaVersion }).(pulumi.StringOutput)
}

// A message that describes the current state of the KafkaCluster in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
func (o ManagedKafkaKafkaClusterOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedKafkaKafkaCluster) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret that contains superuser password.
func (o ManagedKafkaKafkaClusterOutput) SecretId() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedKafkaKafkaCluster) pulumi.StringOutput { return v.SecretId }).(pulumi.StringOutput)
}

// The current state of the KafkaCluster.
func (o ManagedKafkaKafkaClusterOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedKafkaKafkaCluster) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o ManagedKafkaKafkaClusterOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ManagedKafkaKafkaCluster) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The date and time the KafkaCluster was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
func (o ManagedKafkaKafkaClusterOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedKafkaKafkaCluster) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the KafkaCluster was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
func (o ManagedKafkaKafkaClusterOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedKafkaKafkaCluster) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type ManagedKafkaKafkaClusterArrayOutput struct{ *pulumi.OutputState }

func (ManagedKafkaKafkaClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedKafkaKafkaCluster)(nil)).Elem()
}

func (o ManagedKafkaKafkaClusterArrayOutput) ToManagedKafkaKafkaClusterArrayOutput() ManagedKafkaKafkaClusterArrayOutput {
	return o
}

func (o ManagedKafkaKafkaClusterArrayOutput) ToManagedKafkaKafkaClusterArrayOutputWithContext(ctx context.Context) ManagedKafkaKafkaClusterArrayOutput {
	return o
}

func (o ManagedKafkaKafkaClusterArrayOutput) Index(i pulumi.IntInput) ManagedKafkaKafkaClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ManagedKafkaKafkaCluster {
		return vs[0].([]*ManagedKafkaKafkaCluster)[vs[1].(int)]
	}).(ManagedKafkaKafkaClusterOutput)
}

type ManagedKafkaKafkaClusterMapOutput struct{ *pulumi.OutputState }

func (ManagedKafkaKafkaClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedKafkaKafkaCluster)(nil)).Elem()
}

func (o ManagedKafkaKafkaClusterMapOutput) ToManagedKafkaKafkaClusterMapOutput() ManagedKafkaKafkaClusterMapOutput {
	return o
}

func (o ManagedKafkaKafkaClusterMapOutput) ToManagedKafkaKafkaClusterMapOutputWithContext(ctx context.Context) ManagedKafkaKafkaClusterMapOutput {
	return o
}

func (o ManagedKafkaKafkaClusterMapOutput) MapIndex(k pulumi.StringInput) ManagedKafkaKafkaClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ManagedKafkaKafkaCluster {
		return vs[0].(map[string]*ManagedKafkaKafkaCluster)[vs[1].(string)]
	}).(ManagedKafkaKafkaClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedKafkaKafkaClusterInput)(nil)).Elem(), &ManagedKafkaKafkaCluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedKafkaKafkaClusterArrayInput)(nil)).Elem(), ManagedKafkaKafkaClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedKafkaKafkaClusterMapInput)(nil)).Elem(), ManagedKafkaKafkaClusterMap{})
	pulumi.RegisterOutputType(ManagedKafkaKafkaClusterOutput{})
	pulumi.RegisterOutputType(ManagedKafkaKafkaClusterArrayOutput{})
	pulumi.RegisterOutputType(ManagedKafkaKafkaClusterMapOutput{})
}
