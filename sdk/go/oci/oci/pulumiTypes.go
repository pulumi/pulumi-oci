// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type LustreFileStorageLustreFileSystemMaintenanceWindow struct {
	// Day of the week when the maintainence window starts.
	DayOfWeek *string `pulumi:"dayOfWeek"`
	// The time to start the maintenance window. The format is 'HH:MM', 'HH:MM' represents the time in UTC.   Example: `22:00`
	TimeStart *string `pulumi:"timeStart"`
}

// LustreFileStorageLustreFileSystemMaintenanceWindowInput is an input type that accepts LustreFileStorageLustreFileSystemMaintenanceWindowArgs and LustreFileStorageLustreFileSystemMaintenanceWindowOutput values.
// You can construct a concrete instance of `LustreFileStorageLustreFileSystemMaintenanceWindowInput` via:
//
//	LustreFileStorageLustreFileSystemMaintenanceWindowArgs{...}
type LustreFileStorageLustreFileSystemMaintenanceWindowInput interface {
	pulumi.Input

	ToLustreFileStorageLustreFileSystemMaintenanceWindowOutput() LustreFileStorageLustreFileSystemMaintenanceWindowOutput
	ToLustreFileStorageLustreFileSystemMaintenanceWindowOutputWithContext(context.Context) LustreFileStorageLustreFileSystemMaintenanceWindowOutput
}

type LustreFileStorageLustreFileSystemMaintenanceWindowArgs struct {
	// Day of the week when the maintainence window starts.
	DayOfWeek pulumi.StringPtrInput `pulumi:"dayOfWeek"`
	// The time to start the maintenance window. The format is 'HH:MM', 'HH:MM' represents the time in UTC.   Example: `22:00`
	TimeStart pulumi.StringPtrInput `pulumi:"timeStart"`
}

func (LustreFileStorageLustreFileSystemMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LustreFileStorageLustreFileSystemMaintenanceWindow)(nil)).Elem()
}

func (i LustreFileStorageLustreFileSystemMaintenanceWindowArgs) ToLustreFileStorageLustreFileSystemMaintenanceWindowOutput() LustreFileStorageLustreFileSystemMaintenanceWindowOutput {
	return i.ToLustreFileStorageLustreFileSystemMaintenanceWindowOutputWithContext(context.Background())
}

func (i LustreFileStorageLustreFileSystemMaintenanceWindowArgs) ToLustreFileStorageLustreFileSystemMaintenanceWindowOutputWithContext(ctx context.Context) LustreFileStorageLustreFileSystemMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LustreFileStorageLustreFileSystemMaintenanceWindowOutput)
}

// LustreFileStorageLustreFileSystemMaintenanceWindowArrayInput is an input type that accepts LustreFileStorageLustreFileSystemMaintenanceWindowArray and LustreFileStorageLustreFileSystemMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `LustreFileStorageLustreFileSystemMaintenanceWindowArrayInput` via:
//
//	LustreFileStorageLustreFileSystemMaintenanceWindowArray{ LustreFileStorageLustreFileSystemMaintenanceWindowArgs{...} }
type LustreFileStorageLustreFileSystemMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToLustreFileStorageLustreFileSystemMaintenanceWindowArrayOutput() LustreFileStorageLustreFileSystemMaintenanceWindowArrayOutput
	ToLustreFileStorageLustreFileSystemMaintenanceWindowArrayOutputWithContext(context.Context) LustreFileStorageLustreFileSystemMaintenanceWindowArrayOutput
}

type LustreFileStorageLustreFileSystemMaintenanceWindowArray []LustreFileStorageLustreFileSystemMaintenanceWindowInput

func (LustreFileStorageLustreFileSystemMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LustreFileStorageLustreFileSystemMaintenanceWindow)(nil)).Elem()
}

func (i LustreFileStorageLustreFileSystemMaintenanceWindowArray) ToLustreFileStorageLustreFileSystemMaintenanceWindowArrayOutput() LustreFileStorageLustreFileSystemMaintenanceWindowArrayOutput {
	return i.ToLustreFileStorageLustreFileSystemMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i LustreFileStorageLustreFileSystemMaintenanceWindowArray) ToLustreFileStorageLustreFileSystemMaintenanceWindowArrayOutputWithContext(ctx context.Context) LustreFileStorageLustreFileSystemMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LustreFileStorageLustreFileSystemMaintenanceWindowArrayOutput)
}

type LustreFileStorageLustreFileSystemMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (LustreFileStorageLustreFileSystemMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LustreFileStorageLustreFileSystemMaintenanceWindow)(nil)).Elem()
}

func (o LustreFileStorageLustreFileSystemMaintenanceWindowOutput) ToLustreFileStorageLustreFileSystemMaintenanceWindowOutput() LustreFileStorageLustreFileSystemMaintenanceWindowOutput {
	return o
}

func (o LustreFileStorageLustreFileSystemMaintenanceWindowOutput) ToLustreFileStorageLustreFileSystemMaintenanceWindowOutputWithContext(ctx context.Context) LustreFileStorageLustreFileSystemMaintenanceWindowOutput {
	return o
}

// Day of the week when the maintainence window starts.
func (o LustreFileStorageLustreFileSystemMaintenanceWindowOutput) DayOfWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LustreFileStorageLustreFileSystemMaintenanceWindow) *string { return v.DayOfWeek }).(pulumi.StringPtrOutput)
}

// The time to start the maintenance window. The format is 'HH:MM', 'HH:MM' represents the time in UTC.   Example: `22:00`
func (o LustreFileStorageLustreFileSystemMaintenanceWindowOutput) TimeStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LustreFileStorageLustreFileSystemMaintenanceWindow) *string { return v.TimeStart }).(pulumi.StringPtrOutput)
}

type LustreFileStorageLustreFileSystemMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (LustreFileStorageLustreFileSystemMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LustreFileStorageLustreFileSystemMaintenanceWindow)(nil)).Elem()
}

func (o LustreFileStorageLustreFileSystemMaintenanceWindowArrayOutput) ToLustreFileStorageLustreFileSystemMaintenanceWindowArrayOutput() LustreFileStorageLustreFileSystemMaintenanceWindowArrayOutput {
	return o
}

func (o LustreFileStorageLustreFileSystemMaintenanceWindowArrayOutput) ToLustreFileStorageLustreFileSystemMaintenanceWindowArrayOutputWithContext(ctx context.Context) LustreFileStorageLustreFileSystemMaintenanceWindowArrayOutput {
	return o
}

func (o LustreFileStorageLustreFileSystemMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) LustreFileStorageLustreFileSystemMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LustreFileStorageLustreFileSystemMaintenanceWindow {
		return vs[0].([]LustreFileStorageLustreFileSystemMaintenanceWindow)[vs[1].(int)]
	}).(LustreFileStorageLustreFileSystemMaintenanceWindowOutput)
}

type LustreFileStorageLustreFileSystemRootSquashConfiguration struct {
	// (Updatable) A list of NIDs allowed with this lustre file system not to be squashed. A maximum of 10 is allowed.
	ClientExceptions []string `pulumi:"clientExceptions"`
	// (Updatable) Used when clients accessing the Lustre file system have their UID and GID remapped to `squashUid` and `squashGid`. If `ROOT`, only the root user and group (UID/GID 0) are remapped; if `NONE`, no remapping is done. If unspecified, defaults to `NONE`.
	IdentitySquash *string `pulumi:"identitySquash"`
	// (Updatable) The GID value to remap to when squashing a client GID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
	SquashGid *string `pulumi:"squashGid"`
	// (Updatable) The UID value to remap to when squashing a client UID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
	SquashUid *string `pulumi:"squashUid"`
}

// LustreFileStorageLustreFileSystemRootSquashConfigurationInput is an input type that accepts LustreFileStorageLustreFileSystemRootSquashConfigurationArgs and LustreFileStorageLustreFileSystemRootSquashConfigurationOutput values.
// You can construct a concrete instance of `LustreFileStorageLustreFileSystemRootSquashConfigurationInput` via:
//
//	LustreFileStorageLustreFileSystemRootSquashConfigurationArgs{...}
type LustreFileStorageLustreFileSystemRootSquashConfigurationInput interface {
	pulumi.Input

	ToLustreFileStorageLustreFileSystemRootSquashConfigurationOutput() LustreFileStorageLustreFileSystemRootSquashConfigurationOutput
	ToLustreFileStorageLustreFileSystemRootSquashConfigurationOutputWithContext(context.Context) LustreFileStorageLustreFileSystemRootSquashConfigurationOutput
}

type LustreFileStorageLustreFileSystemRootSquashConfigurationArgs struct {
	// (Updatable) A list of NIDs allowed with this lustre file system not to be squashed. A maximum of 10 is allowed.
	ClientExceptions pulumi.StringArrayInput `pulumi:"clientExceptions"`
	// (Updatable) Used when clients accessing the Lustre file system have their UID and GID remapped to `squashUid` and `squashGid`. If `ROOT`, only the root user and group (UID/GID 0) are remapped; if `NONE`, no remapping is done. If unspecified, defaults to `NONE`.
	IdentitySquash pulumi.StringPtrInput `pulumi:"identitySquash"`
	// (Updatable) The GID value to remap to when squashing a client GID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
	SquashGid pulumi.StringPtrInput `pulumi:"squashGid"`
	// (Updatable) The UID value to remap to when squashing a client UID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
	SquashUid pulumi.StringPtrInput `pulumi:"squashUid"`
}

func (LustreFileStorageLustreFileSystemRootSquashConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LustreFileStorageLustreFileSystemRootSquashConfiguration)(nil)).Elem()
}

func (i LustreFileStorageLustreFileSystemRootSquashConfigurationArgs) ToLustreFileStorageLustreFileSystemRootSquashConfigurationOutput() LustreFileStorageLustreFileSystemRootSquashConfigurationOutput {
	return i.ToLustreFileStorageLustreFileSystemRootSquashConfigurationOutputWithContext(context.Background())
}

func (i LustreFileStorageLustreFileSystemRootSquashConfigurationArgs) ToLustreFileStorageLustreFileSystemRootSquashConfigurationOutputWithContext(ctx context.Context) LustreFileStorageLustreFileSystemRootSquashConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LustreFileStorageLustreFileSystemRootSquashConfigurationOutput)
}

func (i LustreFileStorageLustreFileSystemRootSquashConfigurationArgs) ToLustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutput() LustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutput {
	return i.ToLustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutputWithContext(context.Background())
}

func (i LustreFileStorageLustreFileSystemRootSquashConfigurationArgs) ToLustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutputWithContext(ctx context.Context) LustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LustreFileStorageLustreFileSystemRootSquashConfigurationOutput).ToLustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutputWithContext(ctx)
}

// LustreFileStorageLustreFileSystemRootSquashConfigurationPtrInput is an input type that accepts LustreFileStorageLustreFileSystemRootSquashConfigurationArgs, LustreFileStorageLustreFileSystemRootSquashConfigurationPtr and LustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutput values.
// You can construct a concrete instance of `LustreFileStorageLustreFileSystemRootSquashConfigurationPtrInput` via:
//
//	        LustreFileStorageLustreFileSystemRootSquashConfigurationArgs{...}
//
//	or:
//
//	        nil
type LustreFileStorageLustreFileSystemRootSquashConfigurationPtrInput interface {
	pulumi.Input

	ToLustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutput() LustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutput
	ToLustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutputWithContext(context.Context) LustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutput
}

type lustreFileStorageLustreFileSystemRootSquashConfigurationPtrType LustreFileStorageLustreFileSystemRootSquashConfigurationArgs

func LustreFileStorageLustreFileSystemRootSquashConfigurationPtr(v *LustreFileStorageLustreFileSystemRootSquashConfigurationArgs) LustreFileStorageLustreFileSystemRootSquashConfigurationPtrInput {
	return (*lustreFileStorageLustreFileSystemRootSquashConfigurationPtrType)(v)
}

func (*lustreFileStorageLustreFileSystemRootSquashConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LustreFileStorageLustreFileSystemRootSquashConfiguration)(nil)).Elem()
}

func (i *lustreFileStorageLustreFileSystemRootSquashConfigurationPtrType) ToLustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutput() LustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutput {
	return i.ToLustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutputWithContext(context.Background())
}

func (i *lustreFileStorageLustreFileSystemRootSquashConfigurationPtrType) ToLustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutputWithContext(ctx context.Context) LustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutput)
}

type LustreFileStorageLustreFileSystemRootSquashConfigurationOutput struct{ *pulumi.OutputState }

func (LustreFileStorageLustreFileSystemRootSquashConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LustreFileStorageLustreFileSystemRootSquashConfiguration)(nil)).Elem()
}

func (o LustreFileStorageLustreFileSystemRootSquashConfigurationOutput) ToLustreFileStorageLustreFileSystemRootSquashConfigurationOutput() LustreFileStorageLustreFileSystemRootSquashConfigurationOutput {
	return o
}

func (o LustreFileStorageLustreFileSystemRootSquashConfigurationOutput) ToLustreFileStorageLustreFileSystemRootSquashConfigurationOutputWithContext(ctx context.Context) LustreFileStorageLustreFileSystemRootSquashConfigurationOutput {
	return o
}

func (o LustreFileStorageLustreFileSystemRootSquashConfigurationOutput) ToLustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutput() LustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutput {
	return o.ToLustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutputWithContext(context.Background())
}

func (o LustreFileStorageLustreFileSystemRootSquashConfigurationOutput) ToLustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutputWithContext(ctx context.Context) LustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LustreFileStorageLustreFileSystemRootSquashConfiguration) *LustreFileStorageLustreFileSystemRootSquashConfiguration {
		return &v
	}).(LustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutput)
}

// (Updatable) A list of NIDs allowed with this lustre file system not to be squashed. A maximum of 10 is allowed.
func (o LustreFileStorageLustreFileSystemRootSquashConfigurationOutput) ClientExceptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LustreFileStorageLustreFileSystemRootSquashConfiguration) []string { return v.ClientExceptions }).(pulumi.StringArrayOutput)
}

// (Updatable) Used when clients accessing the Lustre file system have their UID and GID remapped to `squashUid` and `squashGid`. If `ROOT`, only the root user and group (UID/GID 0) are remapped; if `NONE`, no remapping is done. If unspecified, defaults to `NONE`.
func (o LustreFileStorageLustreFileSystemRootSquashConfigurationOutput) IdentitySquash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LustreFileStorageLustreFileSystemRootSquashConfiguration) *string { return v.IdentitySquash }).(pulumi.StringPtrOutput)
}

// (Updatable) The GID value to remap to when squashing a client GID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
func (o LustreFileStorageLustreFileSystemRootSquashConfigurationOutput) SquashGid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LustreFileStorageLustreFileSystemRootSquashConfiguration) *string { return v.SquashGid }).(pulumi.StringPtrOutput)
}

// (Updatable) The UID value to remap to when squashing a client UID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
func (o LustreFileStorageLustreFileSystemRootSquashConfigurationOutput) SquashUid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LustreFileStorageLustreFileSystemRootSquashConfiguration) *string { return v.SquashUid }).(pulumi.StringPtrOutput)
}

type LustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutput struct{ *pulumi.OutputState }

func (LustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LustreFileStorageLustreFileSystemRootSquashConfiguration)(nil)).Elem()
}

func (o LustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutput) ToLustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutput() LustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutput {
	return o
}

func (o LustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutput) ToLustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutputWithContext(ctx context.Context) LustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutput {
	return o
}

func (o LustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutput) Elem() LustreFileStorageLustreFileSystemRootSquashConfigurationOutput {
	return o.ApplyT(func(v *LustreFileStorageLustreFileSystemRootSquashConfiguration) LustreFileStorageLustreFileSystemRootSquashConfiguration {
		if v != nil {
			return *v
		}
		var ret LustreFileStorageLustreFileSystemRootSquashConfiguration
		return ret
	}).(LustreFileStorageLustreFileSystemRootSquashConfigurationOutput)
}

// (Updatable) A list of NIDs allowed with this lustre file system not to be squashed. A maximum of 10 is allowed.
func (o LustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutput) ClientExceptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LustreFileStorageLustreFileSystemRootSquashConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.ClientExceptions
	}).(pulumi.StringArrayOutput)
}

// (Updatable) Used when clients accessing the Lustre file system have their UID and GID remapped to `squashUid` and `squashGid`. If `ROOT`, only the root user and group (UID/GID 0) are remapped; if `NONE`, no remapping is done. If unspecified, defaults to `NONE`.
func (o LustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutput) IdentitySquash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LustreFileStorageLustreFileSystemRootSquashConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.IdentitySquash
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The GID value to remap to when squashing a client GID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
func (o LustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutput) SquashGid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LustreFileStorageLustreFileSystemRootSquashConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.SquashGid
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The UID value to remap to when squashing a client UID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
func (o LustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutput) SquashUid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LustreFileStorageLustreFileSystemRootSquashConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.SquashUid
	}).(pulumi.StringPtrOutput)
}

type GetLustreFileStorageLustreFileSystemMaintenanceWindow struct {
	// Day of the week when the maintainence window starts.
	DayOfWeek string `pulumi:"dayOfWeek"`
	// The time to start the maintenance window. The format is 'HH:MM', 'HH:MM' represents the time in UTC.   Example: `22:00`
	TimeStart string `pulumi:"timeStart"`
}

// GetLustreFileStorageLustreFileSystemMaintenanceWindowInput is an input type that accepts GetLustreFileStorageLustreFileSystemMaintenanceWindowArgs and GetLustreFileStorageLustreFileSystemMaintenanceWindowOutput values.
// You can construct a concrete instance of `GetLustreFileStorageLustreFileSystemMaintenanceWindowInput` via:
//
//	GetLustreFileStorageLustreFileSystemMaintenanceWindowArgs{...}
type GetLustreFileStorageLustreFileSystemMaintenanceWindowInput interface {
	pulumi.Input

	ToGetLustreFileStorageLustreFileSystemMaintenanceWindowOutput() GetLustreFileStorageLustreFileSystemMaintenanceWindowOutput
	ToGetLustreFileStorageLustreFileSystemMaintenanceWindowOutputWithContext(context.Context) GetLustreFileStorageLustreFileSystemMaintenanceWindowOutput
}

type GetLustreFileStorageLustreFileSystemMaintenanceWindowArgs struct {
	// Day of the week when the maintainence window starts.
	DayOfWeek pulumi.StringInput `pulumi:"dayOfWeek"`
	// The time to start the maintenance window. The format is 'HH:MM', 'HH:MM' represents the time in UTC.   Example: `22:00`
	TimeStart pulumi.StringInput `pulumi:"timeStart"`
}

func (GetLustreFileStorageLustreFileSystemMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLustreFileStorageLustreFileSystemMaintenanceWindow)(nil)).Elem()
}

func (i GetLustreFileStorageLustreFileSystemMaintenanceWindowArgs) ToGetLustreFileStorageLustreFileSystemMaintenanceWindowOutput() GetLustreFileStorageLustreFileSystemMaintenanceWindowOutput {
	return i.ToGetLustreFileStorageLustreFileSystemMaintenanceWindowOutputWithContext(context.Background())
}

func (i GetLustreFileStorageLustreFileSystemMaintenanceWindowArgs) ToGetLustreFileStorageLustreFileSystemMaintenanceWindowOutputWithContext(ctx context.Context) GetLustreFileStorageLustreFileSystemMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLustreFileStorageLustreFileSystemMaintenanceWindowOutput)
}

// GetLustreFileStorageLustreFileSystemMaintenanceWindowArrayInput is an input type that accepts GetLustreFileStorageLustreFileSystemMaintenanceWindowArray and GetLustreFileStorageLustreFileSystemMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `GetLustreFileStorageLustreFileSystemMaintenanceWindowArrayInput` via:
//
//	GetLustreFileStorageLustreFileSystemMaintenanceWindowArray{ GetLustreFileStorageLustreFileSystemMaintenanceWindowArgs{...} }
type GetLustreFileStorageLustreFileSystemMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToGetLustreFileStorageLustreFileSystemMaintenanceWindowArrayOutput() GetLustreFileStorageLustreFileSystemMaintenanceWindowArrayOutput
	ToGetLustreFileStorageLustreFileSystemMaintenanceWindowArrayOutputWithContext(context.Context) GetLustreFileStorageLustreFileSystemMaintenanceWindowArrayOutput
}

type GetLustreFileStorageLustreFileSystemMaintenanceWindowArray []GetLustreFileStorageLustreFileSystemMaintenanceWindowInput

func (GetLustreFileStorageLustreFileSystemMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLustreFileStorageLustreFileSystemMaintenanceWindow)(nil)).Elem()
}

func (i GetLustreFileStorageLustreFileSystemMaintenanceWindowArray) ToGetLustreFileStorageLustreFileSystemMaintenanceWindowArrayOutput() GetLustreFileStorageLustreFileSystemMaintenanceWindowArrayOutput {
	return i.ToGetLustreFileStorageLustreFileSystemMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i GetLustreFileStorageLustreFileSystemMaintenanceWindowArray) ToGetLustreFileStorageLustreFileSystemMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetLustreFileStorageLustreFileSystemMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLustreFileStorageLustreFileSystemMaintenanceWindowArrayOutput)
}

type GetLustreFileStorageLustreFileSystemMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (GetLustreFileStorageLustreFileSystemMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLustreFileStorageLustreFileSystemMaintenanceWindow)(nil)).Elem()
}

func (o GetLustreFileStorageLustreFileSystemMaintenanceWindowOutput) ToGetLustreFileStorageLustreFileSystemMaintenanceWindowOutput() GetLustreFileStorageLustreFileSystemMaintenanceWindowOutput {
	return o
}

func (o GetLustreFileStorageLustreFileSystemMaintenanceWindowOutput) ToGetLustreFileStorageLustreFileSystemMaintenanceWindowOutputWithContext(ctx context.Context) GetLustreFileStorageLustreFileSystemMaintenanceWindowOutput {
	return o
}

// Day of the week when the maintainence window starts.
func (o GetLustreFileStorageLustreFileSystemMaintenanceWindowOutput) DayOfWeek() pulumi.StringOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemMaintenanceWindow) string { return v.DayOfWeek }).(pulumi.StringOutput)
}

// The time to start the maintenance window. The format is 'HH:MM', 'HH:MM' represents the time in UTC.   Example: `22:00`
func (o GetLustreFileStorageLustreFileSystemMaintenanceWindowOutput) TimeStart() pulumi.StringOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemMaintenanceWindow) string { return v.TimeStart }).(pulumi.StringOutput)
}

type GetLustreFileStorageLustreFileSystemMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (GetLustreFileStorageLustreFileSystemMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLustreFileStorageLustreFileSystemMaintenanceWindow)(nil)).Elem()
}

func (o GetLustreFileStorageLustreFileSystemMaintenanceWindowArrayOutput) ToGetLustreFileStorageLustreFileSystemMaintenanceWindowArrayOutput() GetLustreFileStorageLustreFileSystemMaintenanceWindowArrayOutput {
	return o
}

func (o GetLustreFileStorageLustreFileSystemMaintenanceWindowArrayOutput) ToGetLustreFileStorageLustreFileSystemMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetLustreFileStorageLustreFileSystemMaintenanceWindowArrayOutput {
	return o
}

func (o GetLustreFileStorageLustreFileSystemMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) GetLustreFileStorageLustreFileSystemMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLustreFileStorageLustreFileSystemMaintenanceWindow {
		return vs[0].([]GetLustreFileStorageLustreFileSystemMaintenanceWindow)[vs[1].(int)]
	}).(GetLustreFileStorageLustreFileSystemMaintenanceWindowOutput)
}

type GetLustreFileStorageLustreFileSystemRootSquashConfiguration struct {
	// A list of NIDs allowed with this lustre file system not to be squashed. A maximum of 10 is allowed.
	ClientExceptions []string `pulumi:"clientExceptions"`
	// Used when clients accessing the Lustre file system have their UID and GID remapped to `squashUid` and `squashGid`. If `ROOT`, only the root user and group (UID/GID 0) are remapped; if `NONE`, no remapping is done. If unspecified, defaults to `NONE`.
	IdentitySquash string `pulumi:"identitySquash"`
	// The GID value to remap to when squashing a client GID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
	SquashGid string `pulumi:"squashGid"`
	// The UID value to remap to when squashing a client UID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
	SquashUid string `pulumi:"squashUid"`
}

// GetLustreFileStorageLustreFileSystemRootSquashConfigurationInput is an input type that accepts GetLustreFileStorageLustreFileSystemRootSquashConfigurationArgs and GetLustreFileStorageLustreFileSystemRootSquashConfigurationOutput values.
// You can construct a concrete instance of `GetLustreFileStorageLustreFileSystemRootSquashConfigurationInput` via:
//
//	GetLustreFileStorageLustreFileSystemRootSquashConfigurationArgs{...}
type GetLustreFileStorageLustreFileSystemRootSquashConfigurationInput interface {
	pulumi.Input

	ToGetLustreFileStorageLustreFileSystemRootSquashConfigurationOutput() GetLustreFileStorageLustreFileSystemRootSquashConfigurationOutput
	ToGetLustreFileStorageLustreFileSystemRootSquashConfigurationOutputWithContext(context.Context) GetLustreFileStorageLustreFileSystemRootSquashConfigurationOutput
}

type GetLustreFileStorageLustreFileSystemRootSquashConfigurationArgs struct {
	// A list of NIDs allowed with this lustre file system not to be squashed. A maximum of 10 is allowed.
	ClientExceptions pulumi.StringArrayInput `pulumi:"clientExceptions"`
	// Used when clients accessing the Lustre file system have their UID and GID remapped to `squashUid` and `squashGid`. If `ROOT`, only the root user and group (UID/GID 0) are remapped; if `NONE`, no remapping is done. If unspecified, defaults to `NONE`.
	IdentitySquash pulumi.StringInput `pulumi:"identitySquash"`
	// The GID value to remap to when squashing a client GID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
	SquashGid pulumi.StringInput `pulumi:"squashGid"`
	// The UID value to remap to when squashing a client UID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
	SquashUid pulumi.StringInput `pulumi:"squashUid"`
}

func (GetLustreFileStorageLustreFileSystemRootSquashConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLustreFileStorageLustreFileSystemRootSquashConfiguration)(nil)).Elem()
}

func (i GetLustreFileStorageLustreFileSystemRootSquashConfigurationArgs) ToGetLustreFileStorageLustreFileSystemRootSquashConfigurationOutput() GetLustreFileStorageLustreFileSystemRootSquashConfigurationOutput {
	return i.ToGetLustreFileStorageLustreFileSystemRootSquashConfigurationOutputWithContext(context.Background())
}

func (i GetLustreFileStorageLustreFileSystemRootSquashConfigurationArgs) ToGetLustreFileStorageLustreFileSystemRootSquashConfigurationOutputWithContext(ctx context.Context) GetLustreFileStorageLustreFileSystemRootSquashConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLustreFileStorageLustreFileSystemRootSquashConfigurationOutput)
}

// GetLustreFileStorageLustreFileSystemRootSquashConfigurationArrayInput is an input type that accepts GetLustreFileStorageLustreFileSystemRootSquashConfigurationArray and GetLustreFileStorageLustreFileSystemRootSquashConfigurationArrayOutput values.
// You can construct a concrete instance of `GetLustreFileStorageLustreFileSystemRootSquashConfigurationArrayInput` via:
//
//	GetLustreFileStorageLustreFileSystemRootSquashConfigurationArray{ GetLustreFileStorageLustreFileSystemRootSquashConfigurationArgs{...} }
type GetLustreFileStorageLustreFileSystemRootSquashConfigurationArrayInput interface {
	pulumi.Input

	ToGetLustreFileStorageLustreFileSystemRootSquashConfigurationArrayOutput() GetLustreFileStorageLustreFileSystemRootSquashConfigurationArrayOutput
	ToGetLustreFileStorageLustreFileSystemRootSquashConfigurationArrayOutputWithContext(context.Context) GetLustreFileStorageLustreFileSystemRootSquashConfigurationArrayOutput
}

type GetLustreFileStorageLustreFileSystemRootSquashConfigurationArray []GetLustreFileStorageLustreFileSystemRootSquashConfigurationInput

func (GetLustreFileStorageLustreFileSystemRootSquashConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLustreFileStorageLustreFileSystemRootSquashConfiguration)(nil)).Elem()
}

func (i GetLustreFileStorageLustreFileSystemRootSquashConfigurationArray) ToGetLustreFileStorageLustreFileSystemRootSquashConfigurationArrayOutput() GetLustreFileStorageLustreFileSystemRootSquashConfigurationArrayOutput {
	return i.ToGetLustreFileStorageLustreFileSystemRootSquashConfigurationArrayOutputWithContext(context.Background())
}

func (i GetLustreFileStorageLustreFileSystemRootSquashConfigurationArray) ToGetLustreFileStorageLustreFileSystemRootSquashConfigurationArrayOutputWithContext(ctx context.Context) GetLustreFileStorageLustreFileSystemRootSquashConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLustreFileStorageLustreFileSystemRootSquashConfigurationArrayOutput)
}

type GetLustreFileStorageLustreFileSystemRootSquashConfigurationOutput struct{ *pulumi.OutputState }

func (GetLustreFileStorageLustreFileSystemRootSquashConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLustreFileStorageLustreFileSystemRootSquashConfiguration)(nil)).Elem()
}

func (o GetLustreFileStorageLustreFileSystemRootSquashConfigurationOutput) ToGetLustreFileStorageLustreFileSystemRootSquashConfigurationOutput() GetLustreFileStorageLustreFileSystemRootSquashConfigurationOutput {
	return o
}

func (o GetLustreFileStorageLustreFileSystemRootSquashConfigurationOutput) ToGetLustreFileStorageLustreFileSystemRootSquashConfigurationOutputWithContext(ctx context.Context) GetLustreFileStorageLustreFileSystemRootSquashConfigurationOutput {
	return o
}

// A list of NIDs allowed with this lustre file system not to be squashed. A maximum of 10 is allowed.
func (o GetLustreFileStorageLustreFileSystemRootSquashConfigurationOutput) ClientExceptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemRootSquashConfiguration) []string {
		return v.ClientExceptions
	}).(pulumi.StringArrayOutput)
}

// Used when clients accessing the Lustre file system have their UID and GID remapped to `squashUid` and `squashGid`. If `ROOT`, only the root user and group (UID/GID 0) are remapped; if `NONE`, no remapping is done. If unspecified, defaults to `NONE`.
func (o GetLustreFileStorageLustreFileSystemRootSquashConfigurationOutput) IdentitySquash() pulumi.StringOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemRootSquashConfiguration) string { return v.IdentitySquash }).(pulumi.StringOutput)
}

// The GID value to remap to when squashing a client GID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
func (o GetLustreFileStorageLustreFileSystemRootSquashConfigurationOutput) SquashGid() pulumi.StringOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemRootSquashConfiguration) string { return v.SquashGid }).(pulumi.StringOutput)
}

// The UID value to remap to when squashing a client UID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
func (o GetLustreFileStorageLustreFileSystemRootSquashConfigurationOutput) SquashUid() pulumi.StringOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemRootSquashConfiguration) string { return v.SquashUid }).(pulumi.StringOutput)
}

type GetLustreFileStorageLustreFileSystemRootSquashConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetLustreFileStorageLustreFileSystemRootSquashConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLustreFileStorageLustreFileSystemRootSquashConfiguration)(nil)).Elem()
}

func (o GetLustreFileStorageLustreFileSystemRootSquashConfigurationArrayOutput) ToGetLustreFileStorageLustreFileSystemRootSquashConfigurationArrayOutput() GetLustreFileStorageLustreFileSystemRootSquashConfigurationArrayOutput {
	return o
}

func (o GetLustreFileStorageLustreFileSystemRootSquashConfigurationArrayOutput) ToGetLustreFileStorageLustreFileSystemRootSquashConfigurationArrayOutputWithContext(ctx context.Context) GetLustreFileStorageLustreFileSystemRootSquashConfigurationArrayOutput {
	return o
}

func (o GetLustreFileStorageLustreFileSystemRootSquashConfigurationArrayOutput) Index(i pulumi.IntInput) GetLustreFileStorageLustreFileSystemRootSquashConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLustreFileStorageLustreFileSystemRootSquashConfiguration {
		return vs[0].([]GetLustreFileStorageLustreFileSystemRootSquashConfiguration)[vs[1].(int)]
	}).(GetLustreFileStorageLustreFileSystemRootSquashConfigurationOutput)
}

type GetLustreFileStorageLustreFileSystemsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetLustreFileStorageLustreFileSystemsFilterInput is an input type that accepts GetLustreFileStorageLustreFileSystemsFilterArgs and GetLustreFileStorageLustreFileSystemsFilterOutput values.
// You can construct a concrete instance of `GetLustreFileStorageLustreFileSystemsFilterInput` via:
//
//	GetLustreFileStorageLustreFileSystemsFilterArgs{...}
type GetLustreFileStorageLustreFileSystemsFilterInput interface {
	pulumi.Input

	ToGetLustreFileStorageLustreFileSystemsFilterOutput() GetLustreFileStorageLustreFileSystemsFilterOutput
	ToGetLustreFileStorageLustreFileSystemsFilterOutputWithContext(context.Context) GetLustreFileStorageLustreFileSystemsFilterOutput
}

type GetLustreFileStorageLustreFileSystemsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetLustreFileStorageLustreFileSystemsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLustreFileStorageLustreFileSystemsFilter)(nil)).Elem()
}

func (i GetLustreFileStorageLustreFileSystemsFilterArgs) ToGetLustreFileStorageLustreFileSystemsFilterOutput() GetLustreFileStorageLustreFileSystemsFilterOutput {
	return i.ToGetLustreFileStorageLustreFileSystemsFilterOutputWithContext(context.Background())
}

func (i GetLustreFileStorageLustreFileSystemsFilterArgs) ToGetLustreFileStorageLustreFileSystemsFilterOutputWithContext(ctx context.Context) GetLustreFileStorageLustreFileSystemsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLustreFileStorageLustreFileSystemsFilterOutput)
}

// GetLustreFileStorageLustreFileSystemsFilterArrayInput is an input type that accepts GetLustreFileStorageLustreFileSystemsFilterArray and GetLustreFileStorageLustreFileSystemsFilterArrayOutput values.
// You can construct a concrete instance of `GetLustreFileStorageLustreFileSystemsFilterArrayInput` via:
//
//	GetLustreFileStorageLustreFileSystemsFilterArray{ GetLustreFileStorageLustreFileSystemsFilterArgs{...} }
type GetLustreFileStorageLustreFileSystemsFilterArrayInput interface {
	pulumi.Input

	ToGetLustreFileStorageLustreFileSystemsFilterArrayOutput() GetLustreFileStorageLustreFileSystemsFilterArrayOutput
	ToGetLustreFileStorageLustreFileSystemsFilterArrayOutputWithContext(context.Context) GetLustreFileStorageLustreFileSystemsFilterArrayOutput
}

type GetLustreFileStorageLustreFileSystemsFilterArray []GetLustreFileStorageLustreFileSystemsFilterInput

func (GetLustreFileStorageLustreFileSystemsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLustreFileStorageLustreFileSystemsFilter)(nil)).Elem()
}

func (i GetLustreFileStorageLustreFileSystemsFilterArray) ToGetLustreFileStorageLustreFileSystemsFilterArrayOutput() GetLustreFileStorageLustreFileSystemsFilterArrayOutput {
	return i.ToGetLustreFileStorageLustreFileSystemsFilterArrayOutputWithContext(context.Background())
}

func (i GetLustreFileStorageLustreFileSystemsFilterArray) ToGetLustreFileStorageLustreFileSystemsFilterArrayOutputWithContext(ctx context.Context) GetLustreFileStorageLustreFileSystemsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLustreFileStorageLustreFileSystemsFilterArrayOutput)
}

type GetLustreFileStorageLustreFileSystemsFilterOutput struct{ *pulumi.OutputState }

func (GetLustreFileStorageLustreFileSystemsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLustreFileStorageLustreFileSystemsFilter)(nil)).Elem()
}

func (o GetLustreFileStorageLustreFileSystemsFilterOutput) ToGetLustreFileStorageLustreFileSystemsFilterOutput() GetLustreFileStorageLustreFileSystemsFilterOutput {
	return o
}

func (o GetLustreFileStorageLustreFileSystemsFilterOutput) ToGetLustreFileStorageLustreFileSystemsFilterOutputWithContext(ctx context.Context) GetLustreFileStorageLustreFileSystemsFilterOutput {
	return o
}

func (o GetLustreFileStorageLustreFileSystemsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetLustreFileStorageLustreFileSystemsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetLustreFileStorageLustreFileSystemsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetLustreFileStorageLustreFileSystemsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetLustreFileStorageLustreFileSystemsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLustreFileStorageLustreFileSystemsFilter)(nil)).Elem()
}

func (o GetLustreFileStorageLustreFileSystemsFilterArrayOutput) ToGetLustreFileStorageLustreFileSystemsFilterArrayOutput() GetLustreFileStorageLustreFileSystemsFilterArrayOutput {
	return o
}

func (o GetLustreFileStorageLustreFileSystemsFilterArrayOutput) ToGetLustreFileStorageLustreFileSystemsFilterArrayOutputWithContext(ctx context.Context) GetLustreFileStorageLustreFileSystemsFilterArrayOutput {
	return o
}

func (o GetLustreFileStorageLustreFileSystemsFilterArrayOutput) Index(i pulumi.IntInput) GetLustreFileStorageLustreFileSystemsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLustreFileStorageLustreFileSystemsFilter {
		return vs[0].([]GetLustreFileStorageLustreFileSystemsFilter)[vs[1].(int)]
	}).(GetLustreFileStorageLustreFileSystemsFilterOutput)
}

type GetLustreFileStorageLustreFileSystemsLustreFileSystemCollection struct {
	Items []GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItem `pulumi:"items"`
}

// GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionInput is an input type that accepts GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArgs and GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionOutput values.
// You can construct a concrete instance of `GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionInput` via:
//
//	GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArgs{...}
type GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionInput interface {
	pulumi.Input

	ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionOutput() GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionOutput
	ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionOutputWithContext(context.Context) GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionOutput
}

type GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArgs struct {
	Items GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayInput `pulumi:"items"`
}

func (GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLustreFileStorageLustreFileSystemsLustreFileSystemCollection)(nil)).Elem()
}

func (i GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArgs) ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionOutput() GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionOutput {
	return i.ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionOutputWithContext(context.Background())
}

func (i GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArgs) ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionOutputWithContext(ctx context.Context) GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionOutput)
}

// GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArrayInput is an input type that accepts GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArray and GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutput values.
// You can construct a concrete instance of `GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArrayInput` via:
//
//	GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArray{ GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArgs{...} }
type GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArrayInput interface {
	pulumi.Input

	ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutput() GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutput
	ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutputWithContext(context.Context) GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutput
}

type GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArray []GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionInput

func (GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLustreFileStorageLustreFileSystemsLustreFileSystemCollection)(nil)).Elem()
}

func (i GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArray) ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutput() GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutput {
	return i.ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutputWithContext(context.Background())
}

func (i GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArray) ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutputWithContext(ctx context.Context) GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutput)
}

type GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionOutput struct{ *pulumi.OutputState }

func (GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLustreFileStorageLustreFileSystemsLustreFileSystemCollection)(nil)).Elem()
}

func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionOutput) ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionOutput() GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionOutput {
	return o
}

func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionOutput) ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionOutputWithContext(ctx context.Context) GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionOutput {
	return o
}

func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionOutput) Items() GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemsLustreFileSystemCollection) []GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItem {
		return v.Items
	}).(GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput)
}

type GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLustreFileStorageLustreFileSystemsLustreFileSystemCollection)(nil)).Elem()
}

func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutput) ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutput() GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutput {
	return o
}

func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutput) ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutputWithContext(ctx context.Context) GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutput {
	return o
}

func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutput) Index(i pulumi.IntInput) GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLustreFileStorageLustreFileSystemsLustreFileSystemCollection {
		return vs[0].([]GetLustreFileStorageLustreFileSystemsLustreFileSystemCollection)[vs[1].(int)]
	}).(GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionOutput)
}

type GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItem struct {
	// The name of the availability domain.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain string `pulumi:"availabilityDomain"`
	// Capacity of the Lustre file system in GB.
	CapacityInGbs int `pulumi:"capacityInGbs"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cluster placement group in which the Lustre file system exists.
	ClusterPlacementGroupId string `pulumi:"clusterPlacementGroupId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A filter to return only resources that match the given display name exactly.
	DisplayName string `pulumi:"displayName"`
	// Short description of the Lustre file system. Avoid entering confidential information.
	FileSystemDescription string `pulumi:"fileSystemDescription"`
	// The Lustre file system name. This is used in mount commands and other aspects of the client command line interface. The default file system name is 'lustre'. The file system name is limited to 8 characters. Allowed characters are lower and upper case English letters, numbers, and '_'.
	FileSystemName string `pulumi:"fileSystemName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Lustre file system.
	Id string `pulumi:"id"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key used to encrypt the encryption keys associated with this file system.
	KmsKeyId string `pulumi:"kmsKeyId"`
	// A message that describes the current state of the Lustre file system in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Type of network used by clients to mount the file system.   Example: `tcp`
	Lnet string `pulumi:"lnet"`
	// The preferred day and time to perform maintenance.
	MaintenanceWindows []GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindow `pulumi:"maintenanceWindows"`
	// Major version of Lustre running in the Lustre file system.  Example: `2.15`
	MajorVersion string `pulumi:"majorVersion"`
	// The IPv4 address of MGS (Lustre Management Service) used by clients to mount the file system. For example '10.0.0.4'.
	ManagementServiceAddress string `pulumi:"managementServiceAddress"`
	// A list of Network Security Group [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with this lustre file system. A maximum of 5 is allowed. Setting this to an empty array after the list is created removes the lustre file system from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm).
	NsgIds []string `pulumi:"nsgIds"`
	// The Lustre file system performance tier. A value of `MBPS_PER_TB_125` represents 125 megabytes per second per terabyte.
	PerformanceTier string `pulumi:"performanceTier"`
	// An administrative feature that allows you to restrict root level access from clients that try to access your Lustre file system as root.
	RootSquashConfigurations []GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfiguration `pulumi:"rootSquashConfigurations"`
	// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
	State string `pulumi:"state"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the Lustre file system is in.
	SubnetId string `pulumi:"subnetId"`
	// System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time that the current billing cycle for the file system will end, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format. After the current cycle ends, this date is updated automatically to the next timestamp, which is 30 days later. File systems deleted earlier than this time will still incur charges until the billing cycle ends.  Example: `2016-08-25T21:10:29.600Z`
	TimeBillingCycleEnd string `pulumi:"timeBillingCycleEnd"`
	// The date and time the Lustre file system was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2024-04-25T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the Lustre file system was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2024-04-25T21:10:29.600Z`
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemInput is an input type that accepts GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArgs and GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput values.
// You can construct a concrete instance of `GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemInput` via:
//
//	GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArgs{...}
type GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemInput interface {
	pulumi.Input

	ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput() GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput
	ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutputWithContext(context.Context) GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput
}

type GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArgs struct {
	// The name of the availability domain.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain pulumi.StringInput `pulumi:"availabilityDomain"`
	// Capacity of the Lustre file system in GB.
	CapacityInGbs pulumi.IntInput `pulumi:"capacityInGbs"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cluster placement group in which the Lustre file system exists.
	ClusterPlacementGroupId pulumi.StringInput `pulumi:"clusterPlacementGroupId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// A filter to return only resources that match the given display name exactly.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Short description of the Lustre file system. Avoid entering confidential information.
	FileSystemDescription pulumi.StringInput `pulumi:"fileSystemDescription"`
	// The Lustre file system name. This is used in mount commands and other aspects of the client command line interface. The default file system name is 'lustre'. The file system name is limited to 8 characters. Allowed characters are lower and upper case English letters, numbers, and '_'.
	FileSystemName pulumi.StringInput `pulumi:"fileSystemName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Lustre file system.
	Id pulumi.StringInput `pulumi:"id"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key used to encrypt the encryption keys associated with this file system.
	KmsKeyId pulumi.StringInput `pulumi:"kmsKeyId"`
	// A message that describes the current state of the Lustre file system in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// Type of network used by clients to mount the file system.   Example: `tcp`
	Lnet pulumi.StringInput `pulumi:"lnet"`
	// The preferred day and time to perform maintenance.
	MaintenanceWindows GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayInput `pulumi:"maintenanceWindows"`
	// Major version of Lustre running in the Lustre file system.  Example: `2.15`
	MajorVersion pulumi.StringInput `pulumi:"majorVersion"`
	// The IPv4 address of MGS (Lustre Management Service) used by clients to mount the file system. For example '10.0.0.4'.
	ManagementServiceAddress pulumi.StringInput `pulumi:"managementServiceAddress"`
	// A list of Network Security Group [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with this lustre file system. A maximum of 5 is allowed. Setting this to an empty array after the list is created removes the lustre file system from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm).
	NsgIds pulumi.StringArrayInput `pulumi:"nsgIds"`
	// The Lustre file system performance tier. A value of `MBPS_PER_TB_125` represents 125 megabytes per second per terabyte.
	PerformanceTier pulumi.StringInput `pulumi:"performanceTier"`
	// An administrative feature that allows you to restrict root level access from clients that try to access your Lustre file system as root.
	RootSquashConfigurations GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayInput `pulumi:"rootSquashConfigurations"`
	// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
	State pulumi.StringInput `pulumi:"state"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the Lustre file system is in.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput `pulumi:"systemTags"`
	// The date and time that the current billing cycle for the file system will end, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format. After the current cycle ends, this date is updated automatically to the next timestamp, which is 30 days later. File systems deleted earlier than this time will still incur charges until the billing cycle ends.  Example: `2016-08-25T21:10:29.600Z`
	TimeBillingCycleEnd pulumi.StringInput `pulumi:"timeBillingCycleEnd"`
	// The date and time the Lustre file system was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2024-04-25T21:10:29.600Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the Lustre file system was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2024-04-25T21:10:29.600Z`
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItem)(nil)).Elem()
}

func (i GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArgs) ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput() GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput {
	return i.ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutputWithContext(context.Background())
}

func (i GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArgs) ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutputWithContext(ctx context.Context) GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput)
}

// GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayInput is an input type that accepts GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArray and GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayInput` via:
//
//	GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArray{ GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArgs{...} }
type GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayInput interface {
	pulumi.Input

	ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput() GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput
	ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutputWithContext(context.Context) GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput
}

type GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArray []GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemInput

func (GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItem)(nil)).Elem()
}

func (i GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArray) ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput() GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput {
	return i.ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArray) ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutputWithContext(ctx context.Context) GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput)
}

type GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput struct{ *pulumi.OutputState }

func (GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItem)(nil)).Elem()
}

func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput() GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput {
	return o
}

func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutputWithContext(ctx context.Context) GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput {
	return o
}

// The name of the availability domain.  Example: `Uocm:PHX-AD-1`
func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItem) string {
		return v.AvailabilityDomain
	}).(pulumi.StringOutput)
}

// Capacity of the Lustre file system in GB.
func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) CapacityInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItem) int {
		return v.CapacityInGbs
	}).(pulumi.IntOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cluster placement group in which the Lustre file system exists.
func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) ClusterPlacementGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItem) string {
		return v.ClusterPlacementGroupId
	}).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItem) string {
		return v.CompartmentId
	}).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItem) map[string]string {
		return v.DefinedTags
	}).(pulumi.StringMapOutput)
}

// A filter to return only resources that match the given display name exactly.
func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItem) string {
		return v.DisplayName
	}).(pulumi.StringOutput)
}

// Short description of the Lustre file system. Avoid entering confidential information.
func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) FileSystemDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItem) string {
		return v.FileSystemDescription
	}).(pulumi.StringOutput)
}

// The Lustre file system name. This is used in mount commands and other aspects of the client command line interface. The default file system name is 'lustre'. The file system name is limited to 8 characters. Allowed characters are lower and upper case English letters, numbers, and '_'.
func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) FileSystemName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItem) string {
		return v.FileSystemName
	}).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItem) map[string]string {
		return v.FreeformTags
	}).(pulumi.StringMapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Lustre file system.
func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key used to encrypt the encryption keys associated with this file system.
func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItem) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

// A message that describes the current state of the Lustre file system in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItem) string {
		return v.LifecycleDetails
	}).(pulumi.StringOutput)
}

// Type of network used by clients to mount the file system.   Example: `tcp`
func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) Lnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItem) string { return v.Lnet }).(pulumi.StringOutput)
}

// The preferred day and time to perform maintenance.
func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) MaintenanceWindows() GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItem) []GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindow {
		return v.MaintenanceWindows
	}).(GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput)
}

// Major version of Lustre running in the Lustre file system.  Example: `2.15`
func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) MajorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItem) string {
		return v.MajorVersion
	}).(pulumi.StringOutput)
}

// The IPv4 address of MGS (Lustre Management Service) used by clients to mount the file system. For example '10.0.0.4'.
func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) ManagementServiceAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItem) string {
		return v.ManagementServiceAddress
	}).(pulumi.StringOutput)
}

// A list of Network Security Group [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with this lustre file system. A maximum of 5 is allowed. Setting this to an empty array after the list is created removes the lustre file system from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm).
func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) NsgIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItem) []string { return v.NsgIds }).(pulumi.StringArrayOutput)
}

// The Lustre file system performance tier. A value of `MBPS_PER_TB_125` represents 125 megabytes per second per terabyte.
func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) PerformanceTier() pulumi.StringOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItem) string {
		return v.PerformanceTier
	}).(pulumi.StringOutput)
}

// An administrative feature that allows you to restrict root level access from clients that try to access your Lustre file system as root.
func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) RootSquashConfigurations() GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItem) []GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfiguration {
		return v.RootSquashConfigurations
	}).(GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput)
}

// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the Lustre file system is in.
func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItem) string { return v.SubnetId }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItem) map[string]string {
		return v.SystemTags
	}).(pulumi.StringMapOutput)
}

// The date and time that the current billing cycle for the file system will end, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format. After the current cycle ends, this date is updated automatically to the next timestamp, which is 30 days later. File systems deleted earlier than this time will still incur charges until the billing cycle ends.  Example: `2016-08-25T21:10:29.600Z`
func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) TimeBillingCycleEnd() pulumi.StringOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItem) string {
		return v.TimeBillingCycleEnd
	}).(pulumi.StringOutput)
}

// The date and time the Lustre file system was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2024-04-25T21:10:29.600Z`
func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItem) string {
		return v.TimeCreated
	}).(pulumi.StringOutput)
}

// The date and time the Lustre file system was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2024-04-25T21:10:29.600Z`
func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItem) string {
		return v.TimeUpdated
	}).(pulumi.StringOutput)
}

type GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItem)(nil)).Elem()
}

func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput) ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput() GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput {
	return o
}

func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput) ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutputWithContext(ctx context.Context) GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput {
	return o
}

func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput) Index(i pulumi.IntInput) GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItem {
		return vs[0].([]GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItem)[vs[1].(int)]
	}).(GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput)
}

type GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindow struct {
	// Day of the week when the maintainence window starts.
	DayOfWeek string `pulumi:"dayOfWeek"`
	// The time to start the maintenance window. The format is 'HH:MM', 'HH:MM' represents the time in UTC.   Example: `22:00`
	TimeStart string `pulumi:"timeStart"`
}

// GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowInput is an input type that accepts GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArgs and GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput values.
// You can construct a concrete instance of `GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowInput` via:
//
//	GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArgs{...}
type GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowInput interface {
	pulumi.Input

	ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput() GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput
	ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutputWithContext(context.Context) GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput
}

type GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArgs struct {
	// Day of the week when the maintainence window starts.
	DayOfWeek pulumi.StringInput `pulumi:"dayOfWeek"`
	// The time to start the maintenance window. The format is 'HH:MM', 'HH:MM' represents the time in UTC.   Example: `22:00`
	TimeStart pulumi.StringInput `pulumi:"timeStart"`
}

func (GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindow)(nil)).Elem()
}

func (i GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArgs) ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput() GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput {
	return i.ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutputWithContext(context.Background())
}

func (i GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArgs) ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutputWithContext(ctx context.Context) GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput)
}

// GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayInput is an input type that accepts GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArray and GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayInput` via:
//
//	GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArray{ GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArgs{...} }
type GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput() GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput
	ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutputWithContext(context.Context) GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput
}

type GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArray []GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowInput

func (GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindow)(nil)).Elem()
}

func (i GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArray) ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput() GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput {
	return i.ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArray) ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput)
}

type GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindow)(nil)).Elem()
}

func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput) ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput() GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput {
	return o
}

func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput) ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutputWithContext(ctx context.Context) GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput {
	return o
}

// Day of the week when the maintainence window starts.
func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput) DayOfWeek() pulumi.StringOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindow) string {
		return v.DayOfWeek
	}).(pulumi.StringOutput)
}

// The time to start the maintenance window. The format is 'HH:MM', 'HH:MM' represents the time in UTC.   Example: `22:00`
func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput) TimeStart() pulumi.StringOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindow) string {
		return v.TimeStart
	}).(pulumi.StringOutput)
}

type GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindow)(nil)).Elem()
}

func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput) ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput() GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput {
	return o
}

func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput) ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput {
	return o
}

func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindow {
		return vs[0].([]GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindow)[vs[1].(int)]
	}).(GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput)
}

type GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfiguration struct {
	// A list of NIDs allowed with this lustre file system not to be squashed. A maximum of 10 is allowed.
	ClientExceptions []string `pulumi:"clientExceptions"`
	// Used when clients accessing the Lustre file system have their UID and GID remapped to `squashUid` and `squashGid`. If `ROOT`, only the root user and group (UID/GID 0) are remapped; if `NONE`, no remapping is done. If unspecified, defaults to `NONE`.
	IdentitySquash string `pulumi:"identitySquash"`
	// The GID value to remap to when squashing a client GID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
	SquashGid string `pulumi:"squashGid"`
	// The UID value to remap to when squashing a client UID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
	SquashUid string `pulumi:"squashUid"`
}

// GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationInput is an input type that accepts GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArgs and GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput values.
// You can construct a concrete instance of `GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationInput` via:
//
//	GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArgs{...}
type GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationInput interface {
	pulumi.Input

	ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput() GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput
	ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutputWithContext(context.Context) GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput
}

type GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArgs struct {
	// A list of NIDs allowed with this lustre file system not to be squashed. A maximum of 10 is allowed.
	ClientExceptions pulumi.StringArrayInput `pulumi:"clientExceptions"`
	// Used when clients accessing the Lustre file system have their UID and GID remapped to `squashUid` and `squashGid`. If `ROOT`, only the root user and group (UID/GID 0) are remapped; if `NONE`, no remapping is done. If unspecified, defaults to `NONE`.
	IdentitySquash pulumi.StringInput `pulumi:"identitySquash"`
	// The GID value to remap to when squashing a client GID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
	SquashGid pulumi.StringInput `pulumi:"squashGid"`
	// The UID value to remap to when squashing a client UID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
	SquashUid pulumi.StringInput `pulumi:"squashUid"`
}

func (GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfiguration)(nil)).Elem()
}

func (i GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArgs) ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput() GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput {
	return i.ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutputWithContext(context.Background())
}

func (i GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArgs) ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutputWithContext(ctx context.Context) GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput)
}

// GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayInput is an input type that accepts GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArray and GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput values.
// You can construct a concrete instance of `GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayInput` via:
//
//	GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArray{ GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArgs{...} }
type GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayInput interface {
	pulumi.Input

	ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput() GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput
	ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutputWithContext(context.Context) GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput
}

type GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArray []GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationInput

func (GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfiguration)(nil)).Elem()
}

func (i GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArray) ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput() GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput {
	return i.ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutputWithContext(context.Background())
}

func (i GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArray) ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutputWithContext(ctx context.Context) GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput)
}

type GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput struct{ *pulumi.OutputState }

func (GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfiguration)(nil)).Elem()
}

func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput) ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput() GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput {
	return o
}

func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput) ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutputWithContext(ctx context.Context) GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput {
	return o
}

// A list of NIDs allowed with this lustre file system not to be squashed. A maximum of 10 is allowed.
func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput) ClientExceptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfiguration) []string {
		return v.ClientExceptions
	}).(pulumi.StringArrayOutput)
}

// Used when clients accessing the Lustre file system have their UID and GID remapped to `squashUid` and `squashGid`. If `ROOT`, only the root user and group (UID/GID 0) are remapped; if `NONE`, no remapping is done. If unspecified, defaults to `NONE`.
func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput) IdentitySquash() pulumi.StringOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfiguration) string {
		return v.IdentitySquash
	}).(pulumi.StringOutput)
}

// The GID value to remap to when squashing a client GID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput) SquashGid() pulumi.StringOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfiguration) string {
		return v.SquashGid
	}).(pulumi.StringOutput)
}

// The UID value to remap to when squashing a client UID. See `identitySquash` for more details. If unspecified, defaults to `65534`.
func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput) SquashUid() pulumi.StringOutput {
	return o.ApplyT(func(v GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfiguration) string {
		return v.SquashUid
	}).(pulumi.StringOutput)
}

type GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfiguration)(nil)).Elem()
}

func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput) ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput() GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput {
	return o
}

func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput) ToGetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutputWithContext(ctx context.Context) GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput {
	return o
}

func (o GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput) Index(i pulumi.IntInput) GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfiguration {
		return vs[0].([]GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfiguration)[vs[1].(int)]
	}).(GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LustreFileStorageLustreFileSystemMaintenanceWindowInput)(nil)).Elem(), LustreFileStorageLustreFileSystemMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LustreFileStorageLustreFileSystemMaintenanceWindowArrayInput)(nil)).Elem(), LustreFileStorageLustreFileSystemMaintenanceWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LustreFileStorageLustreFileSystemRootSquashConfigurationInput)(nil)).Elem(), LustreFileStorageLustreFileSystemRootSquashConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LustreFileStorageLustreFileSystemRootSquashConfigurationPtrInput)(nil)).Elem(), LustreFileStorageLustreFileSystemRootSquashConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLustreFileStorageLustreFileSystemMaintenanceWindowInput)(nil)).Elem(), GetLustreFileStorageLustreFileSystemMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLustreFileStorageLustreFileSystemMaintenanceWindowArrayInput)(nil)).Elem(), GetLustreFileStorageLustreFileSystemMaintenanceWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLustreFileStorageLustreFileSystemRootSquashConfigurationInput)(nil)).Elem(), GetLustreFileStorageLustreFileSystemRootSquashConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLustreFileStorageLustreFileSystemRootSquashConfigurationArrayInput)(nil)).Elem(), GetLustreFileStorageLustreFileSystemRootSquashConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLustreFileStorageLustreFileSystemsFilterInput)(nil)).Elem(), GetLustreFileStorageLustreFileSystemsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLustreFileStorageLustreFileSystemsFilterArrayInput)(nil)).Elem(), GetLustreFileStorageLustreFileSystemsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionInput)(nil)).Elem(), GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArrayInput)(nil)).Elem(), GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemInput)(nil)).Elem(), GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayInput)(nil)).Elem(), GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowInput)(nil)).Elem(), GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayInput)(nil)).Elem(), GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationInput)(nil)).Elem(), GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayInput)(nil)).Elem(), GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArray{})
	pulumi.RegisterOutputType(LustreFileStorageLustreFileSystemMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(LustreFileStorageLustreFileSystemMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(LustreFileStorageLustreFileSystemRootSquashConfigurationOutput{})
	pulumi.RegisterOutputType(LustreFileStorageLustreFileSystemRootSquashConfigurationPtrOutput{})
	pulumi.RegisterOutputType(GetLustreFileStorageLustreFileSystemMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(GetLustreFileStorageLustreFileSystemMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(GetLustreFileStorageLustreFileSystemRootSquashConfigurationOutput{})
	pulumi.RegisterOutputType(GetLustreFileStorageLustreFileSystemRootSquashConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetLustreFileStorageLustreFileSystemsFilterOutput{})
	pulumi.RegisterOutputType(GetLustreFileStorageLustreFileSystemsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionOutput{})
	pulumi.RegisterOutputType(GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemOutput{})
	pulumi.RegisterOutputType(GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationOutput{})
	pulumi.RegisterOutputType(GetLustreFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfigurationArrayOutput{})
}
