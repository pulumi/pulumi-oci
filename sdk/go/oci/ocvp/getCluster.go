// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ocvp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Cluster resource in Oracle Cloud Infrastructure Oracle Cloud VMware Solution service.
//
// Gets the specified Cluster's information.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Ocvp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Ocvp.GetCluster(ctx, &ocvp.GetClusterArgs{
//				ClusterId: oci_ocvp_cluster.Test_cluster.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupCluster(ctx *pulumi.Context, args *LookupClusterArgs, opts ...pulumi.InvokeOption) (*LookupClusterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupClusterResult
	err := ctx.Invoke("oci:Ocvp/getCluster:getCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCluster.
type LookupClusterArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Cluster.
	ClusterId string `pulumi:"clusterId"`
}

// A collection of values returned by getCluster.
type LookupClusterResult struct {
	ActualEsxiHostsCount int `pulumi:"actualEsxiHostsCount"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Capacity Reservation.
	CapacityReservationId string `pulumi:"capacityReservationId"`
	ClusterId             string `pulumi:"clusterId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the Cluster.
	CompartmentId string `pulumi:"compartmentId"`
	// The availability domain the ESXi hosts are running in. For Multi-AD Cluster, it is `multi-AD`.  Example: `Uocm:PHX-AD-1`, `multi-AD`
	ComputeAvailabilityDomain string `pulumi:"computeAvailabilityDomain"`
	// Datastores used for the Cluster.
	Datastores []GetClusterDatastore `pulumi:"datastores"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A descriptive name for the Cluster. It must be unique, start with a letter, and contain only letters, digits, whitespaces, dashes and underscores. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// The number of ESXi hosts in the Cluster.
	EsxiHostsCount int `pulumi:"esxiHostsCount"`
	// In general, this is a specific version of bundled ESXi software supported by Oracle Cloud VMware Solution (see [ListSupportedVmwareSoftwareVersions](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20230701/SupportedVmwareSoftwareVersionSummary/ListSupportedVmwareSoftwareVersions)).
	EsxiSoftwareVersion string `pulumi:"esxiSoftwareVersion"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Cluster.
	Id string `pulumi:"id"`
	// The billing option selected during Cluster creation. [ListSupportedCommitments](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedCommitmentSummary/ListSupportedCommitments).
	InitialCommitment string `pulumi:"initialCommitment"`
	// The initial OCPU count of the Cluster's ESXi hosts.
	InitialHostOcpuCount float64 `pulumi:"initialHostOcpuCount"`
	// The initial compute shape of the Cluster's ESXi hosts. [ListSupportedHostShapes](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedHostShapes/ListSupportedHostShapes).
	InitialHostShapeName string `pulumi:"initialHostShapeName"`
	// A prefix used in the name of each ESXi host and Compute instance in the Cluster. If this isn't set, the Cluster's `displayName` is used as the prefix.
	InstanceDisplayNamePrefix string `pulumi:"instanceDisplayNamePrefix"`
	// Indicates whether shielded instance is enabled at the Cluster level.
	IsShieldedInstanceEnabled bool `pulumi:"isShieldedInstanceEnabled"`
	// The network configurations used by Cluster, including [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management subnet and VLANs.
	NetworkConfigurations []GetClusterNetworkConfiguration `pulumi:"networkConfigurations"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SDDC that the Cluster belongs to.
	SddcId string `pulumi:"sddcId"`
	// The current state of the Cluster.
	State string `pulumi:"state"`
	// The date and time the Cluster was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the Cluster was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeUpdated string `pulumi:"timeUpdated"`
	// The vSphere licenses to use when upgrading the Cluster.
	UpgradeLicenses []GetClusterUpgradeLicense `pulumi:"upgradeLicenses"`
	// In general, this is a specific version of bundled VMware software supported by Oracle Cloud VMware Solution (see [ListSupportedVmwareSoftwareVersions](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedVmwareSoftwareVersionSummary/ListSupportedVmwareSoftwareVersions)).
	VmwareSoftwareVersion string `pulumi:"vmwareSoftwareVersion"`
	// vSphere Cluster types.
	VsphereType string `pulumi:"vsphereType"`
	// The links to binary objects needed to upgrade vSphere.
	VsphereUpgradeObjects []GetClusterVsphereUpgradeObject `pulumi:"vsphereUpgradeObjects"`
	// The CIDR block for the IP addresses that VMware VMs in the SDDC use to run application workloads.
	WorkloadNetworkCidr string `pulumi:"workloadNetworkCidr"`
}

func LookupClusterOutput(ctx *pulumi.Context, args LookupClusterOutputArgs, opts ...pulumi.InvokeOption) LookupClusterResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupClusterResult, error) {
			args := v.(LookupClusterArgs)
			r, err := LookupCluster(ctx, &args, opts...)
			var s LookupClusterResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupClusterResultOutput)
}

// A collection of arguments for invoking getCluster.
type LookupClusterOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Cluster.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
}

func (LookupClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterArgs)(nil)).Elem()
}

// A collection of values returned by getCluster.
type LookupClusterResultOutput struct{ *pulumi.OutputState }

func (LookupClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterResult)(nil)).Elem()
}

func (o LookupClusterResultOutput) ToLookupClusterResultOutput() LookupClusterResultOutput {
	return o
}

func (o LookupClusterResultOutput) ToLookupClusterResultOutputWithContext(ctx context.Context) LookupClusterResultOutput {
	return o
}

func (o LookupClusterResultOutput) ActualEsxiHostsCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupClusterResult) int { return v.ActualEsxiHostsCount }).(pulumi.IntOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Capacity Reservation.
func (o LookupClusterResultOutput) CapacityReservationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.CapacityReservationId }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the Cluster.
func (o LookupClusterResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The availability domain the ESXi hosts are running in. For Multi-AD Cluster, it is `multi-AD`.  Example: `Uocm:PHX-AD-1`, `multi-AD`
func (o LookupClusterResultOutput) ComputeAvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.ComputeAvailabilityDomain }).(pulumi.StringOutput)
}

// Datastores used for the Cluster.
func (o LookupClusterResultOutput) Datastores() GetClusterDatastoreArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterDatastore { return v.Datastores }).(GetClusterDatastoreArrayOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o LookupClusterResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupClusterResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// A descriptive name for the Cluster. It must be unique, start with a letter, and contain only letters, digits, whitespaces, dashes and underscores. Avoid entering confidential information.
func (o LookupClusterResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The number of ESXi hosts in the Cluster.
func (o LookupClusterResultOutput) EsxiHostsCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupClusterResult) int { return v.EsxiHostsCount }).(pulumi.IntOutput)
}

// In general, this is a specific version of bundled ESXi software supported by Oracle Cloud VMware Solution (see [ListSupportedVmwareSoftwareVersions](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20230701/SupportedVmwareSoftwareVersionSummary/ListSupportedVmwareSoftwareVersions)).
func (o LookupClusterResultOutput) EsxiSoftwareVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.EsxiSoftwareVersion }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o LookupClusterResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupClusterResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Cluster.
func (o LookupClusterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.Id }).(pulumi.StringOutput)
}

// The billing option selected during Cluster creation. [ListSupportedCommitments](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedCommitmentSummary/ListSupportedCommitments).
func (o LookupClusterResultOutput) InitialCommitment() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.InitialCommitment }).(pulumi.StringOutput)
}

// The initial OCPU count of the Cluster's ESXi hosts.
func (o LookupClusterResultOutput) InitialHostOcpuCount() pulumi.Float64Output {
	return o.ApplyT(func(v LookupClusterResult) float64 { return v.InitialHostOcpuCount }).(pulumi.Float64Output)
}

// The initial compute shape of the Cluster's ESXi hosts. [ListSupportedHostShapes](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedHostShapes/ListSupportedHostShapes).
func (o LookupClusterResultOutput) InitialHostShapeName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.InitialHostShapeName }).(pulumi.StringOutput)
}

// A prefix used in the name of each ESXi host and Compute instance in the Cluster. If this isn't set, the Cluster's `displayName` is used as the prefix.
func (o LookupClusterResultOutput) InstanceDisplayNamePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.InstanceDisplayNamePrefix }).(pulumi.StringOutput)
}

// Indicates whether shielded instance is enabled at the Cluster level.
func (o LookupClusterResultOutput) IsShieldedInstanceEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupClusterResult) bool { return v.IsShieldedInstanceEnabled }).(pulumi.BoolOutput)
}

// The network configurations used by Cluster, including [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management subnet and VLANs.
func (o LookupClusterResultOutput) NetworkConfigurations() GetClusterNetworkConfigurationArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterNetworkConfiguration { return v.NetworkConfigurations }).(GetClusterNetworkConfigurationArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SDDC that the Cluster belongs to.
func (o LookupClusterResultOutput) SddcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.SddcId }).(pulumi.StringOutput)
}

// The current state of the Cluster.
func (o LookupClusterResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the Cluster was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
func (o LookupClusterResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the Cluster was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
func (o LookupClusterResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The vSphere licenses to use when upgrading the Cluster.
func (o LookupClusterResultOutput) UpgradeLicenses() GetClusterUpgradeLicenseArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterUpgradeLicense { return v.UpgradeLicenses }).(GetClusterUpgradeLicenseArrayOutput)
}

// In general, this is a specific version of bundled VMware software supported by Oracle Cloud VMware Solution (see [ListSupportedVmwareSoftwareVersions](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedVmwareSoftwareVersionSummary/ListSupportedVmwareSoftwareVersions)).
func (o LookupClusterResultOutput) VmwareSoftwareVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.VmwareSoftwareVersion }).(pulumi.StringOutput)
}

// vSphere Cluster types.
func (o LookupClusterResultOutput) VsphereType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.VsphereType }).(pulumi.StringOutput)
}

// The links to binary objects needed to upgrade vSphere.
func (o LookupClusterResultOutput) VsphereUpgradeObjects() GetClusterVsphereUpgradeObjectArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterVsphereUpgradeObject { return v.VsphereUpgradeObjects }).(GetClusterVsphereUpgradeObjectArrayOutput)
}

// The CIDR block for the IP addresses that VMware VMs in the SDDC use to run application workloads.
func (o LookupClusterResultOutput) WorkloadNetworkCidr() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.WorkloadNetworkCidr }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupClusterResultOutput{})
}
