// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ocvp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Sddc resource in Oracle Cloud Infrastructure Oracle Cloud VMware Solution service.
//
// Gets the specified SDDC's information.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Ocvp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Ocvp.GetSddc(ctx, &ocvp.GetSddcArgs{
//				SddcId: oci_ocvp_sddc.Test_sddc.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSddc(ctx *pulumi.Context, args *LookupSddcArgs, opts ...pulumi.InvokeOption) (*LookupSddcResult, error) {
	var rv LookupSddcResult
	err := ctx.Invoke("oci:Ocvp/getSddc:getSddc", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSddc.
type LookupSddcArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SDDC.
	SddcId string `pulumi:"sddcId"`
}

// A collection of values returned by getSddc.
type LookupSddcResult struct {
	// The number of actual ESXi hosts in the SDDC on the cloud. This attribute will be different when esxi Host is added to an existing SDDC.
	ActualEsxiHostsCount int `pulumi:"actualEsxiHostsCount"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Capacity Reservation.
	CapacityReservationId string `pulumi:"capacityReservationId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the SDDC.
	CompartmentId string `pulumi:"compartmentId"`
	// The availability domain the ESXi hosts are running in. For Multi-AD SDDC, it is `multi-AD`.  Example: `Uocm:PHX-AD-1`, `multi-AD`
	ComputeAvailabilityDomain string `pulumi:"computeAvailabilityDomain"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A descriptive name for the SDDC. It must be unique, start with a letter, and contain only letters, digits, whitespaces, dashes and underscores. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// The number of ESXi hosts in the SDDC.
	EsxiHostsCount int `pulumi:"esxiHostsCount"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	HcxAction    string                 `pulumi:"hcxAction"`
	// The FQDN for HCX Manager.  Example: `hcx-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
	HcxFqdn string `pulumi:"hcxFqdn"`
	// The SDDC includes an administrator username and initial password for HCX Manager. Make sure to change this initial HCX Manager password to a different value.
	HcxInitialPassword string `pulumi:"hcxInitialPassword"`
	// The activation keys to use on the on-premises HCX Enterprise appliances you site pair with HCX Manager in your VMware Solution. The number of keys provided depends on the HCX license type. HCX Advanced provides 3 activation keys. HCX Enterprise provides 10 activation keys.
	HcxOnPremKey string `pulumi:"hcxOnPremKey"`
	// The activation licenses to use on the on-premises HCX Enterprise appliance you site pair with HCX Manager in your VMware Solution.
	HcxOnPremLicenses []GetSddcHcxOnPremLicense `pulumi:"hcxOnPremLicenses"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for HCX Manager. For information about `PrivateIp` objects, see the Core Services API.
	HcxPrivateIpId string `pulumi:"hcxPrivateIpId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the HCX component of the VMware environment.
	HcxVlanId string `pulumi:"hcxVlanId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SDDC.
	Id string `pulumi:"id"`
	// The initial OCPU count of the SDDC's ESXi hosts.
	InitialHostOcpuCount float64 `pulumi:"initialHostOcpuCount"`
	// The initial compute shape of the SDDC's ESXi hosts. [ListSupportedHostShapes](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedHostShapes/ListSupportedHostShapes).
	InitialHostShapeName string `pulumi:"initialHostShapeName"`
	// The billing option selected during SDDC creation. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).
	InitialSku string `pulumi:"initialSku"`
	// A prefix used in the name of each ESXi host and Compute instance in the SDDC. If this isn't set, the SDDC's `displayName` is used as the prefix.
	InstanceDisplayNamePrefix string `pulumi:"instanceDisplayNamePrefix"`
	// Indicates whether HCX is enabled for this SDDC.
	IsHcxEnabled bool `pulumi:"isHcxEnabled"`
	// Indicates whether HCX Enterprise is enabled for this SDDC.
	IsHcxEnterpriseEnabled bool `pulumi:"isHcxEnterpriseEnabled"`
	// Indicates whether SDDC is pending downgrade from HCX Enterprise to HCX Advanced.
	IsHcxPendingDowngrade bool `pulumi:"isHcxPendingDowngrade"`
	// Indicates whether shielded instance is enabled at the SDDC level.
	IsShieldedInstanceEnabled bool `pulumi:"isShieldedInstanceEnabled"`
	// Indicates whether this SDDC is designated for only single ESXi host.
	IsSingleHostSddc bool `pulumi:"isSingleHostSddc"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the NSX Edge Uplink 1 component of the VMware environment.
	NsxEdgeUplink1vlanId string `pulumi:"nsxEdgeUplink1vlanId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the NSX Edge Uplink 2 component of the VMware environment.
	NsxEdgeUplink2vlanId string `pulumi:"nsxEdgeUplink2vlanId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for the NSX Edge Uplink. Use this OCID as the route target for route table rules when setting up connectivity between the SDDC and other networks. For information about `PrivateIp` objects, see the Core Services API.
	NsxEdgeUplinkIpId string `pulumi:"nsxEdgeUplinkIpId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the NSX Edge VTEP component of the VMware environment.
	NsxEdgeVtepVlanId string `pulumi:"nsxEdgeVtepVlanId"`
	// The FQDN for NSX Manager.  Example: `nsx-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
	NsxManagerFqdn string `pulumi:"nsxManagerFqdn"`
	// The SDDC includes an administrator username and initial password for NSX Manager. Make sure to change this initial NSX Manager password to a different value.
	NsxManagerInitialPassword string `pulumi:"nsxManagerInitialPassword"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for NSX Manager. For information about `PrivateIp` objects, see the Core Services API.
	NsxManagerPrivateIpId string `pulumi:"nsxManagerPrivateIpId"`
	// The SDDC includes an administrator username and initial password for NSX Manager. You can change this initial username to a different value in NSX Manager.
	NsxManagerUsername string `pulumi:"nsxManagerUsername"`
	// The VMware NSX overlay workload segment to host your application. Connect to workload portgroup in vCenter to access this overlay segment.
	NsxOverlaySegmentName string `pulumi:"nsxOverlaySegmentName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the NSX VTEP component of the VMware environment.
	NsxVtepVlanId string `pulumi:"nsxVtepVlanId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management subnet used to provision the SDDC.
	ProvisioningSubnetId string `pulumi:"provisioningSubnetId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the Provisioning component of the VMware environment.
	ProvisioningVlanId      string `pulumi:"provisioningVlanId"`
	RefreshHcxLicenseStatus bool   `pulumi:"refreshHcxLicenseStatus"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vSphere Replication component of the VMware environment.
	ReplicationVlanId                string   `pulumi:"replicationVlanId"`
	ReservingHcxOnPremiseLicenseKeys []string `pulumi:"reservingHcxOnPremiseLicenseKeys"`
	SddcId                           string   `pulumi:"sddcId"`
	// One or more public SSH keys to be included in the `~/.ssh/authorized_keys` file for the default user on each ESXi host. Use a newline character to separate multiple keys. The SSH keys must be in the format required for the `authorizedKeys` file.
	SshAuthorizedKeys string `pulumi:"sshAuthorizedKeys"`
	// The current state of the SDDC.
	State string `pulumi:"state"`
	// The date and time the SDDC was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time current HCX Enterprise billing cycle ends, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeHcxBillingCycleEnd string `pulumi:"timeHcxBillingCycleEnd"`
	// The date and time the SDDC's HCX on-premise license status was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeHcxLicenseStatusUpdated string `pulumi:"timeHcxLicenseStatusUpdated"`
	// The date and time the SDDC was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeUpdated string `pulumi:"timeUpdated"`
	// The FQDN for vCenter.  Example: `vcenter-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
	VcenterFqdn string `pulumi:"vcenterFqdn"`
	// The SDDC includes an administrator username and initial password for vCenter. Make sure to change this initial vCenter password to a different value.
	VcenterInitialPassword string `pulumi:"vcenterInitialPassword"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for vCenter. For information about `PrivateIp` objects, see the Core Services API.
	VcenterPrivateIpId string `pulumi:"vcenterPrivateIpId"`
	// The SDDC includes an administrator username and initial password for vCenter. You can change this initial username to a different value in vCenter.
	VcenterUsername string `pulumi:"vcenterUsername"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vMotion component of the VMware environment.
	VmotionVlanId string `pulumi:"vmotionVlanId"`
	// In general, this is a specific version of bundled VMware software supported by Oracle Cloud VMware Solution (see [ListSupportedVmwareSoftwareVersions](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedVmwareSoftwareVersionSummary/ListSupportedVmwareSoftwareVersions)).
	VmwareSoftwareVersion string `pulumi:"vmwareSoftwareVersion"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vSAN component of the VMware environment.
	VsanVlanId string `pulumi:"vsanVlanId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vSphere component of the VMware environment.
	VsphereVlanId string `pulumi:"vsphereVlanId"`
	// The CIDR block for the IP addresses that VMware VMs in the SDDC use to run application workloads.
	WorkloadNetworkCidr string `pulumi:"workloadNetworkCidr"`
}

func LookupSddcOutput(ctx *pulumi.Context, args LookupSddcOutputArgs, opts ...pulumi.InvokeOption) LookupSddcResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSddcResult, error) {
			args := v.(LookupSddcArgs)
			r, err := LookupSddc(ctx, &args, opts...)
			var s LookupSddcResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSddcResultOutput)
}

// A collection of arguments for invoking getSddc.
type LookupSddcOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SDDC.
	SddcId pulumi.StringInput `pulumi:"sddcId"`
}

func (LookupSddcOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSddcArgs)(nil)).Elem()
}

// A collection of values returned by getSddc.
type LookupSddcResultOutput struct{ *pulumi.OutputState }

func (LookupSddcResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSddcResult)(nil)).Elem()
}

func (o LookupSddcResultOutput) ToLookupSddcResultOutput() LookupSddcResultOutput {
	return o
}

func (o LookupSddcResultOutput) ToLookupSddcResultOutputWithContext(ctx context.Context) LookupSddcResultOutput {
	return o
}

// The number of actual ESXi hosts in the SDDC on the cloud. This attribute will be different when esxi Host is added to an existing SDDC.
func (o LookupSddcResultOutput) ActualEsxiHostsCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSddcResult) int { return v.ActualEsxiHostsCount }).(pulumi.IntOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Capacity Reservation.
func (o LookupSddcResultOutput) CapacityReservationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.CapacityReservationId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the SDDC.
func (o LookupSddcResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The availability domain the ESXi hosts are running in. For Multi-AD SDDC, it is `multi-AD`.  Example: `Uocm:PHX-AD-1`, `multi-AD`
func (o LookupSddcResultOutput) ComputeAvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.ComputeAvailabilityDomain }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o LookupSddcResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupSddcResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// A descriptive name for the SDDC. It must be unique, start with a letter, and contain only letters, digits, whitespaces, dashes and underscores. Avoid entering confidential information.
func (o LookupSddcResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The number of ESXi hosts in the SDDC.
func (o LookupSddcResultOutput) EsxiHostsCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSddcResult) int { return v.EsxiHostsCount }).(pulumi.IntOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o LookupSddcResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupSddcResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

func (o LookupSddcResultOutput) HcxAction() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.HcxAction }).(pulumi.StringOutput)
}

// The FQDN for HCX Manager.  Example: `hcx-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
func (o LookupSddcResultOutput) HcxFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.HcxFqdn }).(pulumi.StringOutput)
}

// The SDDC includes an administrator username and initial password for HCX Manager. Make sure to change this initial HCX Manager password to a different value.
func (o LookupSddcResultOutput) HcxInitialPassword() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.HcxInitialPassword }).(pulumi.StringOutput)
}

// The activation keys to use on the on-premises HCX Enterprise appliances you site pair with HCX Manager in your VMware Solution. The number of keys provided depends on the HCX license type. HCX Advanced provides 3 activation keys. HCX Enterprise provides 10 activation keys.
func (o LookupSddcResultOutput) HcxOnPremKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.HcxOnPremKey }).(pulumi.StringOutput)
}

// The activation licenses to use on the on-premises HCX Enterprise appliance you site pair with HCX Manager in your VMware Solution.
func (o LookupSddcResultOutput) HcxOnPremLicenses() GetSddcHcxOnPremLicenseArrayOutput {
	return o.ApplyT(func(v LookupSddcResult) []GetSddcHcxOnPremLicense { return v.HcxOnPremLicenses }).(GetSddcHcxOnPremLicenseArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for HCX Manager. For information about `PrivateIp` objects, see the Core Services API.
func (o LookupSddcResultOutput) HcxPrivateIpId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.HcxPrivateIpId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the HCX component of the VMware environment.
func (o LookupSddcResultOutput) HcxVlanId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.HcxVlanId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SDDC.
func (o LookupSddcResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.Id }).(pulumi.StringOutput)
}

// The initial OCPU count of the SDDC's ESXi hosts.
func (o LookupSddcResultOutput) InitialHostOcpuCount() pulumi.Float64Output {
	return o.ApplyT(func(v LookupSddcResult) float64 { return v.InitialHostOcpuCount }).(pulumi.Float64Output)
}

// The initial compute shape of the SDDC's ESXi hosts. [ListSupportedHostShapes](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedHostShapes/ListSupportedHostShapes).
func (o LookupSddcResultOutput) InitialHostShapeName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.InitialHostShapeName }).(pulumi.StringOutput)
}

// The billing option selected during SDDC creation. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).
func (o LookupSddcResultOutput) InitialSku() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.InitialSku }).(pulumi.StringOutput)
}

// A prefix used in the name of each ESXi host and Compute instance in the SDDC. If this isn't set, the SDDC's `displayName` is used as the prefix.
func (o LookupSddcResultOutput) InstanceDisplayNamePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.InstanceDisplayNamePrefix }).(pulumi.StringOutput)
}

// Indicates whether HCX is enabled for this SDDC.
func (o LookupSddcResultOutput) IsHcxEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSddcResult) bool { return v.IsHcxEnabled }).(pulumi.BoolOutput)
}

// Indicates whether HCX Enterprise is enabled for this SDDC.
func (o LookupSddcResultOutput) IsHcxEnterpriseEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSddcResult) bool { return v.IsHcxEnterpriseEnabled }).(pulumi.BoolOutput)
}

// Indicates whether SDDC is pending downgrade from HCX Enterprise to HCX Advanced.
func (o LookupSddcResultOutput) IsHcxPendingDowngrade() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSddcResult) bool { return v.IsHcxPendingDowngrade }).(pulumi.BoolOutput)
}

// Indicates whether shielded instance is enabled at the SDDC level.
func (o LookupSddcResultOutput) IsShieldedInstanceEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSddcResult) bool { return v.IsShieldedInstanceEnabled }).(pulumi.BoolOutput)
}

// Indicates whether this SDDC is designated for only single ESXi host.
func (o LookupSddcResultOutput) IsSingleHostSddc() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSddcResult) bool { return v.IsSingleHostSddc }).(pulumi.BoolOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the NSX Edge Uplink 1 component of the VMware environment.
func (o LookupSddcResultOutput) NsxEdgeUplink1vlanId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.NsxEdgeUplink1vlanId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the NSX Edge Uplink 2 component of the VMware environment.
func (o LookupSddcResultOutput) NsxEdgeUplink2vlanId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.NsxEdgeUplink2vlanId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for the NSX Edge Uplink. Use this OCID as the route target for route table rules when setting up connectivity between the SDDC and other networks. For information about `PrivateIp` objects, see the Core Services API.
func (o LookupSddcResultOutput) NsxEdgeUplinkIpId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.NsxEdgeUplinkIpId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the NSX Edge VTEP component of the VMware environment.
func (o LookupSddcResultOutput) NsxEdgeVtepVlanId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.NsxEdgeVtepVlanId }).(pulumi.StringOutput)
}

// The FQDN for NSX Manager.  Example: `nsx-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
func (o LookupSddcResultOutput) NsxManagerFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.NsxManagerFqdn }).(pulumi.StringOutput)
}

// The SDDC includes an administrator username and initial password for NSX Manager. Make sure to change this initial NSX Manager password to a different value.
func (o LookupSddcResultOutput) NsxManagerInitialPassword() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.NsxManagerInitialPassword }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for NSX Manager. For information about `PrivateIp` objects, see the Core Services API.
func (o LookupSddcResultOutput) NsxManagerPrivateIpId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.NsxManagerPrivateIpId }).(pulumi.StringOutput)
}

// The SDDC includes an administrator username and initial password for NSX Manager. You can change this initial username to a different value in NSX Manager.
func (o LookupSddcResultOutput) NsxManagerUsername() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.NsxManagerUsername }).(pulumi.StringOutput)
}

// The VMware NSX overlay workload segment to host your application. Connect to workload portgroup in vCenter to access this overlay segment.
func (o LookupSddcResultOutput) NsxOverlaySegmentName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.NsxOverlaySegmentName }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the NSX VTEP component of the VMware environment.
func (o LookupSddcResultOutput) NsxVtepVlanId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.NsxVtepVlanId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management subnet used to provision the SDDC.
func (o LookupSddcResultOutput) ProvisioningSubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.ProvisioningSubnetId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the Provisioning component of the VMware environment.
func (o LookupSddcResultOutput) ProvisioningVlanId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.ProvisioningVlanId }).(pulumi.StringOutput)
}

func (o LookupSddcResultOutput) RefreshHcxLicenseStatus() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSddcResult) bool { return v.RefreshHcxLicenseStatus }).(pulumi.BoolOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vSphere Replication component of the VMware environment.
func (o LookupSddcResultOutput) ReplicationVlanId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.ReplicationVlanId }).(pulumi.StringOutput)
}

func (o LookupSddcResultOutput) ReservingHcxOnPremiseLicenseKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSddcResult) []string { return v.ReservingHcxOnPremiseLicenseKeys }).(pulumi.StringArrayOutput)
}

func (o LookupSddcResultOutput) SddcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.SddcId }).(pulumi.StringOutput)
}

// One or more public SSH keys to be included in the `~/.ssh/authorized_keys` file for the default user on each ESXi host. Use a newline character to separate multiple keys. The SSH keys must be in the format required for the `authorizedKeys` file.
func (o LookupSddcResultOutput) SshAuthorizedKeys() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.SshAuthorizedKeys }).(pulumi.StringOutput)
}

// The current state of the SDDC.
func (o LookupSddcResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the SDDC was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
func (o LookupSddcResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time current HCX Enterprise billing cycle ends, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
func (o LookupSddcResultOutput) TimeHcxBillingCycleEnd() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.TimeHcxBillingCycleEnd }).(pulumi.StringOutput)
}

// The date and time the SDDC's HCX on-premise license status was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
func (o LookupSddcResultOutput) TimeHcxLicenseStatusUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.TimeHcxLicenseStatusUpdated }).(pulumi.StringOutput)
}

// The date and time the SDDC was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
func (o LookupSddcResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The FQDN for vCenter.  Example: `vcenter-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
func (o LookupSddcResultOutput) VcenterFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.VcenterFqdn }).(pulumi.StringOutput)
}

// The SDDC includes an administrator username and initial password for vCenter. Make sure to change this initial vCenter password to a different value.
func (o LookupSddcResultOutput) VcenterInitialPassword() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.VcenterInitialPassword }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for vCenter. For information about `PrivateIp` objects, see the Core Services API.
func (o LookupSddcResultOutput) VcenterPrivateIpId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.VcenterPrivateIpId }).(pulumi.StringOutput)
}

// The SDDC includes an administrator username and initial password for vCenter. You can change this initial username to a different value in vCenter.
func (o LookupSddcResultOutput) VcenterUsername() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.VcenterUsername }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vMotion component of the VMware environment.
func (o LookupSddcResultOutput) VmotionVlanId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.VmotionVlanId }).(pulumi.StringOutput)
}

// In general, this is a specific version of bundled VMware software supported by Oracle Cloud VMware Solution (see [ListSupportedVmwareSoftwareVersions](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedVmwareSoftwareVersionSummary/ListSupportedVmwareSoftwareVersions)).
func (o LookupSddcResultOutput) VmwareSoftwareVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.VmwareSoftwareVersion }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vSAN component of the VMware environment.
func (o LookupSddcResultOutput) VsanVlanId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.VsanVlanId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vSphere component of the VMware environment.
func (o LookupSddcResultOutput) VsphereVlanId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.VsphereVlanId }).(pulumi.StringOutput)
}

// The CIDR block for the IP addresses that VMware VMs in the SDDC use to run application workloads.
func (o LookupSddcResultOutput) WorkloadNetworkCidr() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSddcResult) string { return v.WorkloadNetworkCidr }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSddcResultOutput{})
}
