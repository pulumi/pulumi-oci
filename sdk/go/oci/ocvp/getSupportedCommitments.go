// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ocvp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Supported Commitments in Oracle Cloud Infrastructure Oracle Cloud VMware Solution service.
//
// Lists supported Commitments.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Ocvp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Ocvp.GetSupportedCommitments(ctx, &ocvp.GetSupportedCommitmentsArgs{
//				CompartmentId: _var.Compartment_id,
//				HostShapeName: pulumi.StringRef(oci_core_shape.Test_shape.Name),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSupportedCommitments(ctx *pulumi.Context, args *GetSupportedCommitmentsArgs, opts ...pulumi.InvokeOption) (*GetSupportedCommitmentsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSupportedCommitmentsResult
	err := ctx.Invoke("oci:Ocvp/getSupportedCommitments:getSupportedCommitments", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSupportedCommitments.
type GetSupportedCommitmentsArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string                          `pulumi:"compartmentId"`
	Filters       []GetSupportedCommitmentsFilter `pulumi:"filters"`
	// A filter to return only resources that match or support the given ESXi host shape.
	HostShapeName *string `pulumi:"hostShapeName"`
}

// A collection of values returned by getSupportedCommitments.
type GetSupportedCommitmentsResult struct {
	CompartmentId string                          `pulumi:"compartmentId"`
	Filters       []GetSupportedCommitmentsFilter `pulumi:"filters"`
	HostShapeName *string                         `pulumi:"hostShapeName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of the supported Commitments.
	Items []GetSupportedCommitmentsItem `pulumi:"items"`
}

func GetSupportedCommitmentsOutput(ctx *pulumi.Context, args GetSupportedCommitmentsOutputArgs, opts ...pulumi.InvokeOption) GetSupportedCommitmentsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSupportedCommitmentsResult, error) {
			args := v.(GetSupportedCommitmentsArgs)
			r, err := GetSupportedCommitments(ctx, &args, opts...)
			var s GetSupportedCommitmentsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSupportedCommitmentsResultOutput)
}

// A collection of arguments for invoking getSupportedCommitments.
type GetSupportedCommitmentsOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput                      `pulumi:"compartmentId"`
	Filters       GetSupportedCommitmentsFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources that match or support the given ESXi host shape.
	HostShapeName pulumi.StringPtrInput `pulumi:"hostShapeName"`
}

func (GetSupportedCommitmentsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSupportedCommitmentsArgs)(nil)).Elem()
}

// A collection of values returned by getSupportedCommitments.
type GetSupportedCommitmentsResultOutput struct{ *pulumi.OutputState }

func (GetSupportedCommitmentsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSupportedCommitmentsResult)(nil)).Elem()
}

func (o GetSupportedCommitmentsResultOutput) ToGetSupportedCommitmentsResultOutput() GetSupportedCommitmentsResultOutput {
	return o
}

func (o GetSupportedCommitmentsResultOutput) ToGetSupportedCommitmentsResultOutputWithContext(ctx context.Context) GetSupportedCommitmentsResultOutput {
	return o
}

func (o GetSupportedCommitmentsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSupportedCommitmentsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetSupportedCommitmentsResultOutput) Filters() GetSupportedCommitmentsFilterArrayOutput {
	return o.ApplyT(func(v GetSupportedCommitmentsResult) []GetSupportedCommitmentsFilter { return v.Filters }).(GetSupportedCommitmentsFilterArrayOutput)
}

func (o GetSupportedCommitmentsResultOutput) HostShapeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSupportedCommitmentsResult) *string { return v.HostShapeName }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSupportedCommitmentsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSupportedCommitmentsResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of the supported Commitments.
func (o GetSupportedCommitmentsResultOutput) Items() GetSupportedCommitmentsItemArrayOutput {
	return o.ApplyT(func(v GetSupportedCommitmentsResult) []GetSupportedCommitmentsItem { return v.Items }).(GetSupportedCommitmentsItemArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSupportedCommitmentsResultOutput{})
}
