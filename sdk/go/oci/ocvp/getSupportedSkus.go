// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ocvp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Supported Skus in Oracle Cloud Infrastructure Oracle Cloud VMware Solution service.
//
// Lists supported SKUs.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/Ocvp"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := Ocvp.GetSupportedSkus(ctx, &ocvp.GetSupportedSkusArgs{
// 			CompartmentId: _var.Compartment_id,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetSupportedSkus(ctx *pulumi.Context, args *GetSupportedSkusArgs, opts ...pulumi.InvokeOption) (*GetSupportedSkusResult, error) {
	var rv GetSupportedSkusResult
	err := ctx.Invoke("oci:Ocvp/getSupportedSkus:getSupportedSkus", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSupportedSkus.
type GetSupportedSkusArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string                   `pulumi:"compartmentId"`
	Filters       []GetSupportedSkusFilter `pulumi:"filters"`
}

// A collection of values returned by getSupportedSkus.
type GetSupportedSkusResult struct {
	CompartmentId string                   `pulumi:"compartmentId"`
	Filters       []GetSupportedSkusFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of the supported SKUs.
	Items []GetSupportedSkusItem `pulumi:"items"`
}

func GetSupportedSkusOutput(ctx *pulumi.Context, args GetSupportedSkusOutputArgs, opts ...pulumi.InvokeOption) GetSupportedSkusResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSupportedSkusResult, error) {
			args := v.(GetSupportedSkusArgs)
			r, err := GetSupportedSkus(ctx, &args, opts...)
			var s GetSupportedSkusResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSupportedSkusResultOutput)
}

// A collection of arguments for invoking getSupportedSkus.
type GetSupportedSkusOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput               `pulumi:"compartmentId"`
	Filters       GetSupportedSkusFilterArrayInput `pulumi:"filters"`
}

func (GetSupportedSkusOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSupportedSkusArgs)(nil)).Elem()
}

// A collection of values returned by getSupportedSkus.
type GetSupportedSkusResultOutput struct{ *pulumi.OutputState }

func (GetSupportedSkusResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSupportedSkusResult)(nil)).Elem()
}

func (o GetSupportedSkusResultOutput) ToGetSupportedSkusResultOutput() GetSupportedSkusResultOutput {
	return o
}

func (o GetSupportedSkusResultOutput) ToGetSupportedSkusResultOutputWithContext(ctx context.Context) GetSupportedSkusResultOutput {
	return o
}

func (o GetSupportedSkusResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSupportedSkusResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetSupportedSkusResultOutput) Filters() GetSupportedSkusFilterArrayOutput {
	return o.ApplyT(func(v GetSupportedSkusResult) []GetSupportedSkusFilter { return v.Filters }).(GetSupportedSkusFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSupportedSkusResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSupportedSkusResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of the supported SKUs.
func (o GetSupportedSkusResultOutput) Items() GetSupportedSkusItemArrayOutput {
	return o.ApplyT(func(v GetSupportedSkusResult) []GetSupportedSkusItem { return v.Items }).(GetSupportedSkusItemArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSupportedSkusResultOutput{})
}
