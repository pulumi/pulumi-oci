// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package onesubsription

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Commitments in Oracle Cloud Infrastructure Onesubscription service.
//
// This list API returns all commitments for a particular Subscribed Service
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/OneSubsription"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := OneSubsription.GetCommitments(ctx, &onesubsription.GetCommitmentsArgs{
// 			CompartmentId:       _var.Compartment_id,
// 			SubscribedServiceId: oci_onesubscription_subscribed_service.Test_subscribed_service.Id,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetCommitments(ctx *pulumi.Context, args *GetCommitmentsArgs, opts ...pulumi.InvokeOption) (*GetCommitmentsResult, error) {
	var rv GetCommitmentsResult
	err := ctx.Invoke("oci:OneSubsription/getCommitments:getCommitments", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCommitments.
type GetCommitmentsArgs struct {
	// The OCID of the root compartment.
	CompartmentId string                 `pulumi:"compartmentId"`
	Filters       []GetCommitmentsFilter `pulumi:"filters"`
	// This param is used to get the commitments for a particular subscribed service
	SubscribedServiceId string `pulumi:"subscribedServiceId"`
}

// A collection of values returned by getCommitments.
type GetCommitmentsResult struct {
	// The list of commitments.
	Commitments   []GetCommitmentsCommitment `pulumi:"commitments"`
	CompartmentId string                     `pulumi:"compartmentId"`
	Filters       []GetCommitmentsFilter     `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// SPM internal Subscribed Service ID
	SubscribedServiceId string `pulumi:"subscribedServiceId"`
}

func GetCommitmentsOutput(ctx *pulumi.Context, args GetCommitmentsOutputArgs, opts ...pulumi.InvokeOption) GetCommitmentsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetCommitmentsResult, error) {
			args := v.(GetCommitmentsArgs)
			r, err := GetCommitments(ctx, &args, opts...)
			var s GetCommitmentsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetCommitmentsResultOutput)
}

// A collection of arguments for invoking getCommitments.
type GetCommitmentsOutputArgs struct {
	// The OCID of the root compartment.
	CompartmentId pulumi.StringInput             `pulumi:"compartmentId"`
	Filters       GetCommitmentsFilterArrayInput `pulumi:"filters"`
	// This param is used to get the commitments for a particular subscribed service
	SubscribedServiceId pulumi.StringInput `pulumi:"subscribedServiceId"`
}

func (GetCommitmentsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommitmentsArgs)(nil)).Elem()
}

// A collection of values returned by getCommitments.
type GetCommitmentsResultOutput struct{ *pulumi.OutputState }

func (GetCommitmentsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommitmentsResult)(nil)).Elem()
}

func (o GetCommitmentsResultOutput) ToGetCommitmentsResultOutput() GetCommitmentsResultOutput {
	return o
}

func (o GetCommitmentsResultOutput) ToGetCommitmentsResultOutputWithContext(ctx context.Context) GetCommitmentsResultOutput {
	return o
}

// The list of commitments.
func (o GetCommitmentsResultOutput) Commitments() GetCommitmentsCommitmentArrayOutput {
	return o.ApplyT(func(v GetCommitmentsResult) []GetCommitmentsCommitment { return v.Commitments }).(GetCommitmentsCommitmentArrayOutput)
}

func (o GetCommitmentsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommitmentsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetCommitmentsResultOutput) Filters() GetCommitmentsFilterArrayOutput {
	return o.ApplyT(func(v GetCommitmentsResult) []GetCommitmentsFilter { return v.Filters }).(GetCommitmentsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCommitmentsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommitmentsResult) string { return v.Id }).(pulumi.StringOutput)
}

// SPM internal Subscribed Service ID
func (o GetCommitmentsResultOutput) SubscribedServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommitmentsResult) string { return v.SubscribedServiceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCommitmentsResultOutput{})
}
