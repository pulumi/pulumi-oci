// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package onesubsription

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Computed Usages in Oracle Cloud Infrastructure Onesubscription service.
//
// This is a collection API which returns a list of Computed Usages for given filters.
func GetComputedUsages(ctx *pulumi.Context, args *GetComputedUsagesArgs, opts ...pulumi.InvokeOption) (*GetComputedUsagesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetComputedUsagesResult
	err := ctx.Invoke("oci:OneSubsription/getComputedUsages:getComputedUsages", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getComputedUsages.
type GetComputedUsagesArgs struct {
	// The OCID of the root compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Product part number for Computed Usage .
	ComputedProduct *string                   `pulumi:"computedProduct"`
	Filters         []GetComputedUsagesFilter `pulumi:"filters"`
	// Product part number for subscribed service line, called parent product.
	ParentProduct *string `pulumi:"parentProduct"`
	// Subscription Id is an identifier associated to the service used for filter the Computed Usage in SPM.
	SubscriptionId string `pulumi:"subscriptionId"`
	// Initial date to filter Computed Usage data in SPM. In the case of non aggregated data the time period between of fromDate and toDate , expressed in RFC 3339 timestamp format.
	TimeFrom string `pulumi:"timeFrom"`
	// Final date to filter Computed Usage data in SPM, expressed in RFC 3339 timestamp format.
	TimeTo string `pulumi:"timeTo"`
}

// A collection of values returned by getComputedUsages.
type GetComputedUsagesResult struct {
	CompartmentId   string  `pulumi:"compartmentId"`
	ComputedProduct *string `pulumi:"computedProduct"`
	// The list of computed_usages.
	ComputedUsages []GetComputedUsagesComputedUsage `pulumi:"computedUsages"`
	Filters        []GetComputedUsagesFilter        `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Product description
	ParentProduct  *string `pulumi:"parentProduct"`
	SubscriptionId string  `pulumi:"subscriptionId"`
	TimeFrom       string  `pulumi:"timeFrom"`
	TimeTo         string  `pulumi:"timeTo"`
}

func GetComputedUsagesOutput(ctx *pulumi.Context, args GetComputedUsagesOutputArgs, opts ...pulumi.InvokeOption) GetComputedUsagesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetComputedUsagesResultOutput, error) {
			args := v.(GetComputedUsagesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:OneSubsription/getComputedUsages:getComputedUsages", args, GetComputedUsagesResultOutput{}, options).(GetComputedUsagesResultOutput), nil
		}).(GetComputedUsagesResultOutput)
}

// A collection of arguments for invoking getComputedUsages.
type GetComputedUsagesOutputArgs struct {
	// The OCID of the root compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Product part number for Computed Usage .
	ComputedProduct pulumi.StringPtrInput             `pulumi:"computedProduct"`
	Filters         GetComputedUsagesFilterArrayInput `pulumi:"filters"`
	// Product part number for subscribed service line, called parent product.
	ParentProduct pulumi.StringPtrInput `pulumi:"parentProduct"`
	// Subscription Id is an identifier associated to the service used for filter the Computed Usage in SPM.
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
	// Initial date to filter Computed Usage data in SPM. In the case of non aggregated data the time period between of fromDate and toDate , expressed in RFC 3339 timestamp format.
	TimeFrom pulumi.StringInput `pulumi:"timeFrom"`
	// Final date to filter Computed Usage data in SPM, expressed in RFC 3339 timestamp format.
	TimeTo pulumi.StringInput `pulumi:"timeTo"`
}

func (GetComputedUsagesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputedUsagesArgs)(nil)).Elem()
}

// A collection of values returned by getComputedUsages.
type GetComputedUsagesResultOutput struct{ *pulumi.OutputState }

func (GetComputedUsagesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputedUsagesResult)(nil)).Elem()
}

func (o GetComputedUsagesResultOutput) ToGetComputedUsagesResultOutput() GetComputedUsagesResultOutput {
	return o
}

func (o GetComputedUsagesResultOutput) ToGetComputedUsagesResultOutputWithContext(ctx context.Context) GetComputedUsagesResultOutput {
	return o
}

func (o GetComputedUsagesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputedUsagesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetComputedUsagesResultOutput) ComputedProduct() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesResult) *string { return v.ComputedProduct }).(pulumi.StringPtrOutput)
}

// The list of computed_usages.
func (o GetComputedUsagesResultOutput) ComputedUsages() GetComputedUsagesComputedUsageArrayOutput {
	return o.ApplyT(func(v GetComputedUsagesResult) []GetComputedUsagesComputedUsage { return v.ComputedUsages }).(GetComputedUsagesComputedUsageArrayOutput)
}

func (o GetComputedUsagesResultOutput) Filters() GetComputedUsagesFilterArrayOutput {
	return o.ApplyT(func(v GetComputedUsagesResult) []GetComputedUsagesFilter { return v.Filters }).(GetComputedUsagesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetComputedUsagesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputedUsagesResult) string { return v.Id }).(pulumi.StringOutput)
}

// Product description
func (o GetComputedUsagesResultOutput) ParentProduct() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesResult) *string { return v.ParentProduct }).(pulumi.StringPtrOutput)
}

func (o GetComputedUsagesResultOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputedUsagesResult) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

func (o GetComputedUsagesResultOutput) TimeFrom() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputedUsagesResult) string { return v.TimeFrom }).(pulumi.StringOutput)
}

func (o GetComputedUsagesResultOutput) TimeTo() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputedUsagesResult) string { return v.TimeTo }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetComputedUsagesResultOutput{})
}
