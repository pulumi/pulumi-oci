// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package onesubsription

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Subscribed Services in Oracle Cloud Infrastructure Onesubscription service.
//
// # This list API returns all subscribed services for given Subscription ID
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/OneSubsription"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := OneSubsription.GetSubscribedServices(ctx, &onesubsription.GetSubscribedServicesArgs{
//				CompartmentId:  _var.Compartment_id,
//				SubscriptionId: oci_onesubscription_subscription.Test_subscription.Id,
//				OrderLineId:    pulumi.StringRef(oci_onesubscription_order_line.Test_order_line.Id),
//				Status:         pulumi.StringRef(_var.Subscribed_service_status),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSubscribedServices(ctx *pulumi.Context, args *GetSubscribedServicesArgs, opts ...pulumi.InvokeOption) (*GetSubscribedServicesResult, error) {
	var rv GetSubscribedServicesResult
	err := ctx.Invoke("oci:OneSubsription/getSubscribedServices:getSubscribedServices", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSubscribedServices.
type GetSubscribedServicesArgs struct {
	// The OCID of the root compartment.
	CompartmentId string                        `pulumi:"compartmentId"`
	Filters       []GetSubscribedServicesFilter `pulumi:"filters"`
	// Order Line identifier at subscribed service level . This identifier is originated in Order Management module. Default is null.
	OrderLineId *string `pulumi:"orderLineId"`
	// This param is used to filter subscribed services based on its status
	Status *string `pulumi:"status"`
	// Line level Subscription Id
	SubscriptionId string `pulumi:"subscriptionId"`
}

// A collection of values returned by getSubscribedServices.
type GetSubscribedServicesResult struct {
	CompartmentId string                        `pulumi:"compartmentId"`
	Filters       []GetSubscribedServicesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Sales Order Line Id associated to the subscribed service
	OrderLineId *string `pulumi:"orderLineId"`
	// Subscribed service status
	Status *string `pulumi:"status"`
	// The list of subscribed_services.
	SubscribedServices []GetSubscribedServicesSubscribedService `pulumi:"subscribedServices"`
	// Subscription ID associated to the subscribed service
	SubscriptionId string `pulumi:"subscriptionId"`
}

func GetSubscribedServicesOutput(ctx *pulumi.Context, args GetSubscribedServicesOutputArgs, opts ...pulumi.InvokeOption) GetSubscribedServicesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSubscribedServicesResult, error) {
			args := v.(GetSubscribedServicesArgs)
			r, err := GetSubscribedServices(ctx, &args, opts...)
			var s GetSubscribedServicesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSubscribedServicesResultOutput)
}

// A collection of arguments for invoking getSubscribedServices.
type GetSubscribedServicesOutputArgs struct {
	// The OCID of the root compartment.
	CompartmentId pulumi.StringInput                    `pulumi:"compartmentId"`
	Filters       GetSubscribedServicesFilterArrayInput `pulumi:"filters"`
	// Order Line identifier at subscribed service level . This identifier is originated in Order Management module. Default is null.
	OrderLineId pulumi.StringPtrInput `pulumi:"orderLineId"`
	// This param is used to filter subscribed services based on its status
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Line level Subscription Id
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
}

func (GetSubscribedServicesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscribedServicesArgs)(nil)).Elem()
}

// A collection of values returned by getSubscribedServices.
type GetSubscribedServicesResultOutput struct{ *pulumi.OutputState }

func (GetSubscribedServicesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscribedServicesResult)(nil)).Elem()
}

func (o GetSubscribedServicesResultOutput) ToGetSubscribedServicesResultOutput() GetSubscribedServicesResultOutput {
	return o
}

func (o GetSubscribedServicesResultOutput) ToGetSubscribedServicesResultOutputWithContext(ctx context.Context) GetSubscribedServicesResultOutput {
	return o
}

func (o GetSubscribedServicesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscribedServicesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetSubscribedServicesResultOutput) Filters() GetSubscribedServicesFilterArrayOutput {
	return o.ApplyT(func(v GetSubscribedServicesResult) []GetSubscribedServicesFilter { return v.Filters }).(GetSubscribedServicesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSubscribedServicesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscribedServicesResult) string { return v.Id }).(pulumi.StringOutput)
}

// Sales Order Line Id associated to the subscribed service
func (o GetSubscribedServicesResultOutput) OrderLineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscribedServicesResult) *string { return v.OrderLineId }).(pulumi.StringPtrOutput)
}

// Subscribed service status
func (o GetSubscribedServicesResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscribedServicesResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The list of subscribed_services.
func (o GetSubscribedServicesResultOutput) SubscribedServices() GetSubscribedServicesSubscribedServiceArrayOutput {
	return o.ApplyT(func(v GetSubscribedServicesResult) []GetSubscribedServicesSubscribedService {
		return v.SubscribedServices
	}).(GetSubscribedServicesSubscribedServiceArrayOutput)
}

// Subscription ID associated to the subscribed service
func (o GetSubscribedServicesResultOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscribedServicesResult) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSubscribedServicesResultOutput{})
}
