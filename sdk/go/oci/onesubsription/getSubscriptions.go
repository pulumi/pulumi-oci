// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package onesubsription

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Subscriptions in Oracle Cloud Infrastructure Onesubscription service.
//
// This list API returns all subscriptions for a given plan number or subscription id or buyer email
// and provides additional parameters to include ratecard and commitment details.
// This API expects exactly one of the above mentioned parameters as input. If more than one parameters are provided the API will throw
// a 400 - invalid parameters exception and if no parameters are provided it will throw a 400 - missing parameter exception
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/OneSubsription"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := OneSubsription.GetSubscriptions(ctx, &onesubsription.GetSubscriptionsArgs{
//				CompartmentId:        compartmentId,
//				BuyerEmail:           pulumi.StringRef(subscriptionBuyerEmail),
//				IsCommitInfoRequired: pulumi.BoolRef(subscriptionIsCommitInfoRequired),
//				PlanNumber:           pulumi.StringRef(subscriptionPlanNumber),
//				SubscriptionId:       pulumi.StringRef(testSubscription.Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSubscriptions(ctx *pulumi.Context, args *GetSubscriptionsArgs, opts ...pulumi.InvokeOption) (*GetSubscriptionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSubscriptionsResult
	err := ctx.Invoke("oci:OneSubsription/getSubscriptions:getSubscriptions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSubscriptions.
type GetSubscriptionsArgs struct {
	// Buyer Email Id
	BuyerEmail *string `pulumi:"buyerEmail"`
	// The OCID of the root compartment.
	CompartmentId string                   `pulumi:"compartmentId"`
	Filters       []GetSubscriptionsFilter `pulumi:"filters"`
	// Boolean value to decide whether commitment services will be shown
	IsCommitInfoRequired *bool `pulumi:"isCommitInfoRequired"`
	// The Plan Number
	PlanNumber *string `pulumi:"planNumber"`
	// Line level Subscription Id
	SubscriptionId *string `pulumi:"subscriptionId"`
}

// A collection of values returned by getSubscriptions.
type GetSubscriptionsResult struct {
	BuyerEmail    *string                  `pulumi:"buyerEmail"`
	CompartmentId string                   `pulumi:"compartmentId"`
	Filters       []GetSubscriptionsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                   string  `pulumi:"id"`
	IsCommitInfoRequired *bool   `pulumi:"isCommitInfoRequired"`
	PlanNumber           *string `pulumi:"planNumber"`
	SubscriptionId       *string `pulumi:"subscriptionId"`
	// The list of subscriptions.
	Subscriptions []GetSubscriptionsSubscription `pulumi:"subscriptions"`
}

func GetSubscriptionsOutput(ctx *pulumi.Context, args GetSubscriptionsOutputArgs, opts ...pulumi.InvokeOption) GetSubscriptionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSubscriptionsResult, error) {
			args := v.(GetSubscriptionsArgs)
			r, err := GetSubscriptions(ctx, &args, opts...)
			var s GetSubscriptionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSubscriptionsResultOutput)
}

// A collection of arguments for invoking getSubscriptions.
type GetSubscriptionsOutputArgs struct {
	// Buyer Email Id
	BuyerEmail pulumi.StringPtrInput `pulumi:"buyerEmail"`
	// The OCID of the root compartment.
	CompartmentId pulumi.StringInput               `pulumi:"compartmentId"`
	Filters       GetSubscriptionsFilterArrayInput `pulumi:"filters"`
	// Boolean value to decide whether commitment services will be shown
	IsCommitInfoRequired pulumi.BoolPtrInput `pulumi:"isCommitInfoRequired"`
	// The Plan Number
	PlanNumber pulumi.StringPtrInput `pulumi:"planNumber"`
	// Line level Subscription Id
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
}

func (GetSubscriptionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsArgs)(nil)).Elem()
}

// A collection of values returned by getSubscriptions.
type GetSubscriptionsResultOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsResult)(nil)).Elem()
}

func (o GetSubscriptionsResultOutput) ToGetSubscriptionsResultOutput() GetSubscriptionsResultOutput {
	return o
}

func (o GetSubscriptionsResultOutput) ToGetSubscriptionsResultOutputWithContext(ctx context.Context) GetSubscriptionsResultOutput {
	return o
}

func (o GetSubscriptionsResultOutput) BuyerEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsResult) *string { return v.BuyerEmail }).(pulumi.StringPtrOutput)
}

func (o GetSubscriptionsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetSubscriptionsResultOutput) Filters() GetSubscriptionsFilterArrayOutput {
	return o.ApplyT(func(v GetSubscriptionsResult) []GetSubscriptionsFilter { return v.Filters }).(GetSubscriptionsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSubscriptionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSubscriptionsResultOutput) IsCommitInfoRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsResult) *bool { return v.IsCommitInfoRequired }).(pulumi.BoolPtrOutput)
}

func (o GetSubscriptionsResultOutput) PlanNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsResult) *string { return v.PlanNumber }).(pulumi.StringPtrOutput)
}

func (o GetSubscriptionsResultOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsResult) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

// The list of subscriptions.
func (o GetSubscriptionsResultOutput) Subscriptions() GetSubscriptionsSubscriptionArrayOutput {
	return o.ApplyT(func(v GetSubscriptionsResult) []GetSubscriptionsSubscription { return v.Subscriptions }).(GetSubscriptionsSubscriptionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSubscriptionsResultOutput{})
}
