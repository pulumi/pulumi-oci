// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ons

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Notification Topic resource in Oracle Cloud Infrastructure Notifications service.
//
// Gets the specified topic's configuration information.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/Ons"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := Ons.GetNotificationTopic(ctx, &ons.GetNotificationTopicArgs{
// 			TopicId: oci_ons_notification_topic.Test_notification_topic.Id,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupNotificationTopic(ctx *pulumi.Context, args *LookupNotificationTopicArgs, opts ...pulumi.InvokeOption) (*LookupNotificationTopicResult, error) {
	var rv LookupNotificationTopicResult
	err := ctx.Invoke("oci:Ons/getNotificationTopic:getNotificationTopic", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNotificationTopic.
type LookupNotificationTopicArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic to retrieve.
	TopicId string `pulumi:"topicId"`
}

// A collection of values returned by getNotificationTopic.
type LookupNotificationTopicResult struct {
	// The endpoint for managing subscriptions or publishing messages to the topic.
	ApiEndpoint string `pulumi:"apiEndpoint"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for the topic.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The description of the topic.
	Description string `pulumi:"description"`
	// For optimistic concurrency control. See `if-match`.
	Etag string `pulumi:"etag"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	Id           string                 `pulumi:"id"`
	// The name of the topic.
	Name string `pulumi:"name"`
	// A unique short topic Id. This is used only for SMS subscriptions.
	ShortTopicId string `pulumi:"shortTopicId"`
	// The lifecycle state of the topic.
	State string `pulumi:"state"`
	// The time the topic was created.
	TimeCreated string `pulumi:"timeCreated"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic.
	TopicId string `pulumi:"topicId"`
}

func LookupNotificationTopicOutput(ctx *pulumi.Context, args LookupNotificationTopicOutputArgs, opts ...pulumi.InvokeOption) LookupNotificationTopicResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupNotificationTopicResult, error) {
			args := v.(LookupNotificationTopicArgs)
			r, err := LookupNotificationTopic(ctx, &args, opts...)
			var s LookupNotificationTopicResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupNotificationTopicResultOutput)
}

// A collection of arguments for invoking getNotificationTopic.
type LookupNotificationTopicOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic to retrieve.
	TopicId pulumi.StringInput `pulumi:"topicId"`
}

func (LookupNotificationTopicOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNotificationTopicArgs)(nil)).Elem()
}

// A collection of values returned by getNotificationTopic.
type LookupNotificationTopicResultOutput struct{ *pulumi.OutputState }

func (LookupNotificationTopicResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNotificationTopicResult)(nil)).Elem()
}

func (o LookupNotificationTopicResultOutput) ToLookupNotificationTopicResultOutput() LookupNotificationTopicResultOutput {
	return o
}

func (o LookupNotificationTopicResultOutput) ToLookupNotificationTopicResultOutputWithContext(ctx context.Context) LookupNotificationTopicResultOutput {
	return o
}

// The endpoint for managing subscriptions or publishing messages to the topic.
func (o LookupNotificationTopicResultOutput) ApiEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNotificationTopicResult) string { return v.ApiEndpoint }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for the topic.
func (o LookupNotificationTopicResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNotificationTopicResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o LookupNotificationTopicResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupNotificationTopicResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// The description of the topic.
func (o LookupNotificationTopicResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNotificationTopicResult) string { return v.Description }).(pulumi.StringOutput)
}

// For optimistic concurrency control. See `if-match`.
func (o LookupNotificationTopicResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNotificationTopicResult) string { return v.Etag }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o LookupNotificationTopicResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupNotificationTopicResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

func (o LookupNotificationTopicResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNotificationTopicResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the topic.
func (o LookupNotificationTopicResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNotificationTopicResult) string { return v.Name }).(pulumi.StringOutput)
}

// A unique short topic Id. This is used only for SMS subscriptions.
func (o LookupNotificationTopicResultOutput) ShortTopicId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNotificationTopicResult) string { return v.ShortTopicId }).(pulumi.StringOutput)
}

// The lifecycle state of the topic.
func (o LookupNotificationTopicResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNotificationTopicResult) string { return v.State }).(pulumi.StringOutput)
}

// The time the topic was created.
func (o LookupNotificationTopicResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNotificationTopicResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic.
func (o LookupNotificationTopicResultOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNotificationTopicResult) string { return v.TopicId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNotificationTopicResultOutput{})
}
