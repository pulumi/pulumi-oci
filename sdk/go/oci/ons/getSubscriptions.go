// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ons

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Subscriptions in Oracle Cloud Infrastructure Notifications service.
//
// Lists the subscriptions in the specified compartment or topic.
//
// Transactions Per Minute (TPM) per-tenancy limit for this operation: 60.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Ons"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Ons.GetSubscriptions(ctx, &ons.GetSubscriptionsArgs{
//				CompartmentId: _var.Compartment_id,
//				TopicId:       pulumi.StringRef(oci_ons_notification_topic.Test_notification_topic.Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSubscriptions(ctx *pulumi.Context, args *GetSubscriptionsArgs, opts ...pulumi.InvokeOption) (*GetSubscriptionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSubscriptionsResult
	err := ctx.Invoke("oci:Ons/getSubscriptions:getSubscriptions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSubscriptions.
type GetSubscriptionsArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string                   `pulumi:"compartmentId"`
	Filters       []GetSubscriptionsFilter `pulumi:"filters"`
	// Return all subscriptions that are subscribed to the given topic OCID. Either this query parameter or the compartmentId query parameter must be set.
	TopicId *string `pulumi:"topicId"`
}

// A collection of values returned by getSubscriptions.
type GetSubscriptionsResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for the subscription.
	CompartmentId string                   `pulumi:"compartmentId"`
	Filters       []GetSubscriptionsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id *string `pulumi:"id"`
	// The list of subscriptions.
	Subscriptions []GetSubscriptionsSubscription `pulumi:"subscriptions"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the associated topic.
	TopicId *string `pulumi:"topicId"`
}

func GetSubscriptionsOutput(ctx *pulumi.Context, args GetSubscriptionsOutputArgs, opts ...pulumi.InvokeOption) GetSubscriptionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSubscriptionsResult, error) {
			args := v.(GetSubscriptionsArgs)
			r, err := GetSubscriptions(ctx, &args, opts...)
			var s GetSubscriptionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSubscriptionsResultOutput)
}

// A collection of arguments for invoking getSubscriptions.
type GetSubscriptionsOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput               `pulumi:"compartmentId"`
	Filters       GetSubscriptionsFilterArrayInput `pulumi:"filters"`
	// Return all subscriptions that are subscribed to the given topic OCID. Either this query parameter or the compartmentId query parameter must be set.
	TopicId pulumi.StringPtrInput `pulumi:"topicId"`
}

func (GetSubscriptionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsArgs)(nil)).Elem()
}

// A collection of values returned by getSubscriptions.
type GetSubscriptionsResultOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsResult)(nil)).Elem()
}

func (o GetSubscriptionsResultOutput) ToGetSubscriptionsResultOutput() GetSubscriptionsResultOutput {
	return o
}

func (o GetSubscriptionsResultOutput) ToGetSubscriptionsResultOutputWithContext(ctx context.Context) GetSubscriptionsResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for the subscription.
func (o GetSubscriptionsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetSubscriptionsResultOutput) Filters() GetSubscriptionsFilterArrayOutput {
	return o.ApplyT(func(v GetSubscriptionsResult) []GetSubscriptionsFilter { return v.Filters }).(GetSubscriptionsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSubscriptionsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The list of subscriptions.
func (o GetSubscriptionsResultOutput) Subscriptions() GetSubscriptionsSubscriptionArrayOutput {
	return o.ApplyT(func(v GetSubscriptionsResult) []GetSubscriptionsSubscription { return v.Subscriptions }).(GetSubscriptionsSubscriptionArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the associated topic.
func (o GetSubscriptionsResultOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsResult) *string { return v.TopicId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSubscriptionsResultOutput{})
}
