// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ons

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GetNotificationTopicsFilter struct {
	// A filter to only return resources that match the given name exactly.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetNotificationTopicsFilterInput is an input type that accepts GetNotificationTopicsFilterArgs and GetNotificationTopicsFilterOutput values.
// You can construct a concrete instance of `GetNotificationTopicsFilterInput` via:
//
//	GetNotificationTopicsFilterArgs{...}
type GetNotificationTopicsFilterInput interface {
	pulumi.Input

	ToGetNotificationTopicsFilterOutput() GetNotificationTopicsFilterOutput
	ToGetNotificationTopicsFilterOutputWithContext(context.Context) GetNotificationTopicsFilterOutput
}

type GetNotificationTopicsFilterArgs struct {
	// A filter to only return resources that match the given name exactly.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNotificationTopicsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotificationTopicsFilter)(nil)).Elem()
}

func (i GetNotificationTopicsFilterArgs) ToGetNotificationTopicsFilterOutput() GetNotificationTopicsFilterOutput {
	return i.ToGetNotificationTopicsFilterOutputWithContext(context.Background())
}

func (i GetNotificationTopicsFilterArgs) ToGetNotificationTopicsFilterOutputWithContext(ctx context.Context) GetNotificationTopicsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNotificationTopicsFilterOutput)
}

// GetNotificationTopicsFilterArrayInput is an input type that accepts GetNotificationTopicsFilterArray and GetNotificationTopicsFilterArrayOutput values.
// You can construct a concrete instance of `GetNotificationTopicsFilterArrayInput` via:
//
//	GetNotificationTopicsFilterArray{ GetNotificationTopicsFilterArgs{...} }
type GetNotificationTopicsFilterArrayInput interface {
	pulumi.Input

	ToGetNotificationTopicsFilterArrayOutput() GetNotificationTopicsFilterArrayOutput
	ToGetNotificationTopicsFilterArrayOutputWithContext(context.Context) GetNotificationTopicsFilterArrayOutput
}

type GetNotificationTopicsFilterArray []GetNotificationTopicsFilterInput

func (GetNotificationTopicsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNotificationTopicsFilter)(nil)).Elem()
}

func (i GetNotificationTopicsFilterArray) ToGetNotificationTopicsFilterArrayOutput() GetNotificationTopicsFilterArrayOutput {
	return i.ToGetNotificationTopicsFilterArrayOutputWithContext(context.Background())
}

func (i GetNotificationTopicsFilterArray) ToGetNotificationTopicsFilterArrayOutputWithContext(ctx context.Context) GetNotificationTopicsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNotificationTopicsFilterArrayOutput)
}

type GetNotificationTopicsFilterOutput struct{ *pulumi.OutputState }

func (GetNotificationTopicsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotificationTopicsFilter)(nil)).Elem()
}

func (o GetNotificationTopicsFilterOutput) ToGetNotificationTopicsFilterOutput() GetNotificationTopicsFilterOutput {
	return o
}

func (o GetNotificationTopicsFilterOutput) ToGetNotificationTopicsFilterOutputWithContext(ctx context.Context) GetNotificationTopicsFilterOutput {
	return o
}

// A filter to only return resources that match the given name exactly.
func (o GetNotificationTopicsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotificationTopicsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetNotificationTopicsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetNotificationTopicsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetNotificationTopicsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNotificationTopicsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNotificationTopicsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetNotificationTopicsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNotificationTopicsFilter)(nil)).Elem()
}

func (o GetNotificationTopicsFilterArrayOutput) ToGetNotificationTopicsFilterArrayOutput() GetNotificationTopicsFilterArrayOutput {
	return o
}

func (o GetNotificationTopicsFilterArrayOutput) ToGetNotificationTopicsFilterArrayOutputWithContext(ctx context.Context) GetNotificationTopicsFilterArrayOutput {
	return o
}

func (o GetNotificationTopicsFilterArrayOutput) Index(i pulumi.IntInput) GetNotificationTopicsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNotificationTopicsFilter {
		return vs[0].([]GetNotificationTopicsFilter)[vs[1].(int)]
	}).(GetNotificationTopicsFilterOutput)
}

type GetNotificationTopicsNotificationTopic struct {
	// The endpoint for managing subscriptions or publishing messages to the topic.
	ApiEndpoint string `pulumi:"apiEndpoint"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// The description of the topic.
	Description string `pulumi:"description"`
	// For optimistic concurrency control. See `if-match`.
	Etag string `pulumi:"etag"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// A filter to only return resources that match the given id exactly.
	Id string `pulumi:"id"`
	// A filter to only return resources that match the given name exactly.
	Name string `pulumi:"name"`
	// A unique short topic Id. This is used only for SMS subscriptions.
	ShortTopicId string `pulumi:"shortTopicId"`
	// Filter returned list by specified lifecycle state. This parameter is case-insensitive.
	State string `pulumi:"state"`
	// The time the topic was created.
	TimeCreated string `pulumi:"timeCreated"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic.
	TopicId string `pulumi:"topicId"`
}

// GetNotificationTopicsNotificationTopicInput is an input type that accepts GetNotificationTopicsNotificationTopicArgs and GetNotificationTopicsNotificationTopicOutput values.
// You can construct a concrete instance of `GetNotificationTopicsNotificationTopicInput` via:
//
//	GetNotificationTopicsNotificationTopicArgs{...}
type GetNotificationTopicsNotificationTopicInput interface {
	pulumi.Input

	ToGetNotificationTopicsNotificationTopicOutput() GetNotificationTopicsNotificationTopicOutput
	ToGetNotificationTopicsNotificationTopicOutputWithContext(context.Context) GetNotificationTopicsNotificationTopicOutput
}

type GetNotificationTopicsNotificationTopicArgs struct {
	// The endpoint for managing subscriptions or publishing messages to the topic.
	ApiEndpoint pulumi.StringInput `pulumi:"apiEndpoint"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// The description of the topic.
	Description pulumi.StringInput `pulumi:"description"`
	// For optimistic concurrency control. See `if-match`.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// A filter to only return resources that match the given id exactly.
	Id pulumi.StringInput `pulumi:"id"`
	// A filter to only return resources that match the given name exactly.
	Name pulumi.StringInput `pulumi:"name"`
	// A unique short topic Id. This is used only for SMS subscriptions.
	ShortTopicId pulumi.StringInput `pulumi:"shortTopicId"`
	// Filter returned list by specified lifecycle state. This parameter is case-insensitive.
	State pulumi.StringInput `pulumi:"state"`
	// The time the topic was created.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic.
	TopicId pulumi.StringInput `pulumi:"topicId"`
}

func (GetNotificationTopicsNotificationTopicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotificationTopicsNotificationTopic)(nil)).Elem()
}

func (i GetNotificationTopicsNotificationTopicArgs) ToGetNotificationTopicsNotificationTopicOutput() GetNotificationTopicsNotificationTopicOutput {
	return i.ToGetNotificationTopicsNotificationTopicOutputWithContext(context.Background())
}

func (i GetNotificationTopicsNotificationTopicArgs) ToGetNotificationTopicsNotificationTopicOutputWithContext(ctx context.Context) GetNotificationTopicsNotificationTopicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNotificationTopicsNotificationTopicOutput)
}

// GetNotificationTopicsNotificationTopicArrayInput is an input type that accepts GetNotificationTopicsNotificationTopicArray and GetNotificationTopicsNotificationTopicArrayOutput values.
// You can construct a concrete instance of `GetNotificationTopicsNotificationTopicArrayInput` via:
//
//	GetNotificationTopicsNotificationTopicArray{ GetNotificationTopicsNotificationTopicArgs{...} }
type GetNotificationTopicsNotificationTopicArrayInput interface {
	pulumi.Input

	ToGetNotificationTopicsNotificationTopicArrayOutput() GetNotificationTopicsNotificationTopicArrayOutput
	ToGetNotificationTopicsNotificationTopicArrayOutputWithContext(context.Context) GetNotificationTopicsNotificationTopicArrayOutput
}

type GetNotificationTopicsNotificationTopicArray []GetNotificationTopicsNotificationTopicInput

func (GetNotificationTopicsNotificationTopicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNotificationTopicsNotificationTopic)(nil)).Elem()
}

func (i GetNotificationTopicsNotificationTopicArray) ToGetNotificationTopicsNotificationTopicArrayOutput() GetNotificationTopicsNotificationTopicArrayOutput {
	return i.ToGetNotificationTopicsNotificationTopicArrayOutputWithContext(context.Background())
}

func (i GetNotificationTopicsNotificationTopicArray) ToGetNotificationTopicsNotificationTopicArrayOutputWithContext(ctx context.Context) GetNotificationTopicsNotificationTopicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNotificationTopicsNotificationTopicArrayOutput)
}

type GetNotificationTopicsNotificationTopicOutput struct{ *pulumi.OutputState }

func (GetNotificationTopicsNotificationTopicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotificationTopicsNotificationTopic)(nil)).Elem()
}

func (o GetNotificationTopicsNotificationTopicOutput) ToGetNotificationTopicsNotificationTopicOutput() GetNotificationTopicsNotificationTopicOutput {
	return o
}

func (o GetNotificationTopicsNotificationTopicOutput) ToGetNotificationTopicsNotificationTopicOutputWithContext(ctx context.Context) GetNotificationTopicsNotificationTopicOutput {
	return o
}

// The endpoint for managing subscriptions or publishing messages to the topic.
func (o GetNotificationTopicsNotificationTopicOutput) ApiEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotificationTopicsNotificationTopic) string { return v.ApiEndpoint }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o GetNotificationTopicsNotificationTopicOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotificationTopicsNotificationTopic) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o GetNotificationTopicsNotificationTopicOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetNotificationTopicsNotificationTopic) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// The description of the topic.
func (o GetNotificationTopicsNotificationTopicOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotificationTopicsNotificationTopic) string { return v.Description }).(pulumi.StringOutput)
}

// For optimistic concurrency control. See `if-match`.
func (o GetNotificationTopicsNotificationTopicOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotificationTopicsNotificationTopic) string { return v.Etag }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o GetNotificationTopicsNotificationTopicOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetNotificationTopicsNotificationTopic) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// A filter to only return resources that match the given id exactly.
func (o GetNotificationTopicsNotificationTopicOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotificationTopicsNotificationTopic) string { return v.Id }).(pulumi.StringOutput)
}

// A filter to only return resources that match the given name exactly.
func (o GetNotificationTopicsNotificationTopicOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotificationTopicsNotificationTopic) string { return v.Name }).(pulumi.StringOutput)
}

// A unique short topic Id. This is used only for SMS subscriptions.
func (o GetNotificationTopicsNotificationTopicOutput) ShortTopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotificationTopicsNotificationTopic) string { return v.ShortTopicId }).(pulumi.StringOutput)
}

// Filter returned list by specified lifecycle state. This parameter is case-insensitive.
func (o GetNotificationTopicsNotificationTopicOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotificationTopicsNotificationTopic) string { return v.State }).(pulumi.StringOutput)
}

// The time the topic was created.
func (o GetNotificationTopicsNotificationTopicOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotificationTopicsNotificationTopic) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic.
func (o GetNotificationTopicsNotificationTopicOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotificationTopicsNotificationTopic) string { return v.TopicId }).(pulumi.StringOutput)
}

type GetNotificationTopicsNotificationTopicArrayOutput struct{ *pulumi.OutputState }

func (GetNotificationTopicsNotificationTopicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNotificationTopicsNotificationTopic)(nil)).Elem()
}

func (o GetNotificationTopicsNotificationTopicArrayOutput) ToGetNotificationTopicsNotificationTopicArrayOutput() GetNotificationTopicsNotificationTopicArrayOutput {
	return o
}

func (o GetNotificationTopicsNotificationTopicArrayOutput) ToGetNotificationTopicsNotificationTopicArrayOutputWithContext(ctx context.Context) GetNotificationTopicsNotificationTopicArrayOutput {
	return o
}

func (o GetNotificationTopicsNotificationTopicArrayOutput) Index(i pulumi.IntInput) GetNotificationTopicsNotificationTopicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNotificationTopicsNotificationTopic {
		return vs[0].([]GetNotificationTopicsNotificationTopic)[vs[1].(int)]
	}).(GetNotificationTopicsNotificationTopicOutput)
}

type GetSubscriptionsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetSubscriptionsFilterInput is an input type that accepts GetSubscriptionsFilterArgs and GetSubscriptionsFilterOutput values.
// You can construct a concrete instance of `GetSubscriptionsFilterInput` via:
//
//	GetSubscriptionsFilterArgs{...}
type GetSubscriptionsFilterInput interface {
	pulumi.Input

	ToGetSubscriptionsFilterOutput() GetSubscriptionsFilterOutput
	ToGetSubscriptionsFilterOutputWithContext(context.Context) GetSubscriptionsFilterOutput
}

type GetSubscriptionsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSubscriptionsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsFilter)(nil)).Elem()
}

func (i GetSubscriptionsFilterArgs) ToGetSubscriptionsFilterOutput() GetSubscriptionsFilterOutput {
	return i.ToGetSubscriptionsFilterOutputWithContext(context.Background())
}

func (i GetSubscriptionsFilterArgs) ToGetSubscriptionsFilterOutputWithContext(ctx context.Context) GetSubscriptionsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionsFilterOutput)
}

// GetSubscriptionsFilterArrayInput is an input type that accepts GetSubscriptionsFilterArray and GetSubscriptionsFilterArrayOutput values.
// You can construct a concrete instance of `GetSubscriptionsFilterArrayInput` via:
//
//	GetSubscriptionsFilterArray{ GetSubscriptionsFilterArgs{...} }
type GetSubscriptionsFilterArrayInput interface {
	pulumi.Input

	ToGetSubscriptionsFilterArrayOutput() GetSubscriptionsFilterArrayOutput
	ToGetSubscriptionsFilterArrayOutputWithContext(context.Context) GetSubscriptionsFilterArrayOutput
}

type GetSubscriptionsFilterArray []GetSubscriptionsFilterInput

func (GetSubscriptionsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionsFilter)(nil)).Elem()
}

func (i GetSubscriptionsFilterArray) ToGetSubscriptionsFilterArrayOutput() GetSubscriptionsFilterArrayOutput {
	return i.ToGetSubscriptionsFilterArrayOutputWithContext(context.Background())
}

func (i GetSubscriptionsFilterArray) ToGetSubscriptionsFilterArrayOutputWithContext(ctx context.Context) GetSubscriptionsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionsFilterArrayOutput)
}

type GetSubscriptionsFilterOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsFilter)(nil)).Elem()
}

func (o GetSubscriptionsFilterOutput) ToGetSubscriptionsFilterOutput() GetSubscriptionsFilterOutput {
	return o
}

func (o GetSubscriptionsFilterOutput) ToGetSubscriptionsFilterOutputWithContext(ctx context.Context) GetSubscriptionsFilterOutput {
	return o
}

func (o GetSubscriptionsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSubscriptionsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetSubscriptionsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubscriptionsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSubscriptionsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionsFilter)(nil)).Elem()
}

func (o GetSubscriptionsFilterArrayOutput) ToGetSubscriptionsFilterArrayOutput() GetSubscriptionsFilterArrayOutput {
	return o
}

func (o GetSubscriptionsFilterArrayOutput) ToGetSubscriptionsFilterArrayOutputWithContext(ctx context.Context) GetSubscriptionsFilterArrayOutput {
	return o
}

func (o GetSubscriptionsFilterArrayOutput) Index(i pulumi.IntInput) GetSubscriptionsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubscriptionsFilter {
		return vs[0].([]GetSubscriptionsFilter)[vs[1].(int)]
	}).(GetSubscriptionsFilterOutput)
}

type GetSubscriptionsSubscription struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The time when this suscription was created.
	CreatedTime string `pulumi:"createdTime"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags      map[string]string                            `pulumi:"definedTags"`
	DeliveryPolicies []GetSubscriptionsSubscriptionDeliveryPolicy `pulumi:"deliveryPolicies"`
	// A locator that corresponds to the subscription protocol.  For example, an email address for a subscription that uses the `EMAIL` protocol, or a URL for a subscription that uses an HTTP-based protocol. Avoid entering confidential information.
	Endpoint string `pulumi:"endpoint"`
	// For optimistic concurrency control. See `if-match`.
	Etag string `pulumi:"etag"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subscription.
	Id string `pulumi:"id"`
	// The protocol used for the subscription.
	Protocol string `pulumi:"protocol"`
	// The lifecycle state of the subscription. The status of a new subscription is PENDING; when confirmed, the subscription status changes to ACTIVE.
	State string `pulumi:"state"`
	// Return all subscriptions that are subscribed to the given topic OCID. Either this query parameter or the compartmentId query parameter must be set.
	TopicId string `pulumi:"topicId"`
}

// GetSubscriptionsSubscriptionInput is an input type that accepts GetSubscriptionsSubscriptionArgs and GetSubscriptionsSubscriptionOutput values.
// You can construct a concrete instance of `GetSubscriptionsSubscriptionInput` via:
//
//	GetSubscriptionsSubscriptionArgs{...}
type GetSubscriptionsSubscriptionInput interface {
	pulumi.Input

	ToGetSubscriptionsSubscriptionOutput() GetSubscriptionsSubscriptionOutput
	ToGetSubscriptionsSubscriptionOutputWithContext(context.Context) GetSubscriptionsSubscriptionOutput
}

type GetSubscriptionsSubscriptionArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The time when this suscription was created.
	CreatedTime pulumi.StringInput `pulumi:"createdTime"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags      pulumi.StringMapInput                                `pulumi:"definedTags"`
	DeliveryPolicies GetSubscriptionsSubscriptionDeliveryPolicyArrayInput `pulumi:"deliveryPolicies"`
	// A locator that corresponds to the subscription protocol.  For example, an email address for a subscription that uses the `EMAIL` protocol, or a URL for a subscription that uses an HTTP-based protocol. Avoid entering confidential information.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// For optimistic concurrency control. See `if-match`.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subscription.
	Id pulumi.StringInput `pulumi:"id"`
	// The protocol used for the subscription.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The lifecycle state of the subscription. The status of a new subscription is PENDING; when confirmed, the subscription status changes to ACTIVE.
	State pulumi.StringInput `pulumi:"state"`
	// Return all subscriptions that are subscribed to the given topic OCID. Either this query parameter or the compartmentId query parameter must be set.
	TopicId pulumi.StringInput `pulumi:"topicId"`
}

func (GetSubscriptionsSubscriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsSubscription)(nil)).Elem()
}

func (i GetSubscriptionsSubscriptionArgs) ToGetSubscriptionsSubscriptionOutput() GetSubscriptionsSubscriptionOutput {
	return i.ToGetSubscriptionsSubscriptionOutputWithContext(context.Background())
}

func (i GetSubscriptionsSubscriptionArgs) ToGetSubscriptionsSubscriptionOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionsSubscriptionOutput)
}

// GetSubscriptionsSubscriptionArrayInput is an input type that accepts GetSubscriptionsSubscriptionArray and GetSubscriptionsSubscriptionArrayOutput values.
// You can construct a concrete instance of `GetSubscriptionsSubscriptionArrayInput` via:
//
//	GetSubscriptionsSubscriptionArray{ GetSubscriptionsSubscriptionArgs{...} }
type GetSubscriptionsSubscriptionArrayInput interface {
	pulumi.Input

	ToGetSubscriptionsSubscriptionArrayOutput() GetSubscriptionsSubscriptionArrayOutput
	ToGetSubscriptionsSubscriptionArrayOutputWithContext(context.Context) GetSubscriptionsSubscriptionArrayOutput
}

type GetSubscriptionsSubscriptionArray []GetSubscriptionsSubscriptionInput

func (GetSubscriptionsSubscriptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionsSubscription)(nil)).Elem()
}

func (i GetSubscriptionsSubscriptionArray) ToGetSubscriptionsSubscriptionArrayOutput() GetSubscriptionsSubscriptionArrayOutput {
	return i.ToGetSubscriptionsSubscriptionArrayOutputWithContext(context.Background())
}

func (i GetSubscriptionsSubscriptionArray) ToGetSubscriptionsSubscriptionArrayOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionsSubscriptionArrayOutput)
}

type GetSubscriptionsSubscriptionOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsSubscriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsSubscription)(nil)).Elem()
}

func (o GetSubscriptionsSubscriptionOutput) ToGetSubscriptionsSubscriptionOutput() GetSubscriptionsSubscriptionOutput {
	return o
}

func (o GetSubscriptionsSubscriptionOutput) ToGetSubscriptionsSubscriptionOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o GetSubscriptionsSubscriptionOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscription) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The time when this suscription was created.
func (o GetSubscriptionsSubscriptionOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscription) string { return v.CreatedTime }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o GetSubscriptionsSubscriptionOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscription) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

func (o GetSubscriptionsSubscriptionOutput) DeliveryPolicies() GetSubscriptionsSubscriptionDeliveryPolicyArrayOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscription) []GetSubscriptionsSubscriptionDeliveryPolicy {
		return v.DeliveryPolicies
	}).(GetSubscriptionsSubscriptionDeliveryPolicyArrayOutput)
}

// A locator that corresponds to the subscription protocol.  For example, an email address for a subscription that uses the `EMAIL` protocol, or a URL for a subscription that uses an HTTP-based protocol. Avoid entering confidential information.
func (o GetSubscriptionsSubscriptionOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscription) string { return v.Endpoint }).(pulumi.StringOutput)
}

// For optimistic concurrency control. See `if-match`.
func (o GetSubscriptionsSubscriptionOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscription) string { return v.Etag }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o GetSubscriptionsSubscriptionOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscription) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subscription.
func (o GetSubscriptionsSubscriptionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscription) string { return v.Id }).(pulumi.StringOutput)
}

// The protocol used for the subscription.
func (o GetSubscriptionsSubscriptionOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscription) string { return v.Protocol }).(pulumi.StringOutput)
}

// The lifecycle state of the subscription. The status of a new subscription is PENDING; when confirmed, the subscription status changes to ACTIVE.
func (o GetSubscriptionsSubscriptionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscription) string { return v.State }).(pulumi.StringOutput)
}

// Return all subscriptions that are subscribed to the given topic OCID. Either this query parameter or the compartmentId query parameter must be set.
func (o GetSubscriptionsSubscriptionOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscription) string { return v.TopicId }).(pulumi.StringOutput)
}

type GetSubscriptionsSubscriptionArrayOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsSubscriptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionsSubscription)(nil)).Elem()
}

func (o GetSubscriptionsSubscriptionArrayOutput) ToGetSubscriptionsSubscriptionArrayOutput() GetSubscriptionsSubscriptionArrayOutput {
	return o
}

func (o GetSubscriptionsSubscriptionArrayOutput) ToGetSubscriptionsSubscriptionArrayOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionArrayOutput {
	return o
}

func (o GetSubscriptionsSubscriptionArrayOutput) Index(i pulumi.IntInput) GetSubscriptionsSubscriptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubscriptionsSubscription {
		return vs[0].([]GetSubscriptionsSubscription)[vs[1].(int)]
	}).(GetSubscriptionsSubscriptionOutput)
}

type GetSubscriptionsSubscriptionDeliveryPolicy struct {
	BackoffRetryPolicies []GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicy `pulumi:"backoffRetryPolicies"`
}

// GetSubscriptionsSubscriptionDeliveryPolicyInput is an input type that accepts GetSubscriptionsSubscriptionDeliveryPolicyArgs and GetSubscriptionsSubscriptionDeliveryPolicyOutput values.
// You can construct a concrete instance of `GetSubscriptionsSubscriptionDeliveryPolicyInput` via:
//
//	GetSubscriptionsSubscriptionDeliveryPolicyArgs{...}
type GetSubscriptionsSubscriptionDeliveryPolicyInput interface {
	pulumi.Input

	ToGetSubscriptionsSubscriptionDeliveryPolicyOutput() GetSubscriptionsSubscriptionDeliveryPolicyOutput
	ToGetSubscriptionsSubscriptionDeliveryPolicyOutputWithContext(context.Context) GetSubscriptionsSubscriptionDeliveryPolicyOutput
}

type GetSubscriptionsSubscriptionDeliveryPolicyArgs struct {
	BackoffRetryPolicies GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArrayInput `pulumi:"backoffRetryPolicies"`
}

func (GetSubscriptionsSubscriptionDeliveryPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsSubscriptionDeliveryPolicy)(nil)).Elem()
}

func (i GetSubscriptionsSubscriptionDeliveryPolicyArgs) ToGetSubscriptionsSubscriptionDeliveryPolicyOutput() GetSubscriptionsSubscriptionDeliveryPolicyOutput {
	return i.ToGetSubscriptionsSubscriptionDeliveryPolicyOutputWithContext(context.Background())
}

func (i GetSubscriptionsSubscriptionDeliveryPolicyArgs) ToGetSubscriptionsSubscriptionDeliveryPolicyOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionDeliveryPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionsSubscriptionDeliveryPolicyOutput)
}

// GetSubscriptionsSubscriptionDeliveryPolicyArrayInput is an input type that accepts GetSubscriptionsSubscriptionDeliveryPolicyArray and GetSubscriptionsSubscriptionDeliveryPolicyArrayOutput values.
// You can construct a concrete instance of `GetSubscriptionsSubscriptionDeliveryPolicyArrayInput` via:
//
//	GetSubscriptionsSubscriptionDeliveryPolicyArray{ GetSubscriptionsSubscriptionDeliveryPolicyArgs{...} }
type GetSubscriptionsSubscriptionDeliveryPolicyArrayInput interface {
	pulumi.Input

	ToGetSubscriptionsSubscriptionDeliveryPolicyArrayOutput() GetSubscriptionsSubscriptionDeliveryPolicyArrayOutput
	ToGetSubscriptionsSubscriptionDeliveryPolicyArrayOutputWithContext(context.Context) GetSubscriptionsSubscriptionDeliveryPolicyArrayOutput
}

type GetSubscriptionsSubscriptionDeliveryPolicyArray []GetSubscriptionsSubscriptionDeliveryPolicyInput

func (GetSubscriptionsSubscriptionDeliveryPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionsSubscriptionDeliveryPolicy)(nil)).Elem()
}

func (i GetSubscriptionsSubscriptionDeliveryPolicyArray) ToGetSubscriptionsSubscriptionDeliveryPolicyArrayOutput() GetSubscriptionsSubscriptionDeliveryPolicyArrayOutput {
	return i.ToGetSubscriptionsSubscriptionDeliveryPolicyArrayOutputWithContext(context.Background())
}

func (i GetSubscriptionsSubscriptionDeliveryPolicyArray) ToGetSubscriptionsSubscriptionDeliveryPolicyArrayOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionDeliveryPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionsSubscriptionDeliveryPolicyArrayOutput)
}

type GetSubscriptionsSubscriptionDeliveryPolicyOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsSubscriptionDeliveryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsSubscriptionDeliveryPolicy)(nil)).Elem()
}

func (o GetSubscriptionsSubscriptionDeliveryPolicyOutput) ToGetSubscriptionsSubscriptionDeliveryPolicyOutput() GetSubscriptionsSubscriptionDeliveryPolicyOutput {
	return o
}

func (o GetSubscriptionsSubscriptionDeliveryPolicyOutput) ToGetSubscriptionsSubscriptionDeliveryPolicyOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionDeliveryPolicyOutput {
	return o
}

func (o GetSubscriptionsSubscriptionDeliveryPolicyOutput) BackoffRetryPolicies() GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArrayOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionDeliveryPolicy) []GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicy {
		return v.BackoffRetryPolicies
	}).(GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArrayOutput)
}

type GetSubscriptionsSubscriptionDeliveryPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsSubscriptionDeliveryPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionsSubscriptionDeliveryPolicy)(nil)).Elem()
}

func (o GetSubscriptionsSubscriptionDeliveryPolicyArrayOutput) ToGetSubscriptionsSubscriptionDeliveryPolicyArrayOutput() GetSubscriptionsSubscriptionDeliveryPolicyArrayOutput {
	return o
}

func (o GetSubscriptionsSubscriptionDeliveryPolicyArrayOutput) ToGetSubscriptionsSubscriptionDeliveryPolicyArrayOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionDeliveryPolicyArrayOutput {
	return o
}

func (o GetSubscriptionsSubscriptionDeliveryPolicyArrayOutput) Index(i pulumi.IntInput) GetSubscriptionsSubscriptionDeliveryPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubscriptionsSubscriptionDeliveryPolicy {
		return vs[0].([]GetSubscriptionsSubscriptionDeliveryPolicy)[vs[1].(int)]
	}).(GetSubscriptionsSubscriptionDeliveryPolicyOutput)
}

type GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicy struct {
	// The maximum retry duration in milliseconds.
	MaxRetryDuration int `pulumi:"maxRetryDuration"`
	// The type of delivery policy. Default value: EXPONENTIAL.
	PolicyType string `pulumi:"policyType"`
}

// GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyInput is an input type that accepts GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArgs and GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyOutput values.
// You can construct a concrete instance of `GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyInput` via:
//
//	GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArgs{...}
type GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyInput interface {
	pulumi.Input

	ToGetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyOutput() GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyOutput
	ToGetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyOutputWithContext(context.Context) GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyOutput
}

type GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArgs struct {
	// The maximum retry duration in milliseconds.
	MaxRetryDuration pulumi.IntInput `pulumi:"maxRetryDuration"`
	// The type of delivery policy. Default value: EXPONENTIAL.
	PolicyType pulumi.StringInput `pulumi:"policyType"`
}

func (GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicy)(nil)).Elem()
}

func (i GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArgs) ToGetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyOutput() GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyOutput {
	return i.ToGetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyOutputWithContext(context.Background())
}

func (i GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArgs) ToGetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyOutput)
}

// GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArrayInput is an input type that accepts GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArray and GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArrayOutput values.
// You can construct a concrete instance of `GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArrayInput` via:
//
//	GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArray{ GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArgs{...} }
type GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArrayInput interface {
	pulumi.Input

	ToGetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArrayOutput() GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArrayOutput
	ToGetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArrayOutputWithContext(context.Context) GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArrayOutput
}

type GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArray []GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyInput

func (GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicy)(nil)).Elem()
}

func (i GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArray) ToGetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArrayOutput() GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArrayOutput {
	return i.ToGetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArrayOutputWithContext(context.Background())
}

func (i GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArray) ToGetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArrayOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArrayOutput)
}

type GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicy)(nil)).Elem()
}

func (o GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyOutput) ToGetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyOutput() GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyOutput {
	return o
}

func (o GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyOutput) ToGetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyOutput {
	return o
}

// The maximum retry duration in milliseconds.
func (o GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyOutput) MaxRetryDuration() pulumi.IntOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicy) int { return v.MaxRetryDuration }).(pulumi.IntOutput)
}

// The type of delivery policy. Default value: EXPONENTIAL.
func (o GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicy) string { return v.PolicyType }).(pulumi.StringOutput)
}

type GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicy)(nil)).Elem()
}

func (o GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArrayOutput) ToGetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArrayOutput() GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArrayOutput {
	return o
}

func (o GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArrayOutput) ToGetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArrayOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArrayOutput {
	return o
}

func (o GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArrayOutput) Index(i pulumi.IntInput) GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicy {
		return vs[0].([]GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicy)[vs[1].(int)]
	}).(GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetNotificationTopicsFilterInput)(nil)).Elem(), GetNotificationTopicsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNotificationTopicsFilterArrayInput)(nil)).Elem(), GetNotificationTopicsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNotificationTopicsNotificationTopicInput)(nil)).Elem(), GetNotificationTopicsNotificationTopicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNotificationTopicsNotificationTopicArrayInput)(nil)).Elem(), GetNotificationTopicsNotificationTopicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionsFilterInput)(nil)).Elem(), GetSubscriptionsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionsFilterArrayInput)(nil)).Elem(), GetSubscriptionsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionsSubscriptionInput)(nil)).Elem(), GetSubscriptionsSubscriptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionsSubscriptionArrayInput)(nil)).Elem(), GetSubscriptionsSubscriptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionsSubscriptionDeliveryPolicyInput)(nil)).Elem(), GetSubscriptionsSubscriptionDeliveryPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionsSubscriptionDeliveryPolicyArrayInput)(nil)).Elem(), GetSubscriptionsSubscriptionDeliveryPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyInput)(nil)).Elem(), GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArrayInput)(nil)).Elem(), GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArray{})
	pulumi.RegisterOutputType(GetNotificationTopicsFilterOutput{})
	pulumi.RegisterOutputType(GetNotificationTopicsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetNotificationTopicsNotificationTopicOutput{})
	pulumi.RegisterOutputType(GetNotificationTopicsNotificationTopicArrayOutput{})
	pulumi.RegisterOutputType(GetSubscriptionsFilterOutput{})
	pulumi.RegisterOutputType(GetSubscriptionsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSubscriptionsSubscriptionOutput{})
	pulumi.RegisterOutputType(GetSubscriptionsSubscriptionArrayOutput{})
	pulumi.RegisterOutputType(GetSubscriptionsSubscriptionDeliveryPolicyOutput{})
	pulumi.RegisterOutputType(GetSubscriptionsSubscriptionDeliveryPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyOutput{})
	pulumi.RegisterOutputType(GetSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicyArrayOutput{})
}
