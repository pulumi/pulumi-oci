// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opensearch

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Opensearch Cluster Pipelines in Oracle Cloud Infrastructure Opensearch service.
//
// Returns a list of OpensearchClusterPipelines.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/opensearch"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := opensearch.GetOpensearchClusterPipelines(ctx, &opensearch.GetOpensearchClusterPipelinesArgs{
//				CompartmentId:       compartmentId,
//				DisplayName:         pulumi.StringRef(opensearchClusterPipelineDisplayName),
//				Id:                  pulumi.StringRef(opensearchClusterPipelineId),
//				PipelineComponentId: pulumi.StringRef(testPipelineComponent.Id),
//				State:               pulumi.StringRef(opensearchClusterPipelineState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetOpensearchClusterPipelines(ctx *pulumi.Context, args *GetOpensearchClusterPipelinesArgs, opts ...pulumi.InvokeOption) (*GetOpensearchClusterPipelinesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetOpensearchClusterPipelinesResult
	err := ctx.Invoke("oci:Opensearch/getOpensearchClusterPipelines:getOpensearchClusterPipelines", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOpensearchClusterPipelines.
type GetOpensearchClusterPipelinesArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string                               `pulumi:"displayName"`
	Filters     []GetOpensearchClusterPipelinesFilter `pulumi:"filters"`
	// unique OpensearchClusterPipeline identifier
	Id *string `pulumi:"id"`
	// A filter to return pipelines whose any component has the given pipelineComponentId.
	PipelineComponentId *string `pulumi:"pipelineComponentId"`
	// A filter to return only resources their lifecycleState matches the given lifecycleState.
	State *string `pulumi:"state"`
}

// A collection of values returned by getOpensearchClusterPipelines.
type GetOpensearchClusterPipelinesResult struct {
	// The OCID of the compartment where the pipeline is located.
	CompartmentId string `pulumi:"compartmentId"`
	// The name of the pipeline. Avoid entering confidential information.
	DisplayName *string                               `pulumi:"displayName"`
	Filters     []GetOpensearchClusterPipelinesFilter `pulumi:"filters"`
	// The OCID of the cluster pipeline.
	Id *string `pulumi:"id"`
	// The list of opensearch_cluster_pipeline_collection.
	OpensearchClusterPipelineCollections []GetOpensearchClusterPipelinesOpensearchClusterPipelineCollection `pulumi:"opensearchClusterPipelineCollections"`
	PipelineComponentId                  *string                                                            `pulumi:"pipelineComponentId"`
	// The current state of the cluster backup.
	State *string `pulumi:"state"`
}

func GetOpensearchClusterPipelinesOutput(ctx *pulumi.Context, args GetOpensearchClusterPipelinesOutputArgs, opts ...pulumi.InvokeOption) GetOpensearchClusterPipelinesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetOpensearchClusterPipelinesResultOutput, error) {
			args := v.(GetOpensearchClusterPipelinesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Opensearch/getOpensearchClusterPipelines:getOpensearchClusterPipelines", args, GetOpensearchClusterPipelinesResultOutput{}, options).(GetOpensearchClusterPipelinesResultOutput), nil
		}).(GetOpensearchClusterPipelinesResultOutput)
}

// A collection of arguments for invoking getOpensearchClusterPipelines.
type GetOpensearchClusterPipelinesOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput                         `pulumi:"displayName"`
	Filters     GetOpensearchClusterPipelinesFilterArrayInput `pulumi:"filters"`
	// unique OpensearchClusterPipeline identifier
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return pipelines whose any component has the given pipelineComponentId.
	PipelineComponentId pulumi.StringPtrInput `pulumi:"pipelineComponentId"`
	// A filter to return only resources their lifecycleState matches the given lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetOpensearchClusterPipelinesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpensearchClusterPipelinesArgs)(nil)).Elem()
}

// A collection of values returned by getOpensearchClusterPipelines.
type GetOpensearchClusterPipelinesResultOutput struct{ *pulumi.OutputState }

func (GetOpensearchClusterPipelinesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpensearchClusterPipelinesResult)(nil)).Elem()
}

func (o GetOpensearchClusterPipelinesResultOutput) ToGetOpensearchClusterPipelinesResultOutput() GetOpensearchClusterPipelinesResultOutput {
	return o
}

func (o GetOpensearchClusterPipelinesResultOutput) ToGetOpensearchClusterPipelinesResultOutputWithContext(ctx context.Context) GetOpensearchClusterPipelinesResultOutput {
	return o
}

// The OCID of the compartment where the pipeline is located.
func (o GetOpensearchClusterPipelinesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpensearchClusterPipelinesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The name of the pipeline. Avoid entering confidential information.
func (o GetOpensearchClusterPipelinesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOpensearchClusterPipelinesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetOpensearchClusterPipelinesResultOutput) Filters() GetOpensearchClusterPipelinesFilterArrayOutput {
	return o.ApplyT(func(v GetOpensearchClusterPipelinesResult) []GetOpensearchClusterPipelinesFilter { return v.Filters }).(GetOpensearchClusterPipelinesFilterArrayOutput)
}

// The OCID of the cluster pipeline.
func (o GetOpensearchClusterPipelinesResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOpensearchClusterPipelinesResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The list of opensearch_cluster_pipeline_collection.
func (o GetOpensearchClusterPipelinesResultOutput) OpensearchClusterPipelineCollections() GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionArrayOutput {
	return o.ApplyT(func(v GetOpensearchClusterPipelinesResult) []GetOpensearchClusterPipelinesOpensearchClusterPipelineCollection {
		return v.OpensearchClusterPipelineCollections
	}).(GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionArrayOutput)
}

func (o GetOpensearchClusterPipelinesResultOutput) PipelineComponentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOpensearchClusterPipelinesResult) *string { return v.PipelineComponentId }).(pulumi.StringPtrOutput)
}

// The current state of the cluster backup.
func (o GetOpensearchClusterPipelinesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOpensearchClusterPipelinesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetOpensearchClusterPipelinesResultOutput{})
}
