// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opensearch

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Opensearch Version resource in Oracle Cloud Infrastructure Opensearch service.
//
// # Lists the supported Opensearch versions
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Opensearch"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Opensearch.GetOpensearchVersion(ctx, &opensearch.GetOpensearchVersionArgs{
//				CompartmentId: _var.Compartment_id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetOpensearchVersion(ctx *pulumi.Context, args *GetOpensearchVersionArgs, opts ...pulumi.InvokeOption) (*GetOpensearchVersionResult, error) {
	var rv GetOpensearchVersionResult
	err := ctx.Invoke("oci:Opensearch/getOpensearchVersion:getOpensearchVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOpensearchVersion.
type GetOpensearchVersionArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
}

// A collection of values returned by getOpensearchVersion.
type GetOpensearchVersionResult struct {
	CompartmentId string `pulumi:"compartmentId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of OpenSearch versions.
	Items []GetOpensearchVersionItem `pulumi:"items"`
}

func GetOpensearchVersionOutput(ctx *pulumi.Context, args GetOpensearchVersionOutputArgs, opts ...pulumi.InvokeOption) GetOpensearchVersionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetOpensearchVersionResult, error) {
			args := v.(GetOpensearchVersionArgs)
			r, err := GetOpensearchVersion(ctx, &args, opts...)
			var s GetOpensearchVersionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetOpensearchVersionResultOutput)
}

// A collection of arguments for invoking getOpensearchVersion.
type GetOpensearchVersionOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
}

func (GetOpensearchVersionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpensearchVersionArgs)(nil)).Elem()
}

// A collection of values returned by getOpensearchVersion.
type GetOpensearchVersionResultOutput struct{ *pulumi.OutputState }

func (GetOpensearchVersionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpensearchVersionResult)(nil)).Elem()
}

func (o GetOpensearchVersionResultOutput) ToGetOpensearchVersionResultOutput() GetOpensearchVersionResultOutput {
	return o
}

func (o GetOpensearchVersionResultOutput) ToGetOpensearchVersionResultOutputWithContext(ctx context.Context) GetOpensearchVersionResultOutput {
	return o
}

func (o GetOpensearchVersionResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpensearchVersionResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetOpensearchVersionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpensearchVersionResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of OpenSearch versions.
func (o GetOpensearchVersionResultOutput) Items() GetOpensearchVersionItemArrayOutput {
	return o.ApplyT(func(v GetOpensearchVersionResult) []GetOpensearchVersionItem { return v.Items }).(GetOpensearchVersionItemArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetOpensearchVersionResultOutput{})
}
