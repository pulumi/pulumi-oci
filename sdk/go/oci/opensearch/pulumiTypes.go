// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opensearch

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetOpensearchClustersFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetOpensearchClustersFilterInput is an input type that accepts GetOpensearchClustersFilterArgs and GetOpensearchClustersFilterOutput values.
// You can construct a concrete instance of `GetOpensearchClustersFilterInput` via:
//
//	GetOpensearchClustersFilterArgs{...}
type GetOpensearchClustersFilterInput interface {
	pulumi.Input

	ToGetOpensearchClustersFilterOutput() GetOpensearchClustersFilterOutput
	ToGetOpensearchClustersFilterOutputWithContext(context.Context) GetOpensearchClustersFilterOutput
}

type GetOpensearchClustersFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetOpensearchClustersFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpensearchClustersFilter)(nil)).Elem()
}

func (i GetOpensearchClustersFilterArgs) ToGetOpensearchClustersFilterOutput() GetOpensearchClustersFilterOutput {
	return i.ToGetOpensearchClustersFilterOutputWithContext(context.Background())
}

func (i GetOpensearchClustersFilterArgs) ToGetOpensearchClustersFilterOutputWithContext(ctx context.Context) GetOpensearchClustersFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpensearchClustersFilterOutput)
}

// GetOpensearchClustersFilterArrayInput is an input type that accepts GetOpensearchClustersFilterArray and GetOpensearchClustersFilterArrayOutput values.
// You can construct a concrete instance of `GetOpensearchClustersFilterArrayInput` via:
//
//	GetOpensearchClustersFilterArray{ GetOpensearchClustersFilterArgs{...} }
type GetOpensearchClustersFilterArrayInput interface {
	pulumi.Input

	ToGetOpensearchClustersFilterArrayOutput() GetOpensearchClustersFilterArrayOutput
	ToGetOpensearchClustersFilterArrayOutputWithContext(context.Context) GetOpensearchClustersFilterArrayOutput
}

type GetOpensearchClustersFilterArray []GetOpensearchClustersFilterInput

func (GetOpensearchClustersFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpensearchClustersFilter)(nil)).Elem()
}

func (i GetOpensearchClustersFilterArray) ToGetOpensearchClustersFilterArrayOutput() GetOpensearchClustersFilterArrayOutput {
	return i.ToGetOpensearchClustersFilterArrayOutputWithContext(context.Background())
}

func (i GetOpensearchClustersFilterArray) ToGetOpensearchClustersFilterArrayOutputWithContext(ctx context.Context) GetOpensearchClustersFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpensearchClustersFilterArrayOutput)
}

type GetOpensearchClustersFilterOutput struct{ *pulumi.OutputState }

func (GetOpensearchClustersFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpensearchClustersFilter)(nil)).Elem()
}

func (o GetOpensearchClustersFilterOutput) ToGetOpensearchClustersFilterOutput() GetOpensearchClustersFilterOutput {
	return o
}

func (o GetOpensearchClustersFilterOutput) ToGetOpensearchClustersFilterOutputWithContext(ctx context.Context) GetOpensearchClustersFilterOutput {
	return o
}

func (o GetOpensearchClustersFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpensearchClustersFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetOpensearchClustersFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetOpensearchClustersFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetOpensearchClustersFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOpensearchClustersFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetOpensearchClustersFilterArrayOutput struct{ *pulumi.OutputState }

func (GetOpensearchClustersFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpensearchClustersFilter)(nil)).Elem()
}

func (o GetOpensearchClustersFilterArrayOutput) ToGetOpensearchClustersFilterArrayOutput() GetOpensearchClustersFilterArrayOutput {
	return o
}

func (o GetOpensearchClustersFilterArrayOutput) ToGetOpensearchClustersFilterArrayOutputWithContext(ctx context.Context) GetOpensearchClustersFilterArrayOutput {
	return o
}

func (o GetOpensearchClustersFilterArrayOutput) Index(i pulumi.IntInput) GetOpensearchClustersFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOpensearchClustersFilter {
		return vs[0].([]GetOpensearchClustersFilter)[vs[1].(int)]
	}).(GetOpensearchClustersFilterOutput)
}

type GetOpensearchClustersOpensearchClusterCollection struct {
	Items []GetOpensearchClustersOpensearchClusterCollectionItem `pulumi:"items"`
}

// GetOpensearchClustersOpensearchClusterCollectionInput is an input type that accepts GetOpensearchClustersOpensearchClusterCollectionArgs and GetOpensearchClustersOpensearchClusterCollectionOutput values.
// You can construct a concrete instance of `GetOpensearchClustersOpensearchClusterCollectionInput` via:
//
//	GetOpensearchClustersOpensearchClusterCollectionArgs{...}
type GetOpensearchClustersOpensearchClusterCollectionInput interface {
	pulumi.Input

	ToGetOpensearchClustersOpensearchClusterCollectionOutput() GetOpensearchClustersOpensearchClusterCollectionOutput
	ToGetOpensearchClustersOpensearchClusterCollectionOutputWithContext(context.Context) GetOpensearchClustersOpensearchClusterCollectionOutput
}

type GetOpensearchClustersOpensearchClusterCollectionArgs struct {
	Items GetOpensearchClustersOpensearchClusterCollectionItemArrayInput `pulumi:"items"`
}

func (GetOpensearchClustersOpensearchClusterCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpensearchClustersOpensearchClusterCollection)(nil)).Elem()
}

func (i GetOpensearchClustersOpensearchClusterCollectionArgs) ToGetOpensearchClustersOpensearchClusterCollectionOutput() GetOpensearchClustersOpensearchClusterCollectionOutput {
	return i.ToGetOpensearchClustersOpensearchClusterCollectionOutputWithContext(context.Background())
}

func (i GetOpensearchClustersOpensearchClusterCollectionArgs) ToGetOpensearchClustersOpensearchClusterCollectionOutputWithContext(ctx context.Context) GetOpensearchClustersOpensearchClusterCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpensearchClustersOpensearchClusterCollectionOutput)
}

// GetOpensearchClustersOpensearchClusterCollectionArrayInput is an input type that accepts GetOpensearchClustersOpensearchClusterCollectionArray and GetOpensearchClustersOpensearchClusterCollectionArrayOutput values.
// You can construct a concrete instance of `GetOpensearchClustersOpensearchClusterCollectionArrayInput` via:
//
//	GetOpensearchClustersOpensearchClusterCollectionArray{ GetOpensearchClustersOpensearchClusterCollectionArgs{...} }
type GetOpensearchClustersOpensearchClusterCollectionArrayInput interface {
	pulumi.Input

	ToGetOpensearchClustersOpensearchClusterCollectionArrayOutput() GetOpensearchClustersOpensearchClusterCollectionArrayOutput
	ToGetOpensearchClustersOpensearchClusterCollectionArrayOutputWithContext(context.Context) GetOpensearchClustersOpensearchClusterCollectionArrayOutput
}

type GetOpensearchClustersOpensearchClusterCollectionArray []GetOpensearchClustersOpensearchClusterCollectionInput

func (GetOpensearchClustersOpensearchClusterCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpensearchClustersOpensearchClusterCollection)(nil)).Elem()
}

func (i GetOpensearchClustersOpensearchClusterCollectionArray) ToGetOpensearchClustersOpensearchClusterCollectionArrayOutput() GetOpensearchClustersOpensearchClusterCollectionArrayOutput {
	return i.ToGetOpensearchClustersOpensearchClusterCollectionArrayOutputWithContext(context.Background())
}

func (i GetOpensearchClustersOpensearchClusterCollectionArray) ToGetOpensearchClustersOpensearchClusterCollectionArrayOutputWithContext(ctx context.Context) GetOpensearchClustersOpensearchClusterCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpensearchClustersOpensearchClusterCollectionArrayOutput)
}

type GetOpensearchClustersOpensearchClusterCollectionOutput struct{ *pulumi.OutputState }

func (GetOpensearchClustersOpensearchClusterCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpensearchClustersOpensearchClusterCollection)(nil)).Elem()
}

func (o GetOpensearchClustersOpensearchClusterCollectionOutput) ToGetOpensearchClustersOpensearchClusterCollectionOutput() GetOpensearchClustersOpensearchClusterCollectionOutput {
	return o
}

func (o GetOpensearchClustersOpensearchClusterCollectionOutput) ToGetOpensearchClustersOpensearchClusterCollectionOutputWithContext(ctx context.Context) GetOpensearchClustersOpensearchClusterCollectionOutput {
	return o
}

func (o GetOpensearchClustersOpensearchClusterCollectionOutput) Items() GetOpensearchClustersOpensearchClusterCollectionItemArrayOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollection) []GetOpensearchClustersOpensearchClusterCollectionItem {
		return v.Items
	}).(GetOpensearchClustersOpensearchClusterCollectionItemArrayOutput)
}

type GetOpensearchClustersOpensearchClusterCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetOpensearchClustersOpensearchClusterCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpensearchClustersOpensearchClusterCollection)(nil)).Elem()
}

func (o GetOpensearchClustersOpensearchClusterCollectionArrayOutput) ToGetOpensearchClustersOpensearchClusterCollectionArrayOutput() GetOpensearchClustersOpensearchClusterCollectionArrayOutput {
	return o
}

func (o GetOpensearchClustersOpensearchClusterCollectionArrayOutput) ToGetOpensearchClustersOpensearchClusterCollectionArrayOutputWithContext(ctx context.Context) GetOpensearchClustersOpensearchClusterCollectionArrayOutput {
	return o
}

func (o GetOpensearchClustersOpensearchClusterCollectionArrayOutput) Index(i pulumi.IntInput) GetOpensearchClustersOpensearchClusterCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOpensearchClustersOpensearchClusterCollection {
		return vs[0].([]GetOpensearchClustersOpensearchClusterCollection)[vs[1].(int)]
	}).(GetOpensearchClustersOpensearchClusterCollectionOutput)
}

type GetOpensearchClustersOpensearchClusterCollectionItem struct {
	// The availability domains to distribute the cluser nodes across.
	AvailabilityDomains []string `pulumi:"availabilityDomains"`
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// The number of data nodes configured for the cluster.
	DataNodeCount int `pulumi:"dataNodeCount"`
	// The bare metal shape for the cluster's data nodes.
	DataNodeHostBareMetalShape string `pulumi:"dataNodeHostBareMetalShape"`
	// The amount of memory in GB, for the cluster's data nodes.
	DataNodeHostMemoryGb int `pulumi:"dataNodeHostMemoryGb"`
	// The number of OCPUs configured for the cluster's data nodes.
	DataNodeHostOcpuCount int `pulumi:"dataNodeHostOcpuCount"`
	// The instance type for the cluster's data nodes.
	DataNodeHostType string `pulumi:"dataNodeHostType"`
	// The amount of storage in GB, to configure per node for the cluster's data nodes.
	DataNodeStorageGb int `pulumi:"dataNodeStorageGb"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// The fully qualified domain name (FQDN) for the cluster's API endpoint.
	Fqdn string `pulumi:"fqdn"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// unique OpensearchCluster identifier
	Id string `pulumi:"id"`
	// Additional information about the current lifecycle state of the cluster.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The number of master nodes configured for the cluster.
	MasterNodeCount int `pulumi:"masterNodeCount"`
	// The bare metal shape for the cluster's master nodes.
	MasterNodeHostBareMetalShape string `pulumi:"masterNodeHostBareMetalShape"`
	// The amount of memory in GB, for the cluster's master nodes.
	MasterNodeHostMemoryGb int `pulumi:"masterNodeHostMemoryGb"`
	// The number of OCPUs configured for cluster's master nodes.
	MasterNodeHostOcpuCount int `pulumi:"masterNodeHostOcpuCount"`
	// The instance type for the cluster's master nodes.
	MasterNodeHostType string `pulumi:"masterNodeHostType"`
	// The fully qualified domain name (FQDN) for the cluster's OpenSearch Dashboard API endpoint.
	OpendashboardFqdn string `pulumi:"opendashboardFqdn"`
	// The number of OpenSearch Dashboard nodes configured for the cluster.
	OpendashboardNodeCount int `pulumi:"opendashboardNodeCount"`
	// The amount of memory in GB, for the cluster's OpenSearch Dashboard nodes.
	OpendashboardNodeHostMemoryGb int `pulumi:"opendashboardNodeHostMemoryGb"`
	// The amount of memory in GB, for the cluster's OpenSearch Dashboard nodes.
	OpendashboardNodeHostOcpuCount int `pulumi:"opendashboardNodeHostOcpuCount"`
	// The private IP address for the cluster's OpenSearch Dashboard.
	OpendashboardPrivateIp string `pulumi:"opendashboardPrivateIp"`
	// The fully qualified domain name (FQDN) for the cluster's API endpoint.
	OpensearchFqdn string `pulumi:"opensearchFqdn"`
	// The cluster's private IP address.
	OpensearchPrivateIp string `pulumi:"opensearchPrivateIp"`
	// The name of the master user that are used to manage security config
	SecurityMasterUserName string `pulumi:"securityMasterUserName"`
	// The password hash of the master user that are used to manage security config
	SecurityMasterUserPasswordHash string `pulumi:"securityMasterUserPasswordHash"`
	// The security mode of the cluster.
	SecurityMode string `pulumi:"securityMode"`
	// The software version the cluster is running.
	SoftwareVersion string `pulumi:"softwareVersion"`
	// A filter to return only OpensearchClusters their lifecycleState matches the given lifecycleState.
	State string `pulumi:"state"`
	// The OCID for the compartment where the cluster's subnet is located.
	SubnetCompartmentId string `pulumi:"subnetCompartmentId"`
	// The OCID of the cluster's subnet.
	SubnetId string `pulumi:"subnetId"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The amount of time in milliseconds since the cluster was created.
	TimeCreated string `pulumi:"timeCreated"`
	// The amount of time in milliseconds since the cluster was updated.
	TimeDeleted string `pulumi:"timeDeleted"`
	// The amount of time in milliseconds since the cluster was updated.
	TimeUpdated string `pulumi:"timeUpdated"`
	// The size in GB of the cluster's total storage.
	TotalStorageGb int `pulumi:"totalStorageGb"`
	// The OCID for the compartment where the cluster's VCN is located.
	VcnCompartmentId string `pulumi:"vcnCompartmentId"`
	// The OCID of the cluster's VCN.
	VcnId string `pulumi:"vcnId"`
}

// GetOpensearchClustersOpensearchClusterCollectionItemInput is an input type that accepts GetOpensearchClustersOpensearchClusterCollectionItemArgs and GetOpensearchClustersOpensearchClusterCollectionItemOutput values.
// You can construct a concrete instance of `GetOpensearchClustersOpensearchClusterCollectionItemInput` via:
//
//	GetOpensearchClustersOpensearchClusterCollectionItemArgs{...}
type GetOpensearchClustersOpensearchClusterCollectionItemInput interface {
	pulumi.Input

	ToGetOpensearchClustersOpensearchClusterCollectionItemOutput() GetOpensearchClustersOpensearchClusterCollectionItemOutput
	ToGetOpensearchClustersOpensearchClusterCollectionItemOutputWithContext(context.Context) GetOpensearchClustersOpensearchClusterCollectionItemOutput
}

type GetOpensearchClustersOpensearchClusterCollectionItemArgs struct {
	// The availability domains to distribute the cluser nodes across.
	AvailabilityDomains pulumi.StringArrayInput `pulumi:"availabilityDomains"`
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The number of data nodes configured for the cluster.
	DataNodeCount pulumi.IntInput `pulumi:"dataNodeCount"`
	// The bare metal shape for the cluster's data nodes.
	DataNodeHostBareMetalShape pulumi.StringInput `pulumi:"dataNodeHostBareMetalShape"`
	// The amount of memory in GB, for the cluster's data nodes.
	DataNodeHostMemoryGb pulumi.IntInput `pulumi:"dataNodeHostMemoryGb"`
	// The number of OCPUs configured for the cluster's data nodes.
	DataNodeHostOcpuCount pulumi.IntInput `pulumi:"dataNodeHostOcpuCount"`
	// The instance type for the cluster's data nodes.
	DataNodeHostType pulumi.StringInput `pulumi:"dataNodeHostType"`
	// The amount of storage in GB, to configure per node for the cluster's data nodes.
	DataNodeStorageGb pulumi.IntInput `pulumi:"dataNodeStorageGb"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The fully qualified domain name (FQDN) for the cluster's API endpoint.
	Fqdn pulumi.StringInput `pulumi:"fqdn"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// unique OpensearchCluster identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Additional information about the current lifecycle state of the cluster.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// The number of master nodes configured for the cluster.
	MasterNodeCount pulumi.IntInput `pulumi:"masterNodeCount"`
	// The bare metal shape for the cluster's master nodes.
	MasterNodeHostBareMetalShape pulumi.StringInput `pulumi:"masterNodeHostBareMetalShape"`
	// The amount of memory in GB, for the cluster's master nodes.
	MasterNodeHostMemoryGb pulumi.IntInput `pulumi:"masterNodeHostMemoryGb"`
	// The number of OCPUs configured for cluster's master nodes.
	MasterNodeHostOcpuCount pulumi.IntInput `pulumi:"masterNodeHostOcpuCount"`
	// The instance type for the cluster's master nodes.
	MasterNodeHostType pulumi.StringInput `pulumi:"masterNodeHostType"`
	// The fully qualified domain name (FQDN) for the cluster's OpenSearch Dashboard API endpoint.
	OpendashboardFqdn pulumi.StringInput `pulumi:"opendashboardFqdn"`
	// The number of OpenSearch Dashboard nodes configured for the cluster.
	OpendashboardNodeCount pulumi.IntInput `pulumi:"opendashboardNodeCount"`
	// The amount of memory in GB, for the cluster's OpenSearch Dashboard nodes.
	OpendashboardNodeHostMemoryGb pulumi.IntInput `pulumi:"opendashboardNodeHostMemoryGb"`
	// The amount of memory in GB, for the cluster's OpenSearch Dashboard nodes.
	OpendashboardNodeHostOcpuCount pulumi.IntInput `pulumi:"opendashboardNodeHostOcpuCount"`
	// The private IP address for the cluster's OpenSearch Dashboard.
	OpendashboardPrivateIp pulumi.StringInput `pulumi:"opendashboardPrivateIp"`
	// The fully qualified domain name (FQDN) for the cluster's API endpoint.
	OpensearchFqdn pulumi.StringInput `pulumi:"opensearchFqdn"`
	// The cluster's private IP address.
	OpensearchPrivateIp pulumi.StringInput `pulumi:"opensearchPrivateIp"`
	// The name of the master user that are used to manage security config
	SecurityMasterUserName pulumi.StringInput `pulumi:"securityMasterUserName"`
	// The password hash of the master user that are used to manage security config
	SecurityMasterUserPasswordHash pulumi.StringInput `pulumi:"securityMasterUserPasswordHash"`
	// The security mode of the cluster.
	SecurityMode pulumi.StringInput `pulumi:"securityMode"`
	// The software version the cluster is running.
	SoftwareVersion pulumi.StringInput `pulumi:"softwareVersion"`
	// A filter to return only OpensearchClusters their lifecycleState matches the given lifecycleState.
	State pulumi.StringInput `pulumi:"state"`
	// The OCID for the compartment where the cluster's subnet is located.
	SubnetCompartmentId pulumi.StringInput `pulumi:"subnetCompartmentId"`
	// The OCID of the cluster's subnet.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// The amount of time in milliseconds since the cluster was created.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The amount of time in milliseconds since the cluster was updated.
	TimeDeleted pulumi.StringInput `pulumi:"timeDeleted"`
	// The amount of time in milliseconds since the cluster was updated.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// The size in GB of the cluster's total storage.
	TotalStorageGb pulumi.IntInput `pulumi:"totalStorageGb"`
	// The OCID for the compartment where the cluster's VCN is located.
	VcnCompartmentId pulumi.StringInput `pulumi:"vcnCompartmentId"`
	// The OCID of the cluster's VCN.
	VcnId pulumi.StringInput `pulumi:"vcnId"`
}

func (GetOpensearchClustersOpensearchClusterCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpensearchClustersOpensearchClusterCollectionItem)(nil)).Elem()
}

func (i GetOpensearchClustersOpensearchClusterCollectionItemArgs) ToGetOpensearchClustersOpensearchClusterCollectionItemOutput() GetOpensearchClustersOpensearchClusterCollectionItemOutput {
	return i.ToGetOpensearchClustersOpensearchClusterCollectionItemOutputWithContext(context.Background())
}

func (i GetOpensearchClustersOpensearchClusterCollectionItemArgs) ToGetOpensearchClustersOpensearchClusterCollectionItemOutputWithContext(ctx context.Context) GetOpensearchClustersOpensearchClusterCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpensearchClustersOpensearchClusterCollectionItemOutput)
}

// GetOpensearchClustersOpensearchClusterCollectionItemArrayInput is an input type that accepts GetOpensearchClustersOpensearchClusterCollectionItemArray and GetOpensearchClustersOpensearchClusterCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetOpensearchClustersOpensearchClusterCollectionItemArrayInput` via:
//
//	GetOpensearchClustersOpensearchClusterCollectionItemArray{ GetOpensearchClustersOpensearchClusterCollectionItemArgs{...} }
type GetOpensearchClustersOpensearchClusterCollectionItemArrayInput interface {
	pulumi.Input

	ToGetOpensearchClustersOpensearchClusterCollectionItemArrayOutput() GetOpensearchClustersOpensearchClusterCollectionItemArrayOutput
	ToGetOpensearchClustersOpensearchClusterCollectionItemArrayOutputWithContext(context.Context) GetOpensearchClustersOpensearchClusterCollectionItemArrayOutput
}

type GetOpensearchClustersOpensearchClusterCollectionItemArray []GetOpensearchClustersOpensearchClusterCollectionItemInput

func (GetOpensearchClustersOpensearchClusterCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpensearchClustersOpensearchClusterCollectionItem)(nil)).Elem()
}

func (i GetOpensearchClustersOpensearchClusterCollectionItemArray) ToGetOpensearchClustersOpensearchClusterCollectionItemArrayOutput() GetOpensearchClustersOpensearchClusterCollectionItemArrayOutput {
	return i.ToGetOpensearchClustersOpensearchClusterCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetOpensearchClustersOpensearchClusterCollectionItemArray) ToGetOpensearchClustersOpensearchClusterCollectionItemArrayOutputWithContext(ctx context.Context) GetOpensearchClustersOpensearchClusterCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpensearchClustersOpensearchClusterCollectionItemArrayOutput)
}

type GetOpensearchClustersOpensearchClusterCollectionItemOutput struct{ *pulumi.OutputState }

func (GetOpensearchClustersOpensearchClusterCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpensearchClustersOpensearchClusterCollectionItem)(nil)).Elem()
}

func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) ToGetOpensearchClustersOpensearchClusterCollectionItemOutput() GetOpensearchClustersOpensearchClusterCollectionItemOutput {
	return o
}

func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) ToGetOpensearchClustersOpensearchClusterCollectionItemOutputWithContext(ctx context.Context) GetOpensearchClustersOpensearchClusterCollectionItemOutput {
	return o
}

// The availability domains to distribute the cluser nodes across.
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) AvailabilityDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) []string { return v.AvailabilityDomains }).(pulumi.StringArrayOutput)
}

// The ID of the compartment in which to list resources.
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The number of data nodes configured for the cluster.
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) DataNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) int { return v.DataNodeCount }).(pulumi.IntOutput)
}

// The bare metal shape for the cluster's data nodes.
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) DataNodeHostBareMetalShape() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) string {
		return v.DataNodeHostBareMetalShape
	}).(pulumi.StringOutput)
}

// The amount of memory in GB, for the cluster's data nodes.
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) DataNodeHostMemoryGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) int { return v.DataNodeHostMemoryGb }).(pulumi.IntOutput)
}

// The number of OCPUs configured for the cluster's data nodes.
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) DataNodeHostOcpuCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) int { return v.DataNodeHostOcpuCount }).(pulumi.IntOutput)
}

// The instance type for the cluster's data nodes.
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) DataNodeHostType() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) string { return v.DataNodeHostType }).(pulumi.StringOutput)
}

// The amount of storage in GB, to configure per node for the cluster's data nodes.
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) DataNodeStorageGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) int { return v.DataNodeStorageGb }).(pulumi.IntOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) map[string]interface{} {
		return v.DefinedTags
	}).(pulumi.MapOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The fully qualified domain name (FQDN) for the cluster's API endpoint.
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) string { return v.Fqdn }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) map[string]interface{} {
		return v.FreeformTags
	}).(pulumi.MapOutput)
}

// unique OpensearchCluster identifier
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// Additional information about the current lifecycle state of the cluster.
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The number of master nodes configured for the cluster.
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) MasterNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) int { return v.MasterNodeCount }).(pulumi.IntOutput)
}

// The bare metal shape for the cluster's master nodes.
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) MasterNodeHostBareMetalShape() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) string {
		return v.MasterNodeHostBareMetalShape
	}).(pulumi.StringOutput)
}

// The amount of memory in GB, for the cluster's master nodes.
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) MasterNodeHostMemoryGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) int { return v.MasterNodeHostMemoryGb }).(pulumi.IntOutput)
}

// The number of OCPUs configured for cluster's master nodes.
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) MasterNodeHostOcpuCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) int { return v.MasterNodeHostOcpuCount }).(pulumi.IntOutput)
}

// The instance type for the cluster's master nodes.
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) MasterNodeHostType() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) string { return v.MasterNodeHostType }).(pulumi.StringOutput)
}

// The fully qualified domain name (FQDN) for the cluster's OpenSearch Dashboard API endpoint.
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) OpendashboardFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) string { return v.OpendashboardFqdn }).(pulumi.StringOutput)
}

// The number of OpenSearch Dashboard nodes configured for the cluster.
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) OpendashboardNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) int { return v.OpendashboardNodeCount }).(pulumi.IntOutput)
}

// The amount of memory in GB, for the cluster's OpenSearch Dashboard nodes.
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) OpendashboardNodeHostMemoryGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) int {
		return v.OpendashboardNodeHostMemoryGb
	}).(pulumi.IntOutput)
}

// The amount of memory in GB, for the cluster's OpenSearch Dashboard nodes.
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) OpendashboardNodeHostOcpuCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) int {
		return v.OpendashboardNodeHostOcpuCount
	}).(pulumi.IntOutput)
}

// The private IP address for the cluster's OpenSearch Dashboard.
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) OpendashboardPrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) string { return v.OpendashboardPrivateIp }).(pulumi.StringOutput)
}

// The fully qualified domain name (FQDN) for the cluster's API endpoint.
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) OpensearchFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) string { return v.OpensearchFqdn }).(pulumi.StringOutput)
}

// The cluster's private IP address.
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) OpensearchPrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) string { return v.OpensearchPrivateIp }).(pulumi.StringOutput)
}

// The name of the master user that are used to manage security config
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) SecurityMasterUserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) string { return v.SecurityMasterUserName }).(pulumi.StringOutput)
}

// The password hash of the master user that are used to manage security config
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) SecurityMasterUserPasswordHash() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) string {
		return v.SecurityMasterUserPasswordHash
	}).(pulumi.StringOutput)
}

// The security mode of the cluster.
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) SecurityMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) string { return v.SecurityMode }).(pulumi.StringOutput)
}

// The software version the cluster is running.
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) SoftwareVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) string { return v.SoftwareVersion }).(pulumi.StringOutput)
}

// A filter to return only OpensearchClusters their lifecycleState matches the given lifecycleState.
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// The OCID for the compartment where the cluster's subnet is located.
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) SubnetCompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) string { return v.SubnetCompartmentId }).(pulumi.StringOutput)
}

// The OCID of the cluster's subnet.
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) map[string]interface{} {
		return v.SystemTags
	}).(pulumi.MapOutput)
}

// The amount of time in milliseconds since the cluster was created.
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The amount of time in milliseconds since the cluster was updated.
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) TimeDeleted() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) string { return v.TimeDeleted }).(pulumi.StringOutput)
}

// The amount of time in milliseconds since the cluster was updated.
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The size in GB of the cluster's total storage.
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) TotalStorageGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) int { return v.TotalStorageGb }).(pulumi.IntOutput)
}

// The OCID for the compartment where the cluster's VCN is located.
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) VcnCompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) string { return v.VcnCompartmentId }).(pulumi.StringOutput)
}

// The OCID of the cluster's VCN.
func (o GetOpensearchClustersOpensearchClusterCollectionItemOutput) VcnId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpensearchClustersOpensearchClusterCollectionItem) string { return v.VcnId }).(pulumi.StringOutput)
}

type GetOpensearchClustersOpensearchClusterCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetOpensearchClustersOpensearchClusterCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpensearchClustersOpensearchClusterCollectionItem)(nil)).Elem()
}

func (o GetOpensearchClustersOpensearchClusterCollectionItemArrayOutput) ToGetOpensearchClustersOpensearchClusterCollectionItemArrayOutput() GetOpensearchClustersOpensearchClusterCollectionItemArrayOutput {
	return o
}

func (o GetOpensearchClustersOpensearchClusterCollectionItemArrayOutput) ToGetOpensearchClustersOpensearchClusterCollectionItemArrayOutputWithContext(ctx context.Context) GetOpensearchClustersOpensearchClusterCollectionItemArrayOutput {
	return o
}

func (o GetOpensearchClustersOpensearchClusterCollectionItemArrayOutput) Index(i pulumi.IntInput) GetOpensearchClustersOpensearchClusterCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOpensearchClustersOpensearchClusterCollectionItem {
		return vs[0].([]GetOpensearchClustersOpensearchClusterCollectionItem)[vs[1].(int)]
	}).(GetOpensearchClustersOpensearchClusterCollectionItemOutput)
}

type GetOpensearchVersionItem struct {
	// The version of OpenSearch.
	Version string `pulumi:"version"`
}

// GetOpensearchVersionItemInput is an input type that accepts GetOpensearchVersionItemArgs and GetOpensearchVersionItemOutput values.
// You can construct a concrete instance of `GetOpensearchVersionItemInput` via:
//
//	GetOpensearchVersionItemArgs{...}
type GetOpensearchVersionItemInput interface {
	pulumi.Input

	ToGetOpensearchVersionItemOutput() GetOpensearchVersionItemOutput
	ToGetOpensearchVersionItemOutputWithContext(context.Context) GetOpensearchVersionItemOutput
}

type GetOpensearchVersionItemArgs struct {
	// The version of OpenSearch.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetOpensearchVersionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpensearchVersionItem)(nil)).Elem()
}

func (i GetOpensearchVersionItemArgs) ToGetOpensearchVersionItemOutput() GetOpensearchVersionItemOutput {
	return i.ToGetOpensearchVersionItemOutputWithContext(context.Background())
}

func (i GetOpensearchVersionItemArgs) ToGetOpensearchVersionItemOutputWithContext(ctx context.Context) GetOpensearchVersionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpensearchVersionItemOutput)
}

// GetOpensearchVersionItemArrayInput is an input type that accepts GetOpensearchVersionItemArray and GetOpensearchVersionItemArrayOutput values.
// You can construct a concrete instance of `GetOpensearchVersionItemArrayInput` via:
//
//	GetOpensearchVersionItemArray{ GetOpensearchVersionItemArgs{...} }
type GetOpensearchVersionItemArrayInput interface {
	pulumi.Input

	ToGetOpensearchVersionItemArrayOutput() GetOpensearchVersionItemArrayOutput
	ToGetOpensearchVersionItemArrayOutputWithContext(context.Context) GetOpensearchVersionItemArrayOutput
}

type GetOpensearchVersionItemArray []GetOpensearchVersionItemInput

func (GetOpensearchVersionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpensearchVersionItem)(nil)).Elem()
}

func (i GetOpensearchVersionItemArray) ToGetOpensearchVersionItemArrayOutput() GetOpensearchVersionItemArrayOutput {
	return i.ToGetOpensearchVersionItemArrayOutputWithContext(context.Background())
}

func (i GetOpensearchVersionItemArray) ToGetOpensearchVersionItemArrayOutputWithContext(ctx context.Context) GetOpensearchVersionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpensearchVersionItemArrayOutput)
}

type GetOpensearchVersionItemOutput struct{ *pulumi.OutputState }

func (GetOpensearchVersionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpensearchVersionItem)(nil)).Elem()
}

func (o GetOpensearchVersionItemOutput) ToGetOpensearchVersionItemOutput() GetOpensearchVersionItemOutput {
	return o
}

func (o GetOpensearchVersionItemOutput) ToGetOpensearchVersionItemOutputWithContext(ctx context.Context) GetOpensearchVersionItemOutput {
	return o
}

// The version of OpenSearch.
func (o GetOpensearchVersionItemOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpensearchVersionItem) string { return v.Version }).(pulumi.StringOutput)
}

type GetOpensearchVersionItemArrayOutput struct{ *pulumi.OutputState }

func (GetOpensearchVersionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpensearchVersionItem)(nil)).Elem()
}

func (o GetOpensearchVersionItemArrayOutput) ToGetOpensearchVersionItemArrayOutput() GetOpensearchVersionItemArrayOutput {
	return o
}

func (o GetOpensearchVersionItemArrayOutput) ToGetOpensearchVersionItemArrayOutputWithContext(ctx context.Context) GetOpensearchVersionItemArrayOutput {
	return o
}

func (o GetOpensearchVersionItemArrayOutput) Index(i pulumi.IntInput) GetOpensearchVersionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOpensearchVersionItem {
		return vs[0].([]GetOpensearchVersionItem)[vs[1].(int)]
	}).(GetOpensearchVersionItemOutput)
}

type GetOpensearchVersionsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetOpensearchVersionsFilterInput is an input type that accepts GetOpensearchVersionsFilterArgs and GetOpensearchVersionsFilterOutput values.
// You can construct a concrete instance of `GetOpensearchVersionsFilterInput` via:
//
//	GetOpensearchVersionsFilterArgs{...}
type GetOpensearchVersionsFilterInput interface {
	pulumi.Input

	ToGetOpensearchVersionsFilterOutput() GetOpensearchVersionsFilterOutput
	ToGetOpensearchVersionsFilterOutputWithContext(context.Context) GetOpensearchVersionsFilterOutput
}

type GetOpensearchVersionsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetOpensearchVersionsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpensearchVersionsFilter)(nil)).Elem()
}

func (i GetOpensearchVersionsFilterArgs) ToGetOpensearchVersionsFilterOutput() GetOpensearchVersionsFilterOutput {
	return i.ToGetOpensearchVersionsFilterOutputWithContext(context.Background())
}

func (i GetOpensearchVersionsFilterArgs) ToGetOpensearchVersionsFilterOutputWithContext(ctx context.Context) GetOpensearchVersionsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpensearchVersionsFilterOutput)
}

// GetOpensearchVersionsFilterArrayInput is an input type that accepts GetOpensearchVersionsFilterArray and GetOpensearchVersionsFilterArrayOutput values.
// You can construct a concrete instance of `GetOpensearchVersionsFilterArrayInput` via:
//
//	GetOpensearchVersionsFilterArray{ GetOpensearchVersionsFilterArgs{...} }
type GetOpensearchVersionsFilterArrayInput interface {
	pulumi.Input

	ToGetOpensearchVersionsFilterArrayOutput() GetOpensearchVersionsFilterArrayOutput
	ToGetOpensearchVersionsFilterArrayOutputWithContext(context.Context) GetOpensearchVersionsFilterArrayOutput
}

type GetOpensearchVersionsFilterArray []GetOpensearchVersionsFilterInput

func (GetOpensearchVersionsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpensearchVersionsFilter)(nil)).Elem()
}

func (i GetOpensearchVersionsFilterArray) ToGetOpensearchVersionsFilterArrayOutput() GetOpensearchVersionsFilterArrayOutput {
	return i.ToGetOpensearchVersionsFilterArrayOutputWithContext(context.Background())
}

func (i GetOpensearchVersionsFilterArray) ToGetOpensearchVersionsFilterArrayOutputWithContext(ctx context.Context) GetOpensearchVersionsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpensearchVersionsFilterArrayOutput)
}

type GetOpensearchVersionsFilterOutput struct{ *pulumi.OutputState }

func (GetOpensearchVersionsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpensearchVersionsFilter)(nil)).Elem()
}

func (o GetOpensearchVersionsFilterOutput) ToGetOpensearchVersionsFilterOutput() GetOpensearchVersionsFilterOutput {
	return o
}

func (o GetOpensearchVersionsFilterOutput) ToGetOpensearchVersionsFilterOutputWithContext(ctx context.Context) GetOpensearchVersionsFilterOutput {
	return o
}

func (o GetOpensearchVersionsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpensearchVersionsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetOpensearchVersionsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetOpensearchVersionsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetOpensearchVersionsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOpensearchVersionsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetOpensearchVersionsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetOpensearchVersionsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpensearchVersionsFilter)(nil)).Elem()
}

func (o GetOpensearchVersionsFilterArrayOutput) ToGetOpensearchVersionsFilterArrayOutput() GetOpensearchVersionsFilterArrayOutput {
	return o
}

func (o GetOpensearchVersionsFilterArrayOutput) ToGetOpensearchVersionsFilterArrayOutputWithContext(ctx context.Context) GetOpensearchVersionsFilterArrayOutput {
	return o
}

func (o GetOpensearchVersionsFilterArrayOutput) Index(i pulumi.IntInput) GetOpensearchVersionsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOpensearchVersionsFilter {
		return vs[0].([]GetOpensearchVersionsFilter)[vs[1].(int)]
	}).(GetOpensearchVersionsFilterOutput)
}

type GetOpensearchVersionsOpensearchVersionsCollection struct {
	// A list of OpenSearch versions.
	Items []GetOpensearchVersionsOpensearchVersionsCollectionItem `pulumi:"items"`
}

// GetOpensearchVersionsOpensearchVersionsCollectionInput is an input type that accepts GetOpensearchVersionsOpensearchVersionsCollectionArgs and GetOpensearchVersionsOpensearchVersionsCollectionOutput values.
// You can construct a concrete instance of `GetOpensearchVersionsOpensearchVersionsCollectionInput` via:
//
//	GetOpensearchVersionsOpensearchVersionsCollectionArgs{...}
type GetOpensearchVersionsOpensearchVersionsCollectionInput interface {
	pulumi.Input

	ToGetOpensearchVersionsOpensearchVersionsCollectionOutput() GetOpensearchVersionsOpensearchVersionsCollectionOutput
	ToGetOpensearchVersionsOpensearchVersionsCollectionOutputWithContext(context.Context) GetOpensearchVersionsOpensearchVersionsCollectionOutput
}

type GetOpensearchVersionsOpensearchVersionsCollectionArgs struct {
	// A list of OpenSearch versions.
	Items GetOpensearchVersionsOpensearchVersionsCollectionItemArrayInput `pulumi:"items"`
}

func (GetOpensearchVersionsOpensearchVersionsCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpensearchVersionsOpensearchVersionsCollection)(nil)).Elem()
}

func (i GetOpensearchVersionsOpensearchVersionsCollectionArgs) ToGetOpensearchVersionsOpensearchVersionsCollectionOutput() GetOpensearchVersionsOpensearchVersionsCollectionOutput {
	return i.ToGetOpensearchVersionsOpensearchVersionsCollectionOutputWithContext(context.Background())
}

func (i GetOpensearchVersionsOpensearchVersionsCollectionArgs) ToGetOpensearchVersionsOpensearchVersionsCollectionOutputWithContext(ctx context.Context) GetOpensearchVersionsOpensearchVersionsCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpensearchVersionsOpensearchVersionsCollectionOutput)
}

// GetOpensearchVersionsOpensearchVersionsCollectionArrayInput is an input type that accepts GetOpensearchVersionsOpensearchVersionsCollectionArray and GetOpensearchVersionsOpensearchVersionsCollectionArrayOutput values.
// You can construct a concrete instance of `GetOpensearchVersionsOpensearchVersionsCollectionArrayInput` via:
//
//	GetOpensearchVersionsOpensearchVersionsCollectionArray{ GetOpensearchVersionsOpensearchVersionsCollectionArgs{...} }
type GetOpensearchVersionsOpensearchVersionsCollectionArrayInput interface {
	pulumi.Input

	ToGetOpensearchVersionsOpensearchVersionsCollectionArrayOutput() GetOpensearchVersionsOpensearchVersionsCollectionArrayOutput
	ToGetOpensearchVersionsOpensearchVersionsCollectionArrayOutputWithContext(context.Context) GetOpensearchVersionsOpensearchVersionsCollectionArrayOutput
}

type GetOpensearchVersionsOpensearchVersionsCollectionArray []GetOpensearchVersionsOpensearchVersionsCollectionInput

func (GetOpensearchVersionsOpensearchVersionsCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpensearchVersionsOpensearchVersionsCollection)(nil)).Elem()
}

func (i GetOpensearchVersionsOpensearchVersionsCollectionArray) ToGetOpensearchVersionsOpensearchVersionsCollectionArrayOutput() GetOpensearchVersionsOpensearchVersionsCollectionArrayOutput {
	return i.ToGetOpensearchVersionsOpensearchVersionsCollectionArrayOutputWithContext(context.Background())
}

func (i GetOpensearchVersionsOpensearchVersionsCollectionArray) ToGetOpensearchVersionsOpensearchVersionsCollectionArrayOutputWithContext(ctx context.Context) GetOpensearchVersionsOpensearchVersionsCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpensearchVersionsOpensearchVersionsCollectionArrayOutput)
}

type GetOpensearchVersionsOpensearchVersionsCollectionOutput struct{ *pulumi.OutputState }

func (GetOpensearchVersionsOpensearchVersionsCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpensearchVersionsOpensearchVersionsCollection)(nil)).Elem()
}

func (o GetOpensearchVersionsOpensearchVersionsCollectionOutput) ToGetOpensearchVersionsOpensearchVersionsCollectionOutput() GetOpensearchVersionsOpensearchVersionsCollectionOutput {
	return o
}

func (o GetOpensearchVersionsOpensearchVersionsCollectionOutput) ToGetOpensearchVersionsOpensearchVersionsCollectionOutputWithContext(ctx context.Context) GetOpensearchVersionsOpensearchVersionsCollectionOutput {
	return o
}

// A list of OpenSearch versions.
func (o GetOpensearchVersionsOpensearchVersionsCollectionOutput) Items() GetOpensearchVersionsOpensearchVersionsCollectionItemArrayOutput {
	return o.ApplyT(func(v GetOpensearchVersionsOpensearchVersionsCollection) []GetOpensearchVersionsOpensearchVersionsCollectionItem {
		return v.Items
	}).(GetOpensearchVersionsOpensearchVersionsCollectionItemArrayOutput)
}

type GetOpensearchVersionsOpensearchVersionsCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetOpensearchVersionsOpensearchVersionsCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpensearchVersionsOpensearchVersionsCollection)(nil)).Elem()
}

func (o GetOpensearchVersionsOpensearchVersionsCollectionArrayOutput) ToGetOpensearchVersionsOpensearchVersionsCollectionArrayOutput() GetOpensearchVersionsOpensearchVersionsCollectionArrayOutput {
	return o
}

func (o GetOpensearchVersionsOpensearchVersionsCollectionArrayOutput) ToGetOpensearchVersionsOpensearchVersionsCollectionArrayOutputWithContext(ctx context.Context) GetOpensearchVersionsOpensearchVersionsCollectionArrayOutput {
	return o
}

func (o GetOpensearchVersionsOpensearchVersionsCollectionArrayOutput) Index(i pulumi.IntInput) GetOpensearchVersionsOpensearchVersionsCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOpensearchVersionsOpensearchVersionsCollection {
		return vs[0].([]GetOpensearchVersionsOpensearchVersionsCollection)[vs[1].(int)]
	}).(GetOpensearchVersionsOpensearchVersionsCollectionOutput)
}

type GetOpensearchVersionsOpensearchVersionsCollectionItem struct {
	// The version of OpenSearch.
	Version string `pulumi:"version"`
}

// GetOpensearchVersionsOpensearchVersionsCollectionItemInput is an input type that accepts GetOpensearchVersionsOpensearchVersionsCollectionItemArgs and GetOpensearchVersionsOpensearchVersionsCollectionItemOutput values.
// You can construct a concrete instance of `GetOpensearchVersionsOpensearchVersionsCollectionItemInput` via:
//
//	GetOpensearchVersionsOpensearchVersionsCollectionItemArgs{...}
type GetOpensearchVersionsOpensearchVersionsCollectionItemInput interface {
	pulumi.Input

	ToGetOpensearchVersionsOpensearchVersionsCollectionItemOutput() GetOpensearchVersionsOpensearchVersionsCollectionItemOutput
	ToGetOpensearchVersionsOpensearchVersionsCollectionItemOutputWithContext(context.Context) GetOpensearchVersionsOpensearchVersionsCollectionItemOutput
}

type GetOpensearchVersionsOpensearchVersionsCollectionItemArgs struct {
	// The version of OpenSearch.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetOpensearchVersionsOpensearchVersionsCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpensearchVersionsOpensearchVersionsCollectionItem)(nil)).Elem()
}

func (i GetOpensearchVersionsOpensearchVersionsCollectionItemArgs) ToGetOpensearchVersionsOpensearchVersionsCollectionItemOutput() GetOpensearchVersionsOpensearchVersionsCollectionItemOutput {
	return i.ToGetOpensearchVersionsOpensearchVersionsCollectionItemOutputWithContext(context.Background())
}

func (i GetOpensearchVersionsOpensearchVersionsCollectionItemArgs) ToGetOpensearchVersionsOpensearchVersionsCollectionItemOutputWithContext(ctx context.Context) GetOpensearchVersionsOpensearchVersionsCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpensearchVersionsOpensearchVersionsCollectionItemOutput)
}

// GetOpensearchVersionsOpensearchVersionsCollectionItemArrayInput is an input type that accepts GetOpensearchVersionsOpensearchVersionsCollectionItemArray and GetOpensearchVersionsOpensearchVersionsCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetOpensearchVersionsOpensearchVersionsCollectionItemArrayInput` via:
//
//	GetOpensearchVersionsOpensearchVersionsCollectionItemArray{ GetOpensearchVersionsOpensearchVersionsCollectionItemArgs{...} }
type GetOpensearchVersionsOpensearchVersionsCollectionItemArrayInput interface {
	pulumi.Input

	ToGetOpensearchVersionsOpensearchVersionsCollectionItemArrayOutput() GetOpensearchVersionsOpensearchVersionsCollectionItemArrayOutput
	ToGetOpensearchVersionsOpensearchVersionsCollectionItemArrayOutputWithContext(context.Context) GetOpensearchVersionsOpensearchVersionsCollectionItemArrayOutput
}

type GetOpensearchVersionsOpensearchVersionsCollectionItemArray []GetOpensearchVersionsOpensearchVersionsCollectionItemInput

func (GetOpensearchVersionsOpensearchVersionsCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpensearchVersionsOpensearchVersionsCollectionItem)(nil)).Elem()
}

func (i GetOpensearchVersionsOpensearchVersionsCollectionItemArray) ToGetOpensearchVersionsOpensearchVersionsCollectionItemArrayOutput() GetOpensearchVersionsOpensearchVersionsCollectionItemArrayOutput {
	return i.ToGetOpensearchVersionsOpensearchVersionsCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetOpensearchVersionsOpensearchVersionsCollectionItemArray) ToGetOpensearchVersionsOpensearchVersionsCollectionItemArrayOutputWithContext(ctx context.Context) GetOpensearchVersionsOpensearchVersionsCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpensearchVersionsOpensearchVersionsCollectionItemArrayOutput)
}

type GetOpensearchVersionsOpensearchVersionsCollectionItemOutput struct{ *pulumi.OutputState }

func (GetOpensearchVersionsOpensearchVersionsCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpensearchVersionsOpensearchVersionsCollectionItem)(nil)).Elem()
}

func (o GetOpensearchVersionsOpensearchVersionsCollectionItemOutput) ToGetOpensearchVersionsOpensearchVersionsCollectionItemOutput() GetOpensearchVersionsOpensearchVersionsCollectionItemOutput {
	return o
}

func (o GetOpensearchVersionsOpensearchVersionsCollectionItemOutput) ToGetOpensearchVersionsOpensearchVersionsCollectionItemOutputWithContext(ctx context.Context) GetOpensearchVersionsOpensearchVersionsCollectionItemOutput {
	return o
}

// The version of OpenSearch.
func (o GetOpensearchVersionsOpensearchVersionsCollectionItemOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpensearchVersionsOpensearchVersionsCollectionItem) string { return v.Version }).(pulumi.StringOutput)
}

type GetOpensearchVersionsOpensearchVersionsCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetOpensearchVersionsOpensearchVersionsCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpensearchVersionsOpensearchVersionsCollectionItem)(nil)).Elem()
}

func (o GetOpensearchVersionsOpensearchVersionsCollectionItemArrayOutput) ToGetOpensearchVersionsOpensearchVersionsCollectionItemArrayOutput() GetOpensearchVersionsOpensearchVersionsCollectionItemArrayOutput {
	return o
}

func (o GetOpensearchVersionsOpensearchVersionsCollectionItemArrayOutput) ToGetOpensearchVersionsOpensearchVersionsCollectionItemArrayOutputWithContext(ctx context.Context) GetOpensearchVersionsOpensearchVersionsCollectionItemArrayOutput {
	return o
}

func (o GetOpensearchVersionsOpensearchVersionsCollectionItemArrayOutput) Index(i pulumi.IntInput) GetOpensearchVersionsOpensearchVersionsCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOpensearchVersionsOpensearchVersionsCollectionItem {
		return vs[0].([]GetOpensearchVersionsOpensearchVersionsCollectionItem)[vs[1].(int)]
	}).(GetOpensearchVersionsOpensearchVersionsCollectionItemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpensearchClustersFilterInput)(nil)).Elem(), GetOpensearchClustersFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpensearchClustersFilterArrayInput)(nil)).Elem(), GetOpensearchClustersFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpensearchClustersOpensearchClusterCollectionInput)(nil)).Elem(), GetOpensearchClustersOpensearchClusterCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpensearchClustersOpensearchClusterCollectionArrayInput)(nil)).Elem(), GetOpensearchClustersOpensearchClusterCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpensearchClustersOpensearchClusterCollectionItemInput)(nil)).Elem(), GetOpensearchClustersOpensearchClusterCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpensearchClustersOpensearchClusterCollectionItemArrayInput)(nil)).Elem(), GetOpensearchClustersOpensearchClusterCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpensearchVersionItemInput)(nil)).Elem(), GetOpensearchVersionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpensearchVersionItemArrayInput)(nil)).Elem(), GetOpensearchVersionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpensearchVersionsFilterInput)(nil)).Elem(), GetOpensearchVersionsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpensearchVersionsFilterArrayInput)(nil)).Elem(), GetOpensearchVersionsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpensearchVersionsOpensearchVersionsCollectionInput)(nil)).Elem(), GetOpensearchVersionsOpensearchVersionsCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpensearchVersionsOpensearchVersionsCollectionArrayInput)(nil)).Elem(), GetOpensearchVersionsOpensearchVersionsCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpensearchVersionsOpensearchVersionsCollectionItemInput)(nil)).Elem(), GetOpensearchVersionsOpensearchVersionsCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpensearchVersionsOpensearchVersionsCollectionItemArrayInput)(nil)).Elem(), GetOpensearchVersionsOpensearchVersionsCollectionItemArray{})
	pulumi.RegisterOutputType(GetOpensearchClustersFilterOutput{})
	pulumi.RegisterOutputType(GetOpensearchClustersFilterArrayOutput{})
	pulumi.RegisterOutputType(GetOpensearchClustersOpensearchClusterCollectionOutput{})
	pulumi.RegisterOutputType(GetOpensearchClustersOpensearchClusterCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetOpensearchClustersOpensearchClusterCollectionItemOutput{})
	pulumi.RegisterOutputType(GetOpensearchClustersOpensearchClusterCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetOpensearchVersionItemOutput{})
	pulumi.RegisterOutputType(GetOpensearchVersionItemArrayOutput{})
	pulumi.RegisterOutputType(GetOpensearchVersionsFilterOutput{})
	pulumi.RegisterOutputType(GetOpensearchVersionsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetOpensearchVersionsOpensearchVersionsCollectionOutput{})
	pulumi.RegisterOutputType(GetOpensearchVersionsOpensearchVersionsCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetOpensearchVersionsOpensearchVersionsCollectionItemOutput{})
	pulumi.RegisterOutputType(GetOpensearchVersionsOpensearchVersionsCollectionItemArrayOutput{})
}
