// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package operatoraccesscontrol

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Operator Actions in Oracle Cloud Infrastructure Operator Access Control service.
//
// Lists all the OperatorActions available in the system.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/OperatorAccessControl"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := OperatorAccessControl.GetActions(ctx, &operatoraccesscontrol.GetActionsArgs{
//				CompartmentId: _var.Compartment_id,
//				Name:          pulumi.StringRef(_var.Operator_action_name),
//				ResourceType:  pulumi.StringRef(_var.Operator_action_resource_type),
//				State:         pulumi.StringRef(_var.Operator_action_state),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetActions(ctx *pulumi.Context, args *GetActionsArgs, opts ...pulumi.InvokeOption) (*GetActionsResult, error) {
	var rv GetActionsResult
	err := ctx.Invoke("oci:OperatorAccessControl/getActions:getActions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getActions.
type GetActionsArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string             `pulumi:"compartmentId"`
	Filters       []GetActionsFilter `pulumi:"filters"`
	// A filter to return only resources that match the entire display name given.
	Name *string `pulumi:"name"`
	// A filter to return only lists of resources that match the entire given service type.
	ResourceType *string `pulumi:"resourceType"`
	// A filter to return only resources whose lifecycleState matches the given OperatorAction lifecycleState.
	State *string `pulumi:"state"`
}

// A collection of values returned by getActions.
type GetActionsResult struct {
	CompartmentId string             `pulumi:"compartmentId"`
	Filters       []GetActionsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Name of the property
	Name *string `pulumi:"name"`
	// The list of operator_action_collection.
	OperatorActionCollections []GetActionsOperatorActionCollection `pulumi:"operatorActionCollections"`
	// resourceType for which the OperatorAction is applicable
	ResourceType *string `pulumi:"resourceType"`
	State        *string `pulumi:"state"`
}

func GetActionsOutput(ctx *pulumi.Context, args GetActionsOutputArgs, opts ...pulumi.InvokeOption) GetActionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetActionsResult, error) {
			args := v.(GetActionsArgs)
			r, err := GetActions(ctx, &args, opts...)
			var s GetActionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetActionsResultOutput)
}

// A collection of arguments for invoking getActions.
type GetActionsOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput         `pulumi:"compartmentId"`
	Filters       GetActionsFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources that match the entire display name given.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A filter to return only lists of resources that match the entire given service type.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// A filter to return only resources whose lifecycleState matches the given OperatorAction lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetActionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionsArgs)(nil)).Elem()
}

// A collection of values returned by getActions.
type GetActionsResultOutput struct{ *pulumi.OutputState }

func (GetActionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionsResult)(nil)).Elem()
}

func (o GetActionsResultOutput) ToGetActionsResultOutput() GetActionsResultOutput {
	return o
}

func (o GetActionsResultOutput) ToGetActionsResultOutputWithContext(ctx context.Context) GetActionsResultOutput {
	return o
}

func (o GetActionsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetActionsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetActionsResultOutput) Filters() GetActionsFilterArrayOutput {
	return o.ApplyT(func(v GetActionsResult) []GetActionsFilter { return v.Filters }).(GetActionsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetActionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetActionsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the property
func (o GetActionsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetActionsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The list of operator_action_collection.
func (o GetActionsResultOutput) OperatorActionCollections() GetActionsOperatorActionCollectionArrayOutput {
	return o.ApplyT(func(v GetActionsResult) []GetActionsOperatorActionCollection { return v.OperatorActionCollections }).(GetActionsOperatorActionCollectionArrayOutput)
}

// resourceType for which the OperatorAction is applicable
func (o GetActionsResultOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetActionsResult) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

func (o GetActionsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetActionsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetActionsResultOutput{})
}
