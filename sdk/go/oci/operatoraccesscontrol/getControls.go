// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package operatoraccesscontrol

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Operator Controls in Oracle Cloud Infrastructure Operator Access Control service.
//
// Lists the operator controls in the compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/OperatorAccessControl"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := OperatorAccessControl.GetControls(ctx, &operatoraccesscontrol.GetControlsArgs{
//				CompartmentId: _var.Compartment_id,
//				DisplayName:   pulumi.StringRef(_var.Operator_control_display_name),
//				ResourceType:  pulumi.StringRef(_var.Operator_control_resource_type),
//				State:         pulumi.StringRef(_var.Operator_control_state),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetControls(ctx *pulumi.Context, args *GetControlsArgs, opts ...pulumi.InvokeOption) (*GetControlsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetControlsResult
	err := ctx.Invoke("oci:OperatorAccessControl/getControls:getControls", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getControls.
type GetControlsArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return OperatorControl that match the entire display name given.
	DisplayName *string             `pulumi:"displayName"`
	Filters     []GetControlsFilter `pulumi:"filters"`
	// A filter to return only lists of resources that match the entire given service type.
	ResourceType *string `pulumi:"resourceType"`
	// A filter to return only resources whose lifecycleState matches the given OperatorControl lifecycleState.
	State *string `pulumi:"state"`
}

// A collection of values returned by getControls.
type GetControlsResult struct {
	// The OCID of the compartment that contains the operator control.
	CompartmentId string              `pulumi:"compartmentId"`
	DisplayName   *string             `pulumi:"displayName"`
	Filters       []GetControlsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id *string `pulumi:"id"`
	// The list of operator_control_collection.
	OperatorControlCollections []GetControlsOperatorControlCollection `pulumi:"operatorControlCollections"`
	// resourceType for which the OperatorControl is applicable
	ResourceType *string `pulumi:"resourceType"`
	// The current lifecycle state of the operator control.
	State *string `pulumi:"state"`
}

func GetControlsOutput(ctx *pulumi.Context, args GetControlsOutputArgs, opts ...pulumi.InvokeOption) GetControlsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetControlsResult, error) {
			args := v.(GetControlsArgs)
			r, err := GetControls(ctx, &args, opts...)
			var s GetControlsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetControlsResultOutput)
}

// A collection of arguments for invoking getControls.
type GetControlsOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return OperatorControl that match the entire display name given.
	DisplayName pulumi.StringPtrInput       `pulumi:"displayName"`
	Filters     GetControlsFilterArrayInput `pulumi:"filters"`
	// A filter to return only lists of resources that match the entire given service type.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// A filter to return only resources whose lifecycleState matches the given OperatorControl lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetControlsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetControlsArgs)(nil)).Elem()
}

// A collection of values returned by getControls.
type GetControlsResultOutput struct{ *pulumi.OutputState }

func (GetControlsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetControlsResult)(nil)).Elem()
}

func (o GetControlsResultOutput) ToGetControlsResultOutput() GetControlsResultOutput {
	return o
}

func (o GetControlsResultOutput) ToGetControlsResultOutputWithContext(ctx context.Context) GetControlsResultOutput {
	return o
}

// The OCID of the compartment that contains the operator control.
func (o GetControlsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetControlsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetControlsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetControlsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetControlsResultOutput) Filters() GetControlsFilterArrayOutput {
	return o.ApplyT(func(v GetControlsResult) []GetControlsFilter { return v.Filters }).(GetControlsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetControlsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetControlsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The list of operator_control_collection.
func (o GetControlsResultOutput) OperatorControlCollections() GetControlsOperatorControlCollectionArrayOutput {
	return o.ApplyT(func(v GetControlsResult) []GetControlsOperatorControlCollection { return v.OperatorControlCollections }).(GetControlsOperatorControlCollectionArrayOutput)
}

// resourceType for which the OperatorControl is applicable
func (o GetControlsResultOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetControlsResult) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// The current lifecycle state of the operator control.
func (o GetControlsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetControlsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetControlsResultOutput{})
}
