// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package operatoraccesscontrol

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Operator Control Assignment resource in Oracle Cloud Infrastructure Operator Access Control service.
//
// Creates an Operator Control Assignment resource. In effect, this brings the target resource under the governance of the Operator Control for specified time duration.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/operatoraccesscontrol"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := operatoraccesscontrol.NewOperatorControlAssignment(ctx, "test_operator_control_assignment", &operatoraccesscontrol.OperatorControlAssignmentArgs{
//				CompartmentId:                  pulumi.Any(compartmentId),
//				IsEnforcedAlways:               pulumi.Any(operatorControlAssignmentIsEnforcedAlways),
//				OperatorControlId:              pulumi.Any(testOperatorControl.Id),
//				ResourceCompartmentId:          pulumi.Any(testCompartment.Id),
//				ResourceId:                     pulumi.Any(testResource.Id),
//				ResourceName:                   pulumi.Any(operatorControlAssignmentResourceName),
//				ResourceType:                   pulumi.Any(operatorControlAssignmentResourceType),
//				Comment:                        pulumi.Any(operatorControlAssignmentComment),
//				DefinedTags:                    pulumi.Any(operatorControlAssignmentDefinedTags),
//				FreeformTags:                   pulumi.Any(operatorControlAssignmentFreeformTags),
//				IsAutoApproveDuringMaintenance: pulumi.Any(operatorControlAssignmentIsAutoApproveDuringMaintenance),
//				IsHypervisorLogForwarded:       pulumi.Any(operatorControlAssignmentIsHypervisorLogForwarded),
//				IsLogForwarded:                 pulumi.Any(operatorControlAssignmentIsLogForwarded),
//				RemoteSyslogServerAddress:      pulumi.Any(operatorControlAssignmentRemoteSyslogServerAddress),
//				RemoteSyslogServerCaCert:       pulumi.Any(operatorControlAssignmentRemoteSyslogServerCaCert),
//				RemoteSyslogServerPort:         pulumi.Any(operatorControlAssignmentRemoteSyslogServerPort),
//				TimeAssignmentFrom:             pulumi.Any(operatorControlAssignmentTimeAssignmentFrom),
//				TimeAssignmentTo:               pulumi.Any(operatorControlAssignmentTimeAssignmentTo),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// OperatorControlAssignments can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:OperatorAccessControl/operatorControlAssignment:OperatorControlAssignment test_operator_control_assignment "id"
// ```
type OperatorControlAssignment struct {
	pulumi.CustomResourceState

	// The OCID of the user who created this operator control assignment.
	AssignerId pulumi.StringOutput `pulumi:"assignerId"`
	// (Updatable) Comment about the assignment of the operator control to this target resource.
	Comment pulumi.StringOutput `pulumi:"comment"`
	// (Updatable) The OCID of the compartment that contains the operator control assignment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace.
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// description containing reason for releasing of OperatorControl.
	DetachmentDescription pulumi.StringOutput `pulumi:"detachmentDescription"`
	// The code identifying the error occurred during Assignment operation.
	ErrorCode pulumi.IntOutput `pulumi:"errorCode"`
	// The message describing the error occurred during Assignment operation.
	ErrorMessage pulumi.StringOutput `pulumi:"errorMessage"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// (Updatable) The boolean if true would autoApprove during maintenance.
	IsAutoApproveDuringMaintenance pulumi.BoolOutput `pulumi:"isAutoApproveDuringMaintenance"`
	// Whether the assignment is a default assignment.
	IsDefaultAssignment pulumi.BoolOutput `pulumi:"isDefaultAssignment"`
	// (Updatable) If set, then the target resource is always governed by the operator control.
	IsEnforcedAlways pulumi.BoolOutput `pulumi:"isEnforcedAlways"`
	// (Updatable) If set, then the hypervisor audit logs will be forwarded to the relevant remote syslog server
	IsHypervisorLogForwarded pulumi.BoolOutput `pulumi:"isHypervisorLogForwarded"`
	// (Updatable) If set, then the audit logs will be forwarded to the relevant remote logging server
	IsLogForwarded pulumi.BoolOutput `pulumi:"isLogForwarded"`
	// More in detail about the lifeCycleState.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// Name of the operator control name associated.
	OpControlName pulumi.StringOutput `pulumi:"opControlName"`
	// The OCID of the operator control that is being assigned to a target resource.
	OperatorControlId pulumi.StringOutput `pulumi:"operatorControlId"`
	// (Updatable) The address of the remote syslog server where the audit logs will be forwarded to. Address in host or IP format.
	RemoteSyslogServerAddress pulumi.StringOutput `pulumi:"remoteSyslogServerAddress"`
	// (Updatable) The CA certificate of the remote syslog server. Identity of the remote syslog server will be asserted based on this certificate.
	RemoteSyslogServerCaCert pulumi.StringOutput `pulumi:"remoteSyslogServerCaCert"`
	// (Updatable) The listening port of the remote syslog server. The port range is 0 - 65535. Only TCP supported.
	RemoteSyslogServerPort pulumi.IntOutput `pulumi:"remoteSyslogServerPort"`
	// The OCID of the compartment that contains the target resource.
	ResourceCompartmentId pulumi.StringOutput `pulumi:"resourceCompartmentId"`
	// The OCID of the target resource being brought under the governance of the operator control.
	ResourceId pulumi.StringOutput `pulumi:"resourceId"`
	// Name of the target resource.
	ResourceName pulumi.StringOutput `pulumi:"resourceName"`
	// Type of the target resource.
	ResourceType pulumi.StringOutput `pulumi:"resourceType"`
	// The current lifcycle state of the OperatorControl.
	State pulumi.StringOutput `pulumi:"state"`
	// (Updatable) The time at which the target resource will be brought under the governance of the operator control in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: '2020-05-22T21:10:29.600Z'
	TimeAssignmentFrom pulumi.StringOutput `pulumi:"timeAssignmentFrom"`
	// (Updatable) The time at which the target resource will leave the governance of the operator control in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format.Example: '2020-05-22T21:10:29.600Z'
	TimeAssignmentTo pulumi.StringOutput `pulumi:"timeAssignmentTo"`
	// Time when the operator control assignment is created in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: '2020-05-22T21:10:29.600Z'
	TimeOfAssignment pulumi.StringOutput `pulumi:"timeOfAssignment"`
	// Time on which the operator control assignment was deleted in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format.Example: '2020-05-22T21:10:29.600Z'
	TimeOfDeletion pulumi.StringOutput `pulumi:"timeOfDeletion"`
	// User id who released the operatorControl.
	UnassignerId pulumi.StringOutput `pulumi:"unassignerId"`
	// (Updatable) An optional property when incremented triggers Validate Assignment. Could be set to any integer value.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ValidateAssignmentTrigger pulumi.IntPtrOutput `pulumi:"validateAssignmentTrigger"`
}

// NewOperatorControlAssignment registers a new resource with the given unique name, arguments, and options.
func NewOperatorControlAssignment(ctx *pulumi.Context,
	name string, args *OperatorControlAssignmentArgs, opts ...pulumi.ResourceOption) (*OperatorControlAssignment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.IsEnforcedAlways == nil {
		return nil, errors.New("invalid value for required argument 'IsEnforcedAlways'")
	}
	if args.OperatorControlId == nil {
		return nil, errors.New("invalid value for required argument 'OperatorControlId'")
	}
	if args.ResourceCompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'ResourceCompartmentId'")
	}
	if args.ResourceId == nil {
		return nil, errors.New("invalid value for required argument 'ResourceId'")
	}
	if args.ResourceName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceName'")
	}
	if args.ResourceType == nil {
		return nil, errors.New("invalid value for required argument 'ResourceType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OperatorControlAssignment
	err := ctx.RegisterResource("oci:OperatorAccessControl/operatorControlAssignment:OperatorControlAssignment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOperatorControlAssignment gets an existing OperatorControlAssignment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOperatorControlAssignment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OperatorControlAssignmentState, opts ...pulumi.ResourceOption) (*OperatorControlAssignment, error) {
	var resource OperatorControlAssignment
	err := ctx.ReadResource("oci:OperatorAccessControl/operatorControlAssignment:OperatorControlAssignment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OperatorControlAssignment resources.
type operatorControlAssignmentState struct {
	// The OCID of the user who created this operator control assignment.
	AssignerId *string `pulumi:"assignerId"`
	// (Updatable) Comment about the assignment of the operator control to this target resource.
	Comment *string `pulumi:"comment"`
	// (Updatable) The OCID of the compartment that contains the operator control assignment.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace.
	DefinedTags map[string]string `pulumi:"definedTags"`
	// description containing reason for releasing of OperatorControl.
	DetachmentDescription *string `pulumi:"detachmentDescription"`
	// The code identifying the error occurred during Assignment operation.
	ErrorCode *int `pulumi:"errorCode"`
	// The message describing the error occurred during Assignment operation.
	ErrorMessage *string `pulumi:"errorMessage"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// (Updatable) The boolean if true would autoApprove during maintenance.
	IsAutoApproveDuringMaintenance *bool `pulumi:"isAutoApproveDuringMaintenance"`
	// Whether the assignment is a default assignment.
	IsDefaultAssignment *bool `pulumi:"isDefaultAssignment"`
	// (Updatable) If set, then the target resource is always governed by the operator control.
	IsEnforcedAlways *bool `pulumi:"isEnforcedAlways"`
	// (Updatable) If set, then the hypervisor audit logs will be forwarded to the relevant remote syslog server
	IsHypervisorLogForwarded *bool `pulumi:"isHypervisorLogForwarded"`
	// (Updatable) If set, then the audit logs will be forwarded to the relevant remote logging server
	IsLogForwarded *bool `pulumi:"isLogForwarded"`
	// More in detail about the lifeCycleState.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// Name of the operator control name associated.
	OpControlName *string `pulumi:"opControlName"`
	// The OCID of the operator control that is being assigned to a target resource.
	OperatorControlId *string `pulumi:"operatorControlId"`
	// (Updatable) The address of the remote syslog server where the audit logs will be forwarded to. Address in host or IP format.
	RemoteSyslogServerAddress *string `pulumi:"remoteSyslogServerAddress"`
	// (Updatable) The CA certificate of the remote syslog server. Identity of the remote syslog server will be asserted based on this certificate.
	RemoteSyslogServerCaCert *string `pulumi:"remoteSyslogServerCaCert"`
	// (Updatable) The listening port of the remote syslog server. The port range is 0 - 65535. Only TCP supported.
	RemoteSyslogServerPort *int `pulumi:"remoteSyslogServerPort"`
	// The OCID of the compartment that contains the target resource.
	ResourceCompartmentId *string `pulumi:"resourceCompartmentId"`
	// The OCID of the target resource being brought under the governance of the operator control.
	ResourceId *string `pulumi:"resourceId"`
	// Name of the target resource.
	ResourceName *string `pulumi:"resourceName"`
	// Type of the target resource.
	ResourceType *string `pulumi:"resourceType"`
	// The current lifcycle state of the OperatorControl.
	State *string `pulumi:"state"`
	// (Updatable) The time at which the target resource will be brought under the governance of the operator control in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: '2020-05-22T21:10:29.600Z'
	TimeAssignmentFrom *string `pulumi:"timeAssignmentFrom"`
	// (Updatable) The time at which the target resource will leave the governance of the operator control in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format.Example: '2020-05-22T21:10:29.600Z'
	TimeAssignmentTo *string `pulumi:"timeAssignmentTo"`
	// Time when the operator control assignment is created in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: '2020-05-22T21:10:29.600Z'
	TimeOfAssignment *string `pulumi:"timeOfAssignment"`
	// Time on which the operator control assignment was deleted in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format.Example: '2020-05-22T21:10:29.600Z'
	TimeOfDeletion *string `pulumi:"timeOfDeletion"`
	// User id who released the operatorControl.
	UnassignerId *string `pulumi:"unassignerId"`
	// (Updatable) An optional property when incremented triggers Validate Assignment. Could be set to any integer value.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ValidateAssignmentTrigger *int `pulumi:"validateAssignmentTrigger"`
}

type OperatorControlAssignmentState struct {
	// The OCID of the user who created this operator control assignment.
	AssignerId pulumi.StringPtrInput
	// (Updatable) Comment about the assignment of the operator control to this target resource.
	Comment pulumi.StringPtrInput
	// (Updatable) The OCID of the compartment that contains the operator control assignment.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace.
	DefinedTags pulumi.StringMapInput
	// description containing reason for releasing of OperatorControl.
	DetachmentDescription pulumi.StringPtrInput
	// The code identifying the error occurred during Assignment operation.
	ErrorCode pulumi.IntPtrInput
	// The message describing the error occurred during Assignment operation.
	ErrorMessage pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
	FreeformTags pulumi.StringMapInput
	// (Updatable) The boolean if true would autoApprove during maintenance.
	IsAutoApproveDuringMaintenance pulumi.BoolPtrInput
	// Whether the assignment is a default assignment.
	IsDefaultAssignment pulumi.BoolPtrInput
	// (Updatable) If set, then the target resource is always governed by the operator control.
	IsEnforcedAlways pulumi.BoolPtrInput
	// (Updatable) If set, then the hypervisor audit logs will be forwarded to the relevant remote syslog server
	IsHypervisorLogForwarded pulumi.BoolPtrInput
	// (Updatable) If set, then the audit logs will be forwarded to the relevant remote logging server
	IsLogForwarded pulumi.BoolPtrInput
	// More in detail about the lifeCycleState.
	LifecycleDetails pulumi.StringPtrInput
	// Name of the operator control name associated.
	OpControlName pulumi.StringPtrInput
	// The OCID of the operator control that is being assigned to a target resource.
	OperatorControlId pulumi.StringPtrInput
	// (Updatable) The address of the remote syslog server where the audit logs will be forwarded to. Address in host or IP format.
	RemoteSyslogServerAddress pulumi.StringPtrInput
	// (Updatable) The CA certificate of the remote syslog server. Identity of the remote syslog server will be asserted based on this certificate.
	RemoteSyslogServerCaCert pulumi.StringPtrInput
	// (Updatable) The listening port of the remote syslog server. The port range is 0 - 65535. Only TCP supported.
	RemoteSyslogServerPort pulumi.IntPtrInput
	// The OCID of the compartment that contains the target resource.
	ResourceCompartmentId pulumi.StringPtrInput
	// The OCID of the target resource being brought under the governance of the operator control.
	ResourceId pulumi.StringPtrInput
	// Name of the target resource.
	ResourceName pulumi.StringPtrInput
	// Type of the target resource.
	ResourceType pulumi.StringPtrInput
	// The current lifcycle state of the OperatorControl.
	State pulumi.StringPtrInput
	// (Updatable) The time at which the target resource will be brought under the governance of the operator control in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: '2020-05-22T21:10:29.600Z'
	TimeAssignmentFrom pulumi.StringPtrInput
	// (Updatable) The time at which the target resource will leave the governance of the operator control in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format.Example: '2020-05-22T21:10:29.600Z'
	TimeAssignmentTo pulumi.StringPtrInput
	// Time when the operator control assignment is created in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: '2020-05-22T21:10:29.600Z'
	TimeOfAssignment pulumi.StringPtrInput
	// Time on which the operator control assignment was deleted in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format.Example: '2020-05-22T21:10:29.600Z'
	TimeOfDeletion pulumi.StringPtrInput
	// User id who released the operatorControl.
	UnassignerId pulumi.StringPtrInput
	// (Updatable) An optional property when incremented triggers Validate Assignment. Could be set to any integer value.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ValidateAssignmentTrigger pulumi.IntPtrInput
}

func (OperatorControlAssignmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*operatorControlAssignmentState)(nil)).Elem()
}

type operatorControlAssignmentArgs struct {
	// (Updatable) Comment about the assignment of the operator control to this target resource.
	Comment *string `pulumi:"comment"`
	// (Updatable) The OCID of the compartment that contains the operator control assignment.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace.
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// (Updatable) The boolean if true would autoApprove during maintenance.
	IsAutoApproveDuringMaintenance *bool `pulumi:"isAutoApproveDuringMaintenance"`
	// (Updatable) If set, then the target resource is always governed by the operator control.
	IsEnforcedAlways bool `pulumi:"isEnforcedAlways"`
	// (Updatable) If set, then the hypervisor audit logs will be forwarded to the relevant remote syslog server
	IsHypervisorLogForwarded *bool `pulumi:"isHypervisorLogForwarded"`
	// (Updatable) If set, then the audit logs will be forwarded to the relevant remote logging server
	IsLogForwarded *bool `pulumi:"isLogForwarded"`
	// The OCID of the operator control that is being assigned to a target resource.
	OperatorControlId string `pulumi:"operatorControlId"`
	// (Updatable) The address of the remote syslog server where the audit logs will be forwarded to. Address in host or IP format.
	RemoteSyslogServerAddress *string `pulumi:"remoteSyslogServerAddress"`
	// (Updatable) The CA certificate of the remote syslog server. Identity of the remote syslog server will be asserted based on this certificate.
	RemoteSyslogServerCaCert *string `pulumi:"remoteSyslogServerCaCert"`
	// (Updatable) The listening port of the remote syslog server. The port range is 0 - 65535. Only TCP supported.
	RemoteSyslogServerPort *int `pulumi:"remoteSyslogServerPort"`
	// The OCID of the compartment that contains the target resource.
	ResourceCompartmentId string `pulumi:"resourceCompartmentId"`
	// The OCID of the target resource being brought under the governance of the operator control.
	ResourceId string `pulumi:"resourceId"`
	// Name of the target resource.
	ResourceName string `pulumi:"resourceName"`
	// Type of the target resource.
	ResourceType string `pulumi:"resourceType"`
	// (Updatable) The time at which the target resource will be brought under the governance of the operator control in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: '2020-05-22T21:10:29.600Z'
	TimeAssignmentFrom *string `pulumi:"timeAssignmentFrom"`
	// (Updatable) The time at which the target resource will leave the governance of the operator control in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format.Example: '2020-05-22T21:10:29.600Z'
	TimeAssignmentTo *string `pulumi:"timeAssignmentTo"`
	// (Updatable) An optional property when incremented triggers Validate Assignment. Could be set to any integer value.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ValidateAssignmentTrigger *int `pulumi:"validateAssignmentTrigger"`
}

// The set of arguments for constructing a OperatorControlAssignment resource.
type OperatorControlAssignmentArgs struct {
	// (Updatable) Comment about the assignment of the operator control to this target resource.
	Comment pulumi.StringPtrInput
	// (Updatable) The OCID of the compartment that contains the operator control assignment.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace.
	DefinedTags pulumi.StringMapInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
	FreeformTags pulumi.StringMapInput
	// (Updatable) The boolean if true would autoApprove during maintenance.
	IsAutoApproveDuringMaintenance pulumi.BoolPtrInput
	// (Updatable) If set, then the target resource is always governed by the operator control.
	IsEnforcedAlways pulumi.BoolInput
	// (Updatable) If set, then the hypervisor audit logs will be forwarded to the relevant remote syslog server
	IsHypervisorLogForwarded pulumi.BoolPtrInput
	// (Updatable) If set, then the audit logs will be forwarded to the relevant remote logging server
	IsLogForwarded pulumi.BoolPtrInput
	// The OCID of the operator control that is being assigned to a target resource.
	OperatorControlId pulumi.StringInput
	// (Updatable) The address of the remote syslog server where the audit logs will be forwarded to. Address in host or IP format.
	RemoteSyslogServerAddress pulumi.StringPtrInput
	// (Updatable) The CA certificate of the remote syslog server. Identity of the remote syslog server will be asserted based on this certificate.
	RemoteSyslogServerCaCert pulumi.StringPtrInput
	// (Updatable) The listening port of the remote syslog server. The port range is 0 - 65535. Only TCP supported.
	RemoteSyslogServerPort pulumi.IntPtrInput
	// The OCID of the compartment that contains the target resource.
	ResourceCompartmentId pulumi.StringInput
	// The OCID of the target resource being brought under the governance of the operator control.
	ResourceId pulumi.StringInput
	// Name of the target resource.
	ResourceName pulumi.StringInput
	// Type of the target resource.
	ResourceType pulumi.StringInput
	// (Updatable) The time at which the target resource will be brought under the governance of the operator control in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: '2020-05-22T21:10:29.600Z'
	TimeAssignmentFrom pulumi.StringPtrInput
	// (Updatable) The time at which the target resource will leave the governance of the operator control in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format.Example: '2020-05-22T21:10:29.600Z'
	TimeAssignmentTo pulumi.StringPtrInput
	// (Updatable) An optional property when incremented triggers Validate Assignment. Could be set to any integer value.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ValidateAssignmentTrigger pulumi.IntPtrInput
}

func (OperatorControlAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*operatorControlAssignmentArgs)(nil)).Elem()
}

type OperatorControlAssignmentInput interface {
	pulumi.Input

	ToOperatorControlAssignmentOutput() OperatorControlAssignmentOutput
	ToOperatorControlAssignmentOutputWithContext(ctx context.Context) OperatorControlAssignmentOutput
}

func (*OperatorControlAssignment) ElementType() reflect.Type {
	return reflect.TypeOf((**OperatorControlAssignment)(nil)).Elem()
}

func (i *OperatorControlAssignment) ToOperatorControlAssignmentOutput() OperatorControlAssignmentOutput {
	return i.ToOperatorControlAssignmentOutputWithContext(context.Background())
}

func (i *OperatorControlAssignment) ToOperatorControlAssignmentOutputWithContext(ctx context.Context) OperatorControlAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OperatorControlAssignmentOutput)
}

// OperatorControlAssignmentArrayInput is an input type that accepts OperatorControlAssignmentArray and OperatorControlAssignmentArrayOutput values.
// You can construct a concrete instance of `OperatorControlAssignmentArrayInput` via:
//
//	OperatorControlAssignmentArray{ OperatorControlAssignmentArgs{...} }
type OperatorControlAssignmentArrayInput interface {
	pulumi.Input

	ToOperatorControlAssignmentArrayOutput() OperatorControlAssignmentArrayOutput
	ToOperatorControlAssignmentArrayOutputWithContext(context.Context) OperatorControlAssignmentArrayOutput
}

type OperatorControlAssignmentArray []OperatorControlAssignmentInput

func (OperatorControlAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OperatorControlAssignment)(nil)).Elem()
}

func (i OperatorControlAssignmentArray) ToOperatorControlAssignmentArrayOutput() OperatorControlAssignmentArrayOutput {
	return i.ToOperatorControlAssignmentArrayOutputWithContext(context.Background())
}

func (i OperatorControlAssignmentArray) ToOperatorControlAssignmentArrayOutputWithContext(ctx context.Context) OperatorControlAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OperatorControlAssignmentArrayOutput)
}

// OperatorControlAssignmentMapInput is an input type that accepts OperatorControlAssignmentMap and OperatorControlAssignmentMapOutput values.
// You can construct a concrete instance of `OperatorControlAssignmentMapInput` via:
//
//	OperatorControlAssignmentMap{ "key": OperatorControlAssignmentArgs{...} }
type OperatorControlAssignmentMapInput interface {
	pulumi.Input

	ToOperatorControlAssignmentMapOutput() OperatorControlAssignmentMapOutput
	ToOperatorControlAssignmentMapOutputWithContext(context.Context) OperatorControlAssignmentMapOutput
}

type OperatorControlAssignmentMap map[string]OperatorControlAssignmentInput

func (OperatorControlAssignmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OperatorControlAssignment)(nil)).Elem()
}

func (i OperatorControlAssignmentMap) ToOperatorControlAssignmentMapOutput() OperatorControlAssignmentMapOutput {
	return i.ToOperatorControlAssignmentMapOutputWithContext(context.Background())
}

func (i OperatorControlAssignmentMap) ToOperatorControlAssignmentMapOutputWithContext(ctx context.Context) OperatorControlAssignmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OperatorControlAssignmentMapOutput)
}

type OperatorControlAssignmentOutput struct{ *pulumi.OutputState }

func (OperatorControlAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OperatorControlAssignment)(nil)).Elem()
}

func (o OperatorControlAssignmentOutput) ToOperatorControlAssignmentOutput() OperatorControlAssignmentOutput {
	return o
}

func (o OperatorControlAssignmentOutput) ToOperatorControlAssignmentOutputWithContext(ctx context.Context) OperatorControlAssignmentOutput {
	return o
}

// The OCID of the user who created this operator control assignment.
func (o OperatorControlAssignmentOutput) AssignerId() pulumi.StringOutput {
	return o.ApplyT(func(v *OperatorControlAssignment) pulumi.StringOutput { return v.AssignerId }).(pulumi.StringOutput)
}

// (Updatable) Comment about the assignment of the operator control to this target resource.
func (o OperatorControlAssignmentOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v *OperatorControlAssignment) pulumi.StringOutput { return v.Comment }).(pulumi.StringOutput)
}

// (Updatable) The OCID of the compartment that contains the operator control assignment.
func (o OperatorControlAssignmentOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *OperatorControlAssignment) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace.
func (o OperatorControlAssignmentOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OperatorControlAssignment) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// description containing reason for releasing of OperatorControl.
func (o OperatorControlAssignmentOutput) DetachmentDescription() pulumi.StringOutput {
	return o.ApplyT(func(v *OperatorControlAssignment) pulumi.StringOutput { return v.DetachmentDescription }).(pulumi.StringOutput)
}

// The code identifying the error occurred during Assignment operation.
func (o OperatorControlAssignmentOutput) ErrorCode() pulumi.IntOutput {
	return o.ApplyT(func(v *OperatorControlAssignment) pulumi.IntOutput { return v.ErrorCode }).(pulumi.IntOutput)
}

// The message describing the error occurred during Assignment operation.
func (o OperatorControlAssignmentOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v *OperatorControlAssignment) pulumi.StringOutput { return v.ErrorMessage }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
func (o OperatorControlAssignmentOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OperatorControlAssignment) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// (Updatable) The boolean if true would autoApprove during maintenance.
func (o OperatorControlAssignmentOutput) IsAutoApproveDuringMaintenance() pulumi.BoolOutput {
	return o.ApplyT(func(v *OperatorControlAssignment) pulumi.BoolOutput { return v.IsAutoApproveDuringMaintenance }).(pulumi.BoolOutput)
}

// Whether the assignment is a default assignment.
func (o OperatorControlAssignmentOutput) IsDefaultAssignment() pulumi.BoolOutput {
	return o.ApplyT(func(v *OperatorControlAssignment) pulumi.BoolOutput { return v.IsDefaultAssignment }).(pulumi.BoolOutput)
}

// (Updatable) If set, then the target resource is always governed by the operator control.
func (o OperatorControlAssignmentOutput) IsEnforcedAlways() pulumi.BoolOutput {
	return o.ApplyT(func(v *OperatorControlAssignment) pulumi.BoolOutput { return v.IsEnforcedAlways }).(pulumi.BoolOutput)
}

// (Updatable) If set, then the hypervisor audit logs will be forwarded to the relevant remote syslog server
func (o OperatorControlAssignmentOutput) IsHypervisorLogForwarded() pulumi.BoolOutput {
	return o.ApplyT(func(v *OperatorControlAssignment) pulumi.BoolOutput { return v.IsHypervisorLogForwarded }).(pulumi.BoolOutput)
}

// (Updatable) If set, then the audit logs will be forwarded to the relevant remote logging server
func (o OperatorControlAssignmentOutput) IsLogForwarded() pulumi.BoolOutput {
	return o.ApplyT(func(v *OperatorControlAssignment) pulumi.BoolOutput { return v.IsLogForwarded }).(pulumi.BoolOutput)
}

// More in detail about the lifeCycleState.
func (o OperatorControlAssignmentOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *OperatorControlAssignment) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Name of the operator control name associated.
func (o OperatorControlAssignmentOutput) OpControlName() pulumi.StringOutput {
	return o.ApplyT(func(v *OperatorControlAssignment) pulumi.StringOutput { return v.OpControlName }).(pulumi.StringOutput)
}

// The OCID of the operator control that is being assigned to a target resource.
func (o OperatorControlAssignmentOutput) OperatorControlId() pulumi.StringOutput {
	return o.ApplyT(func(v *OperatorControlAssignment) pulumi.StringOutput { return v.OperatorControlId }).(pulumi.StringOutput)
}

// (Updatable) The address of the remote syslog server where the audit logs will be forwarded to. Address in host or IP format.
func (o OperatorControlAssignmentOutput) RemoteSyslogServerAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *OperatorControlAssignment) pulumi.StringOutput { return v.RemoteSyslogServerAddress }).(pulumi.StringOutput)
}

// (Updatable) The CA certificate of the remote syslog server. Identity of the remote syslog server will be asserted based on this certificate.
func (o OperatorControlAssignmentOutput) RemoteSyslogServerCaCert() pulumi.StringOutput {
	return o.ApplyT(func(v *OperatorControlAssignment) pulumi.StringOutput { return v.RemoteSyslogServerCaCert }).(pulumi.StringOutput)
}

// (Updatable) The listening port of the remote syslog server. The port range is 0 - 65535. Only TCP supported.
func (o OperatorControlAssignmentOutput) RemoteSyslogServerPort() pulumi.IntOutput {
	return o.ApplyT(func(v *OperatorControlAssignment) pulumi.IntOutput { return v.RemoteSyslogServerPort }).(pulumi.IntOutput)
}

// The OCID of the compartment that contains the target resource.
func (o OperatorControlAssignmentOutput) ResourceCompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *OperatorControlAssignment) pulumi.StringOutput { return v.ResourceCompartmentId }).(pulumi.StringOutput)
}

// The OCID of the target resource being brought under the governance of the operator control.
func (o OperatorControlAssignmentOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *OperatorControlAssignment) pulumi.StringOutput { return v.ResourceId }).(pulumi.StringOutput)
}

// Name of the target resource.
func (o OperatorControlAssignmentOutput) ResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v *OperatorControlAssignment) pulumi.StringOutput { return v.ResourceName }).(pulumi.StringOutput)
}

// Type of the target resource.
func (o OperatorControlAssignmentOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *OperatorControlAssignment) pulumi.StringOutput { return v.ResourceType }).(pulumi.StringOutput)
}

// The current lifcycle state of the OperatorControl.
func (o OperatorControlAssignmentOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *OperatorControlAssignment) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// (Updatable) The time at which the target resource will be brought under the governance of the operator control in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: '2020-05-22T21:10:29.600Z'
func (o OperatorControlAssignmentOutput) TimeAssignmentFrom() pulumi.StringOutput {
	return o.ApplyT(func(v *OperatorControlAssignment) pulumi.StringOutput { return v.TimeAssignmentFrom }).(pulumi.StringOutput)
}

// (Updatable) The time at which the target resource will leave the governance of the operator control in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format.Example: '2020-05-22T21:10:29.600Z'
func (o OperatorControlAssignmentOutput) TimeAssignmentTo() pulumi.StringOutput {
	return o.ApplyT(func(v *OperatorControlAssignment) pulumi.StringOutput { return v.TimeAssignmentTo }).(pulumi.StringOutput)
}

// Time when the operator control assignment is created in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: '2020-05-22T21:10:29.600Z'
func (o OperatorControlAssignmentOutput) TimeOfAssignment() pulumi.StringOutput {
	return o.ApplyT(func(v *OperatorControlAssignment) pulumi.StringOutput { return v.TimeOfAssignment }).(pulumi.StringOutput)
}

// Time on which the operator control assignment was deleted in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format.Example: '2020-05-22T21:10:29.600Z'
func (o OperatorControlAssignmentOutput) TimeOfDeletion() pulumi.StringOutput {
	return o.ApplyT(func(v *OperatorControlAssignment) pulumi.StringOutput { return v.TimeOfDeletion }).(pulumi.StringOutput)
}

// User id who released the operatorControl.
func (o OperatorControlAssignmentOutput) UnassignerId() pulumi.StringOutput {
	return o.ApplyT(func(v *OperatorControlAssignment) pulumi.StringOutput { return v.UnassignerId }).(pulumi.StringOutput)
}

// (Updatable) An optional property when incremented triggers Validate Assignment. Could be set to any integer value.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o OperatorControlAssignmentOutput) ValidateAssignmentTrigger() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OperatorControlAssignment) pulumi.IntPtrOutput { return v.ValidateAssignmentTrigger }).(pulumi.IntPtrOutput)
}

type OperatorControlAssignmentArrayOutput struct{ *pulumi.OutputState }

func (OperatorControlAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OperatorControlAssignment)(nil)).Elem()
}

func (o OperatorControlAssignmentArrayOutput) ToOperatorControlAssignmentArrayOutput() OperatorControlAssignmentArrayOutput {
	return o
}

func (o OperatorControlAssignmentArrayOutput) ToOperatorControlAssignmentArrayOutputWithContext(ctx context.Context) OperatorControlAssignmentArrayOutput {
	return o
}

func (o OperatorControlAssignmentArrayOutput) Index(i pulumi.IntInput) OperatorControlAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OperatorControlAssignment {
		return vs[0].([]*OperatorControlAssignment)[vs[1].(int)]
	}).(OperatorControlAssignmentOutput)
}

type OperatorControlAssignmentMapOutput struct{ *pulumi.OutputState }

func (OperatorControlAssignmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OperatorControlAssignment)(nil)).Elem()
}

func (o OperatorControlAssignmentMapOutput) ToOperatorControlAssignmentMapOutput() OperatorControlAssignmentMapOutput {
	return o
}

func (o OperatorControlAssignmentMapOutput) ToOperatorControlAssignmentMapOutputWithContext(ctx context.Context) OperatorControlAssignmentMapOutput {
	return o
}

func (o OperatorControlAssignmentMapOutput) MapIndex(k pulumi.StringInput) OperatorControlAssignmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OperatorControlAssignment {
		return vs[0].(map[string]*OperatorControlAssignment)[vs[1].(string)]
	}).(OperatorControlAssignmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OperatorControlAssignmentInput)(nil)).Elem(), &OperatorControlAssignment{})
	pulumi.RegisterInputType(reflect.TypeOf((*OperatorControlAssignmentArrayInput)(nil)).Elem(), OperatorControlAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OperatorControlAssignmentMapInput)(nil)).Elem(), OperatorControlAssignmentMap{})
	pulumi.RegisterOutputType(OperatorControlAssignmentOutput{})
	pulumi.RegisterOutputType(OperatorControlAssignmentArrayOutput{})
	pulumi.RegisterOutputType(OperatorControlAssignmentMapOutput{})
}
