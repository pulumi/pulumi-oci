// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opsi

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Awr Hub Source Awrhubsources Management resource in Oracle Cloud Infrastructure Opsi service.
//
// Enables a Awr Hub source database in Operations Insights. This will resume the Awr data flow for the given Awr Hub source if it was stopped earlier.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/opsi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := opsi.NewAwrHubSourceAwrhubsourcesManagement(ctx, "test_awr_hub_source_awrhubsources_management", &opsi.AwrHubSourceAwrhubsourcesManagementArgs{
//				AwrHubSourceId:     pulumi.Any(testAwrHubSource.Id),
//				EnableAwrhubsource: pulumi.Any(enableAwrhubsource),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type AwrHubSourceAwrhubsourcesManagement struct {
	pulumi.CustomResourceState

	// Unique Awr Hub Source identifier
	AwrHubSourceId pulumi.StringOutput `pulumi:"awrHubSourceId"`
	// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnableAwrhubsource pulumi.BoolOutput `pulumi:"enableAwrhubsource"`
}

// NewAwrHubSourceAwrhubsourcesManagement registers a new resource with the given unique name, arguments, and options.
func NewAwrHubSourceAwrhubsourcesManagement(ctx *pulumi.Context,
	name string, args *AwrHubSourceAwrhubsourcesManagementArgs, opts ...pulumi.ResourceOption) (*AwrHubSourceAwrhubsourcesManagement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AwrHubSourceId == nil {
		return nil, errors.New("invalid value for required argument 'AwrHubSourceId'")
	}
	if args.EnableAwrhubsource == nil {
		return nil, errors.New("invalid value for required argument 'EnableAwrhubsource'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AwrHubSourceAwrhubsourcesManagement
	err := ctx.RegisterResource("oci:Opsi/awrHubSourceAwrhubsourcesManagement:AwrHubSourceAwrhubsourcesManagement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAwrHubSourceAwrhubsourcesManagement gets an existing AwrHubSourceAwrhubsourcesManagement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAwrHubSourceAwrhubsourcesManagement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AwrHubSourceAwrhubsourcesManagementState, opts ...pulumi.ResourceOption) (*AwrHubSourceAwrhubsourcesManagement, error) {
	var resource AwrHubSourceAwrhubsourcesManagement
	err := ctx.ReadResource("oci:Opsi/awrHubSourceAwrhubsourcesManagement:AwrHubSourceAwrhubsourcesManagement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AwrHubSourceAwrhubsourcesManagement resources.
type awrHubSourceAwrhubsourcesManagementState struct {
	// Unique Awr Hub Source identifier
	AwrHubSourceId *string `pulumi:"awrHubSourceId"`
	// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnableAwrhubsource *bool `pulumi:"enableAwrhubsource"`
}

type AwrHubSourceAwrhubsourcesManagementState struct {
	// Unique Awr Hub Source identifier
	AwrHubSourceId pulumi.StringPtrInput
	// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnableAwrhubsource pulumi.BoolPtrInput
}

func (AwrHubSourceAwrhubsourcesManagementState) ElementType() reflect.Type {
	return reflect.TypeOf((*awrHubSourceAwrhubsourcesManagementState)(nil)).Elem()
}

type awrHubSourceAwrhubsourcesManagementArgs struct {
	// Unique Awr Hub Source identifier
	AwrHubSourceId string `pulumi:"awrHubSourceId"`
	// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnableAwrhubsource bool `pulumi:"enableAwrhubsource"`
}

// The set of arguments for constructing a AwrHubSourceAwrhubsourcesManagement resource.
type AwrHubSourceAwrhubsourcesManagementArgs struct {
	// Unique Awr Hub Source identifier
	AwrHubSourceId pulumi.StringInput
	// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnableAwrhubsource pulumi.BoolInput
}

func (AwrHubSourceAwrhubsourcesManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*awrHubSourceAwrhubsourcesManagementArgs)(nil)).Elem()
}

type AwrHubSourceAwrhubsourcesManagementInput interface {
	pulumi.Input

	ToAwrHubSourceAwrhubsourcesManagementOutput() AwrHubSourceAwrhubsourcesManagementOutput
	ToAwrHubSourceAwrhubsourcesManagementOutputWithContext(ctx context.Context) AwrHubSourceAwrhubsourcesManagementOutput
}

func (*AwrHubSourceAwrhubsourcesManagement) ElementType() reflect.Type {
	return reflect.TypeOf((**AwrHubSourceAwrhubsourcesManagement)(nil)).Elem()
}

func (i *AwrHubSourceAwrhubsourcesManagement) ToAwrHubSourceAwrhubsourcesManagementOutput() AwrHubSourceAwrhubsourcesManagementOutput {
	return i.ToAwrHubSourceAwrhubsourcesManagementOutputWithContext(context.Background())
}

func (i *AwrHubSourceAwrhubsourcesManagement) ToAwrHubSourceAwrhubsourcesManagementOutputWithContext(ctx context.Context) AwrHubSourceAwrhubsourcesManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwrHubSourceAwrhubsourcesManagementOutput)
}

// AwrHubSourceAwrhubsourcesManagementArrayInput is an input type that accepts AwrHubSourceAwrhubsourcesManagementArray and AwrHubSourceAwrhubsourcesManagementArrayOutput values.
// You can construct a concrete instance of `AwrHubSourceAwrhubsourcesManagementArrayInput` via:
//
//	AwrHubSourceAwrhubsourcesManagementArray{ AwrHubSourceAwrhubsourcesManagementArgs{...} }
type AwrHubSourceAwrhubsourcesManagementArrayInput interface {
	pulumi.Input

	ToAwrHubSourceAwrhubsourcesManagementArrayOutput() AwrHubSourceAwrhubsourcesManagementArrayOutput
	ToAwrHubSourceAwrhubsourcesManagementArrayOutputWithContext(context.Context) AwrHubSourceAwrhubsourcesManagementArrayOutput
}

type AwrHubSourceAwrhubsourcesManagementArray []AwrHubSourceAwrhubsourcesManagementInput

func (AwrHubSourceAwrhubsourcesManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwrHubSourceAwrhubsourcesManagement)(nil)).Elem()
}

func (i AwrHubSourceAwrhubsourcesManagementArray) ToAwrHubSourceAwrhubsourcesManagementArrayOutput() AwrHubSourceAwrhubsourcesManagementArrayOutput {
	return i.ToAwrHubSourceAwrhubsourcesManagementArrayOutputWithContext(context.Background())
}

func (i AwrHubSourceAwrhubsourcesManagementArray) ToAwrHubSourceAwrhubsourcesManagementArrayOutputWithContext(ctx context.Context) AwrHubSourceAwrhubsourcesManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwrHubSourceAwrhubsourcesManagementArrayOutput)
}

// AwrHubSourceAwrhubsourcesManagementMapInput is an input type that accepts AwrHubSourceAwrhubsourcesManagementMap and AwrHubSourceAwrhubsourcesManagementMapOutput values.
// You can construct a concrete instance of `AwrHubSourceAwrhubsourcesManagementMapInput` via:
//
//	AwrHubSourceAwrhubsourcesManagementMap{ "key": AwrHubSourceAwrhubsourcesManagementArgs{...} }
type AwrHubSourceAwrhubsourcesManagementMapInput interface {
	pulumi.Input

	ToAwrHubSourceAwrhubsourcesManagementMapOutput() AwrHubSourceAwrhubsourcesManagementMapOutput
	ToAwrHubSourceAwrhubsourcesManagementMapOutputWithContext(context.Context) AwrHubSourceAwrhubsourcesManagementMapOutput
}

type AwrHubSourceAwrhubsourcesManagementMap map[string]AwrHubSourceAwrhubsourcesManagementInput

func (AwrHubSourceAwrhubsourcesManagementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwrHubSourceAwrhubsourcesManagement)(nil)).Elem()
}

func (i AwrHubSourceAwrhubsourcesManagementMap) ToAwrHubSourceAwrhubsourcesManagementMapOutput() AwrHubSourceAwrhubsourcesManagementMapOutput {
	return i.ToAwrHubSourceAwrhubsourcesManagementMapOutputWithContext(context.Background())
}

func (i AwrHubSourceAwrhubsourcesManagementMap) ToAwrHubSourceAwrhubsourcesManagementMapOutputWithContext(ctx context.Context) AwrHubSourceAwrhubsourcesManagementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwrHubSourceAwrhubsourcesManagementMapOutput)
}

type AwrHubSourceAwrhubsourcesManagementOutput struct{ *pulumi.OutputState }

func (AwrHubSourceAwrhubsourcesManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwrHubSourceAwrhubsourcesManagement)(nil)).Elem()
}

func (o AwrHubSourceAwrhubsourcesManagementOutput) ToAwrHubSourceAwrhubsourcesManagementOutput() AwrHubSourceAwrhubsourcesManagementOutput {
	return o
}

func (o AwrHubSourceAwrhubsourcesManagementOutput) ToAwrHubSourceAwrhubsourcesManagementOutputWithContext(ctx context.Context) AwrHubSourceAwrhubsourcesManagementOutput {
	return o
}

// Unique Awr Hub Source identifier
func (o AwrHubSourceAwrhubsourcesManagementOutput) AwrHubSourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwrHubSourceAwrhubsourcesManagement) pulumi.StringOutput { return v.AwrHubSourceId }).(pulumi.StringOutput)
}

// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o AwrHubSourceAwrhubsourcesManagementOutput) EnableAwrhubsource() pulumi.BoolOutput {
	return o.ApplyT(func(v *AwrHubSourceAwrhubsourcesManagement) pulumi.BoolOutput { return v.EnableAwrhubsource }).(pulumi.BoolOutput)
}

type AwrHubSourceAwrhubsourcesManagementArrayOutput struct{ *pulumi.OutputState }

func (AwrHubSourceAwrhubsourcesManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwrHubSourceAwrhubsourcesManagement)(nil)).Elem()
}

func (o AwrHubSourceAwrhubsourcesManagementArrayOutput) ToAwrHubSourceAwrhubsourcesManagementArrayOutput() AwrHubSourceAwrhubsourcesManagementArrayOutput {
	return o
}

func (o AwrHubSourceAwrhubsourcesManagementArrayOutput) ToAwrHubSourceAwrhubsourcesManagementArrayOutputWithContext(ctx context.Context) AwrHubSourceAwrhubsourcesManagementArrayOutput {
	return o
}

func (o AwrHubSourceAwrhubsourcesManagementArrayOutput) Index(i pulumi.IntInput) AwrHubSourceAwrhubsourcesManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AwrHubSourceAwrhubsourcesManagement {
		return vs[0].([]*AwrHubSourceAwrhubsourcesManagement)[vs[1].(int)]
	}).(AwrHubSourceAwrhubsourcesManagementOutput)
}

type AwrHubSourceAwrhubsourcesManagementMapOutput struct{ *pulumi.OutputState }

func (AwrHubSourceAwrhubsourcesManagementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwrHubSourceAwrhubsourcesManagement)(nil)).Elem()
}

func (o AwrHubSourceAwrhubsourcesManagementMapOutput) ToAwrHubSourceAwrhubsourcesManagementMapOutput() AwrHubSourceAwrhubsourcesManagementMapOutput {
	return o
}

func (o AwrHubSourceAwrhubsourcesManagementMapOutput) ToAwrHubSourceAwrhubsourcesManagementMapOutputWithContext(ctx context.Context) AwrHubSourceAwrhubsourcesManagementMapOutput {
	return o
}

func (o AwrHubSourceAwrhubsourcesManagementMapOutput) MapIndex(k pulumi.StringInput) AwrHubSourceAwrhubsourcesManagementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AwrHubSourceAwrhubsourcesManagement {
		return vs[0].(map[string]*AwrHubSourceAwrhubsourcesManagement)[vs[1].(string)]
	}).(AwrHubSourceAwrhubsourcesManagementOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwrHubSourceAwrhubsourcesManagementInput)(nil)).Elem(), &AwrHubSourceAwrhubsourcesManagement{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwrHubSourceAwrhubsourcesManagementArrayInput)(nil)).Elem(), AwrHubSourceAwrhubsourcesManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwrHubSourceAwrhubsourcesManagementMapInput)(nil)).Elem(), AwrHubSourceAwrhubsourcesManagementMap{})
	pulumi.RegisterOutputType(AwrHubSourceAwrhubsourcesManagementOutput{})
	pulumi.RegisterOutputType(AwrHubSourceAwrhubsourcesManagementArrayOutput{})
	pulumi.RegisterOutputType(AwrHubSourceAwrhubsourcesManagementMapOutput{})
}
