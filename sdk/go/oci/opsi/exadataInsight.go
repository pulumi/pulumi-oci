// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opsi

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Exadata Insight resource in Oracle Cloud Infrastructure Opsi service.
//
// Create an Exadata insight resource for an Exadata system in Operations Insights. The Exadata system will be enabled in Operations Insights. Exadata-related metric collection and analysis will be started.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/opsi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := opsi.NewExadataInsight(ctx, "test_exadata_insight", &opsi.ExadataInsightArgs{
//				CompartmentId:                     pulumi.Any(compartmentId),
//				EnterpriseManagerBridgeId:         pulumi.Any(testEnterpriseManagerBridge.Id),
//				EnterpriseManagerEntityIdentifier: pulumi.Any(exadataInsightEnterpriseManagerEntityIdentifier),
//				EnterpriseManagerIdentifier:       pulumi.Any(exadataInsightEnterpriseManagerIdentifier),
//				EntitySource:                      pulumi.Any(exadataInsightEntitySource),
//				DefinedTags: pulumi.StringMap{
//					"foo-namespace.bar-key": pulumi.String("value"),
//				},
//				FreeformTags: pulumi.StringMap{
//					"bar-key": pulumi.String("value"),
//				},
//				IsAutoSyncEnabled: pulumi.Any(exadataInsightIsAutoSyncEnabled),
//				MemberVmClusterDetails: opsi.ExadataInsightMemberVmClusterDetailArray{
//					&opsi.ExadataInsightMemberVmClusterDetailArgs{
//						CompartmentId:        pulumi.Any(compartmentId),
//						DbmPrivateEndpointId: pulumi.Any(testPrivateEndpoint.Id),
//						MemberDatabaseDetails: opsi.ExadataInsightMemberVmClusterDetailMemberDatabaseDetailArray{
//							&opsi.ExadataInsightMemberVmClusterDetailMemberDatabaseDetailArgs{
//								CompartmentId: pulumi.Any(compartmentId),
//								ConnectionCredentialDetails: &opsi.ExadataInsightMemberVmClusterDetailMemberDatabaseDetailConnectionCredentialDetailsArgs{
//									CredentialType:       pulumi.Any(exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsConnectionCredentialDetailsCredentialType),
//									CredentialSourceName: pulumi.Any(exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsConnectionCredentialDetailsCredentialSourceName),
//									PasswordSecretId:     pulumi.Any(testSecret.Id),
//									Role:                 pulumi.Any(exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsConnectionCredentialDetailsRole),
//									UserName:             pulumi.Any(testUser.Name),
//									WalletSecretId:       pulumi.Any(testSecret.Id),
//								},
//								ConnectionDetails: &opsi.ExadataInsightMemberVmClusterDetailMemberDatabaseDetailConnectionDetailsArgs{
//									HostName: pulumi.Any(exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsConnectionDetailsHostName),
//									Hosts: opsi.ExadataInsightMemberVmClusterDetailMemberDatabaseDetailConnectionDetailsHostArray{
//										&opsi.ExadataInsightMemberVmClusterDetailMemberDatabaseDetailConnectionDetailsHostArgs{
//											HostIp: pulumi.Any(exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsConnectionDetailsHostsHostIp),
//											Port:   pulumi.Any(exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsConnectionDetailsHostsPort),
//										},
//									},
//									Port:        pulumi.Any(exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsConnectionDetailsPort),
//									Protocol:    pulumi.Any(exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsConnectionDetailsProtocol),
//									ServiceName: pulumi.Any(testService.Name),
//								},
//								CredentialDetails: &opsi.ExadataInsightMemberVmClusterDetailMemberDatabaseDetailCredentialDetailsArgs{
//									CredentialType:       pulumi.Any(exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsCredentialDetailsCredentialType),
//									CredentialSourceName: pulumi.Any(exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsCredentialDetailsCredentialSourceName),
//									PasswordSecretId:     pulumi.Any(testSecret.Id),
//									Role:                 pulumi.Any(exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsCredentialDetailsRole),
//									UserName:             pulumi.Any(testUser.Name),
//									WalletSecretId:       pulumi.Any(testSecret.Id),
//								},
//								DatabaseId:            pulumi.Any(testDatabase.Id),
//								DatabaseResourceType:  pulumi.Any(exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsDatabaseResourceType),
//								DbmPrivateEndpointId:  pulumi.Any(testPrivateEndpoint.Id),
//								DefinedTags:           pulumi.Any(exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsDefinedTags),
//								DeploymentType:        pulumi.Any(exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsDeploymentType),
//								EntitySource:          pulumi.Any(exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsEntitySource),
//								FreeformTags:          pulumi.Any(exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsFreeformTags),
//								ManagementAgentId:     pulumi.Any(testManagementAgent.Id),
//								OpsiPrivateEndpointId: pulumi.Any(testPrivateEndpoint.Id),
//								ServiceName:           pulumi.Any(testService.Name),
//								SystemTags:            pulumi.Any(exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsSystemTags),
//							},
//						},
//						OpsiPrivateEndpointId: pulumi.Any(testPrivateEndpoint.Id),
//						VmClusterType:         pulumi.Any(exadataInsightMemberVmClusterDetailsVmClusterType),
//						VmclusterId:           pulumi.Any(testVmcluster.Id),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ExadataInsights can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Opsi/exadataInsight:ExadataInsight test_exadata_insight "id"
// ```
type ExadataInsight struct {
	pulumi.CustomResourceState

	// (Updatable) Compartment Identifier of Exadata insight
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// OPSI Enterprise Manager Bridge OCID
	EnterpriseManagerBridgeId pulumi.StringOutput `pulumi:"enterpriseManagerBridgeId"`
	// Enterprise Manager Entity Display Name
	EnterpriseManagerEntityDisplayName pulumi.StringOutput `pulumi:"enterpriseManagerEntityDisplayName"`
	// Enterprise Manager Entity Unique Identifier
	EnterpriseManagerEntityIdentifier pulumi.StringOutput `pulumi:"enterpriseManagerEntityIdentifier"`
	// Enterprise Manager Entity Name
	EnterpriseManagerEntityName pulumi.StringOutput `pulumi:"enterpriseManagerEntityName"`
	// Enterprise Manager Entity Type
	EnterpriseManagerEntityType pulumi.StringOutput `pulumi:"enterpriseManagerEntityType"`
	// Enterprise Manager Unique Identifier
	EnterpriseManagerIdentifier pulumi.StringOutput `pulumi:"enterpriseManagerIdentifier"`
	// (Updatable) Source of the Exadata system.
	EntitySource pulumi.StringOutput `pulumi:"entitySource"`
	// The user-friendly name for the Exadata system. The name does not have to be unique.
	ExadataDisplayName pulumi.StringOutput `pulumi:"exadataDisplayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata Infrastructure.
	ExadataInfraId           pulumi.StringOutput `pulumi:"exadataInfraId"`
	ExadataInfraResourceType pulumi.StringOutput `pulumi:"exadataInfraResourceType"`
	// The Exadata system name. If the Exadata systems managed by Enterprise Manager, the name is unique amongst the Exadata systems managed by the same Enterprise Manager.
	ExadataName pulumi.StringOutput `pulumi:"exadataName"`
	// Exadata rack type.
	ExadataRackType pulumi.StringOutput `pulumi:"exadataRackType"`
	ExadataShape    pulumi.StringOutput `pulumi:"exadataShape"`
	// Operations Insights internal representation of the the Exadata system type.
	ExadataType pulumi.StringOutput `pulumi:"exadataType"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// (Updatable) Set to true to enable automatic enablement and disablement of related targets from Enterprise Manager. New resources (e.g. Database Insights) will be placed in the same compartment as the related Exadata Insight.
	IsAutoSyncEnabled pulumi.BoolOutput `pulumi:"isAutoSyncEnabled"`
	// true if virtualization is used in the Exadata system
	IsVirtualizedExadata pulumi.BoolOutput `pulumi:"isVirtualizedExadata"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails       pulumi.StringOutput                            `pulumi:"lifecycleDetails"`
	MemberVmClusterDetails ExadataInsightMemberVmClusterDetailArrayOutput `pulumi:"memberVmClusterDetails"`
	// The current state of the Exadata insight.
	State pulumi.StringOutput `pulumi:"state"`
	// (Updatable) Status of the resource. Example: "ENABLED", "DISABLED". Resource can be either enabled or disabled by updating the value of status field to either "ENABLED" or "DISABLED"
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Status pulumi.StringOutput `pulumi:"status"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// The time the the Exadata insight was first enabled. An RFC3339 formatted datetime string
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time the Exadata insight was updated. An RFC3339 formatted datetime string
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewExadataInsight registers a new resource with the given unique name, arguments, and options.
func NewExadataInsight(ctx *pulumi.Context,
	name string, args *ExadataInsightArgs, opts ...pulumi.ResourceOption) (*ExadataInsight, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.EntitySource == nil {
		return nil, errors.New("invalid value for required argument 'EntitySource'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ExadataInsight
	err := ctx.RegisterResource("oci:Opsi/exadataInsight:ExadataInsight", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExadataInsight gets an existing ExadataInsight resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExadataInsight(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExadataInsightState, opts ...pulumi.ResourceOption) (*ExadataInsight, error) {
	var resource ExadataInsight
	err := ctx.ReadResource("oci:Opsi/exadataInsight:ExadataInsight", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExadataInsight resources.
type exadataInsightState struct {
	// (Updatable) Compartment Identifier of Exadata insight
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// OPSI Enterprise Manager Bridge OCID
	EnterpriseManagerBridgeId *string `pulumi:"enterpriseManagerBridgeId"`
	// Enterprise Manager Entity Display Name
	EnterpriseManagerEntityDisplayName *string `pulumi:"enterpriseManagerEntityDisplayName"`
	// Enterprise Manager Entity Unique Identifier
	EnterpriseManagerEntityIdentifier *string `pulumi:"enterpriseManagerEntityIdentifier"`
	// Enterprise Manager Entity Name
	EnterpriseManagerEntityName *string `pulumi:"enterpriseManagerEntityName"`
	// Enterprise Manager Entity Type
	EnterpriseManagerEntityType *string `pulumi:"enterpriseManagerEntityType"`
	// Enterprise Manager Unique Identifier
	EnterpriseManagerIdentifier *string `pulumi:"enterpriseManagerIdentifier"`
	// (Updatable) Source of the Exadata system.
	EntitySource *string `pulumi:"entitySource"`
	// The user-friendly name for the Exadata system. The name does not have to be unique.
	ExadataDisplayName *string `pulumi:"exadataDisplayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata Infrastructure.
	ExadataInfraId           *string `pulumi:"exadataInfraId"`
	ExadataInfraResourceType *string `pulumi:"exadataInfraResourceType"`
	// The Exadata system name. If the Exadata systems managed by Enterprise Manager, the name is unique amongst the Exadata systems managed by the same Enterprise Manager.
	ExadataName *string `pulumi:"exadataName"`
	// Exadata rack type.
	ExadataRackType *string `pulumi:"exadataRackType"`
	ExadataShape    *string `pulumi:"exadataShape"`
	// Operations Insights internal representation of the the Exadata system type.
	ExadataType *string `pulumi:"exadataType"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// (Updatable) Set to true to enable automatic enablement and disablement of related targets from Enterprise Manager. New resources (e.g. Database Insights) will be placed in the same compartment as the related Exadata Insight.
	IsAutoSyncEnabled *bool `pulumi:"isAutoSyncEnabled"`
	// true if virtualization is used in the Exadata system
	IsVirtualizedExadata *bool `pulumi:"isVirtualizedExadata"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails       *string                               `pulumi:"lifecycleDetails"`
	MemberVmClusterDetails []ExadataInsightMemberVmClusterDetail `pulumi:"memberVmClusterDetails"`
	// The current state of the Exadata insight.
	State *string `pulumi:"state"`
	// (Updatable) Status of the resource. Example: "ENABLED", "DISABLED". Resource can be either enabled or disabled by updating the value of status field to either "ENABLED" or "DISABLED"
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Status *string `pulumi:"status"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time the the Exadata insight was first enabled. An RFC3339 formatted datetime string
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the Exadata insight was updated. An RFC3339 formatted datetime string
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type ExadataInsightState struct {
	// (Updatable) Compartment Identifier of Exadata insight
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// OPSI Enterprise Manager Bridge OCID
	EnterpriseManagerBridgeId pulumi.StringPtrInput
	// Enterprise Manager Entity Display Name
	EnterpriseManagerEntityDisplayName pulumi.StringPtrInput
	// Enterprise Manager Entity Unique Identifier
	EnterpriseManagerEntityIdentifier pulumi.StringPtrInput
	// Enterprise Manager Entity Name
	EnterpriseManagerEntityName pulumi.StringPtrInput
	// Enterprise Manager Entity Type
	EnterpriseManagerEntityType pulumi.StringPtrInput
	// Enterprise Manager Unique Identifier
	EnterpriseManagerIdentifier pulumi.StringPtrInput
	// (Updatable) Source of the Exadata system.
	EntitySource pulumi.StringPtrInput
	// The user-friendly name for the Exadata system. The name does not have to be unique.
	ExadataDisplayName pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata Infrastructure.
	ExadataInfraId           pulumi.StringPtrInput
	ExadataInfraResourceType pulumi.StringPtrInput
	// The Exadata system name. If the Exadata systems managed by Enterprise Manager, the name is unique amongst the Exadata systems managed by the same Enterprise Manager.
	ExadataName pulumi.StringPtrInput
	// Exadata rack type.
	ExadataRackType pulumi.StringPtrInput
	ExadataShape    pulumi.StringPtrInput
	// Operations Insights internal representation of the the Exadata system type.
	ExadataType pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// (Updatable) Set to true to enable automatic enablement and disablement of related targets from Enterprise Manager. New resources (e.g. Database Insights) will be placed in the same compartment as the related Exadata Insight.
	IsAutoSyncEnabled pulumi.BoolPtrInput
	// true if virtualization is used in the Exadata system
	IsVirtualizedExadata pulumi.BoolPtrInput
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails       pulumi.StringPtrInput
	MemberVmClusterDetails ExadataInsightMemberVmClusterDetailArrayInput
	// The current state of the Exadata insight.
	State pulumi.StringPtrInput
	// (Updatable) Status of the resource. Example: "ENABLED", "DISABLED". Resource can be either enabled or disabled by updating the value of status field to either "ENABLED" or "DISABLED"
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Status pulumi.StringPtrInput
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput
	// The time the the Exadata insight was first enabled. An RFC3339 formatted datetime string
	TimeCreated pulumi.StringPtrInput
	// The time the Exadata insight was updated. An RFC3339 formatted datetime string
	TimeUpdated pulumi.StringPtrInput
}

func (ExadataInsightState) ElementType() reflect.Type {
	return reflect.TypeOf((*exadataInsightState)(nil)).Elem()
}

type exadataInsightArgs struct {
	// (Updatable) Compartment Identifier of Exadata insight
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// OPSI Enterprise Manager Bridge OCID
	EnterpriseManagerBridgeId *string `pulumi:"enterpriseManagerBridgeId"`
	// Enterprise Manager Entity Unique Identifier
	EnterpriseManagerEntityIdentifier *string `pulumi:"enterpriseManagerEntityIdentifier"`
	// Enterprise Manager Unique Identifier
	EnterpriseManagerIdentifier *string `pulumi:"enterpriseManagerIdentifier"`
	// (Updatable) Source of the Exadata system.
	EntitySource string `pulumi:"entitySource"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata Infrastructure.
	ExadataInfraId *string `pulumi:"exadataInfraId"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// (Updatable) Set to true to enable automatic enablement and disablement of related targets from Enterprise Manager. New resources (e.g. Database Insights) will be placed in the same compartment as the related Exadata Insight.
	IsAutoSyncEnabled      *bool                                 `pulumi:"isAutoSyncEnabled"`
	MemberVmClusterDetails []ExadataInsightMemberVmClusterDetail `pulumi:"memberVmClusterDetails"`
	// (Updatable) Status of the resource. Example: "ENABLED", "DISABLED". Resource can be either enabled or disabled by updating the value of status field to either "ENABLED" or "DISABLED"
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Status *string `pulumi:"status"`
}

// The set of arguments for constructing a ExadataInsight resource.
type ExadataInsightArgs struct {
	// (Updatable) Compartment Identifier of Exadata insight
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// OPSI Enterprise Manager Bridge OCID
	EnterpriseManagerBridgeId pulumi.StringPtrInput
	// Enterprise Manager Entity Unique Identifier
	EnterpriseManagerEntityIdentifier pulumi.StringPtrInput
	// Enterprise Manager Unique Identifier
	EnterpriseManagerIdentifier pulumi.StringPtrInput
	// (Updatable) Source of the Exadata system.
	EntitySource pulumi.StringInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata Infrastructure.
	ExadataInfraId pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// (Updatable) Set to true to enable automatic enablement and disablement of related targets from Enterprise Manager. New resources (e.g. Database Insights) will be placed in the same compartment as the related Exadata Insight.
	IsAutoSyncEnabled      pulumi.BoolPtrInput
	MemberVmClusterDetails ExadataInsightMemberVmClusterDetailArrayInput
	// (Updatable) Status of the resource. Example: "ENABLED", "DISABLED". Resource can be either enabled or disabled by updating the value of status field to either "ENABLED" or "DISABLED"
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Status pulumi.StringPtrInput
}

func (ExadataInsightArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*exadataInsightArgs)(nil)).Elem()
}

type ExadataInsightInput interface {
	pulumi.Input

	ToExadataInsightOutput() ExadataInsightOutput
	ToExadataInsightOutputWithContext(ctx context.Context) ExadataInsightOutput
}

func (*ExadataInsight) ElementType() reflect.Type {
	return reflect.TypeOf((**ExadataInsight)(nil)).Elem()
}

func (i *ExadataInsight) ToExadataInsightOutput() ExadataInsightOutput {
	return i.ToExadataInsightOutputWithContext(context.Background())
}

func (i *ExadataInsight) ToExadataInsightOutputWithContext(ctx context.Context) ExadataInsightOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExadataInsightOutput)
}

// ExadataInsightArrayInput is an input type that accepts ExadataInsightArray and ExadataInsightArrayOutput values.
// You can construct a concrete instance of `ExadataInsightArrayInput` via:
//
//	ExadataInsightArray{ ExadataInsightArgs{...} }
type ExadataInsightArrayInput interface {
	pulumi.Input

	ToExadataInsightArrayOutput() ExadataInsightArrayOutput
	ToExadataInsightArrayOutputWithContext(context.Context) ExadataInsightArrayOutput
}

type ExadataInsightArray []ExadataInsightInput

func (ExadataInsightArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExadataInsight)(nil)).Elem()
}

func (i ExadataInsightArray) ToExadataInsightArrayOutput() ExadataInsightArrayOutput {
	return i.ToExadataInsightArrayOutputWithContext(context.Background())
}

func (i ExadataInsightArray) ToExadataInsightArrayOutputWithContext(ctx context.Context) ExadataInsightArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExadataInsightArrayOutput)
}

// ExadataInsightMapInput is an input type that accepts ExadataInsightMap and ExadataInsightMapOutput values.
// You can construct a concrete instance of `ExadataInsightMapInput` via:
//
//	ExadataInsightMap{ "key": ExadataInsightArgs{...} }
type ExadataInsightMapInput interface {
	pulumi.Input

	ToExadataInsightMapOutput() ExadataInsightMapOutput
	ToExadataInsightMapOutputWithContext(context.Context) ExadataInsightMapOutput
}

type ExadataInsightMap map[string]ExadataInsightInput

func (ExadataInsightMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExadataInsight)(nil)).Elem()
}

func (i ExadataInsightMap) ToExadataInsightMapOutput() ExadataInsightMapOutput {
	return i.ToExadataInsightMapOutputWithContext(context.Background())
}

func (i ExadataInsightMap) ToExadataInsightMapOutputWithContext(ctx context.Context) ExadataInsightMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExadataInsightMapOutput)
}

type ExadataInsightOutput struct{ *pulumi.OutputState }

func (ExadataInsightOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExadataInsight)(nil)).Elem()
}

func (o ExadataInsightOutput) ToExadataInsightOutput() ExadataInsightOutput {
	return o
}

func (o ExadataInsightOutput) ToExadataInsightOutputWithContext(ctx context.Context) ExadataInsightOutput {
	return o
}

// (Updatable) Compartment Identifier of Exadata insight
func (o ExadataInsightOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInsight) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o ExadataInsightOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ExadataInsight) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// OPSI Enterprise Manager Bridge OCID
func (o ExadataInsightOutput) EnterpriseManagerBridgeId() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInsight) pulumi.StringOutput { return v.EnterpriseManagerBridgeId }).(pulumi.StringOutput)
}

// Enterprise Manager Entity Display Name
func (o ExadataInsightOutput) EnterpriseManagerEntityDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInsight) pulumi.StringOutput { return v.EnterpriseManagerEntityDisplayName }).(pulumi.StringOutput)
}

// Enterprise Manager Entity Unique Identifier
func (o ExadataInsightOutput) EnterpriseManagerEntityIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInsight) pulumi.StringOutput { return v.EnterpriseManagerEntityIdentifier }).(pulumi.StringOutput)
}

// Enterprise Manager Entity Name
func (o ExadataInsightOutput) EnterpriseManagerEntityName() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInsight) pulumi.StringOutput { return v.EnterpriseManagerEntityName }).(pulumi.StringOutput)
}

// Enterprise Manager Entity Type
func (o ExadataInsightOutput) EnterpriseManagerEntityType() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInsight) pulumi.StringOutput { return v.EnterpriseManagerEntityType }).(pulumi.StringOutput)
}

// Enterprise Manager Unique Identifier
func (o ExadataInsightOutput) EnterpriseManagerIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInsight) pulumi.StringOutput { return v.EnterpriseManagerIdentifier }).(pulumi.StringOutput)
}

// (Updatable) Source of the Exadata system.
func (o ExadataInsightOutput) EntitySource() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInsight) pulumi.StringOutput { return v.EntitySource }).(pulumi.StringOutput)
}

// The user-friendly name for the Exadata system. The name does not have to be unique.
func (o ExadataInsightOutput) ExadataDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInsight) pulumi.StringOutput { return v.ExadataDisplayName }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata Infrastructure.
func (o ExadataInsightOutput) ExadataInfraId() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInsight) pulumi.StringOutput { return v.ExadataInfraId }).(pulumi.StringOutput)
}

func (o ExadataInsightOutput) ExadataInfraResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInsight) pulumi.StringOutput { return v.ExadataInfraResourceType }).(pulumi.StringOutput)
}

// The Exadata system name. If the Exadata systems managed by Enterprise Manager, the name is unique amongst the Exadata systems managed by the same Enterprise Manager.
func (o ExadataInsightOutput) ExadataName() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInsight) pulumi.StringOutput { return v.ExadataName }).(pulumi.StringOutput)
}

// Exadata rack type.
func (o ExadataInsightOutput) ExadataRackType() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInsight) pulumi.StringOutput { return v.ExadataRackType }).(pulumi.StringOutput)
}

func (o ExadataInsightOutput) ExadataShape() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInsight) pulumi.StringOutput { return v.ExadataShape }).(pulumi.StringOutput)
}

// Operations Insights internal representation of the the Exadata system type.
func (o ExadataInsightOutput) ExadataType() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInsight) pulumi.StringOutput { return v.ExadataType }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o ExadataInsightOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ExadataInsight) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// (Updatable) Set to true to enable automatic enablement and disablement of related targets from Enterprise Manager. New resources (e.g. Database Insights) will be placed in the same compartment as the related Exadata Insight.
func (o ExadataInsightOutput) IsAutoSyncEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *ExadataInsight) pulumi.BoolOutput { return v.IsAutoSyncEnabled }).(pulumi.BoolOutput)
}

// true if virtualization is used in the Exadata system
func (o ExadataInsightOutput) IsVirtualizedExadata() pulumi.BoolOutput {
	return o.ApplyT(func(v *ExadataInsight) pulumi.BoolOutput { return v.IsVirtualizedExadata }).(pulumi.BoolOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o ExadataInsightOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInsight) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

func (o ExadataInsightOutput) MemberVmClusterDetails() ExadataInsightMemberVmClusterDetailArrayOutput {
	return o.ApplyT(func(v *ExadataInsight) ExadataInsightMemberVmClusterDetailArrayOutput {
		return v.MemberVmClusterDetails
	}).(ExadataInsightMemberVmClusterDetailArrayOutput)
}

// The current state of the Exadata insight.
func (o ExadataInsightOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInsight) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// (Updatable) Status of the resource. Example: "ENABLED", "DISABLED". Resource can be either enabled or disabled by updating the value of status field to either "ENABLED" or "DISABLED"
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ExadataInsightOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInsight) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o ExadataInsightOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ExadataInsight) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The time the the Exadata insight was first enabled. An RFC3339 formatted datetime string
func (o ExadataInsightOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInsight) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the Exadata insight was updated. An RFC3339 formatted datetime string
func (o ExadataInsightOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInsight) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type ExadataInsightArrayOutput struct{ *pulumi.OutputState }

func (ExadataInsightArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExadataInsight)(nil)).Elem()
}

func (o ExadataInsightArrayOutput) ToExadataInsightArrayOutput() ExadataInsightArrayOutput {
	return o
}

func (o ExadataInsightArrayOutput) ToExadataInsightArrayOutputWithContext(ctx context.Context) ExadataInsightArrayOutput {
	return o
}

func (o ExadataInsightArrayOutput) Index(i pulumi.IntInput) ExadataInsightOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ExadataInsight {
		return vs[0].([]*ExadataInsight)[vs[1].(int)]
	}).(ExadataInsightOutput)
}

type ExadataInsightMapOutput struct{ *pulumi.OutputState }

func (ExadataInsightMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExadataInsight)(nil)).Elem()
}

func (o ExadataInsightMapOutput) ToExadataInsightMapOutput() ExadataInsightMapOutput {
	return o
}

func (o ExadataInsightMapOutput) ToExadataInsightMapOutputWithContext(ctx context.Context) ExadataInsightMapOutput {
	return o
}

func (o ExadataInsightMapOutput) MapIndex(k pulumi.StringInput) ExadataInsightOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ExadataInsight {
		return vs[0].(map[string]*ExadataInsight)[vs[1].(string)]
	}).(ExadataInsightOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExadataInsightInput)(nil)).Elem(), &ExadataInsight{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExadataInsightArrayInput)(nil)).Elem(), ExadataInsightArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExadataInsightMapInput)(nil)).Elem(), ExadataInsightMap{})
	pulumi.RegisterOutputType(ExadataInsightOutput{})
	pulumi.RegisterOutputType(ExadataInsightArrayOutput{})
	pulumi.RegisterOutputType(ExadataInsightMapOutput{})
}
