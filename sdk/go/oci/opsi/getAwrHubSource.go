// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opsi

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Awr Hub Source resource in Oracle Cloud Infrastructure Opsi service.
//
// Gets the Awr Hub source object.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Opsi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Opsi.GetAwrHubSource(ctx, &opsi.GetAwrHubSourceArgs{
//				AwrHubSourceId: oci_opsi_awr_hub_source.Test_awr_hub_source.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func LookupAwrHubSource(ctx *pulumi.Context, args *LookupAwrHubSourceArgs, opts ...pulumi.InvokeOption) (*LookupAwrHubSourceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAwrHubSourceResult
	err := ctx.Invoke("oci:Opsi/getAwrHubSource:getAwrHubSource", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAwrHubSource.
type LookupAwrHubSourceArgs struct {
	// Unique Awr Hub Source identifier
	AwrHubSourceId string `pulumi:"awrHubSourceId"`
}

// A collection of values returned by getAwrHubSource.
type LookupAwrHubSourceResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database id.
	AssociatedOpsiId string `pulumi:"associatedOpsiId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database id.
	AssociatedResourceId string `pulumi:"associatedResourceId"`
	// AWR Hub OCID
	AwrHubId string `pulumi:"awrHubId"`
	// The shorted string of the Awr Hub source database identifier.
	AwrHubOpsiSourceId string `pulumi:"awrHubOpsiSourceId"`
	AwrHubSourceId     string `pulumi:"awrHubSourceId"`
	// DatabaseId of the Source database for which AWR Data will be uploaded to AWR Hub.
	AwrSourceDatabaseId string `pulumi:"awrSourceDatabaseId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Number of hours since last AWR snapshots import happened from the Source database.
	HoursSinceLastImport float64 `pulumi:"hoursSinceLastImport"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Awr Hub source database.
	Id string `pulumi:"id"`
	// This is `true` if the source databse is registered with a Awr Hub, otherwise `false`
	IsRegisteredWithAwrHub bool `pulumi:"isRegisteredWithAwrHub"`
	// The maximum snapshot identifier of the source database for which AWR data is uploaded to AWR Hub.
	MaxSnapshotIdentifier float64 `pulumi:"maxSnapshotIdentifier"`
	// The minimum snapshot identifier of the source database for which AWR data is uploaded to AWR Hub.
	MinSnapshotIdentifier float64 `pulumi:"minSnapshotIdentifier"`
	// The name of the Awr Hub source database.
	Name string `pulumi:"name"`
	// Opsi Mailbox URL based on the Awr Hub and Awr Hub source.
	SourceMailBoxUrl string `pulumi:"sourceMailBoxUrl"`
	// the current state of the source database
	State string `pulumi:"state"`
	// Indicates the status of a source database in Operations Insights
	Status string `pulumi:"status"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time at which the resource was first created. An RFC3339 formatted datetime string
	TimeCreated string `pulumi:"timeCreated"`
	// The time at which the earliest snapshot was generated in the source database for which data is uploaded to AWR Hub. An RFC3339 formatted datetime string
	TimeFirstSnapshotGenerated string `pulumi:"timeFirstSnapshotGenerated"`
	// The time at which the latest snapshot was generated in the source database for which data is uploaded to AWR Hub. An RFC3339 formatted datetime string
	TimeLastSnapshotGenerated string `pulumi:"timeLastSnapshotGenerated"`
	// The time at which the resource was last updated. An RFC3339 formatted datetime string
	TimeUpdated string `pulumi:"timeUpdated"`
	// source type of the database
	Type string `pulumi:"type"`
}

func LookupAwrHubSourceOutput(ctx *pulumi.Context, args LookupAwrHubSourceOutputArgs, opts ...pulumi.InvokeOption) LookupAwrHubSourceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAwrHubSourceResult, error) {
			args := v.(LookupAwrHubSourceArgs)
			r, err := LookupAwrHubSource(ctx, &args, opts...)
			var s LookupAwrHubSourceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAwrHubSourceResultOutput)
}

// A collection of arguments for invoking getAwrHubSource.
type LookupAwrHubSourceOutputArgs struct {
	// Unique Awr Hub Source identifier
	AwrHubSourceId pulumi.StringInput `pulumi:"awrHubSourceId"`
}

func (LookupAwrHubSourceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAwrHubSourceArgs)(nil)).Elem()
}

// A collection of values returned by getAwrHubSource.
type LookupAwrHubSourceResultOutput struct{ *pulumi.OutputState }

func (LookupAwrHubSourceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAwrHubSourceResult)(nil)).Elem()
}

func (o LookupAwrHubSourceResultOutput) ToLookupAwrHubSourceResultOutput() LookupAwrHubSourceResultOutput {
	return o
}

func (o LookupAwrHubSourceResultOutput) ToLookupAwrHubSourceResultOutputWithContext(ctx context.Context) LookupAwrHubSourceResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database id.
func (o LookupAwrHubSourceResultOutput) AssociatedOpsiId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwrHubSourceResult) string { return v.AssociatedOpsiId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database id.
func (o LookupAwrHubSourceResultOutput) AssociatedResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwrHubSourceResult) string { return v.AssociatedResourceId }).(pulumi.StringOutput)
}

// AWR Hub OCID
func (o LookupAwrHubSourceResultOutput) AwrHubId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwrHubSourceResult) string { return v.AwrHubId }).(pulumi.StringOutput)
}

// The shorted string of the Awr Hub source database identifier.
func (o LookupAwrHubSourceResultOutput) AwrHubOpsiSourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwrHubSourceResult) string { return v.AwrHubOpsiSourceId }).(pulumi.StringOutput)
}

func (o LookupAwrHubSourceResultOutput) AwrHubSourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwrHubSourceResult) string { return v.AwrHubSourceId }).(pulumi.StringOutput)
}

// DatabaseId of the Source database for which AWR Data will be uploaded to AWR Hub.
func (o LookupAwrHubSourceResultOutput) AwrSourceDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwrHubSourceResult) string { return v.AwrSourceDatabaseId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o LookupAwrHubSourceResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwrHubSourceResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupAwrHubSourceResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupAwrHubSourceResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupAwrHubSourceResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupAwrHubSourceResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// Number of hours since last AWR snapshots import happened from the Source database.
func (o LookupAwrHubSourceResultOutput) HoursSinceLastImport() pulumi.Float64Output {
	return o.ApplyT(func(v LookupAwrHubSourceResult) float64 { return v.HoursSinceLastImport }).(pulumi.Float64Output)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Awr Hub source database.
func (o LookupAwrHubSourceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwrHubSourceResult) string { return v.Id }).(pulumi.StringOutput)
}

// This is `true` if the source databse is registered with a Awr Hub, otherwise `false`
func (o LookupAwrHubSourceResultOutput) IsRegisteredWithAwrHub() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAwrHubSourceResult) bool { return v.IsRegisteredWithAwrHub }).(pulumi.BoolOutput)
}

// The maximum snapshot identifier of the source database for which AWR data is uploaded to AWR Hub.
func (o LookupAwrHubSourceResultOutput) MaxSnapshotIdentifier() pulumi.Float64Output {
	return o.ApplyT(func(v LookupAwrHubSourceResult) float64 { return v.MaxSnapshotIdentifier }).(pulumi.Float64Output)
}

// The minimum snapshot identifier of the source database for which AWR data is uploaded to AWR Hub.
func (o LookupAwrHubSourceResultOutput) MinSnapshotIdentifier() pulumi.Float64Output {
	return o.ApplyT(func(v LookupAwrHubSourceResult) float64 { return v.MinSnapshotIdentifier }).(pulumi.Float64Output)
}

// The name of the Awr Hub source database.
func (o LookupAwrHubSourceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwrHubSourceResult) string { return v.Name }).(pulumi.StringOutput)
}

// Opsi Mailbox URL based on the Awr Hub and Awr Hub source.
func (o LookupAwrHubSourceResultOutput) SourceMailBoxUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwrHubSourceResult) string { return v.SourceMailBoxUrl }).(pulumi.StringOutput)
}

// the current state of the source database
func (o LookupAwrHubSourceResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwrHubSourceResult) string { return v.State }).(pulumi.StringOutput)
}

// Indicates the status of a source database in Operations Insights
func (o LookupAwrHubSourceResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwrHubSourceResult) string { return v.Status }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupAwrHubSourceResultOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupAwrHubSourceResult) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The time at which the resource was first created. An RFC3339 formatted datetime string
func (o LookupAwrHubSourceResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwrHubSourceResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time at which the earliest snapshot was generated in the source database for which data is uploaded to AWR Hub. An RFC3339 formatted datetime string
func (o LookupAwrHubSourceResultOutput) TimeFirstSnapshotGenerated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwrHubSourceResult) string { return v.TimeFirstSnapshotGenerated }).(pulumi.StringOutput)
}

// The time at which the latest snapshot was generated in the source database for which data is uploaded to AWR Hub. An RFC3339 formatted datetime string
func (o LookupAwrHubSourceResultOutput) TimeLastSnapshotGenerated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwrHubSourceResult) string { return v.TimeLastSnapshotGenerated }).(pulumi.StringOutput)
}

// The time at which the resource was last updated. An RFC3339 formatted datetime string
func (o LookupAwrHubSourceResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwrHubSourceResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// source type of the database
func (o LookupAwrHubSourceResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwrHubSourceResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAwrHubSourceResultOutput{})
}
