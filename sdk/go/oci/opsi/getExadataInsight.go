// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opsi

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Exadata Insight resource in Oracle Cloud Infrastructure Opsi service.
//
// Gets details of an Exadata insight.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Opsi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Opsi.GetExadataInsight(ctx, &opsi.GetExadataInsightArgs{
//				ExadataInsightId: testExadataInsightOciOpsiExadataInsight.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupExadataInsight(ctx *pulumi.Context, args *LookupExadataInsightArgs, opts ...pulumi.InvokeOption) (*LookupExadataInsightResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupExadataInsightResult
	err := ctx.Invoke("oci:Opsi/getExadataInsight:getExadataInsight", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getExadataInsight.
type LookupExadataInsightArgs struct {
	// Unique Exadata insight identifier
	ExadataInsightId string `pulumi:"exadataInsightId"`
}

// A collection of values returned by getExadataInsight.
type LookupExadataInsightResult struct {
	// Compartment identifier of the Exadata insight resource
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// OPSI Enterprise Manager Bridge OCID
	EnterpriseManagerBridgeId string `pulumi:"enterpriseManagerBridgeId"`
	// Enterprise Manager Entity Display Name
	EnterpriseManagerEntityDisplayName string `pulumi:"enterpriseManagerEntityDisplayName"`
	// Enterprise Manager Entity Unique Identifier
	EnterpriseManagerEntityIdentifier string `pulumi:"enterpriseManagerEntityIdentifier"`
	// Enterprise Manager Entity Name
	EnterpriseManagerEntityName string `pulumi:"enterpriseManagerEntityName"`
	// Enterprise Manager Entity Type
	EnterpriseManagerEntityType string `pulumi:"enterpriseManagerEntityType"`
	// Enterprise Manager Unique Identifier
	EnterpriseManagerIdentifier string `pulumi:"enterpriseManagerIdentifier"`
	// Source of the Exadata system.
	EntitySource string `pulumi:"entitySource"`
	// The user-friendly name for the Exadata system. The name does not have to be unique.
	ExadataDisplayName string `pulumi:"exadataDisplayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata Infrastructure.
	ExadataInfraId string `pulumi:"exadataInfraId"`
	// Oracle Cloud Infrastructure exadata infrastructure resource type
	ExadataInfraResourceType string `pulumi:"exadataInfraResourceType"`
	ExadataInsightId         string `pulumi:"exadataInsightId"`
	// The Exadata system name. If the Exadata systems managed by Enterprise Manager, the name is unique amongst the Exadata systems managed by the same Enterprise Manager.
	ExadataName string `pulumi:"exadataName"`
	// Exadata rack type.
	ExadataRackType string `pulumi:"exadataRackType"`
	// The shape of the Exadata Infrastructure.
	ExadataShape string `pulumi:"exadataShape"`
	// Operations Insights internal representation of the the Exadata system type.
	ExadataType string `pulumi:"exadataType"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Exadata insight identifier
	Id                string `pulumi:"id"`
	IsAutoSyncEnabled bool   `pulumi:"isAutoSyncEnabled"`
	// true if virtualization is used in the Exadata system
	IsVirtualizedExadata bool `pulumi:"isVirtualizedExadata"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails       string                                   `pulumi:"lifecycleDetails"`
	MemberVmClusterDetails []GetExadataInsightMemberVmClusterDetail `pulumi:"memberVmClusterDetails"`
	// The current state of the Exadata insight.
	State string `pulumi:"state"`
	// Indicates the status of an Exadata insight in Operations Insights
	Status string `pulumi:"status"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time the the Exadata insight was first enabled. An RFC3339 formatted datetime string
	TimeCreated string `pulumi:"timeCreated"`
	// The time the Exadata insight was updated. An RFC3339 formatted datetime string
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupExadataInsightOutput(ctx *pulumi.Context, args LookupExadataInsightOutputArgs, opts ...pulumi.InvokeOption) LookupExadataInsightResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupExadataInsightResultOutput, error) {
			args := v.(LookupExadataInsightArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Opsi/getExadataInsight:getExadataInsight", args, LookupExadataInsightResultOutput{}, options).(LookupExadataInsightResultOutput), nil
		}).(LookupExadataInsightResultOutput)
}

// A collection of arguments for invoking getExadataInsight.
type LookupExadataInsightOutputArgs struct {
	// Unique Exadata insight identifier
	ExadataInsightId pulumi.StringInput `pulumi:"exadataInsightId"`
}

func (LookupExadataInsightOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupExadataInsightArgs)(nil)).Elem()
}

// A collection of values returned by getExadataInsight.
type LookupExadataInsightResultOutput struct{ *pulumi.OutputState }

func (LookupExadataInsightResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupExadataInsightResult)(nil)).Elem()
}

func (o LookupExadataInsightResultOutput) ToLookupExadataInsightResultOutput() LookupExadataInsightResultOutput {
	return o
}

func (o LookupExadataInsightResultOutput) ToLookupExadataInsightResultOutputWithContext(ctx context.Context) LookupExadataInsightResultOutput {
	return o
}

// Compartment identifier of the Exadata insight resource
func (o LookupExadataInsightResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInsightResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupExadataInsightResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupExadataInsightResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// OPSI Enterprise Manager Bridge OCID
func (o LookupExadataInsightResultOutput) EnterpriseManagerBridgeId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInsightResult) string { return v.EnterpriseManagerBridgeId }).(pulumi.StringOutput)
}

// Enterprise Manager Entity Display Name
func (o LookupExadataInsightResultOutput) EnterpriseManagerEntityDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInsightResult) string { return v.EnterpriseManagerEntityDisplayName }).(pulumi.StringOutput)
}

// Enterprise Manager Entity Unique Identifier
func (o LookupExadataInsightResultOutput) EnterpriseManagerEntityIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInsightResult) string { return v.EnterpriseManagerEntityIdentifier }).(pulumi.StringOutput)
}

// Enterprise Manager Entity Name
func (o LookupExadataInsightResultOutput) EnterpriseManagerEntityName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInsightResult) string { return v.EnterpriseManagerEntityName }).(pulumi.StringOutput)
}

// Enterprise Manager Entity Type
func (o LookupExadataInsightResultOutput) EnterpriseManagerEntityType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInsightResult) string { return v.EnterpriseManagerEntityType }).(pulumi.StringOutput)
}

// Enterprise Manager Unique Identifier
func (o LookupExadataInsightResultOutput) EnterpriseManagerIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInsightResult) string { return v.EnterpriseManagerIdentifier }).(pulumi.StringOutput)
}

// Source of the Exadata system.
func (o LookupExadataInsightResultOutput) EntitySource() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInsightResult) string { return v.EntitySource }).(pulumi.StringOutput)
}

// The user-friendly name for the Exadata system. The name does not have to be unique.
func (o LookupExadataInsightResultOutput) ExadataDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInsightResult) string { return v.ExadataDisplayName }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata Infrastructure.
func (o LookupExadataInsightResultOutput) ExadataInfraId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInsightResult) string { return v.ExadataInfraId }).(pulumi.StringOutput)
}

// Oracle Cloud Infrastructure exadata infrastructure resource type
func (o LookupExadataInsightResultOutput) ExadataInfraResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInsightResult) string { return v.ExadataInfraResourceType }).(pulumi.StringOutput)
}

func (o LookupExadataInsightResultOutput) ExadataInsightId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInsightResult) string { return v.ExadataInsightId }).(pulumi.StringOutput)
}

// The Exadata system name. If the Exadata systems managed by Enterprise Manager, the name is unique amongst the Exadata systems managed by the same Enterprise Manager.
func (o LookupExadataInsightResultOutput) ExadataName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInsightResult) string { return v.ExadataName }).(pulumi.StringOutput)
}

// Exadata rack type.
func (o LookupExadataInsightResultOutput) ExadataRackType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInsightResult) string { return v.ExadataRackType }).(pulumi.StringOutput)
}

// The shape of the Exadata Infrastructure.
func (o LookupExadataInsightResultOutput) ExadataShape() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInsightResult) string { return v.ExadataShape }).(pulumi.StringOutput)
}

// Operations Insights internal representation of the the Exadata system type.
func (o LookupExadataInsightResultOutput) ExadataType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInsightResult) string { return v.ExadataType }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupExadataInsightResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupExadataInsightResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Exadata insight identifier
func (o LookupExadataInsightResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInsightResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupExadataInsightResultOutput) IsAutoSyncEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupExadataInsightResult) bool { return v.IsAutoSyncEnabled }).(pulumi.BoolOutput)
}

// true if virtualization is used in the Exadata system
func (o LookupExadataInsightResultOutput) IsVirtualizedExadata() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupExadataInsightResult) bool { return v.IsVirtualizedExadata }).(pulumi.BoolOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o LookupExadataInsightResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInsightResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

func (o LookupExadataInsightResultOutput) MemberVmClusterDetails() GetExadataInsightMemberVmClusterDetailArrayOutput {
	return o.ApplyT(func(v LookupExadataInsightResult) []GetExadataInsightMemberVmClusterDetail {
		return v.MemberVmClusterDetails
	}).(GetExadataInsightMemberVmClusterDetailArrayOutput)
}

// The current state of the Exadata insight.
func (o LookupExadataInsightResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInsightResult) string { return v.State }).(pulumi.StringOutput)
}

// Indicates the status of an Exadata insight in Operations Insights
func (o LookupExadataInsightResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInsightResult) string { return v.Status }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupExadataInsightResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupExadataInsightResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The time the the Exadata insight was first enabled. An RFC3339 formatted datetime string
func (o LookupExadataInsightResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInsightResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the Exadata insight was updated. An RFC3339 formatted datetime string
func (o LookupExadataInsightResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInsightResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupExadataInsightResultOutput{})
}
