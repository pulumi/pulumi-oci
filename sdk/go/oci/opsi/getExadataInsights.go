// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opsi

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Exadata Insights in Oracle Cloud Infrastructure Opsi service.
//
// Gets a list of Exadata insights based on the query parameters specified. Either compartmentId or id query parameter must be specified.
// When both compartmentId and compartmentIdInSubtree are specified, a list of Exadata insights in that compartment and in all sub-compartments will be returned.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Opsi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Opsi.GetExadataInsights(ctx, &opsi.GetExadataInsightsArgs{
//				CompartmentId:             pulumi.StringRef(compartmentId),
//				CompartmentIdInSubtree:    pulumi.BoolRef(exadataInsightCompartmentIdInSubtree),
//				EnterpriseManagerBridgeId: pulumi.StringRef(testEnterpriseManagerBridge.Id),
//				ExadataTypes:              exadataInsightExadataType,
//				Id:                        pulumi.StringRef(exadataInsightId),
//				States:                    exadataInsightState,
//				Statuses:                  exadataInsightStatus,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetExadataInsights(ctx *pulumi.Context, args *GetExadataInsightsArgs, opts ...pulumi.InvokeOption) (*GetExadataInsightsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetExadataInsightsResult
	err := ctx.Invoke("oci:Opsi/getExadataInsights:getExadataInsights", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getExadataInsights.
type GetExadataInsightsArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// A flag to search all resources within a given compartment and all sub-compartments.
	CompartmentIdInSubtree *bool `pulumi:"compartmentIdInSubtree"`
	// Unique Enterprise Manager bridge identifier
	EnterpriseManagerBridgeId *string `pulumi:"enterpriseManagerBridgeId"`
	// Filter by one or more Exadata types. Possible value are DBMACHINE, EXACS, and EXACC.
	ExadataTypes []string                   `pulumi:"exadataTypes"`
	Filters      []GetExadataInsightsFilter `pulumi:"filters"`
	// Optional list of Exadata insight resource [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	Id *string `pulumi:"id"`
	// Lifecycle states
	States []string `pulumi:"states"`
	// Resource Status
	Statuses []string `pulumi:"statuses"`
}

// A collection of values returned by getExadataInsights.
type GetExadataInsightsResult struct {
	// Compartment identifier of the Exadata insight resource
	CompartmentId          *string `pulumi:"compartmentId"`
	CompartmentIdInSubtree *bool   `pulumi:"compartmentIdInSubtree"`
	// OPSI Enterprise Manager Bridge OCID
	EnterpriseManagerBridgeId *string `pulumi:"enterpriseManagerBridgeId"`
	// The list of exadata_insight_summary_collection.
	ExadataInsightSummaryCollections []GetExadataInsightsExadataInsightSummaryCollection `pulumi:"exadataInsightSummaryCollections"`
	// Operations Insights internal representation of the the Exadata system type.
	ExadataTypes []string                   `pulumi:"exadataTypes"`
	Filters      []GetExadataInsightsFilter `pulumi:"filters"`
	// Exadata insight identifier
	Id *string `pulumi:"id"`
	// The current state of the Exadata insight.
	States []string `pulumi:"states"`
	// Indicates the status of an Exadata insight in Operations Insights
	Statuses []string `pulumi:"statuses"`
}

func GetExadataInsightsOutput(ctx *pulumi.Context, args GetExadataInsightsOutputArgs, opts ...pulumi.InvokeOption) GetExadataInsightsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetExadataInsightsResult, error) {
			args := v.(GetExadataInsightsArgs)
			r, err := GetExadataInsights(ctx, &args, opts...)
			var s GetExadataInsightsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetExadataInsightsResultOutput)
}

// A collection of arguments for invoking getExadataInsights.
type GetExadataInsightsOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// A flag to search all resources within a given compartment and all sub-compartments.
	CompartmentIdInSubtree pulumi.BoolPtrInput `pulumi:"compartmentIdInSubtree"`
	// Unique Enterprise Manager bridge identifier
	EnterpriseManagerBridgeId pulumi.StringPtrInput `pulumi:"enterpriseManagerBridgeId"`
	// Filter by one or more Exadata types. Possible value are DBMACHINE, EXACS, and EXACC.
	ExadataTypes pulumi.StringArrayInput            `pulumi:"exadataTypes"`
	Filters      GetExadataInsightsFilterArrayInput `pulumi:"filters"`
	// Optional list of Exadata insight resource [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Lifecycle states
	States pulumi.StringArrayInput `pulumi:"states"`
	// Resource Status
	Statuses pulumi.StringArrayInput `pulumi:"statuses"`
}

func (GetExadataInsightsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExadataInsightsArgs)(nil)).Elem()
}

// A collection of values returned by getExadataInsights.
type GetExadataInsightsResultOutput struct{ *pulumi.OutputState }

func (GetExadataInsightsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExadataInsightsResult)(nil)).Elem()
}

func (o GetExadataInsightsResultOutput) ToGetExadataInsightsResultOutput() GetExadataInsightsResultOutput {
	return o
}

func (o GetExadataInsightsResultOutput) ToGetExadataInsightsResultOutputWithContext(ctx context.Context) GetExadataInsightsResultOutput {
	return o
}

// Compartment identifier of the Exadata insight resource
func (o GetExadataInsightsResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetExadataInsightsResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

func (o GetExadataInsightsResultOutput) CompartmentIdInSubtree() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetExadataInsightsResult) *bool { return v.CompartmentIdInSubtree }).(pulumi.BoolPtrOutput)
}

// OPSI Enterprise Manager Bridge OCID
func (o GetExadataInsightsResultOutput) EnterpriseManagerBridgeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetExadataInsightsResult) *string { return v.EnterpriseManagerBridgeId }).(pulumi.StringPtrOutput)
}

// The list of exadata_insight_summary_collection.
func (o GetExadataInsightsResultOutput) ExadataInsightSummaryCollections() GetExadataInsightsExadataInsightSummaryCollectionArrayOutput {
	return o.ApplyT(func(v GetExadataInsightsResult) []GetExadataInsightsExadataInsightSummaryCollection {
		return v.ExadataInsightSummaryCollections
	}).(GetExadataInsightsExadataInsightSummaryCollectionArrayOutput)
}

// Operations Insights internal representation of the the Exadata system type.
func (o GetExadataInsightsResultOutput) ExadataTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetExadataInsightsResult) []string { return v.ExadataTypes }).(pulumi.StringArrayOutput)
}

func (o GetExadataInsightsResultOutput) Filters() GetExadataInsightsFilterArrayOutput {
	return o.ApplyT(func(v GetExadataInsightsResult) []GetExadataInsightsFilter { return v.Filters }).(GetExadataInsightsFilterArrayOutput)
}

// Exadata insight identifier
func (o GetExadataInsightsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetExadataInsightsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The current state of the Exadata insight.
func (o GetExadataInsightsResultOutput) States() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetExadataInsightsResult) []string { return v.States }).(pulumi.StringArrayOutput)
}

// Indicates the status of an Exadata insight in Operations Insights
func (o GetExadataInsightsResultOutput) Statuses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetExadataInsightsResult) []string { return v.Statuses }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetExadataInsightsResultOutput{})
}
