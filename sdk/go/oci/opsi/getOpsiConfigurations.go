// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opsi

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Opsi Configurations in Oracle Cloud Infrastructure Opsi service.
//
// Gets a list of OPSI configuration resources based on the query parameters specified.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Opsi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Opsi.GetOpsiConfigurations(ctx, &opsi.GetOpsiConfigurationsArgs{
//				CompartmentId:   _var.Compartment_id,
//				DisplayName:     pulumi.StringRef(_var.Opsi_configuration_display_name),
//				OpsiConfigTypes: _var.Opsi_configuration_opsi_config_type,
//				States:          _var.Opsi_configuration_state,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetOpsiConfigurations(ctx *pulumi.Context, args *GetOpsiConfigurationsArgs, opts ...pulumi.InvokeOption) (*GetOpsiConfigurationsResult, error) {
	var rv GetOpsiConfigurationsResult
	err := ctx.Invoke("oci:Opsi/getOpsiConfigurations:getOpsiConfigurations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOpsiConfigurations.
type GetOpsiConfigurationsArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Filter to return based on resources that match the entire display name.
	DisplayName *string                       `pulumi:"displayName"`
	Filters     []GetOpsiConfigurationsFilter `pulumi:"filters"`
	// Filter to return based on configuration type of OPSI configuration.
	OpsiConfigTypes []string `pulumi:"opsiConfigTypes"`
	// Filter to return based on Lifecycle state of OPSI configuration.
	States []string `pulumi:"states"`
}

// A collection of values returned by getOpsiConfigurations.
type GetOpsiConfigurationsResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// User-friendly display name for the OPSI configuration. The name does not have to be unique.
	DisplayName *string                       `pulumi:"displayName"`
	Filters     []GetOpsiConfigurationsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// OPSI configuration type.
	OpsiConfigTypes []string `pulumi:"opsiConfigTypes"`
	// The list of opsi_configurations_collection.
	OpsiConfigurationsCollections []GetOpsiConfigurationsOpsiConfigurationsCollection `pulumi:"opsiConfigurationsCollections"`
	// OPSI configuration resource lifecycle state.
	States []string `pulumi:"states"`
}

func GetOpsiConfigurationsOutput(ctx *pulumi.Context, args GetOpsiConfigurationsOutputArgs, opts ...pulumi.InvokeOption) GetOpsiConfigurationsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetOpsiConfigurationsResult, error) {
			args := v.(GetOpsiConfigurationsArgs)
			r, err := GetOpsiConfigurations(ctx, &args, opts...)
			var s GetOpsiConfigurationsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetOpsiConfigurationsResultOutput)
}

// A collection of arguments for invoking getOpsiConfigurations.
type GetOpsiConfigurationsOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Filter to return based on resources that match the entire display name.
	DisplayName pulumi.StringPtrInput                 `pulumi:"displayName"`
	Filters     GetOpsiConfigurationsFilterArrayInput `pulumi:"filters"`
	// Filter to return based on configuration type of OPSI configuration.
	OpsiConfigTypes pulumi.StringArrayInput `pulumi:"opsiConfigTypes"`
	// Filter to return based on Lifecycle state of OPSI configuration.
	States pulumi.StringArrayInput `pulumi:"states"`
}

func (GetOpsiConfigurationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpsiConfigurationsArgs)(nil)).Elem()
}

// A collection of values returned by getOpsiConfigurations.
type GetOpsiConfigurationsResultOutput struct{ *pulumi.OutputState }

func (GetOpsiConfigurationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpsiConfigurationsResult)(nil)).Elem()
}

func (o GetOpsiConfigurationsResultOutput) ToGetOpsiConfigurationsResultOutput() GetOpsiConfigurationsResultOutput {
	return o
}

func (o GetOpsiConfigurationsResultOutput) ToGetOpsiConfigurationsResultOutputWithContext(ctx context.Context) GetOpsiConfigurationsResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o GetOpsiConfigurationsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpsiConfigurationsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// User-friendly display name for the OPSI configuration. The name does not have to be unique.
func (o GetOpsiConfigurationsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOpsiConfigurationsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetOpsiConfigurationsResultOutput) Filters() GetOpsiConfigurationsFilterArrayOutput {
	return o.ApplyT(func(v GetOpsiConfigurationsResult) []GetOpsiConfigurationsFilter { return v.Filters }).(GetOpsiConfigurationsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetOpsiConfigurationsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpsiConfigurationsResult) string { return v.Id }).(pulumi.StringOutput)
}

// OPSI configuration type.
func (o GetOpsiConfigurationsResultOutput) OpsiConfigTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOpsiConfigurationsResult) []string { return v.OpsiConfigTypes }).(pulumi.StringArrayOutput)
}

// The list of opsi_configurations_collection.
func (o GetOpsiConfigurationsResultOutput) OpsiConfigurationsCollections() GetOpsiConfigurationsOpsiConfigurationsCollectionArrayOutput {
	return o.ApplyT(func(v GetOpsiConfigurationsResult) []GetOpsiConfigurationsOpsiConfigurationsCollection {
		return v.OpsiConfigurationsCollections
	}).(GetOpsiConfigurationsOpsiConfigurationsCollectionArrayOutput)
}

// OPSI configuration resource lifecycle state.
func (o GetOpsiConfigurationsResultOutput) States() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOpsiConfigurationsResult) []string { return v.States }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetOpsiConfigurationsResultOutput{})
}
