// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package optimizer

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Enrollment Status resource in Oracle Cloud Infrastructure Optimizer service.
//
// Updates the enrollment status of the tenancy.
//
// ## Import
//
// EnrollmentStatus can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:Optimizer/enrollmentStatus:EnrollmentStatus test_enrollment_status "id"
// ```
type EnrollmentStatus struct {
	pulumi.CustomResourceState

	// The OCID of the compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// The unique OCID associated with the enrollment status.
	EnrollmentStatusId pulumi.StringOutput `pulumi:"enrollmentStatusId"`
	// The enrollment status' current state.
	State pulumi.StringOutput `pulumi:"state"`
	// (Updatable) The Cloud Advisor enrollment status.
	Status pulumi.StringOutput `pulumi:"status"`
	// The reason for the enrollment status of the tenancy.
	StatusReason pulumi.StringOutput `pulumi:"statusReason"`
	// The date and time the enrollment status was created, in the format defined by RFC3339.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The date and time the enrollment status was last updated, in the format defined by RFC3339.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewEnrollmentStatus registers a new resource with the given unique name, arguments, and options.
func NewEnrollmentStatus(ctx *pulumi.Context,
	name string, args *EnrollmentStatusArgs, opts ...pulumi.ResourceOption) (*EnrollmentStatus, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnrollmentStatusId == nil {
		return nil, errors.New("invalid value for required argument 'EnrollmentStatusId'")
	}
	if args.Status == nil {
		return nil, errors.New("invalid value for required argument 'Status'")
	}
	var resource EnrollmentStatus
	err := ctx.RegisterResource("oci:Optimizer/enrollmentStatus:EnrollmentStatus", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEnrollmentStatus gets an existing EnrollmentStatus resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEnrollmentStatus(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EnrollmentStatusState, opts ...pulumi.ResourceOption) (*EnrollmentStatus, error) {
	var resource EnrollmentStatus
	err := ctx.ReadResource("oci:Optimizer/enrollmentStatus:EnrollmentStatus", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EnrollmentStatus resources.
type enrollmentStatusState struct {
	// The OCID of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// The unique OCID associated with the enrollment status.
	EnrollmentStatusId *string `pulumi:"enrollmentStatusId"`
	// The enrollment status' current state.
	State *string `pulumi:"state"`
	// (Updatable) The Cloud Advisor enrollment status.
	Status *string `pulumi:"status"`
	// The reason for the enrollment status of the tenancy.
	StatusReason *string `pulumi:"statusReason"`
	// The date and time the enrollment status was created, in the format defined by RFC3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the enrollment status was last updated, in the format defined by RFC3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type EnrollmentStatusState struct {
	// The OCID of the compartment.
	CompartmentId pulumi.StringPtrInput
	// The unique OCID associated with the enrollment status.
	EnrollmentStatusId pulumi.StringPtrInput
	// The enrollment status' current state.
	State pulumi.StringPtrInput
	// (Updatable) The Cloud Advisor enrollment status.
	Status pulumi.StringPtrInput
	// The reason for the enrollment status of the tenancy.
	StatusReason pulumi.StringPtrInput
	// The date and time the enrollment status was created, in the format defined by RFC3339.
	TimeCreated pulumi.StringPtrInput
	// The date and time the enrollment status was last updated, in the format defined by RFC3339.
	TimeUpdated pulumi.StringPtrInput
}

func (EnrollmentStatusState) ElementType() reflect.Type {
	return reflect.TypeOf((*enrollmentStatusState)(nil)).Elem()
}

type enrollmentStatusArgs struct {
	// The unique OCID associated with the enrollment status.
	EnrollmentStatusId string `pulumi:"enrollmentStatusId"`
	// (Updatable) The Cloud Advisor enrollment status.
	Status string `pulumi:"status"`
}

// The set of arguments for constructing a EnrollmentStatus resource.
type EnrollmentStatusArgs struct {
	// The unique OCID associated with the enrollment status.
	EnrollmentStatusId pulumi.StringInput
	// (Updatable) The Cloud Advisor enrollment status.
	Status pulumi.StringInput
}

func (EnrollmentStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*enrollmentStatusArgs)(nil)).Elem()
}

type EnrollmentStatusInput interface {
	pulumi.Input

	ToEnrollmentStatusOutput() EnrollmentStatusOutput
	ToEnrollmentStatusOutputWithContext(ctx context.Context) EnrollmentStatusOutput
}

func (*EnrollmentStatus) ElementType() reflect.Type {
	return reflect.TypeOf((**EnrollmentStatus)(nil)).Elem()
}

func (i *EnrollmentStatus) ToEnrollmentStatusOutput() EnrollmentStatusOutput {
	return i.ToEnrollmentStatusOutputWithContext(context.Background())
}

func (i *EnrollmentStatus) ToEnrollmentStatusOutputWithContext(ctx context.Context) EnrollmentStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnrollmentStatusOutput)
}

// EnrollmentStatusArrayInput is an input type that accepts EnrollmentStatusArray and EnrollmentStatusArrayOutput values.
// You can construct a concrete instance of `EnrollmentStatusArrayInput` via:
//
//          EnrollmentStatusArray{ EnrollmentStatusArgs{...} }
type EnrollmentStatusArrayInput interface {
	pulumi.Input

	ToEnrollmentStatusArrayOutput() EnrollmentStatusArrayOutput
	ToEnrollmentStatusArrayOutputWithContext(context.Context) EnrollmentStatusArrayOutput
}

type EnrollmentStatusArray []EnrollmentStatusInput

func (EnrollmentStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EnrollmentStatus)(nil)).Elem()
}

func (i EnrollmentStatusArray) ToEnrollmentStatusArrayOutput() EnrollmentStatusArrayOutput {
	return i.ToEnrollmentStatusArrayOutputWithContext(context.Background())
}

func (i EnrollmentStatusArray) ToEnrollmentStatusArrayOutputWithContext(ctx context.Context) EnrollmentStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnrollmentStatusArrayOutput)
}

// EnrollmentStatusMapInput is an input type that accepts EnrollmentStatusMap and EnrollmentStatusMapOutput values.
// You can construct a concrete instance of `EnrollmentStatusMapInput` via:
//
//          EnrollmentStatusMap{ "key": EnrollmentStatusArgs{...} }
type EnrollmentStatusMapInput interface {
	pulumi.Input

	ToEnrollmentStatusMapOutput() EnrollmentStatusMapOutput
	ToEnrollmentStatusMapOutputWithContext(context.Context) EnrollmentStatusMapOutput
}

type EnrollmentStatusMap map[string]EnrollmentStatusInput

func (EnrollmentStatusMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EnrollmentStatus)(nil)).Elem()
}

func (i EnrollmentStatusMap) ToEnrollmentStatusMapOutput() EnrollmentStatusMapOutput {
	return i.ToEnrollmentStatusMapOutputWithContext(context.Background())
}

func (i EnrollmentStatusMap) ToEnrollmentStatusMapOutputWithContext(ctx context.Context) EnrollmentStatusMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnrollmentStatusMapOutput)
}

type EnrollmentStatusOutput struct{ *pulumi.OutputState }

func (EnrollmentStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnrollmentStatus)(nil)).Elem()
}

func (o EnrollmentStatusOutput) ToEnrollmentStatusOutput() EnrollmentStatusOutput {
	return o
}

func (o EnrollmentStatusOutput) ToEnrollmentStatusOutputWithContext(ctx context.Context) EnrollmentStatusOutput {
	return o
}

type EnrollmentStatusArrayOutput struct{ *pulumi.OutputState }

func (EnrollmentStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EnrollmentStatus)(nil)).Elem()
}

func (o EnrollmentStatusArrayOutput) ToEnrollmentStatusArrayOutput() EnrollmentStatusArrayOutput {
	return o
}

func (o EnrollmentStatusArrayOutput) ToEnrollmentStatusArrayOutputWithContext(ctx context.Context) EnrollmentStatusArrayOutput {
	return o
}

func (o EnrollmentStatusArrayOutput) Index(i pulumi.IntInput) EnrollmentStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EnrollmentStatus {
		return vs[0].([]*EnrollmentStatus)[vs[1].(int)]
	}).(EnrollmentStatusOutput)
}

type EnrollmentStatusMapOutput struct{ *pulumi.OutputState }

func (EnrollmentStatusMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EnrollmentStatus)(nil)).Elem()
}

func (o EnrollmentStatusMapOutput) ToEnrollmentStatusMapOutput() EnrollmentStatusMapOutput {
	return o
}

func (o EnrollmentStatusMapOutput) ToEnrollmentStatusMapOutputWithContext(ctx context.Context) EnrollmentStatusMapOutput {
	return o
}

func (o EnrollmentStatusMapOutput) MapIndex(k pulumi.StringInput) EnrollmentStatusOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EnrollmentStatus {
		return vs[0].(map[string]*EnrollmentStatus)[vs[1].(string)]
	}).(EnrollmentStatusOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EnrollmentStatusInput)(nil)).Elem(), &EnrollmentStatus{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnrollmentStatusArrayInput)(nil)).Elem(), EnrollmentStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnrollmentStatusMapInput)(nil)).Elem(), EnrollmentStatusMap{})
	pulumi.RegisterOutputType(EnrollmentStatusOutput{})
	pulumi.RegisterOutputType(EnrollmentStatusArrayOutput{})
	pulumi.RegisterOutputType(EnrollmentStatusMapOutput{})
}
