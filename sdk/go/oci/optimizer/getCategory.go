// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package optimizer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Category resource in Oracle Cloud Infrastructure Optimizer service.
//
// Gets the category that corresponds to the specified OCID.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Optimizer"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Optimizer.GetCategory(ctx, &optimizer.GetCategoryArgs{
//				CategoryId: testCategoryOciOptimizerCategory.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetCategory(ctx *pulumi.Context, args *GetCategoryArgs, opts ...pulumi.InvokeOption) (*GetCategoryResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCategoryResult
	err := ctx.Invoke("oci:Optimizer/getCategory:getCategory", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCategory.
type GetCategoryArgs struct {
	// The unique OCID associated with the category.
	CategoryId string `pulumi:"categoryId"`
}

// A collection of values returned by getCategory.
type GetCategoryResult struct {
	CategoryId string `pulumi:"categoryId"`
	// The OCID of the tenancy. The tenancy is the root compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The name associated with the compartment.
	CompartmentName string `pulumi:"compartmentName"`
	// Text describing the category.
	Description string `pulumi:"description"`
	// The estimated cost savings, in dollars, for the category.
	EstimatedCostSaving float64 `pulumi:"estimatedCostSaving"`
	// Additional metadata key/value pairs for the category.
	ExtendedMetadata map[string]string `pulumi:"extendedMetadata"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The name assigned to the category.
	Name string `pulumi:"name"`
	// An array of `RecommendationCount` objects grouped by the level of importance assigned to the recommendation.
	RecommendationCounts []GetCategoryRecommendationCount `pulumi:"recommendationCounts"`
	// An array of `ResourceCount` objects grouped by the status of the recommendation.
	ResourceCounts []GetCategoryResourceCount `pulumi:"resourceCounts"`
	// The category's current state.
	State string `pulumi:"state"`
	// The date and time the category details were created, in the format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the category details were last updated, in the format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

func GetCategoryOutput(ctx *pulumi.Context, args GetCategoryOutputArgs, opts ...pulumi.InvokeOption) GetCategoryResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetCategoryResultOutput, error) {
			args := v.(GetCategoryArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Optimizer/getCategory:getCategory", args, GetCategoryResultOutput{}, options).(GetCategoryResultOutput), nil
		}).(GetCategoryResultOutput)
}

// A collection of arguments for invoking getCategory.
type GetCategoryOutputArgs struct {
	// The unique OCID associated with the category.
	CategoryId pulumi.StringInput `pulumi:"categoryId"`
}

func (GetCategoryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCategoryArgs)(nil)).Elem()
}

// A collection of values returned by getCategory.
type GetCategoryResultOutput struct{ *pulumi.OutputState }

func (GetCategoryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCategoryResult)(nil)).Elem()
}

func (o GetCategoryResultOutput) ToGetCategoryResultOutput() GetCategoryResultOutput {
	return o
}

func (o GetCategoryResultOutput) ToGetCategoryResultOutputWithContext(ctx context.Context) GetCategoryResultOutput {
	return o
}

func (o GetCategoryResultOutput) CategoryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCategoryResult) string { return v.CategoryId }).(pulumi.StringOutput)
}

// The OCID of the tenancy. The tenancy is the root compartment.
func (o GetCategoryResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCategoryResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The name associated with the compartment.
func (o GetCategoryResultOutput) CompartmentName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCategoryResult) string { return v.CompartmentName }).(pulumi.StringOutput)
}

// Text describing the category.
func (o GetCategoryResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCategoryResult) string { return v.Description }).(pulumi.StringOutput)
}

// The estimated cost savings, in dollars, for the category.
func (o GetCategoryResultOutput) EstimatedCostSaving() pulumi.Float64Output {
	return o.ApplyT(func(v GetCategoryResult) float64 { return v.EstimatedCostSaving }).(pulumi.Float64Output)
}

// Additional metadata key/value pairs for the category.
func (o GetCategoryResultOutput) ExtendedMetadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetCategoryResult) map[string]string { return v.ExtendedMetadata }).(pulumi.StringMapOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCategoryResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCategoryResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name assigned to the category.
func (o GetCategoryResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCategoryResult) string { return v.Name }).(pulumi.StringOutput)
}

// An array of `RecommendationCount` objects grouped by the level of importance assigned to the recommendation.
func (o GetCategoryResultOutput) RecommendationCounts() GetCategoryRecommendationCountArrayOutput {
	return o.ApplyT(func(v GetCategoryResult) []GetCategoryRecommendationCount { return v.RecommendationCounts }).(GetCategoryRecommendationCountArrayOutput)
}

// An array of `ResourceCount` objects grouped by the status of the recommendation.
func (o GetCategoryResultOutput) ResourceCounts() GetCategoryResourceCountArrayOutput {
	return o.ApplyT(func(v GetCategoryResult) []GetCategoryResourceCount { return v.ResourceCounts }).(GetCategoryResourceCountArrayOutput)
}

// The category's current state.
func (o GetCategoryResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetCategoryResult) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the category details were created, in the format defined by RFC3339.
func (o GetCategoryResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetCategoryResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the category details were last updated, in the format defined by RFC3339.
func (o GetCategoryResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetCategoryResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCategoryResultOutput{})
}
