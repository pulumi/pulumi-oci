// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package optimizer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Profile Level resource in Oracle Cloud Infrastructure Optimizer service.
//
// Lists the existing profile levels.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Optimizer"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Optimizer.GetProfileLevel(ctx, &optimizer.GetProfileLevelArgs{
//				CompartmentId:          compartmentId,
//				CompartmentIdInSubtree: profileLevelCompartmentIdInSubtree,
//				Name:                   pulumi.StringRef(profileLevelName),
//				RecommendationName:     pulumi.StringRef(testRecommendation.Name),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetProfileLevel(ctx *pulumi.Context, args *GetProfileLevelArgs, opts ...pulumi.InvokeOption) (*GetProfileLevelResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetProfileLevelResult
	err := ctx.Invoke("oci:Optimizer/getProfileLevel:getProfileLevel", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProfileLevel.
type GetProfileLevelArgs struct {
	// The OCID of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned depending on the the setting of `accessLevel`.
	//
	// Can only be set to true when performing ListCompartments on the tenancy (root compartment).
	CompartmentIdInSubtree bool `pulumi:"compartmentIdInSubtree"`
	// Optional. A filter that returns results that match the name specified.
	Name *string `pulumi:"name"`
	// Optional. A filter that returns results that match the recommendation name specified.
	RecommendationName *string `pulumi:"recommendationName"`
}

// A collection of values returned by getProfileLevel.
type GetProfileLevelResult struct {
	CompartmentId          string `pulumi:"compartmentId"`
	CompartmentIdInSubtree bool   `pulumi:"compartmentIdInSubtree"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A collection of profile levels.
	Items []GetProfileLevelItem `pulumi:"items"`
	// A unique name for the profile level.
	Name *string `pulumi:"name"`
	// The name of the recommendation this profile level applies to.
	RecommendationName *string `pulumi:"recommendationName"`
}

func GetProfileLevelOutput(ctx *pulumi.Context, args GetProfileLevelOutputArgs, opts ...pulumi.InvokeOption) GetProfileLevelResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetProfileLevelResultOutput, error) {
			args := v.(GetProfileLevelArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetProfileLevelResult
			secret, err := ctx.InvokePackageRaw("oci:Optimizer/getProfileLevel:getProfileLevel", args, &rv, "", opts...)
			if err != nil {
				return GetProfileLevelResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetProfileLevelResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetProfileLevelResultOutput), nil
			}
			return output, nil
		}).(GetProfileLevelResultOutput)
}

// A collection of arguments for invoking getProfileLevel.
type GetProfileLevelOutputArgs struct {
	// The OCID of the compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned depending on the the setting of `accessLevel`.
	//
	// Can only be set to true when performing ListCompartments on the tenancy (root compartment).
	CompartmentIdInSubtree pulumi.BoolInput `pulumi:"compartmentIdInSubtree"`
	// Optional. A filter that returns results that match the name specified.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Optional. A filter that returns results that match the recommendation name specified.
	RecommendationName pulumi.StringPtrInput `pulumi:"recommendationName"`
}

func (GetProfileLevelOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileLevelArgs)(nil)).Elem()
}

// A collection of values returned by getProfileLevel.
type GetProfileLevelResultOutput struct{ *pulumi.OutputState }

func (GetProfileLevelResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileLevelResult)(nil)).Elem()
}

func (o GetProfileLevelResultOutput) ToGetProfileLevelResultOutput() GetProfileLevelResultOutput {
	return o
}

func (o GetProfileLevelResultOutput) ToGetProfileLevelResultOutputWithContext(ctx context.Context) GetProfileLevelResultOutput {
	return o
}

func (o GetProfileLevelResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileLevelResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetProfileLevelResultOutput) CompartmentIdInSubtree() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProfileLevelResult) bool { return v.CompartmentIdInSubtree }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetProfileLevelResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileLevelResult) string { return v.Id }).(pulumi.StringOutput)
}

// A collection of profile levels.
func (o GetProfileLevelResultOutput) Items() GetProfileLevelItemArrayOutput {
	return o.ApplyT(func(v GetProfileLevelResult) []GetProfileLevelItem { return v.Items }).(GetProfileLevelItemArrayOutput)
}

// A unique name for the profile level.
func (o GetProfileLevelResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfileLevelResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The name of the recommendation this profile level applies to.
func (o GetProfileLevelResultOutput) RecommendationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfileLevelResult) *string { return v.RecommendationName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetProfileLevelResultOutput{})
}
