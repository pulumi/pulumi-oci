// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package optimizer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides details about a specific Recommendation resource in Oracle Cloud Infrastructure Optimizer service.
//
// Gets the recommendation for the specified OCID.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Optimizer"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Optimizer.GetRecommendation(ctx, &optimizer.GetRecommendationArgs{
//				RecommendationId: oci_optimizer_recommendation.Test_recommendation.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupRecommendation(ctx *pulumi.Context, args *LookupRecommendationArgs, opts ...pulumi.InvokeOption) (*LookupRecommendationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRecommendationResult
	err := ctx.Invoke("oci:Optimizer/getRecommendation:getRecommendation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRecommendation.
type LookupRecommendationArgs struct {
	// The unique OCID associated with the recommendation.
	RecommendationId string `pulumi:"recommendationId"`
}

// A collection of values returned by getRecommendation.
type LookupRecommendationResult struct {
	// The unique OCID associated with the category.
	CategoryId string `pulumi:"categoryId"`
	// The OCID of the tenancy. The tenancy is the root compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Text describing the recommendation.
	Description string `pulumi:"description"`
	// The estimated cost savings, in dollars, for the recommendation.
	EstimatedCostSaving float64 `pulumi:"estimatedCostSaving"`
	// Additional metadata key/value pairs for the recommendation.
	ExtendedMetadata map[string]interface{} `pulumi:"extendedMetadata"`
	// The unique OCID associated with the recommendation.
	Id string `pulumi:"id"`
	// The level of importance assigned to the recommendation.
	Importance string `pulumi:"importance"`
	// The name of the profile level.
	Name             string `pulumi:"name"`
	RecommendationId string `pulumi:"recommendationId"`
	// An array of `ResourceCount` objects grouped by the status of the resource actions.
	ResourceCounts []GetRecommendationResourceCount `pulumi:"resourceCounts"`
	// The recommendation's current state.
	State string `pulumi:"state"`
	// The current status of the recommendation.
	Status string `pulumi:"status"`
	// Optional. The profile levels supported by a recommendation. For example, profile level values could be `Low`, `Medium`, and `High`. Not all recommendations support this field.
	SupportedLevels []GetRecommendationSupportedLevel `pulumi:"supportedLevels"`
	// The date and time the recommendation details were created, in the format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time that the recommendation entered its current status. The format is defined by RFC3339.
	TimeStatusBegin string `pulumi:"timeStatusBegin"`
	// The date and time the current status will change. The format is defined by RFC3339.
	TimeStatusEnd string `pulumi:"timeStatusEnd"`
	// The date and time the recommendation details were last updated, in the format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupRecommendationOutput(ctx *pulumi.Context, args LookupRecommendationOutputArgs, opts ...pulumi.InvokeOption) LookupRecommendationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRecommendationResult, error) {
			args := v.(LookupRecommendationArgs)
			r, err := LookupRecommendation(ctx, &args, opts...)
			var s LookupRecommendationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupRecommendationResultOutput)
}

// A collection of arguments for invoking getRecommendation.
type LookupRecommendationOutputArgs struct {
	// The unique OCID associated with the recommendation.
	RecommendationId pulumi.StringInput `pulumi:"recommendationId"`
}

func (LookupRecommendationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRecommendationArgs)(nil)).Elem()
}

// A collection of values returned by getRecommendation.
type LookupRecommendationResultOutput struct{ *pulumi.OutputState }

func (LookupRecommendationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRecommendationResult)(nil)).Elem()
}

func (o LookupRecommendationResultOutput) ToLookupRecommendationResultOutput() LookupRecommendationResultOutput {
	return o
}

func (o LookupRecommendationResultOutput) ToLookupRecommendationResultOutputWithContext(ctx context.Context) LookupRecommendationResultOutput {
	return o
}

func (o LookupRecommendationResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupRecommendationResult] {
	return pulumix.Output[LookupRecommendationResult]{
		OutputState: o.OutputState,
	}
}

// The unique OCID associated with the category.
func (o LookupRecommendationResultOutput) CategoryId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRecommendationResult) string { return v.CategoryId }).(pulumi.StringOutput)
}

// The OCID of the tenancy. The tenancy is the root compartment.
func (o LookupRecommendationResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRecommendationResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Text describing the recommendation.
func (o LookupRecommendationResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRecommendationResult) string { return v.Description }).(pulumi.StringOutput)
}

// The estimated cost savings, in dollars, for the recommendation.
func (o LookupRecommendationResultOutput) EstimatedCostSaving() pulumi.Float64Output {
	return o.ApplyT(func(v LookupRecommendationResult) float64 { return v.EstimatedCostSaving }).(pulumi.Float64Output)
}

// Additional metadata key/value pairs for the recommendation.
func (o LookupRecommendationResultOutput) ExtendedMetadata() pulumi.MapOutput {
	return o.ApplyT(func(v LookupRecommendationResult) map[string]interface{} { return v.ExtendedMetadata }).(pulumi.MapOutput)
}

// The unique OCID associated with the recommendation.
func (o LookupRecommendationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRecommendationResult) string { return v.Id }).(pulumi.StringOutput)
}

// The level of importance assigned to the recommendation.
func (o LookupRecommendationResultOutput) Importance() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRecommendationResult) string { return v.Importance }).(pulumi.StringOutput)
}

// The name of the profile level.
func (o LookupRecommendationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRecommendationResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupRecommendationResultOutput) RecommendationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRecommendationResult) string { return v.RecommendationId }).(pulumi.StringOutput)
}

// An array of `ResourceCount` objects grouped by the status of the resource actions.
func (o LookupRecommendationResultOutput) ResourceCounts() GetRecommendationResourceCountArrayOutput {
	return o.ApplyT(func(v LookupRecommendationResult) []GetRecommendationResourceCount { return v.ResourceCounts }).(GetRecommendationResourceCountArrayOutput)
}

// The recommendation's current state.
func (o LookupRecommendationResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRecommendationResult) string { return v.State }).(pulumi.StringOutput)
}

// The current status of the recommendation.
func (o LookupRecommendationResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRecommendationResult) string { return v.Status }).(pulumi.StringOutput)
}

// Optional. The profile levels supported by a recommendation. For example, profile level values could be `Low`, `Medium`, and `High`. Not all recommendations support this field.
func (o LookupRecommendationResultOutput) SupportedLevels() GetRecommendationSupportedLevelArrayOutput {
	return o.ApplyT(func(v LookupRecommendationResult) []GetRecommendationSupportedLevel { return v.SupportedLevels }).(GetRecommendationSupportedLevelArrayOutput)
}

// The date and time the recommendation details were created, in the format defined by RFC3339.
func (o LookupRecommendationResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRecommendationResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time that the recommendation entered its current status. The format is defined by RFC3339.
func (o LookupRecommendationResultOutput) TimeStatusBegin() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRecommendationResult) string { return v.TimeStatusBegin }).(pulumi.StringOutput)
}

// The date and time the current status will change. The format is defined by RFC3339.
func (o LookupRecommendationResultOutput) TimeStatusEnd() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRecommendationResult) string { return v.TimeStatusEnd }).(pulumi.StringOutput)
}

// The date and time the recommendation details were last updated, in the format defined by RFC3339.
func (o LookupRecommendationResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRecommendationResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRecommendationResultOutput{})
}
