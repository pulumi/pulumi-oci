// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package optimizer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Recommendation Strategy resource in Oracle Cloud Infrastructure Optimizer service.
//
// Lists the existing strategies.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Optimizer"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Optimizer.GetRecommendationStrategy(ctx, &optimizer.GetRecommendationStrategyArgs{
//				CompartmentId:          _var.Compartment_id,
//				CompartmentIdInSubtree: _var.Recommendation_strategy_compartment_id_in_subtree,
//				Name:                   pulumi.StringRef(_var.Recommendation_strategy_name),
//				RecommendationName:     pulumi.StringRef(oci_optimizer_recommendation.Test_recommendation.Name),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetRecommendationStrategy(ctx *pulumi.Context, args *GetRecommendationStrategyArgs, opts ...pulumi.InvokeOption) (*GetRecommendationStrategyResult, error) {
	var rv GetRecommendationStrategyResult
	err := ctx.Invoke("oci:Optimizer/getRecommendationStrategy:getRecommendationStrategy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRecommendationStrategy.
type GetRecommendationStrategyArgs struct {
	// The OCID of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned depending on the the setting of `accessLevel`.
	CompartmentIdInSubtree bool `pulumi:"compartmentIdInSubtree"`
	// Optional. A filter that returns results that match the name specified.
	Name *string `pulumi:"name"`
	// Optional. A filter that returns results that match the recommendation name specified.
	RecommendationName *string `pulumi:"recommendationName"`
}

// A collection of values returned by getRecommendationStrategy.
type GetRecommendationStrategyResult struct {
	CompartmentId          string `pulumi:"compartmentId"`
	CompartmentIdInSubtree bool   `pulumi:"compartmentIdInSubtree"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A collection of recommendation strategy summaries.
	Items []GetRecommendationStrategyItem `pulumi:"items"`
	// The name of the strategy parameter.
	Name               *string `pulumi:"name"`
	RecommendationName *string `pulumi:"recommendationName"`
}

func GetRecommendationStrategyOutput(ctx *pulumi.Context, args GetRecommendationStrategyOutputArgs, opts ...pulumi.InvokeOption) GetRecommendationStrategyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRecommendationStrategyResult, error) {
			args := v.(GetRecommendationStrategyArgs)
			r, err := GetRecommendationStrategy(ctx, &args, opts...)
			var s GetRecommendationStrategyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRecommendationStrategyResultOutput)
}

// A collection of arguments for invoking getRecommendationStrategy.
type GetRecommendationStrategyOutputArgs struct {
	// The OCID of the compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned depending on the the setting of `accessLevel`.
	CompartmentIdInSubtree pulumi.BoolInput `pulumi:"compartmentIdInSubtree"`
	// Optional. A filter that returns results that match the name specified.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Optional. A filter that returns results that match the recommendation name specified.
	RecommendationName pulumi.StringPtrInput `pulumi:"recommendationName"`
}

func (GetRecommendationStrategyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRecommendationStrategyArgs)(nil)).Elem()
}

// A collection of values returned by getRecommendationStrategy.
type GetRecommendationStrategyResultOutput struct{ *pulumi.OutputState }

func (GetRecommendationStrategyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRecommendationStrategyResult)(nil)).Elem()
}

func (o GetRecommendationStrategyResultOutput) ToGetRecommendationStrategyResultOutput() GetRecommendationStrategyResultOutput {
	return o
}

func (o GetRecommendationStrategyResultOutput) ToGetRecommendationStrategyResultOutputWithContext(ctx context.Context) GetRecommendationStrategyResultOutput {
	return o
}

func (o GetRecommendationStrategyResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecommendationStrategyResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetRecommendationStrategyResultOutput) CompartmentIdInSubtree() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRecommendationStrategyResult) bool { return v.CompartmentIdInSubtree }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRecommendationStrategyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecommendationStrategyResult) string { return v.Id }).(pulumi.StringOutput)
}

// A collection of recommendation strategy summaries.
func (o GetRecommendationStrategyResultOutput) Items() GetRecommendationStrategyItemArrayOutput {
	return o.ApplyT(func(v GetRecommendationStrategyResult) []GetRecommendationStrategyItem { return v.Items }).(GetRecommendationStrategyItemArrayOutput)
}

// The name of the strategy parameter.
func (o GetRecommendationStrategyResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRecommendationStrategyResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetRecommendationStrategyResultOutput) RecommendationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRecommendationStrategyResult) *string { return v.RecommendationName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRecommendationStrategyResultOutput{})
}
