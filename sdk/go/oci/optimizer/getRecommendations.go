// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package optimizer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Recommendations in Oracle Cloud Infrastructure Optimizer service.
//
// Lists the Cloud Advisor recommendations that are currently supported in the specified category.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Optimizer"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Optimizer.GetRecommendations(ctx, &optimizer.GetRecommendationsArgs{
//				CategoryId:             oci_optimizer_category.Test_category.Id,
//				CompartmentId:          _var.Compartment_id,
//				CompartmentIdInSubtree: _var.Recommendation_compartment_id_in_subtree,
//				Name:                   pulumi.StringRef(_var.Recommendation_name),
//				State:                  pulumi.StringRef(_var.Recommendation_state),
//				Status:                 pulumi.StringRef(_var.Recommendation_status),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetRecommendations(ctx *pulumi.Context, args *GetRecommendationsArgs, opts ...pulumi.InvokeOption) (*GetRecommendationsResult, error) {
	var rv GetRecommendationsResult
	err := ctx.Invoke("oci:Optimizer/getRecommendations:getRecommendations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRecommendations.
type GetRecommendationsArgs struct {
	// The unique OCID associated with the category.
	CategoryId string `pulumi:"categoryId"`
	// The OCID of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned depending on the the setting of `accessLevel`.
	CompartmentIdInSubtree bool                       `pulumi:"compartmentIdInSubtree"`
	Filters                []GetRecommendationsFilter `pulumi:"filters"`
	// Optional. A filter that returns results that match the name specified.
	Name *string `pulumi:"name"`
	// A filter that returns results that match the lifecycle state specified.
	State *string `pulumi:"state"`
	// A filter that returns recommendations that match the status specified.
	Status *string `pulumi:"status"`
}

// A collection of values returned by getRecommendations.
type GetRecommendationsResult struct {
	// The unique OCID associated with the category.
	CategoryId string `pulumi:"categoryId"`
	// The OCID of the tenancy. The tenancy is the root compartment.
	CompartmentId          string                     `pulumi:"compartmentId"`
	CompartmentIdInSubtree bool                       `pulumi:"compartmentIdInSubtree"`
	Filters                []GetRecommendationsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The name of the profile level.
	Name *string `pulumi:"name"`
	// The list of recommendation_collection.
	RecommendationCollections []GetRecommendationsRecommendationCollection `pulumi:"recommendationCollections"`
	// The recommendation's current state.
	State *string `pulumi:"state"`
	// The current status of the recommendation.
	Status *string `pulumi:"status"`
}

func GetRecommendationsOutput(ctx *pulumi.Context, args GetRecommendationsOutputArgs, opts ...pulumi.InvokeOption) GetRecommendationsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRecommendationsResult, error) {
			args := v.(GetRecommendationsArgs)
			r, err := GetRecommendations(ctx, &args, opts...)
			var s GetRecommendationsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRecommendationsResultOutput)
}

// A collection of arguments for invoking getRecommendations.
type GetRecommendationsOutputArgs struct {
	// The unique OCID associated with the category.
	CategoryId pulumi.StringInput `pulumi:"categoryId"`
	// The OCID of the compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned depending on the the setting of `accessLevel`.
	CompartmentIdInSubtree pulumi.BoolInput                   `pulumi:"compartmentIdInSubtree"`
	Filters                GetRecommendationsFilterArrayInput `pulumi:"filters"`
	// Optional. A filter that returns results that match the name specified.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A filter that returns results that match the lifecycle state specified.
	State pulumi.StringPtrInput `pulumi:"state"`
	// A filter that returns recommendations that match the status specified.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GetRecommendationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRecommendationsArgs)(nil)).Elem()
}

// A collection of values returned by getRecommendations.
type GetRecommendationsResultOutput struct{ *pulumi.OutputState }

func (GetRecommendationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRecommendationsResult)(nil)).Elem()
}

func (o GetRecommendationsResultOutput) ToGetRecommendationsResultOutput() GetRecommendationsResultOutput {
	return o
}

func (o GetRecommendationsResultOutput) ToGetRecommendationsResultOutputWithContext(ctx context.Context) GetRecommendationsResultOutput {
	return o
}

// The unique OCID associated with the category.
func (o GetRecommendationsResultOutput) CategoryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecommendationsResult) string { return v.CategoryId }).(pulumi.StringOutput)
}

// The OCID of the tenancy. The tenancy is the root compartment.
func (o GetRecommendationsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecommendationsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetRecommendationsResultOutput) CompartmentIdInSubtree() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRecommendationsResult) bool { return v.CompartmentIdInSubtree }).(pulumi.BoolOutput)
}

func (o GetRecommendationsResultOutput) Filters() GetRecommendationsFilterArrayOutput {
	return o.ApplyT(func(v GetRecommendationsResult) []GetRecommendationsFilter { return v.Filters }).(GetRecommendationsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRecommendationsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecommendationsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the profile level.
func (o GetRecommendationsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRecommendationsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The list of recommendation_collection.
func (o GetRecommendationsResultOutput) RecommendationCollections() GetRecommendationsRecommendationCollectionArrayOutput {
	return o.ApplyT(func(v GetRecommendationsResult) []GetRecommendationsRecommendationCollection {
		return v.RecommendationCollections
	}).(GetRecommendationsRecommendationCollectionArrayOutput)
}

// The recommendation's current state.
func (o GetRecommendationsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRecommendationsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The current status of the recommendation.
func (o GetRecommendationsResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRecommendationsResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRecommendationsResultOutput{})
}
