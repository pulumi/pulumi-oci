// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package optimizer

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Profile resource in Oracle Cloud Infrastructure Optimizer service.
//
// Creates a new profile.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/optimizer"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := optimizer.NewProfile(ctx, "test_profile", &optimizer.ProfileArgs{
//				CompartmentId: pulumi.Any(compartmentId),
//				Description:   pulumi.Any(profileDescription),
//				LevelsConfiguration: &optimizer.ProfileLevelsConfigurationArgs{
//					Items: optimizer.ProfileLevelsConfigurationItemArray{
//						&optimizer.ProfileLevelsConfigurationItemArgs{
//							Level:            pulumi.Any(profileLevelsConfigurationItemsLevel),
//							RecommendationId: pulumi.Any(testRecommendation.Id),
//						},
//					},
//				},
//				Name:                      pulumi.Any(profileName),
//				AggregationIntervalInDays: pulumi.Any(profileAggregationIntervalInDays),
//				DefinedTags: pulumi.StringMap{
//					"foo-namespace.bar-key": pulumi.String("value"),
//				},
//				FreeformTags: pulumi.StringMap{
//					"bar-key": pulumi.String("value"),
//				},
//				TargetCompartments: &optimizer.ProfileTargetCompartmentsArgs{
//					Items: pulumi.Any(profileTargetCompartmentsItems),
//				},
//				TargetTags: &optimizer.ProfileTargetTagsArgs{
//					Items: optimizer.ProfileTargetTagsItemArray{
//						&optimizer.ProfileTargetTagsItemArgs{
//							TagDefinitionName: pulumi.Any(profileTargetTagsItemsTagDefinitionName),
//							TagNamespaceName:  pulumi.Any(testTagNamespace.Name),
//							TagValueType:      pulumi.Any(profileTargetTagsItemsTagValueType),
//							TagValues:         pulumi.Any(profileTargetTagsItemsTagValues),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Profiles can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Optimizer/profile:Profile test_profile "id"
// ```
type Profile struct {
	pulumi.CustomResourceState

	// (Updatable) The time period over which to collect data for the recommendations, measured in number of days.
	AggregationIntervalInDays pulumi.IntOutput `pulumi:"aggregationIntervalInDays"`
	// The OCID of the tenancy. The tenancy is the root compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) Text describing the profile. Avoid entering confidential information.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Simple key-value pair applied without any predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// (Updatable) A list of configuration levels for each recommendation.
	LevelsConfiguration ProfileLevelsConfigurationOutput `pulumi:"levelsConfiguration"`
	// (Updatable) The name assigned to the profile. Avoid entering confidential information.
	Name pulumi.StringOutput `pulumi:"name"`
	// The profile's current state.
	State      pulumi.StringOutput    `pulumi:"state"`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// (Updatable) Optional. The compartments specified in the profile override for a recommendation.
	TargetCompartments ProfileTargetCompartmentsOutput `pulumi:"targetCompartments"`
	// (Updatable) Optional. The tags specified in the profile override for a recommendation.
	TargetTags ProfileTargetTagsOutput `pulumi:"targetTags"`
	// The date and time the profile was created, in the format defined by RFC3339.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The date and time the profile was last updated, in the format defined by RFC3339.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewProfile registers a new resource with the given unique name, arguments, and options.
func NewProfile(ctx *pulumi.Context,
	name string, args *ProfileArgs, opts ...pulumi.ResourceOption) (*Profile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.LevelsConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'LevelsConfiguration'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Profile
	err := ctx.RegisterResource("oci:Optimizer/profile:Profile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProfile gets an existing Profile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProfileState, opts ...pulumi.ResourceOption) (*Profile, error) {
	var resource Profile
	err := ctx.ReadResource("oci:Optimizer/profile:Profile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Profile resources.
type profileState struct {
	// (Updatable) The time period over which to collect data for the recommendations, measured in number of days.
	AggregationIntervalInDays *int `pulumi:"aggregationIntervalInDays"`
	// The OCID of the tenancy. The tenancy is the root compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) Text describing the profile. Avoid entering confidential information.
	Description *string `pulumi:"description"`
	// (Updatable) Simple key-value pair applied without any predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// (Updatable) A list of configuration levels for each recommendation.
	LevelsConfiguration *ProfileLevelsConfiguration `pulumi:"levelsConfiguration"`
	// (Updatable) The name assigned to the profile. Avoid entering confidential information.
	Name *string `pulumi:"name"`
	// The profile's current state.
	State      *string           `pulumi:"state"`
	SystemTags map[string]string `pulumi:"systemTags"`
	// (Updatable) Optional. The compartments specified in the profile override for a recommendation.
	TargetCompartments *ProfileTargetCompartments `pulumi:"targetCompartments"`
	// (Updatable) Optional. The tags specified in the profile override for a recommendation.
	TargetTags *ProfileTargetTags `pulumi:"targetTags"`
	// The date and time the profile was created, in the format defined by RFC3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the profile was last updated, in the format defined by RFC3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type ProfileState struct {
	// (Updatable) The time period over which to collect data for the recommendations, measured in number of days.
	AggregationIntervalInDays pulumi.IntPtrInput
	// The OCID of the tenancy. The tenancy is the root compartment.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) Text describing the profile. Avoid entering confidential information.
	Description pulumi.StringPtrInput
	// (Updatable) Simple key-value pair applied without any predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// (Updatable) A list of configuration levels for each recommendation.
	LevelsConfiguration ProfileLevelsConfigurationPtrInput
	// (Updatable) The name assigned to the profile. Avoid entering confidential information.
	Name pulumi.StringPtrInput
	// The profile's current state.
	State      pulumi.StringPtrInput
	SystemTags pulumi.StringMapInput
	// (Updatable) Optional. The compartments specified in the profile override for a recommendation.
	TargetCompartments ProfileTargetCompartmentsPtrInput
	// (Updatable) Optional. The tags specified in the profile override for a recommendation.
	TargetTags ProfileTargetTagsPtrInput
	// The date and time the profile was created, in the format defined by RFC3339.
	TimeCreated pulumi.StringPtrInput
	// The date and time the profile was last updated, in the format defined by RFC3339.
	TimeUpdated pulumi.StringPtrInput
}

func (ProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*profileState)(nil)).Elem()
}

type profileArgs struct {
	// (Updatable) The time period over which to collect data for the recommendations, measured in number of days.
	AggregationIntervalInDays *int `pulumi:"aggregationIntervalInDays"`
	// The OCID of the tenancy. The tenancy is the root compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) Text describing the profile. Avoid entering confidential information.
	Description string `pulumi:"description"`
	// (Updatable) Simple key-value pair applied without any predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// (Updatable) A list of configuration levels for each recommendation.
	LevelsConfiguration ProfileLevelsConfiguration `pulumi:"levelsConfiguration"`
	// (Updatable) The name assigned to the profile. Avoid entering confidential information.
	Name *string `pulumi:"name"`
	// (Updatable) Optional. The compartments specified in the profile override for a recommendation.
	TargetCompartments *ProfileTargetCompartments `pulumi:"targetCompartments"`
	// (Updatable) Optional. The tags specified in the profile override for a recommendation.
	TargetTags *ProfileTargetTags `pulumi:"targetTags"`
}

// The set of arguments for constructing a Profile resource.
type ProfileArgs struct {
	// (Updatable) The time period over which to collect data for the recommendations, measured in number of days.
	AggregationIntervalInDays pulumi.IntPtrInput
	// The OCID of the tenancy. The tenancy is the root compartment.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) Text describing the profile. Avoid entering confidential information.
	Description pulumi.StringInput
	// (Updatable) Simple key-value pair applied without any predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// (Updatable) A list of configuration levels for each recommendation.
	LevelsConfiguration ProfileLevelsConfigurationInput
	// (Updatable) The name assigned to the profile. Avoid entering confidential information.
	Name pulumi.StringPtrInput
	// (Updatable) Optional. The compartments specified in the profile override for a recommendation.
	TargetCompartments ProfileTargetCompartmentsPtrInput
	// (Updatable) Optional. The tags specified in the profile override for a recommendation.
	TargetTags ProfileTargetTagsPtrInput
}

func (ProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*profileArgs)(nil)).Elem()
}

type ProfileInput interface {
	pulumi.Input

	ToProfileOutput() ProfileOutput
	ToProfileOutputWithContext(ctx context.Context) ProfileOutput
}

func (*Profile) ElementType() reflect.Type {
	return reflect.TypeOf((**Profile)(nil)).Elem()
}

func (i *Profile) ToProfileOutput() ProfileOutput {
	return i.ToProfileOutputWithContext(context.Background())
}

func (i *Profile) ToProfileOutputWithContext(ctx context.Context) ProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileOutput)
}

// ProfileArrayInput is an input type that accepts ProfileArray and ProfileArrayOutput values.
// You can construct a concrete instance of `ProfileArrayInput` via:
//
//	ProfileArray{ ProfileArgs{...} }
type ProfileArrayInput interface {
	pulumi.Input

	ToProfileArrayOutput() ProfileArrayOutput
	ToProfileArrayOutputWithContext(context.Context) ProfileArrayOutput
}

type ProfileArray []ProfileInput

func (ProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Profile)(nil)).Elem()
}

func (i ProfileArray) ToProfileArrayOutput() ProfileArrayOutput {
	return i.ToProfileArrayOutputWithContext(context.Background())
}

func (i ProfileArray) ToProfileArrayOutputWithContext(ctx context.Context) ProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileArrayOutput)
}

// ProfileMapInput is an input type that accepts ProfileMap and ProfileMapOutput values.
// You can construct a concrete instance of `ProfileMapInput` via:
//
//	ProfileMap{ "key": ProfileArgs{...} }
type ProfileMapInput interface {
	pulumi.Input

	ToProfileMapOutput() ProfileMapOutput
	ToProfileMapOutputWithContext(context.Context) ProfileMapOutput
}

type ProfileMap map[string]ProfileInput

func (ProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Profile)(nil)).Elem()
}

func (i ProfileMap) ToProfileMapOutput() ProfileMapOutput {
	return i.ToProfileMapOutputWithContext(context.Background())
}

func (i ProfileMap) ToProfileMapOutputWithContext(ctx context.Context) ProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileMapOutput)
}

type ProfileOutput struct{ *pulumi.OutputState }

func (ProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Profile)(nil)).Elem()
}

func (o ProfileOutput) ToProfileOutput() ProfileOutput {
	return o
}

func (o ProfileOutput) ToProfileOutputWithContext(ctx context.Context) ProfileOutput {
	return o
}

// (Updatable) The time period over which to collect data for the recommendations, measured in number of days.
func (o ProfileOutput) AggregationIntervalInDays() pulumi.IntOutput {
	return o.ApplyT(func(v *Profile) pulumi.IntOutput { return v.AggregationIntervalInDays }).(pulumi.IntOutput)
}

// The OCID of the tenancy. The tenancy is the root compartment.
func (o ProfileOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"foo-namespace.bar-key": "value"}`
func (o ProfileOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) Text describing the profile. Avoid entering confidential information.
func (o ProfileOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair applied without any predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
func (o ProfileOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// (Updatable) A list of configuration levels for each recommendation.
func (o ProfileOutput) LevelsConfiguration() ProfileLevelsConfigurationOutput {
	return o.ApplyT(func(v *Profile) ProfileLevelsConfigurationOutput { return v.LevelsConfiguration }).(ProfileLevelsConfigurationOutput)
}

// (Updatable) The name assigned to the profile. Avoid entering confidential information.
func (o ProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The profile's current state.
func (o ProfileOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

func (o ProfileOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// (Updatable) Optional. The compartments specified in the profile override for a recommendation.
func (o ProfileOutput) TargetCompartments() ProfileTargetCompartmentsOutput {
	return o.ApplyT(func(v *Profile) ProfileTargetCompartmentsOutput { return v.TargetCompartments }).(ProfileTargetCompartmentsOutput)
}

// (Updatable) Optional. The tags specified in the profile override for a recommendation.
func (o ProfileOutput) TargetTags() ProfileTargetTagsOutput {
	return o.ApplyT(func(v *Profile) ProfileTargetTagsOutput { return v.TargetTags }).(ProfileTargetTagsOutput)
}

// The date and time the profile was created, in the format defined by RFC3339.
func (o ProfileOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the profile was last updated, in the format defined by RFC3339.
func (o ProfileOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type ProfileArrayOutput struct{ *pulumi.OutputState }

func (ProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Profile)(nil)).Elem()
}

func (o ProfileArrayOutput) ToProfileArrayOutput() ProfileArrayOutput {
	return o
}

func (o ProfileArrayOutput) ToProfileArrayOutputWithContext(ctx context.Context) ProfileArrayOutput {
	return o
}

func (o ProfileArrayOutput) Index(i pulumi.IntInput) ProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Profile {
		return vs[0].([]*Profile)[vs[1].(int)]
	}).(ProfileOutput)
}

type ProfileMapOutput struct{ *pulumi.OutputState }

func (ProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Profile)(nil)).Elem()
}

func (o ProfileMapOutput) ToProfileMapOutput() ProfileMapOutput {
	return o
}

func (o ProfileMapOutput) ToProfileMapOutputWithContext(ctx context.Context) ProfileMapOutput {
	return o
}

func (o ProfileMapOutput) MapIndex(k pulumi.StringInput) ProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Profile {
		return vs[0].(map[string]*Profile)[vs[1].(string)]
	}).(ProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileInput)(nil)).Elem(), &Profile{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileArrayInput)(nil)).Elem(), ProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileMapInput)(nil)).Elem(), ProfileMap{})
	pulumi.RegisterOutputType(ProfileOutput{})
	pulumi.RegisterOutputType(ProfileArrayOutput{})
	pulumi.RegisterOutputType(ProfileMapOutput{})
}
