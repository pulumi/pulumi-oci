// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Managed Instance resource in Oracle Cloud Infrastructure OS Management service.
//
// Returns a specific Managed Instance.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/OsManagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := OsManagement.GetManagedInstance(ctx, &osmanagement.GetManagedInstanceArgs{
//				ManagedInstanceId: oci_osmanagement_managed_instance.Test_managed_instance.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupManagedInstance(ctx *pulumi.Context, args *LookupManagedInstanceArgs, opts ...pulumi.InvokeOption) (*LookupManagedInstanceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupManagedInstanceResult
	err := ctx.Invoke("oci:OsManagement/getManagedInstance:getManagedInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedInstance.
type LookupManagedInstanceArgs struct {
	// OCID for the managed instance
	ManagedInstanceId string `pulumi:"managedInstanceId"`
}

// A collection of values returned by getManagedInstance.
type LookupManagedInstanceResult struct {
	// if present, indicates the Managed Instance is an autonomous instance. Holds all the Autonomous specific information
	Autonomouses []GetManagedInstanceAutonomouse `pulumi:"autonomouses"`
	// Number of bug fix type updates available to be installed
	BugUpdatesAvailable *int `pulumi:"bugUpdatesAvailable"`
	// list of child Software Sources attached to the Managed Instance
	ChildSoftwareSources []GetManagedInstanceChildSoftwareSource `pulumi:"childSoftwareSources"`
	// OCID for the Compartment
	CompartmentId *string `pulumi:"compartmentId"`
	// Information specified by the user about the managed instance
	Description *string `pulumi:"description"`
	// User friendly name
	DisplayName *string `pulumi:"displayName"`
	// Number of enhancement type updates available to be installed
	EnhancementUpdatesAvailable *int `pulumi:"enhancementUpdatesAvailable"`
	// software source identifier
	Id *string `pulumi:"id"`
	// True if user allow data collection for this instance
	IsDataCollectionAuthorized *bool `pulumi:"isDataCollectionAuthorized"`
	// Indicates whether a reboot is required to complete installation of updates.
	IsRebootRequired *bool `pulumi:"isRebootRequired"`
	// The ksplice effective kernel version
	KspliceEffectiveKernelVersion *string `pulumi:"kspliceEffectiveKernelVersion"`
	// Time at which the instance last booted
	LastBoot *string `pulumi:"lastBoot"`
	// Time at which the instance last checked in
	LastCheckin *string `pulumi:"lastCheckin"`
	// The ids of the managed instance groups of which this instance is a member.
	ManagedInstanceGroups []GetManagedInstanceManagedInstanceGroup `pulumi:"managedInstanceGroups"`
	ManagedInstanceId     string                                   `pulumi:"managedInstanceId"`
	// OCID of the ONS topic used to send notification to users
	NotificationTopicId *string `pulumi:"notificationTopicId"`
	// The Operating System type of the managed instance.
	OsFamily *string `pulumi:"osFamily"`
	// Operating System Kernel Version
	OsKernelVersion *string `pulumi:"osKernelVersion"`
	// Operating System Name
	OsName *string `pulumi:"osName"`
	// Operating System Version
	OsVersion *string `pulumi:"osVersion"`
	// Number of non-classified updates available to be installed
	OtherUpdatesAvailable *int `pulumi:"otherUpdatesAvailable"`
	// the parent (base) Software Source attached to the Managed Instance
	ParentSoftwareSources []GetManagedInstanceParentSoftwareSource `pulumi:"parentSoftwareSources"`
	// Number of scheduled jobs associated with this instance
	ScheduledJobCount *int `pulumi:"scheduledJobCount"`
	// Number of security type updates available to be installed
	SecurityUpdatesAvailable *int `pulumi:"securityUpdatesAvailable"`
	// status of the managed instance.
	Status *string `pulumi:"status"`
	// Number of updates available to be installed
	UpdatesAvailable *int `pulumi:"updatesAvailable"`
	// Number of work requests associated with this instance
	WorkRequestCount *int `pulumi:"workRequestCount"`
}

func LookupManagedInstanceOutput(ctx *pulumi.Context, args LookupManagedInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupManagedInstanceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupManagedInstanceResult, error) {
			args := v.(LookupManagedInstanceArgs)
			r, err := LookupManagedInstance(ctx, &args, opts...)
			var s LookupManagedInstanceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupManagedInstanceResultOutput)
}

// A collection of arguments for invoking getManagedInstance.
type LookupManagedInstanceOutputArgs struct {
	// OCID for the managed instance
	ManagedInstanceId pulumi.StringInput `pulumi:"managedInstanceId"`
}

func (LookupManagedInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagedInstanceArgs)(nil)).Elem()
}

// A collection of values returned by getManagedInstance.
type LookupManagedInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupManagedInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagedInstanceResult)(nil)).Elem()
}

func (o LookupManagedInstanceResultOutput) ToLookupManagedInstanceResultOutput() LookupManagedInstanceResultOutput {
	return o
}

func (o LookupManagedInstanceResultOutput) ToLookupManagedInstanceResultOutputWithContext(ctx context.Context) LookupManagedInstanceResultOutput {
	return o
}

// if present, indicates the Managed Instance is an autonomous instance. Holds all the Autonomous specific information
func (o LookupManagedInstanceResultOutput) Autonomouses() GetManagedInstanceAutonomouseArrayOutput {
	return o.ApplyT(func(v LookupManagedInstanceResult) []GetManagedInstanceAutonomouse { return v.Autonomouses }).(GetManagedInstanceAutonomouseArrayOutput)
}

// Number of bug fix type updates available to be installed
func (o LookupManagedInstanceResultOutput) BugUpdatesAvailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupManagedInstanceResult) *int { return v.BugUpdatesAvailable }).(pulumi.IntPtrOutput)
}

// list of child Software Sources attached to the Managed Instance
func (o LookupManagedInstanceResultOutput) ChildSoftwareSources() GetManagedInstanceChildSoftwareSourceArrayOutput {
	return o.ApplyT(func(v LookupManagedInstanceResult) []GetManagedInstanceChildSoftwareSource {
		return v.ChildSoftwareSources
	}).(GetManagedInstanceChildSoftwareSourceArrayOutput)
}

// OCID for the Compartment
func (o LookupManagedInstanceResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagedInstanceResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// Information specified by the user about the managed instance
func (o LookupManagedInstanceResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagedInstanceResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// User friendly name
func (o LookupManagedInstanceResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagedInstanceResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Number of enhancement type updates available to be installed
func (o LookupManagedInstanceResultOutput) EnhancementUpdatesAvailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupManagedInstanceResult) *int { return v.EnhancementUpdatesAvailable }).(pulumi.IntPtrOutput)
}

// software source identifier
func (o LookupManagedInstanceResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagedInstanceResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// True if user allow data collection for this instance
func (o LookupManagedInstanceResultOutput) IsDataCollectionAuthorized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupManagedInstanceResult) *bool { return v.IsDataCollectionAuthorized }).(pulumi.BoolPtrOutput)
}

// Indicates whether a reboot is required to complete installation of updates.
func (o LookupManagedInstanceResultOutput) IsRebootRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupManagedInstanceResult) *bool { return v.IsRebootRequired }).(pulumi.BoolPtrOutput)
}

// The ksplice effective kernel version
func (o LookupManagedInstanceResultOutput) KspliceEffectiveKernelVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagedInstanceResult) *string { return v.KspliceEffectiveKernelVersion }).(pulumi.StringPtrOutput)
}

// Time at which the instance last booted
func (o LookupManagedInstanceResultOutput) LastBoot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagedInstanceResult) *string { return v.LastBoot }).(pulumi.StringPtrOutput)
}

// Time at which the instance last checked in
func (o LookupManagedInstanceResultOutput) LastCheckin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagedInstanceResult) *string { return v.LastCheckin }).(pulumi.StringPtrOutput)
}

// The ids of the managed instance groups of which this instance is a member.
func (o LookupManagedInstanceResultOutput) ManagedInstanceGroups() GetManagedInstanceManagedInstanceGroupArrayOutput {
	return o.ApplyT(func(v LookupManagedInstanceResult) []GetManagedInstanceManagedInstanceGroup {
		return v.ManagedInstanceGroups
	}).(GetManagedInstanceManagedInstanceGroupArrayOutput)
}

func (o LookupManagedInstanceResultOutput) ManagedInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedInstanceResult) string { return v.ManagedInstanceId }).(pulumi.StringOutput)
}

// OCID of the ONS topic used to send notification to users
func (o LookupManagedInstanceResultOutput) NotificationTopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagedInstanceResult) *string { return v.NotificationTopicId }).(pulumi.StringPtrOutput)
}

// The Operating System type of the managed instance.
func (o LookupManagedInstanceResultOutput) OsFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagedInstanceResult) *string { return v.OsFamily }).(pulumi.StringPtrOutput)
}

// Operating System Kernel Version
func (o LookupManagedInstanceResultOutput) OsKernelVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagedInstanceResult) *string { return v.OsKernelVersion }).(pulumi.StringPtrOutput)
}

// Operating System Name
func (o LookupManagedInstanceResultOutput) OsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagedInstanceResult) *string { return v.OsName }).(pulumi.StringPtrOutput)
}

// Operating System Version
func (o LookupManagedInstanceResultOutput) OsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagedInstanceResult) *string { return v.OsVersion }).(pulumi.StringPtrOutput)
}

// Number of non-classified updates available to be installed
func (o LookupManagedInstanceResultOutput) OtherUpdatesAvailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupManagedInstanceResult) *int { return v.OtherUpdatesAvailable }).(pulumi.IntPtrOutput)
}

// the parent (base) Software Source attached to the Managed Instance
func (o LookupManagedInstanceResultOutput) ParentSoftwareSources() GetManagedInstanceParentSoftwareSourceArrayOutput {
	return o.ApplyT(func(v LookupManagedInstanceResult) []GetManagedInstanceParentSoftwareSource {
		return v.ParentSoftwareSources
	}).(GetManagedInstanceParentSoftwareSourceArrayOutput)
}

// Number of scheduled jobs associated with this instance
func (o LookupManagedInstanceResultOutput) ScheduledJobCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupManagedInstanceResult) *int { return v.ScheduledJobCount }).(pulumi.IntPtrOutput)
}

// Number of security type updates available to be installed
func (o LookupManagedInstanceResultOutput) SecurityUpdatesAvailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupManagedInstanceResult) *int { return v.SecurityUpdatesAvailable }).(pulumi.IntPtrOutput)
}

// status of the managed instance.
func (o LookupManagedInstanceResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagedInstanceResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Number of updates available to be installed
func (o LookupManagedInstanceResultOutput) UpdatesAvailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupManagedInstanceResult) *int { return v.UpdatesAvailable }).(pulumi.IntPtrOutput)
}

// Number of work requests associated with this instance
func (o LookupManagedInstanceResultOutput) WorkRequestCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupManagedInstanceResult) *int { return v.WorkRequestCount }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupManagedInstanceResultOutput{})
}
