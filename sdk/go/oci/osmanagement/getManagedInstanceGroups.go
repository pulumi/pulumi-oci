// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Managed Instance Groups in Oracle Cloud Infrastructure OS Management service.
//
// Returns a list of all Managed Instance Groups.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/osmanagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := osmanagement.GetManagedInstanceGroups(ctx, &osmanagement.GetManagedInstanceGroupsArgs{
//				CompartmentId: compartmentId,
//				DisplayName:   pulumi.StringRef(managedInstanceGroupDisplayName),
//				OsFamily:      pulumi.StringRef(managedInstanceGroupOsFamily),
//				State:         pulumi.StringRef(managedInstanceGroupState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetManagedInstanceGroups(ctx *pulumi.Context, args *GetManagedInstanceGroupsArgs, opts ...pulumi.InvokeOption) (*GetManagedInstanceGroupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetManagedInstanceGroupsResult
	err := ctx.Invoke("oci:OsManagement/getManagedInstanceGroups:getManagedInstanceGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedInstanceGroups.
type GetManagedInstanceGroupsArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName *string                          `pulumi:"displayName"`
	Filters     []GetManagedInstanceGroupsFilter `pulumi:"filters"`
	// The OS family for which to list resources.
	OsFamily *string `pulumi:"osFamily"`
	// The current lifecycle state for the object.
	State *string `pulumi:"state"`
}

// A collection of values returned by getManagedInstanceGroups.
type GetManagedInstanceGroupsResult struct {
	// OCID for the Compartment
	CompartmentId string `pulumi:"compartmentId"`
	// User friendly name
	DisplayName *string                          `pulumi:"displayName"`
	Filters     []GetManagedInstanceGroupsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of managed_instance_groups.
	ManagedInstanceGroups []GetManagedInstanceGroupsManagedInstanceGroup `pulumi:"managedInstanceGroups"`
	// The Operating System type of the managed instance.
	OsFamily *string `pulumi:"osFamily"`
	// The current state of the Software Source.
	State *string `pulumi:"state"`
}

func GetManagedInstanceGroupsOutput(ctx *pulumi.Context, args GetManagedInstanceGroupsOutputArgs, opts ...pulumi.InvokeOption) GetManagedInstanceGroupsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetManagedInstanceGroupsResultOutput, error) {
			args := v.(GetManagedInstanceGroupsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:OsManagement/getManagedInstanceGroups:getManagedInstanceGroups", args, GetManagedInstanceGroupsResultOutput{}, options).(GetManagedInstanceGroupsResultOutput), nil
		}).(GetManagedInstanceGroupsResultOutput)
}

// A collection of arguments for invoking getManagedInstanceGroups.
type GetManagedInstanceGroupsOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName pulumi.StringPtrInput                    `pulumi:"displayName"`
	Filters     GetManagedInstanceGroupsFilterArrayInput `pulumi:"filters"`
	// The OS family for which to list resources.
	OsFamily pulumi.StringPtrInput `pulumi:"osFamily"`
	// The current lifecycle state for the object.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetManagedInstanceGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupsArgs)(nil)).Elem()
}

// A collection of values returned by getManagedInstanceGroups.
type GetManagedInstanceGroupsResultOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupsResult)(nil)).Elem()
}

func (o GetManagedInstanceGroupsResultOutput) ToGetManagedInstanceGroupsResultOutput() GetManagedInstanceGroupsResultOutput {
	return o
}

func (o GetManagedInstanceGroupsResultOutput) ToGetManagedInstanceGroupsResultOutputWithContext(ctx context.Context) GetManagedInstanceGroupsResultOutput {
	return o
}

// OCID for the Compartment
func (o GetManagedInstanceGroupsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// User friendly name
func (o GetManagedInstanceGroupsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetManagedInstanceGroupsResultOutput) Filters() GetManagedInstanceGroupsFilterArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsResult) []GetManagedInstanceGroupsFilter { return v.Filters }).(GetManagedInstanceGroupsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagedInstanceGroupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of managed_instance_groups.
func (o GetManagedInstanceGroupsResultOutput) ManagedInstanceGroups() GetManagedInstanceGroupsManagedInstanceGroupArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsResult) []GetManagedInstanceGroupsManagedInstanceGroup {
		return v.ManagedInstanceGroups
	}).(GetManagedInstanceGroupsManagedInstanceGroupArrayOutput)
}

// The Operating System type of the managed instance.
func (o GetManagedInstanceGroupsResultOutput) OsFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsResult) *string { return v.OsFamily }).(pulumi.StringPtrOutput)
}

// The current state of the Software Source.
func (o GetManagedInstanceGroupsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedInstanceGroupsResultOutput{})
}
