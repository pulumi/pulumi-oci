// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Managed Instances in Oracle Cloud Infrastructure OS Management service.
//
// Returns a list of all Managed Instances.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/OsManagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := OsManagement.GetManagedInstances(ctx, &osmanagement.GetManagedInstancesArgs{
//				CompartmentId: compartmentId,
//				DisplayName:   pulumi.StringRef(managedInstanceDisplayName),
//				OsFamily:      pulumi.StringRef(managedInstanceOsFamily),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetManagedInstances(ctx *pulumi.Context, args *GetManagedInstancesArgs, opts ...pulumi.InvokeOption) (*GetManagedInstancesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetManagedInstancesResult
	err := ctx.Invoke("oci:OsManagement/getManagedInstances:getManagedInstances", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedInstances.
type GetManagedInstancesArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName *string                     `pulumi:"displayName"`
	Filters     []GetManagedInstancesFilter `pulumi:"filters"`
	// The OS family for which to list resources.
	OsFamily *string `pulumi:"osFamily"`
}

// A collection of values returned by getManagedInstances.
type GetManagedInstancesResult struct {
	// OCID for the Compartment
	CompartmentId string `pulumi:"compartmentId"`
	// User friendly name
	DisplayName *string                     `pulumi:"displayName"`
	Filters     []GetManagedInstancesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of managed_instances.
	ManagedInstances []GetManagedInstancesManagedInstance `pulumi:"managedInstances"`
	// The Operating System type of the managed instance.
	OsFamily *string `pulumi:"osFamily"`
}

func GetManagedInstancesOutput(ctx *pulumi.Context, args GetManagedInstancesOutputArgs, opts ...pulumi.InvokeOption) GetManagedInstancesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetManagedInstancesResult, error) {
			args := v.(GetManagedInstancesArgs)
			r, err := GetManagedInstances(ctx, &args, opts...)
			var s GetManagedInstancesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetManagedInstancesResultOutput)
}

// A collection of arguments for invoking getManagedInstances.
type GetManagedInstancesOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName pulumi.StringPtrInput               `pulumi:"displayName"`
	Filters     GetManagedInstancesFilterArrayInput `pulumi:"filters"`
	// The OS family for which to list resources.
	OsFamily pulumi.StringPtrInput `pulumi:"osFamily"`
}

func (GetManagedInstancesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstancesArgs)(nil)).Elem()
}

// A collection of values returned by getManagedInstances.
type GetManagedInstancesResultOutput struct{ *pulumi.OutputState }

func (GetManagedInstancesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstancesResult)(nil)).Elem()
}

func (o GetManagedInstancesResultOutput) ToGetManagedInstancesResultOutput() GetManagedInstancesResultOutput {
	return o
}

func (o GetManagedInstancesResultOutput) ToGetManagedInstancesResultOutputWithContext(ctx context.Context) GetManagedInstancesResultOutput {
	return o
}

// OCID for the Compartment
func (o GetManagedInstancesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstancesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// User friendly name
func (o GetManagedInstancesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstancesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetManagedInstancesResultOutput) Filters() GetManagedInstancesFilterArrayOutput {
	return o.ApplyT(func(v GetManagedInstancesResult) []GetManagedInstancesFilter { return v.Filters }).(GetManagedInstancesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagedInstancesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstancesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of managed_instances.
func (o GetManagedInstancesResultOutput) ManagedInstances() GetManagedInstancesManagedInstanceArrayOutput {
	return o.ApplyT(func(v GetManagedInstancesResult) []GetManagedInstancesManagedInstance { return v.ManagedInstances }).(GetManagedInstancesManagedInstanceArrayOutput)
}

// The Operating System type of the managed instance.
func (o GetManagedInstancesResultOutput) OsFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstancesResult) *string { return v.OsFamily }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedInstancesResultOutput{})
}
