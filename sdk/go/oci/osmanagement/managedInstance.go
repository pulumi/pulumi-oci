// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagement

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Managed Instance resource in Oracle Cloud Infrastructure OS Management service.
//
// Updates a specific Managed Instance.
//
// ## Import
//
// ManagedInstances can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:OsManagement/managedInstance:ManagedInstance test_managed_instance "id"
//
// ```
type ManagedInstance struct {
	pulumi.CustomResourceState

	// if present, indicates the Managed Instance is an autonomous instance. Holds all the Autonomous specific information
	Autonomouses ManagedInstanceAutonomouseArrayOutput `pulumi:"autonomouses"`
	// Number of bug fix type updates available to be installed
	BugUpdatesAvailable pulumi.IntOutput `pulumi:"bugUpdatesAvailable"`
	// list of child Software Sources attached to the Managed Instance
	ChildSoftwareSources ManagedInstanceChildSoftwareSourceArrayOutput `pulumi:"childSoftwareSources"`
	// OCID for the Compartment
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// Information specified by the user about the managed instance
	Description pulumi.StringOutput `pulumi:"description"`
	// User friendly name
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Number of enhancement type updates available to be installed
	EnhancementUpdatesAvailable pulumi.IntOutput `pulumi:"enhancementUpdatesAvailable"`
	// (Updatable) True if user allow data collection for this instance
	IsDataCollectionAuthorized pulumi.BoolOutput `pulumi:"isDataCollectionAuthorized"`
	// Indicates whether a reboot is required to complete installation of updates.
	IsRebootRequired pulumi.BoolOutput `pulumi:"isRebootRequired"`
	// The ksplice effective kernel version
	KspliceEffectiveKernelVersion pulumi.StringOutput `pulumi:"kspliceEffectiveKernelVersion"`
	// Time at which the instance last booted
	LastBoot pulumi.StringOutput `pulumi:"lastBoot"`
	// Time at which the instance last checked in
	LastCheckin pulumi.StringOutput `pulumi:"lastCheckin"`
	// The ids of the managed instance groups of which this instance is a member.
	ManagedInstanceGroups ManagedInstanceManagedInstanceGroupArrayOutput `pulumi:"managedInstanceGroups"`
	// OCID for the managed instance
	ManagedInstanceId pulumi.StringOutput `pulumi:"managedInstanceId"`
	// (Updatable) OCID of the ONS topic used to send notification to users
	NotificationTopicId pulumi.StringOutput `pulumi:"notificationTopicId"`
	// The Operating System type of the managed instance.
	OsFamily pulumi.StringOutput `pulumi:"osFamily"`
	// Operating System Kernel Version
	OsKernelVersion pulumi.StringOutput `pulumi:"osKernelVersion"`
	// Operating System Name
	OsName pulumi.StringOutput `pulumi:"osName"`
	// Operating System Version
	OsVersion pulumi.StringOutput `pulumi:"osVersion"`
	// Number of non-classified updates available to be installed
	OtherUpdatesAvailable pulumi.IntOutput `pulumi:"otherUpdatesAvailable"`
	// the parent (base) Software Source attached to the Managed Instance
	ParentSoftwareSources ManagedInstanceParentSoftwareSourceArrayOutput `pulumi:"parentSoftwareSources"`
	// Number of scheduled jobs associated with this instance
	ScheduledJobCount pulumi.IntOutput `pulumi:"scheduledJobCount"`
	// Number of security type updates available to be installed
	SecurityUpdatesAvailable pulumi.IntOutput `pulumi:"securityUpdatesAvailable"`
	// status of the managed instance.
	Status pulumi.StringOutput `pulumi:"status"`
	// Number of updates available to be installed
	UpdatesAvailable pulumi.IntOutput `pulumi:"updatesAvailable"`
	// Number of work requests associated with this instance
	WorkRequestCount pulumi.IntOutput `pulumi:"workRequestCount"`
}

// NewManagedInstance registers a new resource with the given unique name, arguments, and options.
func NewManagedInstance(ctx *pulumi.Context,
	name string, args *ManagedInstanceArgs, opts ...pulumi.ResourceOption) (*ManagedInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ManagedInstanceId == nil {
		return nil, errors.New("invalid value for required argument 'ManagedInstanceId'")
	}
	var resource ManagedInstance
	err := ctx.RegisterResource("oci:OsManagement/managedInstance:ManagedInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagedInstance gets an existing ManagedInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagedInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagedInstanceState, opts ...pulumi.ResourceOption) (*ManagedInstance, error) {
	var resource ManagedInstance
	err := ctx.ReadResource("oci:OsManagement/managedInstance:ManagedInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagedInstance resources.
type managedInstanceState struct {
	// if present, indicates the Managed Instance is an autonomous instance. Holds all the Autonomous specific information
	Autonomouses []ManagedInstanceAutonomouse `pulumi:"autonomouses"`
	// Number of bug fix type updates available to be installed
	BugUpdatesAvailable *int `pulumi:"bugUpdatesAvailable"`
	// list of child Software Sources attached to the Managed Instance
	ChildSoftwareSources []ManagedInstanceChildSoftwareSource `pulumi:"childSoftwareSources"`
	// OCID for the Compartment
	CompartmentId *string `pulumi:"compartmentId"`
	// Information specified by the user about the managed instance
	Description *string `pulumi:"description"`
	// User friendly name
	DisplayName *string `pulumi:"displayName"`
	// Number of enhancement type updates available to be installed
	EnhancementUpdatesAvailable *int `pulumi:"enhancementUpdatesAvailable"`
	// (Updatable) True if user allow data collection for this instance
	IsDataCollectionAuthorized *bool `pulumi:"isDataCollectionAuthorized"`
	// Indicates whether a reboot is required to complete installation of updates.
	IsRebootRequired *bool `pulumi:"isRebootRequired"`
	// The ksplice effective kernel version
	KspliceEffectiveKernelVersion *string `pulumi:"kspliceEffectiveKernelVersion"`
	// Time at which the instance last booted
	LastBoot *string `pulumi:"lastBoot"`
	// Time at which the instance last checked in
	LastCheckin *string `pulumi:"lastCheckin"`
	// The ids of the managed instance groups of which this instance is a member.
	ManagedInstanceGroups []ManagedInstanceManagedInstanceGroup `pulumi:"managedInstanceGroups"`
	// OCID for the managed instance
	ManagedInstanceId *string `pulumi:"managedInstanceId"`
	// (Updatable) OCID of the ONS topic used to send notification to users
	NotificationTopicId *string `pulumi:"notificationTopicId"`
	// The Operating System type of the managed instance.
	OsFamily *string `pulumi:"osFamily"`
	// Operating System Kernel Version
	OsKernelVersion *string `pulumi:"osKernelVersion"`
	// Operating System Name
	OsName *string `pulumi:"osName"`
	// Operating System Version
	OsVersion *string `pulumi:"osVersion"`
	// Number of non-classified updates available to be installed
	OtherUpdatesAvailable *int `pulumi:"otherUpdatesAvailable"`
	// the parent (base) Software Source attached to the Managed Instance
	ParentSoftwareSources []ManagedInstanceParentSoftwareSource `pulumi:"parentSoftwareSources"`
	// Number of scheduled jobs associated with this instance
	ScheduledJobCount *int `pulumi:"scheduledJobCount"`
	// Number of security type updates available to be installed
	SecurityUpdatesAvailable *int `pulumi:"securityUpdatesAvailable"`
	// status of the managed instance.
	Status *string `pulumi:"status"`
	// Number of updates available to be installed
	UpdatesAvailable *int `pulumi:"updatesAvailable"`
	// Number of work requests associated with this instance
	WorkRequestCount *int `pulumi:"workRequestCount"`
}

type ManagedInstanceState struct {
	// if present, indicates the Managed Instance is an autonomous instance. Holds all the Autonomous specific information
	Autonomouses ManagedInstanceAutonomouseArrayInput
	// Number of bug fix type updates available to be installed
	BugUpdatesAvailable pulumi.IntPtrInput
	// list of child Software Sources attached to the Managed Instance
	ChildSoftwareSources ManagedInstanceChildSoftwareSourceArrayInput
	// OCID for the Compartment
	CompartmentId pulumi.StringPtrInput
	// Information specified by the user about the managed instance
	Description pulumi.StringPtrInput
	// User friendly name
	DisplayName pulumi.StringPtrInput
	// Number of enhancement type updates available to be installed
	EnhancementUpdatesAvailable pulumi.IntPtrInput
	// (Updatable) True if user allow data collection for this instance
	IsDataCollectionAuthorized pulumi.BoolPtrInput
	// Indicates whether a reboot is required to complete installation of updates.
	IsRebootRequired pulumi.BoolPtrInput
	// The ksplice effective kernel version
	KspliceEffectiveKernelVersion pulumi.StringPtrInput
	// Time at which the instance last booted
	LastBoot pulumi.StringPtrInput
	// Time at which the instance last checked in
	LastCheckin pulumi.StringPtrInput
	// The ids of the managed instance groups of which this instance is a member.
	ManagedInstanceGroups ManagedInstanceManagedInstanceGroupArrayInput
	// OCID for the managed instance
	ManagedInstanceId pulumi.StringPtrInput
	// (Updatable) OCID of the ONS topic used to send notification to users
	NotificationTopicId pulumi.StringPtrInput
	// The Operating System type of the managed instance.
	OsFamily pulumi.StringPtrInput
	// Operating System Kernel Version
	OsKernelVersion pulumi.StringPtrInput
	// Operating System Name
	OsName pulumi.StringPtrInput
	// Operating System Version
	OsVersion pulumi.StringPtrInput
	// Number of non-classified updates available to be installed
	OtherUpdatesAvailable pulumi.IntPtrInput
	// the parent (base) Software Source attached to the Managed Instance
	ParentSoftwareSources ManagedInstanceParentSoftwareSourceArrayInput
	// Number of scheduled jobs associated with this instance
	ScheduledJobCount pulumi.IntPtrInput
	// Number of security type updates available to be installed
	SecurityUpdatesAvailable pulumi.IntPtrInput
	// status of the managed instance.
	Status pulumi.StringPtrInput
	// Number of updates available to be installed
	UpdatesAvailable pulumi.IntPtrInput
	// Number of work requests associated with this instance
	WorkRequestCount pulumi.IntPtrInput
}

func (ManagedInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*managedInstanceState)(nil)).Elem()
}

type managedInstanceArgs struct {
	// (Updatable) True if user allow data collection for this instance
	IsDataCollectionAuthorized *bool `pulumi:"isDataCollectionAuthorized"`
	// OCID for the managed instance
	ManagedInstanceId string `pulumi:"managedInstanceId"`
	// (Updatable) OCID of the ONS topic used to send notification to users
	NotificationTopicId *string `pulumi:"notificationTopicId"`
}

// The set of arguments for constructing a ManagedInstance resource.
type ManagedInstanceArgs struct {
	// (Updatable) True if user allow data collection for this instance
	IsDataCollectionAuthorized pulumi.BoolPtrInput
	// OCID for the managed instance
	ManagedInstanceId pulumi.StringInput
	// (Updatable) OCID of the ONS topic used to send notification to users
	NotificationTopicId pulumi.StringPtrInput
}

func (ManagedInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managedInstanceArgs)(nil)).Elem()
}

type ManagedInstanceInput interface {
	pulumi.Input

	ToManagedInstanceOutput() ManagedInstanceOutput
	ToManagedInstanceOutputWithContext(ctx context.Context) ManagedInstanceOutput
}

func (*ManagedInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedInstance)(nil)).Elem()
}

func (i *ManagedInstance) ToManagedInstanceOutput() ManagedInstanceOutput {
	return i.ToManagedInstanceOutputWithContext(context.Background())
}

func (i *ManagedInstance) ToManagedInstanceOutputWithContext(ctx context.Context) ManagedInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceOutput)
}

// ManagedInstanceArrayInput is an input type that accepts ManagedInstanceArray and ManagedInstanceArrayOutput values.
// You can construct a concrete instance of `ManagedInstanceArrayInput` via:
//
//	ManagedInstanceArray{ ManagedInstanceArgs{...} }
type ManagedInstanceArrayInput interface {
	pulumi.Input

	ToManagedInstanceArrayOutput() ManagedInstanceArrayOutput
	ToManagedInstanceArrayOutputWithContext(context.Context) ManagedInstanceArrayOutput
}

type ManagedInstanceArray []ManagedInstanceInput

func (ManagedInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedInstance)(nil)).Elem()
}

func (i ManagedInstanceArray) ToManagedInstanceArrayOutput() ManagedInstanceArrayOutput {
	return i.ToManagedInstanceArrayOutputWithContext(context.Background())
}

func (i ManagedInstanceArray) ToManagedInstanceArrayOutputWithContext(ctx context.Context) ManagedInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceArrayOutput)
}

// ManagedInstanceMapInput is an input type that accepts ManagedInstanceMap and ManagedInstanceMapOutput values.
// You can construct a concrete instance of `ManagedInstanceMapInput` via:
//
//	ManagedInstanceMap{ "key": ManagedInstanceArgs{...} }
type ManagedInstanceMapInput interface {
	pulumi.Input

	ToManagedInstanceMapOutput() ManagedInstanceMapOutput
	ToManagedInstanceMapOutputWithContext(context.Context) ManagedInstanceMapOutput
}

type ManagedInstanceMap map[string]ManagedInstanceInput

func (ManagedInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedInstance)(nil)).Elem()
}

func (i ManagedInstanceMap) ToManagedInstanceMapOutput() ManagedInstanceMapOutput {
	return i.ToManagedInstanceMapOutputWithContext(context.Background())
}

func (i ManagedInstanceMap) ToManagedInstanceMapOutputWithContext(ctx context.Context) ManagedInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceMapOutput)
}

type ManagedInstanceOutput struct{ *pulumi.OutputState }

func (ManagedInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedInstance)(nil)).Elem()
}

func (o ManagedInstanceOutput) ToManagedInstanceOutput() ManagedInstanceOutput {
	return o
}

func (o ManagedInstanceOutput) ToManagedInstanceOutputWithContext(ctx context.Context) ManagedInstanceOutput {
	return o
}

type ManagedInstanceArrayOutput struct{ *pulumi.OutputState }

func (ManagedInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedInstance)(nil)).Elem()
}

func (o ManagedInstanceArrayOutput) ToManagedInstanceArrayOutput() ManagedInstanceArrayOutput {
	return o
}

func (o ManagedInstanceArrayOutput) ToManagedInstanceArrayOutputWithContext(ctx context.Context) ManagedInstanceArrayOutput {
	return o
}

func (o ManagedInstanceArrayOutput) Index(i pulumi.IntInput) ManagedInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ManagedInstance {
		return vs[0].([]*ManagedInstance)[vs[1].(int)]
	}).(ManagedInstanceOutput)
}

type ManagedInstanceMapOutput struct{ *pulumi.OutputState }

func (ManagedInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedInstance)(nil)).Elem()
}

func (o ManagedInstanceMapOutput) ToManagedInstanceMapOutput() ManagedInstanceMapOutput {
	return o
}

func (o ManagedInstanceMapOutput) ToManagedInstanceMapOutputWithContext(ctx context.Context) ManagedInstanceMapOutput {
	return o
}

func (o ManagedInstanceMapOutput) MapIndex(k pulumi.StringInput) ManagedInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ManagedInstance {
		return vs[0].(map[string]*ManagedInstance)[vs[1].(string)]
	}).(ManagedInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceInput)(nil)).Elem(), &ManagedInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceArrayInput)(nil)).Elem(), ManagedInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceMapInput)(nil)).Elem(), ManagedInstanceMap{})
	pulumi.RegisterOutputType(ManagedInstanceOutput{})
	pulumi.RegisterOutputType(ManagedInstanceArrayOutput{})
	pulumi.RegisterOutputType(ManagedInstanceMapOutput{})
}
