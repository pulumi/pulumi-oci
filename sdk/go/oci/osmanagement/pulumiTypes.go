// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ManagedInstanceAutonomouse struct {
	// True if daily updates are enabled
	IsAutoUpdateEnabled *bool `pulumi:"isAutoUpdateEnabled"`
}

// ManagedInstanceAutonomouseInput is an input type that accepts ManagedInstanceAutonomouseArgs and ManagedInstanceAutonomouseOutput values.
// You can construct a concrete instance of `ManagedInstanceAutonomouseInput` via:
//
//	ManagedInstanceAutonomouseArgs{...}
type ManagedInstanceAutonomouseInput interface {
	pulumi.Input

	ToManagedInstanceAutonomouseOutput() ManagedInstanceAutonomouseOutput
	ToManagedInstanceAutonomouseOutputWithContext(context.Context) ManagedInstanceAutonomouseOutput
}

type ManagedInstanceAutonomouseArgs struct {
	// True if daily updates are enabled
	IsAutoUpdateEnabled pulumi.BoolPtrInput `pulumi:"isAutoUpdateEnabled"`
}

func (ManagedInstanceAutonomouseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstanceAutonomouse)(nil)).Elem()
}

func (i ManagedInstanceAutonomouseArgs) ToManagedInstanceAutonomouseOutput() ManagedInstanceAutonomouseOutput {
	return i.ToManagedInstanceAutonomouseOutputWithContext(context.Background())
}

func (i ManagedInstanceAutonomouseArgs) ToManagedInstanceAutonomouseOutputWithContext(ctx context.Context) ManagedInstanceAutonomouseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceAutonomouseOutput)
}

// ManagedInstanceAutonomouseArrayInput is an input type that accepts ManagedInstanceAutonomouseArray and ManagedInstanceAutonomouseArrayOutput values.
// You can construct a concrete instance of `ManagedInstanceAutonomouseArrayInput` via:
//
//	ManagedInstanceAutonomouseArray{ ManagedInstanceAutonomouseArgs{...} }
type ManagedInstanceAutonomouseArrayInput interface {
	pulumi.Input

	ToManagedInstanceAutonomouseArrayOutput() ManagedInstanceAutonomouseArrayOutput
	ToManagedInstanceAutonomouseArrayOutputWithContext(context.Context) ManagedInstanceAutonomouseArrayOutput
}

type ManagedInstanceAutonomouseArray []ManagedInstanceAutonomouseInput

func (ManagedInstanceAutonomouseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedInstanceAutonomouse)(nil)).Elem()
}

func (i ManagedInstanceAutonomouseArray) ToManagedInstanceAutonomouseArrayOutput() ManagedInstanceAutonomouseArrayOutput {
	return i.ToManagedInstanceAutonomouseArrayOutputWithContext(context.Background())
}

func (i ManagedInstanceAutonomouseArray) ToManagedInstanceAutonomouseArrayOutputWithContext(ctx context.Context) ManagedInstanceAutonomouseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceAutonomouseArrayOutput)
}

type ManagedInstanceAutonomouseOutput struct{ *pulumi.OutputState }

func (ManagedInstanceAutonomouseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstanceAutonomouse)(nil)).Elem()
}

func (o ManagedInstanceAutonomouseOutput) ToManagedInstanceAutonomouseOutput() ManagedInstanceAutonomouseOutput {
	return o
}

func (o ManagedInstanceAutonomouseOutput) ToManagedInstanceAutonomouseOutputWithContext(ctx context.Context) ManagedInstanceAutonomouseOutput {
	return o
}

// True if daily updates are enabled
func (o ManagedInstanceAutonomouseOutput) IsAutoUpdateEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedInstanceAutonomouse) *bool { return v.IsAutoUpdateEnabled }).(pulumi.BoolPtrOutput)
}

type ManagedInstanceAutonomouseArrayOutput struct{ *pulumi.OutputState }

func (ManagedInstanceAutonomouseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedInstanceAutonomouse)(nil)).Elem()
}

func (o ManagedInstanceAutonomouseArrayOutput) ToManagedInstanceAutonomouseArrayOutput() ManagedInstanceAutonomouseArrayOutput {
	return o
}

func (o ManagedInstanceAutonomouseArrayOutput) ToManagedInstanceAutonomouseArrayOutputWithContext(ctx context.Context) ManagedInstanceAutonomouseArrayOutput {
	return o
}

func (o ManagedInstanceAutonomouseArrayOutput) Index(i pulumi.IntInput) ManagedInstanceAutonomouseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedInstanceAutonomouse {
		return vs[0].([]ManagedInstanceAutonomouse)[vs[1].(int)]
	}).(ManagedInstanceAutonomouseOutput)
}

type ManagedInstanceChildSoftwareSource struct {
	// software source identifier
	Id *string `pulumi:"id"`
	// software source name
	Name *string `pulumi:"name"`
}

// ManagedInstanceChildSoftwareSourceInput is an input type that accepts ManagedInstanceChildSoftwareSourceArgs and ManagedInstanceChildSoftwareSourceOutput values.
// You can construct a concrete instance of `ManagedInstanceChildSoftwareSourceInput` via:
//
//	ManagedInstanceChildSoftwareSourceArgs{...}
type ManagedInstanceChildSoftwareSourceInput interface {
	pulumi.Input

	ToManagedInstanceChildSoftwareSourceOutput() ManagedInstanceChildSoftwareSourceOutput
	ToManagedInstanceChildSoftwareSourceOutputWithContext(context.Context) ManagedInstanceChildSoftwareSourceOutput
}

type ManagedInstanceChildSoftwareSourceArgs struct {
	// software source identifier
	Id pulumi.StringPtrInput `pulumi:"id"`
	// software source name
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ManagedInstanceChildSoftwareSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstanceChildSoftwareSource)(nil)).Elem()
}

func (i ManagedInstanceChildSoftwareSourceArgs) ToManagedInstanceChildSoftwareSourceOutput() ManagedInstanceChildSoftwareSourceOutput {
	return i.ToManagedInstanceChildSoftwareSourceOutputWithContext(context.Background())
}

func (i ManagedInstanceChildSoftwareSourceArgs) ToManagedInstanceChildSoftwareSourceOutputWithContext(ctx context.Context) ManagedInstanceChildSoftwareSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceChildSoftwareSourceOutput)
}

// ManagedInstanceChildSoftwareSourceArrayInput is an input type that accepts ManagedInstanceChildSoftwareSourceArray and ManagedInstanceChildSoftwareSourceArrayOutput values.
// You can construct a concrete instance of `ManagedInstanceChildSoftwareSourceArrayInput` via:
//
//	ManagedInstanceChildSoftwareSourceArray{ ManagedInstanceChildSoftwareSourceArgs{...} }
type ManagedInstanceChildSoftwareSourceArrayInput interface {
	pulumi.Input

	ToManagedInstanceChildSoftwareSourceArrayOutput() ManagedInstanceChildSoftwareSourceArrayOutput
	ToManagedInstanceChildSoftwareSourceArrayOutputWithContext(context.Context) ManagedInstanceChildSoftwareSourceArrayOutput
}

type ManagedInstanceChildSoftwareSourceArray []ManagedInstanceChildSoftwareSourceInput

func (ManagedInstanceChildSoftwareSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedInstanceChildSoftwareSource)(nil)).Elem()
}

func (i ManagedInstanceChildSoftwareSourceArray) ToManagedInstanceChildSoftwareSourceArrayOutput() ManagedInstanceChildSoftwareSourceArrayOutput {
	return i.ToManagedInstanceChildSoftwareSourceArrayOutputWithContext(context.Background())
}

func (i ManagedInstanceChildSoftwareSourceArray) ToManagedInstanceChildSoftwareSourceArrayOutputWithContext(ctx context.Context) ManagedInstanceChildSoftwareSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceChildSoftwareSourceArrayOutput)
}

type ManagedInstanceChildSoftwareSourceOutput struct{ *pulumi.OutputState }

func (ManagedInstanceChildSoftwareSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstanceChildSoftwareSource)(nil)).Elem()
}

func (o ManagedInstanceChildSoftwareSourceOutput) ToManagedInstanceChildSoftwareSourceOutput() ManagedInstanceChildSoftwareSourceOutput {
	return o
}

func (o ManagedInstanceChildSoftwareSourceOutput) ToManagedInstanceChildSoftwareSourceOutputWithContext(ctx context.Context) ManagedInstanceChildSoftwareSourceOutput {
	return o
}

// software source identifier
func (o ManagedInstanceChildSoftwareSourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedInstanceChildSoftwareSource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// software source name
func (o ManagedInstanceChildSoftwareSourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedInstanceChildSoftwareSource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ManagedInstanceChildSoftwareSourceArrayOutput struct{ *pulumi.OutputState }

func (ManagedInstanceChildSoftwareSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedInstanceChildSoftwareSource)(nil)).Elem()
}

func (o ManagedInstanceChildSoftwareSourceArrayOutput) ToManagedInstanceChildSoftwareSourceArrayOutput() ManagedInstanceChildSoftwareSourceArrayOutput {
	return o
}

func (o ManagedInstanceChildSoftwareSourceArrayOutput) ToManagedInstanceChildSoftwareSourceArrayOutputWithContext(ctx context.Context) ManagedInstanceChildSoftwareSourceArrayOutput {
	return o
}

func (o ManagedInstanceChildSoftwareSourceArrayOutput) Index(i pulumi.IntInput) ManagedInstanceChildSoftwareSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedInstanceChildSoftwareSource {
		return vs[0].([]ManagedInstanceChildSoftwareSource)[vs[1].(int)]
	}).(ManagedInstanceChildSoftwareSourceOutput)
}

type ManagedInstanceGroupManagedInstance struct {
	// (Updatable) Managed Instance Group identifier
	DisplayName *string `pulumi:"displayName"`
	// unique identifier that is immutable on creation
	Id *string `pulumi:"id"`
}

// ManagedInstanceGroupManagedInstanceInput is an input type that accepts ManagedInstanceGroupManagedInstanceArgs and ManagedInstanceGroupManagedInstanceOutput values.
// You can construct a concrete instance of `ManagedInstanceGroupManagedInstanceInput` via:
//
//	ManagedInstanceGroupManagedInstanceArgs{...}
type ManagedInstanceGroupManagedInstanceInput interface {
	pulumi.Input

	ToManagedInstanceGroupManagedInstanceOutput() ManagedInstanceGroupManagedInstanceOutput
	ToManagedInstanceGroupManagedInstanceOutputWithContext(context.Context) ManagedInstanceGroupManagedInstanceOutput
}

type ManagedInstanceGroupManagedInstanceArgs struct {
	// (Updatable) Managed Instance Group identifier
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// unique identifier that is immutable on creation
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ManagedInstanceGroupManagedInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstanceGroupManagedInstance)(nil)).Elem()
}

func (i ManagedInstanceGroupManagedInstanceArgs) ToManagedInstanceGroupManagedInstanceOutput() ManagedInstanceGroupManagedInstanceOutput {
	return i.ToManagedInstanceGroupManagedInstanceOutputWithContext(context.Background())
}

func (i ManagedInstanceGroupManagedInstanceArgs) ToManagedInstanceGroupManagedInstanceOutputWithContext(ctx context.Context) ManagedInstanceGroupManagedInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceGroupManagedInstanceOutput)
}

// ManagedInstanceGroupManagedInstanceArrayInput is an input type that accepts ManagedInstanceGroupManagedInstanceArray and ManagedInstanceGroupManagedInstanceArrayOutput values.
// You can construct a concrete instance of `ManagedInstanceGroupManagedInstanceArrayInput` via:
//
//	ManagedInstanceGroupManagedInstanceArray{ ManagedInstanceGroupManagedInstanceArgs{...} }
type ManagedInstanceGroupManagedInstanceArrayInput interface {
	pulumi.Input

	ToManagedInstanceGroupManagedInstanceArrayOutput() ManagedInstanceGroupManagedInstanceArrayOutput
	ToManagedInstanceGroupManagedInstanceArrayOutputWithContext(context.Context) ManagedInstanceGroupManagedInstanceArrayOutput
}

type ManagedInstanceGroupManagedInstanceArray []ManagedInstanceGroupManagedInstanceInput

func (ManagedInstanceGroupManagedInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedInstanceGroupManagedInstance)(nil)).Elem()
}

func (i ManagedInstanceGroupManagedInstanceArray) ToManagedInstanceGroupManagedInstanceArrayOutput() ManagedInstanceGroupManagedInstanceArrayOutput {
	return i.ToManagedInstanceGroupManagedInstanceArrayOutputWithContext(context.Background())
}

func (i ManagedInstanceGroupManagedInstanceArray) ToManagedInstanceGroupManagedInstanceArrayOutputWithContext(ctx context.Context) ManagedInstanceGroupManagedInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceGroupManagedInstanceArrayOutput)
}

type ManagedInstanceGroupManagedInstanceOutput struct{ *pulumi.OutputState }

func (ManagedInstanceGroupManagedInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstanceGroupManagedInstance)(nil)).Elem()
}

func (o ManagedInstanceGroupManagedInstanceOutput) ToManagedInstanceGroupManagedInstanceOutput() ManagedInstanceGroupManagedInstanceOutput {
	return o
}

func (o ManagedInstanceGroupManagedInstanceOutput) ToManagedInstanceGroupManagedInstanceOutputWithContext(ctx context.Context) ManagedInstanceGroupManagedInstanceOutput {
	return o
}

// (Updatable) Managed Instance Group identifier
func (o ManagedInstanceGroupManagedInstanceOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedInstanceGroupManagedInstance) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// unique identifier that is immutable on creation
func (o ManagedInstanceGroupManagedInstanceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedInstanceGroupManagedInstance) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ManagedInstanceGroupManagedInstanceArrayOutput struct{ *pulumi.OutputState }

func (ManagedInstanceGroupManagedInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedInstanceGroupManagedInstance)(nil)).Elem()
}

func (o ManagedInstanceGroupManagedInstanceArrayOutput) ToManagedInstanceGroupManagedInstanceArrayOutput() ManagedInstanceGroupManagedInstanceArrayOutput {
	return o
}

func (o ManagedInstanceGroupManagedInstanceArrayOutput) ToManagedInstanceGroupManagedInstanceArrayOutputWithContext(ctx context.Context) ManagedInstanceGroupManagedInstanceArrayOutput {
	return o
}

func (o ManagedInstanceGroupManagedInstanceArrayOutput) Index(i pulumi.IntInput) ManagedInstanceGroupManagedInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedInstanceGroupManagedInstance {
		return vs[0].([]ManagedInstanceGroupManagedInstance)[vs[1].(int)]
	}).(ManagedInstanceGroupManagedInstanceOutput)
}

type ManagedInstanceManagedInstanceGroup struct {
	// User friendly name
	DisplayName *string `pulumi:"displayName"`
	// software source identifier
	Id *string `pulumi:"id"`
}

// ManagedInstanceManagedInstanceGroupInput is an input type that accepts ManagedInstanceManagedInstanceGroupArgs and ManagedInstanceManagedInstanceGroupOutput values.
// You can construct a concrete instance of `ManagedInstanceManagedInstanceGroupInput` via:
//
//	ManagedInstanceManagedInstanceGroupArgs{...}
type ManagedInstanceManagedInstanceGroupInput interface {
	pulumi.Input

	ToManagedInstanceManagedInstanceGroupOutput() ManagedInstanceManagedInstanceGroupOutput
	ToManagedInstanceManagedInstanceGroupOutputWithContext(context.Context) ManagedInstanceManagedInstanceGroupOutput
}

type ManagedInstanceManagedInstanceGroupArgs struct {
	// User friendly name
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// software source identifier
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ManagedInstanceManagedInstanceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstanceManagedInstanceGroup)(nil)).Elem()
}

func (i ManagedInstanceManagedInstanceGroupArgs) ToManagedInstanceManagedInstanceGroupOutput() ManagedInstanceManagedInstanceGroupOutput {
	return i.ToManagedInstanceManagedInstanceGroupOutputWithContext(context.Background())
}

func (i ManagedInstanceManagedInstanceGroupArgs) ToManagedInstanceManagedInstanceGroupOutputWithContext(ctx context.Context) ManagedInstanceManagedInstanceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceManagedInstanceGroupOutput)
}

// ManagedInstanceManagedInstanceGroupArrayInput is an input type that accepts ManagedInstanceManagedInstanceGroupArray and ManagedInstanceManagedInstanceGroupArrayOutput values.
// You can construct a concrete instance of `ManagedInstanceManagedInstanceGroupArrayInput` via:
//
//	ManagedInstanceManagedInstanceGroupArray{ ManagedInstanceManagedInstanceGroupArgs{...} }
type ManagedInstanceManagedInstanceGroupArrayInput interface {
	pulumi.Input

	ToManagedInstanceManagedInstanceGroupArrayOutput() ManagedInstanceManagedInstanceGroupArrayOutput
	ToManagedInstanceManagedInstanceGroupArrayOutputWithContext(context.Context) ManagedInstanceManagedInstanceGroupArrayOutput
}

type ManagedInstanceManagedInstanceGroupArray []ManagedInstanceManagedInstanceGroupInput

func (ManagedInstanceManagedInstanceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedInstanceManagedInstanceGroup)(nil)).Elem()
}

func (i ManagedInstanceManagedInstanceGroupArray) ToManagedInstanceManagedInstanceGroupArrayOutput() ManagedInstanceManagedInstanceGroupArrayOutput {
	return i.ToManagedInstanceManagedInstanceGroupArrayOutputWithContext(context.Background())
}

func (i ManagedInstanceManagedInstanceGroupArray) ToManagedInstanceManagedInstanceGroupArrayOutputWithContext(ctx context.Context) ManagedInstanceManagedInstanceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceManagedInstanceGroupArrayOutput)
}

type ManagedInstanceManagedInstanceGroupOutput struct{ *pulumi.OutputState }

func (ManagedInstanceManagedInstanceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstanceManagedInstanceGroup)(nil)).Elem()
}

func (o ManagedInstanceManagedInstanceGroupOutput) ToManagedInstanceManagedInstanceGroupOutput() ManagedInstanceManagedInstanceGroupOutput {
	return o
}

func (o ManagedInstanceManagedInstanceGroupOutput) ToManagedInstanceManagedInstanceGroupOutputWithContext(ctx context.Context) ManagedInstanceManagedInstanceGroupOutput {
	return o
}

// User friendly name
func (o ManagedInstanceManagedInstanceGroupOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedInstanceManagedInstanceGroup) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// software source identifier
func (o ManagedInstanceManagedInstanceGroupOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedInstanceManagedInstanceGroup) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ManagedInstanceManagedInstanceGroupArrayOutput struct{ *pulumi.OutputState }

func (ManagedInstanceManagedInstanceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedInstanceManagedInstanceGroup)(nil)).Elem()
}

func (o ManagedInstanceManagedInstanceGroupArrayOutput) ToManagedInstanceManagedInstanceGroupArrayOutput() ManagedInstanceManagedInstanceGroupArrayOutput {
	return o
}

func (o ManagedInstanceManagedInstanceGroupArrayOutput) ToManagedInstanceManagedInstanceGroupArrayOutputWithContext(ctx context.Context) ManagedInstanceManagedInstanceGroupArrayOutput {
	return o
}

func (o ManagedInstanceManagedInstanceGroupArrayOutput) Index(i pulumi.IntInput) ManagedInstanceManagedInstanceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedInstanceManagedInstanceGroup {
		return vs[0].([]ManagedInstanceManagedInstanceGroup)[vs[1].(int)]
	}).(ManagedInstanceManagedInstanceGroupOutput)
}

type ManagedInstanceManagementChildSoftwareSource struct {
	// software source identifier
	Id *string `pulumi:"id"`
	// software source name
	Name *string `pulumi:"name"`
}

// ManagedInstanceManagementChildSoftwareSourceInput is an input type that accepts ManagedInstanceManagementChildSoftwareSourceArgs and ManagedInstanceManagementChildSoftwareSourceOutput values.
// You can construct a concrete instance of `ManagedInstanceManagementChildSoftwareSourceInput` via:
//
//	ManagedInstanceManagementChildSoftwareSourceArgs{...}
type ManagedInstanceManagementChildSoftwareSourceInput interface {
	pulumi.Input

	ToManagedInstanceManagementChildSoftwareSourceOutput() ManagedInstanceManagementChildSoftwareSourceOutput
	ToManagedInstanceManagementChildSoftwareSourceOutputWithContext(context.Context) ManagedInstanceManagementChildSoftwareSourceOutput
}

type ManagedInstanceManagementChildSoftwareSourceArgs struct {
	// software source identifier
	Id pulumi.StringPtrInput `pulumi:"id"`
	// software source name
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ManagedInstanceManagementChildSoftwareSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstanceManagementChildSoftwareSource)(nil)).Elem()
}

func (i ManagedInstanceManagementChildSoftwareSourceArgs) ToManagedInstanceManagementChildSoftwareSourceOutput() ManagedInstanceManagementChildSoftwareSourceOutput {
	return i.ToManagedInstanceManagementChildSoftwareSourceOutputWithContext(context.Background())
}

func (i ManagedInstanceManagementChildSoftwareSourceArgs) ToManagedInstanceManagementChildSoftwareSourceOutputWithContext(ctx context.Context) ManagedInstanceManagementChildSoftwareSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceManagementChildSoftwareSourceOutput)
}

// ManagedInstanceManagementChildSoftwareSourceArrayInput is an input type that accepts ManagedInstanceManagementChildSoftwareSourceArray and ManagedInstanceManagementChildSoftwareSourceArrayOutput values.
// You can construct a concrete instance of `ManagedInstanceManagementChildSoftwareSourceArrayInput` via:
//
//	ManagedInstanceManagementChildSoftwareSourceArray{ ManagedInstanceManagementChildSoftwareSourceArgs{...} }
type ManagedInstanceManagementChildSoftwareSourceArrayInput interface {
	pulumi.Input

	ToManagedInstanceManagementChildSoftwareSourceArrayOutput() ManagedInstanceManagementChildSoftwareSourceArrayOutput
	ToManagedInstanceManagementChildSoftwareSourceArrayOutputWithContext(context.Context) ManagedInstanceManagementChildSoftwareSourceArrayOutput
}

type ManagedInstanceManagementChildSoftwareSourceArray []ManagedInstanceManagementChildSoftwareSourceInput

func (ManagedInstanceManagementChildSoftwareSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedInstanceManagementChildSoftwareSource)(nil)).Elem()
}

func (i ManagedInstanceManagementChildSoftwareSourceArray) ToManagedInstanceManagementChildSoftwareSourceArrayOutput() ManagedInstanceManagementChildSoftwareSourceArrayOutput {
	return i.ToManagedInstanceManagementChildSoftwareSourceArrayOutputWithContext(context.Background())
}

func (i ManagedInstanceManagementChildSoftwareSourceArray) ToManagedInstanceManagementChildSoftwareSourceArrayOutputWithContext(ctx context.Context) ManagedInstanceManagementChildSoftwareSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceManagementChildSoftwareSourceArrayOutput)
}

type ManagedInstanceManagementChildSoftwareSourceOutput struct{ *pulumi.OutputState }

func (ManagedInstanceManagementChildSoftwareSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstanceManagementChildSoftwareSource)(nil)).Elem()
}

func (o ManagedInstanceManagementChildSoftwareSourceOutput) ToManagedInstanceManagementChildSoftwareSourceOutput() ManagedInstanceManagementChildSoftwareSourceOutput {
	return o
}

func (o ManagedInstanceManagementChildSoftwareSourceOutput) ToManagedInstanceManagementChildSoftwareSourceOutputWithContext(ctx context.Context) ManagedInstanceManagementChildSoftwareSourceOutput {
	return o
}

// software source identifier
func (o ManagedInstanceManagementChildSoftwareSourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedInstanceManagementChildSoftwareSource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// software source name
func (o ManagedInstanceManagementChildSoftwareSourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedInstanceManagementChildSoftwareSource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ManagedInstanceManagementChildSoftwareSourceArrayOutput struct{ *pulumi.OutputState }

func (ManagedInstanceManagementChildSoftwareSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedInstanceManagementChildSoftwareSource)(nil)).Elem()
}

func (o ManagedInstanceManagementChildSoftwareSourceArrayOutput) ToManagedInstanceManagementChildSoftwareSourceArrayOutput() ManagedInstanceManagementChildSoftwareSourceArrayOutput {
	return o
}

func (o ManagedInstanceManagementChildSoftwareSourceArrayOutput) ToManagedInstanceManagementChildSoftwareSourceArrayOutputWithContext(ctx context.Context) ManagedInstanceManagementChildSoftwareSourceArrayOutput {
	return o
}

func (o ManagedInstanceManagementChildSoftwareSourceArrayOutput) Index(i pulumi.IntInput) ManagedInstanceManagementChildSoftwareSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedInstanceManagementChildSoftwareSource {
		return vs[0].([]ManagedInstanceManagementChildSoftwareSource)[vs[1].(int)]
	}).(ManagedInstanceManagementChildSoftwareSourceOutput)
}

type ManagedInstanceManagementManagedInstanceGroup struct {
	// User friendly name
	DisplayName *string `pulumi:"displayName"`
	// unique identifier that is immutable on creation
	Id *string `pulumi:"id"`
}

// ManagedInstanceManagementManagedInstanceGroupInput is an input type that accepts ManagedInstanceManagementManagedInstanceGroupArgs and ManagedInstanceManagementManagedInstanceGroupOutput values.
// You can construct a concrete instance of `ManagedInstanceManagementManagedInstanceGroupInput` via:
//
//	ManagedInstanceManagementManagedInstanceGroupArgs{...}
type ManagedInstanceManagementManagedInstanceGroupInput interface {
	pulumi.Input

	ToManagedInstanceManagementManagedInstanceGroupOutput() ManagedInstanceManagementManagedInstanceGroupOutput
	ToManagedInstanceManagementManagedInstanceGroupOutputWithContext(context.Context) ManagedInstanceManagementManagedInstanceGroupOutput
}

type ManagedInstanceManagementManagedInstanceGroupArgs struct {
	// User friendly name
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// unique identifier that is immutable on creation
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ManagedInstanceManagementManagedInstanceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstanceManagementManagedInstanceGroup)(nil)).Elem()
}

func (i ManagedInstanceManagementManagedInstanceGroupArgs) ToManagedInstanceManagementManagedInstanceGroupOutput() ManagedInstanceManagementManagedInstanceGroupOutput {
	return i.ToManagedInstanceManagementManagedInstanceGroupOutputWithContext(context.Background())
}

func (i ManagedInstanceManagementManagedInstanceGroupArgs) ToManagedInstanceManagementManagedInstanceGroupOutputWithContext(ctx context.Context) ManagedInstanceManagementManagedInstanceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceManagementManagedInstanceGroupOutput)
}

// ManagedInstanceManagementManagedInstanceGroupArrayInput is an input type that accepts ManagedInstanceManagementManagedInstanceGroupArray and ManagedInstanceManagementManagedInstanceGroupArrayOutput values.
// You can construct a concrete instance of `ManagedInstanceManagementManagedInstanceGroupArrayInput` via:
//
//	ManagedInstanceManagementManagedInstanceGroupArray{ ManagedInstanceManagementManagedInstanceGroupArgs{...} }
type ManagedInstanceManagementManagedInstanceGroupArrayInput interface {
	pulumi.Input

	ToManagedInstanceManagementManagedInstanceGroupArrayOutput() ManagedInstanceManagementManagedInstanceGroupArrayOutput
	ToManagedInstanceManagementManagedInstanceGroupArrayOutputWithContext(context.Context) ManagedInstanceManagementManagedInstanceGroupArrayOutput
}

type ManagedInstanceManagementManagedInstanceGroupArray []ManagedInstanceManagementManagedInstanceGroupInput

func (ManagedInstanceManagementManagedInstanceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedInstanceManagementManagedInstanceGroup)(nil)).Elem()
}

func (i ManagedInstanceManagementManagedInstanceGroupArray) ToManagedInstanceManagementManagedInstanceGroupArrayOutput() ManagedInstanceManagementManagedInstanceGroupArrayOutput {
	return i.ToManagedInstanceManagementManagedInstanceGroupArrayOutputWithContext(context.Background())
}

func (i ManagedInstanceManagementManagedInstanceGroupArray) ToManagedInstanceManagementManagedInstanceGroupArrayOutputWithContext(ctx context.Context) ManagedInstanceManagementManagedInstanceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceManagementManagedInstanceGroupArrayOutput)
}

type ManagedInstanceManagementManagedInstanceGroupOutput struct{ *pulumi.OutputState }

func (ManagedInstanceManagementManagedInstanceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstanceManagementManagedInstanceGroup)(nil)).Elem()
}

func (o ManagedInstanceManagementManagedInstanceGroupOutput) ToManagedInstanceManagementManagedInstanceGroupOutput() ManagedInstanceManagementManagedInstanceGroupOutput {
	return o
}

func (o ManagedInstanceManagementManagedInstanceGroupOutput) ToManagedInstanceManagementManagedInstanceGroupOutputWithContext(ctx context.Context) ManagedInstanceManagementManagedInstanceGroupOutput {
	return o
}

// User friendly name
func (o ManagedInstanceManagementManagedInstanceGroupOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedInstanceManagementManagedInstanceGroup) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// unique identifier that is immutable on creation
func (o ManagedInstanceManagementManagedInstanceGroupOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedInstanceManagementManagedInstanceGroup) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ManagedInstanceManagementManagedInstanceGroupArrayOutput struct{ *pulumi.OutputState }

func (ManagedInstanceManagementManagedInstanceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedInstanceManagementManagedInstanceGroup)(nil)).Elem()
}

func (o ManagedInstanceManagementManagedInstanceGroupArrayOutput) ToManagedInstanceManagementManagedInstanceGroupArrayOutput() ManagedInstanceManagementManagedInstanceGroupArrayOutput {
	return o
}

func (o ManagedInstanceManagementManagedInstanceGroupArrayOutput) ToManagedInstanceManagementManagedInstanceGroupArrayOutputWithContext(ctx context.Context) ManagedInstanceManagementManagedInstanceGroupArrayOutput {
	return o
}

func (o ManagedInstanceManagementManagedInstanceGroupArrayOutput) Index(i pulumi.IntInput) ManagedInstanceManagementManagedInstanceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedInstanceManagementManagedInstanceGroup {
		return vs[0].([]ManagedInstanceManagementManagedInstanceGroup)[vs[1].(int)]
	}).(ManagedInstanceManagementManagedInstanceGroupOutput)
}

type ManagedInstanceManagementParentSoftwareSource struct {
	// software source identifier
	Id *string `pulumi:"id"`
	// software source name
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Name *string `pulumi:"name"`
}

// ManagedInstanceManagementParentSoftwareSourceInput is an input type that accepts ManagedInstanceManagementParentSoftwareSourceArgs and ManagedInstanceManagementParentSoftwareSourceOutput values.
// You can construct a concrete instance of `ManagedInstanceManagementParentSoftwareSourceInput` via:
//
//	ManagedInstanceManagementParentSoftwareSourceArgs{...}
type ManagedInstanceManagementParentSoftwareSourceInput interface {
	pulumi.Input

	ToManagedInstanceManagementParentSoftwareSourceOutput() ManagedInstanceManagementParentSoftwareSourceOutput
	ToManagedInstanceManagementParentSoftwareSourceOutputWithContext(context.Context) ManagedInstanceManagementParentSoftwareSourceOutput
}

type ManagedInstanceManagementParentSoftwareSourceArgs struct {
	// software source identifier
	Id pulumi.StringPtrInput `pulumi:"id"`
	// software source name
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ManagedInstanceManagementParentSoftwareSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstanceManagementParentSoftwareSource)(nil)).Elem()
}

func (i ManagedInstanceManagementParentSoftwareSourceArgs) ToManagedInstanceManagementParentSoftwareSourceOutput() ManagedInstanceManagementParentSoftwareSourceOutput {
	return i.ToManagedInstanceManagementParentSoftwareSourceOutputWithContext(context.Background())
}

func (i ManagedInstanceManagementParentSoftwareSourceArgs) ToManagedInstanceManagementParentSoftwareSourceOutputWithContext(ctx context.Context) ManagedInstanceManagementParentSoftwareSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceManagementParentSoftwareSourceOutput)
}

func (i ManagedInstanceManagementParentSoftwareSourceArgs) ToManagedInstanceManagementParentSoftwareSourcePtrOutput() ManagedInstanceManagementParentSoftwareSourcePtrOutput {
	return i.ToManagedInstanceManagementParentSoftwareSourcePtrOutputWithContext(context.Background())
}

func (i ManagedInstanceManagementParentSoftwareSourceArgs) ToManagedInstanceManagementParentSoftwareSourcePtrOutputWithContext(ctx context.Context) ManagedInstanceManagementParentSoftwareSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceManagementParentSoftwareSourceOutput).ToManagedInstanceManagementParentSoftwareSourcePtrOutputWithContext(ctx)
}

// ManagedInstanceManagementParentSoftwareSourcePtrInput is an input type that accepts ManagedInstanceManagementParentSoftwareSourceArgs, ManagedInstanceManagementParentSoftwareSourcePtr and ManagedInstanceManagementParentSoftwareSourcePtrOutput values.
// You can construct a concrete instance of `ManagedInstanceManagementParentSoftwareSourcePtrInput` via:
//
//	        ManagedInstanceManagementParentSoftwareSourceArgs{...}
//
//	or:
//
//	        nil
type ManagedInstanceManagementParentSoftwareSourcePtrInput interface {
	pulumi.Input

	ToManagedInstanceManagementParentSoftwareSourcePtrOutput() ManagedInstanceManagementParentSoftwareSourcePtrOutput
	ToManagedInstanceManagementParentSoftwareSourcePtrOutputWithContext(context.Context) ManagedInstanceManagementParentSoftwareSourcePtrOutput
}

type managedInstanceManagementParentSoftwareSourcePtrType ManagedInstanceManagementParentSoftwareSourceArgs

func ManagedInstanceManagementParentSoftwareSourcePtr(v *ManagedInstanceManagementParentSoftwareSourceArgs) ManagedInstanceManagementParentSoftwareSourcePtrInput {
	return (*managedInstanceManagementParentSoftwareSourcePtrType)(v)
}

func (*managedInstanceManagementParentSoftwareSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedInstanceManagementParentSoftwareSource)(nil)).Elem()
}

func (i *managedInstanceManagementParentSoftwareSourcePtrType) ToManagedInstanceManagementParentSoftwareSourcePtrOutput() ManagedInstanceManagementParentSoftwareSourcePtrOutput {
	return i.ToManagedInstanceManagementParentSoftwareSourcePtrOutputWithContext(context.Background())
}

func (i *managedInstanceManagementParentSoftwareSourcePtrType) ToManagedInstanceManagementParentSoftwareSourcePtrOutputWithContext(ctx context.Context) ManagedInstanceManagementParentSoftwareSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceManagementParentSoftwareSourcePtrOutput)
}

type ManagedInstanceManagementParentSoftwareSourceOutput struct{ *pulumi.OutputState }

func (ManagedInstanceManagementParentSoftwareSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstanceManagementParentSoftwareSource)(nil)).Elem()
}

func (o ManagedInstanceManagementParentSoftwareSourceOutput) ToManagedInstanceManagementParentSoftwareSourceOutput() ManagedInstanceManagementParentSoftwareSourceOutput {
	return o
}

func (o ManagedInstanceManagementParentSoftwareSourceOutput) ToManagedInstanceManagementParentSoftwareSourceOutputWithContext(ctx context.Context) ManagedInstanceManagementParentSoftwareSourceOutput {
	return o
}

func (o ManagedInstanceManagementParentSoftwareSourceOutput) ToManagedInstanceManagementParentSoftwareSourcePtrOutput() ManagedInstanceManagementParentSoftwareSourcePtrOutput {
	return o.ToManagedInstanceManagementParentSoftwareSourcePtrOutputWithContext(context.Background())
}

func (o ManagedInstanceManagementParentSoftwareSourceOutput) ToManagedInstanceManagementParentSoftwareSourcePtrOutputWithContext(ctx context.Context) ManagedInstanceManagementParentSoftwareSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedInstanceManagementParentSoftwareSource) *ManagedInstanceManagementParentSoftwareSource {
		return &v
	}).(ManagedInstanceManagementParentSoftwareSourcePtrOutput)
}

// software source identifier
func (o ManagedInstanceManagementParentSoftwareSourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedInstanceManagementParentSoftwareSource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// software source name
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ManagedInstanceManagementParentSoftwareSourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedInstanceManagementParentSoftwareSource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ManagedInstanceManagementParentSoftwareSourcePtrOutput struct{ *pulumi.OutputState }

func (ManagedInstanceManagementParentSoftwareSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedInstanceManagementParentSoftwareSource)(nil)).Elem()
}

func (o ManagedInstanceManagementParentSoftwareSourcePtrOutput) ToManagedInstanceManagementParentSoftwareSourcePtrOutput() ManagedInstanceManagementParentSoftwareSourcePtrOutput {
	return o
}

func (o ManagedInstanceManagementParentSoftwareSourcePtrOutput) ToManagedInstanceManagementParentSoftwareSourcePtrOutputWithContext(ctx context.Context) ManagedInstanceManagementParentSoftwareSourcePtrOutput {
	return o
}

func (o ManagedInstanceManagementParentSoftwareSourcePtrOutput) Elem() ManagedInstanceManagementParentSoftwareSourceOutput {
	return o.ApplyT(func(v *ManagedInstanceManagementParentSoftwareSource) ManagedInstanceManagementParentSoftwareSource {
		if v != nil {
			return *v
		}
		var ret ManagedInstanceManagementParentSoftwareSource
		return ret
	}).(ManagedInstanceManagementParentSoftwareSourceOutput)
}

// software source identifier
func (o ManagedInstanceManagementParentSoftwareSourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedInstanceManagementParentSoftwareSource) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// software source name
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ManagedInstanceManagementParentSoftwareSourcePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedInstanceManagementParentSoftwareSource) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type ManagedInstanceParentSoftwareSource struct {
	// software source identifier
	Id *string `pulumi:"id"`
	// software source name
	Name *string `pulumi:"name"`
}

// ManagedInstanceParentSoftwareSourceInput is an input type that accepts ManagedInstanceParentSoftwareSourceArgs and ManagedInstanceParentSoftwareSourceOutput values.
// You can construct a concrete instance of `ManagedInstanceParentSoftwareSourceInput` via:
//
//	ManagedInstanceParentSoftwareSourceArgs{...}
type ManagedInstanceParentSoftwareSourceInput interface {
	pulumi.Input

	ToManagedInstanceParentSoftwareSourceOutput() ManagedInstanceParentSoftwareSourceOutput
	ToManagedInstanceParentSoftwareSourceOutputWithContext(context.Context) ManagedInstanceParentSoftwareSourceOutput
}

type ManagedInstanceParentSoftwareSourceArgs struct {
	// software source identifier
	Id pulumi.StringPtrInput `pulumi:"id"`
	// software source name
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ManagedInstanceParentSoftwareSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstanceParentSoftwareSource)(nil)).Elem()
}

func (i ManagedInstanceParentSoftwareSourceArgs) ToManagedInstanceParentSoftwareSourceOutput() ManagedInstanceParentSoftwareSourceOutput {
	return i.ToManagedInstanceParentSoftwareSourceOutputWithContext(context.Background())
}

func (i ManagedInstanceParentSoftwareSourceArgs) ToManagedInstanceParentSoftwareSourceOutputWithContext(ctx context.Context) ManagedInstanceParentSoftwareSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceParentSoftwareSourceOutput)
}

// ManagedInstanceParentSoftwareSourceArrayInput is an input type that accepts ManagedInstanceParentSoftwareSourceArray and ManagedInstanceParentSoftwareSourceArrayOutput values.
// You can construct a concrete instance of `ManagedInstanceParentSoftwareSourceArrayInput` via:
//
//	ManagedInstanceParentSoftwareSourceArray{ ManagedInstanceParentSoftwareSourceArgs{...} }
type ManagedInstanceParentSoftwareSourceArrayInput interface {
	pulumi.Input

	ToManagedInstanceParentSoftwareSourceArrayOutput() ManagedInstanceParentSoftwareSourceArrayOutput
	ToManagedInstanceParentSoftwareSourceArrayOutputWithContext(context.Context) ManagedInstanceParentSoftwareSourceArrayOutput
}

type ManagedInstanceParentSoftwareSourceArray []ManagedInstanceParentSoftwareSourceInput

func (ManagedInstanceParentSoftwareSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedInstanceParentSoftwareSource)(nil)).Elem()
}

func (i ManagedInstanceParentSoftwareSourceArray) ToManagedInstanceParentSoftwareSourceArrayOutput() ManagedInstanceParentSoftwareSourceArrayOutput {
	return i.ToManagedInstanceParentSoftwareSourceArrayOutputWithContext(context.Background())
}

func (i ManagedInstanceParentSoftwareSourceArray) ToManagedInstanceParentSoftwareSourceArrayOutputWithContext(ctx context.Context) ManagedInstanceParentSoftwareSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceParentSoftwareSourceArrayOutput)
}

type ManagedInstanceParentSoftwareSourceOutput struct{ *pulumi.OutputState }

func (ManagedInstanceParentSoftwareSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstanceParentSoftwareSource)(nil)).Elem()
}

func (o ManagedInstanceParentSoftwareSourceOutput) ToManagedInstanceParentSoftwareSourceOutput() ManagedInstanceParentSoftwareSourceOutput {
	return o
}

func (o ManagedInstanceParentSoftwareSourceOutput) ToManagedInstanceParentSoftwareSourceOutputWithContext(ctx context.Context) ManagedInstanceParentSoftwareSourceOutput {
	return o
}

// software source identifier
func (o ManagedInstanceParentSoftwareSourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedInstanceParentSoftwareSource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// software source name
func (o ManagedInstanceParentSoftwareSourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedInstanceParentSoftwareSource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ManagedInstanceParentSoftwareSourceArrayOutput struct{ *pulumi.OutputState }

func (ManagedInstanceParentSoftwareSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedInstanceParentSoftwareSource)(nil)).Elem()
}

func (o ManagedInstanceParentSoftwareSourceArrayOutput) ToManagedInstanceParentSoftwareSourceArrayOutput() ManagedInstanceParentSoftwareSourceArrayOutput {
	return o
}

func (o ManagedInstanceParentSoftwareSourceArrayOutput) ToManagedInstanceParentSoftwareSourceArrayOutputWithContext(ctx context.Context) ManagedInstanceParentSoftwareSourceArrayOutput {
	return o
}

func (o ManagedInstanceParentSoftwareSourceArrayOutput) Index(i pulumi.IntInput) ManagedInstanceParentSoftwareSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedInstanceParentSoftwareSource {
		return vs[0].([]ManagedInstanceParentSoftwareSource)[vs[1].(int)]
	}).(ManagedInstanceParentSoftwareSourceOutput)
}

type SoftwareSourceAssociatedManagedInstance struct {
	// (Updatable) User friendly name for the software source
	DisplayName *string `pulumi:"displayName"`
	// OCID for the Software Source
	Id *string `pulumi:"id"`
}

// SoftwareSourceAssociatedManagedInstanceInput is an input type that accepts SoftwareSourceAssociatedManagedInstanceArgs and SoftwareSourceAssociatedManagedInstanceOutput values.
// You can construct a concrete instance of `SoftwareSourceAssociatedManagedInstanceInput` via:
//
//	SoftwareSourceAssociatedManagedInstanceArgs{...}
type SoftwareSourceAssociatedManagedInstanceInput interface {
	pulumi.Input

	ToSoftwareSourceAssociatedManagedInstanceOutput() SoftwareSourceAssociatedManagedInstanceOutput
	ToSoftwareSourceAssociatedManagedInstanceOutputWithContext(context.Context) SoftwareSourceAssociatedManagedInstanceOutput
}

type SoftwareSourceAssociatedManagedInstanceArgs struct {
	// (Updatable) User friendly name for the software source
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// OCID for the Software Source
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (SoftwareSourceAssociatedManagedInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftwareSourceAssociatedManagedInstance)(nil)).Elem()
}

func (i SoftwareSourceAssociatedManagedInstanceArgs) ToSoftwareSourceAssociatedManagedInstanceOutput() SoftwareSourceAssociatedManagedInstanceOutput {
	return i.ToSoftwareSourceAssociatedManagedInstanceOutputWithContext(context.Background())
}

func (i SoftwareSourceAssociatedManagedInstanceArgs) ToSoftwareSourceAssociatedManagedInstanceOutputWithContext(ctx context.Context) SoftwareSourceAssociatedManagedInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftwareSourceAssociatedManagedInstanceOutput)
}

// SoftwareSourceAssociatedManagedInstanceArrayInput is an input type that accepts SoftwareSourceAssociatedManagedInstanceArray and SoftwareSourceAssociatedManagedInstanceArrayOutput values.
// You can construct a concrete instance of `SoftwareSourceAssociatedManagedInstanceArrayInput` via:
//
//	SoftwareSourceAssociatedManagedInstanceArray{ SoftwareSourceAssociatedManagedInstanceArgs{...} }
type SoftwareSourceAssociatedManagedInstanceArrayInput interface {
	pulumi.Input

	ToSoftwareSourceAssociatedManagedInstanceArrayOutput() SoftwareSourceAssociatedManagedInstanceArrayOutput
	ToSoftwareSourceAssociatedManagedInstanceArrayOutputWithContext(context.Context) SoftwareSourceAssociatedManagedInstanceArrayOutput
}

type SoftwareSourceAssociatedManagedInstanceArray []SoftwareSourceAssociatedManagedInstanceInput

func (SoftwareSourceAssociatedManagedInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SoftwareSourceAssociatedManagedInstance)(nil)).Elem()
}

func (i SoftwareSourceAssociatedManagedInstanceArray) ToSoftwareSourceAssociatedManagedInstanceArrayOutput() SoftwareSourceAssociatedManagedInstanceArrayOutput {
	return i.ToSoftwareSourceAssociatedManagedInstanceArrayOutputWithContext(context.Background())
}

func (i SoftwareSourceAssociatedManagedInstanceArray) ToSoftwareSourceAssociatedManagedInstanceArrayOutputWithContext(ctx context.Context) SoftwareSourceAssociatedManagedInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftwareSourceAssociatedManagedInstanceArrayOutput)
}

type SoftwareSourceAssociatedManagedInstanceOutput struct{ *pulumi.OutputState }

func (SoftwareSourceAssociatedManagedInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftwareSourceAssociatedManagedInstance)(nil)).Elem()
}

func (o SoftwareSourceAssociatedManagedInstanceOutput) ToSoftwareSourceAssociatedManagedInstanceOutput() SoftwareSourceAssociatedManagedInstanceOutput {
	return o
}

func (o SoftwareSourceAssociatedManagedInstanceOutput) ToSoftwareSourceAssociatedManagedInstanceOutputWithContext(ctx context.Context) SoftwareSourceAssociatedManagedInstanceOutput {
	return o
}

// (Updatable) User friendly name for the software source
func (o SoftwareSourceAssociatedManagedInstanceOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SoftwareSourceAssociatedManagedInstance) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// OCID for the Software Source
func (o SoftwareSourceAssociatedManagedInstanceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SoftwareSourceAssociatedManagedInstance) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SoftwareSourceAssociatedManagedInstanceArrayOutput struct{ *pulumi.OutputState }

func (SoftwareSourceAssociatedManagedInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SoftwareSourceAssociatedManagedInstance)(nil)).Elem()
}

func (o SoftwareSourceAssociatedManagedInstanceArrayOutput) ToSoftwareSourceAssociatedManagedInstanceArrayOutput() SoftwareSourceAssociatedManagedInstanceArrayOutput {
	return o
}

func (o SoftwareSourceAssociatedManagedInstanceArrayOutput) ToSoftwareSourceAssociatedManagedInstanceArrayOutputWithContext(ctx context.Context) SoftwareSourceAssociatedManagedInstanceArrayOutput {
	return o
}

func (o SoftwareSourceAssociatedManagedInstanceArrayOutput) Index(i pulumi.IntInput) SoftwareSourceAssociatedManagedInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SoftwareSourceAssociatedManagedInstance {
		return vs[0].([]SoftwareSourceAssociatedManagedInstance)[vs[1].(int)]
	}).(SoftwareSourceAssociatedManagedInstanceOutput)
}

type GetManagedInstanceAutonomouse struct {
	// True if daily updates are enabled
	IsAutoUpdateEnabled bool `pulumi:"isAutoUpdateEnabled"`
}

// GetManagedInstanceAutonomouseInput is an input type that accepts GetManagedInstanceAutonomouseArgs and GetManagedInstanceAutonomouseOutput values.
// You can construct a concrete instance of `GetManagedInstanceAutonomouseInput` via:
//
//	GetManagedInstanceAutonomouseArgs{...}
type GetManagedInstanceAutonomouseInput interface {
	pulumi.Input

	ToGetManagedInstanceAutonomouseOutput() GetManagedInstanceAutonomouseOutput
	ToGetManagedInstanceAutonomouseOutputWithContext(context.Context) GetManagedInstanceAutonomouseOutput
}

type GetManagedInstanceAutonomouseArgs struct {
	// True if daily updates are enabled
	IsAutoUpdateEnabled pulumi.BoolInput `pulumi:"isAutoUpdateEnabled"`
}

func (GetManagedInstanceAutonomouseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceAutonomouse)(nil)).Elem()
}

func (i GetManagedInstanceAutonomouseArgs) ToGetManagedInstanceAutonomouseOutput() GetManagedInstanceAutonomouseOutput {
	return i.ToGetManagedInstanceAutonomouseOutputWithContext(context.Background())
}

func (i GetManagedInstanceAutonomouseArgs) ToGetManagedInstanceAutonomouseOutputWithContext(ctx context.Context) GetManagedInstanceAutonomouseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceAutonomouseOutput)
}

// GetManagedInstanceAutonomouseArrayInput is an input type that accepts GetManagedInstanceAutonomouseArray and GetManagedInstanceAutonomouseArrayOutput values.
// You can construct a concrete instance of `GetManagedInstanceAutonomouseArrayInput` via:
//
//	GetManagedInstanceAutonomouseArray{ GetManagedInstanceAutonomouseArgs{...} }
type GetManagedInstanceAutonomouseArrayInput interface {
	pulumi.Input

	ToGetManagedInstanceAutonomouseArrayOutput() GetManagedInstanceAutonomouseArrayOutput
	ToGetManagedInstanceAutonomouseArrayOutputWithContext(context.Context) GetManagedInstanceAutonomouseArrayOutput
}

type GetManagedInstanceAutonomouseArray []GetManagedInstanceAutonomouseInput

func (GetManagedInstanceAutonomouseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceAutonomouse)(nil)).Elem()
}

func (i GetManagedInstanceAutonomouseArray) ToGetManagedInstanceAutonomouseArrayOutput() GetManagedInstanceAutonomouseArrayOutput {
	return i.ToGetManagedInstanceAutonomouseArrayOutputWithContext(context.Background())
}

func (i GetManagedInstanceAutonomouseArray) ToGetManagedInstanceAutonomouseArrayOutputWithContext(ctx context.Context) GetManagedInstanceAutonomouseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceAutonomouseArrayOutput)
}

type GetManagedInstanceAutonomouseOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceAutonomouseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceAutonomouse)(nil)).Elem()
}

func (o GetManagedInstanceAutonomouseOutput) ToGetManagedInstanceAutonomouseOutput() GetManagedInstanceAutonomouseOutput {
	return o
}

func (o GetManagedInstanceAutonomouseOutput) ToGetManagedInstanceAutonomouseOutputWithContext(ctx context.Context) GetManagedInstanceAutonomouseOutput {
	return o
}

// True if daily updates are enabled
func (o GetManagedInstanceAutonomouseOutput) IsAutoUpdateEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetManagedInstanceAutonomouse) bool { return v.IsAutoUpdateEnabled }).(pulumi.BoolOutput)
}

type GetManagedInstanceAutonomouseArrayOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceAutonomouseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceAutonomouse)(nil)).Elem()
}

func (o GetManagedInstanceAutonomouseArrayOutput) ToGetManagedInstanceAutonomouseArrayOutput() GetManagedInstanceAutonomouseArrayOutput {
	return o
}

func (o GetManagedInstanceAutonomouseArrayOutput) ToGetManagedInstanceAutonomouseArrayOutputWithContext(ctx context.Context) GetManagedInstanceAutonomouseArrayOutput {
	return o
}

func (o GetManagedInstanceAutonomouseArrayOutput) Index(i pulumi.IntInput) GetManagedInstanceAutonomouseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedInstanceAutonomouse {
		return vs[0].([]GetManagedInstanceAutonomouse)[vs[1].(int)]
	}).(GetManagedInstanceAutonomouseOutput)
}

type GetManagedInstanceChildSoftwareSource struct {
	// software source identifier
	Id string `pulumi:"id"`
	// software source name
	Name string `pulumi:"name"`
}

// GetManagedInstanceChildSoftwareSourceInput is an input type that accepts GetManagedInstanceChildSoftwareSourceArgs and GetManagedInstanceChildSoftwareSourceOutput values.
// You can construct a concrete instance of `GetManagedInstanceChildSoftwareSourceInput` via:
//
//	GetManagedInstanceChildSoftwareSourceArgs{...}
type GetManagedInstanceChildSoftwareSourceInput interface {
	pulumi.Input

	ToGetManagedInstanceChildSoftwareSourceOutput() GetManagedInstanceChildSoftwareSourceOutput
	ToGetManagedInstanceChildSoftwareSourceOutputWithContext(context.Context) GetManagedInstanceChildSoftwareSourceOutput
}

type GetManagedInstanceChildSoftwareSourceArgs struct {
	// software source identifier
	Id pulumi.StringInput `pulumi:"id"`
	// software source name
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetManagedInstanceChildSoftwareSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceChildSoftwareSource)(nil)).Elem()
}

func (i GetManagedInstanceChildSoftwareSourceArgs) ToGetManagedInstanceChildSoftwareSourceOutput() GetManagedInstanceChildSoftwareSourceOutput {
	return i.ToGetManagedInstanceChildSoftwareSourceOutputWithContext(context.Background())
}

func (i GetManagedInstanceChildSoftwareSourceArgs) ToGetManagedInstanceChildSoftwareSourceOutputWithContext(ctx context.Context) GetManagedInstanceChildSoftwareSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceChildSoftwareSourceOutput)
}

// GetManagedInstanceChildSoftwareSourceArrayInput is an input type that accepts GetManagedInstanceChildSoftwareSourceArray and GetManagedInstanceChildSoftwareSourceArrayOutput values.
// You can construct a concrete instance of `GetManagedInstanceChildSoftwareSourceArrayInput` via:
//
//	GetManagedInstanceChildSoftwareSourceArray{ GetManagedInstanceChildSoftwareSourceArgs{...} }
type GetManagedInstanceChildSoftwareSourceArrayInput interface {
	pulumi.Input

	ToGetManagedInstanceChildSoftwareSourceArrayOutput() GetManagedInstanceChildSoftwareSourceArrayOutput
	ToGetManagedInstanceChildSoftwareSourceArrayOutputWithContext(context.Context) GetManagedInstanceChildSoftwareSourceArrayOutput
}

type GetManagedInstanceChildSoftwareSourceArray []GetManagedInstanceChildSoftwareSourceInput

func (GetManagedInstanceChildSoftwareSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceChildSoftwareSource)(nil)).Elem()
}

func (i GetManagedInstanceChildSoftwareSourceArray) ToGetManagedInstanceChildSoftwareSourceArrayOutput() GetManagedInstanceChildSoftwareSourceArrayOutput {
	return i.ToGetManagedInstanceChildSoftwareSourceArrayOutputWithContext(context.Background())
}

func (i GetManagedInstanceChildSoftwareSourceArray) ToGetManagedInstanceChildSoftwareSourceArrayOutputWithContext(ctx context.Context) GetManagedInstanceChildSoftwareSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceChildSoftwareSourceArrayOutput)
}

type GetManagedInstanceChildSoftwareSourceOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceChildSoftwareSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceChildSoftwareSource)(nil)).Elem()
}

func (o GetManagedInstanceChildSoftwareSourceOutput) ToGetManagedInstanceChildSoftwareSourceOutput() GetManagedInstanceChildSoftwareSourceOutput {
	return o
}

func (o GetManagedInstanceChildSoftwareSourceOutput) ToGetManagedInstanceChildSoftwareSourceOutputWithContext(ctx context.Context) GetManagedInstanceChildSoftwareSourceOutput {
	return o
}

// software source identifier
func (o GetManagedInstanceChildSoftwareSourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceChildSoftwareSource) string { return v.Id }).(pulumi.StringOutput)
}

// software source name
func (o GetManagedInstanceChildSoftwareSourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceChildSoftwareSource) string { return v.Name }).(pulumi.StringOutput)
}

type GetManagedInstanceChildSoftwareSourceArrayOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceChildSoftwareSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceChildSoftwareSource)(nil)).Elem()
}

func (o GetManagedInstanceChildSoftwareSourceArrayOutput) ToGetManagedInstanceChildSoftwareSourceArrayOutput() GetManagedInstanceChildSoftwareSourceArrayOutput {
	return o
}

func (o GetManagedInstanceChildSoftwareSourceArrayOutput) ToGetManagedInstanceChildSoftwareSourceArrayOutputWithContext(ctx context.Context) GetManagedInstanceChildSoftwareSourceArrayOutput {
	return o
}

func (o GetManagedInstanceChildSoftwareSourceArrayOutput) Index(i pulumi.IntInput) GetManagedInstanceChildSoftwareSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedInstanceChildSoftwareSource {
		return vs[0].([]GetManagedInstanceChildSoftwareSource)[vs[1].(int)]
	}).(GetManagedInstanceChildSoftwareSourceOutput)
}

type GetManagedInstanceGroupManagedInstance struct {
	// User friendly name
	DisplayName string `pulumi:"displayName"`
	// unique identifier that is immutable on creation
	Id string `pulumi:"id"`
}

// GetManagedInstanceGroupManagedInstanceInput is an input type that accepts GetManagedInstanceGroupManagedInstanceArgs and GetManagedInstanceGroupManagedInstanceOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupManagedInstanceInput` via:
//
//	GetManagedInstanceGroupManagedInstanceArgs{...}
type GetManagedInstanceGroupManagedInstanceInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupManagedInstanceOutput() GetManagedInstanceGroupManagedInstanceOutput
	ToGetManagedInstanceGroupManagedInstanceOutputWithContext(context.Context) GetManagedInstanceGroupManagedInstanceOutput
}

type GetManagedInstanceGroupManagedInstanceArgs struct {
	// User friendly name
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// unique identifier that is immutable on creation
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetManagedInstanceGroupManagedInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupManagedInstance)(nil)).Elem()
}

func (i GetManagedInstanceGroupManagedInstanceArgs) ToGetManagedInstanceGroupManagedInstanceOutput() GetManagedInstanceGroupManagedInstanceOutput {
	return i.ToGetManagedInstanceGroupManagedInstanceOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupManagedInstanceArgs) ToGetManagedInstanceGroupManagedInstanceOutputWithContext(ctx context.Context) GetManagedInstanceGroupManagedInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupManagedInstanceOutput)
}

// GetManagedInstanceGroupManagedInstanceArrayInput is an input type that accepts GetManagedInstanceGroupManagedInstanceArray and GetManagedInstanceGroupManagedInstanceArrayOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupManagedInstanceArrayInput` via:
//
//	GetManagedInstanceGroupManagedInstanceArray{ GetManagedInstanceGroupManagedInstanceArgs{...} }
type GetManagedInstanceGroupManagedInstanceArrayInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupManagedInstanceArrayOutput() GetManagedInstanceGroupManagedInstanceArrayOutput
	ToGetManagedInstanceGroupManagedInstanceArrayOutputWithContext(context.Context) GetManagedInstanceGroupManagedInstanceArrayOutput
}

type GetManagedInstanceGroupManagedInstanceArray []GetManagedInstanceGroupManagedInstanceInput

func (GetManagedInstanceGroupManagedInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupManagedInstance)(nil)).Elem()
}

func (i GetManagedInstanceGroupManagedInstanceArray) ToGetManagedInstanceGroupManagedInstanceArrayOutput() GetManagedInstanceGroupManagedInstanceArrayOutput {
	return i.ToGetManagedInstanceGroupManagedInstanceArrayOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupManagedInstanceArray) ToGetManagedInstanceGroupManagedInstanceArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupManagedInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupManagedInstanceArrayOutput)
}

type GetManagedInstanceGroupManagedInstanceOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupManagedInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupManagedInstance)(nil)).Elem()
}

func (o GetManagedInstanceGroupManagedInstanceOutput) ToGetManagedInstanceGroupManagedInstanceOutput() GetManagedInstanceGroupManagedInstanceOutput {
	return o
}

func (o GetManagedInstanceGroupManagedInstanceOutput) ToGetManagedInstanceGroupManagedInstanceOutputWithContext(ctx context.Context) GetManagedInstanceGroupManagedInstanceOutput {
	return o
}

// User friendly name
func (o GetManagedInstanceGroupManagedInstanceOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupManagedInstance) string { return v.DisplayName }).(pulumi.StringOutput)
}

// unique identifier that is immutable on creation
func (o GetManagedInstanceGroupManagedInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupManagedInstance) string { return v.Id }).(pulumi.StringOutput)
}

type GetManagedInstanceGroupManagedInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupManagedInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupManagedInstance)(nil)).Elem()
}

func (o GetManagedInstanceGroupManagedInstanceArrayOutput) ToGetManagedInstanceGroupManagedInstanceArrayOutput() GetManagedInstanceGroupManagedInstanceArrayOutput {
	return o
}

func (o GetManagedInstanceGroupManagedInstanceArrayOutput) ToGetManagedInstanceGroupManagedInstanceArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupManagedInstanceArrayOutput {
	return o
}

func (o GetManagedInstanceGroupManagedInstanceArrayOutput) Index(i pulumi.IntInput) GetManagedInstanceGroupManagedInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedInstanceGroupManagedInstance {
		return vs[0].([]GetManagedInstanceGroupManagedInstance)[vs[1].(int)]
	}).(GetManagedInstanceGroupManagedInstanceOutput)
}

type GetManagedInstanceGroupsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetManagedInstanceGroupsFilterInput is an input type that accepts GetManagedInstanceGroupsFilterArgs and GetManagedInstanceGroupsFilterOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupsFilterInput` via:
//
//	GetManagedInstanceGroupsFilterArgs{...}
type GetManagedInstanceGroupsFilterInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupsFilterOutput() GetManagedInstanceGroupsFilterOutput
	ToGetManagedInstanceGroupsFilterOutputWithContext(context.Context) GetManagedInstanceGroupsFilterOutput
}

type GetManagedInstanceGroupsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetManagedInstanceGroupsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupsFilter)(nil)).Elem()
}

func (i GetManagedInstanceGroupsFilterArgs) ToGetManagedInstanceGroupsFilterOutput() GetManagedInstanceGroupsFilterOutput {
	return i.ToGetManagedInstanceGroupsFilterOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupsFilterArgs) ToGetManagedInstanceGroupsFilterOutputWithContext(ctx context.Context) GetManagedInstanceGroupsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupsFilterOutput)
}

// GetManagedInstanceGroupsFilterArrayInput is an input type that accepts GetManagedInstanceGroupsFilterArray and GetManagedInstanceGroupsFilterArrayOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupsFilterArrayInput` via:
//
//	GetManagedInstanceGroupsFilterArray{ GetManagedInstanceGroupsFilterArgs{...} }
type GetManagedInstanceGroupsFilterArrayInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupsFilterArrayOutput() GetManagedInstanceGroupsFilterArrayOutput
	ToGetManagedInstanceGroupsFilterArrayOutputWithContext(context.Context) GetManagedInstanceGroupsFilterArrayOutput
}

type GetManagedInstanceGroupsFilterArray []GetManagedInstanceGroupsFilterInput

func (GetManagedInstanceGroupsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupsFilter)(nil)).Elem()
}

func (i GetManagedInstanceGroupsFilterArray) ToGetManagedInstanceGroupsFilterArrayOutput() GetManagedInstanceGroupsFilterArrayOutput {
	return i.ToGetManagedInstanceGroupsFilterArrayOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupsFilterArray) ToGetManagedInstanceGroupsFilterArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupsFilterArrayOutput)
}

type GetManagedInstanceGroupsFilterOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupsFilter)(nil)).Elem()
}

func (o GetManagedInstanceGroupsFilterOutput) ToGetManagedInstanceGroupsFilterOutput() GetManagedInstanceGroupsFilterOutput {
	return o
}

func (o GetManagedInstanceGroupsFilterOutput) ToGetManagedInstanceGroupsFilterOutputWithContext(ctx context.Context) GetManagedInstanceGroupsFilterOutput {
	return o
}

func (o GetManagedInstanceGroupsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetManagedInstanceGroupsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetManagedInstanceGroupsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetManagedInstanceGroupsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupsFilter)(nil)).Elem()
}

func (o GetManagedInstanceGroupsFilterArrayOutput) ToGetManagedInstanceGroupsFilterArrayOutput() GetManagedInstanceGroupsFilterArrayOutput {
	return o
}

func (o GetManagedInstanceGroupsFilterArrayOutput) ToGetManagedInstanceGroupsFilterArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupsFilterArrayOutput {
	return o
}

func (o GetManagedInstanceGroupsFilterArrayOutput) Index(i pulumi.IntInput) GetManagedInstanceGroupsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedInstanceGroupsFilter {
		return vs[0].([]GetManagedInstanceGroupsFilter)[vs[1].(int)]
	}).(GetManagedInstanceGroupsFilterOutput)
}

type GetManagedInstanceGroupsManagedInstanceGroup struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Information specified by the user about the managed instance group
	Description string `pulumi:"description"`
	// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// unique identifier that is immutable on creation
	Id                   string   `pulumi:"id"`
	ManagedInstanceCount int      `pulumi:"managedInstanceCount"`
	ManagedInstanceIds   []string `pulumi:"managedInstanceIds"`
	// list of Managed Instances in the group
	ManagedInstances []GetManagedInstanceGroupsManagedInstanceGroupManagedInstance `pulumi:"managedInstances"`
	// The OS family for which to list resources.
	OsFamily string `pulumi:"osFamily"`
	// The current lifecycle state for the object.
	State string `pulumi:"state"`
}

// GetManagedInstanceGroupsManagedInstanceGroupInput is an input type that accepts GetManagedInstanceGroupsManagedInstanceGroupArgs and GetManagedInstanceGroupsManagedInstanceGroupOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupsManagedInstanceGroupInput` via:
//
//	GetManagedInstanceGroupsManagedInstanceGroupArgs{...}
type GetManagedInstanceGroupsManagedInstanceGroupInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupsManagedInstanceGroupOutput() GetManagedInstanceGroupsManagedInstanceGroupOutput
	ToGetManagedInstanceGroupsManagedInstanceGroupOutputWithContext(context.Context) GetManagedInstanceGroupsManagedInstanceGroupOutput
}

type GetManagedInstanceGroupsManagedInstanceGroupArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// Information specified by the user about the managed instance group
	Description pulumi.StringInput `pulumi:"description"`
	// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// unique identifier that is immutable on creation
	Id                   pulumi.StringInput      `pulumi:"id"`
	ManagedInstanceCount pulumi.IntInput         `pulumi:"managedInstanceCount"`
	ManagedInstanceIds   pulumi.StringArrayInput `pulumi:"managedInstanceIds"`
	// list of Managed Instances in the group
	ManagedInstances GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArrayInput `pulumi:"managedInstances"`
	// The OS family for which to list resources.
	OsFamily pulumi.StringInput `pulumi:"osFamily"`
	// The current lifecycle state for the object.
	State pulumi.StringInput `pulumi:"state"`
}

func (GetManagedInstanceGroupsManagedInstanceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupsManagedInstanceGroup)(nil)).Elem()
}

func (i GetManagedInstanceGroupsManagedInstanceGroupArgs) ToGetManagedInstanceGroupsManagedInstanceGroupOutput() GetManagedInstanceGroupsManagedInstanceGroupOutput {
	return i.ToGetManagedInstanceGroupsManagedInstanceGroupOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupsManagedInstanceGroupArgs) ToGetManagedInstanceGroupsManagedInstanceGroupOutputWithContext(ctx context.Context) GetManagedInstanceGroupsManagedInstanceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupsManagedInstanceGroupOutput)
}

// GetManagedInstanceGroupsManagedInstanceGroupArrayInput is an input type that accepts GetManagedInstanceGroupsManagedInstanceGroupArray and GetManagedInstanceGroupsManagedInstanceGroupArrayOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupsManagedInstanceGroupArrayInput` via:
//
//	GetManagedInstanceGroupsManagedInstanceGroupArray{ GetManagedInstanceGroupsManagedInstanceGroupArgs{...} }
type GetManagedInstanceGroupsManagedInstanceGroupArrayInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupsManagedInstanceGroupArrayOutput() GetManagedInstanceGroupsManagedInstanceGroupArrayOutput
	ToGetManagedInstanceGroupsManagedInstanceGroupArrayOutputWithContext(context.Context) GetManagedInstanceGroupsManagedInstanceGroupArrayOutput
}

type GetManagedInstanceGroupsManagedInstanceGroupArray []GetManagedInstanceGroupsManagedInstanceGroupInput

func (GetManagedInstanceGroupsManagedInstanceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupsManagedInstanceGroup)(nil)).Elem()
}

func (i GetManagedInstanceGroupsManagedInstanceGroupArray) ToGetManagedInstanceGroupsManagedInstanceGroupArrayOutput() GetManagedInstanceGroupsManagedInstanceGroupArrayOutput {
	return i.ToGetManagedInstanceGroupsManagedInstanceGroupArrayOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupsManagedInstanceGroupArray) ToGetManagedInstanceGroupsManagedInstanceGroupArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupsManagedInstanceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupsManagedInstanceGroupArrayOutput)
}

type GetManagedInstanceGroupsManagedInstanceGroupOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupsManagedInstanceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupsManagedInstanceGroup)(nil)).Elem()
}

func (o GetManagedInstanceGroupsManagedInstanceGroupOutput) ToGetManagedInstanceGroupsManagedInstanceGroupOutput() GetManagedInstanceGroupsManagedInstanceGroupOutput {
	return o
}

func (o GetManagedInstanceGroupsManagedInstanceGroupOutput) ToGetManagedInstanceGroupsManagedInstanceGroupOutputWithContext(ctx context.Context) GetManagedInstanceGroupsManagedInstanceGroupOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetManagedInstanceGroupsManagedInstanceGroupOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsManagedInstanceGroup) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetManagedInstanceGroupsManagedInstanceGroupOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsManagedInstanceGroup) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Information specified by the user about the managed instance group
func (o GetManagedInstanceGroupsManagedInstanceGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsManagedInstanceGroup) string { return v.Description }).(pulumi.StringOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
func (o GetManagedInstanceGroupsManagedInstanceGroupOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsManagedInstanceGroup) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetManagedInstanceGroupsManagedInstanceGroupOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsManagedInstanceGroup) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// unique identifier that is immutable on creation
func (o GetManagedInstanceGroupsManagedInstanceGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsManagedInstanceGroup) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetManagedInstanceGroupsManagedInstanceGroupOutput) ManagedInstanceCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsManagedInstanceGroup) int { return v.ManagedInstanceCount }).(pulumi.IntOutput)
}

func (o GetManagedInstanceGroupsManagedInstanceGroupOutput) ManagedInstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsManagedInstanceGroup) []string { return v.ManagedInstanceIds }).(pulumi.StringArrayOutput)
}

// list of Managed Instances in the group
func (o GetManagedInstanceGroupsManagedInstanceGroupOutput) ManagedInstances() GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsManagedInstanceGroup) []GetManagedInstanceGroupsManagedInstanceGroupManagedInstance {
		return v.ManagedInstances
	}).(GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArrayOutput)
}

// The OS family for which to list resources.
func (o GetManagedInstanceGroupsManagedInstanceGroupOutput) OsFamily() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsManagedInstanceGroup) string { return v.OsFamily }).(pulumi.StringOutput)
}

// The current lifecycle state for the object.
func (o GetManagedInstanceGroupsManagedInstanceGroupOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsManagedInstanceGroup) string { return v.State }).(pulumi.StringOutput)
}

type GetManagedInstanceGroupsManagedInstanceGroupArrayOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupsManagedInstanceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupsManagedInstanceGroup)(nil)).Elem()
}

func (o GetManagedInstanceGroupsManagedInstanceGroupArrayOutput) ToGetManagedInstanceGroupsManagedInstanceGroupArrayOutput() GetManagedInstanceGroupsManagedInstanceGroupArrayOutput {
	return o
}

func (o GetManagedInstanceGroupsManagedInstanceGroupArrayOutput) ToGetManagedInstanceGroupsManagedInstanceGroupArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupsManagedInstanceGroupArrayOutput {
	return o
}

func (o GetManagedInstanceGroupsManagedInstanceGroupArrayOutput) Index(i pulumi.IntInput) GetManagedInstanceGroupsManagedInstanceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedInstanceGroupsManagedInstanceGroup {
		return vs[0].([]GetManagedInstanceGroupsManagedInstanceGroup)[vs[1].(int)]
	}).(GetManagedInstanceGroupsManagedInstanceGroupOutput)
}

type GetManagedInstanceGroupsManagedInstanceGroupManagedInstance struct {
	// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName string `pulumi:"displayName"`
	// unique identifier that is immutable on creation
	Id string `pulumi:"id"`
}

// GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceInput is an input type that accepts GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArgs and GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceInput` via:
//
//	GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArgs{...}
type GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupsManagedInstanceGroupManagedInstanceOutput() GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceOutput
	ToGetManagedInstanceGroupsManagedInstanceGroupManagedInstanceOutputWithContext(context.Context) GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceOutput
}

type GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArgs struct {
	// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// unique identifier that is immutable on creation
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupsManagedInstanceGroupManagedInstance)(nil)).Elem()
}

func (i GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArgs) ToGetManagedInstanceGroupsManagedInstanceGroupManagedInstanceOutput() GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceOutput {
	return i.ToGetManagedInstanceGroupsManagedInstanceGroupManagedInstanceOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArgs) ToGetManagedInstanceGroupsManagedInstanceGroupManagedInstanceOutputWithContext(ctx context.Context) GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceOutput)
}

// GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArrayInput is an input type that accepts GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArray and GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArrayOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArrayInput` via:
//
//	GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArray{ GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArgs{...} }
type GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArrayInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArrayOutput() GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArrayOutput
	ToGetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArrayOutputWithContext(context.Context) GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArrayOutput
}

type GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArray []GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceInput

func (GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupsManagedInstanceGroupManagedInstance)(nil)).Elem()
}

func (i GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArray) ToGetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArrayOutput() GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArrayOutput {
	return i.ToGetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArrayOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArray) ToGetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArrayOutput)
}

type GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupsManagedInstanceGroupManagedInstance)(nil)).Elem()
}

func (o GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceOutput) ToGetManagedInstanceGroupsManagedInstanceGroupManagedInstanceOutput() GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceOutput {
	return o
}

func (o GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceOutput) ToGetManagedInstanceGroupsManagedInstanceGroupManagedInstanceOutputWithContext(ctx context.Context) GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceOutput {
	return o
}

// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
func (o GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsManagedInstanceGroupManagedInstance) string { return v.DisplayName }).(pulumi.StringOutput)
}

// unique identifier that is immutable on creation
func (o GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsManagedInstanceGroupManagedInstance) string { return v.Id }).(pulumi.StringOutput)
}

type GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupsManagedInstanceGroupManagedInstance)(nil)).Elem()
}

func (o GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArrayOutput) ToGetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArrayOutput() GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArrayOutput {
	return o
}

func (o GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArrayOutput) ToGetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArrayOutput {
	return o
}

func (o GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArrayOutput) Index(i pulumi.IntInput) GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedInstanceGroupsManagedInstanceGroupManagedInstance {
		return vs[0].([]GetManagedInstanceGroupsManagedInstanceGroupManagedInstance)[vs[1].(int)]
	}).(GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceOutput)
}

type GetManagedInstanceManagedInstanceGroup struct {
	// User friendly name
	DisplayName string `pulumi:"displayName"`
	// software source identifier
	Id string `pulumi:"id"`
}

// GetManagedInstanceManagedInstanceGroupInput is an input type that accepts GetManagedInstanceManagedInstanceGroupArgs and GetManagedInstanceManagedInstanceGroupOutput values.
// You can construct a concrete instance of `GetManagedInstanceManagedInstanceGroupInput` via:
//
//	GetManagedInstanceManagedInstanceGroupArgs{...}
type GetManagedInstanceManagedInstanceGroupInput interface {
	pulumi.Input

	ToGetManagedInstanceManagedInstanceGroupOutput() GetManagedInstanceManagedInstanceGroupOutput
	ToGetManagedInstanceManagedInstanceGroupOutputWithContext(context.Context) GetManagedInstanceManagedInstanceGroupOutput
}

type GetManagedInstanceManagedInstanceGroupArgs struct {
	// User friendly name
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// software source identifier
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetManagedInstanceManagedInstanceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceManagedInstanceGroup)(nil)).Elem()
}

func (i GetManagedInstanceManagedInstanceGroupArgs) ToGetManagedInstanceManagedInstanceGroupOutput() GetManagedInstanceManagedInstanceGroupOutput {
	return i.ToGetManagedInstanceManagedInstanceGroupOutputWithContext(context.Background())
}

func (i GetManagedInstanceManagedInstanceGroupArgs) ToGetManagedInstanceManagedInstanceGroupOutputWithContext(ctx context.Context) GetManagedInstanceManagedInstanceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceManagedInstanceGroupOutput)
}

// GetManagedInstanceManagedInstanceGroupArrayInput is an input type that accepts GetManagedInstanceManagedInstanceGroupArray and GetManagedInstanceManagedInstanceGroupArrayOutput values.
// You can construct a concrete instance of `GetManagedInstanceManagedInstanceGroupArrayInput` via:
//
//	GetManagedInstanceManagedInstanceGroupArray{ GetManagedInstanceManagedInstanceGroupArgs{...} }
type GetManagedInstanceManagedInstanceGroupArrayInput interface {
	pulumi.Input

	ToGetManagedInstanceManagedInstanceGroupArrayOutput() GetManagedInstanceManagedInstanceGroupArrayOutput
	ToGetManagedInstanceManagedInstanceGroupArrayOutputWithContext(context.Context) GetManagedInstanceManagedInstanceGroupArrayOutput
}

type GetManagedInstanceManagedInstanceGroupArray []GetManagedInstanceManagedInstanceGroupInput

func (GetManagedInstanceManagedInstanceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceManagedInstanceGroup)(nil)).Elem()
}

func (i GetManagedInstanceManagedInstanceGroupArray) ToGetManagedInstanceManagedInstanceGroupArrayOutput() GetManagedInstanceManagedInstanceGroupArrayOutput {
	return i.ToGetManagedInstanceManagedInstanceGroupArrayOutputWithContext(context.Background())
}

func (i GetManagedInstanceManagedInstanceGroupArray) ToGetManagedInstanceManagedInstanceGroupArrayOutputWithContext(ctx context.Context) GetManagedInstanceManagedInstanceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceManagedInstanceGroupArrayOutput)
}

type GetManagedInstanceManagedInstanceGroupOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceManagedInstanceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceManagedInstanceGroup)(nil)).Elem()
}

func (o GetManagedInstanceManagedInstanceGroupOutput) ToGetManagedInstanceManagedInstanceGroupOutput() GetManagedInstanceManagedInstanceGroupOutput {
	return o
}

func (o GetManagedInstanceManagedInstanceGroupOutput) ToGetManagedInstanceManagedInstanceGroupOutputWithContext(ctx context.Context) GetManagedInstanceManagedInstanceGroupOutput {
	return o
}

// User friendly name
func (o GetManagedInstanceManagedInstanceGroupOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceManagedInstanceGroup) string { return v.DisplayName }).(pulumi.StringOutput)
}

// software source identifier
func (o GetManagedInstanceManagedInstanceGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceManagedInstanceGroup) string { return v.Id }).(pulumi.StringOutput)
}

type GetManagedInstanceManagedInstanceGroupArrayOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceManagedInstanceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceManagedInstanceGroup)(nil)).Elem()
}

func (o GetManagedInstanceManagedInstanceGroupArrayOutput) ToGetManagedInstanceManagedInstanceGroupArrayOutput() GetManagedInstanceManagedInstanceGroupArrayOutput {
	return o
}

func (o GetManagedInstanceManagedInstanceGroupArrayOutput) ToGetManagedInstanceManagedInstanceGroupArrayOutputWithContext(ctx context.Context) GetManagedInstanceManagedInstanceGroupArrayOutput {
	return o
}

func (o GetManagedInstanceManagedInstanceGroupArrayOutput) Index(i pulumi.IntInput) GetManagedInstanceManagedInstanceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedInstanceManagedInstanceGroup {
		return vs[0].([]GetManagedInstanceManagedInstanceGroup)[vs[1].(int)]
	}).(GetManagedInstanceManagedInstanceGroupOutput)
}

type GetManagedInstanceModuleStreamsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetManagedInstanceModuleStreamsFilterInput is an input type that accepts GetManagedInstanceModuleStreamsFilterArgs and GetManagedInstanceModuleStreamsFilterOutput values.
// You can construct a concrete instance of `GetManagedInstanceModuleStreamsFilterInput` via:
//
//	GetManagedInstanceModuleStreamsFilterArgs{...}
type GetManagedInstanceModuleStreamsFilterInput interface {
	pulumi.Input

	ToGetManagedInstanceModuleStreamsFilterOutput() GetManagedInstanceModuleStreamsFilterOutput
	ToGetManagedInstanceModuleStreamsFilterOutputWithContext(context.Context) GetManagedInstanceModuleStreamsFilterOutput
}

type GetManagedInstanceModuleStreamsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetManagedInstanceModuleStreamsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceModuleStreamsFilter)(nil)).Elem()
}

func (i GetManagedInstanceModuleStreamsFilterArgs) ToGetManagedInstanceModuleStreamsFilterOutput() GetManagedInstanceModuleStreamsFilterOutput {
	return i.ToGetManagedInstanceModuleStreamsFilterOutputWithContext(context.Background())
}

func (i GetManagedInstanceModuleStreamsFilterArgs) ToGetManagedInstanceModuleStreamsFilterOutputWithContext(ctx context.Context) GetManagedInstanceModuleStreamsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceModuleStreamsFilterOutput)
}

// GetManagedInstanceModuleStreamsFilterArrayInput is an input type that accepts GetManagedInstanceModuleStreamsFilterArray and GetManagedInstanceModuleStreamsFilterArrayOutput values.
// You can construct a concrete instance of `GetManagedInstanceModuleStreamsFilterArrayInput` via:
//
//	GetManagedInstanceModuleStreamsFilterArray{ GetManagedInstanceModuleStreamsFilterArgs{...} }
type GetManagedInstanceModuleStreamsFilterArrayInput interface {
	pulumi.Input

	ToGetManagedInstanceModuleStreamsFilterArrayOutput() GetManagedInstanceModuleStreamsFilterArrayOutput
	ToGetManagedInstanceModuleStreamsFilterArrayOutputWithContext(context.Context) GetManagedInstanceModuleStreamsFilterArrayOutput
}

type GetManagedInstanceModuleStreamsFilterArray []GetManagedInstanceModuleStreamsFilterInput

func (GetManagedInstanceModuleStreamsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceModuleStreamsFilter)(nil)).Elem()
}

func (i GetManagedInstanceModuleStreamsFilterArray) ToGetManagedInstanceModuleStreamsFilterArrayOutput() GetManagedInstanceModuleStreamsFilterArrayOutput {
	return i.ToGetManagedInstanceModuleStreamsFilterArrayOutputWithContext(context.Background())
}

func (i GetManagedInstanceModuleStreamsFilterArray) ToGetManagedInstanceModuleStreamsFilterArrayOutputWithContext(ctx context.Context) GetManagedInstanceModuleStreamsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceModuleStreamsFilterArrayOutput)
}

type GetManagedInstanceModuleStreamsFilterOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceModuleStreamsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceModuleStreamsFilter)(nil)).Elem()
}

func (o GetManagedInstanceModuleStreamsFilterOutput) ToGetManagedInstanceModuleStreamsFilterOutput() GetManagedInstanceModuleStreamsFilterOutput {
	return o
}

func (o GetManagedInstanceModuleStreamsFilterOutput) ToGetManagedInstanceModuleStreamsFilterOutputWithContext(ctx context.Context) GetManagedInstanceModuleStreamsFilterOutput {
	return o
}

func (o GetManagedInstanceModuleStreamsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceModuleStreamsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetManagedInstanceModuleStreamsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceModuleStreamsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetManagedInstanceModuleStreamsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceModuleStreamsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetManagedInstanceModuleStreamsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceModuleStreamsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceModuleStreamsFilter)(nil)).Elem()
}

func (o GetManagedInstanceModuleStreamsFilterArrayOutput) ToGetManagedInstanceModuleStreamsFilterArrayOutput() GetManagedInstanceModuleStreamsFilterArrayOutput {
	return o
}

func (o GetManagedInstanceModuleStreamsFilterArrayOutput) ToGetManagedInstanceModuleStreamsFilterArrayOutputWithContext(ctx context.Context) GetManagedInstanceModuleStreamsFilterArrayOutput {
	return o
}

func (o GetManagedInstanceModuleStreamsFilterArrayOutput) Index(i pulumi.IntInput) GetManagedInstanceModuleStreamsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedInstanceModuleStreamsFilter {
		return vs[0].([]GetManagedInstanceModuleStreamsFilter)[vs[1].(int)]
	}).(GetManagedInstanceModuleStreamsFilterOutput)
}

type GetManagedInstanceModuleStreamsModuleStreamOnManagedInstance struct {
	// The name of a module.  This parameter is required if a streamName is specified.
	ModuleName string `pulumi:"moduleName"`
	// The set of profiles that the module stream contains.
	Profiles []GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfile `pulumi:"profiles"`
	// The OCID of the software source that provides this module stream.
	SoftwareSourceId string `pulumi:"softwareSourceId"`
	// The status of the stream
	Status string `pulumi:"status"`
	// The name of the stream of the containing module.  This parameter is required if a profileName is specified.
	StreamName string `pulumi:"streamName"`
	// The date and time of the last status change for this profile, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeModified string `pulumi:"timeModified"`
}

// GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceInput is an input type that accepts GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArgs and GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceOutput values.
// You can construct a concrete instance of `GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceInput` via:
//
//	GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArgs{...}
type GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceInput interface {
	pulumi.Input

	ToGetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceOutput() GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceOutput
	ToGetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceOutputWithContext(context.Context) GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceOutput
}

type GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArgs struct {
	// The name of a module.  This parameter is required if a streamName is specified.
	ModuleName pulumi.StringInput `pulumi:"moduleName"`
	// The set of profiles that the module stream contains.
	Profiles GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArrayInput `pulumi:"profiles"`
	// The OCID of the software source that provides this module stream.
	SoftwareSourceId pulumi.StringInput `pulumi:"softwareSourceId"`
	// The status of the stream
	Status pulumi.StringInput `pulumi:"status"`
	// The name of the stream of the containing module.  This parameter is required if a profileName is specified.
	StreamName pulumi.StringInput `pulumi:"streamName"`
	// The date and time of the last status change for this profile, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeModified pulumi.StringInput `pulumi:"timeModified"`
}

func (GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceModuleStreamsModuleStreamOnManagedInstance)(nil)).Elem()
}

func (i GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArgs) ToGetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceOutput() GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceOutput {
	return i.ToGetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceOutputWithContext(context.Background())
}

func (i GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArgs) ToGetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceOutputWithContext(ctx context.Context) GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceOutput)
}

// GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArrayInput is an input type that accepts GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArray and GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArrayOutput values.
// You can construct a concrete instance of `GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArrayInput` via:
//
//	GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArray{ GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArgs{...} }
type GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArrayInput interface {
	pulumi.Input

	ToGetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArrayOutput() GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArrayOutput
	ToGetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArrayOutputWithContext(context.Context) GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArrayOutput
}

type GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArray []GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceInput

func (GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceModuleStreamsModuleStreamOnManagedInstance)(nil)).Elem()
}

func (i GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArray) ToGetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArrayOutput() GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArrayOutput {
	return i.ToGetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArrayOutputWithContext(context.Background())
}

func (i GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArray) ToGetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArrayOutputWithContext(ctx context.Context) GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArrayOutput)
}

type GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceModuleStreamsModuleStreamOnManagedInstance)(nil)).Elem()
}

func (o GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceOutput) ToGetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceOutput() GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceOutput {
	return o
}

func (o GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceOutput) ToGetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceOutputWithContext(ctx context.Context) GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceOutput {
	return o
}

// The name of a module.  This parameter is required if a streamName is specified.
func (o GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceOutput) ModuleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceModuleStreamsModuleStreamOnManagedInstance) string { return v.ModuleName }).(pulumi.StringOutput)
}

// The set of profiles that the module stream contains.
func (o GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceOutput) Profiles() GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceModuleStreamsModuleStreamOnManagedInstance) []GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfile {
		return v.Profiles
	}).(GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArrayOutput)
}

// The OCID of the software source that provides this module stream.
func (o GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceOutput) SoftwareSourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceModuleStreamsModuleStreamOnManagedInstance) string { return v.SoftwareSourceId }).(pulumi.StringOutput)
}

// The status of the stream
func (o GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceModuleStreamsModuleStreamOnManagedInstance) string { return v.Status }).(pulumi.StringOutput)
}

// The name of the stream of the containing module.  This parameter is required if a profileName is specified.
func (o GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceOutput) StreamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceModuleStreamsModuleStreamOnManagedInstance) string { return v.StreamName }).(pulumi.StringOutput)
}

// The date and time of the last status change for this profile, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
func (o GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceOutput) TimeModified() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceModuleStreamsModuleStreamOnManagedInstance) string { return v.TimeModified }).(pulumi.StringOutput)
}

type GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceModuleStreamsModuleStreamOnManagedInstance)(nil)).Elem()
}

func (o GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArrayOutput) ToGetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArrayOutput() GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArrayOutput {
	return o
}

func (o GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArrayOutput) ToGetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArrayOutputWithContext(ctx context.Context) GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArrayOutput {
	return o
}

func (o GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArrayOutput) Index(i pulumi.IntInput) GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedInstanceModuleStreamsModuleStreamOnManagedInstance {
		return vs[0].([]GetManagedInstanceModuleStreamsModuleStreamOnManagedInstance)[vs[1].(int)]
	}).(GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceOutput)
}

type GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfile struct {
	// The name of a module.  This parameter is required if a streamName is specified.
	ModuleName string `pulumi:"moduleName"`
	// The name of the profile
	ProfileName string `pulumi:"profileName"`
	// The status of the stream
	Status string `pulumi:"status"`
	// The name of the stream of the containing module.  This parameter is required if a profileName is specified.
	StreamName string `pulumi:"streamName"`
	// The date and time of the last status change for this profile, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeModified string `pulumi:"timeModified"`
}

// GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileInput is an input type that accepts GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArgs and GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileOutput values.
// You can construct a concrete instance of `GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileInput` via:
//
//	GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArgs{...}
type GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileInput interface {
	pulumi.Input

	ToGetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileOutput() GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileOutput
	ToGetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileOutputWithContext(context.Context) GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileOutput
}

type GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArgs struct {
	// The name of a module.  This parameter is required if a streamName is specified.
	ModuleName pulumi.StringInput `pulumi:"moduleName"`
	// The name of the profile
	ProfileName pulumi.StringInput `pulumi:"profileName"`
	// The status of the stream
	Status pulumi.StringInput `pulumi:"status"`
	// The name of the stream of the containing module.  This parameter is required if a profileName is specified.
	StreamName pulumi.StringInput `pulumi:"streamName"`
	// The date and time of the last status change for this profile, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeModified pulumi.StringInput `pulumi:"timeModified"`
}

func (GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfile)(nil)).Elem()
}

func (i GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArgs) ToGetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileOutput() GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileOutput {
	return i.ToGetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileOutputWithContext(context.Background())
}

func (i GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArgs) ToGetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileOutputWithContext(ctx context.Context) GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileOutput)
}

// GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArrayInput is an input type that accepts GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArray and GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArrayOutput values.
// You can construct a concrete instance of `GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArrayInput` via:
//
//	GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArray{ GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArgs{...} }
type GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArrayInput interface {
	pulumi.Input

	ToGetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArrayOutput() GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArrayOutput
	ToGetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArrayOutputWithContext(context.Context) GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArrayOutput
}

type GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArray []GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileInput

func (GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfile)(nil)).Elem()
}

func (i GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArray) ToGetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArrayOutput() GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArrayOutput {
	return i.ToGetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArrayOutputWithContext(context.Background())
}

func (i GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArray) ToGetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArrayOutputWithContext(ctx context.Context) GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArrayOutput)
}

type GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfile)(nil)).Elem()
}

func (o GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileOutput) ToGetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileOutput() GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileOutput {
	return o
}

func (o GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileOutput) ToGetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileOutputWithContext(ctx context.Context) GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileOutput {
	return o
}

// The name of a module.  This parameter is required if a streamName is specified.
func (o GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileOutput) ModuleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfile) string {
		return v.ModuleName
	}).(pulumi.StringOutput)
}

// The name of the profile
func (o GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileOutput) ProfileName() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfile) string {
		return v.ProfileName
	}).(pulumi.StringOutput)
}

// The status of the stream
func (o GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfile) string { return v.Status }).(pulumi.StringOutput)
}

// The name of the stream of the containing module.  This parameter is required if a profileName is specified.
func (o GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileOutput) StreamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfile) string {
		return v.StreamName
	}).(pulumi.StringOutput)
}

// The date and time of the last status change for this profile, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
func (o GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileOutput) TimeModified() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfile) string {
		return v.TimeModified
	}).(pulumi.StringOutput)
}

type GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArrayOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfile)(nil)).Elem()
}

func (o GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArrayOutput) ToGetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArrayOutput() GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArrayOutput {
	return o
}

func (o GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArrayOutput) ToGetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArrayOutputWithContext(ctx context.Context) GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArrayOutput {
	return o
}

func (o GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArrayOutput) Index(i pulumi.IntInput) GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfile {
		return vs[0].([]GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfile)[vs[1].(int)]
	}).(GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileOutput)
}

type GetManagedInstanceParentSoftwareSource struct {
	// software source identifier
	Id string `pulumi:"id"`
	// software source name
	Name string `pulumi:"name"`
}

// GetManagedInstanceParentSoftwareSourceInput is an input type that accepts GetManagedInstanceParentSoftwareSourceArgs and GetManagedInstanceParentSoftwareSourceOutput values.
// You can construct a concrete instance of `GetManagedInstanceParentSoftwareSourceInput` via:
//
//	GetManagedInstanceParentSoftwareSourceArgs{...}
type GetManagedInstanceParentSoftwareSourceInput interface {
	pulumi.Input

	ToGetManagedInstanceParentSoftwareSourceOutput() GetManagedInstanceParentSoftwareSourceOutput
	ToGetManagedInstanceParentSoftwareSourceOutputWithContext(context.Context) GetManagedInstanceParentSoftwareSourceOutput
}

type GetManagedInstanceParentSoftwareSourceArgs struct {
	// software source identifier
	Id pulumi.StringInput `pulumi:"id"`
	// software source name
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetManagedInstanceParentSoftwareSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceParentSoftwareSource)(nil)).Elem()
}

func (i GetManagedInstanceParentSoftwareSourceArgs) ToGetManagedInstanceParentSoftwareSourceOutput() GetManagedInstanceParentSoftwareSourceOutput {
	return i.ToGetManagedInstanceParentSoftwareSourceOutputWithContext(context.Background())
}

func (i GetManagedInstanceParentSoftwareSourceArgs) ToGetManagedInstanceParentSoftwareSourceOutputWithContext(ctx context.Context) GetManagedInstanceParentSoftwareSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceParentSoftwareSourceOutput)
}

// GetManagedInstanceParentSoftwareSourceArrayInput is an input type that accepts GetManagedInstanceParentSoftwareSourceArray and GetManagedInstanceParentSoftwareSourceArrayOutput values.
// You can construct a concrete instance of `GetManagedInstanceParentSoftwareSourceArrayInput` via:
//
//	GetManagedInstanceParentSoftwareSourceArray{ GetManagedInstanceParentSoftwareSourceArgs{...} }
type GetManagedInstanceParentSoftwareSourceArrayInput interface {
	pulumi.Input

	ToGetManagedInstanceParentSoftwareSourceArrayOutput() GetManagedInstanceParentSoftwareSourceArrayOutput
	ToGetManagedInstanceParentSoftwareSourceArrayOutputWithContext(context.Context) GetManagedInstanceParentSoftwareSourceArrayOutput
}

type GetManagedInstanceParentSoftwareSourceArray []GetManagedInstanceParentSoftwareSourceInput

func (GetManagedInstanceParentSoftwareSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceParentSoftwareSource)(nil)).Elem()
}

func (i GetManagedInstanceParentSoftwareSourceArray) ToGetManagedInstanceParentSoftwareSourceArrayOutput() GetManagedInstanceParentSoftwareSourceArrayOutput {
	return i.ToGetManagedInstanceParentSoftwareSourceArrayOutputWithContext(context.Background())
}

func (i GetManagedInstanceParentSoftwareSourceArray) ToGetManagedInstanceParentSoftwareSourceArrayOutputWithContext(ctx context.Context) GetManagedInstanceParentSoftwareSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceParentSoftwareSourceArrayOutput)
}

type GetManagedInstanceParentSoftwareSourceOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceParentSoftwareSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceParentSoftwareSource)(nil)).Elem()
}

func (o GetManagedInstanceParentSoftwareSourceOutput) ToGetManagedInstanceParentSoftwareSourceOutput() GetManagedInstanceParentSoftwareSourceOutput {
	return o
}

func (o GetManagedInstanceParentSoftwareSourceOutput) ToGetManagedInstanceParentSoftwareSourceOutputWithContext(ctx context.Context) GetManagedInstanceParentSoftwareSourceOutput {
	return o
}

// software source identifier
func (o GetManagedInstanceParentSoftwareSourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceParentSoftwareSource) string { return v.Id }).(pulumi.StringOutput)
}

// software source name
func (o GetManagedInstanceParentSoftwareSourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceParentSoftwareSource) string { return v.Name }).(pulumi.StringOutput)
}

type GetManagedInstanceParentSoftwareSourceArrayOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceParentSoftwareSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceParentSoftwareSource)(nil)).Elem()
}

func (o GetManagedInstanceParentSoftwareSourceArrayOutput) ToGetManagedInstanceParentSoftwareSourceArrayOutput() GetManagedInstanceParentSoftwareSourceArrayOutput {
	return o
}

func (o GetManagedInstanceParentSoftwareSourceArrayOutput) ToGetManagedInstanceParentSoftwareSourceArrayOutputWithContext(ctx context.Context) GetManagedInstanceParentSoftwareSourceArrayOutput {
	return o
}

func (o GetManagedInstanceParentSoftwareSourceArrayOutput) Index(i pulumi.IntInput) GetManagedInstanceParentSoftwareSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedInstanceParentSoftwareSource {
		return vs[0].([]GetManagedInstanceParentSoftwareSource)[vs[1].(int)]
	}).(GetManagedInstanceParentSoftwareSourceOutput)
}

type GetManagedInstanceStreamProfileFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetManagedInstanceStreamProfileFilterInput is an input type that accepts GetManagedInstanceStreamProfileFilterArgs and GetManagedInstanceStreamProfileFilterOutput values.
// You can construct a concrete instance of `GetManagedInstanceStreamProfileFilterInput` via:
//
//	GetManagedInstanceStreamProfileFilterArgs{...}
type GetManagedInstanceStreamProfileFilterInput interface {
	pulumi.Input

	ToGetManagedInstanceStreamProfileFilterOutput() GetManagedInstanceStreamProfileFilterOutput
	ToGetManagedInstanceStreamProfileFilterOutputWithContext(context.Context) GetManagedInstanceStreamProfileFilterOutput
}

type GetManagedInstanceStreamProfileFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetManagedInstanceStreamProfileFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceStreamProfileFilter)(nil)).Elem()
}

func (i GetManagedInstanceStreamProfileFilterArgs) ToGetManagedInstanceStreamProfileFilterOutput() GetManagedInstanceStreamProfileFilterOutput {
	return i.ToGetManagedInstanceStreamProfileFilterOutputWithContext(context.Background())
}

func (i GetManagedInstanceStreamProfileFilterArgs) ToGetManagedInstanceStreamProfileFilterOutputWithContext(ctx context.Context) GetManagedInstanceStreamProfileFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceStreamProfileFilterOutput)
}

// GetManagedInstanceStreamProfileFilterArrayInput is an input type that accepts GetManagedInstanceStreamProfileFilterArray and GetManagedInstanceStreamProfileFilterArrayOutput values.
// You can construct a concrete instance of `GetManagedInstanceStreamProfileFilterArrayInput` via:
//
//	GetManagedInstanceStreamProfileFilterArray{ GetManagedInstanceStreamProfileFilterArgs{...} }
type GetManagedInstanceStreamProfileFilterArrayInput interface {
	pulumi.Input

	ToGetManagedInstanceStreamProfileFilterArrayOutput() GetManagedInstanceStreamProfileFilterArrayOutput
	ToGetManagedInstanceStreamProfileFilterArrayOutputWithContext(context.Context) GetManagedInstanceStreamProfileFilterArrayOutput
}

type GetManagedInstanceStreamProfileFilterArray []GetManagedInstanceStreamProfileFilterInput

func (GetManagedInstanceStreamProfileFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceStreamProfileFilter)(nil)).Elem()
}

func (i GetManagedInstanceStreamProfileFilterArray) ToGetManagedInstanceStreamProfileFilterArrayOutput() GetManagedInstanceStreamProfileFilterArrayOutput {
	return i.ToGetManagedInstanceStreamProfileFilterArrayOutputWithContext(context.Background())
}

func (i GetManagedInstanceStreamProfileFilterArray) ToGetManagedInstanceStreamProfileFilterArrayOutputWithContext(ctx context.Context) GetManagedInstanceStreamProfileFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceStreamProfileFilterArrayOutput)
}

type GetManagedInstanceStreamProfileFilterOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceStreamProfileFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceStreamProfileFilter)(nil)).Elem()
}

func (o GetManagedInstanceStreamProfileFilterOutput) ToGetManagedInstanceStreamProfileFilterOutput() GetManagedInstanceStreamProfileFilterOutput {
	return o
}

func (o GetManagedInstanceStreamProfileFilterOutput) ToGetManagedInstanceStreamProfileFilterOutputWithContext(ctx context.Context) GetManagedInstanceStreamProfileFilterOutput {
	return o
}

func (o GetManagedInstanceStreamProfileFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceStreamProfileFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetManagedInstanceStreamProfileFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceStreamProfileFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetManagedInstanceStreamProfileFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceStreamProfileFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetManagedInstanceStreamProfileFilterArrayOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceStreamProfileFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceStreamProfileFilter)(nil)).Elem()
}

func (o GetManagedInstanceStreamProfileFilterArrayOutput) ToGetManagedInstanceStreamProfileFilterArrayOutput() GetManagedInstanceStreamProfileFilterArrayOutput {
	return o
}

func (o GetManagedInstanceStreamProfileFilterArrayOutput) ToGetManagedInstanceStreamProfileFilterArrayOutputWithContext(ctx context.Context) GetManagedInstanceStreamProfileFilterArrayOutput {
	return o
}

func (o GetManagedInstanceStreamProfileFilterArrayOutput) Index(i pulumi.IntInput) GetManagedInstanceStreamProfileFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedInstanceStreamProfileFilter {
		return vs[0].([]GetManagedInstanceStreamProfileFilter)[vs[1].(int)]
	}).(GetManagedInstanceStreamProfileFilterOutput)
}

type GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstance struct {
	// The name of a module.  This parameter is required if a streamName is specified.
	ModuleName string `pulumi:"moduleName"`
	// The name of the profile of the containing module stream
	ProfileName string `pulumi:"profileName"`
	// The status of the profile.
	Status string `pulumi:"status"`
	// The name of the stream of the containing module.  This parameter is required if a profileName is specified.
	StreamName string `pulumi:"streamName"`
	// The date and time of the last status change for this profile, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeModified string `pulumi:"timeModified"`
}

// GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceInput is an input type that accepts GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArgs and GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceOutput values.
// You can construct a concrete instance of `GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceInput` via:
//
//	GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArgs{...}
type GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceInput interface {
	pulumi.Input

	ToGetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceOutput() GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceOutput
	ToGetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceOutputWithContext(context.Context) GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceOutput
}

type GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArgs struct {
	// The name of a module.  This parameter is required if a streamName is specified.
	ModuleName pulumi.StringInput `pulumi:"moduleName"`
	// The name of the profile of the containing module stream
	ProfileName pulumi.StringInput `pulumi:"profileName"`
	// The status of the profile.
	Status pulumi.StringInput `pulumi:"status"`
	// The name of the stream of the containing module.  This parameter is required if a profileName is specified.
	StreamName pulumi.StringInput `pulumi:"streamName"`
	// The date and time of the last status change for this profile, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeModified pulumi.StringInput `pulumi:"timeModified"`
}

func (GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstance)(nil)).Elem()
}

func (i GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArgs) ToGetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceOutput() GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceOutput {
	return i.ToGetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceOutputWithContext(context.Background())
}

func (i GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArgs) ToGetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceOutputWithContext(ctx context.Context) GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceOutput)
}

// GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArrayInput is an input type that accepts GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArray and GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArrayOutput values.
// You can construct a concrete instance of `GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArrayInput` via:
//
//	GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArray{ GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArgs{...} }
type GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArrayInput interface {
	pulumi.Input

	ToGetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArrayOutput() GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArrayOutput
	ToGetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArrayOutputWithContext(context.Context) GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArrayOutput
}

type GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArray []GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceInput

func (GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstance)(nil)).Elem()
}

func (i GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArray) ToGetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArrayOutput() GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArrayOutput {
	return i.ToGetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArrayOutputWithContext(context.Background())
}

func (i GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArray) ToGetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArrayOutputWithContext(ctx context.Context) GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArrayOutput)
}

type GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstance)(nil)).Elem()
}

func (o GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceOutput) ToGetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceOutput() GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceOutput {
	return o
}

func (o GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceOutput) ToGetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceOutputWithContext(ctx context.Context) GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceOutput {
	return o
}

// The name of a module.  This parameter is required if a streamName is specified.
func (o GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceOutput) ModuleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstance) string {
		return v.ModuleName
	}).(pulumi.StringOutput)
}

// The name of the profile of the containing module stream
func (o GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceOutput) ProfileName() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstance) string {
		return v.ProfileName
	}).(pulumi.StringOutput)
}

// The status of the profile.
func (o GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstance) string { return v.Status }).(pulumi.StringOutput)
}

// The name of the stream of the containing module.  This parameter is required if a profileName is specified.
func (o GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceOutput) StreamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstance) string {
		return v.StreamName
	}).(pulumi.StringOutput)
}

// The date and time of the last status change for this profile, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
func (o GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceOutput) TimeModified() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstance) string {
		return v.TimeModified
	}).(pulumi.StringOutput)
}

type GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstance)(nil)).Elem()
}

func (o GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArrayOutput) ToGetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArrayOutput() GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArrayOutput {
	return o
}

func (o GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArrayOutput) ToGetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArrayOutputWithContext(ctx context.Context) GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArrayOutput {
	return o
}

func (o GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArrayOutput) Index(i pulumi.IntInput) GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstance {
		return vs[0].([]GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstance)[vs[1].(int)]
	}).(GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceOutput)
}

type GetManagedInstancesFilter struct {
	// software source name
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetManagedInstancesFilterInput is an input type that accepts GetManagedInstancesFilterArgs and GetManagedInstancesFilterOutput values.
// You can construct a concrete instance of `GetManagedInstancesFilterInput` via:
//
//	GetManagedInstancesFilterArgs{...}
type GetManagedInstancesFilterInput interface {
	pulumi.Input

	ToGetManagedInstancesFilterOutput() GetManagedInstancesFilterOutput
	ToGetManagedInstancesFilterOutputWithContext(context.Context) GetManagedInstancesFilterOutput
}

type GetManagedInstancesFilterArgs struct {
	// software source name
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetManagedInstancesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstancesFilter)(nil)).Elem()
}

func (i GetManagedInstancesFilterArgs) ToGetManagedInstancesFilterOutput() GetManagedInstancesFilterOutput {
	return i.ToGetManagedInstancesFilterOutputWithContext(context.Background())
}

func (i GetManagedInstancesFilterArgs) ToGetManagedInstancesFilterOutputWithContext(ctx context.Context) GetManagedInstancesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstancesFilterOutput)
}

// GetManagedInstancesFilterArrayInput is an input type that accepts GetManagedInstancesFilterArray and GetManagedInstancesFilterArrayOutput values.
// You can construct a concrete instance of `GetManagedInstancesFilterArrayInput` via:
//
//	GetManagedInstancesFilterArray{ GetManagedInstancesFilterArgs{...} }
type GetManagedInstancesFilterArrayInput interface {
	pulumi.Input

	ToGetManagedInstancesFilterArrayOutput() GetManagedInstancesFilterArrayOutput
	ToGetManagedInstancesFilterArrayOutputWithContext(context.Context) GetManagedInstancesFilterArrayOutput
}

type GetManagedInstancesFilterArray []GetManagedInstancesFilterInput

func (GetManagedInstancesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstancesFilter)(nil)).Elem()
}

func (i GetManagedInstancesFilterArray) ToGetManagedInstancesFilterArrayOutput() GetManagedInstancesFilterArrayOutput {
	return i.ToGetManagedInstancesFilterArrayOutputWithContext(context.Background())
}

func (i GetManagedInstancesFilterArray) ToGetManagedInstancesFilterArrayOutputWithContext(ctx context.Context) GetManagedInstancesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstancesFilterArrayOutput)
}

type GetManagedInstancesFilterOutput struct{ *pulumi.OutputState }

func (GetManagedInstancesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstancesFilter)(nil)).Elem()
}

func (o GetManagedInstancesFilterOutput) ToGetManagedInstancesFilterOutput() GetManagedInstancesFilterOutput {
	return o
}

func (o GetManagedInstancesFilterOutput) ToGetManagedInstancesFilterOutputWithContext(ctx context.Context) GetManagedInstancesFilterOutput {
	return o
}

// software source name
func (o GetManagedInstancesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstancesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetManagedInstancesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetManagedInstancesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetManagedInstancesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagedInstancesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetManagedInstancesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetManagedInstancesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstancesFilter)(nil)).Elem()
}

func (o GetManagedInstancesFilterArrayOutput) ToGetManagedInstancesFilterArrayOutput() GetManagedInstancesFilterArrayOutput {
	return o
}

func (o GetManagedInstancesFilterArrayOutput) ToGetManagedInstancesFilterArrayOutputWithContext(ctx context.Context) GetManagedInstancesFilterArrayOutput {
	return o
}

func (o GetManagedInstancesFilterArrayOutput) Index(i pulumi.IntInput) GetManagedInstancesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedInstancesFilter {
		return vs[0].([]GetManagedInstancesFilter)[vs[1].(int)]
	}).(GetManagedInstancesFilterOutput)
}

type GetManagedInstancesManagedInstance struct {
	// if present, indicates the Managed Instance is an autonomous instance. Holds all the Autonomous specific information
	Autonomouses []GetManagedInstancesManagedInstanceAutonomouse `pulumi:"autonomouses"`
	// Number of bug fix type updates available to be installed
	BugUpdatesAvailable int `pulumi:"bugUpdatesAvailable"`
	// list of child Software Sources attached to the Managed Instance
	ChildSoftwareSources []GetManagedInstancesManagedInstanceChildSoftwareSource `pulumi:"childSoftwareSources"`
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Information specified by the user about the managed instance
	Description string `pulumi:"description"`
	// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName string `pulumi:"displayName"`
	// Number of enhancement type updates available to be installed
	EnhancementUpdatesAvailable int `pulumi:"enhancementUpdatesAvailable"`
	// software source identifier
	Id string `pulumi:"id"`
	// True if user allow data collection for this instance
	IsDataCollectionAuthorized bool `pulumi:"isDataCollectionAuthorized"`
	// Indicates whether a reboot is required to complete installation of updates.
	IsRebootRequired bool `pulumi:"isRebootRequired"`
	// The ksplice effective kernel version
	KspliceEffectiveKernelVersion string `pulumi:"kspliceEffectiveKernelVersion"`
	// Time at which the instance last booted
	LastBoot string `pulumi:"lastBoot"`
	// Time at which the instance last checked in
	LastCheckin string `pulumi:"lastCheckin"`
	// The ids of the managed instance groups of which this instance is a member.
	ManagedInstanceGroups []GetManagedInstancesManagedInstanceManagedInstanceGroup `pulumi:"managedInstanceGroups"`
	ManagedInstanceId     string                                                   `pulumi:"managedInstanceId"`
	// OCID of the ONS topic used to send notification to users
	NotificationTopicId string `pulumi:"notificationTopicId"`
	// The OS family for which to list resources.
	OsFamily string `pulumi:"osFamily"`
	// Operating System Kernel Version
	OsKernelVersion string `pulumi:"osKernelVersion"`
	// Operating System Name
	OsName string `pulumi:"osName"`
	// Operating System Version
	OsVersion string `pulumi:"osVersion"`
	// Number of non-classified updates available to be installed
	OtherUpdatesAvailable int `pulumi:"otherUpdatesAvailable"`
	// the parent (base) Software Source attached to the Managed Instance
	ParentSoftwareSources []GetManagedInstancesManagedInstanceParentSoftwareSource `pulumi:"parentSoftwareSources"`
	// Number of scheduled jobs associated with this instance
	ScheduledJobCount int `pulumi:"scheduledJobCount"`
	// Number of security type updates available to be installed
	SecurityUpdatesAvailable int `pulumi:"securityUpdatesAvailable"`
	// status of the managed instance.
	Status string `pulumi:"status"`
	// Number of updates available to be installed
	UpdatesAvailable int `pulumi:"updatesAvailable"`
	// Number of work requests associated with this instance
	WorkRequestCount int `pulumi:"workRequestCount"`
}

// GetManagedInstancesManagedInstanceInput is an input type that accepts GetManagedInstancesManagedInstanceArgs and GetManagedInstancesManagedInstanceOutput values.
// You can construct a concrete instance of `GetManagedInstancesManagedInstanceInput` via:
//
//	GetManagedInstancesManagedInstanceArgs{...}
type GetManagedInstancesManagedInstanceInput interface {
	pulumi.Input

	ToGetManagedInstancesManagedInstanceOutput() GetManagedInstancesManagedInstanceOutput
	ToGetManagedInstancesManagedInstanceOutputWithContext(context.Context) GetManagedInstancesManagedInstanceOutput
}

type GetManagedInstancesManagedInstanceArgs struct {
	// if present, indicates the Managed Instance is an autonomous instance. Holds all the Autonomous specific information
	Autonomouses GetManagedInstancesManagedInstanceAutonomouseArrayInput `pulumi:"autonomouses"`
	// Number of bug fix type updates available to be installed
	BugUpdatesAvailable pulumi.IntInput `pulumi:"bugUpdatesAvailable"`
	// list of child Software Sources attached to the Managed Instance
	ChildSoftwareSources GetManagedInstancesManagedInstanceChildSoftwareSourceArrayInput `pulumi:"childSoftwareSources"`
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Information specified by the user about the managed instance
	Description pulumi.StringInput `pulumi:"description"`
	// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Number of enhancement type updates available to be installed
	EnhancementUpdatesAvailable pulumi.IntInput `pulumi:"enhancementUpdatesAvailable"`
	// software source identifier
	Id pulumi.StringInput `pulumi:"id"`
	// True if user allow data collection for this instance
	IsDataCollectionAuthorized pulumi.BoolInput `pulumi:"isDataCollectionAuthorized"`
	// Indicates whether a reboot is required to complete installation of updates.
	IsRebootRequired pulumi.BoolInput `pulumi:"isRebootRequired"`
	// The ksplice effective kernel version
	KspliceEffectiveKernelVersion pulumi.StringInput `pulumi:"kspliceEffectiveKernelVersion"`
	// Time at which the instance last booted
	LastBoot pulumi.StringInput `pulumi:"lastBoot"`
	// Time at which the instance last checked in
	LastCheckin pulumi.StringInput `pulumi:"lastCheckin"`
	// The ids of the managed instance groups of which this instance is a member.
	ManagedInstanceGroups GetManagedInstancesManagedInstanceManagedInstanceGroupArrayInput `pulumi:"managedInstanceGroups"`
	ManagedInstanceId     pulumi.StringInput                                               `pulumi:"managedInstanceId"`
	// OCID of the ONS topic used to send notification to users
	NotificationTopicId pulumi.StringInput `pulumi:"notificationTopicId"`
	// The OS family for which to list resources.
	OsFamily pulumi.StringInput `pulumi:"osFamily"`
	// Operating System Kernel Version
	OsKernelVersion pulumi.StringInput `pulumi:"osKernelVersion"`
	// Operating System Name
	OsName pulumi.StringInput `pulumi:"osName"`
	// Operating System Version
	OsVersion pulumi.StringInput `pulumi:"osVersion"`
	// Number of non-classified updates available to be installed
	OtherUpdatesAvailable pulumi.IntInput `pulumi:"otherUpdatesAvailable"`
	// the parent (base) Software Source attached to the Managed Instance
	ParentSoftwareSources GetManagedInstancesManagedInstanceParentSoftwareSourceArrayInput `pulumi:"parentSoftwareSources"`
	// Number of scheduled jobs associated with this instance
	ScheduledJobCount pulumi.IntInput `pulumi:"scheduledJobCount"`
	// Number of security type updates available to be installed
	SecurityUpdatesAvailable pulumi.IntInput `pulumi:"securityUpdatesAvailable"`
	// status of the managed instance.
	Status pulumi.StringInput `pulumi:"status"`
	// Number of updates available to be installed
	UpdatesAvailable pulumi.IntInput `pulumi:"updatesAvailable"`
	// Number of work requests associated with this instance
	WorkRequestCount pulumi.IntInput `pulumi:"workRequestCount"`
}

func (GetManagedInstancesManagedInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstancesManagedInstance)(nil)).Elem()
}

func (i GetManagedInstancesManagedInstanceArgs) ToGetManagedInstancesManagedInstanceOutput() GetManagedInstancesManagedInstanceOutput {
	return i.ToGetManagedInstancesManagedInstanceOutputWithContext(context.Background())
}

func (i GetManagedInstancesManagedInstanceArgs) ToGetManagedInstancesManagedInstanceOutputWithContext(ctx context.Context) GetManagedInstancesManagedInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstancesManagedInstanceOutput)
}

// GetManagedInstancesManagedInstanceArrayInput is an input type that accepts GetManagedInstancesManagedInstanceArray and GetManagedInstancesManagedInstanceArrayOutput values.
// You can construct a concrete instance of `GetManagedInstancesManagedInstanceArrayInput` via:
//
//	GetManagedInstancesManagedInstanceArray{ GetManagedInstancesManagedInstanceArgs{...} }
type GetManagedInstancesManagedInstanceArrayInput interface {
	pulumi.Input

	ToGetManagedInstancesManagedInstanceArrayOutput() GetManagedInstancesManagedInstanceArrayOutput
	ToGetManagedInstancesManagedInstanceArrayOutputWithContext(context.Context) GetManagedInstancesManagedInstanceArrayOutput
}

type GetManagedInstancesManagedInstanceArray []GetManagedInstancesManagedInstanceInput

func (GetManagedInstancesManagedInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstancesManagedInstance)(nil)).Elem()
}

func (i GetManagedInstancesManagedInstanceArray) ToGetManagedInstancesManagedInstanceArrayOutput() GetManagedInstancesManagedInstanceArrayOutput {
	return i.ToGetManagedInstancesManagedInstanceArrayOutputWithContext(context.Background())
}

func (i GetManagedInstancesManagedInstanceArray) ToGetManagedInstancesManagedInstanceArrayOutputWithContext(ctx context.Context) GetManagedInstancesManagedInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstancesManagedInstanceArrayOutput)
}

type GetManagedInstancesManagedInstanceOutput struct{ *pulumi.OutputState }

func (GetManagedInstancesManagedInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstancesManagedInstance)(nil)).Elem()
}

func (o GetManagedInstancesManagedInstanceOutput) ToGetManagedInstancesManagedInstanceOutput() GetManagedInstancesManagedInstanceOutput {
	return o
}

func (o GetManagedInstancesManagedInstanceOutput) ToGetManagedInstancesManagedInstanceOutputWithContext(ctx context.Context) GetManagedInstancesManagedInstanceOutput {
	return o
}

// if present, indicates the Managed Instance is an autonomous instance. Holds all the Autonomous specific information
func (o GetManagedInstancesManagedInstanceOutput) Autonomouses() GetManagedInstancesManagedInstanceAutonomouseArrayOutput {
	return o.ApplyT(func(v GetManagedInstancesManagedInstance) []GetManagedInstancesManagedInstanceAutonomouse {
		return v.Autonomouses
	}).(GetManagedInstancesManagedInstanceAutonomouseArrayOutput)
}

// Number of bug fix type updates available to be installed
func (o GetManagedInstancesManagedInstanceOutput) BugUpdatesAvailable() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagedInstancesManagedInstance) int { return v.BugUpdatesAvailable }).(pulumi.IntOutput)
}

// list of child Software Sources attached to the Managed Instance
func (o GetManagedInstancesManagedInstanceOutput) ChildSoftwareSources() GetManagedInstancesManagedInstanceChildSoftwareSourceArrayOutput {
	return o.ApplyT(func(v GetManagedInstancesManagedInstance) []GetManagedInstancesManagedInstanceChildSoftwareSource {
		return v.ChildSoftwareSources
	}).(GetManagedInstancesManagedInstanceChildSoftwareSourceArrayOutput)
}

// The ID of the compartment in which to list resources.
func (o GetManagedInstancesManagedInstanceOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstancesManagedInstance) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Information specified by the user about the managed instance
func (o GetManagedInstancesManagedInstanceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstancesManagedInstance) string { return v.Description }).(pulumi.StringOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
func (o GetManagedInstancesManagedInstanceOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstancesManagedInstance) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Number of enhancement type updates available to be installed
func (o GetManagedInstancesManagedInstanceOutput) EnhancementUpdatesAvailable() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagedInstancesManagedInstance) int { return v.EnhancementUpdatesAvailable }).(pulumi.IntOutput)
}

// software source identifier
func (o GetManagedInstancesManagedInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstancesManagedInstance) string { return v.Id }).(pulumi.StringOutput)
}

// True if user allow data collection for this instance
func (o GetManagedInstancesManagedInstanceOutput) IsDataCollectionAuthorized() pulumi.BoolOutput {
	return o.ApplyT(func(v GetManagedInstancesManagedInstance) bool { return v.IsDataCollectionAuthorized }).(pulumi.BoolOutput)
}

// Indicates whether a reboot is required to complete installation of updates.
func (o GetManagedInstancesManagedInstanceOutput) IsRebootRequired() pulumi.BoolOutput {
	return o.ApplyT(func(v GetManagedInstancesManagedInstance) bool { return v.IsRebootRequired }).(pulumi.BoolOutput)
}

// The ksplice effective kernel version
func (o GetManagedInstancesManagedInstanceOutput) KspliceEffectiveKernelVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstancesManagedInstance) string { return v.KspliceEffectiveKernelVersion }).(pulumi.StringOutput)
}

// Time at which the instance last booted
func (o GetManagedInstancesManagedInstanceOutput) LastBoot() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstancesManagedInstance) string { return v.LastBoot }).(pulumi.StringOutput)
}

// Time at which the instance last checked in
func (o GetManagedInstancesManagedInstanceOutput) LastCheckin() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstancesManagedInstance) string { return v.LastCheckin }).(pulumi.StringOutput)
}

// The ids of the managed instance groups of which this instance is a member.
func (o GetManagedInstancesManagedInstanceOutput) ManagedInstanceGroups() GetManagedInstancesManagedInstanceManagedInstanceGroupArrayOutput {
	return o.ApplyT(func(v GetManagedInstancesManagedInstance) []GetManagedInstancesManagedInstanceManagedInstanceGroup {
		return v.ManagedInstanceGroups
	}).(GetManagedInstancesManagedInstanceManagedInstanceGroupArrayOutput)
}

func (o GetManagedInstancesManagedInstanceOutput) ManagedInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstancesManagedInstance) string { return v.ManagedInstanceId }).(pulumi.StringOutput)
}

// OCID of the ONS topic used to send notification to users
func (o GetManagedInstancesManagedInstanceOutput) NotificationTopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstancesManagedInstance) string { return v.NotificationTopicId }).(pulumi.StringOutput)
}

// The OS family for which to list resources.
func (o GetManagedInstancesManagedInstanceOutput) OsFamily() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstancesManagedInstance) string { return v.OsFamily }).(pulumi.StringOutput)
}

// Operating System Kernel Version
func (o GetManagedInstancesManagedInstanceOutput) OsKernelVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstancesManagedInstance) string { return v.OsKernelVersion }).(pulumi.StringOutput)
}

// Operating System Name
func (o GetManagedInstancesManagedInstanceOutput) OsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstancesManagedInstance) string { return v.OsName }).(pulumi.StringOutput)
}

// Operating System Version
func (o GetManagedInstancesManagedInstanceOutput) OsVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstancesManagedInstance) string { return v.OsVersion }).(pulumi.StringOutput)
}

// Number of non-classified updates available to be installed
func (o GetManagedInstancesManagedInstanceOutput) OtherUpdatesAvailable() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagedInstancesManagedInstance) int { return v.OtherUpdatesAvailable }).(pulumi.IntOutput)
}

// the parent (base) Software Source attached to the Managed Instance
func (o GetManagedInstancesManagedInstanceOutput) ParentSoftwareSources() GetManagedInstancesManagedInstanceParentSoftwareSourceArrayOutput {
	return o.ApplyT(func(v GetManagedInstancesManagedInstance) []GetManagedInstancesManagedInstanceParentSoftwareSource {
		return v.ParentSoftwareSources
	}).(GetManagedInstancesManagedInstanceParentSoftwareSourceArrayOutput)
}

// Number of scheduled jobs associated with this instance
func (o GetManagedInstancesManagedInstanceOutput) ScheduledJobCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagedInstancesManagedInstance) int { return v.ScheduledJobCount }).(pulumi.IntOutput)
}

// Number of security type updates available to be installed
func (o GetManagedInstancesManagedInstanceOutput) SecurityUpdatesAvailable() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagedInstancesManagedInstance) int { return v.SecurityUpdatesAvailable }).(pulumi.IntOutput)
}

// status of the managed instance.
func (o GetManagedInstancesManagedInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstancesManagedInstance) string { return v.Status }).(pulumi.StringOutput)
}

// Number of updates available to be installed
func (o GetManagedInstancesManagedInstanceOutput) UpdatesAvailable() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagedInstancesManagedInstance) int { return v.UpdatesAvailable }).(pulumi.IntOutput)
}

// Number of work requests associated with this instance
func (o GetManagedInstancesManagedInstanceOutput) WorkRequestCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagedInstancesManagedInstance) int { return v.WorkRequestCount }).(pulumi.IntOutput)
}

type GetManagedInstancesManagedInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetManagedInstancesManagedInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstancesManagedInstance)(nil)).Elem()
}

func (o GetManagedInstancesManagedInstanceArrayOutput) ToGetManagedInstancesManagedInstanceArrayOutput() GetManagedInstancesManagedInstanceArrayOutput {
	return o
}

func (o GetManagedInstancesManagedInstanceArrayOutput) ToGetManagedInstancesManagedInstanceArrayOutputWithContext(ctx context.Context) GetManagedInstancesManagedInstanceArrayOutput {
	return o
}

func (o GetManagedInstancesManagedInstanceArrayOutput) Index(i pulumi.IntInput) GetManagedInstancesManagedInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedInstancesManagedInstance {
		return vs[0].([]GetManagedInstancesManagedInstance)[vs[1].(int)]
	}).(GetManagedInstancesManagedInstanceOutput)
}

type GetManagedInstancesManagedInstanceAutonomouse struct {
	// True if daily updates are enabled
	IsAutoUpdateEnabled bool `pulumi:"isAutoUpdateEnabled"`
}

// GetManagedInstancesManagedInstanceAutonomouseInput is an input type that accepts GetManagedInstancesManagedInstanceAutonomouseArgs and GetManagedInstancesManagedInstanceAutonomouseOutput values.
// You can construct a concrete instance of `GetManagedInstancesManagedInstanceAutonomouseInput` via:
//
//	GetManagedInstancesManagedInstanceAutonomouseArgs{...}
type GetManagedInstancesManagedInstanceAutonomouseInput interface {
	pulumi.Input

	ToGetManagedInstancesManagedInstanceAutonomouseOutput() GetManagedInstancesManagedInstanceAutonomouseOutput
	ToGetManagedInstancesManagedInstanceAutonomouseOutputWithContext(context.Context) GetManagedInstancesManagedInstanceAutonomouseOutput
}

type GetManagedInstancesManagedInstanceAutonomouseArgs struct {
	// True if daily updates are enabled
	IsAutoUpdateEnabled pulumi.BoolInput `pulumi:"isAutoUpdateEnabled"`
}

func (GetManagedInstancesManagedInstanceAutonomouseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstancesManagedInstanceAutonomouse)(nil)).Elem()
}

func (i GetManagedInstancesManagedInstanceAutonomouseArgs) ToGetManagedInstancesManagedInstanceAutonomouseOutput() GetManagedInstancesManagedInstanceAutonomouseOutput {
	return i.ToGetManagedInstancesManagedInstanceAutonomouseOutputWithContext(context.Background())
}

func (i GetManagedInstancesManagedInstanceAutonomouseArgs) ToGetManagedInstancesManagedInstanceAutonomouseOutputWithContext(ctx context.Context) GetManagedInstancesManagedInstanceAutonomouseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstancesManagedInstanceAutonomouseOutput)
}

// GetManagedInstancesManagedInstanceAutonomouseArrayInput is an input type that accepts GetManagedInstancesManagedInstanceAutonomouseArray and GetManagedInstancesManagedInstanceAutonomouseArrayOutput values.
// You can construct a concrete instance of `GetManagedInstancesManagedInstanceAutonomouseArrayInput` via:
//
//	GetManagedInstancesManagedInstanceAutonomouseArray{ GetManagedInstancesManagedInstanceAutonomouseArgs{...} }
type GetManagedInstancesManagedInstanceAutonomouseArrayInput interface {
	pulumi.Input

	ToGetManagedInstancesManagedInstanceAutonomouseArrayOutput() GetManagedInstancesManagedInstanceAutonomouseArrayOutput
	ToGetManagedInstancesManagedInstanceAutonomouseArrayOutputWithContext(context.Context) GetManagedInstancesManagedInstanceAutonomouseArrayOutput
}

type GetManagedInstancesManagedInstanceAutonomouseArray []GetManagedInstancesManagedInstanceAutonomouseInput

func (GetManagedInstancesManagedInstanceAutonomouseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstancesManagedInstanceAutonomouse)(nil)).Elem()
}

func (i GetManagedInstancesManagedInstanceAutonomouseArray) ToGetManagedInstancesManagedInstanceAutonomouseArrayOutput() GetManagedInstancesManagedInstanceAutonomouseArrayOutput {
	return i.ToGetManagedInstancesManagedInstanceAutonomouseArrayOutputWithContext(context.Background())
}

func (i GetManagedInstancesManagedInstanceAutonomouseArray) ToGetManagedInstancesManagedInstanceAutonomouseArrayOutputWithContext(ctx context.Context) GetManagedInstancesManagedInstanceAutonomouseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstancesManagedInstanceAutonomouseArrayOutput)
}

type GetManagedInstancesManagedInstanceAutonomouseOutput struct{ *pulumi.OutputState }

func (GetManagedInstancesManagedInstanceAutonomouseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstancesManagedInstanceAutonomouse)(nil)).Elem()
}

func (o GetManagedInstancesManagedInstanceAutonomouseOutput) ToGetManagedInstancesManagedInstanceAutonomouseOutput() GetManagedInstancesManagedInstanceAutonomouseOutput {
	return o
}

func (o GetManagedInstancesManagedInstanceAutonomouseOutput) ToGetManagedInstancesManagedInstanceAutonomouseOutputWithContext(ctx context.Context) GetManagedInstancesManagedInstanceAutonomouseOutput {
	return o
}

// True if daily updates are enabled
func (o GetManagedInstancesManagedInstanceAutonomouseOutput) IsAutoUpdateEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetManagedInstancesManagedInstanceAutonomouse) bool { return v.IsAutoUpdateEnabled }).(pulumi.BoolOutput)
}

type GetManagedInstancesManagedInstanceAutonomouseArrayOutput struct{ *pulumi.OutputState }

func (GetManagedInstancesManagedInstanceAutonomouseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstancesManagedInstanceAutonomouse)(nil)).Elem()
}

func (o GetManagedInstancesManagedInstanceAutonomouseArrayOutput) ToGetManagedInstancesManagedInstanceAutonomouseArrayOutput() GetManagedInstancesManagedInstanceAutonomouseArrayOutput {
	return o
}

func (o GetManagedInstancesManagedInstanceAutonomouseArrayOutput) ToGetManagedInstancesManagedInstanceAutonomouseArrayOutputWithContext(ctx context.Context) GetManagedInstancesManagedInstanceAutonomouseArrayOutput {
	return o
}

func (o GetManagedInstancesManagedInstanceAutonomouseArrayOutput) Index(i pulumi.IntInput) GetManagedInstancesManagedInstanceAutonomouseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedInstancesManagedInstanceAutonomouse {
		return vs[0].([]GetManagedInstancesManagedInstanceAutonomouse)[vs[1].(int)]
	}).(GetManagedInstancesManagedInstanceAutonomouseOutput)
}

type GetManagedInstancesManagedInstanceChildSoftwareSource struct {
	// software source identifier
	Id string `pulumi:"id"`
	// software source name
	Name string `pulumi:"name"`
}

// GetManagedInstancesManagedInstanceChildSoftwareSourceInput is an input type that accepts GetManagedInstancesManagedInstanceChildSoftwareSourceArgs and GetManagedInstancesManagedInstanceChildSoftwareSourceOutput values.
// You can construct a concrete instance of `GetManagedInstancesManagedInstanceChildSoftwareSourceInput` via:
//
//	GetManagedInstancesManagedInstanceChildSoftwareSourceArgs{...}
type GetManagedInstancesManagedInstanceChildSoftwareSourceInput interface {
	pulumi.Input

	ToGetManagedInstancesManagedInstanceChildSoftwareSourceOutput() GetManagedInstancesManagedInstanceChildSoftwareSourceOutput
	ToGetManagedInstancesManagedInstanceChildSoftwareSourceOutputWithContext(context.Context) GetManagedInstancesManagedInstanceChildSoftwareSourceOutput
}

type GetManagedInstancesManagedInstanceChildSoftwareSourceArgs struct {
	// software source identifier
	Id pulumi.StringInput `pulumi:"id"`
	// software source name
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetManagedInstancesManagedInstanceChildSoftwareSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstancesManagedInstanceChildSoftwareSource)(nil)).Elem()
}

func (i GetManagedInstancesManagedInstanceChildSoftwareSourceArgs) ToGetManagedInstancesManagedInstanceChildSoftwareSourceOutput() GetManagedInstancesManagedInstanceChildSoftwareSourceOutput {
	return i.ToGetManagedInstancesManagedInstanceChildSoftwareSourceOutputWithContext(context.Background())
}

func (i GetManagedInstancesManagedInstanceChildSoftwareSourceArgs) ToGetManagedInstancesManagedInstanceChildSoftwareSourceOutputWithContext(ctx context.Context) GetManagedInstancesManagedInstanceChildSoftwareSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstancesManagedInstanceChildSoftwareSourceOutput)
}

// GetManagedInstancesManagedInstanceChildSoftwareSourceArrayInput is an input type that accepts GetManagedInstancesManagedInstanceChildSoftwareSourceArray and GetManagedInstancesManagedInstanceChildSoftwareSourceArrayOutput values.
// You can construct a concrete instance of `GetManagedInstancesManagedInstanceChildSoftwareSourceArrayInput` via:
//
//	GetManagedInstancesManagedInstanceChildSoftwareSourceArray{ GetManagedInstancesManagedInstanceChildSoftwareSourceArgs{...} }
type GetManagedInstancesManagedInstanceChildSoftwareSourceArrayInput interface {
	pulumi.Input

	ToGetManagedInstancesManagedInstanceChildSoftwareSourceArrayOutput() GetManagedInstancesManagedInstanceChildSoftwareSourceArrayOutput
	ToGetManagedInstancesManagedInstanceChildSoftwareSourceArrayOutputWithContext(context.Context) GetManagedInstancesManagedInstanceChildSoftwareSourceArrayOutput
}

type GetManagedInstancesManagedInstanceChildSoftwareSourceArray []GetManagedInstancesManagedInstanceChildSoftwareSourceInput

func (GetManagedInstancesManagedInstanceChildSoftwareSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstancesManagedInstanceChildSoftwareSource)(nil)).Elem()
}

func (i GetManagedInstancesManagedInstanceChildSoftwareSourceArray) ToGetManagedInstancesManagedInstanceChildSoftwareSourceArrayOutput() GetManagedInstancesManagedInstanceChildSoftwareSourceArrayOutput {
	return i.ToGetManagedInstancesManagedInstanceChildSoftwareSourceArrayOutputWithContext(context.Background())
}

func (i GetManagedInstancesManagedInstanceChildSoftwareSourceArray) ToGetManagedInstancesManagedInstanceChildSoftwareSourceArrayOutputWithContext(ctx context.Context) GetManagedInstancesManagedInstanceChildSoftwareSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstancesManagedInstanceChildSoftwareSourceArrayOutput)
}

type GetManagedInstancesManagedInstanceChildSoftwareSourceOutput struct{ *pulumi.OutputState }

func (GetManagedInstancesManagedInstanceChildSoftwareSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstancesManagedInstanceChildSoftwareSource)(nil)).Elem()
}

func (o GetManagedInstancesManagedInstanceChildSoftwareSourceOutput) ToGetManagedInstancesManagedInstanceChildSoftwareSourceOutput() GetManagedInstancesManagedInstanceChildSoftwareSourceOutput {
	return o
}

func (o GetManagedInstancesManagedInstanceChildSoftwareSourceOutput) ToGetManagedInstancesManagedInstanceChildSoftwareSourceOutputWithContext(ctx context.Context) GetManagedInstancesManagedInstanceChildSoftwareSourceOutput {
	return o
}

// software source identifier
func (o GetManagedInstancesManagedInstanceChildSoftwareSourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstancesManagedInstanceChildSoftwareSource) string { return v.Id }).(pulumi.StringOutput)
}

// software source name
func (o GetManagedInstancesManagedInstanceChildSoftwareSourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstancesManagedInstanceChildSoftwareSource) string { return v.Name }).(pulumi.StringOutput)
}

type GetManagedInstancesManagedInstanceChildSoftwareSourceArrayOutput struct{ *pulumi.OutputState }

func (GetManagedInstancesManagedInstanceChildSoftwareSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstancesManagedInstanceChildSoftwareSource)(nil)).Elem()
}

func (o GetManagedInstancesManagedInstanceChildSoftwareSourceArrayOutput) ToGetManagedInstancesManagedInstanceChildSoftwareSourceArrayOutput() GetManagedInstancesManagedInstanceChildSoftwareSourceArrayOutput {
	return o
}

func (o GetManagedInstancesManagedInstanceChildSoftwareSourceArrayOutput) ToGetManagedInstancesManagedInstanceChildSoftwareSourceArrayOutputWithContext(ctx context.Context) GetManagedInstancesManagedInstanceChildSoftwareSourceArrayOutput {
	return o
}

func (o GetManagedInstancesManagedInstanceChildSoftwareSourceArrayOutput) Index(i pulumi.IntInput) GetManagedInstancesManagedInstanceChildSoftwareSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedInstancesManagedInstanceChildSoftwareSource {
		return vs[0].([]GetManagedInstancesManagedInstanceChildSoftwareSource)[vs[1].(int)]
	}).(GetManagedInstancesManagedInstanceChildSoftwareSourceOutput)
}

type GetManagedInstancesManagedInstanceManagedInstanceGroup struct {
	// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName string `pulumi:"displayName"`
	// software source identifier
	Id string `pulumi:"id"`
}

// GetManagedInstancesManagedInstanceManagedInstanceGroupInput is an input type that accepts GetManagedInstancesManagedInstanceManagedInstanceGroupArgs and GetManagedInstancesManagedInstanceManagedInstanceGroupOutput values.
// You can construct a concrete instance of `GetManagedInstancesManagedInstanceManagedInstanceGroupInput` via:
//
//	GetManagedInstancesManagedInstanceManagedInstanceGroupArgs{...}
type GetManagedInstancesManagedInstanceManagedInstanceGroupInput interface {
	pulumi.Input

	ToGetManagedInstancesManagedInstanceManagedInstanceGroupOutput() GetManagedInstancesManagedInstanceManagedInstanceGroupOutput
	ToGetManagedInstancesManagedInstanceManagedInstanceGroupOutputWithContext(context.Context) GetManagedInstancesManagedInstanceManagedInstanceGroupOutput
}

type GetManagedInstancesManagedInstanceManagedInstanceGroupArgs struct {
	// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// software source identifier
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetManagedInstancesManagedInstanceManagedInstanceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstancesManagedInstanceManagedInstanceGroup)(nil)).Elem()
}

func (i GetManagedInstancesManagedInstanceManagedInstanceGroupArgs) ToGetManagedInstancesManagedInstanceManagedInstanceGroupOutput() GetManagedInstancesManagedInstanceManagedInstanceGroupOutput {
	return i.ToGetManagedInstancesManagedInstanceManagedInstanceGroupOutputWithContext(context.Background())
}

func (i GetManagedInstancesManagedInstanceManagedInstanceGroupArgs) ToGetManagedInstancesManagedInstanceManagedInstanceGroupOutputWithContext(ctx context.Context) GetManagedInstancesManagedInstanceManagedInstanceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstancesManagedInstanceManagedInstanceGroupOutput)
}

// GetManagedInstancesManagedInstanceManagedInstanceGroupArrayInput is an input type that accepts GetManagedInstancesManagedInstanceManagedInstanceGroupArray and GetManagedInstancesManagedInstanceManagedInstanceGroupArrayOutput values.
// You can construct a concrete instance of `GetManagedInstancesManagedInstanceManagedInstanceGroupArrayInput` via:
//
//	GetManagedInstancesManagedInstanceManagedInstanceGroupArray{ GetManagedInstancesManagedInstanceManagedInstanceGroupArgs{...} }
type GetManagedInstancesManagedInstanceManagedInstanceGroupArrayInput interface {
	pulumi.Input

	ToGetManagedInstancesManagedInstanceManagedInstanceGroupArrayOutput() GetManagedInstancesManagedInstanceManagedInstanceGroupArrayOutput
	ToGetManagedInstancesManagedInstanceManagedInstanceGroupArrayOutputWithContext(context.Context) GetManagedInstancesManagedInstanceManagedInstanceGroupArrayOutput
}

type GetManagedInstancesManagedInstanceManagedInstanceGroupArray []GetManagedInstancesManagedInstanceManagedInstanceGroupInput

func (GetManagedInstancesManagedInstanceManagedInstanceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstancesManagedInstanceManagedInstanceGroup)(nil)).Elem()
}

func (i GetManagedInstancesManagedInstanceManagedInstanceGroupArray) ToGetManagedInstancesManagedInstanceManagedInstanceGroupArrayOutput() GetManagedInstancesManagedInstanceManagedInstanceGroupArrayOutput {
	return i.ToGetManagedInstancesManagedInstanceManagedInstanceGroupArrayOutputWithContext(context.Background())
}

func (i GetManagedInstancesManagedInstanceManagedInstanceGroupArray) ToGetManagedInstancesManagedInstanceManagedInstanceGroupArrayOutputWithContext(ctx context.Context) GetManagedInstancesManagedInstanceManagedInstanceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstancesManagedInstanceManagedInstanceGroupArrayOutput)
}

type GetManagedInstancesManagedInstanceManagedInstanceGroupOutput struct{ *pulumi.OutputState }

func (GetManagedInstancesManagedInstanceManagedInstanceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstancesManagedInstanceManagedInstanceGroup)(nil)).Elem()
}

func (o GetManagedInstancesManagedInstanceManagedInstanceGroupOutput) ToGetManagedInstancesManagedInstanceManagedInstanceGroupOutput() GetManagedInstancesManagedInstanceManagedInstanceGroupOutput {
	return o
}

func (o GetManagedInstancesManagedInstanceManagedInstanceGroupOutput) ToGetManagedInstancesManagedInstanceManagedInstanceGroupOutputWithContext(ctx context.Context) GetManagedInstancesManagedInstanceManagedInstanceGroupOutput {
	return o
}

// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
func (o GetManagedInstancesManagedInstanceManagedInstanceGroupOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstancesManagedInstanceManagedInstanceGroup) string { return v.DisplayName }).(pulumi.StringOutput)
}

// software source identifier
func (o GetManagedInstancesManagedInstanceManagedInstanceGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstancesManagedInstanceManagedInstanceGroup) string { return v.Id }).(pulumi.StringOutput)
}

type GetManagedInstancesManagedInstanceManagedInstanceGroupArrayOutput struct{ *pulumi.OutputState }

func (GetManagedInstancesManagedInstanceManagedInstanceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstancesManagedInstanceManagedInstanceGroup)(nil)).Elem()
}

func (o GetManagedInstancesManagedInstanceManagedInstanceGroupArrayOutput) ToGetManagedInstancesManagedInstanceManagedInstanceGroupArrayOutput() GetManagedInstancesManagedInstanceManagedInstanceGroupArrayOutput {
	return o
}

func (o GetManagedInstancesManagedInstanceManagedInstanceGroupArrayOutput) ToGetManagedInstancesManagedInstanceManagedInstanceGroupArrayOutputWithContext(ctx context.Context) GetManagedInstancesManagedInstanceManagedInstanceGroupArrayOutput {
	return o
}

func (o GetManagedInstancesManagedInstanceManagedInstanceGroupArrayOutput) Index(i pulumi.IntInput) GetManagedInstancesManagedInstanceManagedInstanceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedInstancesManagedInstanceManagedInstanceGroup {
		return vs[0].([]GetManagedInstancesManagedInstanceManagedInstanceGroup)[vs[1].(int)]
	}).(GetManagedInstancesManagedInstanceManagedInstanceGroupOutput)
}

type GetManagedInstancesManagedInstanceParentSoftwareSource struct {
	// software source identifier
	Id string `pulumi:"id"`
	// software source name
	Name string `pulumi:"name"`
}

// GetManagedInstancesManagedInstanceParentSoftwareSourceInput is an input type that accepts GetManagedInstancesManagedInstanceParentSoftwareSourceArgs and GetManagedInstancesManagedInstanceParentSoftwareSourceOutput values.
// You can construct a concrete instance of `GetManagedInstancesManagedInstanceParentSoftwareSourceInput` via:
//
//	GetManagedInstancesManagedInstanceParentSoftwareSourceArgs{...}
type GetManagedInstancesManagedInstanceParentSoftwareSourceInput interface {
	pulumi.Input

	ToGetManagedInstancesManagedInstanceParentSoftwareSourceOutput() GetManagedInstancesManagedInstanceParentSoftwareSourceOutput
	ToGetManagedInstancesManagedInstanceParentSoftwareSourceOutputWithContext(context.Context) GetManagedInstancesManagedInstanceParentSoftwareSourceOutput
}

type GetManagedInstancesManagedInstanceParentSoftwareSourceArgs struct {
	// software source identifier
	Id pulumi.StringInput `pulumi:"id"`
	// software source name
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetManagedInstancesManagedInstanceParentSoftwareSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstancesManagedInstanceParentSoftwareSource)(nil)).Elem()
}

func (i GetManagedInstancesManagedInstanceParentSoftwareSourceArgs) ToGetManagedInstancesManagedInstanceParentSoftwareSourceOutput() GetManagedInstancesManagedInstanceParentSoftwareSourceOutput {
	return i.ToGetManagedInstancesManagedInstanceParentSoftwareSourceOutputWithContext(context.Background())
}

func (i GetManagedInstancesManagedInstanceParentSoftwareSourceArgs) ToGetManagedInstancesManagedInstanceParentSoftwareSourceOutputWithContext(ctx context.Context) GetManagedInstancesManagedInstanceParentSoftwareSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstancesManagedInstanceParentSoftwareSourceOutput)
}

// GetManagedInstancesManagedInstanceParentSoftwareSourceArrayInput is an input type that accepts GetManagedInstancesManagedInstanceParentSoftwareSourceArray and GetManagedInstancesManagedInstanceParentSoftwareSourceArrayOutput values.
// You can construct a concrete instance of `GetManagedInstancesManagedInstanceParentSoftwareSourceArrayInput` via:
//
//	GetManagedInstancesManagedInstanceParentSoftwareSourceArray{ GetManagedInstancesManagedInstanceParentSoftwareSourceArgs{...} }
type GetManagedInstancesManagedInstanceParentSoftwareSourceArrayInput interface {
	pulumi.Input

	ToGetManagedInstancesManagedInstanceParentSoftwareSourceArrayOutput() GetManagedInstancesManagedInstanceParentSoftwareSourceArrayOutput
	ToGetManagedInstancesManagedInstanceParentSoftwareSourceArrayOutputWithContext(context.Context) GetManagedInstancesManagedInstanceParentSoftwareSourceArrayOutput
}

type GetManagedInstancesManagedInstanceParentSoftwareSourceArray []GetManagedInstancesManagedInstanceParentSoftwareSourceInput

func (GetManagedInstancesManagedInstanceParentSoftwareSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstancesManagedInstanceParentSoftwareSource)(nil)).Elem()
}

func (i GetManagedInstancesManagedInstanceParentSoftwareSourceArray) ToGetManagedInstancesManagedInstanceParentSoftwareSourceArrayOutput() GetManagedInstancesManagedInstanceParentSoftwareSourceArrayOutput {
	return i.ToGetManagedInstancesManagedInstanceParentSoftwareSourceArrayOutputWithContext(context.Background())
}

func (i GetManagedInstancesManagedInstanceParentSoftwareSourceArray) ToGetManagedInstancesManagedInstanceParentSoftwareSourceArrayOutputWithContext(ctx context.Context) GetManagedInstancesManagedInstanceParentSoftwareSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstancesManagedInstanceParentSoftwareSourceArrayOutput)
}

type GetManagedInstancesManagedInstanceParentSoftwareSourceOutput struct{ *pulumi.OutputState }

func (GetManagedInstancesManagedInstanceParentSoftwareSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstancesManagedInstanceParentSoftwareSource)(nil)).Elem()
}

func (o GetManagedInstancesManagedInstanceParentSoftwareSourceOutput) ToGetManagedInstancesManagedInstanceParentSoftwareSourceOutput() GetManagedInstancesManagedInstanceParentSoftwareSourceOutput {
	return o
}

func (o GetManagedInstancesManagedInstanceParentSoftwareSourceOutput) ToGetManagedInstancesManagedInstanceParentSoftwareSourceOutputWithContext(ctx context.Context) GetManagedInstancesManagedInstanceParentSoftwareSourceOutput {
	return o
}

// software source identifier
func (o GetManagedInstancesManagedInstanceParentSoftwareSourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstancesManagedInstanceParentSoftwareSource) string { return v.Id }).(pulumi.StringOutput)
}

// software source name
func (o GetManagedInstancesManagedInstanceParentSoftwareSourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstancesManagedInstanceParentSoftwareSource) string { return v.Name }).(pulumi.StringOutput)
}

type GetManagedInstancesManagedInstanceParentSoftwareSourceArrayOutput struct{ *pulumi.OutputState }

func (GetManagedInstancesManagedInstanceParentSoftwareSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstancesManagedInstanceParentSoftwareSource)(nil)).Elem()
}

func (o GetManagedInstancesManagedInstanceParentSoftwareSourceArrayOutput) ToGetManagedInstancesManagedInstanceParentSoftwareSourceArrayOutput() GetManagedInstancesManagedInstanceParentSoftwareSourceArrayOutput {
	return o
}

func (o GetManagedInstancesManagedInstanceParentSoftwareSourceArrayOutput) ToGetManagedInstancesManagedInstanceParentSoftwareSourceArrayOutputWithContext(ctx context.Context) GetManagedInstancesManagedInstanceParentSoftwareSourceArrayOutput {
	return o
}

func (o GetManagedInstancesManagedInstanceParentSoftwareSourceArrayOutput) Index(i pulumi.IntInput) GetManagedInstancesManagedInstanceParentSoftwareSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedInstancesManagedInstanceParentSoftwareSource {
		return vs[0].([]GetManagedInstancesManagedInstanceParentSoftwareSource)[vs[1].(int)]
	}).(GetManagedInstancesManagedInstanceParentSoftwareSourceOutput)
}

type GetSoftwareSourceAssociatedManagedInstance struct {
	// User friendly name for the software source
	DisplayName string `pulumi:"displayName"`
	// OCID for the Software Source
	Id string `pulumi:"id"`
}

// GetSoftwareSourceAssociatedManagedInstanceInput is an input type that accepts GetSoftwareSourceAssociatedManagedInstanceArgs and GetSoftwareSourceAssociatedManagedInstanceOutput values.
// You can construct a concrete instance of `GetSoftwareSourceAssociatedManagedInstanceInput` via:
//
//	GetSoftwareSourceAssociatedManagedInstanceArgs{...}
type GetSoftwareSourceAssociatedManagedInstanceInput interface {
	pulumi.Input

	ToGetSoftwareSourceAssociatedManagedInstanceOutput() GetSoftwareSourceAssociatedManagedInstanceOutput
	ToGetSoftwareSourceAssociatedManagedInstanceOutputWithContext(context.Context) GetSoftwareSourceAssociatedManagedInstanceOutput
}

type GetSoftwareSourceAssociatedManagedInstanceArgs struct {
	// User friendly name for the software source
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// OCID for the Software Source
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetSoftwareSourceAssociatedManagedInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceAssociatedManagedInstance)(nil)).Elem()
}

func (i GetSoftwareSourceAssociatedManagedInstanceArgs) ToGetSoftwareSourceAssociatedManagedInstanceOutput() GetSoftwareSourceAssociatedManagedInstanceOutput {
	return i.ToGetSoftwareSourceAssociatedManagedInstanceOutputWithContext(context.Background())
}

func (i GetSoftwareSourceAssociatedManagedInstanceArgs) ToGetSoftwareSourceAssociatedManagedInstanceOutputWithContext(ctx context.Context) GetSoftwareSourceAssociatedManagedInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceAssociatedManagedInstanceOutput)
}

// GetSoftwareSourceAssociatedManagedInstanceArrayInput is an input type that accepts GetSoftwareSourceAssociatedManagedInstanceArray and GetSoftwareSourceAssociatedManagedInstanceArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourceAssociatedManagedInstanceArrayInput` via:
//
//	GetSoftwareSourceAssociatedManagedInstanceArray{ GetSoftwareSourceAssociatedManagedInstanceArgs{...} }
type GetSoftwareSourceAssociatedManagedInstanceArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourceAssociatedManagedInstanceArrayOutput() GetSoftwareSourceAssociatedManagedInstanceArrayOutput
	ToGetSoftwareSourceAssociatedManagedInstanceArrayOutputWithContext(context.Context) GetSoftwareSourceAssociatedManagedInstanceArrayOutput
}

type GetSoftwareSourceAssociatedManagedInstanceArray []GetSoftwareSourceAssociatedManagedInstanceInput

func (GetSoftwareSourceAssociatedManagedInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceAssociatedManagedInstance)(nil)).Elem()
}

func (i GetSoftwareSourceAssociatedManagedInstanceArray) ToGetSoftwareSourceAssociatedManagedInstanceArrayOutput() GetSoftwareSourceAssociatedManagedInstanceArrayOutput {
	return i.ToGetSoftwareSourceAssociatedManagedInstanceArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourceAssociatedManagedInstanceArray) ToGetSoftwareSourceAssociatedManagedInstanceArrayOutputWithContext(ctx context.Context) GetSoftwareSourceAssociatedManagedInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceAssociatedManagedInstanceArrayOutput)
}

type GetSoftwareSourceAssociatedManagedInstanceOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceAssociatedManagedInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceAssociatedManagedInstance)(nil)).Elem()
}

func (o GetSoftwareSourceAssociatedManagedInstanceOutput) ToGetSoftwareSourceAssociatedManagedInstanceOutput() GetSoftwareSourceAssociatedManagedInstanceOutput {
	return o
}

func (o GetSoftwareSourceAssociatedManagedInstanceOutput) ToGetSoftwareSourceAssociatedManagedInstanceOutputWithContext(ctx context.Context) GetSoftwareSourceAssociatedManagedInstanceOutput {
	return o
}

// User friendly name for the software source
func (o GetSoftwareSourceAssociatedManagedInstanceOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareSourceAssociatedManagedInstance) string { return v.DisplayName }).(pulumi.StringOutput)
}

// OCID for the Software Source
func (o GetSoftwareSourceAssociatedManagedInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareSourceAssociatedManagedInstance) string { return v.Id }).(pulumi.StringOutput)
}

type GetSoftwareSourceAssociatedManagedInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceAssociatedManagedInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceAssociatedManagedInstance)(nil)).Elem()
}

func (o GetSoftwareSourceAssociatedManagedInstanceArrayOutput) ToGetSoftwareSourceAssociatedManagedInstanceArrayOutput() GetSoftwareSourceAssociatedManagedInstanceArrayOutput {
	return o
}

func (o GetSoftwareSourceAssociatedManagedInstanceArrayOutput) ToGetSoftwareSourceAssociatedManagedInstanceArrayOutputWithContext(ctx context.Context) GetSoftwareSourceAssociatedManagedInstanceArrayOutput {
	return o
}

func (o GetSoftwareSourceAssociatedManagedInstanceArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourceAssociatedManagedInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourceAssociatedManagedInstance {
		return vs[0].([]GetSoftwareSourceAssociatedManagedInstance)[vs[1].(int)]
	}).(GetSoftwareSourceAssociatedManagedInstanceOutput)
}

type GetSoftwareSourceStreamProfileFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetSoftwareSourceStreamProfileFilterInput is an input type that accepts GetSoftwareSourceStreamProfileFilterArgs and GetSoftwareSourceStreamProfileFilterOutput values.
// You can construct a concrete instance of `GetSoftwareSourceStreamProfileFilterInput` via:
//
//	GetSoftwareSourceStreamProfileFilterArgs{...}
type GetSoftwareSourceStreamProfileFilterInput interface {
	pulumi.Input

	ToGetSoftwareSourceStreamProfileFilterOutput() GetSoftwareSourceStreamProfileFilterOutput
	ToGetSoftwareSourceStreamProfileFilterOutputWithContext(context.Context) GetSoftwareSourceStreamProfileFilterOutput
}

type GetSoftwareSourceStreamProfileFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSoftwareSourceStreamProfileFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceStreamProfileFilter)(nil)).Elem()
}

func (i GetSoftwareSourceStreamProfileFilterArgs) ToGetSoftwareSourceStreamProfileFilterOutput() GetSoftwareSourceStreamProfileFilterOutput {
	return i.ToGetSoftwareSourceStreamProfileFilterOutputWithContext(context.Background())
}

func (i GetSoftwareSourceStreamProfileFilterArgs) ToGetSoftwareSourceStreamProfileFilterOutputWithContext(ctx context.Context) GetSoftwareSourceStreamProfileFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceStreamProfileFilterOutput)
}

// GetSoftwareSourceStreamProfileFilterArrayInput is an input type that accepts GetSoftwareSourceStreamProfileFilterArray and GetSoftwareSourceStreamProfileFilterArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourceStreamProfileFilterArrayInput` via:
//
//	GetSoftwareSourceStreamProfileFilterArray{ GetSoftwareSourceStreamProfileFilterArgs{...} }
type GetSoftwareSourceStreamProfileFilterArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourceStreamProfileFilterArrayOutput() GetSoftwareSourceStreamProfileFilterArrayOutput
	ToGetSoftwareSourceStreamProfileFilterArrayOutputWithContext(context.Context) GetSoftwareSourceStreamProfileFilterArrayOutput
}

type GetSoftwareSourceStreamProfileFilterArray []GetSoftwareSourceStreamProfileFilterInput

func (GetSoftwareSourceStreamProfileFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceStreamProfileFilter)(nil)).Elem()
}

func (i GetSoftwareSourceStreamProfileFilterArray) ToGetSoftwareSourceStreamProfileFilterArrayOutput() GetSoftwareSourceStreamProfileFilterArrayOutput {
	return i.ToGetSoftwareSourceStreamProfileFilterArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourceStreamProfileFilterArray) ToGetSoftwareSourceStreamProfileFilterArrayOutputWithContext(ctx context.Context) GetSoftwareSourceStreamProfileFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceStreamProfileFilterArrayOutput)
}

type GetSoftwareSourceStreamProfileFilterOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceStreamProfileFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceStreamProfileFilter)(nil)).Elem()
}

func (o GetSoftwareSourceStreamProfileFilterOutput) ToGetSoftwareSourceStreamProfileFilterOutput() GetSoftwareSourceStreamProfileFilterOutput {
	return o
}

func (o GetSoftwareSourceStreamProfileFilterOutput) ToGetSoftwareSourceStreamProfileFilterOutputWithContext(ctx context.Context) GetSoftwareSourceStreamProfileFilterOutput {
	return o
}

func (o GetSoftwareSourceStreamProfileFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareSourceStreamProfileFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSoftwareSourceStreamProfileFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceStreamProfileFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetSoftwareSourceStreamProfileFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourceStreamProfileFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSoftwareSourceStreamProfileFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceStreamProfileFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceStreamProfileFilter)(nil)).Elem()
}

func (o GetSoftwareSourceStreamProfileFilterArrayOutput) ToGetSoftwareSourceStreamProfileFilterArrayOutput() GetSoftwareSourceStreamProfileFilterArrayOutput {
	return o
}

func (o GetSoftwareSourceStreamProfileFilterArrayOutput) ToGetSoftwareSourceStreamProfileFilterArrayOutputWithContext(ctx context.Context) GetSoftwareSourceStreamProfileFilterArrayOutput {
	return o
}

func (o GetSoftwareSourceStreamProfileFilterArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourceStreamProfileFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourceStreamProfileFilter {
		return vs[0].([]GetSoftwareSourceStreamProfileFilter)[vs[1].(int)]
	}).(GetSoftwareSourceStreamProfileFilterOutput)
}

type GetSoftwareSourceStreamProfileModuleStreamProfile struct {
	// The name of a module.  This parameter is required if a streamName is specified.
	ModuleName string `pulumi:"moduleName"`
	// The name of the profile of the containing module stream
	ProfileName string `pulumi:"profileName"`
	// The name of the stream of the containing module.  This parameter is required if a profileName is specified.
	StreamName string `pulumi:"streamName"`
}

// GetSoftwareSourceStreamProfileModuleStreamProfileInput is an input type that accepts GetSoftwareSourceStreamProfileModuleStreamProfileArgs and GetSoftwareSourceStreamProfileModuleStreamProfileOutput values.
// You can construct a concrete instance of `GetSoftwareSourceStreamProfileModuleStreamProfileInput` via:
//
//	GetSoftwareSourceStreamProfileModuleStreamProfileArgs{...}
type GetSoftwareSourceStreamProfileModuleStreamProfileInput interface {
	pulumi.Input

	ToGetSoftwareSourceStreamProfileModuleStreamProfileOutput() GetSoftwareSourceStreamProfileModuleStreamProfileOutput
	ToGetSoftwareSourceStreamProfileModuleStreamProfileOutputWithContext(context.Context) GetSoftwareSourceStreamProfileModuleStreamProfileOutput
}

type GetSoftwareSourceStreamProfileModuleStreamProfileArgs struct {
	// The name of a module.  This parameter is required if a streamName is specified.
	ModuleName pulumi.StringInput `pulumi:"moduleName"`
	// The name of the profile of the containing module stream
	ProfileName pulumi.StringInput `pulumi:"profileName"`
	// The name of the stream of the containing module.  This parameter is required if a profileName is specified.
	StreamName pulumi.StringInput `pulumi:"streamName"`
}

func (GetSoftwareSourceStreamProfileModuleStreamProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceStreamProfileModuleStreamProfile)(nil)).Elem()
}

func (i GetSoftwareSourceStreamProfileModuleStreamProfileArgs) ToGetSoftwareSourceStreamProfileModuleStreamProfileOutput() GetSoftwareSourceStreamProfileModuleStreamProfileOutput {
	return i.ToGetSoftwareSourceStreamProfileModuleStreamProfileOutputWithContext(context.Background())
}

func (i GetSoftwareSourceStreamProfileModuleStreamProfileArgs) ToGetSoftwareSourceStreamProfileModuleStreamProfileOutputWithContext(ctx context.Context) GetSoftwareSourceStreamProfileModuleStreamProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceStreamProfileModuleStreamProfileOutput)
}

// GetSoftwareSourceStreamProfileModuleStreamProfileArrayInput is an input type that accepts GetSoftwareSourceStreamProfileModuleStreamProfileArray and GetSoftwareSourceStreamProfileModuleStreamProfileArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourceStreamProfileModuleStreamProfileArrayInput` via:
//
//	GetSoftwareSourceStreamProfileModuleStreamProfileArray{ GetSoftwareSourceStreamProfileModuleStreamProfileArgs{...} }
type GetSoftwareSourceStreamProfileModuleStreamProfileArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourceStreamProfileModuleStreamProfileArrayOutput() GetSoftwareSourceStreamProfileModuleStreamProfileArrayOutput
	ToGetSoftwareSourceStreamProfileModuleStreamProfileArrayOutputWithContext(context.Context) GetSoftwareSourceStreamProfileModuleStreamProfileArrayOutput
}

type GetSoftwareSourceStreamProfileModuleStreamProfileArray []GetSoftwareSourceStreamProfileModuleStreamProfileInput

func (GetSoftwareSourceStreamProfileModuleStreamProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceStreamProfileModuleStreamProfile)(nil)).Elem()
}

func (i GetSoftwareSourceStreamProfileModuleStreamProfileArray) ToGetSoftwareSourceStreamProfileModuleStreamProfileArrayOutput() GetSoftwareSourceStreamProfileModuleStreamProfileArrayOutput {
	return i.ToGetSoftwareSourceStreamProfileModuleStreamProfileArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourceStreamProfileModuleStreamProfileArray) ToGetSoftwareSourceStreamProfileModuleStreamProfileArrayOutputWithContext(ctx context.Context) GetSoftwareSourceStreamProfileModuleStreamProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceStreamProfileModuleStreamProfileArrayOutput)
}

type GetSoftwareSourceStreamProfileModuleStreamProfileOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceStreamProfileModuleStreamProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceStreamProfileModuleStreamProfile)(nil)).Elem()
}

func (o GetSoftwareSourceStreamProfileModuleStreamProfileOutput) ToGetSoftwareSourceStreamProfileModuleStreamProfileOutput() GetSoftwareSourceStreamProfileModuleStreamProfileOutput {
	return o
}

func (o GetSoftwareSourceStreamProfileModuleStreamProfileOutput) ToGetSoftwareSourceStreamProfileModuleStreamProfileOutputWithContext(ctx context.Context) GetSoftwareSourceStreamProfileModuleStreamProfileOutput {
	return o
}

// The name of a module.  This parameter is required if a streamName is specified.
func (o GetSoftwareSourceStreamProfileModuleStreamProfileOutput) ModuleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareSourceStreamProfileModuleStreamProfile) string { return v.ModuleName }).(pulumi.StringOutput)
}

// The name of the profile of the containing module stream
func (o GetSoftwareSourceStreamProfileModuleStreamProfileOutput) ProfileName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareSourceStreamProfileModuleStreamProfile) string { return v.ProfileName }).(pulumi.StringOutput)
}

// The name of the stream of the containing module.  This parameter is required if a profileName is specified.
func (o GetSoftwareSourceStreamProfileModuleStreamProfileOutput) StreamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareSourceStreamProfileModuleStreamProfile) string { return v.StreamName }).(pulumi.StringOutput)
}

type GetSoftwareSourceStreamProfileModuleStreamProfileArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceStreamProfileModuleStreamProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceStreamProfileModuleStreamProfile)(nil)).Elem()
}

func (o GetSoftwareSourceStreamProfileModuleStreamProfileArrayOutput) ToGetSoftwareSourceStreamProfileModuleStreamProfileArrayOutput() GetSoftwareSourceStreamProfileModuleStreamProfileArrayOutput {
	return o
}

func (o GetSoftwareSourceStreamProfileModuleStreamProfileArrayOutput) ToGetSoftwareSourceStreamProfileModuleStreamProfileArrayOutputWithContext(ctx context.Context) GetSoftwareSourceStreamProfileModuleStreamProfileArrayOutput {
	return o
}

func (o GetSoftwareSourceStreamProfileModuleStreamProfileArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourceStreamProfileModuleStreamProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourceStreamProfileModuleStreamProfile {
		return vs[0].([]GetSoftwareSourceStreamProfileModuleStreamProfile)[vs[1].(int)]
	}).(GetSoftwareSourceStreamProfileModuleStreamProfileOutput)
}

type GetSoftwareSourcesFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetSoftwareSourcesFilterInput is an input type that accepts GetSoftwareSourcesFilterArgs and GetSoftwareSourcesFilterOutput values.
// You can construct a concrete instance of `GetSoftwareSourcesFilterInput` via:
//
//	GetSoftwareSourcesFilterArgs{...}
type GetSoftwareSourcesFilterInput interface {
	pulumi.Input

	ToGetSoftwareSourcesFilterOutput() GetSoftwareSourcesFilterOutput
	ToGetSoftwareSourcesFilterOutputWithContext(context.Context) GetSoftwareSourcesFilterOutput
}

type GetSoftwareSourcesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSoftwareSourcesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourcesFilter)(nil)).Elem()
}

func (i GetSoftwareSourcesFilterArgs) ToGetSoftwareSourcesFilterOutput() GetSoftwareSourcesFilterOutput {
	return i.ToGetSoftwareSourcesFilterOutputWithContext(context.Background())
}

func (i GetSoftwareSourcesFilterArgs) ToGetSoftwareSourcesFilterOutputWithContext(ctx context.Context) GetSoftwareSourcesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourcesFilterOutput)
}

// GetSoftwareSourcesFilterArrayInput is an input type that accepts GetSoftwareSourcesFilterArray and GetSoftwareSourcesFilterArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourcesFilterArrayInput` via:
//
//	GetSoftwareSourcesFilterArray{ GetSoftwareSourcesFilterArgs{...} }
type GetSoftwareSourcesFilterArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourcesFilterArrayOutput() GetSoftwareSourcesFilterArrayOutput
	ToGetSoftwareSourcesFilterArrayOutputWithContext(context.Context) GetSoftwareSourcesFilterArrayOutput
}

type GetSoftwareSourcesFilterArray []GetSoftwareSourcesFilterInput

func (GetSoftwareSourcesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourcesFilter)(nil)).Elem()
}

func (i GetSoftwareSourcesFilterArray) ToGetSoftwareSourcesFilterArrayOutput() GetSoftwareSourcesFilterArrayOutput {
	return i.ToGetSoftwareSourcesFilterArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourcesFilterArray) ToGetSoftwareSourcesFilterArrayOutputWithContext(ctx context.Context) GetSoftwareSourcesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourcesFilterArrayOutput)
}

type GetSoftwareSourcesFilterOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourcesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourcesFilter)(nil)).Elem()
}

func (o GetSoftwareSourcesFilterOutput) ToGetSoftwareSourcesFilterOutput() GetSoftwareSourcesFilterOutput {
	return o
}

func (o GetSoftwareSourcesFilterOutput) ToGetSoftwareSourcesFilterOutputWithContext(ctx context.Context) GetSoftwareSourcesFilterOutput {
	return o
}

func (o GetSoftwareSourcesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareSourcesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSoftwareSourcesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetSoftwareSourcesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourcesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSoftwareSourcesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourcesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourcesFilter)(nil)).Elem()
}

func (o GetSoftwareSourcesFilterArrayOutput) ToGetSoftwareSourcesFilterArrayOutput() GetSoftwareSourcesFilterArrayOutput {
	return o
}

func (o GetSoftwareSourcesFilterArrayOutput) ToGetSoftwareSourcesFilterArrayOutputWithContext(ctx context.Context) GetSoftwareSourcesFilterArrayOutput {
	return o
}

func (o GetSoftwareSourcesFilterArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourcesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourcesFilter {
		return vs[0].([]GetSoftwareSourcesFilter)[vs[1].(int)]
	}).(GetSoftwareSourcesFilterOutput)
}

type GetSoftwareSourcesSoftwareSource struct {
	// The architecture type supported by the Software Source
	ArchType string `pulumi:"archType"`
	// list of the Managed Instances associated with this Software Sources
	AssociatedManagedInstances []GetSoftwareSourcesSoftwareSourceAssociatedManagedInstance `pulumi:"associatedManagedInstances"`
	// The yum repository checksum type used by this software source
	ChecksumType string `pulumi:"checksumType"`
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Information specified by the user about the software source
	Description string `pulumi:"description"`
	// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Fingerprint of the GPG key for this software source
	GpgKeyFingerprint string `pulumi:"gpgKeyFingerprint"`
	// ID of the GPG key for this software source
	GpgKeyId string `pulumi:"gpgKeyId"`
	// URL of the GPG key for this software source
	GpgKeyUrl string `pulumi:"gpgKeyUrl"`
	// OCID for the Software Source
	Id string `pulumi:"id"`
	// Email address of the person maintaining this software source
	MaintainerEmail string `pulumi:"maintainerEmail"`
	// Name of the person maintaining this software source
	MaintainerName string `pulumi:"maintainerName"`
	// Phone number of the person maintaining this software source
	MaintainerPhone string `pulumi:"maintainerPhone"`
	// Number of packages
	Packages int `pulumi:"packages"`
	// OCID for the parent software source, if there is one
	ParentId string `pulumi:"parentId"`
	// Display name the parent software source, if there is one
	ParentName string `pulumi:"parentName"`
	// Type of the Software Source
	RepoType string `pulumi:"repoType"`
	// The current lifecycle state for the object.
	State string `pulumi:"state"`
	// status of the software source.
	Status string `pulumi:"status"`
	// URL for the repostiory
	Url string `pulumi:"url"`
}

// GetSoftwareSourcesSoftwareSourceInput is an input type that accepts GetSoftwareSourcesSoftwareSourceArgs and GetSoftwareSourcesSoftwareSourceOutput values.
// You can construct a concrete instance of `GetSoftwareSourcesSoftwareSourceInput` via:
//
//	GetSoftwareSourcesSoftwareSourceArgs{...}
type GetSoftwareSourcesSoftwareSourceInput interface {
	pulumi.Input

	ToGetSoftwareSourcesSoftwareSourceOutput() GetSoftwareSourcesSoftwareSourceOutput
	ToGetSoftwareSourcesSoftwareSourceOutputWithContext(context.Context) GetSoftwareSourcesSoftwareSourceOutput
}

type GetSoftwareSourcesSoftwareSourceArgs struct {
	// The architecture type supported by the Software Source
	ArchType pulumi.StringInput `pulumi:"archType"`
	// list of the Managed Instances associated with this Software Sources
	AssociatedManagedInstances GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArrayInput `pulumi:"associatedManagedInstances"`
	// The yum repository checksum type used by this software source
	ChecksumType pulumi.StringInput `pulumi:"checksumType"`
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// Information specified by the user about the software source
	Description pulumi.StringInput `pulumi:"description"`
	// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// Fingerprint of the GPG key for this software source
	GpgKeyFingerprint pulumi.StringInput `pulumi:"gpgKeyFingerprint"`
	// ID of the GPG key for this software source
	GpgKeyId pulumi.StringInput `pulumi:"gpgKeyId"`
	// URL of the GPG key for this software source
	GpgKeyUrl pulumi.StringInput `pulumi:"gpgKeyUrl"`
	// OCID for the Software Source
	Id pulumi.StringInput `pulumi:"id"`
	// Email address of the person maintaining this software source
	MaintainerEmail pulumi.StringInput `pulumi:"maintainerEmail"`
	// Name of the person maintaining this software source
	MaintainerName pulumi.StringInput `pulumi:"maintainerName"`
	// Phone number of the person maintaining this software source
	MaintainerPhone pulumi.StringInput `pulumi:"maintainerPhone"`
	// Number of packages
	Packages pulumi.IntInput `pulumi:"packages"`
	// OCID for the parent software source, if there is one
	ParentId pulumi.StringInput `pulumi:"parentId"`
	// Display name the parent software source, if there is one
	ParentName pulumi.StringInput `pulumi:"parentName"`
	// Type of the Software Source
	RepoType pulumi.StringInput `pulumi:"repoType"`
	// The current lifecycle state for the object.
	State pulumi.StringInput `pulumi:"state"`
	// status of the software source.
	Status pulumi.StringInput `pulumi:"status"`
	// URL for the repostiory
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetSoftwareSourcesSoftwareSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourcesSoftwareSource)(nil)).Elem()
}

func (i GetSoftwareSourcesSoftwareSourceArgs) ToGetSoftwareSourcesSoftwareSourceOutput() GetSoftwareSourcesSoftwareSourceOutput {
	return i.ToGetSoftwareSourcesSoftwareSourceOutputWithContext(context.Background())
}

func (i GetSoftwareSourcesSoftwareSourceArgs) ToGetSoftwareSourcesSoftwareSourceOutputWithContext(ctx context.Context) GetSoftwareSourcesSoftwareSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourcesSoftwareSourceOutput)
}

// GetSoftwareSourcesSoftwareSourceArrayInput is an input type that accepts GetSoftwareSourcesSoftwareSourceArray and GetSoftwareSourcesSoftwareSourceArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourcesSoftwareSourceArrayInput` via:
//
//	GetSoftwareSourcesSoftwareSourceArray{ GetSoftwareSourcesSoftwareSourceArgs{...} }
type GetSoftwareSourcesSoftwareSourceArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourcesSoftwareSourceArrayOutput() GetSoftwareSourcesSoftwareSourceArrayOutput
	ToGetSoftwareSourcesSoftwareSourceArrayOutputWithContext(context.Context) GetSoftwareSourcesSoftwareSourceArrayOutput
}

type GetSoftwareSourcesSoftwareSourceArray []GetSoftwareSourcesSoftwareSourceInput

func (GetSoftwareSourcesSoftwareSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourcesSoftwareSource)(nil)).Elem()
}

func (i GetSoftwareSourcesSoftwareSourceArray) ToGetSoftwareSourcesSoftwareSourceArrayOutput() GetSoftwareSourcesSoftwareSourceArrayOutput {
	return i.ToGetSoftwareSourcesSoftwareSourceArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourcesSoftwareSourceArray) ToGetSoftwareSourcesSoftwareSourceArrayOutputWithContext(ctx context.Context) GetSoftwareSourcesSoftwareSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourcesSoftwareSourceArrayOutput)
}

type GetSoftwareSourcesSoftwareSourceOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourcesSoftwareSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourcesSoftwareSource)(nil)).Elem()
}

func (o GetSoftwareSourcesSoftwareSourceOutput) ToGetSoftwareSourcesSoftwareSourceOutput() GetSoftwareSourcesSoftwareSourceOutput {
	return o
}

func (o GetSoftwareSourcesSoftwareSourceOutput) ToGetSoftwareSourcesSoftwareSourceOutputWithContext(ctx context.Context) GetSoftwareSourcesSoftwareSourceOutput {
	return o
}

// The architecture type supported by the Software Source
func (o GetSoftwareSourcesSoftwareSourceOutput) ArchType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSource) string { return v.ArchType }).(pulumi.StringOutput)
}

// list of the Managed Instances associated with this Software Sources
func (o GetSoftwareSourcesSoftwareSourceOutput) AssociatedManagedInstances() GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSource) []GetSoftwareSourcesSoftwareSourceAssociatedManagedInstance {
		return v.AssociatedManagedInstances
	}).(GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArrayOutput)
}

// The yum repository checksum type used by this software source
func (o GetSoftwareSourcesSoftwareSourceOutput) ChecksumType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSource) string { return v.ChecksumType }).(pulumi.StringOutput)
}

// The ID of the compartment in which to list resources.
func (o GetSoftwareSourcesSoftwareSourceOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSource) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetSoftwareSourcesSoftwareSourceOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSource) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Information specified by the user about the software source
func (o GetSoftwareSourcesSoftwareSourceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSource) string { return v.Description }).(pulumi.StringOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
func (o GetSoftwareSourcesSoftwareSourceOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSource) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetSoftwareSourcesSoftwareSourceOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSource) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Fingerprint of the GPG key for this software source
func (o GetSoftwareSourcesSoftwareSourceOutput) GpgKeyFingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSource) string { return v.GpgKeyFingerprint }).(pulumi.StringOutput)
}

// ID of the GPG key for this software source
func (o GetSoftwareSourcesSoftwareSourceOutput) GpgKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSource) string { return v.GpgKeyId }).(pulumi.StringOutput)
}

// URL of the GPG key for this software source
func (o GetSoftwareSourcesSoftwareSourceOutput) GpgKeyUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSource) string { return v.GpgKeyUrl }).(pulumi.StringOutput)
}

// OCID for the Software Source
func (o GetSoftwareSourcesSoftwareSourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSource) string { return v.Id }).(pulumi.StringOutput)
}

// Email address of the person maintaining this software source
func (o GetSoftwareSourcesSoftwareSourceOutput) MaintainerEmail() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSource) string { return v.MaintainerEmail }).(pulumi.StringOutput)
}

// Name of the person maintaining this software source
func (o GetSoftwareSourcesSoftwareSourceOutput) MaintainerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSource) string { return v.MaintainerName }).(pulumi.StringOutput)
}

// Phone number of the person maintaining this software source
func (o GetSoftwareSourcesSoftwareSourceOutput) MaintainerPhone() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSource) string { return v.MaintainerPhone }).(pulumi.StringOutput)
}

// Number of packages
func (o GetSoftwareSourcesSoftwareSourceOutput) Packages() pulumi.IntOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSource) int { return v.Packages }).(pulumi.IntOutput)
}

// OCID for the parent software source, if there is one
func (o GetSoftwareSourcesSoftwareSourceOutput) ParentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSource) string { return v.ParentId }).(pulumi.StringOutput)
}

// Display name the parent software source, if there is one
func (o GetSoftwareSourcesSoftwareSourceOutput) ParentName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSource) string { return v.ParentName }).(pulumi.StringOutput)
}

// Type of the Software Source
func (o GetSoftwareSourcesSoftwareSourceOutput) RepoType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSource) string { return v.RepoType }).(pulumi.StringOutput)
}

// The current lifecycle state for the object.
func (o GetSoftwareSourcesSoftwareSourceOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSource) string { return v.State }).(pulumi.StringOutput)
}

// status of the software source.
func (o GetSoftwareSourcesSoftwareSourceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSource) string { return v.Status }).(pulumi.StringOutput)
}

// URL for the repostiory
func (o GetSoftwareSourcesSoftwareSourceOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSource) string { return v.Url }).(pulumi.StringOutput)
}

type GetSoftwareSourcesSoftwareSourceArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourcesSoftwareSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourcesSoftwareSource)(nil)).Elem()
}

func (o GetSoftwareSourcesSoftwareSourceArrayOutput) ToGetSoftwareSourcesSoftwareSourceArrayOutput() GetSoftwareSourcesSoftwareSourceArrayOutput {
	return o
}

func (o GetSoftwareSourcesSoftwareSourceArrayOutput) ToGetSoftwareSourcesSoftwareSourceArrayOutputWithContext(ctx context.Context) GetSoftwareSourcesSoftwareSourceArrayOutput {
	return o
}

func (o GetSoftwareSourcesSoftwareSourceArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourcesSoftwareSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourcesSoftwareSource {
		return vs[0].([]GetSoftwareSourcesSoftwareSource)[vs[1].(int)]
	}).(GetSoftwareSourcesSoftwareSourceOutput)
}

type GetSoftwareSourcesSoftwareSourceAssociatedManagedInstance struct {
	// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName string `pulumi:"displayName"`
	// OCID for the Software Source
	Id string `pulumi:"id"`
}

// GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceInput is an input type that accepts GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArgs and GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceOutput values.
// You can construct a concrete instance of `GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceInput` via:
//
//	GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArgs{...}
type GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceInput interface {
	pulumi.Input

	ToGetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceOutput() GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceOutput
	ToGetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceOutputWithContext(context.Context) GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceOutput
}

type GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArgs struct {
	// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// OCID for the Software Source
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourcesSoftwareSourceAssociatedManagedInstance)(nil)).Elem()
}

func (i GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArgs) ToGetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceOutput() GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceOutput {
	return i.ToGetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceOutputWithContext(context.Background())
}

func (i GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArgs) ToGetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceOutputWithContext(ctx context.Context) GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceOutput)
}

// GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArrayInput is an input type that accepts GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArray and GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArrayInput` via:
//
//	GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArray{ GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArgs{...} }
type GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArrayOutput() GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArrayOutput
	ToGetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArrayOutputWithContext(context.Context) GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArrayOutput
}

type GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArray []GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceInput

func (GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourcesSoftwareSourceAssociatedManagedInstance)(nil)).Elem()
}

func (i GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArray) ToGetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArrayOutput() GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArrayOutput {
	return i.ToGetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArray) ToGetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArrayOutputWithContext(ctx context.Context) GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArrayOutput)
}

type GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourcesSoftwareSourceAssociatedManagedInstance)(nil)).Elem()
}

func (o GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceOutput) ToGetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceOutput() GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceOutput {
	return o
}

func (o GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceOutput) ToGetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceOutputWithContext(ctx context.Context) GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceOutput {
	return o
}

// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
func (o GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceAssociatedManagedInstance) string { return v.DisplayName }).(pulumi.StringOutput)
}

// OCID for the Software Source
func (o GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceAssociatedManagedInstance) string { return v.Id }).(pulumi.StringOutput)
}

type GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourcesSoftwareSourceAssociatedManagedInstance)(nil)).Elem()
}

func (o GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArrayOutput) ToGetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArrayOutput() GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArrayOutput {
	return o
}

func (o GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArrayOutput) ToGetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArrayOutputWithContext(ctx context.Context) GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArrayOutput {
	return o
}

func (o GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourcesSoftwareSourceAssociatedManagedInstance {
		return vs[0].([]GetSoftwareSourcesSoftwareSourceAssociatedManagedInstance)[vs[1].(int)]
	}).(GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceAutonomouseInput)(nil)).Elem(), ManagedInstanceAutonomouseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceAutonomouseArrayInput)(nil)).Elem(), ManagedInstanceAutonomouseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceChildSoftwareSourceInput)(nil)).Elem(), ManagedInstanceChildSoftwareSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceChildSoftwareSourceArrayInput)(nil)).Elem(), ManagedInstanceChildSoftwareSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceGroupManagedInstanceInput)(nil)).Elem(), ManagedInstanceGroupManagedInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceGroupManagedInstanceArrayInput)(nil)).Elem(), ManagedInstanceGroupManagedInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceManagedInstanceGroupInput)(nil)).Elem(), ManagedInstanceManagedInstanceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceManagedInstanceGroupArrayInput)(nil)).Elem(), ManagedInstanceManagedInstanceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceManagementChildSoftwareSourceInput)(nil)).Elem(), ManagedInstanceManagementChildSoftwareSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceManagementChildSoftwareSourceArrayInput)(nil)).Elem(), ManagedInstanceManagementChildSoftwareSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceManagementManagedInstanceGroupInput)(nil)).Elem(), ManagedInstanceManagementManagedInstanceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceManagementManagedInstanceGroupArrayInput)(nil)).Elem(), ManagedInstanceManagementManagedInstanceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceManagementParentSoftwareSourceInput)(nil)).Elem(), ManagedInstanceManagementParentSoftwareSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceManagementParentSoftwareSourcePtrInput)(nil)).Elem(), ManagedInstanceManagementParentSoftwareSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceParentSoftwareSourceInput)(nil)).Elem(), ManagedInstanceParentSoftwareSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceParentSoftwareSourceArrayInput)(nil)).Elem(), ManagedInstanceParentSoftwareSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SoftwareSourceAssociatedManagedInstanceInput)(nil)).Elem(), SoftwareSourceAssociatedManagedInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SoftwareSourceAssociatedManagedInstanceArrayInput)(nil)).Elem(), SoftwareSourceAssociatedManagedInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceAutonomouseInput)(nil)).Elem(), GetManagedInstanceAutonomouseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceAutonomouseArrayInput)(nil)).Elem(), GetManagedInstanceAutonomouseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceChildSoftwareSourceInput)(nil)).Elem(), GetManagedInstanceChildSoftwareSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceChildSoftwareSourceArrayInput)(nil)).Elem(), GetManagedInstanceChildSoftwareSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupManagedInstanceInput)(nil)).Elem(), GetManagedInstanceGroupManagedInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupManagedInstanceArrayInput)(nil)).Elem(), GetManagedInstanceGroupManagedInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupsFilterInput)(nil)).Elem(), GetManagedInstanceGroupsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupsFilterArrayInput)(nil)).Elem(), GetManagedInstanceGroupsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupsManagedInstanceGroupInput)(nil)).Elem(), GetManagedInstanceGroupsManagedInstanceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupsManagedInstanceGroupArrayInput)(nil)).Elem(), GetManagedInstanceGroupsManagedInstanceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceInput)(nil)).Elem(), GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArrayInput)(nil)).Elem(), GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceManagedInstanceGroupInput)(nil)).Elem(), GetManagedInstanceManagedInstanceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceManagedInstanceGroupArrayInput)(nil)).Elem(), GetManagedInstanceManagedInstanceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceModuleStreamsFilterInput)(nil)).Elem(), GetManagedInstanceModuleStreamsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceModuleStreamsFilterArrayInput)(nil)).Elem(), GetManagedInstanceModuleStreamsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceInput)(nil)).Elem(), GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArrayInput)(nil)).Elem(), GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileInput)(nil)).Elem(), GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArrayInput)(nil)).Elem(), GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceParentSoftwareSourceInput)(nil)).Elem(), GetManagedInstanceParentSoftwareSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceParentSoftwareSourceArrayInput)(nil)).Elem(), GetManagedInstanceParentSoftwareSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceStreamProfileFilterInput)(nil)).Elem(), GetManagedInstanceStreamProfileFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceStreamProfileFilterArrayInput)(nil)).Elem(), GetManagedInstanceStreamProfileFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceInput)(nil)).Elem(), GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArrayInput)(nil)).Elem(), GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstancesFilterInput)(nil)).Elem(), GetManagedInstancesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstancesFilterArrayInput)(nil)).Elem(), GetManagedInstancesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstancesManagedInstanceInput)(nil)).Elem(), GetManagedInstancesManagedInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstancesManagedInstanceArrayInput)(nil)).Elem(), GetManagedInstancesManagedInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstancesManagedInstanceAutonomouseInput)(nil)).Elem(), GetManagedInstancesManagedInstanceAutonomouseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstancesManagedInstanceAutonomouseArrayInput)(nil)).Elem(), GetManagedInstancesManagedInstanceAutonomouseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstancesManagedInstanceChildSoftwareSourceInput)(nil)).Elem(), GetManagedInstancesManagedInstanceChildSoftwareSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstancesManagedInstanceChildSoftwareSourceArrayInput)(nil)).Elem(), GetManagedInstancesManagedInstanceChildSoftwareSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstancesManagedInstanceManagedInstanceGroupInput)(nil)).Elem(), GetManagedInstancesManagedInstanceManagedInstanceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstancesManagedInstanceManagedInstanceGroupArrayInput)(nil)).Elem(), GetManagedInstancesManagedInstanceManagedInstanceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstancesManagedInstanceParentSoftwareSourceInput)(nil)).Elem(), GetManagedInstancesManagedInstanceParentSoftwareSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstancesManagedInstanceParentSoftwareSourceArrayInput)(nil)).Elem(), GetManagedInstancesManagedInstanceParentSoftwareSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceAssociatedManagedInstanceInput)(nil)).Elem(), GetSoftwareSourceAssociatedManagedInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceAssociatedManagedInstanceArrayInput)(nil)).Elem(), GetSoftwareSourceAssociatedManagedInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceStreamProfileFilterInput)(nil)).Elem(), GetSoftwareSourceStreamProfileFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceStreamProfileFilterArrayInput)(nil)).Elem(), GetSoftwareSourceStreamProfileFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceStreamProfileModuleStreamProfileInput)(nil)).Elem(), GetSoftwareSourceStreamProfileModuleStreamProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceStreamProfileModuleStreamProfileArrayInput)(nil)).Elem(), GetSoftwareSourceStreamProfileModuleStreamProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourcesFilterInput)(nil)).Elem(), GetSoftwareSourcesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourcesFilterArrayInput)(nil)).Elem(), GetSoftwareSourcesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourcesSoftwareSourceInput)(nil)).Elem(), GetSoftwareSourcesSoftwareSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourcesSoftwareSourceArrayInput)(nil)).Elem(), GetSoftwareSourcesSoftwareSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceInput)(nil)).Elem(), GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArrayInput)(nil)).Elem(), GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArray{})
	pulumi.RegisterOutputType(ManagedInstanceAutonomouseOutput{})
	pulumi.RegisterOutputType(ManagedInstanceAutonomouseArrayOutput{})
	pulumi.RegisterOutputType(ManagedInstanceChildSoftwareSourceOutput{})
	pulumi.RegisterOutputType(ManagedInstanceChildSoftwareSourceArrayOutput{})
	pulumi.RegisterOutputType(ManagedInstanceGroupManagedInstanceOutput{})
	pulumi.RegisterOutputType(ManagedInstanceGroupManagedInstanceArrayOutput{})
	pulumi.RegisterOutputType(ManagedInstanceManagedInstanceGroupOutput{})
	pulumi.RegisterOutputType(ManagedInstanceManagedInstanceGroupArrayOutput{})
	pulumi.RegisterOutputType(ManagedInstanceManagementChildSoftwareSourceOutput{})
	pulumi.RegisterOutputType(ManagedInstanceManagementChildSoftwareSourceArrayOutput{})
	pulumi.RegisterOutputType(ManagedInstanceManagementManagedInstanceGroupOutput{})
	pulumi.RegisterOutputType(ManagedInstanceManagementManagedInstanceGroupArrayOutput{})
	pulumi.RegisterOutputType(ManagedInstanceManagementParentSoftwareSourceOutput{})
	pulumi.RegisterOutputType(ManagedInstanceManagementParentSoftwareSourcePtrOutput{})
	pulumi.RegisterOutputType(ManagedInstanceParentSoftwareSourceOutput{})
	pulumi.RegisterOutputType(ManagedInstanceParentSoftwareSourceArrayOutput{})
	pulumi.RegisterOutputType(SoftwareSourceAssociatedManagedInstanceOutput{})
	pulumi.RegisterOutputType(SoftwareSourceAssociatedManagedInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceAutonomouseOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceAutonomouseArrayOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceChildSoftwareSourceOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceChildSoftwareSourceArrayOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupManagedInstanceOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupManagedInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupsFilterOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupsManagedInstanceGroupOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupsManagedInstanceGroupArrayOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupsManagedInstanceGroupManagedInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceManagedInstanceGroupOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceManagedInstanceGroupArrayOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceModuleStreamsFilterOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceModuleStreamsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfileArrayOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceParentSoftwareSourceOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceParentSoftwareSourceArrayOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceStreamProfileFilterOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceStreamProfileFilterArrayOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetManagedInstancesFilterOutput{})
	pulumi.RegisterOutputType(GetManagedInstancesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetManagedInstancesManagedInstanceOutput{})
	pulumi.RegisterOutputType(GetManagedInstancesManagedInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetManagedInstancesManagedInstanceAutonomouseOutput{})
	pulumi.RegisterOutputType(GetManagedInstancesManagedInstanceAutonomouseArrayOutput{})
	pulumi.RegisterOutputType(GetManagedInstancesManagedInstanceChildSoftwareSourceOutput{})
	pulumi.RegisterOutputType(GetManagedInstancesManagedInstanceChildSoftwareSourceArrayOutput{})
	pulumi.RegisterOutputType(GetManagedInstancesManagedInstanceManagedInstanceGroupOutput{})
	pulumi.RegisterOutputType(GetManagedInstancesManagedInstanceManagedInstanceGroupArrayOutput{})
	pulumi.RegisterOutputType(GetManagedInstancesManagedInstanceParentSoftwareSourceOutput{})
	pulumi.RegisterOutputType(GetManagedInstancesManagedInstanceParentSoftwareSourceArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceAssociatedManagedInstanceOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceAssociatedManagedInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceStreamProfileFilterOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceStreamProfileFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceStreamProfileModuleStreamProfileOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceStreamProfileModuleStreamProfileArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourcesFilterOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourcesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourcesSoftwareSourceOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourcesSoftwareSourceArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourcesSoftwareSourceAssociatedManagedInstanceArrayOutput{})
}
