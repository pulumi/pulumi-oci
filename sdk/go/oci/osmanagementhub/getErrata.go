// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Errata in Oracle Cloud Infrastructure Os Management Hub service.
//
// Lists all of the currently available errata. Filter the list against a variety of criteria including but not
// limited to its name, classification type, advisory severity, and OS family.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/osmanagementhub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := osmanagementhub.GetErrata(ctx, &osmanagementhub.GetErrataArgs{
//				CompartmentId:       compartmentId,
//				AdvisorySeverities:  erratumAdvisorySeverity,
//				AdvisoryTypes:       erratumAdvisoryType,
//				ClassificationTypes: erratumClassificationType,
//				Names:               erratumName,
//				NameContains:        pulumi.StringRef(erratumNameContains),
//				OsFamily:            pulumi.StringRef(erratumOsFamily),
//				TimeIssueDateEnd:    pulumi.StringRef(erratumTimeIssueDateEnd),
//				TimeIssueDateStart:  pulumi.StringRef(erratumTimeIssueDateStart),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetErrata(ctx *pulumi.Context, args *GetErrataArgs, opts ...pulumi.InvokeOption) (*GetErrataResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetErrataResult
	err := ctx.Invoke("oci:OsManagementHub/getErrata:getErrata", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getErrata.
type GetErrataArgs struct {
	// The advisory severity.
	AdvisorySeverities []string `pulumi:"advisorySeverities"`
	// A filter to return only errata that match the given advisory types.
	AdvisoryTypes []string `pulumi:"advisoryTypes"`
	// A filter to return only packages that match the given update classification type.
	ClassificationTypes []string `pulumi:"classificationTypes"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment. This parameter is required and returns only resources contained within the specified compartment.
	CompartmentId string            `pulumi:"compartmentId"`
	Filters       []GetErrataFilter `pulumi:"filters"`
	// A filter to return resources that may partially match the erratum name given.
	NameContains *string `pulumi:"nameContains"`
	// The assigned erratum name. It's unique and not changeable.  Example: `ELSA-2020-5804`
	Names []string `pulumi:"names"`
	// A filter to return only resources that match the given operating system family.
	OsFamily *string `pulumi:"osFamily"`
	// The issue date before which to list all errata, in ISO 8601 format  Example: 2017-07-14T02:40:00.000Z
	TimeIssueDateEnd *string `pulumi:"timeIssueDateEnd"`
	// The issue date after which to list all errata, in ISO 8601 format  Example: 2017-07-14T02:40:00.000Z
	TimeIssueDateStart *string `pulumi:"timeIssueDateStart"`
}

// A collection of values returned by getErrata.
type GetErrataResult struct {
	// The severity for a security advisory, otherwise, null.
	AdvisorySeverities []string `pulumi:"advisorySeverities"`
	// The advisory type of the erratum.
	AdvisoryTypes []string `pulumi:"advisoryTypes"`
	// Type of the erratum. This property is deprecated and it will be removed in a future API release. Please refer to the advisoryType property instead.
	ClassificationTypes []string `pulumi:"classificationTypes"`
	CompartmentId       string   `pulumi:"compartmentId"`
	// The list of erratum_collection.
	ErratumCollections []GetErrataErratumCollection `pulumi:"erratumCollections"`
	Filters            []GetErrataFilter            `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id           string  `pulumi:"id"`
	NameContains *string `pulumi:"nameContains"`
	// Unique identifier for the package. Note that this is not an OCID.
	Names              []string `pulumi:"names"`
	OsFamily           *string  `pulumi:"osFamily"`
	TimeIssueDateEnd   *string  `pulumi:"timeIssueDateEnd"`
	TimeIssueDateStart *string  `pulumi:"timeIssueDateStart"`
}

func GetErrataOutput(ctx *pulumi.Context, args GetErrataOutputArgs, opts ...pulumi.InvokeOption) GetErrataResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetErrataResultOutput, error) {
			args := v.(GetErrataArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:OsManagementHub/getErrata:getErrata", args, GetErrataResultOutput{}, options).(GetErrataResultOutput), nil
		}).(GetErrataResultOutput)
}

// A collection of arguments for invoking getErrata.
type GetErrataOutputArgs struct {
	// The advisory severity.
	AdvisorySeverities pulumi.StringArrayInput `pulumi:"advisorySeverities"`
	// A filter to return only errata that match the given advisory types.
	AdvisoryTypes pulumi.StringArrayInput `pulumi:"advisoryTypes"`
	// A filter to return only packages that match the given update classification type.
	ClassificationTypes pulumi.StringArrayInput `pulumi:"classificationTypes"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment. This parameter is required and returns only resources contained within the specified compartment.
	CompartmentId pulumi.StringInput        `pulumi:"compartmentId"`
	Filters       GetErrataFilterArrayInput `pulumi:"filters"`
	// A filter to return resources that may partially match the erratum name given.
	NameContains pulumi.StringPtrInput `pulumi:"nameContains"`
	// The assigned erratum name. It's unique and not changeable.  Example: `ELSA-2020-5804`
	Names pulumi.StringArrayInput `pulumi:"names"`
	// A filter to return only resources that match the given operating system family.
	OsFamily pulumi.StringPtrInput `pulumi:"osFamily"`
	// The issue date before which to list all errata, in ISO 8601 format  Example: 2017-07-14T02:40:00.000Z
	TimeIssueDateEnd pulumi.StringPtrInput `pulumi:"timeIssueDateEnd"`
	// The issue date after which to list all errata, in ISO 8601 format  Example: 2017-07-14T02:40:00.000Z
	TimeIssueDateStart pulumi.StringPtrInput `pulumi:"timeIssueDateStart"`
}

func (GetErrataOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetErrataArgs)(nil)).Elem()
}

// A collection of values returned by getErrata.
type GetErrataResultOutput struct{ *pulumi.OutputState }

func (GetErrataResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetErrataResult)(nil)).Elem()
}

func (o GetErrataResultOutput) ToGetErrataResultOutput() GetErrataResultOutput {
	return o
}

func (o GetErrataResultOutput) ToGetErrataResultOutputWithContext(ctx context.Context) GetErrataResultOutput {
	return o
}

// The severity for a security advisory, otherwise, null.
func (o GetErrataResultOutput) AdvisorySeverities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetErrataResult) []string { return v.AdvisorySeverities }).(pulumi.StringArrayOutput)
}

// The advisory type of the erratum.
func (o GetErrataResultOutput) AdvisoryTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetErrataResult) []string { return v.AdvisoryTypes }).(pulumi.StringArrayOutput)
}

// Type of the erratum. This property is deprecated and it will be removed in a future API release. Please refer to the advisoryType property instead.
func (o GetErrataResultOutput) ClassificationTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetErrataResult) []string { return v.ClassificationTypes }).(pulumi.StringArrayOutput)
}

func (o GetErrataResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetErrataResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The list of erratum_collection.
func (o GetErrataResultOutput) ErratumCollections() GetErrataErratumCollectionArrayOutput {
	return o.ApplyT(func(v GetErrataResult) []GetErrataErratumCollection { return v.ErratumCollections }).(GetErrataErratumCollectionArrayOutput)
}

func (o GetErrataResultOutput) Filters() GetErrataFilterArrayOutput {
	return o.ApplyT(func(v GetErrataResult) []GetErrataFilter { return v.Filters }).(GetErrataFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetErrataResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetErrataResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetErrataResultOutput) NameContains() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetErrataResult) *string { return v.NameContains }).(pulumi.StringPtrOutput)
}

// Unique identifier for the package. Note that this is not an OCID.
func (o GetErrataResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetErrataResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetErrataResultOutput) OsFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetErrataResult) *string { return v.OsFamily }).(pulumi.StringPtrOutput)
}

func (o GetErrataResultOutput) TimeIssueDateEnd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetErrataResult) *string { return v.TimeIssueDateEnd }).(pulumi.StringPtrOutput)
}

func (o GetErrataResultOutput) TimeIssueDateStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetErrataResult) *string { return v.TimeIssueDateStart }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetErrataResultOutput{})
}
