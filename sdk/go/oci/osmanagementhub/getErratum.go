// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Erratum resource in Oracle Cloud Infrastructure Os Management Hub service.
//
// Returns information about the specified erratum based on its advisory name.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/OsManagementHub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := OsManagementHub.GetErratum(ctx, &osmanagementhub.GetErratumArgs{
//				CompartmentId: compartmentId,
//				Name:          erratumName,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetErratum(ctx *pulumi.Context, args *GetErratumArgs, opts ...pulumi.InvokeOption) (*GetErratumResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetErratumResult
	err := ctx.Invoke("oci:OsManagementHub/getErratum:getErratum", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getErratum.
type GetErratumArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment. This parameter is required and returns only resources contained within the specified compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The erratum name (such as ELSA-2023-34678).
	Name string `pulumi:"name"`
}

// A collection of values returned by getErratum.
type GetErratumResult struct {
	// The severity for a security advisory, otherwise, null.
	AdvisorySeverity string `pulumi:"advisorySeverity"`
	// The advisory type of the erratum.
	AdvisoryType string `pulumi:"advisoryType"`
	// Type of the erratum. This property is deprecated and it will be removed in a future API release. Please refer to the advisoryType property instead.
	ClassificationType string `pulumi:"classificationType"`
	CompartmentId      string `pulumi:"compartmentId"`
	// Software source description.
	Description string `pulumi:"description"`
	// Information specifying from where the erratum was release.
	From string `pulumi:"from"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Unique identifier for the package. Note that this is not an OCID.
	Name string `pulumi:"name"`
	// The OS families the package belongs to.
	OsFamilies []string `pulumi:"osFamilies"`
	// List of packages affected by this erratum.
	Packages []GetErratumPackage `pulumi:"packages"`
	// Information describing how to find more information about. the erratum.
	References string `pulumi:"references"`
	// List of CVEs applicable to this erratum.
	RelatedCves []string `pulumi:"relatedCves"`
	// List of repository identifiers.
	Repositories []string `pulumi:"repositories"`
	// Information describing how the erratum can be resolved.
	Solution string `pulumi:"solution"`
	// Summary description of the erratum.
	Synopsis string `pulumi:"synopsis"`
	// The date and time the erratum was issued (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
	TimeIssued string `pulumi:"timeIssued"`
	// The date and time the erratum was updated (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
	TimeUpdated string `pulumi:"timeUpdated"`
}

func GetErratumOutput(ctx *pulumi.Context, args GetErratumOutputArgs, opts ...pulumi.InvokeOption) GetErratumResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetErratumResultOutput, error) {
			args := v.(GetErratumArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetErratumResult
			secret, err := ctx.InvokePackageRaw("oci:OsManagementHub/getErratum:getErratum", args, &rv, "", opts...)
			if err != nil {
				return GetErratumResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetErratumResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetErratumResultOutput), nil
			}
			return output, nil
		}).(GetErratumResultOutput)
}

// A collection of arguments for invoking getErratum.
type GetErratumOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment. This parameter is required and returns only resources contained within the specified compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The erratum name (such as ELSA-2023-34678).
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetErratumOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetErratumArgs)(nil)).Elem()
}

// A collection of values returned by getErratum.
type GetErratumResultOutput struct{ *pulumi.OutputState }

func (GetErratumResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetErratumResult)(nil)).Elem()
}

func (o GetErratumResultOutput) ToGetErratumResultOutput() GetErratumResultOutput {
	return o
}

func (o GetErratumResultOutput) ToGetErratumResultOutputWithContext(ctx context.Context) GetErratumResultOutput {
	return o
}

// The severity for a security advisory, otherwise, null.
func (o GetErratumResultOutput) AdvisorySeverity() pulumi.StringOutput {
	return o.ApplyT(func(v GetErratumResult) string { return v.AdvisorySeverity }).(pulumi.StringOutput)
}

// The advisory type of the erratum.
func (o GetErratumResultOutput) AdvisoryType() pulumi.StringOutput {
	return o.ApplyT(func(v GetErratumResult) string { return v.AdvisoryType }).(pulumi.StringOutput)
}

// Type of the erratum. This property is deprecated and it will be removed in a future API release. Please refer to the advisoryType property instead.
func (o GetErratumResultOutput) ClassificationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetErratumResult) string { return v.ClassificationType }).(pulumi.StringOutput)
}

func (o GetErratumResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetErratumResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Software source description.
func (o GetErratumResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetErratumResult) string { return v.Description }).(pulumi.StringOutput)
}

// Information specifying from where the erratum was release.
func (o GetErratumResultOutput) From() pulumi.StringOutput {
	return o.ApplyT(func(v GetErratumResult) string { return v.From }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetErratumResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetErratumResult) string { return v.Id }).(pulumi.StringOutput)
}

// Unique identifier for the package. Note that this is not an OCID.
func (o GetErratumResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetErratumResult) string { return v.Name }).(pulumi.StringOutput)
}

// The OS families the package belongs to.
func (o GetErratumResultOutput) OsFamilies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetErratumResult) []string { return v.OsFamilies }).(pulumi.StringArrayOutput)
}

// List of packages affected by this erratum.
func (o GetErratumResultOutput) Packages() GetErratumPackageArrayOutput {
	return o.ApplyT(func(v GetErratumResult) []GetErratumPackage { return v.Packages }).(GetErratumPackageArrayOutput)
}

// Information describing how to find more information about. the erratum.
func (o GetErratumResultOutput) References() pulumi.StringOutput {
	return o.ApplyT(func(v GetErratumResult) string { return v.References }).(pulumi.StringOutput)
}

// List of CVEs applicable to this erratum.
func (o GetErratumResultOutput) RelatedCves() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetErratumResult) []string { return v.RelatedCves }).(pulumi.StringArrayOutput)
}

// List of repository identifiers.
func (o GetErratumResultOutput) Repositories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetErratumResult) []string { return v.Repositories }).(pulumi.StringArrayOutput)
}

// Information describing how the erratum can be resolved.
func (o GetErratumResultOutput) Solution() pulumi.StringOutput {
	return o.ApplyT(func(v GetErratumResult) string { return v.Solution }).(pulumi.StringOutput)
}

// Summary description of the erratum.
func (o GetErratumResultOutput) Synopsis() pulumi.StringOutput {
	return o.ApplyT(func(v GetErratumResult) string { return v.Synopsis }).(pulumi.StringOutput)
}

// The date and time the erratum was issued (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
func (o GetErratumResultOutput) TimeIssued() pulumi.StringOutput {
	return o.ApplyT(func(v GetErratumResult) string { return v.TimeIssued }).(pulumi.StringOutput)
}

// The date and time the erratum was updated (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
func (o GetErratumResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetErratumResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetErratumResultOutput{})
}
