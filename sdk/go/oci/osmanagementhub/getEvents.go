// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Events in Oracle Cloud Infrastructure Os Management Hub service.
//
// Lists events that match the specified criteria, such as compartment, state, and event type.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/osmanagementhub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := osmanagementhub.GetEvents(ctx, &osmanagementhub.GetEventsArgs{
//				CompartmentId:                   pulumi.StringRef(compartmentId),
//				EventFingerprint:                pulumi.StringRef(eventEventFingerprint),
//				EventSummary:                    pulumi.StringRef(eventEventSummary),
//				EventSummaryContains:            pulumi.StringRef(eventEventSummaryContains),
//				Id:                              pulumi.StringRef(eventId),
//				IsManagedByAutonomousLinux:      pulumi.BoolRef(eventIsManagedByAutonomousLinux),
//				ResourceId:                      pulumi.StringRef(testResource.Id),
//				State:                           pulumi.StringRef(eventState),
//				TimeCreatedGreaterThanOrEqualTo: pulumi.StringRef(eventTimeCreatedGreaterThanOrEqualTo),
//				TimeCreatedLessThan:             pulumi.StringRef(eventTimeCreatedLessThan),
//				Types:                           eventType,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetEvents(ctx *pulumi.Context, args *GetEventsArgs, opts ...pulumi.InvokeOption) (*GetEventsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEventsResult
	err := ctx.Invoke("oci:OsManagementHub/getEvents:getEvents", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEvents.
type GetEventsArgs struct {
	// The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// The eventFingerprint of the KernelEventData.
	EventFingerprint *string `pulumi:"eventFingerprint"`
	// A filter to return only events whose summary matches the given value.
	EventSummary *string `pulumi:"eventSummary"`
	// A filter to return only events with a summary that contains the value provided.
	EventSummaryContains *string           `pulumi:"eventSummaryContains"`
	Filters              []GetEventsFilter `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the event.
	Id *string `pulumi:"id"`
	// Indicates whether to list only resources managed by the Autonomous Linux service.
	IsManagedByAutonomousLinux *bool `pulumi:"isManagedByAutonomousLinux"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource. This filter returns resources associated with the specified resource.
	ResourceId *string `pulumi:"resourceId"`
	// A filter to return only events that match the state provided. The state value is case-insensitive.
	State *string `pulumi:"state"`
	// A filter that returns events that occurred on or after the date provided.       Example: `2016-08-25T21:10:29.600Z`
	TimeCreatedGreaterThanOrEqualTo *string `pulumi:"timeCreatedGreaterThanOrEqualTo"`
	// A filter that returns events that occurred on or before the date provided.       Example: `2016-08-25T21:10:29.600Z`
	TimeCreatedLessThan *string `pulumi:"timeCreatedLessThan"`
	// A filter to return only resources whose type matches the given value.
	Types []string `pulumi:"types"`
}

// A collection of values returned by getEvents.
type GetEventsResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// The list of event_collection.
	EventCollections []GetEventsEventCollection `pulumi:"eventCollections"`
	// Fingerprint of the event.
	EventFingerprint *string `pulumi:"eventFingerprint"`
	// Summary of the event.
	EventSummary         *string           `pulumi:"eventSummary"`
	EventSummaryContains *string           `pulumi:"eventSummaryContains"`
	Filters              []GetEventsFilter `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the event.
	Id *string `pulumi:"id"`
	// Indicates whether the event occurred on a resource that is managed by the Autonomous Linux service.
	IsManagedByAutonomousLinux *bool `pulumi:"isManagedByAutonomousLinux"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance or resource where the event occurred.
	ResourceId *string `pulumi:"resourceId"`
	// The current state of the event.
	State                           *string `pulumi:"state"`
	TimeCreatedGreaterThanOrEqualTo *string `pulumi:"timeCreatedGreaterThanOrEqualTo"`
	TimeCreatedLessThan             *string `pulumi:"timeCreatedLessThan"`
	// Event type:
	// * `KERNEL_OOPS` - Used to identify a kernel panic condition event
	// * `KERNEL_CRASH` - Used to identify an internal fatal kernel error that cannot be safely recovered from
	// * `EXPLOIT_ATTEMPT` - Used to identify a known exploit detection as identified by Ksplice
	// * `SOFTWARE_UPDATE` - Software updates - Packages
	// * `KSPLICE_UPDATE` - Ksplice updates
	// * `SOFTWARE_SOURCE` - Software source
	// * `AGENT` - Agent
	// * `MANAGEMENT_STATION` - Management Station
	Types []string `pulumi:"types"`
}

func GetEventsOutput(ctx *pulumi.Context, args GetEventsOutputArgs, opts ...pulumi.InvokeOption) GetEventsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetEventsResultOutput, error) {
			args := v.(GetEventsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:OsManagementHub/getEvents:getEvents", args, GetEventsResultOutput{}, options).(GetEventsResultOutput), nil
		}).(GetEventsResultOutput)
}

// A collection of arguments for invoking getEvents.
type GetEventsOutputArgs struct {
	// The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// The eventFingerprint of the KernelEventData.
	EventFingerprint pulumi.StringPtrInput `pulumi:"eventFingerprint"`
	// A filter to return only events whose summary matches the given value.
	EventSummary pulumi.StringPtrInput `pulumi:"eventSummary"`
	// A filter to return only events with a summary that contains the value provided.
	EventSummaryContains pulumi.StringPtrInput     `pulumi:"eventSummaryContains"`
	Filters              GetEventsFilterArrayInput `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the event.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Indicates whether to list only resources managed by the Autonomous Linux service.
	IsManagedByAutonomousLinux pulumi.BoolPtrInput `pulumi:"isManagedByAutonomousLinux"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource. This filter returns resources associated with the specified resource.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
	// A filter to return only events that match the state provided. The state value is case-insensitive.
	State pulumi.StringPtrInput `pulumi:"state"`
	// A filter that returns events that occurred on or after the date provided.       Example: `2016-08-25T21:10:29.600Z`
	TimeCreatedGreaterThanOrEqualTo pulumi.StringPtrInput `pulumi:"timeCreatedGreaterThanOrEqualTo"`
	// A filter that returns events that occurred on or before the date provided.       Example: `2016-08-25T21:10:29.600Z`
	TimeCreatedLessThan pulumi.StringPtrInput `pulumi:"timeCreatedLessThan"`
	// A filter to return only resources whose type matches the given value.
	Types pulumi.StringArrayInput `pulumi:"types"`
}

func (GetEventsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventsArgs)(nil)).Elem()
}

// A collection of values returned by getEvents.
type GetEventsResultOutput struct{ *pulumi.OutputState }

func (GetEventsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventsResult)(nil)).Elem()
}

func (o GetEventsResultOutput) ToGetEventsResultOutput() GetEventsResultOutput {
	return o
}

func (o GetEventsResultOutput) ToGetEventsResultOutputWithContext(ctx context.Context) GetEventsResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o GetEventsResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEventsResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// The list of event_collection.
func (o GetEventsResultOutput) EventCollections() GetEventsEventCollectionArrayOutput {
	return o.ApplyT(func(v GetEventsResult) []GetEventsEventCollection { return v.EventCollections }).(GetEventsEventCollectionArrayOutput)
}

// Fingerprint of the event.
func (o GetEventsResultOutput) EventFingerprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEventsResult) *string { return v.EventFingerprint }).(pulumi.StringPtrOutput)
}

// Summary of the event.
func (o GetEventsResultOutput) EventSummary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEventsResult) *string { return v.EventSummary }).(pulumi.StringPtrOutput)
}

func (o GetEventsResultOutput) EventSummaryContains() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEventsResult) *string { return v.EventSummaryContains }).(pulumi.StringPtrOutput)
}

func (o GetEventsResultOutput) Filters() GetEventsFilterArrayOutput {
	return o.ApplyT(func(v GetEventsResult) []GetEventsFilter { return v.Filters }).(GetEventsFilterArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the event.
func (o GetEventsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEventsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Indicates whether the event occurred on a resource that is managed by the Autonomous Linux service.
func (o GetEventsResultOutput) IsManagedByAutonomousLinux() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetEventsResult) *bool { return v.IsManagedByAutonomousLinux }).(pulumi.BoolPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance or resource where the event occurred.
func (o GetEventsResultOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEventsResult) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// The current state of the event.
func (o GetEventsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEventsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func (o GetEventsResultOutput) TimeCreatedGreaterThanOrEqualTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEventsResult) *string { return v.TimeCreatedGreaterThanOrEqualTo }).(pulumi.StringPtrOutput)
}

func (o GetEventsResultOutput) TimeCreatedLessThan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEventsResult) *string { return v.TimeCreatedLessThan }).(pulumi.StringPtrOutput)
}

// Event type:
// * `KERNEL_OOPS` - Used to identify a kernel panic condition event
// * `KERNEL_CRASH` - Used to identify an internal fatal kernel error that cannot be safely recovered from
// * `EXPLOIT_ATTEMPT` - Used to identify a known exploit detection as identified by Ksplice
// * `SOFTWARE_UPDATE` - Software updates - Packages
// * `KSPLICE_UPDATE` - Ksplice updates
// * `SOFTWARE_SOURCE` - Software source
// * `AGENT` - Agent
// * `MANAGEMENT_STATION` - Management Station
func (o GetEventsResultOutput) Types() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEventsResult) []string { return v.Types }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEventsResultOutput{})
}
