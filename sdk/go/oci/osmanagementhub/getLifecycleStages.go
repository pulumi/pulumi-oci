// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Lifecycle Stages in Oracle Cloud Infrastructure Os Management Hub service.
//
// Lists lifecycle stages that match the specified compartment or lifecycle stage OCID. Filter the list against
// a variety of criteria including but not limited to its name, status, architecture, and OS family.
func GetLifecycleStages(ctx *pulumi.Context, args *GetLifecycleStagesArgs, opts ...pulumi.InvokeOption) (*GetLifecycleStagesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLifecycleStagesResult
	err := ctx.Invoke("oci:OsManagementHub/getLifecycleStages:getLifecycleStages", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLifecycleStages.
type GetLifecycleStagesArgs struct {
	// A filter to return only profiles that match the given archType.
	ArchType *string `pulumi:"archType"`
	// The OCID of the compartment that contains the resources to list.
	CompartmentId *string `pulumi:"compartmentId"`
	// A filter to return resources that may partially match the given display name.
	DisplayNameContains *string `pulumi:"displayNameContains"`
	// A filter to return resources that match the given display names.
	DisplayNames []string                   `pulumi:"displayNames"`
	Filters      []GetLifecycleStagesFilter `pulumi:"filters"`
	// The OCID of the lifecycle stage.
	LifecycleStageId *string `pulumi:"lifecycleStageId"`
	// A filter to return only profiles that match the given osFamily.
	OsFamily *string `pulumi:"osFamily"`
	// The OCID for the software source.
	SoftwareSourceId *string `pulumi:"softwareSourceId"`
	// A filter to return only lifecycle stage whose lifecycle state matches the given lifecycle state.
	State *string `pulumi:"state"`
}

// A collection of values returned by getLifecycleStages.
type GetLifecycleStagesResult struct {
	// The CPU architecture of the target instances.
	ArchType *string `pulumi:"archType"`
	// The OCID of the tenancy containing the lifecycle stage.
	CompartmentId       *string `pulumi:"compartmentId"`
	DisplayNameContains *string `pulumi:"displayNameContains"`
	// Software source name.
	DisplayNames []string                   `pulumi:"displayNames"`
	Filters      []GetLifecycleStagesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id *string `pulumi:"id"`
	// The list of lifecycle_stage_collection.
	LifecycleStageCollections []GetLifecycleStagesLifecycleStageCollection `pulumi:"lifecycleStageCollections"`
	LifecycleStageId          *string                                      `pulumi:"lifecycleStageId"`
	// The operating system type of the target instances.
	OsFamily *string `pulumi:"osFamily"`
	// Identifying information for the specified software source.
	SoftwareSourceId *string `pulumi:"softwareSourceId"`
	// The current state of the lifecycle stage.
	State *string `pulumi:"state"`
}

func GetLifecycleStagesOutput(ctx *pulumi.Context, args GetLifecycleStagesOutputArgs, opts ...pulumi.InvokeOption) GetLifecycleStagesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetLifecycleStagesResult, error) {
			args := v.(GetLifecycleStagesArgs)
			r, err := GetLifecycleStages(ctx, &args, opts...)
			var s GetLifecycleStagesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetLifecycleStagesResultOutput)
}

// A collection of arguments for invoking getLifecycleStages.
type GetLifecycleStagesOutputArgs struct {
	// A filter to return only profiles that match the given archType.
	ArchType pulumi.StringPtrInput `pulumi:"archType"`
	// The OCID of the compartment that contains the resources to list.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// A filter to return resources that may partially match the given display name.
	DisplayNameContains pulumi.StringPtrInput `pulumi:"displayNameContains"`
	// A filter to return resources that match the given display names.
	DisplayNames pulumi.StringArrayInput            `pulumi:"displayNames"`
	Filters      GetLifecycleStagesFilterArrayInput `pulumi:"filters"`
	// The OCID of the lifecycle stage.
	LifecycleStageId pulumi.StringPtrInput `pulumi:"lifecycleStageId"`
	// A filter to return only profiles that match the given osFamily.
	OsFamily pulumi.StringPtrInput `pulumi:"osFamily"`
	// The OCID for the software source.
	SoftwareSourceId pulumi.StringPtrInput `pulumi:"softwareSourceId"`
	// A filter to return only lifecycle stage whose lifecycle state matches the given lifecycle state.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetLifecycleStagesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleStagesArgs)(nil)).Elem()
}

// A collection of values returned by getLifecycleStages.
type GetLifecycleStagesResultOutput struct{ *pulumi.OutputState }

func (GetLifecycleStagesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleStagesResult)(nil)).Elem()
}

func (o GetLifecycleStagesResultOutput) ToGetLifecycleStagesResultOutput() GetLifecycleStagesResultOutput {
	return o
}

func (o GetLifecycleStagesResultOutput) ToGetLifecycleStagesResultOutputWithContext(ctx context.Context) GetLifecycleStagesResultOutput {
	return o
}

// The CPU architecture of the target instances.
func (o GetLifecycleStagesResultOutput) ArchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleStagesResult) *string { return v.ArchType }).(pulumi.StringPtrOutput)
}

// The OCID of the tenancy containing the lifecycle stage.
func (o GetLifecycleStagesResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleStagesResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

func (o GetLifecycleStagesResultOutput) DisplayNameContains() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleStagesResult) *string { return v.DisplayNameContains }).(pulumi.StringPtrOutput)
}

// Software source name.
func (o GetLifecycleStagesResultOutput) DisplayNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLifecycleStagesResult) []string { return v.DisplayNames }).(pulumi.StringArrayOutput)
}

func (o GetLifecycleStagesResultOutput) Filters() GetLifecycleStagesFilterArrayOutput {
	return o.ApplyT(func(v GetLifecycleStagesResult) []GetLifecycleStagesFilter { return v.Filters }).(GetLifecycleStagesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetLifecycleStagesResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleStagesResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The list of lifecycle_stage_collection.
func (o GetLifecycleStagesResultOutput) LifecycleStageCollections() GetLifecycleStagesLifecycleStageCollectionArrayOutput {
	return o.ApplyT(func(v GetLifecycleStagesResult) []GetLifecycleStagesLifecycleStageCollection {
		return v.LifecycleStageCollections
	}).(GetLifecycleStagesLifecycleStageCollectionArrayOutput)
}

func (o GetLifecycleStagesResultOutput) LifecycleStageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleStagesResult) *string { return v.LifecycleStageId }).(pulumi.StringPtrOutput)
}

// The operating system type of the target instances.
func (o GetLifecycleStagesResultOutput) OsFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleStagesResult) *string { return v.OsFamily }).(pulumi.StringPtrOutput)
}

// Identifying information for the specified software source.
func (o GetLifecycleStagesResultOutput) SoftwareSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleStagesResult) *string { return v.SoftwareSourceId }).(pulumi.StringPtrOutput)
}

// The current state of the lifecycle stage.
func (o GetLifecycleStagesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleStagesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLifecycleStagesResultOutput{})
}
