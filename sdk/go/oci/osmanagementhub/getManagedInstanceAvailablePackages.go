// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Managed Instance Available Packages in Oracle Cloud Infrastructure Os Management Hub service.
//
// Returns a list of packages that are available for installation on a managed instance.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/OsManagementHub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := OsManagementHub.GetManagedInstanceAvailablePackages(ctx, &osmanagementhub.GetManagedInstanceAvailablePackagesArgs{
//				ManagedInstanceId:   testManagedInstance.Id,
//				CompartmentId:       pulumi.StringRef(compartmentId),
//				DisplayNames:        managedInstanceAvailablePackageDisplayName,
//				DisplayNameContains: pulumi.StringRef(managedInstanceAvailablePackageDisplayNameContains),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetManagedInstanceAvailablePackages(ctx *pulumi.Context, args *GetManagedInstanceAvailablePackagesArgs, opts ...pulumi.InvokeOption) (*GetManagedInstanceAvailablePackagesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetManagedInstanceAvailablePackagesResult
	err := ctx.Invoke("oci:OsManagementHub/getManagedInstanceAvailablePackages:getManagedInstanceAvailablePackages", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedInstanceAvailablePackages.
type GetManagedInstanceAvailablePackagesArgs struct {
	// The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// A filter to return resources that may partially match the given display name.
	DisplayNameContains *string `pulumi:"displayNameContains"`
	// A filter to return resources that match the given display names.
	DisplayNames []string                                    `pulumi:"displayNames"`
	Filters      []GetManagedInstanceAvailablePackagesFilter `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
	ManagedInstanceId string `pulumi:"managedInstanceId"`
}

// A collection of values returned by getManagedInstanceAvailablePackages.
type GetManagedInstanceAvailablePackagesResult struct {
	// The list of available_package_collection.
	AvailablePackageCollections []GetManagedInstanceAvailablePackagesAvailablePackageCollection `pulumi:"availablePackageCollections"`
	CompartmentId               *string                                                         `pulumi:"compartmentId"`
	DisplayNameContains         *string                                                         `pulumi:"displayNameContains"`
	// Software source name.
	DisplayNames []string                                    `pulumi:"displayNames"`
	Filters      []GetManagedInstanceAvailablePackagesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                string `pulumi:"id"`
	ManagedInstanceId string `pulumi:"managedInstanceId"`
}

func GetManagedInstanceAvailablePackagesOutput(ctx *pulumi.Context, args GetManagedInstanceAvailablePackagesOutputArgs, opts ...pulumi.InvokeOption) GetManagedInstanceAvailablePackagesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetManagedInstanceAvailablePackagesResult, error) {
			args := v.(GetManagedInstanceAvailablePackagesArgs)
			r, err := GetManagedInstanceAvailablePackages(ctx, &args, opts...)
			var s GetManagedInstanceAvailablePackagesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetManagedInstanceAvailablePackagesResultOutput)
}

// A collection of arguments for invoking getManagedInstanceAvailablePackages.
type GetManagedInstanceAvailablePackagesOutputArgs struct {
	// The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// A filter to return resources that may partially match the given display name.
	DisplayNameContains pulumi.StringPtrInput `pulumi:"displayNameContains"`
	// A filter to return resources that match the given display names.
	DisplayNames pulumi.StringArrayInput                             `pulumi:"displayNames"`
	Filters      GetManagedInstanceAvailablePackagesFilterArrayInput `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
	ManagedInstanceId pulumi.StringInput `pulumi:"managedInstanceId"`
}

func (GetManagedInstanceAvailablePackagesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceAvailablePackagesArgs)(nil)).Elem()
}

// A collection of values returned by getManagedInstanceAvailablePackages.
type GetManagedInstanceAvailablePackagesResultOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceAvailablePackagesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceAvailablePackagesResult)(nil)).Elem()
}

func (o GetManagedInstanceAvailablePackagesResultOutput) ToGetManagedInstanceAvailablePackagesResultOutput() GetManagedInstanceAvailablePackagesResultOutput {
	return o
}

func (o GetManagedInstanceAvailablePackagesResultOutput) ToGetManagedInstanceAvailablePackagesResultOutputWithContext(ctx context.Context) GetManagedInstanceAvailablePackagesResultOutput {
	return o
}

// The list of available_package_collection.
func (o GetManagedInstanceAvailablePackagesResultOutput) AvailablePackageCollections() GetManagedInstanceAvailablePackagesAvailablePackageCollectionArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceAvailablePackagesResult) []GetManagedInstanceAvailablePackagesAvailablePackageCollection {
		return v.AvailablePackageCollections
	}).(GetManagedInstanceAvailablePackagesAvailablePackageCollectionArrayOutput)
}

func (o GetManagedInstanceAvailablePackagesResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceAvailablePackagesResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

func (o GetManagedInstanceAvailablePackagesResultOutput) DisplayNameContains() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceAvailablePackagesResult) *string { return v.DisplayNameContains }).(pulumi.StringPtrOutput)
}

// Software source name.
func (o GetManagedInstanceAvailablePackagesResultOutput) DisplayNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceAvailablePackagesResult) []string { return v.DisplayNames }).(pulumi.StringArrayOutput)
}

func (o GetManagedInstanceAvailablePackagesResultOutput) Filters() GetManagedInstanceAvailablePackagesFilterArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceAvailablePackagesResult) []GetManagedInstanceAvailablePackagesFilter {
		return v.Filters
	}).(GetManagedInstanceAvailablePackagesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagedInstanceAvailablePackagesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceAvailablePackagesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetManagedInstanceAvailablePackagesResultOutput) ManagedInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceAvailablePackagesResult) string { return v.ManagedInstanceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedInstanceAvailablePackagesResultOutput{})
}
