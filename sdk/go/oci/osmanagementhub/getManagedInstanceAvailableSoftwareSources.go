// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Managed Instance Available Software Sources in Oracle Cloud Infrastructure Os Management Hub service.
//
// Returns a list of software sources that can be attached to the specified managed instance. Any software sources already attached to the instance are not included in the list.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/osmanagementhub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := osmanagementhub.GetManagedInstanceAvailableSoftwareSources(ctx, &osmanagementhub.GetManagedInstanceAvailableSoftwareSourcesArgs{
//				ManagedInstanceId:   testManagedInstance.Id,
//				CompartmentId:       pulumi.StringRef(compartmentId),
//				DisplayNames:        managedInstanceAvailableSoftwareSourceDisplayName,
//				DisplayNameContains: pulumi.StringRef(managedInstanceAvailableSoftwareSourceDisplayNameContains),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetManagedInstanceAvailableSoftwareSources(ctx *pulumi.Context, args *GetManagedInstanceAvailableSoftwareSourcesArgs, opts ...pulumi.InvokeOption) (*GetManagedInstanceAvailableSoftwareSourcesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetManagedInstanceAvailableSoftwareSourcesResult
	err := ctx.Invoke("oci:OsManagementHub/getManagedInstanceAvailableSoftwareSources:getManagedInstanceAvailableSoftwareSources", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedInstanceAvailableSoftwareSources.
type GetManagedInstanceAvailableSoftwareSourcesArgs struct {
	// The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// A filter to return resources that may partially match the given display name.
	DisplayNameContains *string `pulumi:"displayNameContains"`
	// A filter to return resources that match the given display names.
	DisplayNames []string                                           `pulumi:"displayNames"`
	Filters      []GetManagedInstanceAvailableSoftwareSourcesFilter `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
	ManagedInstanceId string `pulumi:"managedInstanceId"`
}

// A collection of values returned by getManagedInstanceAvailableSoftwareSources.
type GetManagedInstanceAvailableSoftwareSourcesResult struct {
	// The list of available_software_source_collection.
	AvailableSoftwareSourceCollections []GetManagedInstanceAvailableSoftwareSourcesAvailableSoftwareSourceCollection `pulumi:"availableSoftwareSourceCollections"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the software source.
	CompartmentId       *string `pulumi:"compartmentId"`
	DisplayNameContains *string `pulumi:"displayNameContains"`
	// User-friendly name for the software source.
	DisplayNames []string                                           `pulumi:"displayNames"`
	Filters      []GetManagedInstanceAvailableSoftwareSourcesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                string `pulumi:"id"`
	ManagedInstanceId string `pulumi:"managedInstanceId"`
}

func GetManagedInstanceAvailableSoftwareSourcesOutput(ctx *pulumi.Context, args GetManagedInstanceAvailableSoftwareSourcesOutputArgs, opts ...pulumi.InvokeOption) GetManagedInstanceAvailableSoftwareSourcesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetManagedInstanceAvailableSoftwareSourcesResultOutput, error) {
			args := v.(GetManagedInstanceAvailableSoftwareSourcesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:OsManagementHub/getManagedInstanceAvailableSoftwareSources:getManagedInstanceAvailableSoftwareSources", args, GetManagedInstanceAvailableSoftwareSourcesResultOutput{}, options).(GetManagedInstanceAvailableSoftwareSourcesResultOutput), nil
		}).(GetManagedInstanceAvailableSoftwareSourcesResultOutput)
}

// A collection of arguments for invoking getManagedInstanceAvailableSoftwareSources.
type GetManagedInstanceAvailableSoftwareSourcesOutputArgs struct {
	// The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// A filter to return resources that may partially match the given display name.
	DisplayNameContains pulumi.StringPtrInput `pulumi:"displayNameContains"`
	// A filter to return resources that match the given display names.
	DisplayNames pulumi.StringArrayInput                                    `pulumi:"displayNames"`
	Filters      GetManagedInstanceAvailableSoftwareSourcesFilterArrayInput `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
	ManagedInstanceId pulumi.StringInput `pulumi:"managedInstanceId"`
}

func (GetManagedInstanceAvailableSoftwareSourcesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceAvailableSoftwareSourcesArgs)(nil)).Elem()
}

// A collection of values returned by getManagedInstanceAvailableSoftwareSources.
type GetManagedInstanceAvailableSoftwareSourcesResultOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceAvailableSoftwareSourcesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceAvailableSoftwareSourcesResult)(nil)).Elem()
}

func (o GetManagedInstanceAvailableSoftwareSourcesResultOutput) ToGetManagedInstanceAvailableSoftwareSourcesResultOutput() GetManagedInstanceAvailableSoftwareSourcesResultOutput {
	return o
}

func (o GetManagedInstanceAvailableSoftwareSourcesResultOutput) ToGetManagedInstanceAvailableSoftwareSourcesResultOutputWithContext(ctx context.Context) GetManagedInstanceAvailableSoftwareSourcesResultOutput {
	return o
}

// The list of available_software_source_collection.
func (o GetManagedInstanceAvailableSoftwareSourcesResultOutput) AvailableSoftwareSourceCollections() GetManagedInstanceAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceAvailableSoftwareSourcesResult) []GetManagedInstanceAvailableSoftwareSourcesAvailableSoftwareSourceCollection {
		return v.AvailableSoftwareSourceCollections
	}).(GetManagedInstanceAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the software source.
func (o GetManagedInstanceAvailableSoftwareSourcesResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceAvailableSoftwareSourcesResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

func (o GetManagedInstanceAvailableSoftwareSourcesResultOutput) DisplayNameContains() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceAvailableSoftwareSourcesResult) *string { return v.DisplayNameContains }).(pulumi.StringPtrOutput)
}

// User-friendly name for the software source.
func (o GetManagedInstanceAvailableSoftwareSourcesResultOutput) DisplayNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceAvailableSoftwareSourcesResult) []string { return v.DisplayNames }).(pulumi.StringArrayOutput)
}

func (o GetManagedInstanceAvailableSoftwareSourcesResultOutput) Filters() GetManagedInstanceAvailableSoftwareSourcesFilterArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceAvailableSoftwareSourcesResult) []GetManagedInstanceAvailableSoftwareSourcesFilter {
		return v.Filters
	}).(GetManagedInstanceAvailableSoftwareSourcesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagedInstanceAvailableSoftwareSourcesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceAvailableSoftwareSourcesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetManagedInstanceAvailableSoftwareSourcesResultOutput) ManagedInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceAvailableSoftwareSourcesResult) string { return v.ManagedInstanceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedInstanceAvailableSoftwareSourcesResultOutput{})
}
