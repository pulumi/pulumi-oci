// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Managed Instance Available Windows Updates in Oracle Cloud Infrastructure Os Management Hub service.
//
// Returns a list of Windows updates that can be installed on the specified managed instance.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/OsManagementHub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := OsManagementHub.GetManagedInstanceAvailableWindowsUpdates(ctx, &osmanagementhub.GetManagedInstanceAvailableWindowsUpdatesArgs{
//				ManagedInstanceId:   testManagedInstance.Id,
//				ClassificationTypes: managedInstanceAvailableWindowsUpdateClassificationType,
//				CompartmentId:       pulumi.StringRef(compartmentId),
//				DisplayName:         pulumi.StringRef(managedInstanceAvailableWindowsUpdateDisplayName),
//				DisplayNameContains: pulumi.StringRef(managedInstanceAvailableWindowsUpdateDisplayNameContains),
//				IsInstallable:       pulumi.StringRef(managedInstanceAvailableWindowsUpdateIsInstallable),
//				Names:               managedInstanceAvailableWindowsUpdateName,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetManagedInstanceAvailableWindowsUpdates(ctx *pulumi.Context, args *GetManagedInstanceAvailableWindowsUpdatesArgs, opts ...pulumi.InvokeOption) (*GetManagedInstanceAvailableWindowsUpdatesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetManagedInstanceAvailableWindowsUpdatesResult
	err := ctx.Invoke("oci:OsManagementHub/getManagedInstanceAvailableWindowsUpdates:getManagedInstanceAvailableWindowsUpdates", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedInstanceAvailableWindowsUpdates.
type GetManagedInstanceAvailableWindowsUpdatesArgs struct {
	// A filter to return only packages that match the given update classification type.
	ClassificationTypes []string `pulumi:"classificationTypes"`
	// The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// A filter to return resources that match the given user-friendly name.
	DisplayName *string `pulumi:"displayName"`
	// A filter to return resources that may partially match the given display name.
	DisplayNameContains *string                                           `pulumi:"displayNameContains"`
	Filters             []GetManagedInstanceAvailableWindowsUpdatesFilter `pulumi:"filters"`
	// Indicates if the update can be installed by the OS Management Hub service.
	IsInstallable *string `pulumi:"isInstallable"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
	ManagedInstanceId string `pulumi:"managedInstanceId"`
	// A filter based on the unique identifier for the Windows update. Note that this is not an OCID, but is a unique identifier assigned by Microsoft.  Example: '6981d463-cd91-4a26-b7c4-ea4ded9183ed'
	Names []string `pulumi:"names"`
}

// A collection of values returned by getManagedInstanceAvailableWindowsUpdates.
type GetManagedInstanceAvailableWindowsUpdatesResult struct {
	// The list of available_windows_update_collection.
	AvailableWindowsUpdateCollections []GetManagedInstanceAvailableWindowsUpdatesAvailableWindowsUpdateCollection `pulumi:"availableWindowsUpdateCollections"`
	ClassificationTypes               []string                                                                    `pulumi:"classificationTypes"`
	CompartmentId                     *string                                                                     `pulumi:"compartmentId"`
	DisplayName                       *string                                                                     `pulumi:"displayName"`
	DisplayNameContains               *string                                                                     `pulumi:"displayNameContains"`
	Filters                           []GetManagedInstanceAvailableWindowsUpdatesFilter                           `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                string  `pulumi:"id"`
	IsInstallable     *string `pulumi:"isInstallable"`
	ManagedInstanceId string  `pulumi:"managedInstanceId"`
	// Name of the Windows update.
	Names []string `pulumi:"names"`
}

func GetManagedInstanceAvailableWindowsUpdatesOutput(ctx *pulumi.Context, args GetManagedInstanceAvailableWindowsUpdatesOutputArgs, opts ...pulumi.InvokeOption) GetManagedInstanceAvailableWindowsUpdatesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetManagedInstanceAvailableWindowsUpdatesResult, error) {
			args := v.(GetManagedInstanceAvailableWindowsUpdatesArgs)
			r, err := GetManagedInstanceAvailableWindowsUpdates(ctx, &args, opts...)
			var s GetManagedInstanceAvailableWindowsUpdatesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetManagedInstanceAvailableWindowsUpdatesResultOutput)
}

// A collection of arguments for invoking getManagedInstanceAvailableWindowsUpdates.
type GetManagedInstanceAvailableWindowsUpdatesOutputArgs struct {
	// A filter to return only packages that match the given update classification type.
	ClassificationTypes pulumi.StringArrayInput `pulumi:"classificationTypes"`
	// The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// A filter to return resources that match the given user-friendly name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// A filter to return resources that may partially match the given display name.
	DisplayNameContains pulumi.StringPtrInput                                     `pulumi:"displayNameContains"`
	Filters             GetManagedInstanceAvailableWindowsUpdatesFilterArrayInput `pulumi:"filters"`
	// Indicates if the update can be installed by the OS Management Hub service.
	IsInstallable pulumi.StringPtrInput `pulumi:"isInstallable"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
	ManagedInstanceId pulumi.StringInput `pulumi:"managedInstanceId"`
	// A filter based on the unique identifier for the Windows update. Note that this is not an OCID, but is a unique identifier assigned by Microsoft.  Example: '6981d463-cd91-4a26-b7c4-ea4ded9183ed'
	Names pulumi.StringArrayInput `pulumi:"names"`
}

func (GetManagedInstanceAvailableWindowsUpdatesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceAvailableWindowsUpdatesArgs)(nil)).Elem()
}

// A collection of values returned by getManagedInstanceAvailableWindowsUpdates.
type GetManagedInstanceAvailableWindowsUpdatesResultOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceAvailableWindowsUpdatesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceAvailableWindowsUpdatesResult)(nil)).Elem()
}

func (o GetManagedInstanceAvailableWindowsUpdatesResultOutput) ToGetManagedInstanceAvailableWindowsUpdatesResultOutput() GetManagedInstanceAvailableWindowsUpdatesResultOutput {
	return o
}

func (o GetManagedInstanceAvailableWindowsUpdatesResultOutput) ToGetManagedInstanceAvailableWindowsUpdatesResultOutputWithContext(ctx context.Context) GetManagedInstanceAvailableWindowsUpdatesResultOutput {
	return o
}

// The list of available_windows_update_collection.
func (o GetManagedInstanceAvailableWindowsUpdatesResultOutput) AvailableWindowsUpdateCollections() GetManagedInstanceAvailableWindowsUpdatesAvailableWindowsUpdateCollectionArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceAvailableWindowsUpdatesResult) []GetManagedInstanceAvailableWindowsUpdatesAvailableWindowsUpdateCollection {
		return v.AvailableWindowsUpdateCollections
	}).(GetManagedInstanceAvailableWindowsUpdatesAvailableWindowsUpdateCollectionArrayOutput)
}

func (o GetManagedInstanceAvailableWindowsUpdatesResultOutput) ClassificationTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceAvailableWindowsUpdatesResult) []string { return v.ClassificationTypes }).(pulumi.StringArrayOutput)
}

func (o GetManagedInstanceAvailableWindowsUpdatesResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceAvailableWindowsUpdatesResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

func (o GetManagedInstanceAvailableWindowsUpdatesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceAvailableWindowsUpdatesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetManagedInstanceAvailableWindowsUpdatesResultOutput) DisplayNameContains() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceAvailableWindowsUpdatesResult) *string { return v.DisplayNameContains }).(pulumi.StringPtrOutput)
}

func (o GetManagedInstanceAvailableWindowsUpdatesResultOutput) Filters() GetManagedInstanceAvailableWindowsUpdatesFilterArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceAvailableWindowsUpdatesResult) []GetManagedInstanceAvailableWindowsUpdatesFilter {
		return v.Filters
	}).(GetManagedInstanceAvailableWindowsUpdatesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagedInstanceAvailableWindowsUpdatesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceAvailableWindowsUpdatesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetManagedInstanceAvailableWindowsUpdatesResultOutput) IsInstallable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceAvailableWindowsUpdatesResult) *string { return v.IsInstallable }).(pulumi.StringPtrOutput)
}

func (o GetManagedInstanceAvailableWindowsUpdatesResultOutput) ManagedInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceAvailableWindowsUpdatesResult) string { return v.ManagedInstanceId }).(pulumi.StringOutput)
}

// Name of the Windows update.
func (o GetManagedInstanceAvailableWindowsUpdatesResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceAvailableWindowsUpdatesResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedInstanceAvailableWindowsUpdatesResultOutput{})
}
