// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Managed Instance Errata in Oracle Cloud Infrastructure Os Management Hub service.
//
// Returns a list of applicable errata on the managed instance.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/OsManagementHub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := OsManagementHub.GetManagedInstanceErrata(ctx, &osmanagementhub.GetManagedInstanceErrataArgs{
//				ManagedInstanceId:   testManagedInstance.Id,
//				ClassificationTypes: managedInstanceErrataClassificationType,
//				CompartmentId:       pulumi.StringRef(compartmentId),
//				Names:               managedInstanceErrataName,
//				NameContains:        pulumi.StringRef(managedInstanceErrataNameContains),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetManagedInstanceErrata(ctx *pulumi.Context, args *GetManagedInstanceErrataArgs, opts ...pulumi.InvokeOption) (*GetManagedInstanceErrataResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetManagedInstanceErrataResult
	err := ctx.Invoke("oci:OsManagementHub/getManagedInstanceErrata:getManagedInstanceErrata", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedInstanceErrata.
type GetManagedInstanceErrataArgs struct {
	// A filter to return only packages that match the given update classification type.
	ClassificationTypes []string `pulumi:"classificationTypes"`
	// The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
	CompartmentId *string                          `pulumi:"compartmentId"`
	Filters       []GetManagedInstanceErrataFilter `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
	ManagedInstanceId string `pulumi:"managedInstanceId"`
	// A filter to return resources that may partially match the erratum name given.
	NameContains *string `pulumi:"nameContains"`
	// The assigned erratum name. It's unique and not changeable.  Example: `ELSA-2020-5804`
	Names []string `pulumi:"names"`
}

// A collection of values returned by getManagedInstanceErrata.
type GetManagedInstanceErrataResult struct {
	ClassificationTypes []string                         `pulumi:"classificationTypes"`
	CompartmentId       *string                          `pulumi:"compartmentId"`
	Filters             []GetManagedInstanceErrataFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of managed_instance_erratum_summary_collection.
	ManagedInstanceErratumSummaryCollections []GetManagedInstanceErrataManagedInstanceErratumSummaryCollection `pulumi:"managedInstanceErratumSummaryCollections"`
	ManagedInstanceId                        string                                                            `pulumi:"managedInstanceId"`
	NameContains                             *string                                                           `pulumi:"nameContains"`
	// The name of the software package.
	Names []string `pulumi:"names"`
}

func GetManagedInstanceErrataOutput(ctx *pulumi.Context, args GetManagedInstanceErrataOutputArgs, opts ...pulumi.InvokeOption) GetManagedInstanceErrataResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetManagedInstanceErrataResult, error) {
			args := v.(GetManagedInstanceErrataArgs)
			r, err := GetManagedInstanceErrata(ctx, &args, opts...)
			var s GetManagedInstanceErrataResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetManagedInstanceErrataResultOutput)
}

// A collection of arguments for invoking getManagedInstanceErrata.
type GetManagedInstanceErrataOutputArgs struct {
	// A filter to return only packages that match the given update classification type.
	ClassificationTypes pulumi.StringArrayInput `pulumi:"classificationTypes"`
	// The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
	CompartmentId pulumi.StringPtrInput                    `pulumi:"compartmentId"`
	Filters       GetManagedInstanceErrataFilterArrayInput `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
	ManagedInstanceId pulumi.StringInput `pulumi:"managedInstanceId"`
	// A filter to return resources that may partially match the erratum name given.
	NameContains pulumi.StringPtrInput `pulumi:"nameContains"`
	// The assigned erratum name. It's unique and not changeable.  Example: `ELSA-2020-5804`
	Names pulumi.StringArrayInput `pulumi:"names"`
}

func (GetManagedInstanceErrataOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceErrataArgs)(nil)).Elem()
}

// A collection of values returned by getManagedInstanceErrata.
type GetManagedInstanceErrataResultOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceErrataResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceErrataResult)(nil)).Elem()
}

func (o GetManagedInstanceErrataResultOutput) ToGetManagedInstanceErrataResultOutput() GetManagedInstanceErrataResultOutput {
	return o
}

func (o GetManagedInstanceErrataResultOutput) ToGetManagedInstanceErrataResultOutputWithContext(ctx context.Context) GetManagedInstanceErrataResultOutput {
	return o
}

func (o GetManagedInstanceErrataResultOutput) ClassificationTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceErrataResult) []string { return v.ClassificationTypes }).(pulumi.StringArrayOutput)
}

func (o GetManagedInstanceErrataResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceErrataResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

func (o GetManagedInstanceErrataResultOutput) Filters() GetManagedInstanceErrataFilterArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceErrataResult) []GetManagedInstanceErrataFilter { return v.Filters }).(GetManagedInstanceErrataFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagedInstanceErrataResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceErrataResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of managed_instance_erratum_summary_collection.
func (o GetManagedInstanceErrataResultOutput) ManagedInstanceErratumSummaryCollections() GetManagedInstanceErrataManagedInstanceErratumSummaryCollectionArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceErrataResult) []GetManagedInstanceErrataManagedInstanceErratumSummaryCollection {
		return v.ManagedInstanceErratumSummaryCollections
	}).(GetManagedInstanceErrataManagedInstanceErratumSummaryCollectionArrayOutput)
}

func (o GetManagedInstanceErrataResultOutput) ManagedInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceErrataResult) string { return v.ManagedInstanceId }).(pulumi.StringOutput)
}

func (o GetManagedInstanceErrataResultOutput) NameContains() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceErrataResult) *string { return v.NameContains }).(pulumi.StringPtrOutput)
}

// The name of the software package.
func (o GetManagedInstanceErrataResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceErrataResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedInstanceErrataResultOutput{})
}
