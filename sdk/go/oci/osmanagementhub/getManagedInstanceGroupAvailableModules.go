// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Managed Instance Group Available Modules in Oracle Cloud Infrastructure Os Management Hub service.
//
// Lists available modules that for the specified managed instance group. Filter the list against a variety of
// criteria including but not limited to its name.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/OsManagementHub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := OsManagementHub.GetManagedInstanceGroupAvailableModules(ctx, &osmanagementhub.GetManagedInstanceGroupAvailableModulesArgs{
//				ManagedInstanceGroupId: oci_os_management_hub_managed_instance_group.Test_managed_instance_group.Id,
//				CompartmentId:          pulumi.StringRef(_var.Compartment_id),
//				Name:                   pulumi.StringRef(_var.Managed_instance_group_available_module_name),
//				NameContains:           pulumi.StringRef(_var.Managed_instance_group_available_module_name_contains),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetManagedInstanceGroupAvailableModules(ctx *pulumi.Context, args *GetManagedInstanceGroupAvailableModulesArgs, opts ...pulumi.InvokeOption) (*GetManagedInstanceGroupAvailableModulesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetManagedInstanceGroupAvailableModulesResult
	err := ctx.Invoke("oci:OsManagementHub/getManagedInstanceGroupAvailableModules:getManagedInstanceGroupAvailableModules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedInstanceGroupAvailableModules.
type GetManagedInstanceGroupAvailableModulesArgs struct {
	// The OCID of the compartment that contains the resources to list.
	CompartmentId *string                                         `pulumi:"compartmentId"`
	Filters       []GetManagedInstanceGroupAvailableModulesFilter `pulumi:"filters"`
	// The managed instance group OCID.
	ManagedInstanceGroupId string `pulumi:"managedInstanceGroupId"`
	// The resource name.
	Name *string `pulumi:"name"`
	// A filter to return resources that may partially match the name given.
	NameContains *string `pulumi:"nameContains"`
}

// A collection of values returned by getManagedInstanceGroupAvailableModules.
type GetManagedInstanceGroupAvailableModulesResult struct {
	CompartmentId *string                                         `pulumi:"compartmentId"`
	Filters       []GetManagedInstanceGroupAvailableModulesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of managed_instance_group_available_module_collection.
	ManagedInstanceGroupAvailableModuleCollections []GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollection `pulumi:"managedInstanceGroupAvailableModuleCollections"`
	ManagedInstanceGroupId                         string                                                                                 `pulumi:"managedInstanceGroupId"`
	// The name of the module that is available to be enabled on the managed instance group.
	Name         *string `pulumi:"name"`
	NameContains *string `pulumi:"nameContains"`
}

func GetManagedInstanceGroupAvailableModulesOutput(ctx *pulumi.Context, args GetManagedInstanceGroupAvailableModulesOutputArgs, opts ...pulumi.InvokeOption) GetManagedInstanceGroupAvailableModulesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetManagedInstanceGroupAvailableModulesResult, error) {
			args := v.(GetManagedInstanceGroupAvailableModulesArgs)
			r, err := GetManagedInstanceGroupAvailableModules(ctx, &args, opts...)
			var s GetManagedInstanceGroupAvailableModulesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetManagedInstanceGroupAvailableModulesResultOutput)
}

// A collection of arguments for invoking getManagedInstanceGroupAvailableModules.
type GetManagedInstanceGroupAvailableModulesOutputArgs struct {
	// The OCID of the compartment that contains the resources to list.
	CompartmentId pulumi.StringPtrInput                                   `pulumi:"compartmentId"`
	Filters       GetManagedInstanceGroupAvailableModulesFilterArrayInput `pulumi:"filters"`
	// The managed instance group OCID.
	ManagedInstanceGroupId pulumi.StringInput `pulumi:"managedInstanceGroupId"`
	// The resource name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A filter to return resources that may partially match the name given.
	NameContains pulumi.StringPtrInput `pulumi:"nameContains"`
}

func (GetManagedInstanceGroupAvailableModulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupAvailableModulesArgs)(nil)).Elem()
}

// A collection of values returned by getManagedInstanceGroupAvailableModules.
type GetManagedInstanceGroupAvailableModulesResultOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupAvailableModulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupAvailableModulesResult)(nil)).Elem()
}

func (o GetManagedInstanceGroupAvailableModulesResultOutput) ToGetManagedInstanceGroupAvailableModulesResultOutput() GetManagedInstanceGroupAvailableModulesResultOutput {
	return o
}

func (o GetManagedInstanceGroupAvailableModulesResultOutput) ToGetManagedInstanceGroupAvailableModulesResultOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailableModulesResultOutput {
	return o
}

func (o GetManagedInstanceGroupAvailableModulesResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailableModulesResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

func (o GetManagedInstanceGroupAvailableModulesResultOutput) Filters() GetManagedInstanceGroupAvailableModulesFilterArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailableModulesResult) []GetManagedInstanceGroupAvailableModulesFilter {
		return v.Filters
	}).(GetManagedInstanceGroupAvailableModulesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagedInstanceGroupAvailableModulesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailableModulesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of managed_instance_group_available_module_collection.
func (o GetManagedInstanceGroupAvailableModulesResultOutput) ManagedInstanceGroupAvailableModuleCollections() GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailableModulesResult) []GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollection {
		return v.ManagedInstanceGroupAvailableModuleCollections
	}).(GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArrayOutput)
}

func (o GetManagedInstanceGroupAvailableModulesResultOutput) ManagedInstanceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailableModulesResult) string { return v.ManagedInstanceGroupId }).(pulumi.StringOutput)
}

// The name of the module that is available to be enabled on the managed instance group.
func (o GetManagedInstanceGroupAvailableModulesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailableModulesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetManagedInstanceGroupAvailableModulesResultOutput) NameContains() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailableModulesResult) *string { return v.NameContains }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedInstanceGroupAvailableModulesResultOutput{})
}
