// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides the list of Managed Instance Group Available Packages in Oracle Cloud Infrastructure Os Management Hub service.
//
// Lists available packages on the specified managed instances group. Filter the list against a variety
// of criteria including but not limited to the package name.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/OsManagementHub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := OsManagementHub.GetManagedInstanceGroupAvailablePackages(ctx, &osmanagementhub.GetManagedInstanceGroupAvailablePackagesArgs{
//				ManagedInstanceGroupId: oci_os_management_hub_managed_instance_group.Test_managed_instance_group.Id,
//				CompartmentId:          pulumi.StringRef(_var.Compartment_id),
//				DisplayNames:           _var.Managed_instance_group_available_package_display_name,
//				DisplayNameContains:    pulumi.StringRef(_var.Managed_instance_group_available_package_display_name_contains),
//				IsLatest:               pulumi.BoolRef(_var.Managed_instance_group_available_package_is_latest),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetManagedInstanceGroupAvailablePackages(ctx *pulumi.Context, args *GetManagedInstanceGroupAvailablePackagesArgs, opts ...pulumi.InvokeOption) (*GetManagedInstanceGroupAvailablePackagesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetManagedInstanceGroupAvailablePackagesResult
	err := ctx.Invoke("oci:OsManagementHub/getManagedInstanceGroupAvailablePackages:getManagedInstanceGroupAvailablePackages", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedInstanceGroupAvailablePackages.
type GetManagedInstanceGroupAvailablePackagesArgs struct {
	// The OCID of the compartment that contains the resources to list.
	CompartmentId *string `pulumi:"compartmentId"`
	// A filter to return resources that may partially match the given display name.
	DisplayNameContains *string `pulumi:"displayNameContains"`
	// A filter to return resources that match the given display names.
	DisplayNames []string                                         `pulumi:"displayNames"`
	Filters      []GetManagedInstanceGroupAvailablePackagesFilter `pulumi:"filters"`
	// A boolean variable that is used to list only the latest versions of packages, module streams, and stream profiles when set to true. All packages, module streams, and stream profiles are returned when set to false.
	IsLatest *bool `pulumi:"isLatest"`
	// The managed instance group OCID.
	ManagedInstanceGroupId string `pulumi:"managedInstanceGroupId"`
}

// A collection of values returned by getManagedInstanceGroupAvailablePackages.
type GetManagedInstanceGroupAvailablePackagesResult struct {
	CompartmentId       *string `pulumi:"compartmentId"`
	DisplayNameContains *string `pulumi:"displayNameContains"`
	// Software source name.
	DisplayNames []string                                         `pulumi:"displayNames"`
	Filters      []GetManagedInstanceGroupAvailablePackagesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Flag to return only latest package versions.
	IsLatest *bool `pulumi:"isLatest"`
	// The list of managed_instance_group_available_package_collection.
	ManagedInstanceGroupAvailablePackageCollections []GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollection `pulumi:"managedInstanceGroupAvailablePackageCollections"`
	ManagedInstanceGroupId                          string                                                                                   `pulumi:"managedInstanceGroupId"`
}

func GetManagedInstanceGroupAvailablePackagesOutput(ctx *pulumi.Context, args GetManagedInstanceGroupAvailablePackagesOutputArgs, opts ...pulumi.InvokeOption) GetManagedInstanceGroupAvailablePackagesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetManagedInstanceGroupAvailablePackagesResult, error) {
			args := v.(GetManagedInstanceGroupAvailablePackagesArgs)
			r, err := GetManagedInstanceGroupAvailablePackages(ctx, &args, opts...)
			var s GetManagedInstanceGroupAvailablePackagesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetManagedInstanceGroupAvailablePackagesResultOutput)
}

// A collection of arguments for invoking getManagedInstanceGroupAvailablePackages.
type GetManagedInstanceGroupAvailablePackagesOutputArgs struct {
	// The OCID of the compartment that contains the resources to list.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// A filter to return resources that may partially match the given display name.
	DisplayNameContains pulumi.StringPtrInput `pulumi:"displayNameContains"`
	// A filter to return resources that match the given display names.
	DisplayNames pulumi.StringArrayInput                                  `pulumi:"displayNames"`
	Filters      GetManagedInstanceGroupAvailablePackagesFilterArrayInput `pulumi:"filters"`
	// A boolean variable that is used to list only the latest versions of packages, module streams, and stream profiles when set to true. All packages, module streams, and stream profiles are returned when set to false.
	IsLatest pulumi.BoolPtrInput `pulumi:"isLatest"`
	// The managed instance group OCID.
	ManagedInstanceGroupId pulumi.StringInput `pulumi:"managedInstanceGroupId"`
}

func (GetManagedInstanceGroupAvailablePackagesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupAvailablePackagesArgs)(nil)).Elem()
}

// A collection of values returned by getManagedInstanceGroupAvailablePackages.
type GetManagedInstanceGroupAvailablePackagesResultOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupAvailablePackagesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupAvailablePackagesResult)(nil)).Elem()
}

func (o GetManagedInstanceGroupAvailablePackagesResultOutput) ToGetManagedInstanceGroupAvailablePackagesResultOutput() GetManagedInstanceGroupAvailablePackagesResultOutput {
	return o
}

func (o GetManagedInstanceGroupAvailablePackagesResultOutput) ToGetManagedInstanceGroupAvailablePackagesResultOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailablePackagesResultOutput {
	return o
}

func (o GetManagedInstanceGroupAvailablePackagesResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetManagedInstanceGroupAvailablePackagesResult] {
	return pulumix.Output[GetManagedInstanceGroupAvailablePackagesResult]{
		OutputState: o.OutputState,
	}
}

func (o GetManagedInstanceGroupAvailablePackagesResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailablePackagesResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

func (o GetManagedInstanceGroupAvailablePackagesResultOutput) DisplayNameContains() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailablePackagesResult) *string { return v.DisplayNameContains }).(pulumi.StringPtrOutput)
}

// Software source name.
func (o GetManagedInstanceGroupAvailablePackagesResultOutput) DisplayNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailablePackagesResult) []string { return v.DisplayNames }).(pulumi.StringArrayOutput)
}

func (o GetManagedInstanceGroupAvailablePackagesResultOutput) Filters() GetManagedInstanceGroupAvailablePackagesFilterArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailablePackagesResult) []GetManagedInstanceGroupAvailablePackagesFilter {
		return v.Filters
	}).(GetManagedInstanceGroupAvailablePackagesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagedInstanceGroupAvailablePackagesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailablePackagesResult) string { return v.Id }).(pulumi.StringOutput)
}

// Flag to return only latest package versions.
func (o GetManagedInstanceGroupAvailablePackagesResultOutput) IsLatest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailablePackagesResult) *bool { return v.IsLatest }).(pulumi.BoolPtrOutput)
}

// The list of managed_instance_group_available_package_collection.
func (o GetManagedInstanceGroupAvailablePackagesResultOutput) ManagedInstanceGroupAvailablePackageCollections() GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailablePackagesResult) []GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollection {
		return v.ManagedInstanceGroupAvailablePackageCollections
	}).(GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArrayOutput)
}

func (o GetManagedInstanceGroupAvailablePackagesResultOutput) ManagedInstanceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailablePackagesResult) string { return v.ManagedInstanceGroupId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedInstanceGroupAvailablePackagesResultOutput{})
}
