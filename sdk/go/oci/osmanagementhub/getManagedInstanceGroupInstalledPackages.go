// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Managed Instance Group Installed Packages in Oracle Cloud Infrastructure Os Management Hub service.
//
// Lists installed packages on the specified managed instances group. Filter the list against a variety
// of criteria including but not limited to the package name.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/osmanagementhub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := osmanagementhub.GetManagedInstanceGroupInstalledPackages(ctx, &osmanagementhub.GetManagedInstanceGroupInstalledPackagesArgs{
//				ManagedInstanceGroupId: testManagedInstanceGroup.Id,
//				CompartmentId:          pulumi.StringRef(compartmentId),
//				DisplayNames:           managedInstanceGroupInstalledPackageDisplayName,
//				DisplayNameContains:    pulumi.StringRef(managedInstanceGroupInstalledPackageDisplayNameContains),
//				TimeInstallDateEnd:     pulumi.StringRef(managedInstanceGroupInstalledPackageTimeInstallDateEnd),
//				TimeInstallDateStart:   pulumi.StringRef(managedInstanceGroupInstalledPackageTimeInstallDateStart),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetManagedInstanceGroupInstalledPackages(ctx *pulumi.Context, args *GetManagedInstanceGroupInstalledPackagesArgs, opts ...pulumi.InvokeOption) (*GetManagedInstanceGroupInstalledPackagesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetManagedInstanceGroupInstalledPackagesResult
	err := ctx.Invoke("oci:OsManagementHub/getManagedInstanceGroupInstalledPackages:getManagedInstanceGroupInstalledPackages", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedInstanceGroupInstalledPackages.
type GetManagedInstanceGroupInstalledPackagesArgs struct {
	// The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// A filter to return resources that may partially match the given display name.
	DisplayNameContains *string `pulumi:"displayNameContains"`
	// A filter to return resources that match the given display names.
	DisplayNames []string                                         `pulumi:"displayNames"`
	Filters      []GetManagedInstanceGroupInstalledPackagesFilter `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
	ManagedInstanceGroupId string `pulumi:"managedInstanceGroupId"`
	// A filter to return only packages that were installed on or before the date provided, in ISO 8601 format.  Example: 2017-07-14T02:40:00.000Z
	TimeInstallDateEnd *string `pulumi:"timeInstallDateEnd"`
	// The install date after which to list all packages, in ISO 8601 format  Example: 2017-07-14T02:40:00.000Z
	TimeInstallDateStart *string `pulumi:"timeInstallDateStart"`
}

// A collection of values returned by getManagedInstanceGroupInstalledPackages.
type GetManagedInstanceGroupInstalledPackagesResult struct {
	CompartmentId       *string                                          `pulumi:"compartmentId"`
	DisplayNameContains *string                                          `pulumi:"displayNameContains"`
	DisplayNames        []string                                         `pulumi:"displayNames"`
	Filters             []GetManagedInstanceGroupInstalledPackagesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                     string `pulumi:"id"`
	ManagedInstanceGroupId string `pulumi:"managedInstanceGroupId"`
	// The list of managed_instance_group_installed_package_collection.
	ManagedInstanceGroupInstalledPackageCollections []GetManagedInstanceGroupInstalledPackagesManagedInstanceGroupInstalledPackageCollection `pulumi:"managedInstanceGroupInstalledPackageCollections"`
	TimeInstallDateEnd                              *string                                                                                  `pulumi:"timeInstallDateEnd"`
	TimeInstallDateStart                            *string                                                                                  `pulumi:"timeInstallDateStart"`
}

func GetManagedInstanceGroupInstalledPackagesOutput(ctx *pulumi.Context, args GetManagedInstanceGroupInstalledPackagesOutputArgs, opts ...pulumi.InvokeOption) GetManagedInstanceGroupInstalledPackagesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetManagedInstanceGroupInstalledPackagesResultOutput, error) {
			args := v.(GetManagedInstanceGroupInstalledPackagesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:OsManagementHub/getManagedInstanceGroupInstalledPackages:getManagedInstanceGroupInstalledPackages", args, GetManagedInstanceGroupInstalledPackagesResultOutput{}, options).(GetManagedInstanceGroupInstalledPackagesResultOutput), nil
		}).(GetManagedInstanceGroupInstalledPackagesResultOutput)
}

// A collection of arguments for invoking getManagedInstanceGroupInstalledPackages.
type GetManagedInstanceGroupInstalledPackagesOutputArgs struct {
	// The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// A filter to return resources that may partially match the given display name.
	DisplayNameContains pulumi.StringPtrInput `pulumi:"displayNameContains"`
	// A filter to return resources that match the given display names.
	DisplayNames pulumi.StringArrayInput                                  `pulumi:"displayNames"`
	Filters      GetManagedInstanceGroupInstalledPackagesFilterArrayInput `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
	ManagedInstanceGroupId pulumi.StringInput `pulumi:"managedInstanceGroupId"`
	// A filter to return only packages that were installed on or before the date provided, in ISO 8601 format.  Example: 2017-07-14T02:40:00.000Z
	TimeInstallDateEnd pulumi.StringPtrInput `pulumi:"timeInstallDateEnd"`
	// The install date after which to list all packages, in ISO 8601 format  Example: 2017-07-14T02:40:00.000Z
	TimeInstallDateStart pulumi.StringPtrInput `pulumi:"timeInstallDateStart"`
}

func (GetManagedInstanceGroupInstalledPackagesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupInstalledPackagesArgs)(nil)).Elem()
}

// A collection of values returned by getManagedInstanceGroupInstalledPackages.
type GetManagedInstanceGroupInstalledPackagesResultOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupInstalledPackagesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupInstalledPackagesResult)(nil)).Elem()
}

func (o GetManagedInstanceGroupInstalledPackagesResultOutput) ToGetManagedInstanceGroupInstalledPackagesResultOutput() GetManagedInstanceGroupInstalledPackagesResultOutput {
	return o
}

func (o GetManagedInstanceGroupInstalledPackagesResultOutput) ToGetManagedInstanceGroupInstalledPackagesResultOutputWithContext(ctx context.Context) GetManagedInstanceGroupInstalledPackagesResultOutput {
	return o
}

func (o GetManagedInstanceGroupInstalledPackagesResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupInstalledPackagesResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

func (o GetManagedInstanceGroupInstalledPackagesResultOutput) DisplayNameContains() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupInstalledPackagesResult) *string { return v.DisplayNameContains }).(pulumi.StringPtrOutput)
}

func (o GetManagedInstanceGroupInstalledPackagesResultOutput) DisplayNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupInstalledPackagesResult) []string { return v.DisplayNames }).(pulumi.StringArrayOutput)
}

func (o GetManagedInstanceGroupInstalledPackagesResultOutput) Filters() GetManagedInstanceGroupInstalledPackagesFilterArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupInstalledPackagesResult) []GetManagedInstanceGroupInstalledPackagesFilter {
		return v.Filters
	}).(GetManagedInstanceGroupInstalledPackagesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagedInstanceGroupInstalledPackagesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupInstalledPackagesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetManagedInstanceGroupInstalledPackagesResultOutput) ManagedInstanceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupInstalledPackagesResult) string { return v.ManagedInstanceGroupId }).(pulumi.StringOutput)
}

// The list of managed_instance_group_installed_package_collection.
func (o GetManagedInstanceGroupInstalledPackagesResultOutput) ManagedInstanceGroupInstalledPackageCollections() GetManagedInstanceGroupInstalledPackagesManagedInstanceGroupInstalledPackageCollectionArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupInstalledPackagesResult) []GetManagedInstanceGroupInstalledPackagesManagedInstanceGroupInstalledPackageCollection {
		return v.ManagedInstanceGroupInstalledPackageCollections
	}).(GetManagedInstanceGroupInstalledPackagesManagedInstanceGroupInstalledPackageCollectionArrayOutput)
}

func (o GetManagedInstanceGroupInstalledPackagesResultOutput) TimeInstallDateEnd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupInstalledPackagesResult) *string { return v.TimeInstallDateEnd }).(pulumi.StringPtrOutput)
}

func (o GetManagedInstanceGroupInstalledPackagesResultOutput) TimeInstallDateStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupInstalledPackagesResult) *string { return v.TimeInstallDateStart }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedInstanceGroupInstalledPackagesResultOutput{})
}
