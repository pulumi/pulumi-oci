// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Managed Instance Group Modules in Oracle Cloud Infrastructure Os Management Hub service.
//
// Retrieve a list of module streams, along with a summary of their
// status, from a managed instance group.  Filters may be applied to select
// a subset of module streams based on the filter criteria.
//
// The 'moduleName' attribute filters against the name of a module.
// It accepts strings of the format "<module>".  If this attribute
// is defined, only streams that belong to the specified module are
// included in the result set.  If it is not defined, the request is
// not subject to this filter.
//
// The "status" attribute filters against the state of a module stream.
// Valid values are "ENABLED", "DISABLED", and "ACTIVE".  If the
// attribute is set to "ENABLED", only module streams that are enabled
// are included in the result set.  If the attribute is set to "DISABLED",
// only module streams that are not enabled are included in the result
// set.  If the attribute is set to "ACTIVE", only module streams that
// are active are included in the result set.  If the attribute is not
// defined, the request is not subject to this filter.
//
// When sorting by the display name, the result set is sorted first
// by the module name and then by the stream name.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/OsManagementHub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := OsManagementHub.GetManagedInstanceGroupModules(ctx, &osmanagementhub.GetManagedInstanceGroupModulesArgs{
//				ManagedInstanceGroupId: testManagedInstanceGroup.Id,
//				CompartmentId:          pulumi.StringRef(compartmentId),
//				Name:                   pulumi.StringRef(managedInstanceGroupModuleName),
//				NameContains:           pulumi.StringRef(managedInstanceGroupModuleNameContains),
//				StreamName:             pulumi.StringRef(testStream.Name),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetManagedInstanceGroupModules(ctx *pulumi.Context, args *GetManagedInstanceGroupModulesArgs, opts ...pulumi.InvokeOption) (*GetManagedInstanceGroupModulesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetManagedInstanceGroupModulesResult
	err := ctx.Invoke("oci:OsManagementHub/getManagedInstanceGroupModules:getManagedInstanceGroupModules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedInstanceGroupModules.
type GetManagedInstanceGroupModulesArgs struct {
	// The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
	CompartmentId *string                                `pulumi:"compartmentId"`
	Filters       []GetManagedInstanceGroupModulesFilter `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
	ManagedInstanceGroupId string `pulumi:"managedInstanceGroupId"`
	// The resource name.
	Name *string `pulumi:"name"`
	// A filter to return resources that may partially match the name given.
	NameContains *string `pulumi:"nameContains"`
	// The name of the module stream. This parameter is required if a profile name is specified.
	StreamName *string `pulumi:"streamName"`
}

// A collection of values returned by getManagedInstanceGroupModules.
type GetManagedInstanceGroupModulesResult struct {
	CompartmentId *string                                `pulumi:"compartmentId"`
	Filters       []GetManagedInstanceGroupModulesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                     string `pulumi:"id"`
	ManagedInstanceGroupId string `pulumi:"managedInstanceGroupId"`
	// The list of managed_instance_group_module_collection.
	ManagedInstanceGroupModuleCollections []GetManagedInstanceGroupModulesManagedInstanceGroupModuleCollection `pulumi:"managedInstanceGroupModuleCollections"`
	// The name of the module.
	Name         *string `pulumi:"name"`
	NameContains *string `pulumi:"nameContains"`
	StreamName   *string `pulumi:"streamName"`
}

func GetManagedInstanceGroupModulesOutput(ctx *pulumi.Context, args GetManagedInstanceGroupModulesOutputArgs, opts ...pulumi.InvokeOption) GetManagedInstanceGroupModulesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetManagedInstanceGroupModulesResult, error) {
			args := v.(GetManagedInstanceGroupModulesArgs)
			r, err := GetManagedInstanceGroupModules(ctx, &args, opts...)
			var s GetManagedInstanceGroupModulesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetManagedInstanceGroupModulesResultOutput)
}

// A collection of arguments for invoking getManagedInstanceGroupModules.
type GetManagedInstanceGroupModulesOutputArgs struct {
	// The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
	CompartmentId pulumi.StringPtrInput                          `pulumi:"compartmentId"`
	Filters       GetManagedInstanceGroupModulesFilterArrayInput `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
	ManagedInstanceGroupId pulumi.StringInput `pulumi:"managedInstanceGroupId"`
	// The resource name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A filter to return resources that may partially match the name given.
	NameContains pulumi.StringPtrInput `pulumi:"nameContains"`
	// The name of the module stream. This parameter is required if a profile name is specified.
	StreamName pulumi.StringPtrInput `pulumi:"streamName"`
}

func (GetManagedInstanceGroupModulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupModulesArgs)(nil)).Elem()
}

// A collection of values returned by getManagedInstanceGroupModules.
type GetManagedInstanceGroupModulesResultOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupModulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupModulesResult)(nil)).Elem()
}

func (o GetManagedInstanceGroupModulesResultOutput) ToGetManagedInstanceGroupModulesResultOutput() GetManagedInstanceGroupModulesResultOutput {
	return o
}

func (o GetManagedInstanceGroupModulesResultOutput) ToGetManagedInstanceGroupModulesResultOutputWithContext(ctx context.Context) GetManagedInstanceGroupModulesResultOutput {
	return o
}

func (o GetManagedInstanceGroupModulesResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupModulesResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

func (o GetManagedInstanceGroupModulesResultOutput) Filters() GetManagedInstanceGroupModulesFilterArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupModulesResult) []GetManagedInstanceGroupModulesFilter { return v.Filters }).(GetManagedInstanceGroupModulesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagedInstanceGroupModulesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupModulesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetManagedInstanceGroupModulesResultOutput) ManagedInstanceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupModulesResult) string { return v.ManagedInstanceGroupId }).(pulumi.StringOutput)
}

// The list of managed_instance_group_module_collection.
func (o GetManagedInstanceGroupModulesResultOutput) ManagedInstanceGroupModuleCollections() GetManagedInstanceGroupModulesManagedInstanceGroupModuleCollectionArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupModulesResult) []GetManagedInstanceGroupModulesManagedInstanceGroupModuleCollection {
		return v.ManagedInstanceGroupModuleCollections
	}).(GetManagedInstanceGroupModulesManagedInstanceGroupModuleCollectionArrayOutput)
}

// The name of the module.
func (o GetManagedInstanceGroupModulesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupModulesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetManagedInstanceGroupModulesResultOutput) NameContains() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupModulesResult) *string { return v.NameContains }).(pulumi.StringPtrOutput)
}

func (o GetManagedInstanceGroupModulesResultOutput) StreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupModulesResult) *string { return v.StreamName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedInstanceGroupModulesResultOutput{})
}
