// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Managed Instance Installed Packages in Oracle Cloud Infrastructure Os Management Hub service.
//
// Lists the packages that are installed on the managed instance.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/OsManagementHub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := OsManagementHub.GetManagedInstanceInstalledPackages(ctx, &osmanagementhub.GetManagedInstanceInstalledPackagesArgs{
//				ManagedInstanceId:    testManagedInstance.Id,
//				CompartmentId:        pulumi.StringRef(compartmentId),
//				DisplayNames:         managedInstanceInstalledPackageDisplayName,
//				DisplayNameContains:  pulumi.StringRef(managedInstanceInstalledPackageDisplayNameContains),
//				TimeInstallDateEnd:   pulumi.StringRef(managedInstanceInstalledPackageTimeInstallDateEnd),
//				TimeInstallDateStart: pulumi.StringRef(managedInstanceInstalledPackageTimeInstallDateStart),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetManagedInstanceInstalledPackages(ctx *pulumi.Context, args *GetManagedInstanceInstalledPackagesArgs, opts ...pulumi.InvokeOption) (*GetManagedInstanceInstalledPackagesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetManagedInstanceInstalledPackagesResult
	err := ctx.Invoke("oci:OsManagementHub/getManagedInstanceInstalledPackages:getManagedInstanceInstalledPackages", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedInstanceInstalledPackages.
type GetManagedInstanceInstalledPackagesArgs struct {
	// The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// A filter to return resources that may partially match the given display name.
	DisplayNameContains *string `pulumi:"displayNameContains"`
	// A filter to return resources that match the given display names.
	DisplayNames []string                                    `pulumi:"displayNames"`
	Filters      []GetManagedInstanceInstalledPackagesFilter `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
	ManagedInstanceId string `pulumi:"managedInstanceId"`
	// A filter to return only packages that were installed on or before the date provided, in ISO 8601 format.  Example: 2017-07-14T02:40:00.000Z
	TimeInstallDateEnd *string `pulumi:"timeInstallDateEnd"`
	// The install date after which to list all packages, in ISO 8601 format  Example: 2017-07-14T02:40:00.000Z
	TimeInstallDateStart *string `pulumi:"timeInstallDateStart"`
}

// A collection of values returned by getManagedInstanceInstalledPackages.
type GetManagedInstanceInstalledPackagesResult struct {
	CompartmentId       *string `pulumi:"compartmentId"`
	DisplayNameContains *string `pulumi:"displayNameContains"`
	// Software source name.
	DisplayNames []string                                    `pulumi:"displayNames"`
	Filters      []GetManagedInstanceInstalledPackagesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of installed_package_collection.
	InstalledPackageCollections []GetManagedInstanceInstalledPackagesInstalledPackageCollection `pulumi:"installedPackageCollections"`
	ManagedInstanceId           string                                                          `pulumi:"managedInstanceId"`
	TimeInstallDateEnd          *string                                                         `pulumi:"timeInstallDateEnd"`
	TimeInstallDateStart        *string                                                         `pulumi:"timeInstallDateStart"`
}

func GetManagedInstanceInstalledPackagesOutput(ctx *pulumi.Context, args GetManagedInstanceInstalledPackagesOutputArgs, opts ...pulumi.InvokeOption) GetManagedInstanceInstalledPackagesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetManagedInstanceInstalledPackagesResultOutput, error) {
			args := v.(GetManagedInstanceInstalledPackagesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:OsManagementHub/getManagedInstanceInstalledPackages:getManagedInstanceInstalledPackages", args, GetManagedInstanceInstalledPackagesResultOutput{}, options).(GetManagedInstanceInstalledPackagesResultOutput), nil
		}).(GetManagedInstanceInstalledPackagesResultOutput)
}

// A collection of arguments for invoking getManagedInstanceInstalledPackages.
type GetManagedInstanceInstalledPackagesOutputArgs struct {
	// The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// A filter to return resources that may partially match the given display name.
	DisplayNameContains pulumi.StringPtrInput `pulumi:"displayNameContains"`
	// A filter to return resources that match the given display names.
	DisplayNames pulumi.StringArrayInput                             `pulumi:"displayNames"`
	Filters      GetManagedInstanceInstalledPackagesFilterArrayInput `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
	ManagedInstanceId pulumi.StringInput `pulumi:"managedInstanceId"`
	// A filter to return only packages that were installed on or before the date provided, in ISO 8601 format.  Example: 2017-07-14T02:40:00.000Z
	TimeInstallDateEnd pulumi.StringPtrInput `pulumi:"timeInstallDateEnd"`
	// The install date after which to list all packages, in ISO 8601 format  Example: 2017-07-14T02:40:00.000Z
	TimeInstallDateStart pulumi.StringPtrInput `pulumi:"timeInstallDateStart"`
}

func (GetManagedInstanceInstalledPackagesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceInstalledPackagesArgs)(nil)).Elem()
}

// A collection of values returned by getManagedInstanceInstalledPackages.
type GetManagedInstanceInstalledPackagesResultOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceInstalledPackagesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceInstalledPackagesResult)(nil)).Elem()
}

func (o GetManagedInstanceInstalledPackagesResultOutput) ToGetManagedInstanceInstalledPackagesResultOutput() GetManagedInstanceInstalledPackagesResultOutput {
	return o
}

func (o GetManagedInstanceInstalledPackagesResultOutput) ToGetManagedInstanceInstalledPackagesResultOutputWithContext(ctx context.Context) GetManagedInstanceInstalledPackagesResultOutput {
	return o
}

func (o GetManagedInstanceInstalledPackagesResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceInstalledPackagesResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

func (o GetManagedInstanceInstalledPackagesResultOutput) DisplayNameContains() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceInstalledPackagesResult) *string { return v.DisplayNameContains }).(pulumi.StringPtrOutput)
}

// Software source name.
func (o GetManagedInstanceInstalledPackagesResultOutput) DisplayNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceInstalledPackagesResult) []string { return v.DisplayNames }).(pulumi.StringArrayOutput)
}

func (o GetManagedInstanceInstalledPackagesResultOutput) Filters() GetManagedInstanceInstalledPackagesFilterArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceInstalledPackagesResult) []GetManagedInstanceInstalledPackagesFilter {
		return v.Filters
	}).(GetManagedInstanceInstalledPackagesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagedInstanceInstalledPackagesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceInstalledPackagesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of installed_package_collection.
func (o GetManagedInstanceInstalledPackagesResultOutput) InstalledPackageCollections() GetManagedInstanceInstalledPackagesInstalledPackageCollectionArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceInstalledPackagesResult) []GetManagedInstanceInstalledPackagesInstalledPackageCollection {
		return v.InstalledPackageCollections
	}).(GetManagedInstanceInstalledPackagesInstalledPackageCollectionArrayOutput)
}

func (o GetManagedInstanceInstalledPackagesResultOutput) ManagedInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceInstalledPackagesResult) string { return v.ManagedInstanceId }).(pulumi.StringOutput)
}

func (o GetManagedInstanceInstalledPackagesResultOutput) TimeInstallDateEnd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceInstalledPackagesResult) *string { return v.TimeInstallDateEnd }).(pulumi.StringPtrOutput)
}

func (o GetManagedInstanceInstalledPackagesResultOutput) TimeInstallDateStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceInstalledPackagesResult) *string { return v.TimeInstallDateStart }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedInstanceInstalledPackagesResultOutput{})
}
