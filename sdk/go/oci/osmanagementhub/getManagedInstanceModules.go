// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Managed Instance Modules in Oracle Cloud Infrastructure Os Management Hub service.
//
// Retrieves a list of modules, along with streams of the modules, from a managed instance. Filters may be applied to select a subset of modules based on the filter criteria.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/OsManagementHub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := OsManagementHub.GetManagedInstanceModules(ctx, &osmanagementhub.GetManagedInstanceModulesArgs{
//				ManagedInstanceId: testManagedInstance.Id,
//				CompartmentId:     pulumi.StringRef(compartmentId),
//				Name:              pulumi.StringRef(managedInstanceModuleName),
//				NameContains:      pulumi.StringRef(managedInstanceModuleNameContains),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetManagedInstanceModules(ctx *pulumi.Context, args *GetManagedInstanceModulesArgs, opts ...pulumi.InvokeOption) (*GetManagedInstanceModulesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetManagedInstanceModulesResult
	err := ctx.Invoke("oci:OsManagementHub/getManagedInstanceModules:getManagedInstanceModules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedInstanceModules.
type GetManagedInstanceModulesArgs struct {
	// The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
	CompartmentId *string                           `pulumi:"compartmentId"`
	Filters       []GetManagedInstanceModulesFilter `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
	ManagedInstanceId string `pulumi:"managedInstanceId"`
	// The resource name.
	Name *string `pulumi:"name"`
	// A filter to return resources that may partially match the name given.
	NameContains *string `pulumi:"nameContains"`
}

// A collection of values returned by getManagedInstanceModules.
type GetManagedInstanceModulesResult struct {
	CompartmentId *string                           `pulumi:"compartmentId"`
	Filters       []GetManagedInstanceModulesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                string `pulumi:"id"`
	ManagedInstanceId string `pulumi:"managedInstanceId"`
	// The list of managed_instance_module_collection.
	ManagedInstanceModuleCollections []GetManagedInstanceModulesManagedInstanceModuleCollection `pulumi:"managedInstanceModuleCollections"`
	// The module name.
	Name         *string `pulumi:"name"`
	NameContains *string `pulumi:"nameContains"`
}

func GetManagedInstanceModulesOutput(ctx *pulumi.Context, args GetManagedInstanceModulesOutputArgs, opts ...pulumi.InvokeOption) GetManagedInstanceModulesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetManagedInstanceModulesResultOutput, error) {
			args := v.(GetManagedInstanceModulesArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetManagedInstanceModulesResult
			secret, err := ctx.InvokePackageRaw("oci:OsManagementHub/getManagedInstanceModules:getManagedInstanceModules", args, &rv, "", opts...)
			if err != nil {
				return GetManagedInstanceModulesResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetManagedInstanceModulesResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetManagedInstanceModulesResultOutput), nil
			}
			return output, nil
		}).(GetManagedInstanceModulesResultOutput)
}

// A collection of arguments for invoking getManagedInstanceModules.
type GetManagedInstanceModulesOutputArgs struct {
	// The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
	CompartmentId pulumi.StringPtrInput                     `pulumi:"compartmentId"`
	Filters       GetManagedInstanceModulesFilterArrayInput `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
	ManagedInstanceId pulumi.StringInput `pulumi:"managedInstanceId"`
	// The resource name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A filter to return resources that may partially match the name given.
	NameContains pulumi.StringPtrInput `pulumi:"nameContains"`
}

func (GetManagedInstanceModulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceModulesArgs)(nil)).Elem()
}

// A collection of values returned by getManagedInstanceModules.
type GetManagedInstanceModulesResultOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceModulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceModulesResult)(nil)).Elem()
}

func (o GetManagedInstanceModulesResultOutput) ToGetManagedInstanceModulesResultOutput() GetManagedInstanceModulesResultOutput {
	return o
}

func (o GetManagedInstanceModulesResultOutput) ToGetManagedInstanceModulesResultOutputWithContext(ctx context.Context) GetManagedInstanceModulesResultOutput {
	return o
}

func (o GetManagedInstanceModulesResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceModulesResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

func (o GetManagedInstanceModulesResultOutput) Filters() GetManagedInstanceModulesFilterArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceModulesResult) []GetManagedInstanceModulesFilter { return v.Filters }).(GetManagedInstanceModulesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagedInstanceModulesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceModulesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetManagedInstanceModulesResultOutput) ManagedInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceModulesResult) string { return v.ManagedInstanceId }).(pulumi.StringOutput)
}

// The list of managed_instance_module_collection.
func (o GetManagedInstanceModulesResultOutput) ManagedInstanceModuleCollections() GetManagedInstanceModulesManagedInstanceModuleCollectionArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceModulesResult) []GetManagedInstanceModulesManagedInstanceModuleCollection {
		return v.ManagedInstanceModuleCollections
	}).(GetManagedInstanceModulesManagedInstanceModuleCollectionArrayOutput)
}

// The module name.
func (o GetManagedInstanceModulesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceModulesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetManagedInstanceModulesResultOutput) NameContains() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceModulesResult) *string { return v.NameContains }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedInstanceModulesResultOutput{})
}
