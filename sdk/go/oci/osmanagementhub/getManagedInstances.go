// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Managed Instances in Oracle Cloud Infrastructure Os Management Hub service.
//
// Lists managed instances that match the specified compartment or managed instance OCID. Filter the list against a variety of criteria including but not limited to its name, status, architecture, and OS version.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/osmanagementhub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := osmanagementhub.GetManagedInstances(ctx, &osmanagementhub.GetManagedInstancesArgs{
//				AdvisoryNames:                     managedInstanceAdvisoryName,
//				ArchTypes:                         managedInstanceArchType,
//				CompartmentId:                     pulumi.StringRef(compartmentId),
//				DisplayNames:                      managedInstanceDisplayName,
//				DisplayNameContains:               pulumi.StringRef(managedInstanceDisplayNameContains),
//				Group:                             pulumi.StringRef(managedInstanceGroup),
//				GroupNotEqualTo:                   pulumi.StringRef(managedInstanceGroupNotEqualTo),
//				IsAttachedToGroupOrLifecycleStage: pulumi.BoolRef(managedInstanceIsAttachedToGroupOrLifecycleStage),
//				IsManagedByAutonomousLinux:        pulumi.BoolRef(managedInstanceIsManagedByAutonomousLinux),
//				IsManagementStation:               pulumi.BoolRef(managedInstanceIsManagementStation),
//				IsProfileAttached:                 pulumi.BoolRef(managedInstanceIsProfileAttached),
//				LifecycleEnvironment:              pulumi.StringRef(managedInstanceLifecycleEnvironment),
//				LifecycleEnvironmentNotEqualTo:    pulumi.StringRef(managedInstanceLifecycleEnvironmentNotEqualTo),
//				LifecycleStage:                    pulumi.StringRef(managedInstanceLifecycleStage),
//				LifecycleStageNotEqualTo:          pulumi.StringRef(managedInstanceLifecycleStageNotEqualTo),
//				Locations:                         managedInstanceLocation,
//				LocationNotEqualTos:               managedInstanceLocationNotEqualTo,
//				ManagedInstanceId:                 pulumi.StringRef(testManagedInstance.Id),
//				OsFamilies:                        managedInstanceOsFamily,
//				Profiles:                          managedInstanceProfile,
//				ProfileNotEqualTos:                managedInstanceProfileNotEqualTo,
//				SoftwareSourceId:                  pulumi.StringRef(testSoftwareSource.Id),
//				Statuses:                          managedInstanceStatus,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetManagedInstances(ctx *pulumi.Context, args *GetManagedInstancesArgs, opts ...pulumi.InvokeOption) (*GetManagedInstancesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetManagedInstancesResult
	err := ctx.Invoke("oci:OsManagementHub/getManagedInstances:getManagedInstances", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedInstances.
type GetManagedInstancesArgs struct {
	// The assigned erratum name. It's unique and not changeable.  Example: `ELSA-2020-5804`
	AdvisoryNames []string `pulumi:"advisoryNames"`
	// A filter to return only instances whose architecture type matches the given architecture.
	ArchTypes []string `pulumi:"archTypes"`
	// The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// A filter to return resources that may partially match the given display name.
	DisplayNameContains *string `pulumi:"displayNameContains"`
	// A filter to return resources that match the given display names.
	DisplayNames []string                    `pulumi:"displayNames"`
	Filters      []GetManagedInstancesFilter `pulumi:"filters"`
	// A filter to return only managed instances that are attached to the specified group.
	Group *string `pulumi:"group"`
	// A filter to return only managed instances that are NOT attached to the specified group.
	GroupNotEqualTo *string `pulumi:"groupNotEqualTo"`
	// A filter to return only managed instances that are attached to the specified group or lifecycle environment.
	IsAttachedToGroupOrLifecycleStage *bool `pulumi:"isAttachedToGroupOrLifecycleStage"`
	// Indicates whether to list only resources managed by the Autonomous Linux service.
	IsManagedByAutonomousLinux *bool `pulumi:"isManagedByAutonomousLinux"`
	// A filter to return only managed instances that are acting as management stations.
	IsManagementStation *bool `pulumi:"isManagementStation"`
	// A filter to return only managed instances with a registration profile attached.
	IsProfileAttached *bool `pulumi:"isProfileAttached"`
	// A filter to return only managed instances in a specific lifecycle environment.
	LifecycleEnvironment *string `pulumi:"lifecycleEnvironment"`
	// A filter to return only managed instances that aren't in a specific lifecycle environment.
	LifecycleEnvironmentNotEqualTo *string `pulumi:"lifecycleEnvironmentNotEqualTo"`
	// A filter to return only managed instances that are associated with the specified lifecycle environment.
	LifecycleStage *string `pulumi:"lifecycleStage"`
	// A filter to return only managed instances that are NOT associated with the specified lifecycle environment.
	LifecycleStageNotEqualTo *string `pulumi:"lifecycleStageNotEqualTo"`
	// A filter to return only resources whose location does not match the given value.
	LocationNotEqualTos []string `pulumi:"locationNotEqualTos"`
	// A filter to return only resources whose location matches the given value.
	Locations []string `pulumi:"locations"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance. This filter returns resources associated with this managed instance.
	ManagedInstanceId *string `pulumi:"managedInstanceId"`
	// A filter to return only resources that match the given operating system family.
	OsFamilies []string `pulumi:"osFamilies"`
	// A multi filter to return only managed instances that don't contain the given profile [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ProfileNotEqualTos []string `pulumi:"profileNotEqualTos"`
	// A multi filter to return only managed instances that match the given profile ids.
	Profiles []string `pulumi:"profiles"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source. This filter returns resources associated with this software source.
	SoftwareSourceId *string `pulumi:"softwareSourceId"`
	// A filter to return only managed instances whose status matches the status provided.
	Statuses []string `pulumi:"statuses"`
}

// A collection of values returned by getManagedInstances.
type GetManagedInstancesResult struct {
	AdvisoryNames []string `pulumi:"advisoryNames"`
	ArchTypes     []string `pulumi:"archTypes"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the managed instance.
	CompartmentId       *string `pulumi:"compartmentId"`
	DisplayNameContains *string `pulumi:"displayNameContains"`
	// Software source name.
	DisplayNames    []string                    `pulumi:"displayNames"`
	Filters         []GetManagedInstancesFilter `pulumi:"filters"`
	Group           *string                     `pulumi:"group"`
	GroupNotEqualTo *string                     `pulumi:"groupNotEqualTo"`
	// The provider-assigned unique ID for this managed resource.
	Id                                string `pulumi:"id"`
	IsAttachedToGroupOrLifecycleStage *bool  `pulumi:"isAttachedToGroupOrLifecycleStage"`
	// Indicates whether the Autonomous Linux service manages the instance.
	IsManagedByAutonomousLinux *bool `pulumi:"isManagedByAutonomousLinux"`
	// Indicates whether this managed instance is acting as an on-premises management station.
	IsManagementStation *bool `pulumi:"isManagementStation"`
	IsProfileAttached   *bool `pulumi:"isProfileAttached"`
	// Id and name of a resource to simplify the display for the user.
	LifecycleEnvironment           *string `pulumi:"lifecycleEnvironment"`
	LifecycleEnvironmentNotEqualTo *string `pulumi:"lifecycleEnvironmentNotEqualTo"`
	// Id and name of a resource to simplify the display for the user.
	LifecycleStage           *string  `pulumi:"lifecycleStage"`
	LifecycleStageNotEqualTo *string  `pulumi:"lifecycleStageNotEqualTo"`
	LocationNotEqualTos      []string `pulumi:"locationNotEqualTos"`
	// The location of the managed instance.
	Locations []string `pulumi:"locations"`
	// The list of managed_instance_collection.
	ManagedInstanceCollections []GetManagedInstancesManagedInstanceCollection `pulumi:"managedInstanceCollections"`
	ManagedInstanceId          *string                                        `pulumi:"managedInstanceId"`
	// The operating system type of the managed instance.
	OsFamilies         []string `pulumi:"osFamilies"`
	ProfileNotEqualTos []string `pulumi:"profileNotEqualTos"`
	// The profile that was used to register this instance with the service.
	Profiles         []string `pulumi:"profiles"`
	SoftwareSourceId *string  `pulumi:"softwareSourceId"`
	// Current status of the managed instance.
	Statuses []string `pulumi:"statuses"`
}

func GetManagedInstancesOutput(ctx *pulumi.Context, args GetManagedInstancesOutputArgs, opts ...pulumi.InvokeOption) GetManagedInstancesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetManagedInstancesResultOutput, error) {
			args := v.(GetManagedInstancesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:OsManagementHub/getManagedInstances:getManagedInstances", args, GetManagedInstancesResultOutput{}, options).(GetManagedInstancesResultOutput), nil
		}).(GetManagedInstancesResultOutput)
}

// A collection of arguments for invoking getManagedInstances.
type GetManagedInstancesOutputArgs struct {
	// The assigned erratum name. It's unique and not changeable.  Example: `ELSA-2020-5804`
	AdvisoryNames pulumi.StringArrayInput `pulumi:"advisoryNames"`
	// A filter to return only instances whose architecture type matches the given architecture.
	ArchTypes pulumi.StringArrayInput `pulumi:"archTypes"`
	// The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// A filter to return resources that may partially match the given display name.
	DisplayNameContains pulumi.StringPtrInput `pulumi:"displayNameContains"`
	// A filter to return resources that match the given display names.
	DisplayNames pulumi.StringArrayInput             `pulumi:"displayNames"`
	Filters      GetManagedInstancesFilterArrayInput `pulumi:"filters"`
	// A filter to return only managed instances that are attached to the specified group.
	Group pulumi.StringPtrInput `pulumi:"group"`
	// A filter to return only managed instances that are NOT attached to the specified group.
	GroupNotEqualTo pulumi.StringPtrInput `pulumi:"groupNotEqualTo"`
	// A filter to return only managed instances that are attached to the specified group or lifecycle environment.
	IsAttachedToGroupOrLifecycleStage pulumi.BoolPtrInput `pulumi:"isAttachedToGroupOrLifecycleStage"`
	// Indicates whether to list only resources managed by the Autonomous Linux service.
	IsManagedByAutonomousLinux pulumi.BoolPtrInput `pulumi:"isManagedByAutonomousLinux"`
	// A filter to return only managed instances that are acting as management stations.
	IsManagementStation pulumi.BoolPtrInput `pulumi:"isManagementStation"`
	// A filter to return only managed instances with a registration profile attached.
	IsProfileAttached pulumi.BoolPtrInput `pulumi:"isProfileAttached"`
	// A filter to return only managed instances in a specific lifecycle environment.
	LifecycleEnvironment pulumi.StringPtrInput `pulumi:"lifecycleEnvironment"`
	// A filter to return only managed instances that aren't in a specific lifecycle environment.
	LifecycleEnvironmentNotEqualTo pulumi.StringPtrInput `pulumi:"lifecycleEnvironmentNotEqualTo"`
	// A filter to return only managed instances that are associated with the specified lifecycle environment.
	LifecycleStage pulumi.StringPtrInput `pulumi:"lifecycleStage"`
	// A filter to return only managed instances that are NOT associated with the specified lifecycle environment.
	LifecycleStageNotEqualTo pulumi.StringPtrInput `pulumi:"lifecycleStageNotEqualTo"`
	// A filter to return only resources whose location does not match the given value.
	LocationNotEqualTos pulumi.StringArrayInput `pulumi:"locationNotEqualTos"`
	// A filter to return only resources whose location matches the given value.
	Locations pulumi.StringArrayInput `pulumi:"locations"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance. This filter returns resources associated with this managed instance.
	ManagedInstanceId pulumi.StringPtrInput `pulumi:"managedInstanceId"`
	// A filter to return only resources that match the given operating system family.
	OsFamilies pulumi.StringArrayInput `pulumi:"osFamilies"`
	// A multi filter to return only managed instances that don't contain the given profile [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ProfileNotEqualTos pulumi.StringArrayInput `pulumi:"profileNotEqualTos"`
	// A multi filter to return only managed instances that match the given profile ids.
	Profiles pulumi.StringArrayInput `pulumi:"profiles"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source. This filter returns resources associated with this software source.
	SoftwareSourceId pulumi.StringPtrInput `pulumi:"softwareSourceId"`
	// A filter to return only managed instances whose status matches the status provided.
	Statuses pulumi.StringArrayInput `pulumi:"statuses"`
}

func (GetManagedInstancesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstancesArgs)(nil)).Elem()
}

// A collection of values returned by getManagedInstances.
type GetManagedInstancesResultOutput struct{ *pulumi.OutputState }

func (GetManagedInstancesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstancesResult)(nil)).Elem()
}

func (o GetManagedInstancesResultOutput) ToGetManagedInstancesResultOutput() GetManagedInstancesResultOutput {
	return o
}

func (o GetManagedInstancesResultOutput) ToGetManagedInstancesResultOutputWithContext(ctx context.Context) GetManagedInstancesResultOutput {
	return o
}

func (o GetManagedInstancesResultOutput) AdvisoryNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagedInstancesResult) []string { return v.AdvisoryNames }).(pulumi.StringArrayOutput)
}

func (o GetManagedInstancesResultOutput) ArchTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagedInstancesResult) []string { return v.ArchTypes }).(pulumi.StringArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the managed instance.
func (o GetManagedInstancesResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstancesResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

func (o GetManagedInstancesResultOutput) DisplayNameContains() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstancesResult) *string { return v.DisplayNameContains }).(pulumi.StringPtrOutput)
}

// Software source name.
func (o GetManagedInstancesResultOutput) DisplayNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagedInstancesResult) []string { return v.DisplayNames }).(pulumi.StringArrayOutput)
}

func (o GetManagedInstancesResultOutput) Filters() GetManagedInstancesFilterArrayOutput {
	return o.ApplyT(func(v GetManagedInstancesResult) []GetManagedInstancesFilter { return v.Filters }).(GetManagedInstancesFilterArrayOutput)
}

func (o GetManagedInstancesResultOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstancesResult) *string { return v.Group }).(pulumi.StringPtrOutput)
}

func (o GetManagedInstancesResultOutput) GroupNotEqualTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstancesResult) *string { return v.GroupNotEqualTo }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagedInstancesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstancesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetManagedInstancesResultOutput) IsAttachedToGroupOrLifecycleStage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetManagedInstancesResult) *bool { return v.IsAttachedToGroupOrLifecycleStage }).(pulumi.BoolPtrOutput)
}

// Indicates whether the Autonomous Linux service manages the instance.
func (o GetManagedInstancesResultOutput) IsManagedByAutonomousLinux() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetManagedInstancesResult) *bool { return v.IsManagedByAutonomousLinux }).(pulumi.BoolPtrOutput)
}

// Indicates whether this managed instance is acting as an on-premises management station.
func (o GetManagedInstancesResultOutput) IsManagementStation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetManagedInstancesResult) *bool { return v.IsManagementStation }).(pulumi.BoolPtrOutput)
}

func (o GetManagedInstancesResultOutput) IsProfileAttached() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetManagedInstancesResult) *bool { return v.IsProfileAttached }).(pulumi.BoolPtrOutput)
}

// Id and name of a resource to simplify the display for the user.
func (o GetManagedInstancesResultOutput) LifecycleEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstancesResult) *string { return v.LifecycleEnvironment }).(pulumi.StringPtrOutput)
}

func (o GetManagedInstancesResultOutput) LifecycleEnvironmentNotEqualTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstancesResult) *string { return v.LifecycleEnvironmentNotEqualTo }).(pulumi.StringPtrOutput)
}

// Id and name of a resource to simplify the display for the user.
func (o GetManagedInstancesResultOutput) LifecycleStage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstancesResult) *string { return v.LifecycleStage }).(pulumi.StringPtrOutput)
}

func (o GetManagedInstancesResultOutput) LifecycleStageNotEqualTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstancesResult) *string { return v.LifecycleStageNotEqualTo }).(pulumi.StringPtrOutput)
}

func (o GetManagedInstancesResultOutput) LocationNotEqualTos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagedInstancesResult) []string { return v.LocationNotEqualTos }).(pulumi.StringArrayOutput)
}

// The location of the managed instance.
func (o GetManagedInstancesResultOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagedInstancesResult) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// The list of managed_instance_collection.
func (o GetManagedInstancesResultOutput) ManagedInstanceCollections() GetManagedInstancesManagedInstanceCollectionArrayOutput {
	return o.ApplyT(func(v GetManagedInstancesResult) []GetManagedInstancesManagedInstanceCollection {
		return v.ManagedInstanceCollections
	}).(GetManagedInstancesManagedInstanceCollectionArrayOutput)
}

func (o GetManagedInstancesResultOutput) ManagedInstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstancesResult) *string { return v.ManagedInstanceId }).(pulumi.StringPtrOutput)
}

// The operating system type of the managed instance.
func (o GetManagedInstancesResultOutput) OsFamilies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagedInstancesResult) []string { return v.OsFamilies }).(pulumi.StringArrayOutput)
}

func (o GetManagedInstancesResultOutput) ProfileNotEqualTos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagedInstancesResult) []string { return v.ProfileNotEqualTos }).(pulumi.StringArrayOutput)
}

// The profile that was used to register this instance with the service.
func (o GetManagedInstancesResultOutput) Profiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagedInstancesResult) []string { return v.Profiles }).(pulumi.StringArrayOutput)
}

func (o GetManagedInstancesResultOutput) SoftwareSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstancesResult) *string { return v.SoftwareSourceId }).(pulumi.StringPtrOutput)
}

// Current status of the managed instance.
func (o GetManagedInstancesResultOutput) Statuses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagedInstancesResult) []string { return v.Statuses }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedInstancesResultOutput{})
}
