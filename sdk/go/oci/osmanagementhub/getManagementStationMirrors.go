// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Management Station Mirrors in Oracle Cloud Infrastructure Os Management Hub service.
//
// Lists all software source mirrors associated with a specified management station.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/OsManagementHub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := OsManagementHub.GetManagementStationMirrors(ctx, &osmanagementhub.GetManagementStationMirrorsArgs{
//				ManagementStationId: testManagementStation.Id,
//				DisplayName:         pulumi.StringRef(managementStationMirrorDisplayName),
//				DisplayNameContains: pulumi.StringRef(managementStationMirrorDisplayNameContains),
//				MirrorStates:        managementStationMirrorMirrorStates,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetManagementStationMirrors(ctx *pulumi.Context, args *GetManagementStationMirrorsArgs, opts ...pulumi.InvokeOption) (*GetManagementStationMirrorsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetManagementStationMirrorsResult
	err := ctx.Invoke("oci:OsManagementHub/getManagementStationMirrors:getManagementStationMirrors", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagementStationMirrors.
type GetManagementStationMirrorsArgs struct {
	// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName *string `pulumi:"displayName"`
	// A filter to return resources that may partially match the given display name.
	DisplayNameContains *string                             `pulumi:"displayNameContains"`
	Filters             []GetManagementStationMirrorsFilter `pulumi:"filters"`
	// The OCID of the management station.
	ManagementStationId string `pulumi:"managementStationId"`
	// List of Mirror state to filter by
	MirrorStates []string `pulumi:"mirrorStates"`
}

// A collection of values returned by getManagementStationMirrors.
type GetManagementStationMirrorsResult struct {
	// Display name of the mirror
	DisplayName         *string                             `pulumi:"displayName"`
	DisplayNameContains *string                             `pulumi:"displayNameContains"`
	Filters             []GetManagementStationMirrorsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                  string   `pulumi:"id"`
	ManagementStationId string   `pulumi:"managementStationId"`
	MirrorStates        []string `pulumi:"mirrorStates"`
	// The list of mirrors_collection.
	MirrorsCollections []GetManagementStationMirrorsMirrorsCollection `pulumi:"mirrorsCollections"`
}

func GetManagementStationMirrorsOutput(ctx *pulumi.Context, args GetManagementStationMirrorsOutputArgs, opts ...pulumi.InvokeOption) GetManagementStationMirrorsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetManagementStationMirrorsResult, error) {
			args := v.(GetManagementStationMirrorsArgs)
			r, err := GetManagementStationMirrors(ctx, &args, opts...)
			var s GetManagementStationMirrorsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetManagementStationMirrorsResultOutput)
}

// A collection of arguments for invoking getManagementStationMirrors.
type GetManagementStationMirrorsOutputArgs struct {
	// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// A filter to return resources that may partially match the given display name.
	DisplayNameContains pulumi.StringPtrInput                       `pulumi:"displayNameContains"`
	Filters             GetManagementStationMirrorsFilterArrayInput `pulumi:"filters"`
	// The OCID of the management station.
	ManagementStationId pulumi.StringInput `pulumi:"managementStationId"`
	// List of Mirror state to filter by
	MirrorStates pulumi.StringArrayInput `pulumi:"mirrorStates"`
}

func (GetManagementStationMirrorsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementStationMirrorsArgs)(nil)).Elem()
}

// A collection of values returned by getManagementStationMirrors.
type GetManagementStationMirrorsResultOutput struct{ *pulumi.OutputState }

func (GetManagementStationMirrorsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementStationMirrorsResult)(nil)).Elem()
}

func (o GetManagementStationMirrorsResultOutput) ToGetManagementStationMirrorsResultOutput() GetManagementStationMirrorsResultOutput {
	return o
}

func (o GetManagementStationMirrorsResultOutput) ToGetManagementStationMirrorsResultOutputWithContext(ctx context.Context) GetManagementStationMirrorsResultOutput {
	return o
}

// Display name of the mirror
func (o GetManagementStationMirrorsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementStationMirrorsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetManagementStationMirrorsResultOutput) DisplayNameContains() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementStationMirrorsResult) *string { return v.DisplayNameContains }).(pulumi.StringPtrOutput)
}

func (o GetManagementStationMirrorsResultOutput) Filters() GetManagementStationMirrorsFilterArrayOutput {
	return o.ApplyT(func(v GetManagementStationMirrorsResult) []GetManagementStationMirrorsFilter { return v.Filters }).(GetManagementStationMirrorsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagementStationMirrorsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagementStationMirrorsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetManagementStationMirrorsResultOutput) ManagementStationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagementStationMirrorsResult) string { return v.ManagementStationId }).(pulumi.StringOutput)
}

func (o GetManagementStationMirrorsResultOutput) MirrorStates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagementStationMirrorsResult) []string { return v.MirrorStates }).(pulumi.StringArrayOutput)
}

// The list of mirrors_collection.
func (o GetManagementStationMirrorsResultOutput) MirrorsCollections() GetManagementStationMirrorsMirrorsCollectionArrayOutput {
	return o.ApplyT(func(v GetManagementStationMirrorsResult) []GetManagementStationMirrorsMirrorsCollection {
		return v.MirrorsCollections
	}).(GetManagementStationMirrorsMirrorsCollectionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagementStationMirrorsResultOutput{})
}
