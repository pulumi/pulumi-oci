// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides details about a specific Profile resource in Oracle Cloud Infrastructure Os Management Hub service.
//
// Gets information about the specified registration profile.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/OsManagementHub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := OsManagementHub.GetProfile(ctx, &osmanagementhub.GetProfileArgs{
//				ProfileId: oci_os_management_hub_profile.Test_profile.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupProfile(ctx *pulumi.Context, args *LookupProfileArgs, opts ...pulumi.InvokeOption) (*LookupProfileResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupProfileResult
	err := ctx.Invoke("oci:OsManagementHub/getProfile:getProfile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProfile.
type LookupProfileArgs struct {
	// The OCID of the registration profile.
	ProfileId string `pulumi:"profileId"`
}

// A collection of values returned by getProfile.
type LookupProfileResult struct {
	// The architecture type.
	ArchType string `pulumi:"archType"`
	// The OCID of the tenancy containing the registration profile.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Software source description.
	Description string `pulumi:"description"`
	// Software source name.
	DisplayName string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the software source.
	Id string `pulumi:"id"`
	// Identifying information for the specified lifecycle environment.
	LifecycleEnvironments []GetProfileLifecycleEnvironment `pulumi:"lifecycleEnvironments"`
	LifecycleStageId      string                           `pulumi:"lifecycleStageId"`
	// Identifying information for the specified lifecycle stage.
	LifecycleStages        []GetProfileLifecycleStage `pulumi:"lifecycleStages"`
	ManagedInstanceGroupId string                     `pulumi:"managedInstanceGroupId"`
	// Identifying information for the specified managed instance group.
	ManagedInstanceGroups []GetProfileManagedInstanceGroup `pulumi:"managedInstanceGroups"`
	// The OCID of the management station.
	ManagementStationId string `pulumi:"managementStationId"`
	// The operating system family.
	OsFamily  string `pulumi:"osFamily"`
	ProfileId string `pulumi:"profileId"`
	// The type of Profile. One of SOFTWARESOURCE, GROUP or LIFECYCLE.
	ProfileType       string   `pulumi:"profileType"`
	SoftwareSourceIds []string `pulumi:"softwareSourceIds"`
	// The list of software sources that the registration profile will use.
	SoftwareSources []GetProfileSoftwareSource `pulumi:"softwareSources"`
	// The current state of the registration profile.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the the registration profile was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The software source vendor name.
	VendorName string `pulumi:"vendorName"`
}

func LookupProfileOutput(ctx *pulumi.Context, args LookupProfileOutputArgs, opts ...pulumi.InvokeOption) LookupProfileResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupProfileResult, error) {
			args := v.(LookupProfileArgs)
			r, err := LookupProfile(ctx, &args, opts...)
			var s LookupProfileResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupProfileResultOutput)
}

// A collection of arguments for invoking getProfile.
type LookupProfileOutputArgs struct {
	// The OCID of the registration profile.
	ProfileId pulumi.StringInput `pulumi:"profileId"`
}

func (LookupProfileOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProfileArgs)(nil)).Elem()
}

// A collection of values returned by getProfile.
type LookupProfileResultOutput struct{ *pulumi.OutputState }

func (LookupProfileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProfileResult)(nil)).Elem()
}

func (o LookupProfileResultOutput) ToLookupProfileResultOutput() LookupProfileResultOutput {
	return o
}

func (o LookupProfileResultOutput) ToLookupProfileResultOutputWithContext(ctx context.Context) LookupProfileResultOutput {
	return o
}

func (o LookupProfileResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupProfileResult] {
	return pulumix.Output[LookupProfileResult]{
		OutputState: o.OutputState,
	}
}

// The architecture type.
func (o LookupProfileResultOutput) ArchType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.ArchType }).(pulumi.StringOutput)
}

// The OCID of the tenancy containing the registration profile.
func (o LookupProfileResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o LookupProfileResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupProfileResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// Software source description.
func (o LookupProfileResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.Description }).(pulumi.StringOutput)
}

// Software source name.
func (o LookupProfileResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o LookupProfileResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupProfileResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The OCID of the software source.
func (o LookupProfileResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.Id }).(pulumi.StringOutput)
}

// Identifying information for the specified lifecycle environment.
func (o LookupProfileResultOutput) LifecycleEnvironments() GetProfileLifecycleEnvironmentArrayOutput {
	return o.ApplyT(func(v LookupProfileResult) []GetProfileLifecycleEnvironment { return v.LifecycleEnvironments }).(GetProfileLifecycleEnvironmentArrayOutput)
}

func (o LookupProfileResultOutput) LifecycleStageId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.LifecycleStageId }).(pulumi.StringOutput)
}

// Identifying information for the specified lifecycle stage.
func (o LookupProfileResultOutput) LifecycleStages() GetProfileLifecycleStageArrayOutput {
	return o.ApplyT(func(v LookupProfileResult) []GetProfileLifecycleStage { return v.LifecycleStages }).(GetProfileLifecycleStageArrayOutput)
}

func (o LookupProfileResultOutput) ManagedInstanceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.ManagedInstanceGroupId }).(pulumi.StringOutput)
}

// Identifying information for the specified managed instance group.
func (o LookupProfileResultOutput) ManagedInstanceGroups() GetProfileManagedInstanceGroupArrayOutput {
	return o.ApplyT(func(v LookupProfileResult) []GetProfileManagedInstanceGroup { return v.ManagedInstanceGroups }).(GetProfileManagedInstanceGroupArrayOutput)
}

// The OCID of the management station.
func (o LookupProfileResultOutput) ManagementStationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.ManagementStationId }).(pulumi.StringOutput)
}

// The operating system family.
func (o LookupProfileResultOutput) OsFamily() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.OsFamily }).(pulumi.StringOutput)
}

func (o LookupProfileResultOutput) ProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.ProfileId }).(pulumi.StringOutput)
}

// The type of Profile. One of SOFTWARESOURCE, GROUP or LIFECYCLE.
func (o LookupProfileResultOutput) ProfileType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.ProfileType }).(pulumi.StringOutput)
}

func (o LookupProfileResultOutput) SoftwareSourceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupProfileResult) []string { return v.SoftwareSourceIds }).(pulumi.StringArrayOutput)
}

// The list of software sources that the registration profile will use.
func (o LookupProfileResultOutput) SoftwareSources() GetProfileSoftwareSourceArrayOutput {
	return o.ApplyT(func(v LookupProfileResult) []GetProfileSoftwareSource { return v.SoftwareSources }).(GetProfileSoftwareSourceArrayOutput)
}

// The current state of the registration profile.
func (o LookupProfileResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupProfileResultOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupProfileResult) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The time the the registration profile was created. An RFC3339 formatted datetime string.
func (o LookupProfileResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The software source vendor name.
func (o LookupProfileResultOutput) VendorName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.VendorName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProfileResultOutput{})
}
