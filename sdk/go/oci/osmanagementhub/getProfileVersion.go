// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Profile Version resource in Oracle Cloud Infrastructure Os Management Hub service.
//
// Returns information about the version of the specified registration profile.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/osmanagementhub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := osmanagementhub.GetProfileVersion(ctx, &osmanagementhub.GetProfileVersionArgs{
//				ProfileId:      testProfile.Id,
//				ProfileVersion: profileVersionProfileVersion,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetProfileVersion(ctx *pulumi.Context, args *GetProfileVersionArgs, opts ...pulumi.InvokeOption) (*GetProfileVersionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetProfileVersionResult
	err := ctx.Invoke("oci:OsManagementHub/getProfileVersion:getProfileVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProfileVersion.
type GetProfileVersionArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the registration profile.
	ProfileId string `pulumi:"profileId"`
	// The version of the registration profile.
	ProfileVersion string `pulumi:"profileVersion"`
}

// A collection of values returned by getProfileVersion.
type GetProfileVersionResult struct {
	// The architecture type.
	ArchType string `pulumi:"archType"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the registration profile.
	CompartmentId string `pulumi:"compartmentId"`
	// Software source description.
	Description string `pulumi:"description"`
	// Software source name.
	DisplayName string `pulumi:"displayName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Indicates if the profile is set as the default. There is exactly one default profile for a specified architecture, OS family, registration type, and vendor. When registering an instance with the corresonding characteristics, the default profile is used, unless another profile is specified.
	IsDefaultProfile bool `pulumi:"isDefaultProfile"`
	// Indicates if the profile was created by the service. OS Management Hub provides a limited set of standardized profiles that can be used to register Autonomous Linux or Windows instances.
	IsServiceProvidedProfile bool `pulumi:"isServiceProvidedProfile"`
	// Provides identifying information for the specified lifecycle environment.
	LifecycleEnvironments []GetProfileVersionLifecycleEnvironment `pulumi:"lifecycleEnvironments"`
	// Provides identifying information for the specified lifecycle stage.
	LifecycleStages []GetProfileVersionLifecycleStage `pulumi:"lifecycleStages"`
	// Provides identifying information for the specified managed instance group.
	ManagedInstanceGroups []GetProfileVersionManagedInstanceGroup `pulumi:"managedInstanceGroups"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station to associate with an  instance once registered. Management stations are only used with non-OCI instances.
	ManagementStationId string `pulumi:"managementStationId"`
	// The operating system family.
	OsFamily  string `pulumi:"osFamily"`
	ProfileId string `pulumi:"profileId"`
	// The type of profile.
	ProfileType string `pulumi:"profileType"`
	// The version of the profile.
	ProfileVersion string `pulumi:"profileVersion"`
	// The type of instance to register.
	RegistrationType string `pulumi:"registrationType"`
	// The list of software sources that the registration profile will use.
	SoftwareSources []GetProfileVersionSoftwareSource `pulumi:"softwareSources"`
	// The current state of the registration profile.
	State string `pulumi:"state"`
	// The time the registration profile was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
	TimeCreated string `pulumi:"timeCreated"`
	// The time the registration profile was last modified (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
	TimeModified string `pulumi:"timeModified"`
	// The vendor of the operating system for the instance.
	VendorName string `pulumi:"vendorName"`
}

func GetProfileVersionOutput(ctx *pulumi.Context, args GetProfileVersionOutputArgs, opts ...pulumi.InvokeOption) GetProfileVersionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetProfileVersionResultOutput, error) {
			args := v.(GetProfileVersionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:OsManagementHub/getProfileVersion:getProfileVersion", args, GetProfileVersionResultOutput{}, options).(GetProfileVersionResultOutput), nil
		}).(GetProfileVersionResultOutput)
}

// A collection of arguments for invoking getProfileVersion.
type GetProfileVersionOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the registration profile.
	ProfileId pulumi.StringInput `pulumi:"profileId"`
	// The version of the registration profile.
	ProfileVersion pulumi.StringInput `pulumi:"profileVersion"`
}

func (GetProfileVersionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileVersionArgs)(nil)).Elem()
}

// A collection of values returned by getProfileVersion.
type GetProfileVersionResultOutput struct{ *pulumi.OutputState }

func (GetProfileVersionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileVersionResult)(nil)).Elem()
}

func (o GetProfileVersionResultOutput) ToGetProfileVersionResultOutput() GetProfileVersionResultOutput {
	return o
}

func (o GetProfileVersionResultOutput) ToGetProfileVersionResultOutputWithContext(ctx context.Context) GetProfileVersionResultOutput {
	return o
}

// The architecture type.
func (o GetProfileVersionResultOutput) ArchType() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileVersionResult) string { return v.ArchType }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the registration profile.
func (o GetProfileVersionResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileVersionResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Software source description.
func (o GetProfileVersionResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileVersionResult) string { return v.Description }).(pulumi.StringOutput)
}

// Software source name.
func (o GetProfileVersionResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileVersionResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetProfileVersionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileVersionResult) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates if the profile is set as the default. There is exactly one default profile for a specified architecture, OS family, registration type, and vendor. When registering an instance with the corresonding characteristics, the default profile is used, unless another profile is specified.
func (o GetProfileVersionResultOutput) IsDefaultProfile() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProfileVersionResult) bool { return v.IsDefaultProfile }).(pulumi.BoolOutput)
}

// Indicates if the profile was created by the service. OS Management Hub provides a limited set of standardized profiles that can be used to register Autonomous Linux or Windows instances.
func (o GetProfileVersionResultOutput) IsServiceProvidedProfile() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProfileVersionResult) bool { return v.IsServiceProvidedProfile }).(pulumi.BoolOutput)
}

// Provides identifying information for the specified lifecycle environment.
func (o GetProfileVersionResultOutput) LifecycleEnvironments() GetProfileVersionLifecycleEnvironmentArrayOutput {
	return o.ApplyT(func(v GetProfileVersionResult) []GetProfileVersionLifecycleEnvironment {
		return v.LifecycleEnvironments
	}).(GetProfileVersionLifecycleEnvironmentArrayOutput)
}

// Provides identifying information for the specified lifecycle stage.
func (o GetProfileVersionResultOutput) LifecycleStages() GetProfileVersionLifecycleStageArrayOutput {
	return o.ApplyT(func(v GetProfileVersionResult) []GetProfileVersionLifecycleStage { return v.LifecycleStages }).(GetProfileVersionLifecycleStageArrayOutput)
}

// Provides identifying information for the specified managed instance group.
func (o GetProfileVersionResultOutput) ManagedInstanceGroups() GetProfileVersionManagedInstanceGroupArrayOutput {
	return o.ApplyT(func(v GetProfileVersionResult) []GetProfileVersionManagedInstanceGroup {
		return v.ManagedInstanceGroups
	}).(GetProfileVersionManagedInstanceGroupArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station to associate with an  instance once registered. Management stations are only used with non-OCI instances.
func (o GetProfileVersionResultOutput) ManagementStationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileVersionResult) string { return v.ManagementStationId }).(pulumi.StringOutput)
}

// The operating system family.
func (o GetProfileVersionResultOutput) OsFamily() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileVersionResult) string { return v.OsFamily }).(pulumi.StringOutput)
}

func (o GetProfileVersionResultOutput) ProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileVersionResult) string { return v.ProfileId }).(pulumi.StringOutput)
}

// The type of profile.
func (o GetProfileVersionResultOutput) ProfileType() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileVersionResult) string { return v.ProfileType }).(pulumi.StringOutput)
}

// The version of the profile.
func (o GetProfileVersionResultOutput) ProfileVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileVersionResult) string { return v.ProfileVersion }).(pulumi.StringOutput)
}

// The type of instance to register.
func (o GetProfileVersionResultOutput) RegistrationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileVersionResult) string { return v.RegistrationType }).(pulumi.StringOutput)
}

// The list of software sources that the registration profile will use.
func (o GetProfileVersionResultOutput) SoftwareSources() GetProfileVersionSoftwareSourceArrayOutput {
	return o.ApplyT(func(v GetProfileVersionResult) []GetProfileVersionSoftwareSource { return v.SoftwareSources }).(GetProfileVersionSoftwareSourceArrayOutput)
}

// The current state of the registration profile.
func (o GetProfileVersionResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileVersionResult) string { return v.State }).(pulumi.StringOutput)
}

// The time the registration profile was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
func (o GetProfileVersionResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileVersionResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the registration profile was last modified (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
func (o GetProfileVersionResultOutput) TimeModified() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileVersionResult) string { return v.TimeModified }).(pulumi.StringOutput)
}

// The vendor of the operating system for the instance.
func (o GetProfileVersionResultOutput) VendorName() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileVersionResult) string { return v.VendorName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetProfileVersionResultOutput{})
}
