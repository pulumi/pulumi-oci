// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Profiles in Oracle Cloud Infrastructure Os Management Hub service.
//
// Lists registration profiles that match the specified compartment or profile OCID. Filter the list against a
// variety of criteria including but not limited to its name, status, vendor name, and architecture type.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/osmanagementhub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := osmanagementhub.GetProfiles(ctx, &osmanagementhub.GetProfilesArgs{
//				ArchType:                 pulumi.StringRef(profileArchType),
//				CompartmentId:            pulumi.StringRef(compartmentId),
//				DisplayNames:             profileDisplayName,
//				DisplayNameContains:      pulumi.StringRef(profileDisplayNameContains),
//				IsDefaultProfile:         pulumi.BoolRef(profileIsDefaultProfile),
//				IsServiceProvidedProfile: pulumi.BoolRef(profileIsServiceProvidedProfile),
//				OsFamily:                 pulumi.StringRef(profileOsFamily),
//				ProfileId:                pulumi.StringRef(testProfile.Id),
//				ProfileTypes:             profileProfileType,
//				RegistrationTypes:        profileRegistrationType,
//				State:                    pulumi.StringRef(profileState),
//				VendorName:               pulumi.StringRef(profileVendorName),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetProfiles(ctx *pulumi.Context, args *GetProfilesArgs, opts ...pulumi.InvokeOption) (*GetProfilesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetProfilesResult
	err := ctx.Invoke("oci:OsManagementHub/getProfiles:getProfiles", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProfiles.
type GetProfilesArgs struct {
	// A filter to return only profiles that match the given archType.
	ArchType *string `pulumi:"archType"`
	// (Updatable) The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// A filter to return resources that may partially match the given display name.
	DisplayNameContains *string `pulumi:"displayNameContains"`
	// A filter to return resources that match the given display names.
	DisplayNames []string            `pulumi:"displayNames"`
	Filters      []GetProfilesFilter `pulumi:"filters"`
	// A boolean variable that is used to list only the default profile resources.
	IsDefaultProfile *bool `pulumi:"isDefaultProfile"`
	// A filter to return only service-provided profiles.
	IsServiceProvidedProfile *bool `pulumi:"isServiceProvidedProfile"`
	// A filter to return only resources that match the given operating system family.
	OsFamily *string `pulumi:"osFamily"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the registration profile. A filter used to return the specified profile.
	ProfileId *string `pulumi:"profileId"`
	// A filter to return registration profiles that match the given profile type.
	ProfileTypes []string `pulumi:"profileTypes"`
	// A filter to return profiles that match the given instance type.
	RegistrationTypes []string `pulumi:"registrationTypes"`
	// A filter to return only registration profiles in the given state.
	State *string `pulumi:"state"`
	// A filter to return only resources that match the given vendor name.
	VendorName *string `pulumi:"vendorName"`
}

// A collection of values returned by getProfiles.
type GetProfilesResult struct {
	// The architecture type.
	ArchType *string `pulumi:"archType"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the registration profile.
	CompartmentId       *string `pulumi:"compartmentId"`
	DisplayNameContains *string `pulumi:"displayNameContains"`
	// Software source name.
	DisplayNames []string            `pulumi:"displayNames"`
	Filters      []GetProfilesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Indicates if the profile is set as the default. There is exactly one default profile for a specified architecture, OS family, registration type, and vendor. When registering an instance with the corresonding characteristics, the default profile is used, unless another profile is specified.
	IsDefaultProfile *bool `pulumi:"isDefaultProfile"`
	// Indicates if the profile was created by the service. OS Management Hub provides a limited set of standardized profiles that can be used to register Autonomous Linux or Windows instances.
	IsServiceProvidedProfile *bool `pulumi:"isServiceProvidedProfile"`
	// The operating system family.
	OsFamily *string `pulumi:"osFamily"`
	// The list of profile_collection.
	ProfileCollections []GetProfilesProfileCollection `pulumi:"profileCollections"`
	ProfileId          *string                        `pulumi:"profileId"`
	// The type of profile.
	ProfileTypes []string `pulumi:"profileTypes"`
	// The type of instance to register.
	RegistrationTypes []string `pulumi:"registrationTypes"`
	// The current state of the registration profile.
	State *string `pulumi:"state"`
	// The vendor of the operating system for the instance.
	VendorName *string `pulumi:"vendorName"`
}

func GetProfilesOutput(ctx *pulumi.Context, args GetProfilesOutputArgs, opts ...pulumi.InvokeOption) GetProfilesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetProfilesResultOutput, error) {
			args := v.(GetProfilesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:OsManagementHub/getProfiles:getProfiles", args, GetProfilesResultOutput{}, options).(GetProfilesResultOutput), nil
		}).(GetProfilesResultOutput)
}

// A collection of arguments for invoking getProfiles.
type GetProfilesOutputArgs struct {
	// A filter to return only profiles that match the given archType.
	ArchType pulumi.StringPtrInput `pulumi:"archType"`
	// (Updatable) The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// A filter to return resources that may partially match the given display name.
	DisplayNameContains pulumi.StringPtrInput `pulumi:"displayNameContains"`
	// A filter to return resources that match the given display names.
	DisplayNames pulumi.StringArrayInput     `pulumi:"displayNames"`
	Filters      GetProfilesFilterArrayInput `pulumi:"filters"`
	// A boolean variable that is used to list only the default profile resources.
	IsDefaultProfile pulumi.BoolPtrInput `pulumi:"isDefaultProfile"`
	// A filter to return only service-provided profiles.
	IsServiceProvidedProfile pulumi.BoolPtrInput `pulumi:"isServiceProvidedProfile"`
	// A filter to return only resources that match the given operating system family.
	OsFamily pulumi.StringPtrInput `pulumi:"osFamily"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the registration profile. A filter used to return the specified profile.
	ProfileId pulumi.StringPtrInput `pulumi:"profileId"`
	// A filter to return registration profiles that match the given profile type.
	ProfileTypes pulumi.StringArrayInput `pulumi:"profileTypes"`
	// A filter to return profiles that match the given instance type.
	RegistrationTypes pulumi.StringArrayInput `pulumi:"registrationTypes"`
	// A filter to return only registration profiles in the given state.
	State pulumi.StringPtrInput `pulumi:"state"`
	// A filter to return only resources that match the given vendor name.
	VendorName pulumi.StringPtrInput `pulumi:"vendorName"`
}

func (GetProfilesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfilesArgs)(nil)).Elem()
}

// A collection of values returned by getProfiles.
type GetProfilesResultOutput struct{ *pulumi.OutputState }

func (GetProfilesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfilesResult)(nil)).Elem()
}

func (o GetProfilesResultOutput) ToGetProfilesResultOutput() GetProfilesResultOutput {
	return o
}

func (o GetProfilesResultOutput) ToGetProfilesResultOutputWithContext(ctx context.Context) GetProfilesResultOutput {
	return o
}

// The architecture type.
func (o GetProfilesResultOutput) ArchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfilesResult) *string { return v.ArchType }).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the registration profile.
func (o GetProfilesResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfilesResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

func (o GetProfilesResultOutput) DisplayNameContains() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfilesResult) *string { return v.DisplayNameContains }).(pulumi.StringPtrOutput)
}

// Software source name.
func (o GetProfilesResultOutput) DisplayNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProfilesResult) []string { return v.DisplayNames }).(pulumi.StringArrayOutput)
}

func (o GetProfilesResultOutput) Filters() GetProfilesFilterArrayOutput {
	return o.ApplyT(func(v GetProfilesResult) []GetProfilesFilter { return v.Filters }).(GetProfilesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetProfilesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfilesResult) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates if the profile is set as the default. There is exactly one default profile for a specified architecture, OS family, registration type, and vendor. When registering an instance with the corresonding characteristics, the default profile is used, unless another profile is specified.
func (o GetProfilesResultOutput) IsDefaultProfile() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetProfilesResult) *bool { return v.IsDefaultProfile }).(pulumi.BoolPtrOutput)
}

// Indicates if the profile was created by the service. OS Management Hub provides a limited set of standardized profiles that can be used to register Autonomous Linux or Windows instances.
func (o GetProfilesResultOutput) IsServiceProvidedProfile() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetProfilesResult) *bool { return v.IsServiceProvidedProfile }).(pulumi.BoolPtrOutput)
}

// The operating system family.
func (o GetProfilesResultOutput) OsFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfilesResult) *string { return v.OsFamily }).(pulumi.StringPtrOutput)
}

// The list of profile_collection.
func (o GetProfilesResultOutput) ProfileCollections() GetProfilesProfileCollectionArrayOutput {
	return o.ApplyT(func(v GetProfilesResult) []GetProfilesProfileCollection { return v.ProfileCollections }).(GetProfilesProfileCollectionArrayOutput)
}

func (o GetProfilesResultOutput) ProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfilesResult) *string { return v.ProfileId }).(pulumi.StringPtrOutput)
}

// The type of profile.
func (o GetProfilesResultOutput) ProfileTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProfilesResult) []string { return v.ProfileTypes }).(pulumi.StringArrayOutput)
}

// The type of instance to register.
func (o GetProfilesResultOutput) RegistrationTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProfilesResult) []string { return v.RegistrationTypes }).(pulumi.StringArrayOutput)
}

// The current state of the registration profile.
func (o GetProfilesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfilesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The vendor of the operating system for the instance.
func (o GetProfilesResultOutput) VendorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfilesResult) *string { return v.VendorName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetProfilesResultOutput{})
}
