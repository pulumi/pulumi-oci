// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Scheduled Job resource in Oracle Cloud Infrastructure Os Management Hub service.
//
// Gets information about the specified scheduled job.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/osmanagementhub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := osmanagementhub.GetScheduledJob(ctx, &osmanagementhub.GetScheduledJobArgs{
//				ScheduledJobId: testScheduledJobOciOsManagementHubScheduledJob.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupScheduledJob(ctx *pulumi.Context, args *LookupScheduledJobArgs, opts ...pulumi.InvokeOption) (*LookupScheduledJobResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupScheduledJobResult
	err := ctx.Invoke("oci:OsManagementHub/getScheduledJob:getScheduledJob", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getScheduledJob.
type LookupScheduledJobArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the scheduled job.
	ScheduledJobId string `pulumi:"scheduledJobId"`
}

// A collection of values returned by getScheduledJob.
type LookupScheduledJobResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the scheduled job.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// User-specified description for the scheduled job.
	Description string `pulumi:"description"`
	// User-friendly name for the scheduled job.
	DisplayName string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the scheduled job.
	Id string `pulumi:"id"`
	// Indicates whether this scheduled job is managed by the Autonomous Linux service.
	IsManagedByAutonomousLinux bool `pulumi:"isManagedByAutonomousLinux"`
	// Indicates if the schedule job has restricted update and deletion capabilities. For restricted scheduled jobs,  you can update only the timeNextExecution, recurringRule, and tags.
	IsRestricted bool `pulumi:"isRestricted"`
	// Indicates whether to apply the scheduled job to all compartments in the tenancy when managedCompartmentIds specifies the tenancy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) (root compartment).
	IsSubcompartmentIncluded bool `pulumi:"isSubcompartmentIncluded"`
	// The lifecycle stage [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore this parameter is mutually exclusive with  managedInstanceIds, managedInstanceGroupIds, and managedCompartmentIds.
	LifecycleStageIds []string `pulumi:"lifecycleStageIds"`
	// The list of locations this scheduled job should operate on for a job targeting on compartments. (Empty list means apply to all locations). This can only be set when managedCompartmentIds is not empty.
	Locations []string `pulumi:"locations"`
	// The compartment [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on. A scheduled job can only operate on one type of target, therefore this parameter is mutually exclusive with managedInstanceIds, managedInstanceGroupIds, and lifecycleStageIds.
	ManagedCompartmentIds []string `pulumi:"managedCompartmentIds"`
	// The managed instance group [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on. A scheduled job can only operate on one type of target, therefore this parameter is mutually exclusive with managedInstanceIds, managedCompartmentIds, and lifecycleStageIds.
	ManagedInstanceGroupIds []string `pulumi:"managedInstanceGroupIds"`
	// The managed instance [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore this parameter is mutually exclusive with  managedInstanceGroupIds, managedCompartmentIds, and lifecycleStageIds.
	ManagedInstanceIds []string `pulumi:"managedInstanceIds"`
	// The list of operations this scheduled job needs to perform. A scheduled job supports only one operation type, unless it is one of the following:
	// * UPDATE_PACKAGES
	// * UPDATE_ALL
	// * UPDATE_SECURITY
	// * UPDATE_BUGFIX
	// * UPDATE_ENHANCEMENT
	// * UPDATE_OTHER
	// * UPDATE_KSPLICE_USERSPACE
	// * UPDATE_KSPLICE_KERNEL
	Operations []GetScheduledJobOperation `pulumi:"operations"`
	// The frequency schedule for a recurring scheduled job.
	RecurringRule string `pulumi:"recurringRule"`
	// The amount of time in minutes to wait until retrying the scheduled job. If set, the service will automatically retry  a failed scheduled job after the interval. For example, you could set the interval to [2,5,10]. If the initial  execution of the job fails, the service waits 2 minutes and then retries. If that fails, the service waits 5 minutes  and then retries. If that fails, the service waits 10 minutes and then retries.
	RetryIntervals []int `pulumi:"retryIntervals"`
	// The type of scheduling frequency for the job.
	ScheduleType   string `pulumi:"scheduleType"`
	ScheduledJobId string `pulumi:"scheduledJobId"`
	// The current state of the scheduled job.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time this scheduled job was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
	TimeCreated string `pulumi:"timeCreated"`
	// The time of the last execution of this scheduled job (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
	TimeLastExecution string `pulumi:"timeLastExecution"`
	// The time of the next execution of this scheduled job (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
	TimeNextExecution string `pulumi:"timeNextExecution"`
	// The time this scheduled job was updated (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
	TimeUpdated string `pulumi:"timeUpdated"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the work request that will be rerun.
	WorkRequestId string `pulumi:"workRequestId"`
	// The list of work request [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with this scheduled job.
	WorkRequestIds []string `pulumi:"workRequestIds"`
}

func LookupScheduledJobOutput(ctx *pulumi.Context, args LookupScheduledJobOutputArgs, opts ...pulumi.InvokeOption) LookupScheduledJobResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupScheduledJobResultOutput, error) {
			args := v.(LookupScheduledJobArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:OsManagementHub/getScheduledJob:getScheduledJob", args, LookupScheduledJobResultOutput{}, options).(LookupScheduledJobResultOutput), nil
		}).(LookupScheduledJobResultOutput)
}

// A collection of arguments for invoking getScheduledJob.
type LookupScheduledJobOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the scheduled job.
	ScheduledJobId pulumi.StringInput `pulumi:"scheduledJobId"`
}

func (LookupScheduledJobOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupScheduledJobArgs)(nil)).Elem()
}

// A collection of values returned by getScheduledJob.
type LookupScheduledJobResultOutput struct{ *pulumi.OutputState }

func (LookupScheduledJobResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupScheduledJobResult)(nil)).Elem()
}

func (o LookupScheduledJobResultOutput) ToLookupScheduledJobResultOutput() LookupScheduledJobResultOutput {
	return o
}

func (o LookupScheduledJobResultOutput) ToLookupScheduledJobResultOutputWithContext(ctx context.Context) LookupScheduledJobResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the scheduled job.
func (o LookupScheduledJobResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledJobResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o LookupScheduledJobResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupScheduledJobResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// User-specified description for the scheduled job.
func (o LookupScheduledJobResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledJobResult) string { return v.Description }).(pulumi.StringOutput)
}

// User-friendly name for the scheduled job.
func (o LookupScheduledJobResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledJobResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o LookupScheduledJobResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupScheduledJobResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the scheduled job.
func (o LookupScheduledJobResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledJobResult) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates whether this scheduled job is managed by the Autonomous Linux service.
func (o LookupScheduledJobResultOutput) IsManagedByAutonomousLinux() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupScheduledJobResult) bool { return v.IsManagedByAutonomousLinux }).(pulumi.BoolOutput)
}

// Indicates if the schedule job has restricted update and deletion capabilities. For restricted scheduled jobs,  you can update only the timeNextExecution, recurringRule, and tags.
func (o LookupScheduledJobResultOutput) IsRestricted() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupScheduledJobResult) bool { return v.IsRestricted }).(pulumi.BoolOutput)
}

// Indicates whether to apply the scheduled job to all compartments in the tenancy when managedCompartmentIds specifies the tenancy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) (root compartment).
func (o LookupScheduledJobResultOutput) IsSubcompartmentIncluded() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupScheduledJobResult) bool { return v.IsSubcompartmentIncluded }).(pulumi.BoolOutput)
}

// The lifecycle stage [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore this parameter is mutually exclusive with  managedInstanceIds, managedInstanceGroupIds, and managedCompartmentIds.
func (o LookupScheduledJobResultOutput) LifecycleStageIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupScheduledJobResult) []string { return v.LifecycleStageIds }).(pulumi.StringArrayOutput)
}

// The list of locations this scheduled job should operate on for a job targeting on compartments. (Empty list means apply to all locations). This can only be set when managedCompartmentIds is not empty.
func (o LookupScheduledJobResultOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupScheduledJobResult) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// The compartment [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on. A scheduled job can only operate on one type of target, therefore this parameter is mutually exclusive with managedInstanceIds, managedInstanceGroupIds, and lifecycleStageIds.
func (o LookupScheduledJobResultOutput) ManagedCompartmentIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupScheduledJobResult) []string { return v.ManagedCompartmentIds }).(pulumi.StringArrayOutput)
}

// The managed instance group [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on. A scheduled job can only operate on one type of target, therefore this parameter is mutually exclusive with managedInstanceIds, managedCompartmentIds, and lifecycleStageIds.
func (o LookupScheduledJobResultOutput) ManagedInstanceGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupScheduledJobResult) []string { return v.ManagedInstanceGroupIds }).(pulumi.StringArrayOutput)
}

// The managed instance [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore this parameter is mutually exclusive with  managedInstanceGroupIds, managedCompartmentIds, and lifecycleStageIds.
func (o LookupScheduledJobResultOutput) ManagedInstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupScheduledJobResult) []string { return v.ManagedInstanceIds }).(pulumi.StringArrayOutput)
}

// The list of operations this scheduled job needs to perform. A scheduled job supports only one operation type, unless it is one of the following:
// * UPDATE_PACKAGES
// * UPDATE_ALL
// * UPDATE_SECURITY
// * UPDATE_BUGFIX
// * UPDATE_ENHANCEMENT
// * UPDATE_OTHER
// * UPDATE_KSPLICE_USERSPACE
// * UPDATE_KSPLICE_KERNEL
func (o LookupScheduledJobResultOutput) Operations() GetScheduledJobOperationArrayOutput {
	return o.ApplyT(func(v LookupScheduledJobResult) []GetScheduledJobOperation { return v.Operations }).(GetScheduledJobOperationArrayOutput)
}

// The frequency schedule for a recurring scheduled job.
func (o LookupScheduledJobResultOutput) RecurringRule() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledJobResult) string { return v.RecurringRule }).(pulumi.StringOutput)
}

// The amount of time in minutes to wait until retrying the scheduled job. If set, the service will automatically retry  a failed scheduled job after the interval. For example, you could set the interval to [2,5,10]. If the initial  execution of the job fails, the service waits 2 minutes and then retries. If that fails, the service waits 5 minutes  and then retries. If that fails, the service waits 10 minutes and then retries.
func (o LookupScheduledJobResultOutput) RetryIntervals() pulumi.IntArrayOutput {
	return o.ApplyT(func(v LookupScheduledJobResult) []int { return v.RetryIntervals }).(pulumi.IntArrayOutput)
}

// The type of scheduling frequency for the job.
func (o LookupScheduledJobResultOutput) ScheduleType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledJobResult) string { return v.ScheduleType }).(pulumi.StringOutput)
}

func (o LookupScheduledJobResultOutput) ScheduledJobId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledJobResult) string { return v.ScheduledJobId }).(pulumi.StringOutput)
}

// The current state of the scheduled job.
func (o LookupScheduledJobResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledJobResult) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupScheduledJobResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupScheduledJobResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The time this scheduled job was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
func (o LookupScheduledJobResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledJobResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time of the last execution of this scheduled job (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
func (o LookupScheduledJobResultOutput) TimeLastExecution() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledJobResult) string { return v.TimeLastExecution }).(pulumi.StringOutput)
}

// The time of the next execution of this scheduled job (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
func (o LookupScheduledJobResultOutput) TimeNextExecution() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledJobResult) string { return v.TimeNextExecution }).(pulumi.StringOutput)
}

// The time this scheduled job was updated (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
func (o LookupScheduledJobResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledJobResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the work request that will be rerun.
func (o LookupScheduledJobResultOutput) WorkRequestId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledJobResult) string { return v.WorkRequestId }).(pulumi.StringOutput)
}

// The list of work request [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with this scheduled job.
func (o LookupScheduledJobResultOutput) WorkRequestIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupScheduledJobResult) []string { return v.WorkRequestIds }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupScheduledJobResultOutput{})
}
