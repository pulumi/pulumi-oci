// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Software Source Software Packages in Oracle Cloud Infrastructure Os Management Hub service.
//
// Lists software packages in the specified software source.  Filter the list against a variety of criteria
// including but not limited to its name.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/osmanagementhub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := osmanagementhub.GetSoftwareSourceSoftwarePackages(ctx, &osmanagementhub.GetSoftwareSourceSoftwarePackagesArgs{
//				SoftwareSourceId:    testSoftwareSource.Id,
//				DisplayName:         pulumi.StringRef(softwareSourceSoftwarePackageDisplayName),
//				DisplayNameContains: pulumi.StringRef(softwareSourceSoftwarePackageDisplayNameContains),
//				IsLatest:            pulumi.BoolRef(softwareSourceSoftwarePackageIsLatest),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSoftwareSourceSoftwarePackages(ctx *pulumi.Context, args *GetSoftwareSourceSoftwarePackagesArgs, opts ...pulumi.InvokeOption) (*GetSoftwareSourceSoftwarePackagesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSoftwareSourceSoftwarePackagesResult
	err := ctx.Invoke("oci:OsManagementHub/getSoftwareSourceSoftwarePackages:getSoftwareSourceSoftwarePackages", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSoftwareSourceSoftwarePackages.
type GetSoftwareSourceSoftwarePackagesArgs struct {
	// A filter to return resources that match the given user-friendly name.
	DisplayName *string `pulumi:"displayName"`
	// A filter to return resources that may partially match the given display name.
	DisplayNameContains *string                                   `pulumi:"displayNameContains"`
	Filters             []GetSoftwareSourceSoftwarePackagesFilter `pulumi:"filters"`
	// Indicates whether to list only the latest versions of packages, module streams, and stream profiles.
	IsLatest *bool `pulumi:"isLatest"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source.
	SoftwareSourceId string `pulumi:"softwareSourceId"`
}

// A collection of values returned by getSoftwareSourceSoftwarePackages.
type GetSoftwareSourceSoftwarePackagesResult struct {
	// Software source name.
	DisplayName         *string                                   `pulumi:"displayName"`
	DisplayNameContains *string                                   `pulumi:"displayNameContains"`
	Filters             []GetSoftwareSourceSoftwarePackagesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Indicates whether this package is the latest version.
	IsLatest *bool `pulumi:"isLatest"`
	// The list of software_package_collection.
	SoftwarePackageCollections []GetSoftwareSourceSoftwarePackagesSoftwarePackageCollection `pulumi:"softwarePackageCollections"`
	SoftwareSourceId           string                                                       `pulumi:"softwareSourceId"`
}

func GetSoftwareSourceSoftwarePackagesOutput(ctx *pulumi.Context, args GetSoftwareSourceSoftwarePackagesOutputArgs, opts ...pulumi.InvokeOption) GetSoftwareSourceSoftwarePackagesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetSoftwareSourceSoftwarePackagesResultOutput, error) {
			args := v.(GetSoftwareSourceSoftwarePackagesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:OsManagementHub/getSoftwareSourceSoftwarePackages:getSoftwareSourceSoftwarePackages", args, GetSoftwareSourceSoftwarePackagesResultOutput{}, options).(GetSoftwareSourceSoftwarePackagesResultOutput), nil
		}).(GetSoftwareSourceSoftwarePackagesResultOutput)
}

// A collection of arguments for invoking getSoftwareSourceSoftwarePackages.
type GetSoftwareSourceSoftwarePackagesOutputArgs struct {
	// A filter to return resources that match the given user-friendly name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// A filter to return resources that may partially match the given display name.
	DisplayNameContains pulumi.StringPtrInput                             `pulumi:"displayNameContains"`
	Filters             GetSoftwareSourceSoftwarePackagesFilterArrayInput `pulumi:"filters"`
	// Indicates whether to list only the latest versions of packages, module streams, and stream profiles.
	IsLatest pulumi.BoolPtrInput `pulumi:"isLatest"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source.
	SoftwareSourceId pulumi.StringInput `pulumi:"softwareSourceId"`
}

func (GetSoftwareSourceSoftwarePackagesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceSoftwarePackagesArgs)(nil)).Elem()
}

// A collection of values returned by getSoftwareSourceSoftwarePackages.
type GetSoftwareSourceSoftwarePackagesResultOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceSoftwarePackagesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceSoftwarePackagesResult)(nil)).Elem()
}

func (o GetSoftwareSourceSoftwarePackagesResultOutput) ToGetSoftwareSourceSoftwarePackagesResultOutput() GetSoftwareSourceSoftwarePackagesResultOutput {
	return o
}

func (o GetSoftwareSourceSoftwarePackagesResultOutput) ToGetSoftwareSourceSoftwarePackagesResultOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackagesResultOutput {
	return o
}

// Software source name.
func (o GetSoftwareSourceSoftwarePackagesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetSoftwareSourceSoftwarePackagesResultOutput) DisplayNameContains() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesResult) *string { return v.DisplayNameContains }).(pulumi.StringPtrOutput)
}

func (o GetSoftwareSourceSoftwarePackagesResultOutput) Filters() GetSoftwareSourceSoftwarePackagesFilterArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesResult) []GetSoftwareSourceSoftwarePackagesFilter {
		return v.Filters
	}).(GetSoftwareSourceSoftwarePackagesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSoftwareSourceSoftwarePackagesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesResult) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates whether this package is the latest version.
func (o GetSoftwareSourceSoftwarePackagesResultOutput) IsLatest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesResult) *bool { return v.IsLatest }).(pulumi.BoolPtrOutput)
}

// The list of software_package_collection.
func (o GetSoftwareSourceSoftwarePackagesResultOutput) SoftwarePackageCollections() GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesResult) []GetSoftwareSourceSoftwarePackagesSoftwarePackageCollection {
		return v.SoftwarePackageCollections
	}).(GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArrayOutput)
}

func (o GetSoftwareSourceSoftwarePackagesResultOutput) SoftwareSourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesResult) string { return v.SoftwareSourceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSoftwareSourceSoftwarePackagesResultOutput{})
}
