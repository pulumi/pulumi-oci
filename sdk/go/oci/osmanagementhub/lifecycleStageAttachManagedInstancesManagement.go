// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Lifecycle Stage Attach Managed Instances Management resource in Oracle Cloud Infrastructure Os Management Hub service.
//
// Attaches (adds) managed instances to a lifecycle stage. Once added, you can apply operations to all managed instances in the lifecycle stage.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/osmanagementhub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := osmanagementhub.NewLifecycleStageAttachManagedInstancesManagement(ctx, "test_lifecycle_stage_attach_managed_instances_management", &osmanagementhub.LifecycleStageAttachManagedInstancesManagementArgs{
//				LifecycleStageId: pulumi.Any(testLifecycleStage.Id),
//				ManagedInstanceDetails: &osmanagementhub.LifecycleStageAttachManagedInstancesManagementManagedInstanceDetailsArgs{
//					ManagedInstances: pulumi.Any(lifecycleStageAttachManagedInstancesManagementManagedInstanceDetailsManagedInstances),
//					WorkRequestDetails: &osmanagementhub.LifecycleStageAttachManagedInstancesManagementManagedInstanceDetailsWorkRequestDetailsArgs{
//						Description: pulumi.Any(lifecycleStageAttachManagedInstancesManagementManagedInstanceDetailsWorkRequestDetailsDescription),
//						DisplayName: pulumi.Any(lifecycleStageAttachManagedInstancesManagementManagedInstanceDetailsWorkRequestDetailsDisplayName),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// LifecycleStageAttachManagedInstancesManagement can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:OsManagementHub/lifecycleStageAttachManagedInstancesManagement:LifecycleStageAttachManagedInstancesManagement test_lifecycle_stage_attach_managed_instances_management "id"
// ```
type LifecycleStageAttachManagedInstancesManagement struct {
	pulumi.CustomResourceState

	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle stage.
	LifecycleStageId pulumi.StringOutput `pulumi:"lifecycleStageId"`
	// The details about the managed instances.
	ManagedInstanceDetails LifecycleStageAttachManagedInstancesManagementManagedInstanceDetailsOutput `pulumi:"managedInstanceDetails"`
}

// NewLifecycleStageAttachManagedInstancesManagement registers a new resource with the given unique name, arguments, and options.
func NewLifecycleStageAttachManagedInstancesManagement(ctx *pulumi.Context,
	name string, args *LifecycleStageAttachManagedInstancesManagementArgs, opts ...pulumi.ResourceOption) (*LifecycleStageAttachManagedInstancesManagement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.LifecycleStageId == nil {
		return nil, errors.New("invalid value for required argument 'LifecycleStageId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LifecycleStageAttachManagedInstancesManagement
	err := ctx.RegisterResource("oci:OsManagementHub/lifecycleStageAttachManagedInstancesManagement:LifecycleStageAttachManagedInstancesManagement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLifecycleStageAttachManagedInstancesManagement gets an existing LifecycleStageAttachManagedInstancesManagement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLifecycleStageAttachManagedInstancesManagement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LifecycleStageAttachManagedInstancesManagementState, opts ...pulumi.ResourceOption) (*LifecycleStageAttachManagedInstancesManagement, error) {
	var resource LifecycleStageAttachManagedInstancesManagement
	err := ctx.ReadResource("oci:OsManagementHub/lifecycleStageAttachManagedInstancesManagement:LifecycleStageAttachManagedInstancesManagement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LifecycleStageAttachManagedInstancesManagement resources.
type lifecycleStageAttachManagedInstancesManagementState struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle stage.
	LifecycleStageId *string `pulumi:"lifecycleStageId"`
	// The details about the managed instances.
	ManagedInstanceDetails *LifecycleStageAttachManagedInstancesManagementManagedInstanceDetails `pulumi:"managedInstanceDetails"`
}

type LifecycleStageAttachManagedInstancesManagementState struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle stage.
	LifecycleStageId pulumi.StringPtrInput
	// The details about the managed instances.
	ManagedInstanceDetails LifecycleStageAttachManagedInstancesManagementManagedInstanceDetailsPtrInput
}

func (LifecycleStageAttachManagedInstancesManagementState) ElementType() reflect.Type {
	return reflect.TypeOf((*lifecycleStageAttachManagedInstancesManagementState)(nil)).Elem()
}

type lifecycleStageAttachManagedInstancesManagementArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle stage.
	LifecycleStageId string `pulumi:"lifecycleStageId"`
	// The details about the managed instances.
	ManagedInstanceDetails *LifecycleStageAttachManagedInstancesManagementManagedInstanceDetails `pulumi:"managedInstanceDetails"`
}

// The set of arguments for constructing a LifecycleStageAttachManagedInstancesManagement resource.
type LifecycleStageAttachManagedInstancesManagementArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle stage.
	LifecycleStageId pulumi.StringInput
	// The details about the managed instances.
	ManagedInstanceDetails LifecycleStageAttachManagedInstancesManagementManagedInstanceDetailsPtrInput
}

func (LifecycleStageAttachManagedInstancesManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lifecycleStageAttachManagedInstancesManagementArgs)(nil)).Elem()
}

type LifecycleStageAttachManagedInstancesManagementInput interface {
	pulumi.Input

	ToLifecycleStageAttachManagedInstancesManagementOutput() LifecycleStageAttachManagedInstancesManagementOutput
	ToLifecycleStageAttachManagedInstancesManagementOutputWithContext(ctx context.Context) LifecycleStageAttachManagedInstancesManagementOutput
}

func (*LifecycleStageAttachManagedInstancesManagement) ElementType() reflect.Type {
	return reflect.TypeOf((**LifecycleStageAttachManagedInstancesManagement)(nil)).Elem()
}

func (i *LifecycleStageAttachManagedInstancesManagement) ToLifecycleStageAttachManagedInstancesManagementOutput() LifecycleStageAttachManagedInstancesManagementOutput {
	return i.ToLifecycleStageAttachManagedInstancesManagementOutputWithContext(context.Background())
}

func (i *LifecycleStageAttachManagedInstancesManagement) ToLifecycleStageAttachManagedInstancesManagementOutputWithContext(ctx context.Context) LifecycleStageAttachManagedInstancesManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecycleStageAttachManagedInstancesManagementOutput)
}

// LifecycleStageAttachManagedInstancesManagementArrayInput is an input type that accepts LifecycleStageAttachManagedInstancesManagementArray and LifecycleStageAttachManagedInstancesManagementArrayOutput values.
// You can construct a concrete instance of `LifecycleStageAttachManagedInstancesManagementArrayInput` via:
//
//	LifecycleStageAttachManagedInstancesManagementArray{ LifecycleStageAttachManagedInstancesManagementArgs{...} }
type LifecycleStageAttachManagedInstancesManagementArrayInput interface {
	pulumi.Input

	ToLifecycleStageAttachManagedInstancesManagementArrayOutput() LifecycleStageAttachManagedInstancesManagementArrayOutput
	ToLifecycleStageAttachManagedInstancesManagementArrayOutputWithContext(context.Context) LifecycleStageAttachManagedInstancesManagementArrayOutput
}

type LifecycleStageAttachManagedInstancesManagementArray []LifecycleStageAttachManagedInstancesManagementInput

func (LifecycleStageAttachManagedInstancesManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LifecycleStageAttachManagedInstancesManagement)(nil)).Elem()
}

func (i LifecycleStageAttachManagedInstancesManagementArray) ToLifecycleStageAttachManagedInstancesManagementArrayOutput() LifecycleStageAttachManagedInstancesManagementArrayOutput {
	return i.ToLifecycleStageAttachManagedInstancesManagementArrayOutputWithContext(context.Background())
}

func (i LifecycleStageAttachManagedInstancesManagementArray) ToLifecycleStageAttachManagedInstancesManagementArrayOutputWithContext(ctx context.Context) LifecycleStageAttachManagedInstancesManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecycleStageAttachManagedInstancesManagementArrayOutput)
}

// LifecycleStageAttachManagedInstancesManagementMapInput is an input type that accepts LifecycleStageAttachManagedInstancesManagementMap and LifecycleStageAttachManagedInstancesManagementMapOutput values.
// You can construct a concrete instance of `LifecycleStageAttachManagedInstancesManagementMapInput` via:
//
//	LifecycleStageAttachManagedInstancesManagementMap{ "key": LifecycleStageAttachManagedInstancesManagementArgs{...} }
type LifecycleStageAttachManagedInstancesManagementMapInput interface {
	pulumi.Input

	ToLifecycleStageAttachManagedInstancesManagementMapOutput() LifecycleStageAttachManagedInstancesManagementMapOutput
	ToLifecycleStageAttachManagedInstancesManagementMapOutputWithContext(context.Context) LifecycleStageAttachManagedInstancesManagementMapOutput
}

type LifecycleStageAttachManagedInstancesManagementMap map[string]LifecycleStageAttachManagedInstancesManagementInput

func (LifecycleStageAttachManagedInstancesManagementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LifecycleStageAttachManagedInstancesManagement)(nil)).Elem()
}

func (i LifecycleStageAttachManagedInstancesManagementMap) ToLifecycleStageAttachManagedInstancesManagementMapOutput() LifecycleStageAttachManagedInstancesManagementMapOutput {
	return i.ToLifecycleStageAttachManagedInstancesManagementMapOutputWithContext(context.Background())
}

func (i LifecycleStageAttachManagedInstancesManagementMap) ToLifecycleStageAttachManagedInstancesManagementMapOutputWithContext(ctx context.Context) LifecycleStageAttachManagedInstancesManagementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecycleStageAttachManagedInstancesManagementMapOutput)
}

type LifecycleStageAttachManagedInstancesManagementOutput struct{ *pulumi.OutputState }

func (LifecycleStageAttachManagedInstancesManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LifecycleStageAttachManagedInstancesManagement)(nil)).Elem()
}

func (o LifecycleStageAttachManagedInstancesManagementOutput) ToLifecycleStageAttachManagedInstancesManagementOutput() LifecycleStageAttachManagedInstancesManagementOutput {
	return o
}

func (o LifecycleStageAttachManagedInstancesManagementOutput) ToLifecycleStageAttachManagedInstancesManagementOutputWithContext(ctx context.Context) LifecycleStageAttachManagedInstancesManagementOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle stage.
func (o LifecycleStageAttachManagedInstancesManagementOutput) LifecycleStageId() pulumi.StringOutput {
	return o.ApplyT(func(v *LifecycleStageAttachManagedInstancesManagement) pulumi.StringOutput { return v.LifecycleStageId }).(pulumi.StringOutput)
}

// The details about the managed instances.
func (o LifecycleStageAttachManagedInstancesManagementOutput) ManagedInstanceDetails() LifecycleStageAttachManagedInstancesManagementManagedInstanceDetailsOutput {
	return o.ApplyT(func(v *LifecycleStageAttachManagedInstancesManagement) LifecycleStageAttachManagedInstancesManagementManagedInstanceDetailsOutput {
		return v.ManagedInstanceDetails
	}).(LifecycleStageAttachManagedInstancesManagementManagedInstanceDetailsOutput)
}

type LifecycleStageAttachManagedInstancesManagementArrayOutput struct{ *pulumi.OutputState }

func (LifecycleStageAttachManagedInstancesManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LifecycleStageAttachManagedInstancesManagement)(nil)).Elem()
}

func (o LifecycleStageAttachManagedInstancesManagementArrayOutput) ToLifecycleStageAttachManagedInstancesManagementArrayOutput() LifecycleStageAttachManagedInstancesManagementArrayOutput {
	return o
}

func (o LifecycleStageAttachManagedInstancesManagementArrayOutput) ToLifecycleStageAttachManagedInstancesManagementArrayOutputWithContext(ctx context.Context) LifecycleStageAttachManagedInstancesManagementArrayOutput {
	return o
}

func (o LifecycleStageAttachManagedInstancesManagementArrayOutput) Index(i pulumi.IntInput) LifecycleStageAttachManagedInstancesManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LifecycleStageAttachManagedInstancesManagement {
		return vs[0].([]*LifecycleStageAttachManagedInstancesManagement)[vs[1].(int)]
	}).(LifecycleStageAttachManagedInstancesManagementOutput)
}

type LifecycleStageAttachManagedInstancesManagementMapOutput struct{ *pulumi.OutputState }

func (LifecycleStageAttachManagedInstancesManagementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LifecycleStageAttachManagedInstancesManagement)(nil)).Elem()
}

func (o LifecycleStageAttachManagedInstancesManagementMapOutput) ToLifecycleStageAttachManagedInstancesManagementMapOutput() LifecycleStageAttachManagedInstancesManagementMapOutput {
	return o
}

func (o LifecycleStageAttachManagedInstancesManagementMapOutput) ToLifecycleStageAttachManagedInstancesManagementMapOutputWithContext(ctx context.Context) LifecycleStageAttachManagedInstancesManagementMapOutput {
	return o
}

func (o LifecycleStageAttachManagedInstancesManagementMapOutput) MapIndex(k pulumi.StringInput) LifecycleStageAttachManagedInstancesManagementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LifecycleStageAttachManagedInstancesManagement {
		return vs[0].(map[string]*LifecycleStageAttachManagedInstancesManagement)[vs[1].(string)]
	}).(LifecycleStageAttachManagedInstancesManagementOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LifecycleStageAttachManagedInstancesManagementInput)(nil)).Elem(), &LifecycleStageAttachManagedInstancesManagement{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecycleStageAttachManagedInstancesManagementArrayInput)(nil)).Elem(), LifecycleStageAttachManagedInstancesManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecycleStageAttachManagedInstancesManagementMapInput)(nil)).Elem(), LifecycleStageAttachManagedInstancesManagementMap{})
	pulumi.RegisterOutputType(LifecycleStageAttachManagedInstancesManagementOutput{})
	pulumi.RegisterOutputType(LifecycleStageAttachManagedInstancesManagementArrayOutput{})
	pulumi.RegisterOutputType(LifecycleStageAttachManagedInstancesManagementMapOutput{})
}
