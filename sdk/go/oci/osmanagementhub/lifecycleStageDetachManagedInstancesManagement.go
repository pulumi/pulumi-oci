// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Lifecycle Stage Detach Managed Instances Management resource in Oracle Cloud Infrastructure Os Management Hub service.
//
// Detaches (removes) a managed instance from a lifecycle stage.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/OsManagementHub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := OsManagementHub.NewLifecycleStageDetachManagedInstancesManagement(ctx, "test_lifecycle_stage_detach_managed_instances_management", &OsManagementHub.LifecycleStageDetachManagedInstancesManagementArgs{
//				LifecycleStageId: pulumi.Any(testLifecycleStage.Id),
//				ManagedInstanceDetails: &osmanagementhub.LifecycleStageDetachManagedInstancesManagementManagedInstanceDetailsArgs{
//					ManagedInstances: pulumi.Any(lifecycleStageDetachManagedInstancesManagementManagedInstanceDetailsManagedInstances),
//					WorkRequestDetails: &osmanagementhub.LifecycleStageDetachManagedInstancesManagementManagedInstanceDetailsWorkRequestDetailsArgs{
//						Description: pulumi.Any(lifecycleStageDetachManagedInstancesManagementManagedInstanceDetailsWorkRequestDetailsDescription),
//						DisplayName: pulumi.Any(lifecycleStageDetachManagedInstancesManagementManagedInstanceDetailsWorkRequestDetailsDisplayName),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// LifecycleStageDetachManagedInstancesManagement can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:OsManagementHub/lifecycleStageDetachManagedInstancesManagement:LifecycleStageDetachManagedInstancesManagement test_lifecycle_stage_detach_managed_instances_management "id"
// ```
type LifecycleStageDetachManagedInstancesManagement struct {
	pulumi.CustomResourceState

	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle stage.
	LifecycleStageId pulumi.StringOutput `pulumi:"lifecycleStageId"`
	// The details about the managed instances.
	ManagedInstanceDetails LifecycleStageDetachManagedInstancesManagementManagedInstanceDetailsOutput `pulumi:"managedInstanceDetails"`
}

// NewLifecycleStageDetachManagedInstancesManagement registers a new resource with the given unique name, arguments, and options.
func NewLifecycleStageDetachManagedInstancesManagement(ctx *pulumi.Context,
	name string, args *LifecycleStageDetachManagedInstancesManagementArgs, opts ...pulumi.ResourceOption) (*LifecycleStageDetachManagedInstancesManagement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.LifecycleStageId == nil {
		return nil, errors.New("invalid value for required argument 'LifecycleStageId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LifecycleStageDetachManagedInstancesManagement
	err := ctx.RegisterResource("oci:OsManagementHub/lifecycleStageDetachManagedInstancesManagement:LifecycleStageDetachManagedInstancesManagement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLifecycleStageDetachManagedInstancesManagement gets an existing LifecycleStageDetachManagedInstancesManagement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLifecycleStageDetachManagedInstancesManagement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LifecycleStageDetachManagedInstancesManagementState, opts ...pulumi.ResourceOption) (*LifecycleStageDetachManagedInstancesManagement, error) {
	var resource LifecycleStageDetachManagedInstancesManagement
	err := ctx.ReadResource("oci:OsManagementHub/lifecycleStageDetachManagedInstancesManagement:LifecycleStageDetachManagedInstancesManagement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LifecycleStageDetachManagedInstancesManagement resources.
type lifecycleStageDetachManagedInstancesManagementState struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle stage.
	LifecycleStageId *string `pulumi:"lifecycleStageId"`
	// The details about the managed instances.
	ManagedInstanceDetails *LifecycleStageDetachManagedInstancesManagementManagedInstanceDetails `pulumi:"managedInstanceDetails"`
}

type LifecycleStageDetachManagedInstancesManagementState struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle stage.
	LifecycleStageId pulumi.StringPtrInput
	// The details about the managed instances.
	ManagedInstanceDetails LifecycleStageDetachManagedInstancesManagementManagedInstanceDetailsPtrInput
}

func (LifecycleStageDetachManagedInstancesManagementState) ElementType() reflect.Type {
	return reflect.TypeOf((*lifecycleStageDetachManagedInstancesManagementState)(nil)).Elem()
}

type lifecycleStageDetachManagedInstancesManagementArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle stage.
	LifecycleStageId string `pulumi:"lifecycleStageId"`
	// The details about the managed instances.
	ManagedInstanceDetails *LifecycleStageDetachManagedInstancesManagementManagedInstanceDetails `pulumi:"managedInstanceDetails"`
}

// The set of arguments for constructing a LifecycleStageDetachManagedInstancesManagement resource.
type LifecycleStageDetachManagedInstancesManagementArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle stage.
	LifecycleStageId pulumi.StringInput
	// The details about the managed instances.
	ManagedInstanceDetails LifecycleStageDetachManagedInstancesManagementManagedInstanceDetailsPtrInput
}

func (LifecycleStageDetachManagedInstancesManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lifecycleStageDetachManagedInstancesManagementArgs)(nil)).Elem()
}

type LifecycleStageDetachManagedInstancesManagementInput interface {
	pulumi.Input

	ToLifecycleStageDetachManagedInstancesManagementOutput() LifecycleStageDetachManagedInstancesManagementOutput
	ToLifecycleStageDetachManagedInstancesManagementOutputWithContext(ctx context.Context) LifecycleStageDetachManagedInstancesManagementOutput
}

func (*LifecycleStageDetachManagedInstancesManagement) ElementType() reflect.Type {
	return reflect.TypeOf((**LifecycleStageDetachManagedInstancesManagement)(nil)).Elem()
}

func (i *LifecycleStageDetachManagedInstancesManagement) ToLifecycleStageDetachManagedInstancesManagementOutput() LifecycleStageDetachManagedInstancesManagementOutput {
	return i.ToLifecycleStageDetachManagedInstancesManagementOutputWithContext(context.Background())
}

func (i *LifecycleStageDetachManagedInstancesManagement) ToLifecycleStageDetachManagedInstancesManagementOutputWithContext(ctx context.Context) LifecycleStageDetachManagedInstancesManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecycleStageDetachManagedInstancesManagementOutput)
}

// LifecycleStageDetachManagedInstancesManagementArrayInput is an input type that accepts LifecycleStageDetachManagedInstancesManagementArray and LifecycleStageDetachManagedInstancesManagementArrayOutput values.
// You can construct a concrete instance of `LifecycleStageDetachManagedInstancesManagementArrayInput` via:
//
//	LifecycleStageDetachManagedInstancesManagementArray{ LifecycleStageDetachManagedInstancesManagementArgs{...} }
type LifecycleStageDetachManagedInstancesManagementArrayInput interface {
	pulumi.Input

	ToLifecycleStageDetachManagedInstancesManagementArrayOutput() LifecycleStageDetachManagedInstancesManagementArrayOutput
	ToLifecycleStageDetachManagedInstancesManagementArrayOutputWithContext(context.Context) LifecycleStageDetachManagedInstancesManagementArrayOutput
}

type LifecycleStageDetachManagedInstancesManagementArray []LifecycleStageDetachManagedInstancesManagementInput

func (LifecycleStageDetachManagedInstancesManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LifecycleStageDetachManagedInstancesManagement)(nil)).Elem()
}

func (i LifecycleStageDetachManagedInstancesManagementArray) ToLifecycleStageDetachManagedInstancesManagementArrayOutput() LifecycleStageDetachManagedInstancesManagementArrayOutput {
	return i.ToLifecycleStageDetachManagedInstancesManagementArrayOutputWithContext(context.Background())
}

func (i LifecycleStageDetachManagedInstancesManagementArray) ToLifecycleStageDetachManagedInstancesManagementArrayOutputWithContext(ctx context.Context) LifecycleStageDetachManagedInstancesManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecycleStageDetachManagedInstancesManagementArrayOutput)
}

// LifecycleStageDetachManagedInstancesManagementMapInput is an input type that accepts LifecycleStageDetachManagedInstancesManagementMap and LifecycleStageDetachManagedInstancesManagementMapOutput values.
// You can construct a concrete instance of `LifecycleStageDetachManagedInstancesManagementMapInput` via:
//
//	LifecycleStageDetachManagedInstancesManagementMap{ "key": LifecycleStageDetachManagedInstancesManagementArgs{...} }
type LifecycleStageDetachManagedInstancesManagementMapInput interface {
	pulumi.Input

	ToLifecycleStageDetachManagedInstancesManagementMapOutput() LifecycleStageDetachManagedInstancesManagementMapOutput
	ToLifecycleStageDetachManagedInstancesManagementMapOutputWithContext(context.Context) LifecycleStageDetachManagedInstancesManagementMapOutput
}

type LifecycleStageDetachManagedInstancesManagementMap map[string]LifecycleStageDetachManagedInstancesManagementInput

func (LifecycleStageDetachManagedInstancesManagementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LifecycleStageDetachManagedInstancesManagement)(nil)).Elem()
}

func (i LifecycleStageDetachManagedInstancesManagementMap) ToLifecycleStageDetachManagedInstancesManagementMapOutput() LifecycleStageDetachManagedInstancesManagementMapOutput {
	return i.ToLifecycleStageDetachManagedInstancesManagementMapOutputWithContext(context.Background())
}

func (i LifecycleStageDetachManagedInstancesManagementMap) ToLifecycleStageDetachManagedInstancesManagementMapOutputWithContext(ctx context.Context) LifecycleStageDetachManagedInstancesManagementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecycleStageDetachManagedInstancesManagementMapOutput)
}

type LifecycleStageDetachManagedInstancesManagementOutput struct{ *pulumi.OutputState }

func (LifecycleStageDetachManagedInstancesManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LifecycleStageDetachManagedInstancesManagement)(nil)).Elem()
}

func (o LifecycleStageDetachManagedInstancesManagementOutput) ToLifecycleStageDetachManagedInstancesManagementOutput() LifecycleStageDetachManagedInstancesManagementOutput {
	return o
}

func (o LifecycleStageDetachManagedInstancesManagementOutput) ToLifecycleStageDetachManagedInstancesManagementOutputWithContext(ctx context.Context) LifecycleStageDetachManagedInstancesManagementOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle stage.
func (o LifecycleStageDetachManagedInstancesManagementOutput) LifecycleStageId() pulumi.StringOutput {
	return o.ApplyT(func(v *LifecycleStageDetachManagedInstancesManagement) pulumi.StringOutput { return v.LifecycleStageId }).(pulumi.StringOutput)
}

// The details about the managed instances.
func (o LifecycleStageDetachManagedInstancesManagementOutput) ManagedInstanceDetails() LifecycleStageDetachManagedInstancesManagementManagedInstanceDetailsOutput {
	return o.ApplyT(func(v *LifecycleStageDetachManagedInstancesManagement) LifecycleStageDetachManagedInstancesManagementManagedInstanceDetailsOutput {
		return v.ManagedInstanceDetails
	}).(LifecycleStageDetachManagedInstancesManagementManagedInstanceDetailsOutput)
}

type LifecycleStageDetachManagedInstancesManagementArrayOutput struct{ *pulumi.OutputState }

func (LifecycleStageDetachManagedInstancesManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LifecycleStageDetachManagedInstancesManagement)(nil)).Elem()
}

func (o LifecycleStageDetachManagedInstancesManagementArrayOutput) ToLifecycleStageDetachManagedInstancesManagementArrayOutput() LifecycleStageDetachManagedInstancesManagementArrayOutput {
	return o
}

func (o LifecycleStageDetachManagedInstancesManagementArrayOutput) ToLifecycleStageDetachManagedInstancesManagementArrayOutputWithContext(ctx context.Context) LifecycleStageDetachManagedInstancesManagementArrayOutput {
	return o
}

func (o LifecycleStageDetachManagedInstancesManagementArrayOutput) Index(i pulumi.IntInput) LifecycleStageDetachManagedInstancesManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LifecycleStageDetachManagedInstancesManagement {
		return vs[0].([]*LifecycleStageDetachManagedInstancesManagement)[vs[1].(int)]
	}).(LifecycleStageDetachManagedInstancesManagementOutput)
}

type LifecycleStageDetachManagedInstancesManagementMapOutput struct{ *pulumi.OutputState }

func (LifecycleStageDetachManagedInstancesManagementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LifecycleStageDetachManagedInstancesManagement)(nil)).Elem()
}

func (o LifecycleStageDetachManagedInstancesManagementMapOutput) ToLifecycleStageDetachManagedInstancesManagementMapOutput() LifecycleStageDetachManagedInstancesManagementMapOutput {
	return o
}

func (o LifecycleStageDetachManagedInstancesManagementMapOutput) ToLifecycleStageDetachManagedInstancesManagementMapOutputWithContext(ctx context.Context) LifecycleStageDetachManagedInstancesManagementMapOutput {
	return o
}

func (o LifecycleStageDetachManagedInstancesManagementMapOutput) MapIndex(k pulumi.StringInput) LifecycleStageDetachManagedInstancesManagementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LifecycleStageDetachManagedInstancesManagement {
		return vs[0].(map[string]*LifecycleStageDetachManagedInstancesManagement)[vs[1].(string)]
	}).(LifecycleStageDetachManagedInstancesManagementOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LifecycleStageDetachManagedInstancesManagementInput)(nil)).Elem(), &LifecycleStageDetachManagedInstancesManagement{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecycleStageDetachManagedInstancesManagementArrayInput)(nil)).Elem(), LifecycleStageDetachManagedInstancesManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecycleStageDetachManagedInstancesManagementMapInput)(nil)).Elem(), LifecycleStageDetachManagedInstancesManagementMap{})
	pulumi.RegisterOutputType(LifecycleStageDetachManagedInstancesManagementOutput{})
	pulumi.RegisterOutputType(LifecycleStageDetachManagedInstancesManagementArrayOutput{})
	pulumi.RegisterOutputType(LifecycleStageDetachManagedInstancesManagementMapOutput{})
}
