// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Lifecycle Stage Promote Software Source Management resource in Oracle Cloud Infrastructure Os Management Hub service.
//
// Updates the versioned custom software source content to the specified lifecycle stage.
// A versioned custom software source OCID (softwareSourceId) is required when promoting content to the first lifecycle stage. You must promote content to the first stage before promoting to subsequent stages, otherwise the service returns an error.
// The softwareSourceId is optional when promoting content to the second, third, forth, or fifth stages. If you provide a softwareSourceId, the service validates that it matches the softwareSourceId of the previous stage. If it does not match, the service returns an error. If you don't provide a softwareSourceId, the service promotes the versioned software source from the previous lifecycle stage. If the previous lifecycle stage has no software source, the service returns an error.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/osmanagementhub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := osmanagementhub.NewLifecycleStagePromoteSoftwareSourceManagement(ctx, "test_lifecycle_stage_promote_software_source_management", &osmanagementhub.LifecycleStagePromoteSoftwareSourceManagementArgs{
//				LifecycleStageId: pulumi.Any(testLifecycleStage.Id),
//				SoftwareSourceId: pulumi.Any(testSoftwareSource.Id),
//				WorkRequestDetails: &osmanagementhub.LifecycleStagePromoteSoftwareSourceManagementWorkRequestDetailsArgs{
//					Description: pulumi.Any(lifecycleStagePromoteSoftwareSourceManagementWorkRequestDetailsDescription),
//					DisplayName: pulumi.Any(lifecycleStagePromoteSoftwareSourceManagementWorkRequestDetailsDisplayName),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// LifecycleStagePromoteSoftwareSourceManagement can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:OsManagementHub/lifecycleStagePromoteSoftwareSourceManagement:LifecycleStagePromoteSoftwareSourceManagement test_lifecycle_stage_promote_software_source_management "id"
// ```
type LifecycleStagePromoteSoftwareSourceManagement struct {
	pulumi.CustomResourceState

	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle stage.
	LifecycleStageId pulumi.StringOutput `pulumi:"lifecycleStageId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source. This filter returns resources associated with this software source.
	SoftwareSourceId pulumi.StringOutput `pulumi:"softwareSourceId"`
	// Provides the name and description of the job.
	WorkRequestDetails LifecycleStagePromoteSoftwareSourceManagementWorkRequestDetailsOutput `pulumi:"workRequestDetails"`
}

// NewLifecycleStagePromoteSoftwareSourceManagement registers a new resource with the given unique name, arguments, and options.
func NewLifecycleStagePromoteSoftwareSourceManagement(ctx *pulumi.Context,
	name string, args *LifecycleStagePromoteSoftwareSourceManagementArgs, opts ...pulumi.ResourceOption) (*LifecycleStagePromoteSoftwareSourceManagement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.LifecycleStageId == nil {
		return nil, errors.New("invalid value for required argument 'LifecycleStageId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LifecycleStagePromoteSoftwareSourceManagement
	err := ctx.RegisterResource("oci:OsManagementHub/lifecycleStagePromoteSoftwareSourceManagement:LifecycleStagePromoteSoftwareSourceManagement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLifecycleStagePromoteSoftwareSourceManagement gets an existing LifecycleStagePromoteSoftwareSourceManagement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLifecycleStagePromoteSoftwareSourceManagement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LifecycleStagePromoteSoftwareSourceManagementState, opts ...pulumi.ResourceOption) (*LifecycleStagePromoteSoftwareSourceManagement, error) {
	var resource LifecycleStagePromoteSoftwareSourceManagement
	err := ctx.ReadResource("oci:OsManagementHub/lifecycleStagePromoteSoftwareSourceManagement:LifecycleStagePromoteSoftwareSourceManagement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LifecycleStagePromoteSoftwareSourceManagement resources.
type lifecycleStagePromoteSoftwareSourceManagementState struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle stage.
	LifecycleStageId *string `pulumi:"lifecycleStageId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source. This filter returns resources associated with this software source.
	SoftwareSourceId *string `pulumi:"softwareSourceId"`
	// Provides the name and description of the job.
	WorkRequestDetails *LifecycleStagePromoteSoftwareSourceManagementWorkRequestDetails `pulumi:"workRequestDetails"`
}

type LifecycleStagePromoteSoftwareSourceManagementState struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle stage.
	LifecycleStageId pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source. This filter returns resources associated with this software source.
	SoftwareSourceId pulumi.StringPtrInput
	// Provides the name and description of the job.
	WorkRequestDetails LifecycleStagePromoteSoftwareSourceManagementWorkRequestDetailsPtrInput
}

func (LifecycleStagePromoteSoftwareSourceManagementState) ElementType() reflect.Type {
	return reflect.TypeOf((*lifecycleStagePromoteSoftwareSourceManagementState)(nil)).Elem()
}

type lifecycleStagePromoteSoftwareSourceManagementArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle stage.
	LifecycleStageId string `pulumi:"lifecycleStageId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source. This filter returns resources associated with this software source.
	SoftwareSourceId *string `pulumi:"softwareSourceId"`
	// Provides the name and description of the job.
	WorkRequestDetails *LifecycleStagePromoteSoftwareSourceManagementWorkRequestDetails `pulumi:"workRequestDetails"`
}

// The set of arguments for constructing a LifecycleStagePromoteSoftwareSourceManagement resource.
type LifecycleStagePromoteSoftwareSourceManagementArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle stage.
	LifecycleStageId pulumi.StringInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source. This filter returns resources associated with this software source.
	SoftwareSourceId pulumi.StringPtrInput
	// Provides the name and description of the job.
	WorkRequestDetails LifecycleStagePromoteSoftwareSourceManagementWorkRequestDetailsPtrInput
}

func (LifecycleStagePromoteSoftwareSourceManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lifecycleStagePromoteSoftwareSourceManagementArgs)(nil)).Elem()
}

type LifecycleStagePromoteSoftwareSourceManagementInput interface {
	pulumi.Input

	ToLifecycleStagePromoteSoftwareSourceManagementOutput() LifecycleStagePromoteSoftwareSourceManagementOutput
	ToLifecycleStagePromoteSoftwareSourceManagementOutputWithContext(ctx context.Context) LifecycleStagePromoteSoftwareSourceManagementOutput
}

func (*LifecycleStagePromoteSoftwareSourceManagement) ElementType() reflect.Type {
	return reflect.TypeOf((**LifecycleStagePromoteSoftwareSourceManagement)(nil)).Elem()
}

func (i *LifecycleStagePromoteSoftwareSourceManagement) ToLifecycleStagePromoteSoftwareSourceManagementOutput() LifecycleStagePromoteSoftwareSourceManagementOutput {
	return i.ToLifecycleStagePromoteSoftwareSourceManagementOutputWithContext(context.Background())
}

func (i *LifecycleStagePromoteSoftwareSourceManagement) ToLifecycleStagePromoteSoftwareSourceManagementOutputWithContext(ctx context.Context) LifecycleStagePromoteSoftwareSourceManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecycleStagePromoteSoftwareSourceManagementOutput)
}

// LifecycleStagePromoteSoftwareSourceManagementArrayInput is an input type that accepts LifecycleStagePromoteSoftwareSourceManagementArray and LifecycleStagePromoteSoftwareSourceManagementArrayOutput values.
// You can construct a concrete instance of `LifecycleStagePromoteSoftwareSourceManagementArrayInput` via:
//
//	LifecycleStagePromoteSoftwareSourceManagementArray{ LifecycleStagePromoteSoftwareSourceManagementArgs{...} }
type LifecycleStagePromoteSoftwareSourceManagementArrayInput interface {
	pulumi.Input

	ToLifecycleStagePromoteSoftwareSourceManagementArrayOutput() LifecycleStagePromoteSoftwareSourceManagementArrayOutput
	ToLifecycleStagePromoteSoftwareSourceManagementArrayOutputWithContext(context.Context) LifecycleStagePromoteSoftwareSourceManagementArrayOutput
}

type LifecycleStagePromoteSoftwareSourceManagementArray []LifecycleStagePromoteSoftwareSourceManagementInput

func (LifecycleStagePromoteSoftwareSourceManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LifecycleStagePromoteSoftwareSourceManagement)(nil)).Elem()
}

func (i LifecycleStagePromoteSoftwareSourceManagementArray) ToLifecycleStagePromoteSoftwareSourceManagementArrayOutput() LifecycleStagePromoteSoftwareSourceManagementArrayOutput {
	return i.ToLifecycleStagePromoteSoftwareSourceManagementArrayOutputWithContext(context.Background())
}

func (i LifecycleStagePromoteSoftwareSourceManagementArray) ToLifecycleStagePromoteSoftwareSourceManagementArrayOutputWithContext(ctx context.Context) LifecycleStagePromoteSoftwareSourceManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecycleStagePromoteSoftwareSourceManagementArrayOutput)
}

// LifecycleStagePromoteSoftwareSourceManagementMapInput is an input type that accepts LifecycleStagePromoteSoftwareSourceManagementMap and LifecycleStagePromoteSoftwareSourceManagementMapOutput values.
// You can construct a concrete instance of `LifecycleStagePromoteSoftwareSourceManagementMapInput` via:
//
//	LifecycleStagePromoteSoftwareSourceManagementMap{ "key": LifecycleStagePromoteSoftwareSourceManagementArgs{...} }
type LifecycleStagePromoteSoftwareSourceManagementMapInput interface {
	pulumi.Input

	ToLifecycleStagePromoteSoftwareSourceManagementMapOutput() LifecycleStagePromoteSoftwareSourceManagementMapOutput
	ToLifecycleStagePromoteSoftwareSourceManagementMapOutputWithContext(context.Context) LifecycleStagePromoteSoftwareSourceManagementMapOutput
}

type LifecycleStagePromoteSoftwareSourceManagementMap map[string]LifecycleStagePromoteSoftwareSourceManagementInput

func (LifecycleStagePromoteSoftwareSourceManagementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LifecycleStagePromoteSoftwareSourceManagement)(nil)).Elem()
}

func (i LifecycleStagePromoteSoftwareSourceManagementMap) ToLifecycleStagePromoteSoftwareSourceManagementMapOutput() LifecycleStagePromoteSoftwareSourceManagementMapOutput {
	return i.ToLifecycleStagePromoteSoftwareSourceManagementMapOutputWithContext(context.Background())
}

func (i LifecycleStagePromoteSoftwareSourceManagementMap) ToLifecycleStagePromoteSoftwareSourceManagementMapOutputWithContext(ctx context.Context) LifecycleStagePromoteSoftwareSourceManagementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecycleStagePromoteSoftwareSourceManagementMapOutput)
}

type LifecycleStagePromoteSoftwareSourceManagementOutput struct{ *pulumi.OutputState }

func (LifecycleStagePromoteSoftwareSourceManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LifecycleStagePromoteSoftwareSourceManagement)(nil)).Elem()
}

func (o LifecycleStagePromoteSoftwareSourceManagementOutput) ToLifecycleStagePromoteSoftwareSourceManagementOutput() LifecycleStagePromoteSoftwareSourceManagementOutput {
	return o
}

func (o LifecycleStagePromoteSoftwareSourceManagementOutput) ToLifecycleStagePromoteSoftwareSourceManagementOutputWithContext(ctx context.Context) LifecycleStagePromoteSoftwareSourceManagementOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle stage.
func (o LifecycleStagePromoteSoftwareSourceManagementOutput) LifecycleStageId() pulumi.StringOutput {
	return o.ApplyT(func(v *LifecycleStagePromoteSoftwareSourceManagement) pulumi.StringOutput { return v.LifecycleStageId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source. This filter returns resources associated with this software source.
func (o LifecycleStagePromoteSoftwareSourceManagementOutput) SoftwareSourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *LifecycleStagePromoteSoftwareSourceManagement) pulumi.StringOutput { return v.SoftwareSourceId }).(pulumi.StringOutput)
}

// Provides the name and description of the job.
func (o LifecycleStagePromoteSoftwareSourceManagementOutput) WorkRequestDetails() LifecycleStagePromoteSoftwareSourceManagementWorkRequestDetailsOutput {
	return o.ApplyT(func(v *LifecycleStagePromoteSoftwareSourceManagement) LifecycleStagePromoteSoftwareSourceManagementWorkRequestDetailsOutput {
		return v.WorkRequestDetails
	}).(LifecycleStagePromoteSoftwareSourceManagementWorkRequestDetailsOutput)
}

type LifecycleStagePromoteSoftwareSourceManagementArrayOutput struct{ *pulumi.OutputState }

func (LifecycleStagePromoteSoftwareSourceManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LifecycleStagePromoteSoftwareSourceManagement)(nil)).Elem()
}

func (o LifecycleStagePromoteSoftwareSourceManagementArrayOutput) ToLifecycleStagePromoteSoftwareSourceManagementArrayOutput() LifecycleStagePromoteSoftwareSourceManagementArrayOutput {
	return o
}

func (o LifecycleStagePromoteSoftwareSourceManagementArrayOutput) ToLifecycleStagePromoteSoftwareSourceManagementArrayOutputWithContext(ctx context.Context) LifecycleStagePromoteSoftwareSourceManagementArrayOutput {
	return o
}

func (o LifecycleStagePromoteSoftwareSourceManagementArrayOutput) Index(i pulumi.IntInput) LifecycleStagePromoteSoftwareSourceManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LifecycleStagePromoteSoftwareSourceManagement {
		return vs[0].([]*LifecycleStagePromoteSoftwareSourceManagement)[vs[1].(int)]
	}).(LifecycleStagePromoteSoftwareSourceManagementOutput)
}

type LifecycleStagePromoteSoftwareSourceManagementMapOutput struct{ *pulumi.OutputState }

func (LifecycleStagePromoteSoftwareSourceManagementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LifecycleStagePromoteSoftwareSourceManagement)(nil)).Elem()
}

func (o LifecycleStagePromoteSoftwareSourceManagementMapOutput) ToLifecycleStagePromoteSoftwareSourceManagementMapOutput() LifecycleStagePromoteSoftwareSourceManagementMapOutput {
	return o
}

func (o LifecycleStagePromoteSoftwareSourceManagementMapOutput) ToLifecycleStagePromoteSoftwareSourceManagementMapOutputWithContext(ctx context.Context) LifecycleStagePromoteSoftwareSourceManagementMapOutput {
	return o
}

func (o LifecycleStagePromoteSoftwareSourceManagementMapOutput) MapIndex(k pulumi.StringInput) LifecycleStagePromoteSoftwareSourceManagementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LifecycleStagePromoteSoftwareSourceManagement {
		return vs[0].(map[string]*LifecycleStagePromoteSoftwareSourceManagement)[vs[1].(string)]
	}).(LifecycleStagePromoteSoftwareSourceManagementOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LifecycleStagePromoteSoftwareSourceManagementInput)(nil)).Elem(), &LifecycleStagePromoteSoftwareSourceManagement{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecycleStagePromoteSoftwareSourceManagementArrayInput)(nil)).Elem(), LifecycleStagePromoteSoftwareSourceManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecycleStagePromoteSoftwareSourceManagementMapInput)(nil)).Elem(), LifecycleStagePromoteSoftwareSourceManagementMap{})
	pulumi.RegisterOutputType(LifecycleStagePromoteSoftwareSourceManagementOutput{})
	pulumi.RegisterOutputType(LifecycleStagePromoteSoftwareSourceManagementArrayOutput{})
	pulumi.RegisterOutputType(LifecycleStagePromoteSoftwareSourceManagementMapOutput{})
}
