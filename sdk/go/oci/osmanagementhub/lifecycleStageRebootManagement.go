// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Lifecycle Stage Reboot Management resource in Oracle Cloud Infrastructure Os Management Hub service.
//
// Reboots all managed instances in the specified lifecycle stage.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/osmanagementhub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := osmanagementhub.NewLifecycleStageRebootManagement(ctx, "test_lifecycle_stage_reboot_management", &osmanagementhub.LifecycleStageRebootManagementArgs{
//				LifecycleStageId:    pulumi.Any(testLifecycleStage.Id),
//				RebootTimeoutInMins: pulumi.Any(lifecycleStageRebootManagementRebootTimeoutInMins),
//				WorkRequestDetails: &osmanagementhub.LifecycleStageRebootManagementWorkRequestDetailsArgs{
//					Description: pulumi.Any(lifecycleStageRebootManagementWorkRequestDetailsDescription),
//					DisplayName: pulumi.Any(lifecycleStageRebootManagementWorkRequestDetailsDisplayName),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// LifecycleStageRebootManagement can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:OsManagementHub/lifecycleStageRebootManagement:LifecycleStageRebootManagement test_lifecycle_stage_reboot_management "id"
// ```
type LifecycleStageRebootManagement struct {
	pulumi.CustomResourceState

	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle stage.
	LifecycleStageId pulumi.StringOutput `pulumi:"lifecycleStageId"`
	// The number of minutes the service waits for the reboot to complete. If the instances in the stage don't reboot  within this time, the reboot job status is set to failed.
	RebootTimeoutInMins pulumi.IntOutput `pulumi:"rebootTimeoutInMins"`
	// Provides the name and description of the job.
	WorkRequestDetails LifecycleStageRebootManagementWorkRequestDetailsOutput `pulumi:"workRequestDetails"`
}

// NewLifecycleStageRebootManagement registers a new resource with the given unique name, arguments, and options.
func NewLifecycleStageRebootManagement(ctx *pulumi.Context,
	name string, args *LifecycleStageRebootManagementArgs, opts ...pulumi.ResourceOption) (*LifecycleStageRebootManagement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.LifecycleStageId == nil {
		return nil, errors.New("invalid value for required argument 'LifecycleStageId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LifecycleStageRebootManagement
	err := ctx.RegisterResource("oci:OsManagementHub/lifecycleStageRebootManagement:LifecycleStageRebootManagement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLifecycleStageRebootManagement gets an existing LifecycleStageRebootManagement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLifecycleStageRebootManagement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LifecycleStageRebootManagementState, opts ...pulumi.ResourceOption) (*LifecycleStageRebootManagement, error) {
	var resource LifecycleStageRebootManagement
	err := ctx.ReadResource("oci:OsManagementHub/lifecycleStageRebootManagement:LifecycleStageRebootManagement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LifecycleStageRebootManagement resources.
type lifecycleStageRebootManagementState struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle stage.
	LifecycleStageId *string `pulumi:"lifecycleStageId"`
	// The number of minutes the service waits for the reboot to complete. If the instances in the stage don't reboot  within this time, the reboot job status is set to failed.
	RebootTimeoutInMins *int `pulumi:"rebootTimeoutInMins"`
	// Provides the name and description of the job.
	WorkRequestDetails *LifecycleStageRebootManagementWorkRequestDetails `pulumi:"workRequestDetails"`
}

type LifecycleStageRebootManagementState struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle stage.
	LifecycleStageId pulumi.StringPtrInput
	// The number of minutes the service waits for the reboot to complete. If the instances in the stage don't reboot  within this time, the reboot job status is set to failed.
	RebootTimeoutInMins pulumi.IntPtrInput
	// Provides the name and description of the job.
	WorkRequestDetails LifecycleStageRebootManagementWorkRequestDetailsPtrInput
}

func (LifecycleStageRebootManagementState) ElementType() reflect.Type {
	return reflect.TypeOf((*lifecycleStageRebootManagementState)(nil)).Elem()
}

type lifecycleStageRebootManagementArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle stage.
	LifecycleStageId string `pulumi:"lifecycleStageId"`
	// The number of minutes the service waits for the reboot to complete. If the instances in the stage don't reboot  within this time, the reboot job status is set to failed.
	RebootTimeoutInMins *int `pulumi:"rebootTimeoutInMins"`
	// Provides the name and description of the job.
	WorkRequestDetails *LifecycleStageRebootManagementWorkRequestDetails `pulumi:"workRequestDetails"`
}

// The set of arguments for constructing a LifecycleStageRebootManagement resource.
type LifecycleStageRebootManagementArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle stage.
	LifecycleStageId pulumi.StringInput
	// The number of minutes the service waits for the reboot to complete. If the instances in the stage don't reboot  within this time, the reboot job status is set to failed.
	RebootTimeoutInMins pulumi.IntPtrInput
	// Provides the name and description of the job.
	WorkRequestDetails LifecycleStageRebootManagementWorkRequestDetailsPtrInput
}

func (LifecycleStageRebootManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lifecycleStageRebootManagementArgs)(nil)).Elem()
}

type LifecycleStageRebootManagementInput interface {
	pulumi.Input

	ToLifecycleStageRebootManagementOutput() LifecycleStageRebootManagementOutput
	ToLifecycleStageRebootManagementOutputWithContext(ctx context.Context) LifecycleStageRebootManagementOutput
}

func (*LifecycleStageRebootManagement) ElementType() reflect.Type {
	return reflect.TypeOf((**LifecycleStageRebootManagement)(nil)).Elem()
}

func (i *LifecycleStageRebootManagement) ToLifecycleStageRebootManagementOutput() LifecycleStageRebootManagementOutput {
	return i.ToLifecycleStageRebootManagementOutputWithContext(context.Background())
}

func (i *LifecycleStageRebootManagement) ToLifecycleStageRebootManagementOutputWithContext(ctx context.Context) LifecycleStageRebootManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecycleStageRebootManagementOutput)
}

// LifecycleStageRebootManagementArrayInput is an input type that accepts LifecycleStageRebootManagementArray and LifecycleStageRebootManagementArrayOutput values.
// You can construct a concrete instance of `LifecycleStageRebootManagementArrayInput` via:
//
//	LifecycleStageRebootManagementArray{ LifecycleStageRebootManagementArgs{...} }
type LifecycleStageRebootManagementArrayInput interface {
	pulumi.Input

	ToLifecycleStageRebootManagementArrayOutput() LifecycleStageRebootManagementArrayOutput
	ToLifecycleStageRebootManagementArrayOutputWithContext(context.Context) LifecycleStageRebootManagementArrayOutput
}

type LifecycleStageRebootManagementArray []LifecycleStageRebootManagementInput

func (LifecycleStageRebootManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LifecycleStageRebootManagement)(nil)).Elem()
}

func (i LifecycleStageRebootManagementArray) ToLifecycleStageRebootManagementArrayOutput() LifecycleStageRebootManagementArrayOutput {
	return i.ToLifecycleStageRebootManagementArrayOutputWithContext(context.Background())
}

func (i LifecycleStageRebootManagementArray) ToLifecycleStageRebootManagementArrayOutputWithContext(ctx context.Context) LifecycleStageRebootManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecycleStageRebootManagementArrayOutput)
}

// LifecycleStageRebootManagementMapInput is an input type that accepts LifecycleStageRebootManagementMap and LifecycleStageRebootManagementMapOutput values.
// You can construct a concrete instance of `LifecycleStageRebootManagementMapInput` via:
//
//	LifecycleStageRebootManagementMap{ "key": LifecycleStageRebootManagementArgs{...} }
type LifecycleStageRebootManagementMapInput interface {
	pulumi.Input

	ToLifecycleStageRebootManagementMapOutput() LifecycleStageRebootManagementMapOutput
	ToLifecycleStageRebootManagementMapOutputWithContext(context.Context) LifecycleStageRebootManagementMapOutput
}

type LifecycleStageRebootManagementMap map[string]LifecycleStageRebootManagementInput

func (LifecycleStageRebootManagementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LifecycleStageRebootManagement)(nil)).Elem()
}

func (i LifecycleStageRebootManagementMap) ToLifecycleStageRebootManagementMapOutput() LifecycleStageRebootManagementMapOutput {
	return i.ToLifecycleStageRebootManagementMapOutputWithContext(context.Background())
}

func (i LifecycleStageRebootManagementMap) ToLifecycleStageRebootManagementMapOutputWithContext(ctx context.Context) LifecycleStageRebootManagementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecycleStageRebootManagementMapOutput)
}

type LifecycleStageRebootManagementOutput struct{ *pulumi.OutputState }

func (LifecycleStageRebootManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LifecycleStageRebootManagement)(nil)).Elem()
}

func (o LifecycleStageRebootManagementOutput) ToLifecycleStageRebootManagementOutput() LifecycleStageRebootManagementOutput {
	return o
}

func (o LifecycleStageRebootManagementOutput) ToLifecycleStageRebootManagementOutputWithContext(ctx context.Context) LifecycleStageRebootManagementOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle stage.
func (o LifecycleStageRebootManagementOutput) LifecycleStageId() pulumi.StringOutput {
	return o.ApplyT(func(v *LifecycleStageRebootManagement) pulumi.StringOutput { return v.LifecycleStageId }).(pulumi.StringOutput)
}

// The number of minutes the service waits for the reboot to complete. If the instances in the stage don't reboot  within this time, the reboot job status is set to failed.
func (o LifecycleStageRebootManagementOutput) RebootTimeoutInMins() pulumi.IntOutput {
	return o.ApplyT(func(v *LifecycleStageRebootManagement) pulumi.IntOutput { return v.RebootTimeoutInMins }).(pulumi.IntOutput)
}

// Provides the name and description of the job.
func (o LifecycleStageRebootManagementOutput) WorkRequestDetails() LifecycleStageRebootManagementWorkRequestDetailsOutput {
	return o.ApplyT(func(v *LifecycleStageRebootManagement) LifecycleStageRebootManagementWorkRequestDetailsOutput {
		return v.WorkRequestDetails
	}).(LifecycleStageRebootManagementWorkRequestDetailsOutput)
}

type LifecycleStageRebootManagementArrayOutput struct{ *pulumi.OutputState }

func (LifecycleStageRebootManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LifecycleStageRebootManagement)(nil)).Elem()
}

func (o LifecycleStageRebootManagementArrayOutput) ToLifecycleStageRebootManagementArrayOutput() LifecycleStageRebootManagementArrayOutput {
	return o
}

func (o LifecycleStageRebootManagementArrayOutput) ToLifecycleStageRebootManagementArrayOutputWithContext(ctx context.Context) LifecycleStageRebootManagementArrayOutput {
	return o
}

func (o LifecycleStageRebootManagementArrayOutput) Index(i pulumi.IntInput) LifecycleStageRebootManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LifecycleStageRebootManagement {
		return vs[0].([]*LifecycleStageRebootManagement)[vs[1].(int)]
	}).(LifecycleStageRebootManagementOutput)
}

type LifecycleStageRebootManagementMapOutput struct{ *pulumi.OutputState }

func (LifecycleStageRebootManagementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LifecycleStageRebootManagement)(nil)).Elem()
}

func (o LifecycleStageRebootManagementMapOutput) ToLifecycleStageRebootManagementMapOutput() LifecycleStageRebootManagementMapOutput {
	return o
}

func (o LifecycleStageRebootManagementMapOutput) ToLifecycleStageRebootManagementMapOutputWithContext(ctx context.Context) LifecycleStageRebootManagementMapOutput {
	return o
}

func (o LifecycleStageRebootManagementMapOutput) MapIndex(k pulumi.StringInput) LifecycleStageRebootManagementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LifecycleStageRebootManagement {
		return vs[0].(map[string]*LifecycleStageRebootManagement)[vs[1].(string)]
	}).(LifecycleStageRebootManagementOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LifecycleStageRebootManagementInput)(nil)).Elem(), &LifecycleStageRebootManagement{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecycleStageRebootManagementArrayInput)(nil)).Elem(), LifecycleStageRebootManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecycleStageRebootManagementMapInput)(nil)).Elem(), LifecycleStageRebootManagementMap{})
	pulumi.RegisterOutputType(LifecycleStageRebootManagementOutput{})
	pulumi.RegisterOutputType(LifecycleStageRebootManagementArrayOutput{})
	pulumi.RegisterOutputType(LifecycleStageRebootManagementMapOutput{})
}
