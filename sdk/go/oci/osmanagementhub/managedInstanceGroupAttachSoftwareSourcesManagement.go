// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Managed Instance Group Attach Software Sources Management resource in Oracle Cloud Infrastructure Os Management Hub service.
//
// Attaches software sources to the specified managed instance group. The software sources must be compatible with the type of instances in the group.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/OsManagementHub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := OsManagementHub.NewManagedInstanceGroupAttachSoftwareSourcesManagement(ctx, "test_managed_instance_group_attach_software_sources_management", &OsManagementHub.ManagedInstanceGroupAttachSoftwareSourcesManagementArgs{
//				ManagedInstanceGroupId: pulumi.Any(testManagedInstanceGroup.Id),
//				SoftwareSources:        pulumi.Any(managedInstanceGroupAttachSoftwareSourcesManagementSoftwareSources),
//				WorkRequestDetails: &osmanagementhub.ManagedInstanceGroupAttachSoftwareSourcesManagementWorkRequestDetailsArgs{
//					Description: pulumi.Any(managedInstanceGroupAttachSoftwareSourcesManagementWorkRequestDetailsDescription),
//					DisplayName: pulumi.Any(managedInstanceGroupAttachSoftwareSourcesManagementWorkRequestDetailsDisplayName),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ManagedInstanceGroupAttachSoftwareSourcesManagement can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:OsManagementHub/managedInstanceGroupAttachSoftwareSourcesManagement:ManagedInstanceGroupAttachSoftwareSourcesManagement test_managed_instance_group_attach_software_sources_management "id"
// ```
type ManagedInstanceGroupAttachSoftwareSourcesManagement struct {
	pulumi.CustomResourceState

	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
	ManagedInstanceGroupId pulumi.StringOutput `pulumi:"managedInstanceGroupId"`
	// List of software source [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to attach to the group.
	SoftwareSources pulumi.StringArrayOutput `pulumi:"softwareSources"`
	// Provides the name and description of the job.
	WorkRequestDetails ManagedInstanceGroupAttachSoftwareSourcesManagementWorkRequestDetailsOutput `pulumi:"workRequestDetails"`
}

// NewManagedInstanceGroupAttachSoftwareSourcesManagement registers a new resource with the given unique name, arguments, and options.
func NewManagedInstanceGroupAttachSoftwareSourcesManagement(ctx *pulumi.Context,
	name string, args *ManagedInstanceGroupAttachSoftwareSourcesManagementArgs, opts ...pulumi.ResourceOption) (*ManagedInstanceGroupAttachSoftwareSourcesManagement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ManagedInstanceGroupId == nil {
		return nil, errors.New("invalid value for required argument 'ManagedInstanceGroupId'")
	}
	if args.SoftwareSources == nil {
		return nil, errors.New("invalid value for required argument 'SoftwareSources'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ManagedInstanceGroupAttachSoftwareSourcesManagement
	err := ctx.RegisterResource("oci:OsManagementHub/managedInstanceGroupAttachSoftwareSourcesManagement:ManagedInstanceGroupAttachSoftwareSourcesManagement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagedInstanceGroupAttachSoftwareSourcesManagement gets an existing ManagedInstanceGroupAttachSoftwareSourcesManagement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagedInstanceGroupAttachSoftwareSourcesManagement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagedInstanceGroupAttachSoftwareSourcesManagementState, opts ...pulumi.ResourceOption) (*ManagedInstanceGroupAttachSoftwareSourcesManagement, error) {
	var resource ManagedInstanceGroupAttachSoftwareSourcesManagement
	err := ctx.ReadResource("oci:OsManagementHub/managedInstanceGroupAttachSoftwareSourcesManagement:ManagedInstanceGroupAttachSoftwareSourcesManagement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagedInstanceGroupAttachSoftwareSourcesManagement resources.
type managedInstanceGroupAttachSoftwareSourcesManagementState struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
	ManagedInstanceGroupId *string `pulumi:"managedInstanceGroupId"`
	// List of software source [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to attach to the group.
	SoftwareSources []string `pulumi:"softwareSources"`
	// Provides the name and description of the job.
	WorkRequestDetails *ManagedInstanceGroupAttachSoftwareSourcesManagementWorkRequestDetails `pulumi:"workRequestDetails"`
}

type ManagedInstanceGroupAttachSoftwareSourcesManagementState struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
	ManagedInstanceGroupId pulumi.StringPtrInput
	// List of software source [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to attach to the group.
	SoftwareSources pulumi.StringArrayInput
	// Provides the name and description of the job.
	WorkRequestDetails ManagedInstanceGroupAttachSoftwareSourcesManagementWorkRequestDetailsPtrInput
}

func (ManagedInstanceGroupAttachSoftwareSourcesManagementState) ElementType() reflect.Type {
	return reflect.TypeOf((*managedInstanceGroupAttachSoftwareSourcesManagementState)(nil)).Elem()
}

type managedInstanceGroupAttachSoftwareSourcesManagementArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
	ManagedInstanceGroupId string `pulumi:"managedInstanceGroupId"`
	// List of software source [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to attach to the group.
	SoftwareSources []string `pulumi:"softwareSources"`
	// Provides the name and description of the job.
	WorkRequestDetails *ManagedInstanceGroupAttachSoftwareSourcesManagementWorkRequestDetails `pulumi:"workRequestDetails"`
}

// The set of arguments for constructing a ManagedInstanceGroupAttachSoftwareSourcesManagement resource.
type ManagedInstanceGroupAttachSoftwareSourcesManagementArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
	ManagedInstanceGroupId pulumi.StringInput
	// List of software source [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to attach to the group.
	SoftwareSources pulumi.StringArrayInput
	// Provides the name and description of the job.
	WorkRequestDetails ManagedInstanceGroupAttachSoftwareSourcesManagementWorkRequestDetailsPtrInput
}

func (ManagedInstanceGroupAttachSoftwareSourcesManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managedInstanceGroupAttachSoftwareSourcesManagementArgs)(nil)).Elem()
}

type ManagedInstanceGroupAttachSoftwareSourcesManagementInput interface {
	pulumi.Input

	ToManagedInstanceGroupAttachSoftwareSourcesManagementOutput() ManagedInstanceGroupAttachSoftwareSourcesManagementOutput
	ToManagedInstanceGroupAttachSoftwareSourcesManagementOutputWithContext(ctx context.Context) ManagedInstanceGroupAttachSoftwareSourcesManagementOutput
}

func (*ManagedInstanceGroupAttachSoftwareSourcesManagement) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedInstanceGroupAttachSoftwareSourcesManagement)(nil)).Elem()
}

func (i *ManagedInstanceGroupAttachSoftwareSourcesManagement) ToManagedInstanceGroupAttachSoftwareSourcesManagementOutput() ManagedInstanceGroupAttachSoftwareSourcesManagementOutput {
	return i.ToManagedInstanceGroupAttachSoftwareSourcesManagementOutputWithContext(context.Background())
}

func (i *ManagedInstanceGroupAttachSoftwareSourcesManagement) ToManagedInstanceGroupAttachSoftwareSourcesManagementOutputWithContext(ctx context.Context) ManagedInstanceGroupAttachSoftwareSourcesManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceGroupAttachSoftwareSourcesManagementOutput)
}

// ManagedInstanceGroupAttachSoftwareSourcesManagementArrayInput is an input type that accepts ManagedInstanceGroupAttachSoftwareSourcesManagementArray and ManagedInstanceGroupAttachSoftwareSourcesManagementArrayOutput values.
// You can construct a concrete instance of `ManagedInstanceGroupAttachSoftwareSourcesManagementArrayInput` via:
//
//	ManagedInstanceGroupAttachSoftwareSourcesManagementArray{ ManagedInstanceGroupAttachSoftwareSourcesManagementArgs{...} }
type ManagedInstanceGroupAttachSoftwareSourcesManagementArrayInput interface {
	pulumi.Input

	ToManagedInstanceGroupAttachSoftwareSourcesManagementArrayOutput() ManagedInstanceGroupAttachSoftwareSourcesManagementArrayOutput
	ToManagedInstanceGroupAttachSoftwareSourcesManagementArrayOutputWithContext(context.Context) ManagedInstanceGroupAttachSoftwareSourcesManagementArrayOutput
}

type ManagedInstanceGroupAttachSoftwareSourcesManagementArray []ManagedInstanceGroupAttachSoftwareSourcesManagementInput

func (ManagedInstanceGroupAttachSoftwareSourcesManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedInstanceGroupAttachSoftwareSourcesManagement)(nil)).Elem()
}

func (i ManagedInstanceGroupAttachSoftwareSourcesManagementArray) ToManagedInstanceGroupAttachSoftwareSourcesManagementArrayOutput() ManagedInstanceGroupAttachSoftwareSourcesManagementArrayOutput {
	return i.ToManagedInstanceGroupAttachSoftwareSourcesManagementArrayOutputWithContext(context.Background())
}

func (i ManagedInstanceGroupAttachSoftwareSourcesManagementArray) ToManagedInstanceGroupAttachSoftwareSourcesManagementArrayOutputWithContext(ctx context.Context) ManagedInstanceGroupAttachSoftwareSourcesManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceGroupAttachSoftwareSourcesManagementArrayOutput)
}

// ManagedInstanceGroupAttachSoftwareSourcesManagementMapInput is an input type that accepts ManagedInstanceGroupAttachSoftwareSourcesManagementMap and ManagedInstanceGroupAttachSoftwareSourcesManagementMapOutput values.
// You can construct a concrete instance of `ManagedInstanceGroupAttachSoftwareSourcesManagementMapInput` via:
//
//	ManagedInstanceGroupAttachSoftwareSourcesManagementMap{ "key": ManagedInstanceGroupAttachSoftwareSourcesManagementArgs{...} }
type ManagedInstanceGroupAttachSoftwareSourcesManagementMapInput interface {
	pulumi.Input

	ToManagedInstanceGroupAttachSoftwareSourcesManagementMapOutput() ManagedInstanceGroupAttachSoftwareSourcesManagementMapOutput
	ToManagedInstanceGroupAttachSoftwareSourcesManagementMapOutputWithContext(context.Context) ManagedInstanceGroupAttachSoftwareSourcesManagementMapOutput
}

type ManagedInstanceGroupAttachSoftwareSourcesManagementMap map[string]ManagedInstanceGroupAttachSoftwareSourcesManagementInput

func (ManagedInstanceGroupAttachSoftwareSourcesManagementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedInstanceGroupAttachSoftwareSourcesManagement)(nil)).Elem()
}

func (i ManagedInstanceGroupAttachSoftwareSourcesManagementMap) ToManagedInstanceGroupAttachSoftwareSourcesManagementMapOutput() ManagedInstanceGroupAttachSoftwareSourcesManagementMapOutput {
	return i.ToManagedInstanceGroupAttachSoftwareSourcesManagementMapOutputWithContext(context.Background())
}

func (i ManagedInstanceGroupAttachSoftwareSourcesManagementMap) ToManagedInstanceGroupAttachSoftwareSourcesManagementMapOutputWithContext(ctx context.Context) ManagedInstanceGroupAttachSoftwareSourcesManagementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceGroupAttachSoftwareSourcesManagementMapOutput)
}

type ManagedInstanceGroupAttachSoftwareSourcesManagementOutput struct{ *pulumi.OutputState }

func (ManagedInstanceGroupAttachSoftwareSourcesManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedInstanceGroupAttachSoftwareSourcesManagement)(nil)).Elem()
}

func (o ManagedInstanceGroupAttachSoftwareSourcesManagementOutput) ToManagedInstanceGroupAttachSoftwareSourcesManagementOutput() ManagedInstanceGroupAttachSoftwareSourcesManagementOutput {
	return o
}

func (o ManagedInstanceGroupAttachSoftwareSourcesManagementOutput) ToManagedInstanceGroupAttachSoftwareSourcesManagementOutputWithContext(ctx context.Context) ManagedInstanceGroupAttachSoftwareSourcesManagementOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
func (o ManagedInstanceGroupAttachSoftwareSourcesManagementOutput) ManagedInstanceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedInstanceGroupAttachSoftwareSourcesManagement) pulumi.StringOutput {
		return v.ManagedInstanceGroupId
	}).(pulumi.StringOutput)
}

// List of software source [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to attach to the group.
func (o ManagedInstanceGroupAttachSoftwareSourcesManagementOutput) SoftwareSources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedInstanceGroupAttachSoftwareSourcesManagement) pulumi.StringArrayOutput {
		return v.SoftwareSources
	}).(pulumi.StringArrayOutput)
}

// Provides the name and description of the job.
func (o ManagedInstanceGroupAttachSoftwareSourcesManagementOutput) WorkRequestDetails() ManagedInstanceGroupAttachSoftwareSourcesManagementWorkRequestDetailsOutput {
	return o.ApplyT(func(v *ManagedInstanceGroupAttachSoftwareSourcesManagement) ManagedInstanceGroupAttachSoftwareSourcesManagementWorkRequestDetailsOutput {
		return v.WorkRequestDetails
	}).(ManagedInstanceGroupAttachSoftwareSourcesManagementWorkRequestDetailsOutput)
}

type ManagedInstanceGroupAttachSoftwareSourcesManagementArrayOutput struct{ *pulumi.OutputState }

func (ManagedInstanceGroupAttachSoftwareSourcesManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedInstanceGroupAttachSoftwareSourcesManagement)(nil)).Elem()
}

func (o ManagedInstanceGroupAttachSoftwareSourcesManagementArrayOutput) ToManagedInstanceGroupAttachSoftwareSourcesManagementArrayOutput() ManagedInstanceGroupAttachSoftwareSourcesManagementArrayOutput {
	return o
}

func (o ManagedInstanceGroupAttachSoftwareSourcesManagementArrayOutput) ToManagedInstanceGroupAttachSoftwareSourcesManagementArrayOutputWithContext(ctx context.Context) ManagedInstanceGroupAttachSoftwareSourcesManagementArrayOutput {
	return o
}

func (o ManagedInstanceGroupAttachSoftwareSourcesManagementArrayOutput) Index(i pulumi.IntInput) ManagedInstanceGroupAttachSoftwareSourcesManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ManagedInstanceGroupAttachSoftwareSourcesManagement {
		return vs[0].([]*ManagedInstanceGroupAttachSoftwareSourcesManagement)[vs[1].(int)]
	}).(ManagedInstanceGroupAttachSoftwareSourcesManagementOutput)
}

type ManagedInstanceGroupAttachSoftwareSourcesManagementMapOutput struct{ *pulumi.OutputState }

func (ManagedInstanceGroupAttachSoftwareSourcesManagementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedInstanceGroupAttachSoftwareSourcesManagement)(nil)).Elem()
}

func (o ManagedInstanceGroupAttachSoftwareSourcesManagementMapOutput) ToManagedInstanceGroupAttachSoftwareSourcesManagementMapOutput() ManagedInstanceGroupAttachSoftwareSourcesManagementMapOutput {
	return o
}

func (o ManagedInstanceGroupAttachSoftwareSourcesManagementMapOutput) ToManagedInstanceGroupAttachSoftwareSourcesManagementMapOutputWithContext(ctx context.Context) ManagedInstanceGroupAttachSoftwareSourcesManagementMapOutput {
	return o
}

func (o ManagedInstanceGroupAttachSoftwareSourcesManagementMapOutput) MapIndex(k pulumi.StringInput) ManagedInstanceGroupAttachSoftwareSourcesManagementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ManagedInstanceGroupAttachSoftwareSourcesManagement {
		return vs[0].(map[string]*ManagedInstanceGroupAttachSoftwareSourcesManagement)[vs[1].(string)]
	}).(ManagedInstanceGroupAttachSoftwareSourcesManagementOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceGroupAttachSoftwareSourcesManagementInput)(nil)).Elem(), &ManagedInstanceGroupAttachSoftwareSourcesManagement{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceGroupAttachSoftwareSourcesManagementArrayInput)(nil)).Elem(), ManagedInstanceGroupAttachSoftwareSourcesManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceGroupAttachSoftwareSourcesManagementMapInput)(nil)).Elem(), ManagedInstanceGroupAttachSoftwareSourcesManagementMap{})
	pulumi.RegisterOutputType(ManagedInstanceGroupAttachSoftwareSourcesManagementOutput{})
	pulumi.RegisterOutputType(ManagedInstanceGroupAttachSoftwareSourcesManagementArrayOutput{})
	pulumi.RegisterOutputType(ManagedInstanceGroupAttachSoftwareSourcesManagementMapOutput{})
}
