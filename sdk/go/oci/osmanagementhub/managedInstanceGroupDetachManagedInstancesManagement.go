// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Managed Instance Group Detach Managed Instances Management resource in Oracle Cloud Infrastructure Os Management Hub service.
//
// Removes a managed instance from the specified managed instance group.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/OsManagementHub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := OsManagementHub.NewManagedInstanceGroupDetachManagedInstancesManagement(ctx, "test_managed_instance_group_detach_managed_instances_management", &OsManagementHub.ManagedInstanceGroupDetachManagedInstancesManagementArgs{
//				ManagedInstanceGroupId: pulumi.Any(testManagedInstanceGroup.Id),
//				ManagedInstances:       pulumi.Any(managedInstanceGroupDetachManagedInstancesManagementManagedInstances),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ManagedInstanceGroupDetachManagedInstancesManagement can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:OsManagementHub/managedInstanceGroupDetachManagedInstancesManagement:ManagedInstanceGroupDetachManagedInstancesManagement test_managed_instance_group_detach_managed_instances_management "id"
// ```
type ManagedInstanceGroupDetachManagedInstancesManagement struct {
	pulumi.CustomResourceState

	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
	ManagedInstanceGroupId pulumi.StringOutput `pulumi:"managedInstanceGroupId"`
	// List of managed instance [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to detach from the group.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ManagedInstances pulumi.StringArrayOutput `pulumi:"managedInstances"`
}

// NewManagedInstanceGroupDetachManagedInstancesManagement registers a new resource with the given unique name, arguments, and options.
func NewManagedInstanceGroupDetachManagedInstancesManagement(ctx *pulumi.Context,
	name string, args *ManagedInstanceGroupDetachManagedInstancesManagementArgs, opts ...pulumi.ResourceOption) (*ManagedInstanceGroupDetachManagedInstancesManagement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ManagedInstanceGroupId == nil {
		return nil, errors.New("invalid value for required argument 'ManagedInstanceGroupId'")
	}
	if args.ManagedInstances == nil {
		return nil, errors.New("invalid value for required argument 'ManagedInstances'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ManagedInstanceGroupDetachManagedInstancesManagement
	err := ctx.RegisterResource("oci:OsManagementHub/managedInstanceGroupDetachManagedInstancesManagement:ManagedInstanceGroupDetachManagedInstancesManagement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagedInstanceGroupDetachManagedInstancesManagement gets an existing ManagedInstanceGroupDetachManagedInstancesManagement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagedInstanceGroupDetachManagedInstancesManagement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagedInstanceGroupDetachManagedInstancesManagementState, opts ...pulumi.ResourceOption) (*ManagedInstanceGroupDetachManagedInstancesManagement, error) {
	var resource ManagedInstanceGroupDetachManagedInstancesManagement
	err := ctx.ReadResource("oci:OsManagementHub/managedInstanceGroupDetachManagedInstancesManagement:ManagedInstanceGroupDetachManagedInstancesManagement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagedInstanceGroupDetachManagedInstancesManagement resources.
type managedInstanceGroupDetachManagedInstancesManagementState struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
	ManagedInstanceGroupId *string `pulumi:"managedInstanceGroupId"`
	// List of managed instance [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to detach from the group.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ManagedInstances []string `pulumi:"managedInstances"`
}

type ManagedInstanceGroupDetachManagedInstancesManagementState struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
	ManagedInstanceGroupId pulumi.StringPtrInput
	// List of managed instance [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to detach from the group.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ManagedInstances pulumi.StringArrayInput
}

func (ManagedInstanceGroupDetachManagedInstancesManagementState) ElementType() reflect.Type {
	return reflect.TypeOf((*managedInstanceGroupDetachManagedInstancesManagementState)(nil)).Elem()
}

type managedInstanceGroupDetachManagedInstancesManagementArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
	ManagedInstanceGroupId string `pulumi:"managedInstanceGroupId"`
	// List of managed instance [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to detach from the group.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ManagedInstances []string `pulumi:"managedInstances"`
}

// The set of arguments for constructing a ManagedInstanceGroupDetachManagedInstancesManagement resource.
type ManagedInstanceGroupDetachManagedInstancesManagementArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
	ManagedInstanceGroupId pulumi.StringInput
	// List of managed instance [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to detach from the group.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ManagedInstances pulumi.StringArrayInput
}

func (ManagedInstanceGroupDetachManagedInstancesManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managedInstanceGroupDetachManagedInstancesManagementArgs)(nil)).Elem()
}

type ManagedInstanceGroupDetachManagedInstancesManagementInput interface {
	pulumi.Input

	ToManagedInstanceGroupDetachManagedInstancesManagementOutput() ManagedInstanceGroupDetachManagedInstancesManagementOutput
	ToManagedInstanceGroupDetachManagedInstancesManagementOutputWithContext(ctx context.Context) ManagedInstanceGroupDetachManagedInstancesManagementOutput
}

func (*ManagedInstanceGroupDetachManagedInstancesManagement) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedInstanceGroupDetachManagedInstancesManagement)(nil)).Elem()
}

func (i *ManagedInstanceGroupDetachManagedInstancesManagement) ToManagedInstanceGroupDetachManagedInstancesManagementOutput() ManagedInstanceGroupDetachManagedInstancesManagementOutput {
	return i.ToManagedInstanceGroupDetachManagedInstancesManagementOutputWithContext(context.Background())
}

func (i *ManagedInstanceGroupDetachManagedInstancesManagement) ToManagedInstanceGroupDetachManagedInstancesManagementOutputWithContext(ctx context.Context) ManagedInstanceGroupDetachManagedInstancesManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceGroupDetachManagedInstancesManagementOutput)
}

// ManagedInstanceGroupDetachManagedInstancesManagementArrayInput is an input type that accepts ManagedInstanceGroupDetachManagedInstancesManagementArray and ManagedInstanceGroupDetachManagedInstancesManagementArrayOutput values.
// You can construct a concrete instance of `ManagedInstanceGroupDetachManagedInstancesManagementArrayInput` via:
//
//	ManagedInstanceGroupDetachManagedInstancesManagementArray{ ManagedInstanceGroupDetachManagedInstancesManagementArgs{...} }
type ManagedInstanceGroupDetachManagedInstancesManagementArrayInput interface {
	pulumi.Input

	ToManagedInstanceGroupDetachManagedInstancesManagementArrayOutput() ManagedInstanceGroupDetachManagedInstancesManagementArrayOutput
	ToManagedInstanceGroupDetachManagedInstancesManagementArrayOutputWithContext(context.Context) ManagedInstanceGroupDetachManagedInstancesManagementArrayOutput
}

type ManagedInstanceGroupDetachManagedInstancesManagementArray []ManagedInstanceGroupDetachManagedInstancesManagementInput

func (ManagedInstanceGroupDetachManagedInstancesManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedInstanceGroupDetachManagedInstancesManagement)(nil)).Elem()
}

func (i ManagedInstanceGroupDetachManagedInstancesManagementArray) ToManagedInstanceGroupDetachManagedInstancesManagementArrayOutput() ManagedInstanceGroupDetachManagedInstancesManagementArrayOutput {
	return i.ToManagedInstanceGroupDetachManagedInstancesManagementArrayOutputWithContext(context.Background())
}

func (i ManagedInstanceGroupDetachManagedInstancesManagementArray) ToManagedInstanceGroupDetachManagedInstancesManagementArrayOutputWithContext(ctx context.Context) ManagedInstanceGroupDetachManagedInstancesManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceGroupDetachManagedInstancesManagementArrayOutput)
}

// ManagedInstanceGroupDetachManagedInstancesManagementMapInput is an input type that accepts ManagedInstanceGroupDetachManagedInstancesManagementMap and ManagedInstanceGroupDetachManagedInstancesManagementMapOutput values.
// You can construct a concrete instance of `ManagedInstanceGroupDetachManagedInstancesManagementMapInput` via:
//
//	ManagedInstanceGroupDetachManagedInstancesManagementMap{ "key": ManagedInstanceGroupDetachManagedInstancesManagementArgs{...} }
type ManagedInstanceGroupDetachManagedInstancesManagementMapInput interface {
	pulumi.Input

	ToManagedInstanceGroupDetachManagedInstancesManagementMapOutput() ManagedInstanceGroupDetachManagedInstancesManagementMapOutput
	ToManagedInstanceGroupDetachManagedInstancesManagementMapOutputWithContext(context.Context) ManagedInstanceGroupDetachManagedInstancesManagementMapOutput
}

type ManagedInstanceGroupDetachManagedInstancesManagementMap map[string]ManagedInstanceGroupDetachManagedInstancesManagementInput

func (ManagedInstanceGroupDetachManagedInstancesManagementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedInstanceGroupDetachManagedInstancesManagement)(nil)).Elem()
}

func (i ManagedInstanceGroupDetachManagedInstancesManagementMap) ToManagedInstanceGroupDetachManagedInstancesManagementMapOutput() ManagedInstanceGroupDetachManagedInstancesManagementMapOutput {
	return i.ToManagedInstanceGroupDetachManagedInstancesManagementMapOutputWithContext(context.Background())
}

func (i ManagedInstanceGroupDetachManagedInstancesManagementMap) ToManagedInstanceGroupDetachManagedInstancesManagementMapOutputWithContext(ctx context.Context) ManagedInstanceGroupDetachManagedInstancesManagementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceGroupDetachManagedInstancesManagementMapOutput)
}

type ManagedInstanceGroupDetachManagedInstancesManagementOutput struct{ *pulumi.OutputState }

func (ManagedInstanceGroupDetachManagedInstancesManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedInstanceGroupDetachManagedInstancesManagement)(nil)).Elem()
}

func (o ManagedInstanceGroupDetachManagedInstancesManagementOutput) ToManagedInstanceGroupDetachManagedInstancesManagementOutput() ManagedInstanceGroupDetachManagedInstancesManagementOutput {
	return o
}

func (o ManagedInstanceGroupDetachManagedInstancesManagementOutput) ToManagedInstanceGroupDetachManagedInstancesManagementOutputWithContext(ctx context.Context) ManagedInstanceGroupDetachManagedInstancesManagementOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
func (o ManagedInstanceGroupDetachManagedInstancesManagementOutput) ManagedInstanceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedInstanceGroupDetachManagedInstancesManagement) pulumi.StringOutput {
		return v.ManagedInstanceGroupId
	}).(pulumi.StringOutput)
}

// List of managed instance [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to detach from the group.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ManagedInstanceGroupDetachManagedInstancesManagementOutput) ManagedInstances() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedInstanceGroupDetachManagedInstancesManagement) pulumi.StringArrayOutput {
		return v.ManagedInstances
	}).(pulumi.StringArrayOutput)
}

type ManagedInstanceGroupDetachManagedInstancesManagementArrayOutput struct{ *pulumi.OutputState }

func (ManagedInstanceGroupDetachManagedInstancesManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedInstanceGroupDetachManagedInstancesManagement)(nil)).Elem()
}

func (o ManagedInstanceGroupDetachManagedInstancesManagementArrayOutput) ToManagedInstanceGroupDetachManagedInstancesManagementArrayOutput() ManagedInstanceGroupDetachManagedInstancesManagementArrayOutput {
	return o
}

func (o ManagedInstanceGroupDetachManagedInstancesManagementArrayOutput) ToManagedInstanceGroupDetachManagedInstancesManagementArrayOutputWithContext(ctx context.Context) ManagedInstanceGroupDetachManagedInstancesManagementArrayOutput {
	return o
}

func (o ManagedInstanceGroupDetachManagedInstancesManagementArrayOutput) Index(i pulumi.IntInput) ManagedInstanceGroupDetachManagedInstancesManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ManagedInstanceGroupDetachManagedInstancesManagement {
		return vs[0].([]*ManagedInstanceGroupDetachManagedInstancesManagement)[vs[1].(int)]
	}).(ManagedInstanceGroupDetachManagedInstancesManagementOutput)
}

type ManagedInstanceGroupDetachManagedInstancesManagementMapOutput struct{ *pulumi.OutputState }

func (ManagedInstanceGroupDetachManagedInstancesManagementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedInstanceGroupDetachManagedInstancesManagement)(nil)).Elem()
}

func (o ManagedInstanceGroupDetachManagedInstancesManagementMapOutput) ToManagedInstanceGroupDetachManagedInstancesManagementMapOutput() ManagedInstanceGroupDetachManagedInstancesManagementMapOutput {
	return o
}

func (o ManagedInstanceGroupDetachManagedInstancesManagementMapOutput) ToManagedInstanceGroupDetachManagedInstancesManagementMapOutputWithContext(ctx context.Context) ManagedInstanceGroupDetachManagedInstancesManagementMapOutput {
	return o
}

func (o ManagedInstanceGroupDetachManagedInstancesManagementMapOutput) MapIndex(k pulumi.StringInput) ManagedInstanceGroupDetachManagedInstancesManagementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ManagedInstanceGroupDetachManagedInstancesManagement {
		return vs[0].(map[string]*ManagedInstanceGroupDetachManagedInstancesManagement)[vs[1].(string)]
	}).(ManagedInstanceGroupDetachManagedInstancesManagementOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceGroupDetachManagedInstancesManagementInput)(nil)).Elem(), &ManagedInstanceGroupDetachManagedInstancesManagement{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceGroupDetachManagedInstancesManagementArrayInput)(nil)).Elem(), ManagedInstanceGroupDetachManagedInstancesManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceGroupDetachManagedInstancesManagementMapInput)(nil)).Elem(), ManagedInstanceGroupDetachManagedInstancesManagementMap{})
	pulumi.RegisterOutputType(ManagedInstanceGroupDetachManagedInstancesManagementOutput{})
	pulumi.RegisterOutputType(ManagedInstanceGroupDetachManagedInstancesManagementArrayOutput{})
	pulumi.RegisterOutputType(ManagedInstanceGroupDetachManagedInstancesManagementMapOutput{})
}
