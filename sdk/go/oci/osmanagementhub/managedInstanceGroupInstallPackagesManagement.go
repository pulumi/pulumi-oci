// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Managed Instance Group Install Packages Management resource in Oracle Cloud Infrastructure Os Management Hub service.
//
// Installs the specified packages on each managed instance in a managed instance group. The package must be compatible with the instances in the group.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/osmanagementhub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := osmanagementhub.NewManagedInstanceGroupInstallPackagesManagement(ctx, "test_managed_instance_group_install_packages_management", &osmanagementhub.ManagedInstanceGroupInstallPackagesManagementArgs{
//				ManagedInstanceGroupId: pulumi.Any(testManagedInstanceGroup.Id),
//				PackageNames:           pulumi.Any(managedInstanceGroupInstallPackagesManagementPackageNames),
//				IsLatest:               pulumi.Any(managedInstanceGroupInstallPackagesManagementIsLatest),
//				WorkRequestDetails: &osmanagementhub.ManagedInstanceGroupInstallPackagesManagementWorkRequestDetailsArgs{
//					Description: pulumi.Any(managedInstanceGroupInstallPackagesManagementWorkRequestDetailsDescription),
//					DisplayName: pulumi.Any(managedInstanceGroupInstallPackagesManagementWorkRequestDetailsDisplayName),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ManagedInstanceGroupInstallPackagesManagement can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:OsManagementHub/managedInstanceGroupInstallPackagesManagement:ManagedInstanceGroupInstallPackagesManagement test_managed_instance_group_install_packages_management "id"
// ```
type ManagedInstanceGroupInstallPackagesManagement struct {
	pulumi.CustomResourceState

	// Indicates whether this is the latest package version.
	IsLatest pulumi.BoolOutput `pulumi:"isLatest"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
	ManagedInstanceGroupId pulumi.StringOutput `pulumi:"managedInstanceGroupId"`
	// The list of package names.
	PackageNames pulumi.StringArrayOutput `pulumi:"packageNames"`
	// Provides the name and description of the job.
	WorkRequestDetails ManagedInstanceGroupInstallPackagesManagementWorkRequestDetailsOutput `pulumi:"workRequestDetails"`
}

// NewManagedInstanceGroupInstallPackagesManagement registers a new resource with the given unique name, arguments, and options.
func NewManagedInstanceGroupInstallPackagesManagement(ctx *pulumi.Context,
	name string, args *ManagedInstanceGroupInstallPackagesManagementArgs, opts ...pulumi.ResourceOption) (*ManagedInstanceGroupInstallPackagesManagement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ManagedInstanceGroupId == nil {
		return nil, errors.New("invalid value for required argument 'ManagedInstanceGroupId'")
	}
	if args.PackageNames == nil {
		return nil, errors.New("invalid value for required argument 'PackageNames'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ManagedInstanceGroupInstallPackagesManagement
	err := ctx.RegisterResource("oci:OsManagementHub/managedInstanceGroupInstallPackagesManagement:ManagedInstanceGroupInstallPackagesManagement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagedInstanceGroupInstallPackagesManagement gets an existing ManagedInstanceGroupInstallPackagesManagement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagedInstanceGroupInstallPackagesManagement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagedInstanceGroupInstallPackagesManagementState, opts ...pulumi.ResourceOption) (*ManagedInstanceGroupInstallPackagesManagement, error) {
	var resource ManagedInstanceGroupInstallPackagesManagement
	err := ctx.ReadResource("oci:OsManagementHub/managedInstanceGroupInstallPackagesManagement:ManagedInstanceGroupInstallPackagesManagement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagedInstanceGroupInstallPackagesManagement resources.
type managedInstanceGroupInstallPackagesManagementState struct {
	// Indicates whether this is the latest package version.
	IsLatest *bool `pulumi:"isLatest"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
	ManagedInstanceGroupId *string `pulumi:"managedInstanceGroupId"`
	// The list of package names.
	PackageNames []string `pulumi:"packageNames"`
	// Provides the name and description of the job.
	WorkRequestDetails *ManagedInstanceGroupInstallPackagesManagementWorkRequestDetails `pulumi:"workRequestDetails"`
}

type ManagedInstanceGroupInstallPackagesManagementState struct {
	// Indicates whether this is the latest package version.
	IsLatest pulumi.BoolPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
	ManagedInstanceGroupId pulumi.StringPtrInput
	// The list of package names.
	PackageNames pulumi.StringArrayInput
	// Provides the name and description of the job.
	WorkRequestDetails ManagedInstanceGroupInstallPackagesManagementWorkRequestDetailsPtrInput
}

func (ManagedInstanceGroupInstallPackagesManagementState) ElementType() reflect.Type {
	return reflect.TypeOf((*managedInstanceGroupInstallPackagesManagementState)(nil)).Elem()
}

type managedInstanceGroupInstallPackagesManagementArgs struct {
	// Indicates whether this is the latest package version.
	IsLatest *bool `pulumi:"isLatest"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
	ManagedInstanceGroupId string `pulumi:"managedInstanceGroupId"`
	// The list of package names.
	PackageNames []string `pulumi:"packageNames"`
	// Provides the name and description of the job.
	WorkRequestDetails *ManagedInstanceGroupInstallPackagesManagementWorkRequestDetails `pulumi:"workRequestDetails"`
}

// The set of arguments for constructing a ManagedInstanceGroupInstallPackagesManagement resource.
type ManagedInstanceGroupInstallPackagesManagementArgs struct {
	// Indicates whether this is the latest package version.
	IsLatest pulumi.BoolPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
	ManagedInstanceGroupId pulumi.StringInput
	// The list of package names.
	PackageNames pulumi.StringArrayInput
	// Provides the name and description of the job.
	WorkRequestDetails ManagedInstanceGroupInstallPackagesManagementWorkRequestDetailsPtrInput
}

func (ManagedInstanceGroupInstallPackagesManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managedInstanceGroupInstallPackagesManagementArgs)(nil)).Elem()
}

type ManagedInstanceGroupInstallPackagesManagementInput interface {
	pulumi.Input

	ToManagedInstanceGroupInstallPackagesManagementOutput() ManagedInstanceGroupInstallPackagesManagementOutput
	ToManagedInstanceGroupInstallPackagesManagementOutputWithContext(ctx context.Context) ManagedInstanceGroupInstallPackagesManagementOutput
}

func (*ManagedInstanceGroupInstallPackagesManagement) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedInstanceGroupInstallPackagesManagement)(nil)).Elem()
}

func (i *ManagedInstanceGroupInstallPackagesManagement) ToManagedInstanceGroupInstallPackagesManagementOutput() ManagedInstanceGroupInstallPackagesManagementOutput {
	return i.ToManagedInstanceGroupInstallPackagesManagementOutputWithContext(context.Background())
}

func (i *ManagedInstanceGroupInstallPackagesManagement) ToManagedInstanceGroupInstallPackagesManagementOutputWithContext(ctx context.Context) ManagedInstanceGroupInstallPackagesManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceGroupInstallPackagesManagementOutput)
}

// ManagedInstanceGroupInstallPackagesManagementArrayInput is an input type that accepts ManagedInstanceGroupInstallPackagesManagementArray and ManagedInstanceGroupInstallPackagesManagementArrayOutput values.
// You can construct a concrete instance of `ManagedInstanceGroupInstallPackagesManagementArrayInput` via:
//
//	ManagedInstanceGroupInstallPackagesManagementArray{ ManagedInstanceGroupInstallPackagesManagementArgs{...} }
type ManagedInstanceGroupInstallPackagesManagementArrayInput interface {
	pulumi.Input

	ToManagedInstanceGroupInstallPackagesManagementArrayOutput() ManagedInstanceGroupInstallPackagesManagementArrayOutput
	ToManagedInstanceGroupInstallPackagesManagementArrayOutputWithContext(context.Context) ManagedInstanceGroupInstallPackagesManagementArrayOutput
}

type ManagedInstanceGroupInstallPackagesManagementArray []ManagedInstanceGroupInstallPackagesManagementInput

func (ManagedInstanceGroupInstallPackagesManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedInstanceGroupInstallPackagesManagement)(nil)).Elem()
}

func (i ManagedInstanceGroupInstallPackagesManagementArray) ToManagedInstanceGroupInstallPackagesManagementArrayOutput() ManagedInstanceGroupInstallPackagesManagementArrayOutput {
	return i.ToManagedInstanceGroupInstallPackagesManagementArrayOutputWithContext(context.Background())
}

func (i ManagedInstanceGroupInstallPackagesManagementArray) ToManagedInstanceGroupInstallPackagesManagementArrayOutputWithContext(ctx context.Context) ManagedInstanceGroupInstallPackagesManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceGroupInstallPackagesManagementArrayOutput)
}

// ManagedInstanceGroupInstallPackagesManagementMapInput is an input type that accepts ManagedInstanceGroupInstallPackagesManagementMap and ManagedInstanceGroupInstallPackagesManagementMapOutput values.
// You can construct a concrete instance of `ManagedInstanceGroupInstallPackagesManagementMapInput` via:
//
//	ManagedInstanceGroupInstallPackagesManagementMap{ "key": ManagedInstanceGroupInstallPackagesManagementArgs{...} }
type ManagedInstanceGroupInstallPackagesManagementMapInput interface {
	pulumi.Input

	ToManagedInstanceGroupInstallPackagesManagementMapOutput() ManagedInstanceGroupInstallPackagesManagementMapOutput
	ToManagedInstanceGroupInstallPackagesManagementMapOutputWithContext(context.Context) ManagedInstanceGroupInstallPackagesManagementMapOutput
}

type ManagedInstanceGroupInstallPackagesManagementMap map[string]ManagedInstanceGroupInstallPackagesManagementInput

func (ManagedInstanceGroupInstallPackagesManagementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedInstanceGroupInstallPackagesManagement)(nil)).Elem()
}

func (i ManagedInstanceGroupInstallPackagesManagementMap) ToManagedInstanceGroupInstallPackagesManagementMapOutput() ManagedInstanceGroupInstallPackagesManagementMapOutput {
	return i.ToManagedInstanceGroupInstallPackagesManagementMapOutputWithContext(context.Background())
}

func (i ManagedInstanceGroupInstallPackagesManagementMap) ToManagedInstanceGroupInstallPackagesManagementMapOutputWithContext(ctx context.Context) ManagedInstanceGroupInstallPackagesManagementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceGroupInstallPackagesManagementMapOutput)
}

type ManagedInstanceGroupInstallPackagesManagementOutput struct{ *pulumi.OutputState }

func (ManagedInstanceGroupInstallPackagesManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedInstanceGroupInstallPackagesManagement)(nil)).Elem()
}

func (o ManagedInstanceGroupInstallPackagesManagementOutput) ToManagedInstanceGroupInstallPackagesManagementOutput() ManagedInstanceGroupInstallPackagesManagementOutput {
	return o
}

func (o ManagedInstanceGroupInstallPackagesManagementOutput) ToManagedInstanceGroupInstallPackagesManagementOutputWithContext(ctx context.Context) ManagedInstanceGroupInstallPackagesManagementOutput {
	return o
}

// Indicates whether this is the latest package version.
func (o ManagedInstanceGroupInstallPackagesManagementOutput) IsLatest() pulumi.BoolOutput {
	return o.ApplyT(func(v *ManagedInstanceGroupInstallPackagesManagement) pulumi.BoolOutput { return v.IsLatest }).(pulumi.BoolOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
func (o ManagedInstanceGroupInstallPackagesManagementOutput) ManagedInstanceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedInstanceGroupInstallPackagesManagement) pulumi.StringOutput {
		return v.ManagedInstanceGroupId
	}).(pulumi.StringOutput)
}

// The list of package names.
func (o ManagedInstanceGroupInstallPackagesManagementOutput) PackageNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedInstanceGroupInstallPackagesManagement) pulumi.StringArrayOutput { return v.PackageNames }).(pulumi.StringArrayOutput)
}

// Provides the name and description of the job.
func (o ManagedInstanceGroupInstallPackagesManagementOutput) WorkRequestDetails() ManagedInstanceGroupInstallPackagesManagementWorkRequestDetailsOutput {
	return o.ApplyT(func(v *ManagedInstanceGroupInstallPackagesManagement) ManagedInstanceGroupInstallPackagesManagementWorkRequestDetailsOutput {
		return v.WorkRequestDetails
	}).(ManagedInstanceGroupInstallPackagesManagementWorkRequestDetailsOutput)
}

type ManagedInstanceGroupInstallPackagesManagementArrayOutput struct{ *pulumi.OutputState }

func (ManagedInstanceGroupInstallPackagesManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedInstanceGroupInstallPackagesManagement)(nil)).Elem()
}

func (o ManagedInstanceGroupInstallPackagesManagementArrayOutput) ToManagedInstanceGroupInstallPackagesManagementArrayOutput() ManagedInstanceGroupInstallPackagesManagementArrayOutput {
	return o
}

func (o ManagedInstanceGroupInstallPackagesManagementArrayOutput) ToManagedInstanceGroupInstallPackagesManagementArrayOutputWithContext(ctx context.Context) ManagedInstanceGroupInstallPackagesManagementArrayOutput {
	return o
}

func (o ManagedInstanceGroupInstallPackagesManagementArrayOutput) Index(i pulumi.IntInput) ManagedInstanceGroupInstallPackagesManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ManagedInstanceGroupInstallPackagesManagement {
		return vs[0].([]*ManagedInstanceGroupInstallPackagesManagement)[vs[1].(int)]
	}).(ManagedInstanceGroupInstallPackagesManagementOutput)
}

type ManagedInstanceGroupInstallPackagesManagementMapOutput struct{ *pulumi.OutputState }

func (ManagedInstanceGroupInstallPackagesManagementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedInstanceGroupInstallPackagesManagement)(nil)).Elem()
}

func (o ManagedInstanceGroupInstallPackagesManagementMapOutput) ToManagedInstanceGroupInstallPackagesManagementMapOutput() ManagedInstanceGroupInstallPackagesManagementMapOutput {
	return o
}

func (o ManagedInstanceGroupInstallPackagesManagementMapOutput) ToManagedInstanceGroupInstallPackagesManagementMapOutputWithContext(ctx context.Context) ManagedInstanceGroupInstallPackagesManagementMapOutput {
	return o
}

func (o ManagedInstanceGroupInstallPackagesManagementMapOutput) MapIndex(k pulumi.StringInput) ManagedInstanceGroupInstallPackagesManagementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ManagedInstanceGroupInstallPackagesManagement {
		return vs[0].(map[string]*ManagedInstanceGroupInstallPackagesManagement)[vs[1].(string)]
	}).(ManagedInstanceGroupInstallPackagesManagementOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceGroupInstallPackagesManagementInput)(nil)).Elem(), &ManagedInstanceGroupInstallPackagesManagement{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceGroupInstallPackagesManagementArrayInput)(nil)).Elem(), ManagedInstanceGroupInstallPackagesManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceGroupInstallPackagesManagementMapInput)(nil)).Elem(), ManagedInstanceGroupInstallPackagesManagementMap{})
	pulumi.RegisterOutputType(ManagedInstanceGroupInstallPackagesManagementOutput{})
	pulumi.RegisterOutputType(ManagedInstanceGroupInstallPackagesManagementArrayOutput{})
	pulumi.RegisterOutputType(ManagedInstanceGroupInstallPackagesManagementMapOutput{})
}
