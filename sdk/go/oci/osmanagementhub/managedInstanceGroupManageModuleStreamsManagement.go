// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Managed Instance Group Manage Module Streams Management resource in Oracle Cloud Infrastructure Os Management Hub service.
//
// Enables or disables module streams and installs or removes module stream profiles. Once complete, the state of the modules, streams, and profiles will match the state indicated in the operation. See [ManageModuleStreamsOnManagedInstanceGroupDetails](https://docs.cloud.oracle.com/iaas/api/#/en/osmh/latest/datatypes/ManageModuleStreamsOnManagedInstanceGroupDetails) for more information.
// You can preform this operation as a dry run. For a dry run, the service evaluates the operation against the current module, stream, and profile state on the managed instance, but does not commit the changes. Instead, the service returns work request log or error entries indicating the impact of the operation.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/osmanagementhub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := osmanagementhub.NewManagedInstanceGroupManageModuleStreamsManagement(ctx, "test_managed_instance_group_manage_module_streams_management", &osmanagementhub.ManagedInstanceGroupManageModuleStreamsManagementArgs{
//				ManagedInstanceGroupId: pulumi.Any(testManagedInstanceGroup.Id),
//				Disables: osmanagementhub.ManagedInstanceGroupManageModuleStreamsManagementDisableArray{
//					&osmanagementhub.ManagedInstanceGroupManageModuleStreamsManagementDisableArgs{
//						ModuleName:       pulumi.Any(managedInstanceGroupManageModuleStreamsManagementDisableModuleName),
//						StreamName:       pulumi.Any(testStream.Name),
//						SoftwareSourceId: pulumi.Any(testSoftwareSource.Id),
//					},
//				},
//				Enables: osmanagementhub.ManagedInstanceGroupManageModuleStreamsManagementEnableArray{
//					&osmanagementhub.ManagedInstanceGroupManageModuleStreamsManagementEnableArgs{
//						ModuleName:       pulumi.Any(managedInstanceGroupManageModuleStreamsManagementEnableModuleName),
//						StreamName:       pulumi.Any(testStream.Name),
//						SoftwareSourceId: pulumi.Any(testSoftwareSource.Id),
//					},
//				},
//				Installs: osmanagementhub.ManagedInstanceGroupManageModuleStreamsManagementInstallArray{
//					&osmanagementhub.ManagedInstanceGroupManageModuleStreamsManagementInstallArgs{
//						ModuleName:       pulumi.Any(managedInstanceGroupManageModuleStreamsManagementInstallModuleName),
//						ProfileName:      pulumi.Any(testProfile.Name),
//						StreamName:       pulumi.Any(testStream.Name),
//						SoftwareSourceId: pulumi.Any(testSoftwareSource.Id),
//					},
//				},
//				IsDryRun: pulumi.Any(managedInstanceGroupManageModuleStreamsManagementIsDryRun),
//				Removes: osmanagementhub.ManagedInstanceGroupManageModuleStreamsManagementRemoveArray{
//					&osmanagementhub.ManagedInstanceGroupManageModuleStreamsManagementRemoveArgs{
//						ModuleName:       pulumi.Any(managedInstanceGroupManageModuleStreamsManagementRemoveModuleName),
//						ProfileName:      pulumi.Any(testProfile.Name),
//						StreamName:       pulumi.Any(testStream.Name),
//						SoftwareSourceId: pulumi.Any(testSoftwareSource.Id),
//					},
//				},
//				WorkRequestDetails: &osmanagementhub.ManagedInstanceGroupManageModuleStreamsManagementWorkRequestDetailsArgs{
//					Description: pulumi.Any(managedInstanceGroupManageModuleStreamsManagementWorkRequestDetailsDescription),
//					DisplayName: pulumi.Any(managedInstanceGroupManageModuleStreamsManagementWorkRequestDetailsDisplayName),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ManagedInstanceGroupManageModuleStreamsManagement can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:OsManagementHub/managedInstanceGroupManageModuleStreamsManagement:ManagedInstanceGroupManageModuleStreamsManagement test_managed_instance_group_manage_module_streams_management "id"
// ```
type ManagedInstanceGroupManageModuleStreamsManagement struct {
	pulumi.CustomResourceState

	// The set of module streams to disable.
	Disables ManagedInstanceGroupManageModuleStreamsManagementDisableArrayOutput `pulumi:"disables"`
	// The set of module streams to enable.
	Enables ManagedInstanceGroupManageModuleStreamsManagementEnableArrayOutput `pulumi:"enables"`
	// The set of module stream profiles to install.
	Installs ManagedInstanceGroupManageModuleStreamsManagementInstallArrayOutput `pulumi:"installs"`
	// Indicates if this operation is a dry run or if the operation should be committed.  If set to true, the result of the operation will be evaluated but not committed.  If set to false, the operation is committed to the managed instance(s).  The default is false.
	IsDryRun pulumi.BoolOutput `pulumi:"isDryRun"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
	ManagedInstanceGroupId pulumi.StringOutput `pulumi:"managedInstanceGroupId"`
	// The set of module stream profiles to remove.
	Removes ManagedInstanceGroupManageModuleStreamsManagementRemoveArrayOutput `pulumi:"removes"`
	// Provides the name and description of the job.
	WorkRequestDetails ManagedInstanceGroupManageModuleStreamsManagementWorkRequestDetailsOutput `pulumi:"workRequestDetails"`
}

// NewManagedInstanceGroupManageModuleStreamsManagement registers a new resource with the given unique name, arguments, and options.
func NewManagedInstanceGroupManageModuleStreamsManagement(ctx *pulumi.Context,
	name string, args *ManagedInstanceGroupManageModuleStreamsManagementArgs, opts ...pulumi.ResourceOption) (*ManagedInstanceGroupManageModuleStreamsManagement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ManagedInstanceGroupId == nil {
		return nil, errors.New("invalid value for required argument 'ManagedInstanceGroupId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ManagedInstanceGroupManageModuleStreamsManagement
	err := ctx.RegisterResource("oci:OsManagementHub/managedInstanceGroupManageModuleStreamsManagement:ManagedInstanceGroupManageModuleStreamsManagement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagedInstanceGroupManageModuleStreamsManagement gets an existing ManagedInstanceGroupManageModuleStreamsManagement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagedInstanceGroupManageModuleStreamsManagement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagedInstanceGroupManageModuleStreamsManagementState, opts ...pulumi.ResourceOption) (*ManagedInstanceGroupManageModuleStreamsManagement, error) {
	var resource ManagedInstanceGroupManageModuleStreamsManagement
	err := ctx.ReadResource("oci:OsManagementHub/managedInstanceGroupManageModuleStreamsManagement:ManagedInstanceGroupManageModuleStreamsManagement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagedInstanceGroupManageModuleStreamsManagement resources.
type managedInstanceGroupManageModuleStreamsManagementState struct {
	// The set of module streams to disable.
	Disables []ManagedInstanceGroupManageModuleStreamsManagementDisable `pulumi:"disables"`
	// The set of module streams to enable.
	Enables []ManagedInstanceGroupManageModuleStreamsManagementEnable `pulumi:"enables"`
	// The set of module stream profiles to install.
	Installs []ManagedInstanceGroupManageModuleStreamsManagementInstall `pulumi:"installs"`
	// Indicates if this operation is a dry run or if the operation should be committed.  If set to true, the result of the operation will be evaluated but not committed.  If set to false, the operation is committed to the managed instance(s).  The default is false.
	IsDryRun *bool `pulumi:"isDryRun"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
	ManagedInstanceGroupId *string `pulumi:"managedInstanceGroupId"`
	// The set of module stream profiles to remove.
	Removes []ManagedInstanceGroupManageModuleStreamsManagementRemove `pulumi:"removes"`
	// Provides the name and description of the job.
	WorkRequestDetails *ManagedInstanceGroupManageModuleStreamsManagementWorkRequestDetails `pulumi:"workRequestDetails"`
}

type ManagedInstanceGroupManageModuleStreamsManagementState struct {
	// The set of module streams to disable.
	Disables ManagedInstanceGroupManageModuleStreamsManagementDisableArrayInput
	// The set of module streams to enable.
	Enables ManagedInstanceGroupManageModuleStreamsManagementEnableArrayInput
	// The set of module stream profiles to install.
	Installs ManagedInstanceGroupManageModuleStreamsManagementInstallArrayInput
	// Indicates if this operation is a dry run or if the operation should be committed.  If set to true, the result of the operation will be evaluated but not committed.  If set to false, the operation is committed to the managed instance(s).  The default is false.
	IsDryRun pulumi.BoolPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
	ManagedInstanceGroupId pulumi.StringPtrInput
	// The set of module stream profiles to remove.
	Removes ManagedInstanceGroupManageModuleStreamsManagementRemoveArrayInput
	// Provides the name and description of the job.
	WorkRequestDetails ManagedInstanceGroupManageModuleStreamsManagementWorkRequestDetailsPtrInput
}

func (ManagedInstanceGroupManageModuleStreamsManagementState) ElementType() reflect.Type {
	return reflect.TypeOf((*managedInstanceGroupManageModuleStreamsManagementState)(nil)).Elem()
}

type managedInstanceGroupManageModuleStreamsManagementArgs struct {
	// The set of module streams to disable.
	Disables []ManagedInstanceGroupManageModuleStreamsManagementDisable `pulumi:"disables"`
	// The set of module streams to enable.
	Enables []ManagedInstanceGroupManageModuleStreamsManagementEnable `pulumi:"enables"`
	// The set of module stream profiles to install.
	Installs []ManagedInstanceGroupManageModuleStreamsManagementInstall `pulumi:"installs"`
	// Indicates if this operation is a dry run or if the operation should be committed.  If set to true, the result of the operation will be evaluated but not committed.  If set to false, the operation is committed to the managed instance(s).  The default is false.
	IsDryRun *bool `pulumi:"isDryRun"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
	ManagedInstanceGroupId string `pulumi:"managedInstanceGroupId"`
	// The set of module stream profiles to remove.
	Removes []ManagedInstanceGroupManageModuleStreamsManagementRemove `pulumi:"removes"`
	// Provides the name and description of the job.
	WorkRequestDetails *ManagedInstanceGroupManageModuleStreamsManagementWorkRequestDetails `pulumi:"workRequestDetails"`
}

// The set of arguments for constructing a ManagedInstanceGroupManageModuleStreamsManagement resource.
type ManagedInstanceGroupManageModuleStreamsManagementArgs struct {
	// The set of module streams to disable.
	Disables ManagedInstanceGroupManageModuleStreamsManagementDisableArrayInput
	// The set of module streams to enable.
	Enables ManagedInstanceGroupManageModuleStreamsManagementEnableArrayInput
	// The set of module stream profiles to install.
	Installs ManagedInstanceGroupManageModuleStreamsManagementInstallArrayInput
	// Indicates if this operation is a dry run or if the operation should be committed.  If set to true, the result of the operation will be evaluated but not committed.  If set to false, the operation is committed to the managed instance(s).  The default is false.
	IsDryRun pulumi.BoolPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
	ManagedInstanceGroupId pulumi.StringInput
	// The set of module stream profiles to remove.
	Removes ManagedInstanceGroupManageModuleStreamsManagementRemoveArrayInput
	// Provides the name and description of the job.
	WorkRequestDetails ManagedInstanceGroupManageModuleStreamsManagementWorkRequestDetailsPtrInput
}

func (ManagedInstanceGroupManageModuleStreamsManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managedInstanceGroupManageModuleStreamsManagementArgs)(nil)).Elem()
}

type ManagedInstanceGroupManageModuleStreamsManagementInput interface {
	pulumi.Input

	ToManagedInstanceGroupManageModuleStreamsManagementOutput() ManagedInstanceGroupManageModuleStreamsManagementOutput
	ToManagedInstanceGroupManageModuleStreamsManagementOutputWithContext(ctx context.Context) ManagedInstanceGroupManageModuleStreamsManagementOutput
}

func (*ManagedInstanceGroupManageModuleStreamsManagement) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedInstanceGroupManageModuleStreamsManagement)(nil)).Elem()
}

func (i *ManagedInstanceGroupManageModuleStreamsManagement) ToManagedInstanceGroupManageModuleStreamsManagementOutput() ManagedInstanceGroupManageModuleStreamsManagementOutput {
	return i.ToManagedInstanceGroupManageModuleStreamsManagementOutputWithContext(context.Background())
}

func (i *ManagedInstanceGroupManageModuleStreamsManagement) ToManagedInstanceGroupManageModuleStreamsManagementOutputWithContext(ctx context.Context) ManagedInstanceGroupManageModuleStreamsManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceGroupManageModuleStreamsManagementOutput)
}

// ManagedInstanceGroupManageModuleStreamsManagementArrayInput is an input type that accepts ManagedInstanceGroupManageModuleStreamsManagementArray and ManagedInstanceGroupManageModuleStreamsManagementArrayOutput values.
// You can construct a concrete instance of `ManagedInstanceGroupManageModuleStreamsManagementArrayInput` via:
//
//	ManagedInstanceGroupManageModuleStreamsManagementArray{ ManagedInstanceGroupManageModuleStreamsManagementArgs{...} }
type ManagedInstanceGroupManageModuleStreamsManagementArrayInput interface {
	pulumi.Input

	ToManagedInstanceGroupManageModuleStreamsManagementArrayOutput() ManagedInstanceGroupManageModuleStreamsManagementArrayOutput
	ToManagedInstanceGroupManageModuleStreamsManagementArrayOutputWithContext(context.Context) ManagedInstanceGroupManageModuleStreamsManagementArrayOutput
}

type ManagedInstanceGroupManageModuleStreamsManagementArray []ManagedInstanceGroupManageModuleStreamsManagementInput

func (ManagedInstanceGroupManageModuleStreamsManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedInstanceGroupManageModuleStreamsManagement)(nil)).Elem()
}

func (i ManagedInstanceGroupManageModuleStreamsManagementArray) ToManagedInstanceGroupManageModuleStreamsManagementArrayOutput() ManagedInstanceGroupManageModuleStreamsManagementArrayOutput {
	return i.ToManagedInstanceGroupManageModuleStreamsManagementArrayOutputWithContext(context.Background())
}

func (i ManagedInstanceGroupManageModuleStreamsManagementArray) ToManagedInstanceGroupManageModuleStreamsManagementArrayOutputWithContext(ctx context.Context) ManagedInstanceGroupManageModuleStreamsManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceGroupManageModuleStreamsManagementArrayOutput)
}

// ManagedInstanceGroupManageModuleStreamsManagementMapInput is an input type that accepts ManagedInstanceGroupManageModuleStreamsManagementMap and ManagedInstanceGroupManageModuleStreamsManagementMapOutput values.
// You can construct a concrete instance of `ManagedInstanceGroupManageModuleStreamsManagementMapInput` via:
//
//	ManagedInstanceGroupManageModuleStreamsManagementMap{ "key": ManagedInstanceGroupManageModuleStreamsManagementArgs{...} }
type ManagedInstanceGroupManageModuleStreamsManagementMapInput interface {
	pulumi.Input

	ToManagedInstanceGroupManageModuleStreamsManagementMapOutput() ManagedInstanceGroupManageModuleStreamsManagementMapOutput
	ToManagedInstanceGroupManageModuleStreamsManagementMapOutputWithContext(context.Context) ManagedInstanceGroupManageModuleStreamsManagementMapOutput
}

type ManagedInstanceGroupManageModuleStreamsManagementMap map[string]ManagedInstanceGroupManageModuleStreamsManagementInput

func (ManagedInstanceGroupManageModuleStreamsManagementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedInstanceGroupManageModuleStreamsManagement)(nil)).Elem()
}

func (i ManagedInstanceGroupManageModuleStreamsManagementMap) ToManagedInstanceGroupManageModuleStreamsManagementMapOutput() ManagedInstanceGroupManageModuleStreamsManagementMapOutput {
	return i.ToManagedInstanceGroupManageModuleStreamsManagementMapOutputWithContext(context.Background())
}

func (i ManagedInstanceGroupManageModuleStreamsManagementMap) ToManagedInstanceGroupManageModuleStreamsManagementMapOutputWithContext(ctx context.Context) ManagedInstanceGroupManageModuleStreamsManagementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceGroupManageModuleStreamsManagementMapOutput)
}

type ManagedInstanceGroupManageModuleStreamsManagementOutput struct{ *pulumi.OutputState }

func (ManagedInstanceGroupManageModuleStreamsManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedInstanceGroupManageModuleStreamsManagement)(nil)).Elem()
}

func (o ManagedInstanceGroupManageModuleStreamsManagementOutput) ToManagedInstanceGroupManageModuleStreamsManagementOutput() ManagedInstanceGroupManageModuleStreamsManagementOutput {
	return o
}

func (o ManagedInstanceGroupManageModuleStreamsManagementOutput) ToManagedInstanceGroupManageModuleStreamsManagementOutputWithContext(ctx context.Context) ManagedInstanceGroupManageModuleStreamsManagementOutput {
	return o
}

// The set of module streams to disable.
func (o ManagedInstanceGroupManageModuleStreamsManagementOutput) Disables() ManagedInstanceGroupManageModuleStreamsManagementDisableArrayOutput {
	return o.ApplyT(func(v *ManagedInstanceGroupManageModuleStreamsManagement) ManagedInstanceGroupManageModuleStreamsManagementDisableArrayOutput {
		return v.Disables
	}).(ManagedInstanceGroupManageModuleStreamsManagementDisableArrayOutput)
}

// The set of module streams to enable.
func (o ManagedInstanceGroupManageModuleStreamsManagementOutput) Enables() ManagedInstanceGroupManageModuleStreamsManagementEnableArrayOutput {
	return o.ApplyT(func(v *ManagedInstanceGroupManageModuleStreamsManagement) ManagedInstanceGroupManageModuleStreamsManagementEnableArrayOutput {
		return v.Enables
	}).(ManagedInstanceGroupManageModuleStreamsManagementEnableArrayOutput)
}

// The set of module stream profiles to install.
func (o ManagedInstanceGroupManageModuleStreamsManagementOutput) Installs() ManagedInstanceGroupManageModuleStreamsManagementInstallArrayOutput {
	return o.ApplyT(func(v *ManagedInstanceGroupManageModuleStreamsManagement) ManagedInstanceGroupManageModuleStreamsManagementInstallArrayOutput {
		return v.Installs
	}).(ManagedInstanceGroupManageModuleStreamsManagementInstallArrayOutput)
}

// Indicates if this operation is a dry run or if the operation should be committed.  If set to true, the result of the operation will be evaluated but not committed.  If set to false, the operation is committed to the managed instance(s).  The default is false.
func (o ManagedInstanceGroupManageModuleStreamsManagementOutput) IsDryRun() pulumi.BoolOutput {
	return o.ApplyT(func(v *ManagedInstanceGroupManageModuleStreamsManagement) pulumi.BoolOutput { return v.IsDryRun }).(pulumi.BoolOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
func (o ManagedInstanceGroupManageModuleStreamsManagementOutput) ManagedInstanceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedInstanceGroupManageModuleStreamsManagement) pulumi.StringOutput {
		return v.ManagedInstanceGroupId
	}).(pulumi.StringOutput)
}

// The set of module stream profiles to remove.
func (o ManagedInstanceGroupManageModuleStreamsManagementOutput) Removes() ManagedInstanceGroupManageModuleStreamsManagementRemoveArrayOutput {
	return o.ApplyT(func(v *ManagedInstanceGroupManageModuleStreamsManagement) ManagedInstanceGroupManageModuleStreamsManagementRemoveArrayOutput {
		return v.Removes
	}).(ManagedInstanceGroupManageModuleStreamsManagementRemoveArrayOutput)
}

// Provides the name and description of the job.
func (o ManagedInstanceGroupManageModuleStreamsManagementOutput) WorkRequestDetails() ManagedInstanceGroupManageModuleStreamsManagementWorkRequestDetailsOutput {
	return o.ApplyT(func(v *ManagedInstanceGroupManageModuleStreamsManagement) ManagedInstanceGroupManageModuleStreamsManagementWorkRequestDetailsOutput {
		return v.WorkRequestDetails
	}).(ManagedInstanceGroupManageModuleStreamsManagementWorkRequestDetailsOutput)
}

type ManagedInstanceGroupManageModuleStreamsManagementArrayOutput struct{ *pulumi.OutputState }

func (ManagedInstanceGroupManageModuleStreamsManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedInstanceGroupManageModuleStreamsManagement)(nil)).Elem()
}

func (o ManagedInstanceGroupManageModuleStreamsManagementArrayOutput) ToManagedInstanceGroupManageModuleStreamsManagementArrayOutput() ManagedInstanceGroupManageModuleStreamsManagementArrayOutput {
	return o
}

func (o ManagedInstanceGroupManageModuleStreamsManagementArrayOutput) ToManagedInstanceGroupManageModuleStreamsManagementArrayOutputWithContext(ctx context.Context) ManagedInstanceGroupManageModuleStreamsManagementArrayOutput {
	return o
}

func (o ManagedInstanceGroupManageModuleStreamsManagementArrayOutput) Index(i pulumi.IntInput) ManagedInstanceGroupManageModuleStreamsManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ManagedInstanceGroupManageModuleStreamsManagement {
		return vs[0].([]*ManagedInstanceGroupManageModuleStreamsManagement)[vs[1].(int)]
	}).(ManagedInstanceGroupManageModuleStreamsManagementOutput)
}

type ManagedInstanceGroupManageModuleStreamsManagementMapOutput struct{ *pulumi.OutputState }

func (ManagedInstanceGroupManageModuleStreamsManagementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedInstanceGroupManageModuleStreamsManagement)(nil)).Elem()
}

func (o ManagedInstanceGroupManageModuleStreamsManagementMapOutput) ToManagedInstanceGroupManageModuleStreamsManagementMapOutput() ManagedInstanceGroupManageModuleStreamsManagementMapOutput {
	return o
}

func (o ManagedInstanceGroupManageModuleStreamsManagementMapOutput) ToManagedInstanceGroupManageModuleStreamsManagementMapOutputWithContext(ctx context.Context) ManagedInstanceGroupManageModuleStreamsManagementMapOutput {
	return o
}

func (o ManagedInstanceGroupManageModuleStreamsManagementMapOutput) MapIndex(k pulumi.StringInput) ManagedInstanceGroupManageModuleStreamsManagementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ManagedInstanceGroupManageModuleStreamsManagement {
		return vs[0].(map[string]*ManagedInstanceGroupManageModuleStreamsManagement)[vs[1].(string)]
	}).(ManagedInstanceGroupManageModuleStreamsManagementOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceGroupManageModuleStreamsManagementInput)(nil)).Elem(), &ManagedInstanceGroupManageModuleStreamsManagement{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceGroupManageModuleStreamsManagementArrayInput)(nil)).Elem(), ManagedInstanceGroupManageModuleStreamsManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceGroupManageModuleStreamsManagementMapInput)(nil)).Elem(), ManagedInstanceGroupManageModuleStreamsManagementMap{})
	pulumi.RegisterOutputType(ManagedInstanceGroupManageModuleStreamsManagementOutput{})
	pulumi.RegisterOutputType(ManagedInstanceGroupManageModuleStreamsManagementArrayOutput{})
	pulumi.RegisterOutputType(ManagedInstanceGroupManageModuleStreamsManagementMapOutput{})
}
