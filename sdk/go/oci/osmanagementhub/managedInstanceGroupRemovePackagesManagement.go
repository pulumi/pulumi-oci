// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Managed Instance Group Remove Packages Management resource in Oracle Cloud Infrastructure Os Management Hub service.
//
// Removes the specified packages from each managed instance in a managed instance group.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/OsManagementHub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := OsManagementHub.NewManagedInstanceGroupRemovePackagesManagement(ctx, "test_managed_instance_group_remove_packages_management", &OsManagementHub.ManagedInstanceGroupRemovePackagesManagementArgs{
//				ManagedInstanceGroupId: pulumi.Any(testManagedInstanceGroup.Id),
//				PackageNames:           pulumi.Any(managedInstanceGroupRemovePackagesManagementPackageNames),
//				WorkRequestDetails: &osmanagementhub.ManagedInstanceGroupRemovePackagesManagementWorkRequestDetailsArgs{
//					Description: pulumi.Any(managedInstanceGroupRemovePackagesManagementWorkRequestDetailsDescription),
//					DisplayName: pulumi.Any(managedInstanceGroupRemovePackagesManagementWorkRequestDetailsDisplayName),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ManagedInstanceGroupRemovePackagesManagement can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:OsManagementHub/managedInstanceGroupRemovePackagesManagement:ManagedInstanceGroupRemovePackagesManagement test_managed_instance_group_remove_packages_management "id"
// ```
type ManagedInstanceGroupRemovePackagesManagement struct {
	pulumi.CustomResourceState

	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
	ManagedInstanceGroupId pulumi.StringOutput `pulumi:"managedInstanceGroupId"`
	// The list of package names.
	PackageNames pulumi.StringArrayOutput `pulumi:"packageNames"`
	// Provides the name and description of the job.
	WorkRequestDetails ManagedInstanceGroupRemovePackagesManagementWorkRequestDetailsOutput `pulumi:"workRequestDetails"`
}

// NewManagedInstanceGroupRemovePackagesManagement registers a new resource with the given unique name, arguments, and options.
func NewManagedInstanceGroupRemovePackagesManagement(ctx *pulumi.Context,
	name string, args *ManagedInstanceGroupRemovePackagesManagementArgs, opts ...pulumi.ResourceOption) (*ManagedInstanceGroupRemovePackagesManagement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ManagedInstanceGroupId == nil {
		return nil, errors.New("invalid value for required argument 'ManagedInstanceGroupId'")
	}
	if args.PackageNames == nil {
		return nil, errors.New("invalid value for required argument 'PackageNames'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ManagedInstanceGroupRemovePackagesManagement
	err := ctx.RegisterResource("oci:OsManagementHub/managedInstanceGroupRemovePackagesManagement:ManagedInstanceGroupRemovePackagesManagement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagedInstanceGroupRemovePackagesManagement gets an existing ManagedInstanceGroupRemovePackagesManagement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagedInstanceGroupRemovePackagesManagement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagedInstanceGroupRemovePackagesManagementState, opts ...pulumi.ResourceOption) (*ManagedInstanceGroupRemovePackagesManagement, error) {
	var resource ManagedInstanceGroupRemovePackagesManagement
	err := ctx.ReadResource("oci:OsManagementHub/managedInstanceGroupRemovePackagesManagement:ManagedInstanceGroupRemovePackagesManagement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagedInstanceGroupRemovePackagesManagement resources.
type managedInstanceGroupRemovePackagesManagementState struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
	ManagedInstanceGroupId *string `pulumi:"managedInstanceGroupId"`
	// The list of package names.
	PackageNames []string `pulumi:"packageNames"`
	// Provides the name and description of the job.
	WorkRequestDetails *ManagedInstanceGroupRemovePackagesManagementWorkRequestDetails `pulumi:"workRequestDetails"`
}

type ManagedInstanceGroupRemovePackagesManagementState struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
	ManagedInstanceGroupId pulumi.StringPtrInput
	// The list of package names.
	PackageNames pulumi.StringArrayInput
	// Provides the name and description of the job.
	WorkRequestDetails ManagedInstanceGroupRemovePackagesManagementWorkRequestDetailsPtrInput
}

func (ManagedInstanceGroupRemovePackagesManagementState) ElementType() reflect.Type {
	return reflect.TypeOf((*managedInstanceGroupRemovePackagesManagementState)(nil)).Elem()
}

type managedInstanceGroupRemovePackagesManagementArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
	ManagedInstanceGroupId string `pulumi:"managedInstanceGroupId"`
	// The list of package names.
	PackageNames []string `pulumi:"packageNames"`
	// Provides the name and description of the job.
	WorkRequestDetails *ManagedInstanceGroupRemovePackagesManagementWorkRequestDetails `pulumi:"workRequestDetails"`
}

// The set of arguments for constructing a ManagedInstanceGroupRemovePackagesManagement resource.
type ManagedInstanceGroupRemovePackagesManagementArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
	ManagedInstanceGroupId pulumi.StringInput
	// The list of package names.
	PackageNames pulumi.StringArrayInput
	// Provides the name and description of the job.
	WorkRequestDetails ManagedInstanceGroupRemovePackagesManagementWorkRequestDetailsPtrInput
}

func (ManagedInstanceGroupRemovePackagesManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managedInstanceGroupRemovePackagesManagementArgs)(nil)).Elem()
}

type ManagedInstanceGroupRemovePackagesManagementInput interface {
	pulumi.Input

	ToManagedInstanceGroupRemovePackagesManagementOutput() ManagedInstanceGroupRemovePackagesManagementOutput
	ToManagedInstanceGroupRemovePackagesManagementOutputWithContext(ctx context.Context) ManagedInstanceGroupRemovePackagesManagementOutput
}

func (*ManagedInstanceGroupRemovePackagesManagement) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedInstanceGroupRemovePackagesManagement)(nil)).Elem()
}

func (i *ManagedInstanceGroupRemovePackagesManagement) ToManagedInstanceGroupRemovePackagesManagementOutput() ManagedInstanceGroupRemovePackagesManagementOutput {
	return i.ToManagedInstanceGroupRemovePackagesManagementOutputWithContext(context.Background())
}

func (i *ManagedInstanceGroupRemovePackagesManagement) ToManagedInstanceGroupRemovePackagesManagementOutputWithContext(ctx context.Context) ManagedInstanceGroupRemovePackagesManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceGroupRemovePackagesManagementOutput)
}

// ManagedInstanceGroupRemovePackagesManagementArrayInput is an input type that accepts ManagedInstanceGroupRemovePackagesManagementArray and ManagedInstanceGroupRemovePackagesManagementArrayOutput values.
// You can construct a concrete instance of `ManagedInstanceGroupRemovePackagesManagementArrayInput` via:
//
//	ManagedInstanceGroupRemovePackagesManagementArray{ ManagedInstanceGroupRemovePackagesManagementArgs{...} }
type ManagedInstanceGroupRemovePackagesManagementArrayInput interface {
	pulumi.Input

	ToManagedInstanceGroupRemovePackagesManagementArrayOutput() ManagedInstanceGroupRemovePackagesManagementArrayOutput
	ToManagedInstanceGroupRemovePackagesManagementArrayOutputWithContext(context.Context) ManagedInstanceGroupRemovePackagesManagementArrayOutput
}

type ManagedInstanceGroupRemovePackagesManagementArray []ManagedInstanceGroupRemovePackagesManagementInput

func (ManagedInstanceGroupRemovePackagesManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedInstanceGroupRemovePackagesManagement)(nil)).Elem()
}

func (i ManagedInstanceGroupRemovePackagesManagementArray) ToManagedInstanceGroupRemovePackagesManagementArrayOutput() ManagedInstanceGroupRemovePackagesManagementArrayOutput {
	return i.ToManagedInstanceGroupRemovePackagesManagementArrayOutputWithContext(context.Background())
}

func (i ManagedInstanceGroupRemovePackagesManagementArray) ToManagedInstanceGroupRemovePackagesManagementArrayOutputWithContext(ctx context.Context) ManagedInstanceGroupRemovePackagesManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceGroupRemovePackagesManagementArrayOutput)
}

// ManagedInstanceGroupRemovePackagesManagementMapInput is an input type that accepts ManagedInstanceGroupRemovePackagesManagementMap and ManagedInstanceGroupRemovePackagesManagementMapOutput values.
// You can construct a concrete instance of `ManagedInstanceGroupRemovePackagesManagementMapInput` via:
//
//	ManagedInstanceGroupRemovePackagesManagementMap{ "key": ManagedInstanceGroupRemovePackagesManagementArgs{...} }
type ManagedInstanceGroupRemovePackagesManagementMapInput interface {
	pulumi.Input

	ToManagedInstanceGroupRemovePackagesManagementMapOutput() ManagedInstanceGroupRemovePackagesManagementMapOutput
	ToManagedInstanceGroupRemovePackagesManagementMapOutputWithContext(context.Context) ManagedInstanceGroupRemovePackagesManagementMapOutput
}

type ManagedInstanceGroupRemovePackagesManagementMap map[string]ManagedInstanceGroupRemovePackagesManagementInput

func (ManagedInstanceGroupRemovePackagesManagementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedInstanceGroupRemovePackagesManagement)(nil)).Elem()
}

func (i ManagedInstanceGroupRemovePackagesManagementMap) ToManagedInstanceGroupRemovePackagesManagementMapOutput() ManagedInstanceGroupRemovePackagesManagementMapOutput {
	return i.ToManagedInstanceGroupRemovePackagesManagementMapOutputWithContext(context.Background())
}

func (i ManagedInstanceGroupRemovePackagesManagementMap) ToManagedInstanceGroupRemovePackagesManagementMapOutputWithContext(ctx context.Context) ManagedInstanceGroupRemovePackagesManagementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceGroupRemovePackagesManagementMapOutput)
}

type ManagedInstanceGroupRemovePackagesManagementOutput struct{ *pulumi.OutputState }

func (ManagedInstanceGroupRemovePackagesManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedInstanceGroupRemovePackagesManagement)(nil)).Elem()
}

func (o ManagedInstanceGroupRemovePackagesManagementOutput) ToManagedInstanceGroupRemovePackagesManagementOutput() ManagedInstanceGroupRemovePackagesManagementOutput {
	return o
}

func (o ManagedInstanceGroupRemovePackagesManagementOutput) ToManagedInstanceGroupRemovePackagesManagementOutputWithContext(ctx context.Context) ManagedInstanceGroupRemovePackagesManagementOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
func (o ManagedInstanceGroupRemovePackagesManagementOutput) ManagedInstanceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedInstanceGroupRemovePackagesManagement) pulumi.StringOutput {
		return v.ManagedInstanceGroupId
	}).(pulumi.StringOutput)
}

// The list of package names.
func (o ManagedInstanceGroupRemovePackagesManagementOutput) PackageNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedInstanceGroupRemovePackagesManagement) pulumi.StringArrayOutput { return v.PackageNames }).(pulumi.StringArrayOutput)
}

// Provides the name and description of the job.
func (o ManagedInstanceGroupRemovePackagesManagementOutput) WorkRequestDetails() ManagedInstanceGroupRemovePackagesManagementWorkRequestDetailsOutput {
	return o.ApplyT(func(v *ManagedInstanceGroupRemovePackagesManagement) ManagedInstanceGroupRemovePackagesManagementWorkRequestDetailsOutput {
		return v.WorkRequestDetails
	}).(ManagedInstanceGroupRemovePackagesManagementWorkRequestDetailsOutput)
}

type ManagedInstanceGroupRemovePackagesManagementArrayOutput struct{ *pulumi.OutputState }

func (ManagedInstanceGroupRemovePackagesManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedInstanceGroupRemovePackagesManagement)(nil)).Elem()
}

func (o ManagedInstanceGroupRemovePackagesManagementArrayOutput) ToManagedInstanceGroupRemovePackagesManagementArrayOutput() ManagedInstanceGroupRemovePackagesManagementArrayOutput {
	return o
}

func (o ManagedInstanceGroupRemovePackagesManagementArrayOutput) ToManagedInstanceGroupRemovePackagesManagementArrayOutputWithContext(ctx context.Context) ManagedInstanceGroupRemovePackagesManagementArrayOutput {
	return o
}

func (o ManagedInstanceGroupRemovePackagesManagementArrayOutput) Index(i pulumi.IntInput) ManagedInstanceGroupRemovePackagesManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ManagedInstanceGroupRemovePackagesManagement {
		return vs[0].([]*ManagedInstanceGroupRemovePackagesManagement)[vs[1].(int)]
	}).(ManagedInstanceGroupRemovePackagesManagementOutput)
}

type ManagedInstanceGroupRemovePackagesManagementMapOutput struct{ *pulumi.OutputState }

func (ManagedInstanceGroupRemovePackagesManagementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedInstanceGroupRemovePackagesManagement)(nil)).Elem()
}

func (o ManagedInstanceGroupRemovePackagesManagementMapOutput) ToManagedInstanceGroupRemovePackagesManagementMapOutput() ManagedInstanceGroupRemovePackagesManagementMapOutput {
	return o
}

func (o ManagedInstanceGroupRemovePackagesManagementMapOutput) ToManagedInstanceGroupRemovePackagesManagementMapOutputWithContext(ctx context.Context) ManagedInstanceGroupRemovePackagesManagementMapOutput {
	return o
}

func (o ManagedInstanceGroupRemovePackagesManagementMapOutput) MapIndex(k pulumi.StringInput) ManagedInstanceGroupRemovePackagesManagementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ManagedInstanceGroupRemovePackagesManagement {
		return vs[0].(map[string]*ManagedInstanceGroupRemovePackagesManagement)[vs[1].(string)]
	}).(ManagedInstanceGroupRemovePackagesManagementOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceGroupRemovePackagesManagementInput)(nil)).Elem(), &ManagedInstanceGroupRemovePackagesManagement{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceGroupRemovePackagesManagementArrayInput)(nil)).Elem(), ManagedInstanceGroupRemovePackagesManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceGroupRemovePackagesManagementMapInput)(nil)).Elem(), ManagedInstanceGroupRemovePackagesManagementMap{})
	pulumi.RegisterOutputType(ManagedInstanceGroupRemovePackagesManagementOutput{})
	pulumi.RegisterOutputType(ManagedInstanceGroupRemovePackagesManagementArrayOutput{})
	pulumi.RegisterOutputType(ManagedInstanceGroupRemovePackagesManagementMapOutput{})
}
