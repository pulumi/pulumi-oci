// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Management Station resource in Oracle Cloud Infrastructure Os Management Hub service.
//
// Creates a management station using the proxy and mirror configuration information provided.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/osmanagementhub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := osmanagementhub.NewManagementStation(ctx, "test_management_station", &osmanagementhub.ManagementStationArgs{
//				CompartmentId: pulumi.Any(compartmentId),
//				DisplayName:   pulumi.Any(managementStationDisplayName),
//				Hostname:      pulumi.Any(managementStationHostname),
//				Mirror: &osmanagementhub.ManagementStationMirrorArgs{
//					Directory:          pulumi.Any(managementStationMirrorDirectory),
//					Port:               pulumi.Any(managementStationMirrorPort),
//					Sslport:            pulumi.Any(managementStationMirrorSslport),
//					IsSslverifyEnabled: pulumi.Any(managementStationMirrorIsSslverifyEnabled),
//					Sslcert:            pulumi.Any(managementStationMirrorSslcert),
//				},
//				Proxy: &osmanagementhub.ManagementStationProxyArgs{
//					IsEnabled: pulumi.Any(managementStationProxyIsEnabled),
//					Forward:   pulumi.Any(managementStationProxyForward),
//					Hosts:     pulumi.Any(managementStationProxyHosts),
//					Port:      pulumi.Any(managementStationProxyPort),
//				},
//				DefinedTags: pulumi.StringMap{
//					"Operations.CostCenter": pulumi.String("42"),
//				},
//				Description: pulumi.Any(managementStationDescription),
//				FreeformTags: pulumi.StringMap{
//					"Department": pulumi.String("Finance"),
//				},
//				IsAutoConfigEnabled: pulumi.Any(managementStationIsAutoConfigEnabled),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ManagementStations can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:OsManagementHub/managementStation:ManagementStation test_management_station "id"
// ```
type ManagementStation struct {
	pulumi.CustomResourceState

	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the management station.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) User-specified description of the management station. Avoid entering confidential information.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) User-friendly name for the management station. Does not have to be unique and you can change the name later. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// Overall health information of the management station.
	Healths ManagementStationHealthArrayOutput `pulumi:"healths"`
	// (Updatable) Hostname of the management station.
	Hostname pulumi.StringOutput `pulumi:"hostname"`
	// (Updatable) When enabled, the station setup script automatically runs to configure the firewall and SELinux settings on the station.
	IsAutoConfigEnabled pulumi.BoolOutput `pulumi:"isAutoConfigEnabled"`
	// The location of the instance that is acting as the management station.
	Location pulumi.StringOutput `pulumi:"location"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance that is acting as the management station.
	ManagedInstanceId pulumi.StringOutput `pulumi:"managedInstanceId"`
	// (Updatable) Information used to create the mirror configuration for a management station.
	Mirror ManagementStationMirrorOutput `pulumi:"mirror"`
	// A decimal number representing the amount of mirror capacity used by the sync.
	MirrorCapacity pulumi.IntOutput `pulumi:"mirrorCapacity"`
	// The total number of all packages within the mirrored software sources.
	MirrorPackageCount pulumi.IntOutput `pulumi:"mirrorPackageCount"`
	// The total size of all software source mirrors in bytes.
	MirrorSize pulumi.StringOutput `pulumi:"mirrorSize"`
	// Amount of available mirror storage in bytes.
	MirrorStorageAvailableSize pulumi.StringOutput `pulumi:"mirrorStorageAvailableSize"`
	// Total mirror storage size in bytes.
	MirrorStorageSize pulumi.StringOutput `pulumi:"mirrorStorageSize"`
	// Status summary of the mirror sync.
	MirrorSyncStatuses ManagementStationMirrorSyncStatusArrayOutput `pulumi:"mirrorSyncStatuses"`
	// The total number of unique packages within the mirrored software sources on the station. Each package is counted only once, regardless of how many versions it has.
	MirrorUniquePackageCount pulumi.IntOutput `pulumi:"mirrorUniquePackageCount"`
	// A decimal number representing the progress of the current mirror sync.
	OverallPercentage pulumi.IntOutput `pulumi:"overallPercentage"`
	// Current state of the mirror sync for the management station.
	OverallState pulumi.StringOutput `pulumi:"overallState"`
	// A list of other management stations that are behind the same load balancer within a high availability configuration. Stations are identified as peers if they have the same hostname and compartment.
	PeerManagementStations ManagementStationPeerManagementStationArrayOutput `pulumi:"peerManagementStations"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the registration profile used for the management station.
	ProfileId pulumi.StringOutput `pulumi:"profileId"`
	// (Updatable) Information used to create the proxy configuration for a management station.
	Proxy ManagementStationProxyOutput `pulumi:"proxy"`
	// (Updatable) An optional property when incremented triggers Refresh. Could be set to any integer value.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	RefreshTrigger pulumi.IntPtrOutput `pulumi:"refreshTrigger"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the scheduled job for the mirror sync.
	ScheduledJobId pulumi.StringOutput `pulumi:"scheduledJobId"`
	// The current state of the management station.
	State pulumi.StringOutput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// The number of software sources that the station is mirroring.
	TotalMirrors pulumi.IntOutput `pulumi:"totalMirrors"`
}

// NewManagementStation registers a new resource with the given unique name, arguments, and options.
func NewManagementStation(ctx *pulumi.Context,
	name string, args *ManagementStationArgs, opts ...pulumi.ResourceOption) (*ManagementStation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.Hostname == nil {
		return nil, errors.New("invalid value for required argument 'Hostname'")
	}
	if args.Mirror == nil {
		return nil, errors.New("invalid value for required argument 'Mirror'")
	}
	if args.Proxy == nil {
		return nil, errors.New("invalid value for required argument 'Proxy'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ManagementStation
	err := ctx.RegisterResource("oci:OsManagementHub/managementStation:ManagementStation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagementStation gets an existing ManagementStation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagementStation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagementStationState, opts ...pulumi.ResourceOption) (*ManagementStation, error) {
	var resource ManagementStation
	err := ctx.ReadResource("oci:OsManagementHub/managementStation:ManagementStation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagementStation resources.
type managementStationState struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the management station.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) User-specified description of the management station. Avoid entering confidential information.
	Description *string `pulumi:"description"`
	// (Updatable) User-friendly name for the management station. Does not have to be unique and you can change the name later. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Overall health information of the management station.
	Healths []ManagementStationHealth `pulumi:"healths"`
	// (Updatable) Hostname of the management station.
	Hostname *string `pulumi:"hostname"`
	// (Updatable) When enabled, the station setup script automatically runs to configure the firewall and SELinux settings on the station.
	IsAutoConfigEnabled *bool `pulumi:"isAutoConfigEnabled"`
	// The location of the instance that is acting as the management station.
	Location *string `pulumi:"location"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance that is acting as the management station.
	ManagedInstanceId *string `pulumi:"managedInstanceId"`
	// (Updatable) Information used to create the mirror configuration for a management station.
	Mirror *ManagementStationMirror `pulumi:"mirror"`
	// A decimal number representing the amount of mirror capacity used by the sync.
	MirrorCapacity *int `pulumi:"mirrorCapacity"`
	// The total number of all packages within the mirrored software sources.
	MirrorPackageCount *int `pulumi:"mirrorPackageCount"`
	// The total size of all software source mirrors in bytes.
	MirrorSize *string `pulumi:"mirrorSize"`
	// Amount of available mirror storage in bytes.
	MirrorStorageAvailableSize *string `pulumi:"mirrorStorageAvailableSize"`
	// Total mirror storage size in bytes.
	MirrorStorageSize *string `pulumi:"mirrorStorageSize"`
	// Status summary of the mirror sync.
	MirrorSyncStatuses []ManagementStationMirrorSyncStatus `pulumi:"mirrorSyncStatuses"`
	// The total number of unique packages within the mirrored software sources on the station. Each package is counted only once, regardless of how many versions it has.
	MirrorUniquePackageCount *int `pulumi:"mirrorUniquePackageCount"`
	// A decimal number representing the progress of the current mirror sync.
	OverallPercentage *int `pulumi:"overallPercentage"`
	// Current state of the mirror sync for the management station.
	OverallState *string `pulumi:"overallState"`
	// A list of other management stations that are behind the same load balancer within a high availability configuration. Stations are identified as peers if they have the same hostname and compartment.
	PeerManagementStations []ManagementStationPeerManagementStation `pulumi:"peerManagementStations"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the registration profile used for the management station.
	ProfileId *string `pulumi:"profileId"`
	// (Updatable) Information used to create the proxy configuration for a management station.
	Proxy *ManagementStationProxy `pulumi:"proxy"`
	// (Updatable) An optional property when incremented triggers Refresh. Could be set to any integer value.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	RefreshTrigger *int `pulumi:"refreshTrigger"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the scheduled job for the mirror sync.
	ScheduledJobId *string `pulumi:"scheduledJobId"`
	// The current state of the management station.
	State *string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The number of software sources that the station is mirroring.
	TotalMirrors *int `pulumi:"totalMirrors"`
}

type ManagementStationState struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the management station.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) User-specified description of the management station. Avoid entering confidential information.
	Description pulumi.StringPtrInput
	// (Updatable) User-friendly name for the management station. Does not have to be unique and you can change the name later. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput
	// Overall health information of the management station.
	Healths ManagementStationHealthArrayInput
	// (Updatable) Hostname of the management station.
	Hostname pulumi.StringPtrInput
	// (Updatable) When enabled, the station setup script automatically runs to configure the firewall and SELinux settings on the station.
	IsAutoConfigEnabled pulumi.BoolPtrInput
	// The location of the instance that is acting as the management station.
	Location pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance that is acting as the management station.
	ManagedInstanceId pulumi.StringPtrInput
	// (Updatable) Information used to create the mirror configuration for a management station.
	Mirror ManagementStationMirrorPtrInput
	// A decimal number representing the amount of mirror capacity used by the sync.
	MirrorCapacity pulumi.IntPtrInput
	// The total number of all packages within the mirrored software sources.
	MirrorPackageCount pulumi.IntPtrInput
	// The total size of all software source mirrors in bytes.
	MirrorSize pulumi.StringPtrInput
	// Amount of available mirror storage in bytes.
	MirrorStorageAvailableSize pulumi.StringPtrInput
	// Total mirror storage size in bytes.
	MirrorStorageSize pulumi.StringPtrInput
	// Status summary of the mirror sync.
	MirrorSyncStatuses ManagementStationMirrorSyncStatusArrayInput
	// The total number of unique packages within the mirrored software sources on the station. Each package is counted only once, regardless of how many versions it has.
	MirrorUniquePackageCount pulumi.IntPtrInput
	// A decimal number representing the progress of the current mirror sync.
	OverallPercentage pulumi.IntPtrInput
	// Current state of the mirror sync for the management station.
	OverallState pulumi.StringPtrInput
	// A list of other management stations that are behind the same load balancer within a high availability configuration. Stations are identified as peers if they have the same hostname and compartment.
	PeerManagementStations ManagementStationPeerManagementStationArrayInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the registration profile used for the management station.
	ProfileId pulumi.StringPtrInput
	// (Updatable) Information used to create the proxy configuration for a management station.
	Proxy ManagementStationProxyPtrInput
	// (Updatable) An optional property when incremented triggers Refresh. Could be set to any integer value.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	RefreshTrigger pulumi.IntPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the scheduled job for the mirror sync.
	ScheduledJobId pulumi.StringPtrInput
	// The current state of the management station.
	State pulumi.StringPtrInput
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput
	// The number of software sources that the station is mirroring.
	TotalMirrors pulumi.IntPtrInput
}

func (ManagementStationState) ElementType() reflect.Type {
	return reflect.TypeOf((*managementStationState)(nil)).Elem()
}

type managementStationArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the management station.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) User-specified description of the management station. Avoid entering confidential information.
	Description *string `pulumi:"description"`
	// (Updatable) User-friendly name for the management station. Does not have to be unique and you can change the name later. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// (Updatable) Hostname of the management station.
	Hostname string `pulumi:"hostname"`
	// (Updatable) When enabled, the station setup script automatically runs to configure the firewall and SELinux settings on the station.
	IsAutoConfigEnabled *bool `pulumi:"isAutoConfigEnabled"`
	// (Updatable) Information used to create the mirror configuration for a management station.
	Mirror ManagementStationMirror `pulumi:"mirror"`
	// (Updatable) Information used to create the proxy configuration for a management station.
	Proxy ManagementStationProxy `pulumi:"proxy"`
	// (Updatable) An optional property when incremented triggers Refresh. Could be set to any integer value.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	RefreshTrigger *int `pulumi:"refreshTrigger"`
}

// The set of arguments for constructing a ManagementStation resource.
type ManagementStationArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the management station.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) User-specified description of the management station. Avoid entering confidential information.
	Description pulumi.StringPtrInput
	// (Updatable) User-friendly name for the management station. Does not have to be unique and you can change the name later. Avoid entering confidential information.
	DisplayName pulumi.StringInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput
	// (Updatable) Hostname of the management station.
	Hostname pulumi.StringInput
	// (Updatable) When enabled, the station setup script automatically runs to configure the firewall and SELinux settings on the station.
	IsAutoConfigEnabled pulumi.BoolPtrInput
	// (Updatable) Information used to create the mirror configuration for a management station.
	Mirror ManagementStationMirrorInput
	// (Updatable) Information used to create the proxy configuration for a management station.
	Proxy ManagementStationProxyInput
	// (Updatable) An optional property when incremented triggers Refresh. Could be set to any integer value.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	RefreshTrigger pulumi.IntPtrInput
}

func (ManagementStationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managementStationArgs)(nil)).Elem()
}

type ManagementStationInput interface {
	pulumi.Input

	ToManagementStationOutput() ManagementStationOutput
	ToManagementStationOutputWithContext(ctx context.Context) ManagementStationOutput
}

func (*ManagementStation) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementStation)(nil)).Elem()
}

func (i *ManagementStation) ToManagementStationOutput() ManagementStationOutput {
	return i.ToManagementStationOutputWithContext(context.Background())
}

func (i *ManagementStation) ToManagementStationOutputWithContext(ctx context.Context) ManagementStationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementStationOutput)
}

// ManagementStationArrayInput is an input type that accepts ManagementStationArray and ManagementStationArrayOutput values.
// You can construct a concrete instance of `ManagementStationArrayInput` via:
//
//	ManagementStationArray{ ManagementStationArgs{...} }
type ManagementStationArrayInput interface {
	pulumi.Input

	ToManagementStationArrayOutput() ManagementStationArrayOutput
	ToManagementStationArrayOutputWithContext(context.Context) ManagementStationArrayOutput
}

type ManagementStationArray []ManagementStationInput

func (ManagementStationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagementStation)(nil)).Elem()
}

func (i ManagementStationArray) ToManagementStationArrayOutput() ManagementStationArrayOutput {
	return i.ToManagementStationArrayOutputWithContext(context.Background())
}

func (i ManagementStationArray) ToManagementStationArrayOutputWithContext(ctx context.Context) ManagementStationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementStationArrayOutput)
}

// ManagementStationMapInput is an input type that accepts ManagementStationMap and ManagementStationMapOutput values.
// You can construct a concrete instance of `ManagementStationMapInput` via:
//
//	ManagementStationMap{ "key": ManagementStationArgs{...} }
type ManagementStationMapInput interface {
	pulumi.Input

	ToManagementStationMapOutput() ManagementStationMapOutput
	ToManagementStationMapOutputWithContext(context.Context) ManagementStationMapOutput
}

type ManagementStationMap map[string]ManagementStationInput

func (ManagementStationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagementStation)(nil)).Elem()
}

func (i ManagementStationMap) ToManagementStationMapOutput() ManagementStationMapOutput {
	return i.ToManagementStationMapOutputWithContext(context.Background())
}

func (i ManagementStationMap) ToManagementStationMapOutputWithContext(ctx context.Context) ManagementStationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementStationMapOutput)
}

type ManagementStationOutput struct{ *pulumi.OutputState }

func (ManagementStationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementStation)(nil)).Elem()
}

func (o ManagementStationOutput) ToManagementStationOutput() ManagementStationOutput {
	return o
}

func (o ManagementStationOutput) ToManagementStationOutputWithContext(ctx context.Context) ManagementStationOutput {
	return o
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the management station.
func (o ManagementStationOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagementStation) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o ManagementStationOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ManagementStation) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) User-specified description of the management station. Avoid entering confidential information.
func (o ManagementStationOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagementStation) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) User-friendly name for the management station. Does not have to be unique and you can change the name later. Avoid entering confidential information.
func (o ManagementStationOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagementStation) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o ManagementStationOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ManagementStation) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Overall health information of the management station.
func (o ManagementStationOutput) Healths() ManagementStationHealthArrayOutput {
	return o.ApplyT(func(v *ManagementStation) ManagementStationHealthArrayOutput { return v.Healths }).(ManagementStationHealthArrayOutput)
}

// (Updatable) Hostname of the management station.
func (o ManagementStationOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagementStation) pulumi.StringOutput { return v.Hostname }).(pulumi.StringOutput)
}

// (Updatable) When enabled, the station setup script automatically runs to configure the firewall and SELinux settings on the station.
func (o ManagementStationOutput) IsAutoConfigEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *ManagementStation) pulumi.BoolOutput { return v.IsAutoConfigEnabled }).(pulumi.BoolOutput)
}

// The location of the instance that is acting as the management station.
func (o ManagementStationOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagementStation) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance that is acting as the management station.
func (o ManagementStationOutput) ManagedInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagementStation) pulumi.StringOutput { return v.ManagedInstanceId }).(pulumi.StringOutput)
}

// (Updatable) Information used to create the mirror configuration for a management station.
func (o ManagementStationOutput) Mirror() ManagementStationMirrorOutput {
	return o.ApplyT(func(v *ManagementStation) ManagementStationMirrorOutput { return v.Mirror }).(ManagementStationMirrorOutput)
}

// A decimal number representing the amount of mirror capacity used by the sync.
func (o ManagementStationOutput) MirrorCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v *ManagementStation) pulumi.IntOutput { return v.MirrorCapacity }).(pulumi.IntOutput)
}

// The total number of all packages within the mirrored software sources.
func (o ManagementStationOutput) MirrorPackageCount() pulumi.IntOutput {
	return o.ApplyT(func(v *ManagementStation) pulumi.IntOutput { return v.MirrorPackageCount }).(pulumi.IntOutput)
}

// The total size of all software source mirrors in bytes.
func (o ManagementStationOutput) MirrorSize() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagementStation) pulumi.StringOutput { return v.MirrorSize }).(pulumi.StringOutput)
}

// Amount of available mirror storage in bytes.
func (o ManagementStationOutput) MirrorStorageAvailableSize() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagementStation) pulumi.StringOutput { return v.MirrorStorageAvailableSize }).(pulumi.StringOutput)
}

// Total mirror storage size in bytes.
func (o ManagementStationOutput) MirrorStorageSize() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagementStation) pulumi.StringOutput { return v.MirrorStorageSize }).(pulumi.StringOutput)
}

// Status summary of the mirror sync.
func (o ManagementStationOutput) MirrorSyncStatuses() ManagementStationMirrorSyncStatusArrayOutput {
	return o.ApplyT(func(v *ManagementStation) ManagementStationMirrorSyncStatusArrayOutput { return v.MirrorSyncStatuses }).(ManagementStationMirrorSyncStatusArrayOutput)
}

// The total number of unique packages within the mirrored software sources on the station. Each package is counted only once, regardless of how many versions it has.
func (o ManagementStationOutput) MirrorUniquePackageCount() pulumi.IntOutput {
	return o.ApplyT(func(v *ManagementStation) pulumi.IntOutput { return v.MirrorUniquePackageCount }).(pulumi.IntOutput)
}

// A decimal number representing the progress of the current mirror sync.
func (o ManagementStationOutput) OverallPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v *ManagementStation) pulumi.IntOutput { return v.OverallPercentage }).(pulumi.IntOutput)
}

// Current state of the mirror sync for the management station.
func (o ManagementStationOutput) OverallState() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagementStation) pulumi.StringOutput { return v.OverallState }).(pulumi.StringOutput)
}

// A list of other management stations that are behind the same load balancer within a high availability configuration. Stations are identified as peers if they have the same hostname and compartment.
func (o ManagementStationOutput) PeerManagementStations() ManagementStationPeerManagementStationArrayOutput {
	return o.ApplyT(func(v *ManagementStation) ManagementStationPeerManagementStationArrayOutput {
		return v.PeerManagementStations
	}).(ManagementStationPeerManagementStationArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the registration profile used for the management station.
func (o ManagementStationOutput) ProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagementStation) pulumi.StringOutput { return v.ProfileId }).(pulumi.StringOutput)
}

// (Updatable) Information used to create the proxy configuration for a management station.
func (o ManagementStationOutput) Proxy() ManagementStationProxyOutput {
	return o.ApplyT(func(v *ManagementStation) ManagementStationProxyOutput { return v.Proxy }).(ManagementStationProxyOutput)
}

// (Updatable) An optional property when incremented triggers Refresh. Could be set to any integer value.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ManagementStationOutput) RefreshTrigger() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagementStation) pulumi.IntPtrOutput { return v.RefreshTrigger }).(pulumi.IntPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the scheduled job for the mirror sync.
func (o ManagementStationOutput) ScheduledJobId() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagementStation) pulumi.StringOutput { return v.ScheduledJobId }).(pulumi.StringOutput)
}

// The current state of the management station.
func (o ManagementStationOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagementStation) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o ManagementStationOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ManagementStation) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The number of software sources that the station is mirroring.
func (o ManagementStationOutput) TotalMirrors() pulumi.IntOutput {
	return o.ApplyT(func(v *ManagementStation) pulumi.IntOutput { return v.TotalMirrors }).(pulumi.IntOutput)
}

type ManagementStationArrayOutput struct{ *pulumi.OutputState }

func (ManagementStationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagementStation)(nil)).Elem()
}

func (o ManagementStationArrayOutput) ToManagementStationArrayOutput() ManagementStationArrayOutput {
	return o
}

func (o ManagementStationArrayOutput) ToManagementStationArrayOutputWithContext(ctx context.Context) ManagementStationArrayOutput {
	return o
}

func (o ManagementStationArrayOutput) Index(i pulumi.IntInput) ManagementStationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ManagementStation {
		return vs[0].([]*ManagementStation)[vs[1].(int)]
	}).(ManagementStationOutput)
}

type ManagementStationMapOutput struct{ *pulumi.OutputState }

func (ManagementStationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagementStation)(nil)).Elem()
}

func (o ManagementStationMapOutput) ToManagementStationMapOutput() ManagementStationMapOutput {
	return o
}

func (o ManagementStationMapOutput) ToManagementStationMapOutputWithContext(ctx context.Context) ManagementStationMapOutput {
	return o
}

func (o ManagementStationMapOutput) MapIndex(k pulumi.StringInput) ManagementStationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ManagementStation {
		return vs[0].(map[string]*ManagementStation)[vs[1].(string)]
	}).(ManagementStationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementStationInput)(nil)).Elem(), &ManagementStation{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementStationArrayInput)(nil)).Elem(), ManagementStationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementStationMapInput)(nil)).Elem(), ManagementStationMap{})
	pulumi.RegisterOutputType(ManagementStationOutput{})
	pulumi.RegisterOutputType(ManagementStationArrayOutput{})
	pulumi.RegisterOutputType(ManagementStationMapOutput{})
}
