// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Management Station Mirror Synchronize Management resource in Oracle Cloud Infrastructure Os Management Hub service.
//
// Synchronize the specified software source mirrors on the management station.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/OsManagementHub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := OsManagementHub.NewManagementStationMirrorSynchronizeManagement(ctx, "test_management_station_mirror_synchronize_management", &OsManagementHub.ManagementStationMirrorSynchronizeManagementArgs{
//				ManagementStationId: pulumi.Any(testManagementStation.Id),
//				MirrorId:            pulumi.Any(testMirror.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ManagementStationMirrorSynchronizeManagement can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:OsManagementHub/managementStationMirrorSynchronizeManagement:ManagementStationMirrorSynchronizeManagement test_management_station_mirror_synchronize_management "id"
// ```
type ManagementStationMirrorSynchronizeManagement struct {
	pulumi.CustomResourceState

	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station.
	ManagementStationId pulumi.StringOutput `pulumi:"managementStationId"`
	// Unique Software Source identifier
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	MirrorId pulumi.StringOutput `pulumi:"mirrorId"`
}

// NewManagementStationMirrorSynchronizeManagement registers a new resource with the given unique name, arguments, and options.
func NewManagementStationMirrorSynchronizeManagement(ctx *pulumi.Context,
	name string, args *ManagementStationMirrorSynchronizeManagementArgs, opts ...pulumi.ResourceOption) (*ManagementStationMirrorSynchronizeManagement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ManagementStationId == nil {
		return nil, errors.New("invalid value for required argument 'ManagementStationId'")
	}
	if args.MirrorId == nil {
		return nil, errors.New("invalid value for required argument 'MirrorId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ManagementStationMirrorSynchronizeManagement
	err := ctx.RegisterResource("oci:OsManagementHub/managementStationMirrorSynchronizeManagement:ManagementStationMirrorSynchronizeManagement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagementStationMirrorSynchronizeManagement gets an existing ManagementStationMirrorSynchronizeManagement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagementStationMirrorSynchronizeManagement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagementStationMirrorSynchronizeManagementState, opts ...pulumi.ResourceOption) (*ManagementStationMirrorSynchronizeManagement, error) {
	var resource ManagementStationMirrorSynchronizeManagement
	err := ctx.ReadResource("oci:OsManagementHub/managementStationMirrorSynchronizeManagement:ManagementStationMirrorSynchronizeManagement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagementStationMirrorSynchronizeManagement resources.
type managementStationMirrorSynchronizeManagementState struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station.
	ManagementStationId *string `pulumi:"managementStationId"`
	// Unique Software Source identifier
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	MirrorId *string `pulumi:"mirrorId"`
}

type ManagementStationMirrorSynchronizeManagementState struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station.
	ManagementStationId pulumi.StringPtrInput
	// Unique Software Source identifier
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	MirrorId pulumi.StringPtrInput
}

func (ManagementStationMirrorSynchronizeManagementState) ElementType() reflect.Type {
	return reflect.TypeOf((*managementStationMirrorSynchronizeManagementState)(nil)).Elem()
}

type managementStationMirrorSynchronizeManagementArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station.
	ManagementStationId string `pulumi:"managementStationId"`
	// Unique Software Source identifier
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	MirrorId string `pulumi:"mirrorId"`
}

// The set of arguments for constructing a ManagementStationMirrorSynchronizeManagement resource.
type ManagementStationMirrorSynchronizeManagementArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station.
	ManagementStationId pulumi.StringInput
	// Unique Software Source identifier
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	MirrorId pulumi.StringInput
}

func (ManagementStationMirrorSynchronizeManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managementStationMirrorSynchronizeManagementArgs)(nil)).Elem()
}

type ManagementStationMirrorSynchronizeManagementInput interface {
	pulumi.Input

	ToManagementStationMirrorSynchronizeManagementOutput() ManagementStationMirrorSynchronizeManagementOutput
	ToManagementStationMirrorSynchronizeManagementOutputWithContext(ctx context.Context) ManagementStationMirrorSynchronizeManagementOutput
}

func (*ManagementStationMirrorSynchronizeManagement) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementStationMirrorSynchronizeManagement)(nil)).Elem()
}

func (i *ManagementStationMirrorSynchronizeManagement) ToManagementStationMirrorSynchronizeManagementOutput() ManagementStationMirrorSynchronizeManagementOutput {
	return i.ToManagementStationMirrorSynchronizeManagementOutputWithContext(context.Background())
}

func (i *ManagementStationMirrorSynchronizeManagement) ToManagementStationMirrorSynchronizeManagementOutputWithContext(ctx context.Context) ManagementStationMirrorSynchronizeManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementStationMirrorSynchronizeManagementOutput)
}

// ManagementStationMirrorSynchronizeManagementArrayInput is an input type that accepts ManagementStationMirrorSynchronizeManagementArray and ManagementStationMirrorSynchronizeManagementArrayOutput values.
// You can construct a concrete instance of `ManagementStationMirrorSynchronizeManagementArrayInput` via:
//
//	ManagementStationMirrorSynchronizeManagementArray{ ManagementStationMirrorSynchronizeManagementArgs{...} }
type ManagementStationMirrorSynchronizeManagementArrayInput interface {
	pulumi.Input

	ToManagementStationMirrorSynchronizeManagementArrayOutput() ManagementStationMirrorSynchronizeManagementArrayOutput
	ToManagementStationMirrorSynchronizeManagementArrayOutputWithContext(context.Context) ManagementStationMirrorSynchronizeManagementArrayOutput
}

type ManagementStationMirrorSynchronizeManagementArray []ManagementStationMirrorSynchronizeManagementInput

func (ManagementStationMirrorSynchronizeManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagementStationMirrorSynchronizeManagement)(nil)).Elem()
}

func (i ManagementStationMirrorSynchronizeManagementArray) ToManagementStationMirrorSynchronizeManagementArrayOutput() ManagementStationMirrorSynchronizeManagementArrayOutput {
	return i.ToManagementStationMirrorSynchronizeManagementArrayOutputWithContext(context.Background())
}

func (i ManagementStationMirrorSynchronizeManagementArray) ToManagementStationMirrorSynchronizeManagementArrayOutputWithContext(ctx context.Context) ManagementStationMirrorSynchronizeManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementStationMirrorSynchronizeManagementArrayOutput)
}

// ManagementStationMirrorSynchronizeManagementMapInput is an input type that accepts ManagementStationMirrorSynchronizeManagementMap and ManagementStationMirrorSynchronizeManagementMapOutput values.
// You can construct a concrete instance of `ManagementStationMirrorSynchronizeManagementMapInput` via:
//
//	ManagementStationMirrorSynchronizeManagementMap{ "key": ManagementStationMirrorSynchronizeManagementArgs{...} }
type ManagementStationMirrorSynchronizeManagementMapInput interface {
	pulumi.Input

	ToManagementStationMirrorSynchronizeManagementMapOutput() ManagementStationMirrorSynchronizeManagementMapOutput
	ToManagementStationMirrorSynchronizeManagementMapOutputWithContext(context.Context) ManagementStationMirrorSynchronizeManagementMapOutput
}

type ManagementStationMirrorSynchronizeManagementMap map[string]ManagementStationMirrorSynchronizeManagementInput

func (ManagementStationMirrorSynchronizeManagementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagementStationMirrorSynchronizeManagement)(nil)).Elem()
}

func (i ManagementStationMirrorSynchronizeManagementMap) ToManagementStationMirrorSynchronizeManagementMapOutput() ManagementStationMirrorSynchronizeManagementMapOutput {
	return i.ToManagementStationMirrorSynchronizeManagementMapOutputWithContext(context.Background())
}

func (i ManagementStationMirrorSynchronizeManagementMap) ToManagementStationMirrorSynchronizeManagementMapOutputWithContext(ctx context.Context) ManagementStationMirrorSynchronizeManagementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementStationMirrorSynchronizeManagementMapOutput)
}

type ManagementStationMirrorSynchronizeManagementOutput struct{ *pulumi.OutputState }

func (ManagementStationMirrorSynchronizeManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementStationMirrorSynchronizeManagement)(nil)).Elem()
}

func (o ManagementStationMirrorSynchronizeManagementOutput) ToManagementStationMirrorSynchronizeManagementOutput() ManagementStationMirrorSynchronizeManagementOutput {
	return o
}

func (o ManagementStationMirrorSynchronizeManagementOutput) ToManagementStationMirrorSynchronizeManagementOutputWithContext(ctx context.Context) ManagementStationMirrorSynchronizeManagementOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station.
func (o ManagementStationMirrorSynchronizeManagementOutput) ManagementStationId() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagementStationMirrorSynchronizeManagement) pulumi.StringOutput {
		return v.ManagementStationId
	}).(pulumi.StringOutput)
}

// Unique Software Source identifier
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ManagementStationMirrorSynchronizeManagementOutput) MirrorId() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagementStationMirrorSynchronizeManagement) pulumi.StringOutput { return v.MirrorId }).(pulumi.StringOutput)
}

type ManagementStationMirrorSynchronizeManagementArrayOutput struct{ *pulumi.OutputState }

func (ManagementStationMirrorSynchronizeManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagementStationMirrorSynchronizeManagement)(nil)).Elem()
}

func (o ManagementStationMirrorSynchronizeManagementArrayOutput) ToManagementStationMirrorSynchronizeManagementArrayOutput() ManagementStationMirrorSynchronizeManagementArrayOutput {
	return o
}

func (o ManagementStationMirrorSynchronizeManagementArrayOutput) ToManagementStationMirrorSynchronizeManagementArrayOutputWithContext(ctx context.Context) ManagementStationMirrorSynchronizeManagementArrayOutput {
	return o
}

func (o ManagementStationMirrorSynchronizeManagementArrayOutput) Index(i pulumi.IntInput) ManagementStationMirrorSynchronizeManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ManagementStationMirrorSynchronizeManagement {
		return vs[0].([]*ManagementStationMirrorSynchronizeManagement)[vs[1].(int)]
	}).(ManagementStationMirrorSynchronizeManagementOutput)
}

type ManagementStationMirrorSynchronizeManagementMapOutput struct{ *pulumi.OutputState }

func (ManagementStationMirrorSynchronizeManagementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagementStationMirrorSynchronizeManagement)(nil)).Elem()
}

func (o ManagementStationMirrorSynchronizeManagementMapOutput) ToManagementStationMirrorSynchronizeManagementMapOutput() ManagementStationMirrorSynchronizeManagementMapOutput {
	return o
}

func (o ManagementStationMirrorSynchronizeManagementMapOutput) ToManagementStationMirrorSynchronizeManagementMapOutputWithContext(ctx context.Context) ManagementStationMirrorSynchronizeManagementMapOutput {
	return o
}

func (o ManagementStationMirrorSynchronizeManagementMapOutput) MapIndex(k pulumi.StringInput) ManagementStationMirrorSynchronizeManagementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ManagementStationMirrorSynchronizeManagement {
		return vs[0].(map[string]*ManagementStationMirrorSynchronizeManagement)[vs[1].(string)]
	}).(ManagementStationMirrorSynchronizeManagementOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementStationMirrorSynchronizeManagementInput)(nil)).Elem(), &ManagementStationMirrorSynchronizeManagement{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementStationMirrorSynchronizeManagementArrayInput)(nil)).Elem(), ManagementStationMirrorSynchronizeManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementStationMirrorSynchronizeManagementMapInput)(nil)).Elem(), ManagementStationMirrorSynchronizeManagementMap{})
	pulumi.RegisterOutputType(ManagementStationMirrorSynchronizeManagementOutput{})
	pulumi.RegisterOutputType(ManagementStationMirrorSynchronizeManagementArrayOutput{})
	pulumi.RegisterOutputType(ManagementStationMirrorSynchronizeManagementMapOutput{})
}
