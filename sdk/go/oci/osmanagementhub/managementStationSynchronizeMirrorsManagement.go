// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Management Station Synchronize Mirrors Management resource in Oracle Cloud Infrastructure Os Management Hub service.
//
// Synchronize the specified software sources mirrors on the management station.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/OsManagementHub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := OsManagementHub.NewManagementStationSynchronizeMirrorsManagement(ctx, "test_management_station_synchronize_mirrors_management", &OsManagementHub.ManagementStationSynchronizeMirrorsManagementArgs{
//				ManagementStationId: pulumi.Any(testManagementStation.Id),
//				SoftwareSourceLists: pulumi.Any(managementStationSynchronizeMirrorsManagementSoftwareSourceList),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ManagementStationSynchronizeMirrorsManagement can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:OsManagementHub/managementStationSynchronizeMirrorsManagement:ManagementStationSynchronizeMirrorsManagement test_management_station_synchronize_mirrors_management "id"
// ```
type ManagementStationSynchronizeMirrorsManagement struct {
	pulumi.CustomResourceState

	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station.
	ManagementStationId pulumi.StringOutput `pulumi:"managementStationId"`
	// List of Software Source OCIDs to synchronize
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SoftwareSourceLists pulumi.StringArrayOutput `pulumi:"softwareSourceLists"`
}

// NewManagementStationSynchronizeMirrorsManagement registers a new resource with the given unique name, arguments, and options.
func NewManagementStationSynchronizeMirrorsManagement(ctx *pulumi.Context,
	name string, args *ManagementStationSynchronizeMirrorsManagementArgs, opts ...pulumi.ResourceOption) (*ManagementStationSynchronizeMirrorsManagement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ManagementStationId == nil {
		return nil, errors.New("invalid value for required argument 'ManagementStationId'")
	}
	if args.SoftwareSourceLists == nil {
		return nil, errors.New("invalid value for required argument 'SoftwareSourceLists'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ManagementStationSynchronizeMirrorsManagement
	err := ctx.RegisterResource("oci:OsManagementHub/managementStationSynchronizeMirrorsManagement:ManagementStationSynchronizeMirrorsManagement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagementStationSynchronizeMirrorsManagement gets an existing ManagementStationSynchronizeMirrorsManagement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagementStationSynchronizeMirrorsManagement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagementStationSynchronizeMirrorsManagementState, opts ...pulumi.ResourceOption) (*ManagementStationSynchronizeMirrorsManagement, error) {
	var resource ManagementStationSynchronizeMirrorsManagement
	err := ctx.ReadResource("oci:OsManagementHub/managementStationSynchronizeMirrorsManagement:ManagementStationSynchronizeMirrorsManagement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagementStationSynchronizeMirrorsManagement resources.
type managementStationSynchronizeMirrorsManagementState struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station.
	ManagementStationId *string `pulumi:"managementStationId"`
	// List of Software Source OCIDs to synchronize
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SoftwareSourceLists []string `pulumi:"softwareSourceLists"`
}

type ManagementStationSynchronizeMirrorsManagementState struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station.
	ManagementStationId pulumi.StringPtrInput
	// List of Software Source OCIDs to synchronize
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SoftwareSourceLists pulumi.StringArrayInput
}

func (ManagementStationSynchronizeMirrorsManagementState) ElementType() reflect.Type {
	return reflect.TypeOf((*managementStationSynchronizeMirrorsManagementState)(nil)).Elem()
}

type managementStationSynchronizeMirrorsManagementArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station.
	ManagementStationId string `pulumi:"managementStationId"`
	// List of Software Source OCIDs to synchronize
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SoftwareSourceLists []string `pulumi:"softwareSourceLists"`
}

// The set of arguments for constructing a ManagementStationSynchronizeMirrorsManagement resource.
type ManagementStationSynchronizeMirrorsManagementArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station.
	ManagementStationId pulumi.StringInput
	// List of Software Source OCIDs to synchronize
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SoftwareSourceLists pulumi.StringArrayInput
}

func (ManagementStationSynchronizeMirrorsManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managementStationSynchronizeMirrorsManagementArgs)(nil)).Elem()
}

type ManagementStationSynchronizeMirrorsManagementInput interface {
	pulumi.Input

	ToManagementStationSynchronizeMirrorsManagementOutput() ManagementStationSynchronizeMirrorsManagementOutput
	ToManagementStationSynchronizeMirrorsManagementOutputWithContext(ctx context.Context) ManagementStationSynchronizeMirrorsManagementOutput
}

func (*ManagementStationSynchronizeMirrorsManagement) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementStationSynchronizeMirrorsManagement)(nil)).Elem()
}

func (i *ManagementStationSynchronizeMirrorsManagement) ToManagementStationSynchronizeMirrorsManagementOutput() ManagementStationSynchronizeMirrorsManagementOutput {
	return i.ToManagementStationSynchronizeMirrorsManagementOutputWithContext(context.Background())
}

func (i *ManagementStationSynchronizeMirrorsManagement) ToManagementStationSynchronizeMirrorsManagementOutputWithContext(ctx context.Context) ManagementStationSynchronizeMirrorsManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementStationSynchronizeMirrorsManagementOutput)
}

// ManagementStationSynchronizeMirrorsManagementArrayInput is an input type that accepts ManagementStationSynchronizeMirrorsManagementArray and ManagementStationSynchronizeMirrorsManagementArrayOutput values.
// You can construct a concrete instance of `ManagementStationSynchronizeMirrorsManagementArrayInput` via:
//
//	ManagementStationSynchronizeMirrorsManagementArray{ ManagementStationSynchronizeMirrorsManagementArgs{...} }
type ManagementStationSynchronizeMirrorsManagementArrayInput interface {
	pulumi.Input

	ToManagementStationSynchronizeMirrorsManagementArrayOutput() ManagementStationSynchronizeMirrorsManagementArrayOutput
	ToManagementStationSynchronizeMirrorsManagementArrayOutputWithContext(context.Context) ManagementStationSynchronizeMirrorsManagementArrayOutput
}

type ManagementStationSynchronizeMirrorsManagementArray []ManagementStationSynchronizeMirrorsManagementInput

func (ManagementStationSynchronizeMirrorsManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagementStationSynchronizeMirrorsManagement)(nil)).Elem()
}

func (i ManagementStationSynchronizeMirrorsManagementArray) ToManagementStationSynchronizeMirrorsManagementArrayOutput() ManagementStationSynchronizeMirrorsManagementArrayOutput {
	return i.ToManagementStationSynchronizeMirrorsManagementArrayOutputWithContext(context.Background())
}

func (i ManagementStationSynchronizeMirrorsManagementArray) ToManagementStationSynchronizeMirrorsManagementArrayOutputWithContext(ctx context.Context) ManagementStationSynchronizeMirrorsManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementStationSynchronizeMirrorsManagementArrayOutput)
}

// ManagementStationSynchronizeMirrorsManagementMapInput is an input type that accepts ManagementStationSynchronizeMirrorsManagementMap and ManagementStationSynchronizeMirrorsManagementMapOutput values.
// You can construct a concrete instance of `ManagementStationSynchronizeMirrorsManagementMapInput` via:
//
//	ManagementStationSynchronizeMirrorsManagementMap{ "key": ManagementStationSynchronizeMirrorsManagementArgs{...} }
type ManagementStationSynchronizeMirrorsManagementMapInput interface {
	pulumi.Input

	ToManagementStationSynchronizeMirrorsManagementMapOutput() ManagementStationSynchronizeMirrorsManagementMapOutput
	ToManagementStationSynchronizeMirrorsManagementMapOutputWithContext(context.Context) ManagementStationSynchronizeMirrorsManagementMapOutput
}

type ManagementStationSynchronizeMirrorsManagementMap map[string]ManagementStationSynchronizeMirrorsManagementInput

func (ManagementStationSynchronizeMirrorsManagementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagementStationSynchronizeMirrorsManagement)(nil)).Elem()
}

func (i ManagementStationSynchronizeMirrorsManagementMap) ToManagementStationSynchronizeMirrorsManagementMapOutput() ManagementStationSynchronizeMirrorsManagementMapOutput {
	return i.ToManagementStationSynchronizeMirrorsManagementMapOutputWithContext(context.Background())
}

func (i ManagementStationSynchronizeMirrorsManagementMap) ToManagementStationSynchronizeMirrorsManagementMapOutputWithContext(ctx context.Context) ManagementStationSynchronizeMirrorsManagementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementStationSynchronizeMirrorsManagementMapOutput)
}

type ManagementStationSynchronizeMirrorsManagementOutput struct{ *pulumi.OutputState }

func (ManagementStationSynchronizeMirrorsManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementStationSynchronizeMirrorsManagement)(nil)).Elem()
}

func (o ManagementStationSynchronizeMirrorsManagementOutput) ToManagementStationSynchronizeMirrorsManagementOutput() ManagementStationSynchronizeMirrorsManagementOutput {
	return o
}

func (o ManagementStationSynchronizeMirrorsManagementOutput) ToManagementStationSynchronizeMirrorsManagementOutputWithContext(ctx context.Context) ManagementStationSynchronizeMirrorsManagementOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station.
func (o ManagementStationSynchronizeMirrorsManagementOutput) ManagementStationId() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagementStationSynchronizeMirrorsManagement) pulumi.StringOutput {
		return v.ManagementStationId
	}).(pulumi.StringOutput)
}

// List of Software Source OCIDs to synchronize
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ManagementStationSynchronizeMirrorsManagementOutput) SoftwareSourceLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagementStationSynchronizeMirrorsManagement) pulumi.StringArrayOutput {
		return v.SoftwareSourceLists
	}).(pulumi.StringArrayOutput)
}

type ManagementStationSynchronizeMirrorsManagementArrayOutput struct{ *pulumi.OutputState }

func (ManagementStationSynchronizeMirrorsManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagementStationSynchronizeMirrorsManagement)(nil)).Elem()
}

func (o ManagementStationSynchronizeMirrorsManagementArrayOutput) ToManagementStationSynchronizeMirrorsManagementArrayOutput() ManagementStationSynchronizeMirrorsManagementArrayOutput {
	return o
}

func (o ManagementStationSynchronizeMirrorsManagementArrayOutput) ToManagementStationSynchronizeMirrorsManagementArrayOutputWithContext(ctx context.Context) ManagementStationSynchronizeMirrorsManagementArrayOutput {
	return o
}

func (o ManagementStationSynchronizeMirrorsManagementArrayOutput) Index(i pulumi.IntInput) ManagementStationSynchronizeMirrorsManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ManagementStationSynchronizeMirrorsManagement {
		return vs[0].([]*ManagementStationSynchronizeMirrorsManagement)[vs[1].(int)]
	}).(ManagementStationSynchronizeMirrorsManagementOutput)
}

type ManagementStationSynchronizeMirrorsManagementMapOutput struct{ *pulumi.OutputState }

func (ManagementStationSynchronizeMirrorsManagementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagementStationSynchronizeMirrorsManagement)(nil)).Elem()
}

func (o ManagementStationSynchronizeMirrorsManagementMapOutput) ToManagementStationSynchronizeMirrorsManagementMapOutput() ManagementStationSynchronizeMirrorsManagementMapOutput {
	return o
}

func (o ManagementStationSynchronizeMirrorsManagementMapOutput) ToManagementStationSynchronizeMirrorsManagementMapOutputWithContext(ctx context.Context) ManagementStationSynchronizeMirrorsManagementMapOutput {
	return o
}

func (o ManagementStationSynchronizeMirrorsManagementMapOutput) MapIndex(k pulumi.StringInput) ManagementStationSynchronizeMirrorsManagementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ManagementStationSynchronizeMirrorsManagement {
		return vs[0].(map[string]*ManagementStationSynchronizeMirrorsManagement)[vs[1].(string)]
	}).(ManagementStationSynchronizeMirrorsManagementOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementStationSynchronizeMirrorsManagementInput)(nil)).Elem(), &ManagementStationSynchronizeMirrorsManagement{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementStationSynchronizeMirrorsManagementArrayInput)(nil)).Elem(), ManagementStationSynchronizeMirrorsManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementStationSynchronizeMirrorsManagementMapInput)(nil)).Elem(), ManagementStationSynchronizeMirrorsManagementMap{})
	pulumi.RegisterOutputType(ManagementStationSynchronizeMirrorsManagementOutput{})
	pulumi.RegisterOutputType(ManagementStationSynchronizeMirrorsManagementArrayOutput{})
	pulumi.RegisterOutputType(ManagementStationSynchronizeMirrorsManagementMapOutput{})
}
