// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Profile Attach Software Sources Management resource in Oracle Cloud Infrastructure Os Management Hub service.
//
// Attaches the specified software sources to a profile.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/osmanagementhub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := osmanagementhub.NewProfileAttachSoftwareSourcesManagement(ctx, "test_profile_attach_software_sources_management", &osmanagementhub.ProfileAttachSoftwareSourcesManagementArgs{
//				ProfileId:       pulumi.Any(testProfile.Id),
//				SoftwareSources: pulumi.Any(profileAttachSoftwareSourcesManagementSoftwareSources),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ProfileAttachSoftwareSourcesManagement can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:OsManagementHub/profileAttachSoftwareSourcesManagement:ProfileAttachSoftwareSourcesManagement test_profile_attach_software_sources_management "id"
// ```
type ProfileAttachSoftwareSourcesManagement struct {
	pulumi.CustomResourceState

	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the registration profile.
	ProfileId pulumi.StringOutput `pulumi:"profileId"`
	// List of software source [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to attach to the profile.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SoftwareSources pulumi.StringArrayOutput `pulumi:"softwareSources"`
}

// NewProfileAttachSoftwareSourcesManagement registers a new resource with the given unique name, arguments, and options.
func NewProfileAttachSoftwareSourcesManagement(ctx *pulumi.Context,
	name string, args *ProfileAttachSoftwareSourcesManagementArgs, opts ...pulumi.ResourceOption) (*ProfileAttachSoftwareSourcesManagement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProfileId == nil {
		return nil, errors.New("invalid value for required argument 'ProfileId'")
	}
	if args.SoftwareSources == nil {
		return nil, errors.New("invalid value for required argument 'SoftwareSources'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ProfileAttachSoftwareSourcesManagement
	err := ctx.RegisterResource("oci:OsManagementHub/profileAttachSoftwareSourcesManagement:ProfileAttachSoftwareSourcesManagement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProfileAttachSoftwareSourcesManagement gets an existing ProfileAttachSoftwareSourcesManagement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProfileAttachSoftwareSourcesManagement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProfileAttachSoftwareSourcesManagementState, opts ...pulumi.ResourceOption) (*ProfileAttachSoftwareSourcesManagement, error) {
	var resource ProfileAttachSoftwareSourcesManagement
	err := ctx.ReadResource("oci:OsManagementHub/profileAttachSoftwareSourcesManagement:ProfileAttachSoftwareSourcesManagement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProfileAttachSoftwareSourcesManagement resources.
type profileAttachSoftwareSourcesManagementState struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the registration profile.
	ProfileId *string `pulumi:"profileId"`
	// List of software source [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to attach to the profile.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SoftwareSources []string `pulumi:"softwareSources"`
}

type ProfileAttachSoftwareSourcesManagementState struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the registration profile.
	ProfileId pulumi.StringPtrInput
	// List of software source [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to attach to the profile.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SoftwareSources pulumi.StringArrayInput
}

func (ProfileAttachSoftwareSourcesManagementState) ElementType() reflect.Type {
	return reflect.TypeOf((*profileAttachSoftwareSourcesManagementState)(nil)).Elem()
}

type profileAttachSoftwareSourcesManagementArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the registration profile.
	ProfileId string `pulumi:"profileId"`
	// List of software source [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to attach to the profile.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SoftwareSources []string `pulumi:"softwareSources"`
}

// The set of arguments for constructing a ProfileAttachSoftwareSourcesManagement resource.
type ProfileAttachSoftwareSourcesManagementArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the registration profile.
	ProfileId pulumi.StringInput
	// List of software source [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to attach to the profile.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SoftwareSources pulumi.StringArrayInput
}

func (ProfileAttachSoftwareSourcesManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*profileAttachSoftwareSourcesManagementArgs)(nil)).Elem()
}

type ProfileAttachSoftwareSourcesManagementInput interface {
	pulumi.Input

	ToProfileAttachSoftwareSourcesManagementOutput() ProfileAttachSoftwareSourcesManagementOutput
	ToProfileAttachSoftwareSourcesManagementOutputWithContext(ctx context.Context) ProfileAttachSoftwareSourcesManagementOutput
}

func (*ProfileAttachSoftwareSourcesManagement) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileAttachSoftwareSourcesManagement)(nil)).Elem()
}

func (i *ProfileAttachSoftwareSourcesManagement) ToProfileAttachSoftwareSourcesManagementOutput() ProfileAttachSoftwareSourcesManagementOutput {
	return i.ToProfileAttachSoftwareSourcesManagementOutputWithContext(context.Background())
}

func (i *ProfileAttachSoftwareSourcesManagement) ToProfileAttachSoftwareSourcesManagementOutputWithContext(ctx context.Context) ProfileAttachSoftwareSourcesManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileAttachSoftwareSourcesManagementOutput)
}

// ProfileAttachSoftwareSourcesManagementArrayInput is an input type that accepts ProfileAttachSoftwareSourcesManagementArray and ProfileAttachSoftwareSourcesManagementArrayOutput values.
// You can construct a concrete instance of `ProfileAttachSoftwareSourcesManagementArrayInput` via:
//
//	ProfileAttachSoftwareSourcesManagementArray{ ProfileAttachSoftwareSourcesManagementArgs{...} }
type ProfileAttachSoftwareSourcesManagementArrayInput interface {
	pulumi.Input

	ToProfileAttachSoftwareSourcesManagementArrayOutput() ProfileAttachSoftwareSourcesManagementArrayOutput
	ToProfileAttachSoftwareSourcesManagementArrayOutputWithContext(context.Context) ProfileAttachSoftwareSourcesManagementArrayOutput
}

type ProfileAttachSoftwareSourcesManagementArray []ProfileAttachSoftwareSourcesManagementInput

func (ProfileAttachSoftwareSourcesManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProfileAttachSoftwareSourcesManagement)(nil)).Elem()
}

func (i ProfileAttachSoftwareSourcesManagementArray) ToProfileAttachSoftwareSourcesManagementArrayOutput() ProfileAttachSoftwareSourcesManagementArrayOutput {
	return i.ToProfileAttachSoftwareSourcesManagementArrayOutputWithContext(context.Background())
}

func (i ProfileAttachSoftwareSourcesManagementArray) ToProfileAttachSoftwareSourcesManagementArrayOutputWithContext(ctx context.Context) ProfileAttachSoftwareSourcesManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileAttachSoftwareSourcesManagementArrayOutput)
}

// ProfileAttachSoftwareSourcesManagementMapInput is an input type that accepts ProfileAttachSoftwareSourcesManagementMap and ProfileAttachSoftwareSourcesManagementMapOutput values.
// You can construct a concrete instance of `ProfileAttachSoftwareSourcesManagementMapInput` via:
//
//	ProfileAttachSoftwareSourcesManagementMap{ "key": ProfileAttachSoftwareSourcesManagementArgs{...} }
type ProfileAttachSoftwareSourcesManagementMapInput interface {
	pulumi.Input

	ToProfileAttachSoftwareSourcesManagementMapOutput() ProfileAttachSoftwareSourcesManagementMapOutput
	ToProfileAttachSoftwareSourcesManagementMapOutputWithContext(context.Context) ProfileAttachSoftwareSourcesManagementMapOutput
}

type ProfileAttachSoftwareSourcesManagementMap map[string]ProfileAttachSoftwareSourcesManagementInput

func (ProfileAttachSoftwareSourcesManagementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProfileAttachSoftwareSourcesManagement)(nil)).Elem()
}

func (i ProfileAttachSoftwareSourcesManagementMap) ToProfileAttachSoftwareSourcesManagementMapOutput() ProfileAttachSoftwareSourcesManagementMapOutput {
	return i.ToProfileAttachSoftwareSourcesManagementMapOutputWithContext(context.Background())
}

func (i ProfileAttachSoftwareSourcesManagementMap) ToProfileAttachSoftwareSourcesManagementMapOutputWithContext(ctx context.Context) ProfileAttachSoftwareSourcesManagementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileAttachSoftwareSourcesManagementMapOutput)
}

type ProfileAttachSoftwareSourcesManagementOutput struct{ *pulumi.OutputState }

func (ProfileAttachSoftwareSourcesManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileAttachSoftwareSourcesManagement)(nil)).Elem()
}

func (o ProfileAttachSoftwareSourcesManagementOutput) ToProfileAttachSoftwareSourcesManagementOutput() ProfileAttachSoftwareSourcesManagementOutput {
	return o
}

func (o ProfileAttachSoftwareSourcesManagementOutput) ToProfileAttachSoftwareSourcesManagementOutputWithContext(ctx context.Context) ProfileAttachSoftwareSourcesManagementOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the registration profile.
func (o ProfileAttachSoftwareSourcesManagementOutput) ProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *ProfileAttachSoftwareSourcesManagement) pulumi.StringOutput { return v.ProfileId }).(pulumi.StringOutput)
}

// List of software source [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to attach to the profile.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ProfileAttachSoftwareSourcesManagementOutput) SoftwareSources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProfileAttachSoftwareSourcesManagement) pulumi.StringArrayOutput { return v.SoftwareSources }).(pulumi.StringArrayOutput)
}

type ProfileAttachSoftwareSourcesManagementArrayOutput struct{ *pulumi.OutputState }

func (ProfileAttachSoftwareSourcesManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProfileAttachSoftwareSourcesManagement)(nil)).Elem()
}

func (o ProfileAttachSoftwareSourcesManagementArrayOutput) ToProfileAttachSoftwareSourcesManagementArrayOutput() ProfileAttachSoftwareSourcesManagementArrayOutput {
	return o
}

func (o ProfileAttachSoftwareSourcesManagementArrayOutput) ToProfileAttachSoftwareSourcesManagementArrayOutputWithContext(ctx context.Context) ProfileAttachSoftwareSourcesManagementArrayOutput {
	return o
}

func (o ProfileAttachSoftwareSourcesManagementArrayOutput) Index(i pulumi.IntInput) ProfileAttachSoftwareSourcesManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ProfileAttachSoftwareSourcesManagement {
		return vs[0].([]*ProfileAttachSoftwareSourcesManagement)[vs[1].(int)]
	}).(ProfileAttachSoftwareSourcesManagementOutput)
}

type ProfileAttachSoftwareSourcesManagementMapOutput struct{ *pulumi.OutputState }

func (ProfileAttachSoftwareSourcesManagementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProfileAttachSoftwareSourcesManagement)(nil)).Elem()
}

func (o ProfileAttachSoftwareSourcesManagementMapOutput) ToProfileAttachSoftwareSourcesManagementMapOutput() ProfileAttachSoftwareSourcesManagementMapOutput {
	return o
}

func (o ProfileAttachSoftwareSourcesManagementMapOutput) ToProfileAttachSoftwareSourcesManagementMapOutputWithContext(ctx context.Context) ProfileAttachSoftwareSourcesManagementMapOutput {
	return o
}

func (o ProfileAttachSoftwareSourcesManagementMapOutput) MapIndex(k pulumi.StringInput) ProfileAttachSoftwareSourcesManagementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ProfileAttachSoftwareSourcesManagement {
		return vs[0].(map[string]*ProfileAttachSoftwareSourcesManagement)[vs[1].(string)]
	}).(ProfileAttachSoftwareSourcesManagementOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileAttachSoftwareSourcesManagementInput)(nil)).Elem(), &ProfileAttachSoftwareSourcesManagement{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileAttachSoftwareSourcesManagementArrayInput)(nil)).Elem(), ProfileAttachSoftwareSourcesManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileAttachSoftwareSourcesManagementMapInput)(nil)).Elem(), ProfileAttachSoftwareSourcesManagementMap{})
	pulumi.RegisterOutputType(ProfileAttachSoftwareSourcesManagementOutput{})
	pulumi.RegisterOutputType(ProfileAttachSoftwareSourcesManagementArrayOutput{})
	pulumi.RegisterOutputType(ProfileAttachSoftwareSourcesManagementMapOutput{})
}
